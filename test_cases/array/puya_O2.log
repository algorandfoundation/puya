debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), paths=['array'], output_awst=False, output_awst_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.quicksort_window
debug: Sealing block@0
debug: Terminated block@0
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let left#1: uint64 = undefined while trying to resolve 'left' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let pivot#1: uint64 = undefined while trying to resolve 'pivot' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@3
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let left#3: uint64 = undefined while trying to resolve 'left' in block@1
debug: Added left#3 to Phi node: let left#1: uint64 = φ(left#3 <- block@2) in block@2
debug: Added left#2 to Phi node: let left#1: uint64 = φ(left#3 <- block@2, left#2 <- block@4) in block@4
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2 in current definition for 2 blocks
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let pivot#2: uint64 = undefined while trying to resolve 'pivot' in block@1
debug: Added pivot#2 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2) in block@2
debug: Added pivot#1 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2
debug: Deleting Phi assignment: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4)
debug: Replaced trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let pivot#3: uint64 = undefined while trying to resolve 'pivot' in block@6
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let right#1: uint64 = undefined while trying to resolve 'right' in block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@6
debug: Added pivot#2 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5) in block@5
debug: Added pivot#3 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2
debug: Deleting Phi assignment: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9)
debug: Replaced trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2 in current definition for 3 blocks
debug: Created Phi assignment: let right#3: uint64 = undefined while trying to resolve 'right' in block@3
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let right#4: uint64 = undefined while trying to resolve 'right' in block@1
debug: Added right#4 to Phi node: let right#3: uint64 = φ(right#4 <- block@2) in block@2
debug: Added right#3 to Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4
debug: Deleting Phi assignment: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4)
debug: Replaced trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4 in current definition for 2 blocks
debug: Added right#4 to Phi node: let right#1: uint64 = φ(right#4 <- block@5) in block@5
debug: Added right#2 to Phi node: let right#1: uint64 = φ(right#4 <- block@5, right#2 <- block@9) in block@9
debug: Added arr#2 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5) in block@5
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2 in current definition for 3 blocks
debug: Sealing block@10
debug: Created Phi assignment: let left#4: uint64 = undefined while trying to resolve 'left' in block@6
debug: Added left#1 to Phi node: let left#4: uint64 = φ(left#1 <- block@5) in block@5
debug: Added left#4 to Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1
debug: Deleting Phi assignment: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9)
debug: Replaced trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1 in current definition for 3 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Terminated block@21
debug: Sealing block@1
debug: Added left#0 to Phi node: let left#3: uint64 = φ(left#0 <- block@0) in block@0
debug: Added left#5 to Phi node: let left#3: uint64 = φ(left#0 <- block@0, left#5 <- block@14) in block@14
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@0, arr#2 <- block@14) (arr#2) with arr#0 in current definition for 12 blocks
debug: Added pivot#0 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0) in block@0
debug: Added pivot#2 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0
debug: Deleting Phi assignment: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14)
debug: Replaced trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0 in current definition for 12 blocks
debug: Added right#0 to Phi node: let right#4: uint64 = φ(right#0 <- block@0) in block@0
debug: Added right#5 to Phi node: let right#4: uint64 = φ(right#0 <- block@0, right#5 <- block@14) in block@14
debug: Sealing block@22
debug: Created Phi assignment: let window_left#1: uint64 = undefined while trying to resolve 'window_left' in block@22
debug: Created Phi assignment: let window_left#2: uint64 = undefined while trying to resolve 'window_left' in block@1
debug: Added window_left#0 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0) in block@0
debug: Created Phi assignment: let window_left#3: uint64 = undefined while trying to resolve 'window_left' in block@6
debug: Created Phi assignment: let window_left#4: uint64 = undefined while trying to resolve 'window_left' in block@3
debug: Added window_left#2 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2) in block@2
debug: Added window_left#4 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2
debug: Deleting Phi assignment: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4)
debug: Replaced trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2 in current definition for 2 blocks
debug: Added window_left#2 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5) in block@5
debug: Added window_left#3 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2
debug: Deleting Phi assignment: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9)
debug: Replaced trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2 in current definition for 3 blocks
debug: Added window_left#2 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0
debug: Deleting Phi assignment: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14)
debug: Replaced trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0 in current definition for 12 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1) in block@1
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12) in block@12
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15) in block@15
debug: Created Phi assignment: let window_left#5: uint64 = undefined while trying to resolve 'window_left' in block@19
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17) in block@17
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0
debug: Deleting Phi assignment: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18)
debug: Replaced trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0 in current definition for 1 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19) in block@19
debug: Looking for 'window_left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_left#6: uint64 = undefined while trying to resolve 'window_left' in block@21
debug: Added window_left#6 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#6 <- block@21) in block@21
debug: Created Phi assignment: let right#7: uint64 = undefined while trying to resolve 'right' in block@22
debug: Added right#4 to Phi node: let right#7: uint64 = φ(right#4 <- block@1) in block@1
debug: Added right#1 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12) in block@12
debug: Added right#5 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15) in block@15
debug: Created Phi assignment: let right#8: uint64 = undefined while trying to resolve 'right' in block@19
debug: Added right#1 to Phi node: let right#8: uint64 = φ(right#1 <- block@17) in block@17
debug: Added right#6 to Phi node: let right#8: uint64 = φ(right#1 <- block@17, right#6 <- block@18) in block@18
debug: Added right#8 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19) in block@19
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let right#9: uint64 = undefined while trying to resolve 'right' in block@21
debug: Added right#9 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19, right#9 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let arr#4: uint64[]* = undefined while trying to resolve 'arr' in block@22
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1) in block@1
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12) in block@12
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15) in block@15
debug: Created Phi assignment: let arr#5: uint64[]* = undefined while trying to resolve 'arr' in block@19
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17) in block@17
debug: Added arr#0 to Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0
debug: Deleting Phi assignment: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18)
debug: Replaced trivial Phi node: let arr#5: uint64[]* = φ(arr#0 <- block@17, arr#0 <- block@18) (arr#5) with arr#0 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19) in block@19
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let arr#6: uint64[]* = undefined while trying to resolve 'arr' in block@21
debug: Added arr#6 to Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#6 <- block@21) in block@21
debug: Terminated block@23
debug: Sealing block@24
debug: Created Phi assignment: let left#7: uint64 = undefined while trying to resolve 'left' in block@24
debug: Created Phi assignment: let left#8: uint64 = undefined while trying to resolve 'left' in block@22
debug: Added left#3 to Phi node: let left#8: uint64 = φ(left#3 <- block@1) in block@1
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12) in block@12
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15) in block@15
debug: Created Phi assignment: let left#9: uint64 = undefined while trying to resolve 'left' in block@19
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17) in block@17
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) in block@18
debug: Replacing trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6
debug: Deleting Phi assignment: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18)
debug: Replaced trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6 in current definition for 1 blocks
debug: Added left#6 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19) in block@19
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let left#10: uint64 = undefined while trying to resolve 'left' in block@21
debug: Added left#10 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19, left#10 <- block@21) in block@21
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22) in block@22
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) in block@23
debug: Replacing trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8
debug: Deleting Phi assignment: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23)
debug: Replaced trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8 in current definition for 1 blocks
debug: Created Phi assignment: let window_right#1: uint64 = undefined while trying to resolve 'window_right' in block@24
debug: Created Phi assignment: let window_right#2: uint64 = undefined while trying to resolve 'window_right' in block@22
debug: Created Phi assignment: let window_right#3: uint64 = undefined while trying to resolve 'window_right' in block@1
debug: Added window_right#0 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0) in block@0
debug: Created Phi assignment: let window_right#4: uint64 = undefined while trying to resolve 'window_right' in block@6
debug: Created Phi assignment: let window_right#5: uint64 = undefined while trying to resolve 'window_right' in block@3
debug: Added window_right#3 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2) in block@2
debug: Added window_right#5 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3
debug: Deleting Phi assignment: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4)
debug: Replaced trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3 in current definition for 2 blocks
debug: Added window_right#3 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5) in block@5
debug: Added window_right#4 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3
debug: Deleting Phi assignment: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9)
debug: Replaced trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3 in current definition for 3 blocks
debug: Added window_right#3 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0
debug: Deleting Phi assignment: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14)
debug: Replaced trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0 in current definition for 12 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1) in block@1
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12) in block@12
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15) in block@15
debug: Created Phi assignment: let window_right#6: uint64 = undefined while trying to resolve 'window_right' in block@19
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17) in block@17
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0
debug: Deleting Phi assignment: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18)
debug: Replaced trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19) in block@19
debug: Looking for 'window_right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_right#7: uint64 = undefined while trying to resolve 'window_right' in block@21
debug: Added window_right#7 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#7 <- block@21) in block@21
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22) in block@22
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) in block@23
debug: Replacing trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2
debug: Deleting Phi assignment: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23)
debug: Replaced trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2 in current definition for 1 blocks
debug: Terminated block@24
debug: Sealing block@25
debug: Created Phi assignment: let arr#7: uint64[]* = undefined while trying to resolve 'arr' in block@24
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22) in block@22
debug: Added arr#4 to Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) in block@23
debug: Replacing trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4
debug: Deleting Phi assignment: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23)
debug: Replaced trivial Phi node: let arr#7: uint64[]* = φ(arr#4 <- block@22, arr#4 <- block@23) (arr#7) with arr#4 in current definition for 1 blocks
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@21
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8) in block@8
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0
debug: Deleting Phi assignment: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20)
debug: Replacing trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0
debug: Deleting Phi assignment: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21)
debug: Replaced trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0 in current definition for 2 blocks
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8) in block@8
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1
debug: Deleting Phi assignment: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20)
debug: Replaced trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1 in current definition for 1 blocks
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#0 to Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0
debug: Deleting Phi assignment: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20)
debug: Replacing trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0
debug: Deleting Phi assignment: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21)
debug: Replaced trivial Phi node: let arr#6: uint64[]* = φ(arr#0 <- block@8, arr#0 <- block@20) (arr#6) with arr#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let arr#4: uint64[]* = φ(arr#0 <- block@1, arr#0 <- block@12, arr#0 <- block@15, arr#0 <- block@19, arr#0 <- block@21) (arr#4) with arr#0 in current definition for 4 blocks
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8) in block@8
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1
debug: Deleting Phi assignment: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20)
debug: Replaced trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8) in block@8
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0
debug: Deleting Phi assignment: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20)
debug: Replacing trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0
debug: Deleting Phi assignment: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21)
debug: Replaced trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0 in current definition for 4 blocks
debug: Building IR for function test_cases.array.uint64.return_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Looking for 'expected' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let expected#1: uint64 = undefined while trying to resolve 'expected' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Added expected#0 to Phi node: let expected#1: uint64 = φ(expected#0 <- block@0) in block@0
debug: Added expected#2 to Phi node: let expected#1: uint64 = φ(expected#0 <- block@0, expected#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.append_length_and_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.do_something_with_array
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.path_length
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'point_idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let point_idx#1: uint64 = undefined while trying to resolve 'point_idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
debug: Looking for 'last_point.x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.x#1: bytes[8] = undefined while trying to resolve 'last_point.x' in block@1
debug: Looking for 'last_point.y' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.y#1: uint64 = undefined while trying to resolve 'last_point.y' in block@1
debug: Looking for 'last_point.other.a' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.a#1: uint64 = undefined while trying to resolve 'last_point.other.a' in block@1
debug: Looking for 'last_point.other.b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.b#1: uint64 = undefined while trying to resolve 'last_point.other.b' in block@1
debug: Looking for 'last_point.other.c' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.c#1: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@1
debug: Looking for 'last_point.other.d' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.d#1: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let point.x#1: bytes[8] = undefined while trying to resolve 'point.x' in block@5
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3) in block@3
debug: Added point.x#0 to Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0
debug: Deleting Phi assignment: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4)
debug: Replaced trivial Phi node: let point.x#1: bytes[8] = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.y#1: uint64 = undefined while trying to resolve 'point.y' in block@5
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3) in block@3
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0
debug: Deleting Phi assignment: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4)
debug: Replaced trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.a#1: uint64 = undefined while trying to resolve 'point.other.a' in block@5
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3) in block@3
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0
debug: Deleting Phi assignment: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.b#1: uint64 = undefined while trying to resolve 'point.other.b' in block@5
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3) in block@3
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0
debug: Deleting Phi assignment: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.c#1: bytes[32] = undefined while trying to resolve 'point.other.c' in block@5
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3) in block@3
debug: Added point.other.c#0 to Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0
debug: Deleting Phi assignment: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.c#1: bytes[32] = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.d#1: bytes[16] = undefined while trying to resolve 'point.other.d' in block@5
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3) in block@3
debug: Added point.other.d#0 to Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0
debug: Deleting Phi assignment: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.d#1: bytes[16] = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.x#2: bytes[8] = undefined while trying to resolve 'last_point.x' in block@5
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3) in block@3
debug: Added last_point.x#1 to Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.x#2: bytes[8] = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.y#2: uint64 = undefined while trying to resolve 'last_point.y' in block@5
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3) in block@3
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.a#2: uint64 = undefined while trying to resolve 'last_point.other.a' in block@5
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3) in block@3
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.b#2: uint64 = undefined while trying to resolve 'last_point.other.b' in block@5
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3) in block@3
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.c#2: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@5
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3) in block@3
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.c#2: bytes[32] = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.d#2: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@5
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3) in block@3
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.d#2: bytes[16] = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@8
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@5
debug: Looking for 'length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3) in block@3
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3 in current definition for 1 blocks
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6) in block@6
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3 in current definition for 1 blocks
debug: Created Phi assignment: let dx#2: uint64 = undefined while trying to resolve 'dx' in block@8
debug: Created Phi assignment: let dx#3: uint64 = undefined while trying to resolve 'dx' in block@5
debug: Added dx#0 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3) in block@3
debug: Added dx#1 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3, dx#1 <- block@4) in block@4
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6) in block@6
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3
debug: Deleting Phi assignment: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7)
debug: Replaced trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3 in current definition for 1 blocks
debug: Created Phi assignment: let dy#2: uint64 = undefined while trying to resolve 'dy' in block@8
debug: Added dy#0 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6) in block@6
debug: Added dy#1 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6, dy#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@1
debug: Added point_idx#0 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0) in block@0
debug: Added point_idx#2 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0, point_idx#2 <- block@9) in block@9
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Created Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@8
debug: Created Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@5
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3) in block@3
debug: Added path#1 to Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1
debug: Deleting Phi assignment: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4)
debug: Replaced trivial Phi node: let path#3: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6) in block@6
debug: Added path#1 to Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1
debug: Deleting Phi assignment: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7)
debug: Replaced trivial Phi node: let path#2: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0 in current definition for 9 blocks
debug: Added last_point.x#0 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.x#3: bytes[8] = undefined while trying to resolve 'last_point.x' in block@8
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6) in block@6
debug: Added last_point.x#1 to Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.x#3: bytes[8] = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1 in current definition for 1 blocks
debug: Added last_point.x#1 to Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0
debug: Deleting Phi assignment: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.x#1: bytes[8] = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0 in current definition for 9 blocks
debug: Added last_point.y#0 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.y#3: uint64 = undefined while trying to resolve 'last_point.y' in block@8
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6) in block@6
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1 in current definition for 1 blocks
debug: Added last_point.y#1 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0
debug: Deleting Phi assignment: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0 in current definition for 9 blocks
debug: Added last_point.other.a#0 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.a#3: uint64 = undefined while trying to resolve 'last_point.other.a' in block@8
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6) in block@6
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1 in current definition for 1 blocks
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0
debug: Deleting Phi assignment: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0 in current definition for 9 blocks
debug: Added last_point.other.b#0 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.b#3: uint64 = undefined while trying to resolve 'last_point.other.b' in block@8
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6) in block@6
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1 in current definition for 1 blocks
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0
debug: Deleting Phi assignment: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0 in current definition for 9 blocks
debug: Added last_point.other.c#0 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.c#3: bytes[32] = undefined while trying to resolve 'last_point.other.c' in block@8
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6) in block@6
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.c#3: bytes[32] = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1 in current definition for 1 blocks
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0
debug: Deleting Phi assignment: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.c#1: bytes[32] = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0 in current definition for 9 blocks
debug: Added last_point.other.d#0 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.d#3: bytes[16] = undefined while trying to resolve 'last_point.other.d' in block@8
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6) in block@6
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.d#3: bytes[16] = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1 in current definition for 1 blocks
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0
debug: Deleting Phi assignment: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.d#1: bytes[16] = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0 in current definition for 9 blocks
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#4 to Phi node: let length#3: uint64 = φ(length#0 <- block@0, length#4 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.immutable.times
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let result#1: bytes = undefined while trying to resolve 'result' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added result#0 to Phi node: let result#1: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#1: bytes = φ(result#0 <- block@0, result#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.sum_arr
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Building IR for function test_cases.array.uint64.Contract.test_array
debug: Sealing block@0
array/uint64.py:12:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:16:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:20:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:24:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:35:9 debug: encountered already materialized expression (test_cases.array.uint64.return_ref(arr, arr)), reusing result: tmp%40#0
array/uint64.py:35:30 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:38:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:39:16 debug: encountered already materialized expression (arr), reusing result: arr#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_multiple_append
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.overhead
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_too_long
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: uint64[]* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: uint64[]* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
array/uint64.py:84:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:87:16 debug: encountered already materialized expression (array2), reusing result: array2#0
array/uint64.py:92:16 debug: encountered already materialized expression (array), reusing result: array#0
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Sealing block@0
array/uint64.py:110:49 debug: encountered already materialized expression (test_cases.array.uint64.append_length_and_return(arr)), reusing result: tmp%16#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_allocations
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_iteration
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: uint64 = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added val#0 to Phi node: let val#1: uint64 = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: uint64 = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: uint64[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let arr#2: uint64[]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4) in block@4
debug: Added arr#2 to Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#2: uint64[]* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8) in block@8
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8, item_index_internal%1#2 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#3: uint64[]* = undefined while trying to resolve 'arr' in block@9
debug: Added arr#0 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8) in block@8
debug: Added arr#3 to Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0
debug: Deleting Phi assignment: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11)
debug: Replaced trivial Phi node: let arr#3: uint64[]* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@13
debug: Looking for 'reverse_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%2#1: uint64 = undefined while trying to resolve 'reverse_index_internal%2' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let last#3: uint64 = undefined while trying to resolve 'last' in block@13
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12) in block@12
debug: Added item_index_internal%2#1 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0
debug: Deleting Phi assignment: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15)
debug: Replaced trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0 in current definition for 3 blocks
debug: Added reverse_index_internal%2#0 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12) in block@12
debug: Added reverse_index_internal%2#2 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12, reverse_index_internal%2#2 <- block@15) in block@15
debug: Created Phi assignment: let last#5: uint64 = undefined while trying to resolve 'last' in block@9
debug: Added last#1 to Phi node: let last#5: uint64 = φ(last#1 <- block@8) in block@8
debug: Added last#5 to Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) in block@11
debug: Replacing trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1
debug: Deleting Phi assignment: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11)
debug: Replaced trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1 in current definition for 3 blocks
debug: Added last#1 to Phi node: let last#3: uint64 = φ(last#1 <- block@12) in block@12
debug: Added last#4 to Phi node: let last#3: uint64 = φ(last#1 <- block@12, last#4 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Looking for 'arc4_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let arc4_arr#1: bytes = undefined while trying to resolve 'arc4_arr' in block@17
debug: Looking for 'native_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let native_arr#1: bytes[8][]* = undefined while trying to resolve 'native_arr' in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@16) in block@16
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@16, i#2 <- block@19) in block@19
debug: Added arc4_arr#0 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16) in block@16
debug: Added arc4_arr#2 to Phi node: let arc4_arr#1: bytes = φ(arc4_arr#0 <- block@16, arc4_arr#2 <- block@19) in block@19
debug: Added native_arr#0 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16) in block@16
debug: Added native_arr#1 to Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) in block@19
debug: Replacing trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0
debug: Deleting Phi assignment: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19)
debug: Replaced trivial Phi node: let native_arr#1: bytes[8][]* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0 in current definition for 3 blocks
debug: Sealing block@20
debug: Terminated block@20
debug: Building IR for function test_cases.array.uint64.Contract.test_quicksort
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: uint64[]* = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added rnd#0 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#1 to Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0
debug: Deleting Phi assignment: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3)
debug: Replaced trivial Phi node: let rnd#1: uint64[]* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function test_cases.array.uint64.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = undefined while trying to resolve 'path' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added path#0 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0) in block@0
debug: Added path#1 to Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3)
debug: Replaced trivial Phi node: let path#1: (bytes[8],uint64,(uint64,uint64,bytes[32],bytes[16]))[]* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Sealing block@0
array/static_size.py:48:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/static_size.py:51:16 debug: encountered already materialized expression (result), reusing result: result#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bool[]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bytes[8][]* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: bytes[8][]* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr#2: bytes[8][]* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4) in block@4
debug: Created Phi assignment: let arr#3: bytes[8][]* = undefined while trying to resolve 'arr' in block@8
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6) in block@6
debug: Added arr#2 to Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#3: bytes[8][]* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9)
debug: Replaced trivial Phi node: let arr#2: bytes[8][]* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.sum_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.xtra
debug: Sealing block@0
array/static_size.py:107:9 debug: encountered already materialized expression ('count'), reusing result: "count"
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.more
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.more
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Sealing block@0
array/immutable.py:82:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:86:16 debug: encountered already materialized expression (arr), reusing result: arr#2
array/immutable.py:90:16 debug: encountered already materialized expression (arr), reusing result: arr#3
array/immutable.py:95:16 debug: encountered already materialized expression (arr), reusing result: arr#4
array/immutable.py:99:16 debug: encountered already materialized expression (arr), reusing result: arr#5
array/immutable.py:103:16 debug: encountered already materialized expression (arr), reusing result: arr#6
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@6
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4) in block@4
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Created Phi assignment: let arr#3: bool[] = undefined while trying to resolve 'arr' in block@6
debug: Added arr#1 to Phi node: let arr#3: bool[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#1 to Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#3: bool[] = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1 in current definition for 1 blocks
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@8
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6) in block@6
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0
debug: Deleting Phi assignment: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7)
debug: Replaced trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0 in current definition for 1 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let arr#4: bool[] = undefined while trying to resolve 'arr' in block@8
debug: Added arr#1 to Phi node: let arr#4: bool[] = φ(arr#1 <- block@6) in block@6
debug: Added arr#1 to Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1
debug: Deleting Phi assignment: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7)
debug: Replaced trivial Phi node: let arr#4: bool[] = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let length#4: uint64 = undefined while trying to resolve 'length' in block@10
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8) in block@8
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0
debug: Deleting Phi assignment: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9)
debug: Replaced trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Created Phi assignment: let arr#5: bool[] = undefined while trying to resolve 'arr' in block@10
debug: Added arr#1 to Phi node: let arr#5: bool[] = φ(arr#1 <- block@8) in block@8
debug: Added arr#1 to Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1
debug: Deleting Phi assignment: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9)
debug: Replaced trivial Phi node: let arr#5: bool[] = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1 in current definition for 1 blocks
debug: Terminated block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#6: bool[] = undefined while trying to resolve 'arr' in block@12
debug: Added arr#1 to Phi node: let arr#6: bool[] = φ(arr#1 <- block@10) in block@10
debug: Added arr#1 to Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1
debug: Deleting Phi assignment: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11)
debug: Replaced trivial Phi node: let arr#6: bool[] = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1 in current definition for 1 blocks
debug: Created Phi assignment: let length#5: uint64 = undefined while trying to resolve 'length' in block@12
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10) in block@10
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0
debug: Deleting Phi assignment: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11)
debug: Replaced trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0 in current definition for 1 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,uint64)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,uint64)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,uint64)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
array/immutable.py:145:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:150:16 debug: encountered already materialized expression (arr), reusing result: arr#3
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:184:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: (uint64,bytes)[] = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:203:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'j' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let j#1: uint64 = undefined while trying to resolve 'j' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'extra_arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let extra_arr#1: uint64[] = undefined while trying to resolve 'extra_arr' in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@3
debug: Added j#0 to Phi node: let j#1: uint64 = φ(j#0 <- block@2) in block@2
debug: Added j#2 to Phi node: let j#1: uint64 = φ(j#0 <- block@2, j#2 <- block@5) in block@5
debug: Added extra_arr#0 to Phi node: let extra_arr#1: uint64[] = φ(extra_arr#0 <- block@2) in block@2
debug: Added extra_arr#2 to Phi node: let extra_arr#1: uint64[] = φ(extra_arr#0 <- block@2, extra_arr#2 <- block@5) in block@5
debug: Sealing block@6
debug: Created Phi assignment: let arr#1: uint64[][] = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: uint64[][] = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#1: uint64[][] = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2 in current definition for 3 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@7) in block@7
debug: Added arr#0 to Phi node: let arr#2: uint64[][] = φ(arr#0 <- block@0) in block@0
debug: Added arr#3 to Phi node: let arr#2: uint64[][] = φ(arr#0 <- block@0, arr#3 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Looking for 'totals' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let totals#1: uint64[] = undefined while trying to resolve 'totals' in block@9
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8) in block@8
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8, item_index_internal%0#2 <- block@11) in block@11
debug: Added totals#0 to Phi node: let totals#1: uint64[] = φ(totals#0 <- block@8) in block@8
debug: Added totals#2 to Phi node: let totals#1: uint64[] = φ(totals#0 <- block@8, totals#2 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr2' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr2#1: (bool,bool)[] = undefined while trying to resolve 'arr2' in block@1
debug: Looking for 'arr7' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr7' in block@1
debug: Looking for 'arr8' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr8' in block@1
debug: Looking for 'arr9' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = undefined while trying to resolve 'arr9' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr2#0 to Phi node: let arr2#1: (bool,bool)[] = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#2 to Phi node: let arr2#1: (bool,bool)[] = φ(arr2#0 <- block@0, arr2#2 <- block@3) in block@3
debug: Added arr7#0 to Phi node: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr7#0 <- block@0) in block@0
debug: Added arr7#2 to Phi node: let arr7#1: (uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr7#0 <- block@0, arr7#2 <- block@3) in block@3
debug: Added arr8#0 to Phi node: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr8#0 <- block@0) in block@0
debug: Added arr8#2 to Phi node: let arr8#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr8#0 <- block@0, arr8#2 <- block@3) in block@3
debug: Added arr9#0 to Phi node: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr9#0 <- block@0) in block@0
debug: Added arr9#2 to Phi node: let arr9#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = φ(arr9#0 <- block@0, arr9#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Sealing block@0
array/immutable.py:305:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:305:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:305:37 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'sum1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sum1#1: uint64 = undefined while trying to resolve 'sum1' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added sum1#0 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0) in block@0
debug: Added sum1#2 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0, sum1#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let arr2#1: bool[] = undefined while trying to resolve 'arr2' in block@1
debug: Added arr2#0 to Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#1 to Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0
debug: Deleting Phi assignment: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3)
debug: Replaced trivial Phi node: let arr2#1: bool[] = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'sum2' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let sum2#1: uint64 = undefined while trying to resolve 'sum2' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@9) in block@9
debug: Created Phi assignment: let sum2#3: uint64 = undefined while trying to resolve 'sum2' in block@1
debug: Added sum2#0 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0) in block@0
debug: Added sum2#3 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0
debug: Deleting Phi assignment: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3)
debug: Replaced trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0 in current definition for 3 blocks
debug: Added sum2#0 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4) in block@4
debug: Created Phi assignment: let sum2#4: uint64 = undefined while trying to resolve 'sum2' in block@8
debug: Added sum2#1 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6) in block@6
debug: Added sum2#2 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6, sum2#2 <- block@7) in block@7
debug: Added sum2#4 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4, sum2#4 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr3#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@5
debug: Created Phi assignment: let arr3#2: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@1
debug: Added arr3#0 to Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0) in block@0
debug: Added arr3#2 to Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0
debug: Deleting Phi assignment: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3)
debug: Replaced trivial Phi node: let arr3#2: (uint64,bool,bool)[] = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0 in current definition for 3 blocks
debug: Added arr3#0 to Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4) in block@4
debug: Created Phi assignment: let arr3#3: (uint64,bool,bool)[] = undefined while trying to resolve 'arr3' in block@8
debug: Added arr3#1 to Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6) in block@6
debug: Added arr3#1 to Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1
debug: Deleting Phi assignment: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7)
debug: Replaced trivial Phi node: let arr3#3: (uint64,bool,bool)[] = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1 in current definition for 1 blocks
debug: Added arr3#1 to Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0
debug: Deleting Phi assignment: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9)
debug: Replaced trivial Phi node: let arr3#1: (uint64,bool,bool)[] = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Looking for 'sum3' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let sum3#1: uint64 = undefined while trying to resolve 'sum3' in block@11
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Created Phi assignment: let tup.foo#1: uint64 = undefined while trying to resolve 'tup.foo' in block@14
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12) in block@12
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0
debug: Deleting Phi assignment: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13)
debug: Replaced trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.bar#1: bool = undefined while trying to resolve 'tup.bar' in block@14
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12) in block@12
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0
debug: Deleting Phi assignment: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13)
debug: Replaced trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.baz#1: bool = undefined while trying to resolve 'tup.baz' in block@14
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12) in block@12
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0
debug: Deleting Phi assignment: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13)
debug: Replaced trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0 in current definition for 1 blocks
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let sum3#4: uint64 = undefined while trying to resolve 'sum3' in block@14
debug: Added sum3#2 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12) in block@12
debug: Added sum3#3 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12, sum3#3 <- block@13) in block@13
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@11
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10) in block@10
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10, item_index_internal%2#2 <- block@17) in block@17
debug: Created Phi assignment: let sum3#6: uint64 = undefined while trying to resolve 'sum3' in block@5
debug: Created Phi assignment: let sum3#7: uint64 = undefined while trying to resolve 'sum3' in block@1
debug: Added sum3#0 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0) in block@0
debug: Added sum3#7 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0
debug: Deleting Phi assignment: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3)
debug: Replaced trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0 in current definition for 3 blocks
debug: Added sum3#0 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4) in block@4
debug: Created Phi assignment: let sum3#8: uint64 = undefined while trying to resolve 'sum3' in block@8
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6) in block@6
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6
debug: Deleting Phi assignment: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7)
debug: Replaced trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6 in current definition for 1 blocks
debug: Added sum3#6 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0
debug: Deleting Phi assignment: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9)
debug: Replaced trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0 in current definition for 5 blocks
debug: Added sum3#0 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10) in block@10
debug: Created Phi assignment: let sum3#9: uint64 = undefined while trying to resolve 'sum3' in block@16
debug: Added sum3#4 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14) in block@14
debug: Added sum3#5 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14, sum3#5 <- block@15) in block@15
debug: Added sum3#9 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10, sum3#9 <- block@17) in block@17
debug: Sealing block@18
debug: Created Phi assignment: let arr4#1: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@11
debug: Created Phi assignment: let arr4#2: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@5
debug: Created Phi assignment: let arr4#3: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@1
debug: Added arr4#0 to Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0) in block@0
debug: Added arr4#3 to Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0
debug: Deleting Phi assignment: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3)
debug: Replaced trivial Phi node: let arr4#3: (uint64,bytes)[] = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0 in current definition for 3 blocks
debug: Added arr4#0 to Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4) in block@4
debug: Created Phi assignment: let arr4#4: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@8
debug: Added arr4#2 to Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6) in block@6
debug: Added arr4#2 to Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2
debug: Deleting Phi assignment: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7)
debug: Replaced trivial Phi node: let arr4#4: (uint64,bytes)[] = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2 in current definition for 1 blocks
debug: Added arr4#2 to Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0
debug: Deleting Phi assignment: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9)
debug: Replaced trivial Phi node: let arr4#2: (uint64,bytes)[] = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0 in current definition for 5 blocks
debug: Added arr4#0 to Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10) in block@10
debug: Created Phi assignment: let arr4#5: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@16
debug: Created Phi assignment: let arr4#6: (uint64,bytes)[] = undefined while trying to resolve 'arr4' in block@14
debug: Added arr4#1 to Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12) in block@12
debug: Added arr4#1 to Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) in block@13
debug: Replacing trivial Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1
debug: Deleting Phi assignment: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13)
debug: Replaced trivial Phi node: let arr4#6: (uint64,bytes)[] = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14) in block@14
debug: Added arr4#1 to Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1
debug: Deleting Phi assignment: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15)
debug: Replaced trivial Phi node: let arr4#5: (uint64,bytes)[] = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) in block@17
debug: Replacing trivial Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0
debug: Deleting Phi assignment: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17)
debug: Replaced trivial Phi node: let arr4#1: (uint64,bytes)[] = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0 in current definition for 7 blocks
debug: Terminated block@18
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Looking for 'sum4' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let sum4#1: uint64 = undefined while trying to resolve 'sum4' in block@19
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@19
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18) in block@18
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18, item_index_internal%3#2 <- block@21) in block@21
debug: Created Phi assignment: let sum4#4: uint64 = undefined while trying to resolve 'sum4' in block@11
debug: Created Phi assignment: let sum4#5: uint64 = undefined while trying to resolve 'sum4' in block@5
debug: Created Phi assignment: let sum4#6: uint64 = undefined while trying to resolve 'sum4' in block@1
debug: Added sum4#0 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0) in block@0
debug: Added sum4#6 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0
debug: Deleting Phi assignment: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3)
debug: Replaced trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0 in current definition for 3 blocks
debug: Added sum4#0 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4) in block@4
debug: Created Phi assignment: let sum4#7: uint64 = undefined while trying to resolve 'sum4' in block@8
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6) in block@6
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5
debug: Deleting Phi assignment: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7)
debug: Replaced trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5 in current definition for 1 blocks
debug: Added sum4#5 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0
debug: Deleting Phi assignment: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9)
debug: Replaced trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0 in current definition for 5 blocks
debug: Added sum4#0 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10) in block@10
debug: Created Phi assignment: let sum4#8: uint64 = undefined while trying to resolve 'sum4' in block@16
debug: Created Phi assignment: let sum4#9: uint64 = undefined while trying to resolve 'sum4' in block@14
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12) in block@12
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4
debug: Deleting Phi assignment: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13)
debug: Replaced trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14) in block@14
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4
debug: Deleting Phi assignment: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15)
debug: Replaced trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0
debug: Deleting Phi assignment: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17)
debug: Replaced trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0 in current definition for 7 blocks
debug: Added sum4#0 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18) in block@18
debug: Added sum4#3 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18, sum4#3 <- block@21) in block@21
debug: Sealing block@22
debug: Created Phi assignment: let sum1#3: uint64 = undefined while trying to resolve 'sum1' in block@19
debug: Created Phi assignment: let sum1#4: uint64 = undefined while trying to resolve 'sum1' in block@11
debug: Created Phi assignment: let sum1#5: uint64 = undefined while trying to resolve 'sum1' in block@5
debug: Added sum1#1 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4) in block@4
debug: Created Phi assignment: let sum1#6: uint64 = undefined while trying to resolve 'sum1' in block@8
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6) in block@6
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5
debug: Deleting Phi assignment: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7)
debug: Replaced trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5 in current definition for 1 blocks
debug: Added sum1#5 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1
debug: Deleting Phi assignment: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9)
debug: Replaced trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1 in current definition for 5 blocks
debug: Added sum1#1 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10) in block@10
debug: Created Phi assignment: let sum1#7: uint64 = undefined while trying to resolve 'sum1' in block@16
debug: Created Phi assignment: let sum1#8: uint64 = undefined while trying to resolve 'sum1' in block@14
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12) in block@12
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4
debug: Deleting Phi assignment: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13)
debug: Replaced trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14) in block@14
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4
debug: Deleting Phi assignment: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15)
debug: Replaced trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1
debug: Deleting Phi assignment: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17)
debug: Replaced trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1 in current definition for 7 blocks
debug: Added sum1#1 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18) in block@18
debug: Added sum1#3 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1
debug: Deleting Phi assignment: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21)
debug: Replaced trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum2#5: uint64 = undefined while trying to resolve 'sum2' in block@19
debug: Created Phi assignment: let sum2#6: uint64 = undefined while trying to resolve 'sum2' in block@11
debug: Added sum2#1 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10) in block@10
debug: Created Phi assignment: let sum2#7: uint64 = undefined while trying to resolve 'sum2' in block@16
debug: Created Phi assignment: let sum2#8: uint64 = undefined while trying to resolve 'sum2' in block@14
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12) in block@12
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6
debug: Deleting Phi assignment: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13)
debug: Replaced trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14) in block@14
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6
debug: Deleting Phi assignment: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15)
debug: Replaced trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1
debug: Deleting Phi assignment: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17)
debug: Replaced trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1 in current definition for 7 blocks
debug: Added sum2#1 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18) in block@18
debug: Added sum2#5 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1
debug: Deleting Phi assignment: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21)
debug: Replaced trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum3#10: uint64 = undefined while trying to resolve 'sum3' in block@19
debug: Added sum3#1 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18) in block@18
debug: Added sum3#10 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1
debug: Deleting Phi assignment: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21)
debug: Replaced trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1 in current definition for 3 blocks
debug: Terminated block@22
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: uint64[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: uint64[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: bool[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: bool[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bool,bool)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bool,bool)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: (uint64,bytes)[] = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: (uint64,bytes)[] = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'mutable' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let mutable#1: (uint64,bool,bool)[]* = undefined while trying to resolve 'mutable' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added mutable#0 to Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0) in block@0
debug: Added mutable#1 to Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0
debug: Deleting Phi assignment: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3)
debug: Replaced trivial Phi node: let mutable#1: (uint64,bool,bool)[]* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Sealing block@0
array/immutable.py:398:16 debug: assuming test_cases.array.immutable.MyDynamicSizedTuple is already encoded as test_cases.array.immutable.MyDynamicSizedTuple
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: optimizing approval program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%10#0 0u) to (! tmp%10#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6 from switch tmp%9#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%9#0] else goto block@8
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6 from goto_nth [block@7][tmp%9#0] else goto block@8 to goto tmp%9#0 ? block@8 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@6
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@9 with block@8 in block@10
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:202:4-26, ir_type=uint64, name='item_offset_adjustment', version=0),)
debug: Replacing redundant declaration let tmp%12#0: uint64 = (* array_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:203:33-64, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%13#0: uint64 = (len array_head_and_tail#0) with copy of existing registers (Register(source_location=INTERNAL:207:4-26, ir_type=uint64, name='item_offset_adjustment', version=2),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:208:33-62, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: item_offset_adjustment#0, tmp%4#0, tmp%16#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%0#0, tmp%12#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: item_offset_adjustment#2, tmp%13#0
debug: selected item_offset_adjustment#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create in test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
array/unused_opt_allowed.py:13:6 debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call in test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_uint64[]%0#0, arr#0, inner_txn_params%0%%param_ApplicationArgs_idx_1#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%8#0, app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0, inner_txn_params%1%%param_ApplicationID_idx_0#0, inner_txn_params%2%%param_ApplicationID_idx_0#0, inner_txn_params%3%%param_ApplicationID_idx_0#0, inner_txn_params%4%%param_ApplicationID_idx_0#0
debug: selected app#0 from equivalence set
debug: Found equivalence set: array_data%0#0, nested_arr#0
debug: selected nested_arr#0 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, nested_arr#1, inner_txn_params%1%%param_ApplicationArgs_idx_1#0
debug: selected nested_arr#1 from equivalence set
debug: Found equivalence set: array_data%1#0, indirect_nested_arr#0
debug: selected indirect_nested_arr#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#0, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#0 from equivalence set
debug: Found equivalence set: result%3#0, r_head_and_tail%1#0
debug: selected result%3#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, indirect_nested_arr#1, inner_txn_params%2%%param_ApplicationArgs_idx_1#0
debug: selected indirect_nested_arr#1 from equivalence set
debug: Found equivalence set: array_data%2#0, address_arr#0
debug: selected address_arr#0 from equivalence set
debug: Found equivalence set: concat_result%2#0, address_arr#1, inner_txn_params%3%%param_ApplicationArgs_idx_1#0, inner_txn_params%4%%param_ApplicationArgs_idx_0#0
debug: selected address_arr#1 from equivalence set
debug: Copy propagation made 22 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable inner_txn_params%1#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Removing unused variable inner_txn_params%2#0
debug: Removing unused variable inner_txn_params%2%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%2%%Fee_length#0
debug: Removing unused variable inner_txn_params%2%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%2%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%2%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%2%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%2%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%2%%Sender_length#0
debug: Removing unused variable inner_txn_params%2%%Note_length#0
debug: Removing unused variable inner_txn_params%2%%Receiver_length#0
debug: Removing unused variable inner_txn_params%2%%Amount_length#0
debug: Removing unused variable inner_txn_params%2%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%2%%VotePK_length#0
debug: Removing unused variable inner_txn_params%2%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%2%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%2%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%2%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%2%%Type_length#0
debug: Removing unused variable inner_txn_params%2%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%2%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%2%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%2%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%2%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%2%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%2%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%2%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%2%%Accounts_length#0
debug: Removing unused variable inner_txn_params%2%%Assets_length#0
debug: Removing unused variable inner_txn_params%2%%Applications_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%3#0
debug: Removing unused variable inner_txn_params%3%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%3%%Fee_length#0
debug: Removing unused variable inner_txn_params%3%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%3%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%3%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%3%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%3%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%3%%Sender_length#0
debug: Removing unused variable inner_txn_params%3%%Note_length#0
debug: Removing unused variable inner_txn_params%3%%Receiver_length#0
debug: Removing unused variable inner_txn_params%3%%Amount_length#0
debug: Removing unused variable inner_txn_params%3%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%3%%VotePK_length#0
debug: Removing unused variable inner_txn_params%3%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%3%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%3%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%3%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%3%%Type_length#0
debug: Removing unused variable inner_txn_params%3%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%3%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%3%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%3%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%3%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%3%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%3%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%3%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%3%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%3%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%3%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%3%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%3%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%3%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%3%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%3%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%3%%Accounts_length#0
debug: Removing unused variable inner_txn_params%3%%Assets_length#0
debug: Removing unused variable inner_txn_params%3%%Applications_length#0
debug: Removing unused variable inner_txn_params%3%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%3%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%4#0
debug: Removing unused variable inner_txn_params%4%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%4%%Fee_length#0
debug: Removing unused variable inner_txn_params%4%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%4%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%4%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%4%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%4%%Sender_length#0
debug: Removing unused variable inner_txn_params%4%%Note_length#0
debug: Removing unused variable inner_txn_params%4%%Receiver_length#0
debug: Removing unused variable inner_txn_params%4%%Amount_length#0
debug: Removing unused variable inner_txn_params%4%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%4%%VotePK_length#0
debug: Removing unused variable inner_txn_params%4%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%4%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%4%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%4%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%4%%Type_length#0
debug: Removing unused variable inner_txn_params%4%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%4%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%4%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%4%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%4%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%4%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%4%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%4%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%4%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%4%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%4%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%4%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%4%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%4%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%4%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%4%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%4%%Accounts_length#0
debug: Removing unused variable inner_txn_params%4%%Assets_length#0
debug: Removing unused variable inner_txn_params%4%%Applications_length#0
debug: Removing unused variable inner_txn_params%4%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%4%%ClearStateProgramPages_length#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Simplified (== tmp%10#0 0u) to (! tmp%10#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@5 from switch tmp%9#0 {0u => block@6, * => block@7} to goto_nth [block@6][tmp%9#0] else goto block@7
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@5 from goto_nth [block@6][tmp%9#0] else goto block@7 to goto tmp%9#0 ? block@7 : block@6
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@12 with block@2 in block@13
debug: Merged linear block@12 into block@2
debug: Replaced predecessor block@13 with block@2 in block@14
debug: Merged linear block@13 into block@2
debug: Replaced predecessor block@14 with block@2 in block@15
debug: Merged linear block@14 into block@2
debug: Replaced predecessor block@15 with block@2 in block@16
debug: Merged linear block@15 into block@2
debug: Replaced predecessor block@16 with block@2 in block@17
debug: Merged linear block@16 into block@2
debug: Replaced predecessor block@17 with block@2 in block@18
debug: Merged linear block@17 into block@2
debug: Merged linear block@18 into block@2
debug: Replaced predecessor block@4 with block@3 in block@9
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@10 with block@6 in block@11
debug: Merged linear block@10 into block@6
debug: Merged linear block@11 into block@6
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3
debug: Removed empty block: block@7
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let data_length%0#0: uint64 = (len arr#0) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:21:21-43, ir_type=uint64, name='next_item_len%0', version=0),)
debug: Replacing redundant declaration let as_bytes%2#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:21:21-43, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: next_item_len%0#0, data_length%0#0
debug: selected next_item_len%0#0 from equivalence set
debug: Found equivalence set: as_bytes%0#0, as_bytes%2#0
debug: selected as_bytes%0#0 from equivalence set
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arr#0, inner_txn_params%0%%param_ApplicationArgs_idx_1#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0, inner_txn_params%1%%param_ApplicationID_idx_0#0, inner_txn_params%2%%param_ApplicationID_idx_0#0, inner_txn_params%3%%param_ApplicationID_idx_0#0, inner_txn_params%4%%param_ApplicationID_idx_0#0
debug: selected app#0 from equivalence set
debug: Found equivalence set: array_data%0#0, nested_arr#0
debug: selected nested_arr#0 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, nested_arr#1, inner_txn_params%1%%param_ApplicationArgs_idx_1#0
debug: selected nested_arr#1 from equivalence set
debug: Found equivalence set: array_data%1#0, indirect_nested_arr#0
debug: selected indirect_nested_arr#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#0, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#0 from equivalence set
debug: Found equivalence set: result%3#0, r_head_and_tail%1#0
debug: selected result%3#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, indirect_nested_arr#1, inner_txn_params%2%%param_ApplicationArgs_idx_1#0
debug: selected indirect_nested_arr#1 from equivalence set
debug: Found equivalence set: array_data%2#0, address_arr#0
debug: selected address_arr#0 from equivalence set
debug: Found equivalence set: concat_result%2#0, address_arr#1, inner_txn_params%3%%param_ApplicationArgs_idx_1#0, inner_txn_params%4%%param_ApplicationArgs_idx_0#0
debug: selected address_arr#1 from equivalence set
debug: Copy propagation made 20 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable inner_txn_params%1#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Removing unused variable inner_txn_params%2#0
debug: Removing unused variable inner_txn_params%2%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%2%%Fee_length#0
debug: Removing unused variable inner_txn_params%2%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%2%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%2%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%2%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%2%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%2%%Sender_length#0
debug: Removing unused variable inner_txn_params%2%%Note_length#0
debug: Removing unused variable inner_txn_params%2%%Receiver_length#0
debug: Removing unused variable inner_txn_params%2%%Amount_length#0
debug: Removing unused variable inner_txn_params%2%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%2%%VotePK_length#0
debug: Removing unused variable inner_txn_params%2%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%2%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%2%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%2%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%2%%Type_length#0
debug: Removing unused variable inner_txn_params%2%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%2%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%2%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%2%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%2%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%2%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%2%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%2%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%2%%Accounts_length#0
debug: Removing unused variable inner_txn_params%2%%Assets_length#0
debug: Removing unused variable inner_txn_params%2%%Applications_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%3#0
debug: Removing unused variable inner_txn_params%3%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%3%%Fee_length#0
debug: Removing unused variable inner_txn_params%3%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%3%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%3%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%3%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%3%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%3%%Sender_length#0
debug: Removing unused variable inner_txn_params%3%%Note_length#0
debug: Removing unused variable inner_txn_params%3%%Receiver_length#0
debug: Removing unused variable inner_txn_params%3%%Amount_length#0
debug: Removing unused variable inner_txn_params%3%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%3%%VotePK_length#0
debug: Removing unused variable inner_txn_params%3%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%3%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%3%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%3%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%3%%Type_length#0
debug: Removing unused variable inner_txn_params%3%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%3%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%3%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%3%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%3%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%3%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%3%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%3%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%3%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%3%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%3%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%3%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%3%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%3%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%3%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%3%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%3%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%3%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%3%%Accounts_length#0
debug: Removing unused variable inner_txn_params%3%%Assets_length#0
debug: Removing unused variable inner_txn_params%3%%Applications_length#0
debug: Removing unused variable inner_txn_params%3%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%3%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%4#0
debug: Removing unused variable inner_txn_params%4%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%4%%Fee_length#0
debug: Removing unused variable inner_txn_params%4%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%4%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%4%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%4%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%4%%Sender_length#0
debug: Removing unused variable inner_txn_params%4%%Note_length#0
debug: Removing unused variable inner_txn_params%4%%Receiver_length#0
debug: Removing unused variable inner_txn_params%4%%Amount_length#0
debug: Removing unused variable inner_txn_params%4%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%4%%VotePK_length#0
debug: Removing unused variable inner_txn_params%4%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%4%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%4%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%4%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%4%%Type_length#0
debug: Removing unused variable inner_txn_params%4%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%4%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%4%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%4%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%4%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%4%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%4%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%4%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%4%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%4%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%4%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%4%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%4%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%4%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%4%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%4%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%4%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%4%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%4%%Accounts_length#0
debug: Removing unused variable inner_txn_params%4%%Assets_length#0
debug: Removing unused variable inner_txn_params%4%%Applications_length#0
debug: Removing unused variable inner_txn_params%4%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%4%%ClearStateProgramPages_length#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@5
debug: Merged linear block@4 into block@0
debug: Merged linear block@5 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let data_length%0#0: uint64 = (len arr#0) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:21:21-43, ir_type=uint64, name='next_item_len%0', version=0),)
debug: Replacing redundant declaration let as_bytes%2#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:21:21-43, ir_type=bytes[8], name='as_bytes%0', version=0),)
debug: Found equivalence set: next_item_len%0#0, data_length%0#0
debug: selected next_item_len%0#0 from equivalence set
debug: Found equivalence set: as_bytes%0#0, as_bytes%2#0
debug: selected as_bytes%0#0 from equivalence set
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/unused_opt_allowed.py:13:6 debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_uint64[]%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%8#0, app#0
debug: selected app#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable nested_arr#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable l_count%0#0
debug: Removing unused variable l_head_and_tail%0#0
debug: Removing unused variable indirect_nested_arr#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable next_item_head%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable next_item_len%1#0
debug: Removing unused variable l_count%1#0
debug: Removing unused variable l_head_and_tail%1#0
debug: Removing unused variable address_arr#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14 with block@3 in block@15
debug: Merged linear block@14 into block@3
debug: Replaced predecessor block@15 with block@3 in block@11
debug: Merged linear block@15 into block@3
debug: Replaced predecessor block@12 with block@7 in block@13
debug: Merged linear block@12 into block@7
debug: Replaced predecessor block@13 with block@7 in block@11
debug: Merged linear block@13 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nested_arr#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable l_count%0#0
debug: Removing unused variable l_head_and_tail%0#0
debug: Removing unused variable indirect_nested_arr#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable next_item_head%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable next_item_len%1#0
debug: Removing unused variable l_count%1#0
debug: Removing unused variable l_head_and_tail%1#0
debug: Removing unused variable address_arr#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: lowering array IR nodes in clear program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: optimizing approval program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: selected array%data%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x tmp%1#1) to tmp%1#1
debug: Simplified (concat 0x tmp%1#1) to tmp%1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#1, array%encoded%0#1, array%data%0#1
debug: selected tmp%1#1 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing tmp%0#1 with [tmp%0#2]
debug: Coalescing test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 with [test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#1, test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#2]
debug: Coalescing tmp%0#0 with [tmp%0#3]
debug: Coalescing resulted in 10 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 38 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/AbiCallContract.ir/AbiCallContract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/AbiCallContract.ir/AbiCallContract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[17]: 'l-store-copy reinterpret_bytes[1]%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[19]: 'v-load reinterpret_bytes[1]%0#0' with 'l-load reinterpret_bytes[1]%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[21]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[23]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[63]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[65]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[71]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[73]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[100]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[102]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[104]: 'l-store-copy byte_len%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[106]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[109]: 'l-store-copy len_%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[111]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[113]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[115]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[117]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[119]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[146]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[148]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[25]: 'l-store-copy app#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[28]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[68]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[71]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[78]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[81]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[42]: 'l-store-copy result%1#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[47]: 'v-load result%1#0' with 'l-load result%1#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[84]: 'l-store-copy result%3#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[89]: 'v-load result%3#0' with 'l-load result%3#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[49]: 'l-store-copy nested_arr#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[56]: 'v-load nested_arr#1' with 'l-load nested_arr#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[92]: 'l-store-copy indirect_nested_arr#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[99]: 'v-load indirect_nested_arr#1' with 'l-load indirect_nested_arr#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[129]: 'l-store-copy address_arr#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[136]: 'v-load address_arr#1' with 'l-load address_arr#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[33]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[41]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[138]: 'l-store-copy address_arr#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[148]: 'v-load address_arr#1' with 'l-load address_arr#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[65]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[80]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[135]: 'l-store-copy app#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[148]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[33]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[113]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[131]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[43]: 'l-store-copy arr#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[66]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[30]: 'l-store-copy app#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[56]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[101]: 'l-store-copy app#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[139]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[57]: 'l-store-copy app#0 2'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[101]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_bare_routing@6.ops[1]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_bare_routing@6.ops[3]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@7.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@7.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@7.ops[5]: 'l-store-copy tmp%11#0 0'
debug: Replaced main___algopy_default_create@7.ops[7]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@7.ops[10]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@7.ops[12]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@10.ops[1]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@10.ops[3]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'l-store-copy tmp%19#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[21]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[34]: 'l-store-copy tmp%18#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[29]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_abi_call_route@3 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main___algopy_default_create@7 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main_after_if_else@10 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: Found 4 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['item_offset_adjustment#2']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%0#0', 'head_offset#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11 into main_after_if_else@10
debug: inlining single reference block main___algopy_default_create@7 into main_bare_routing@6
debug: removing explicit jump to fall-through block main_after_if_else@10
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: inlining single reference block dynamic_array_concat_dynamic_element_block@0 into dynamic_array_concat_dynamic_element
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@2 into dynamic_array_concat_dynamic_element_for_header@1
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@6 into dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
array/uint64.py:174 debug: function is auto-recursive: test_cases.array.uint64.quicksort_window
debug: marking single-use function test_cases.array.uint64.return_ref for inlining
debug: marking single-use function test_cases.array.uint64.pop_x for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_multiple_append for inlining
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: marking single-use function test_cases.array.uint64.Contract.test_array_too_long for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_copy_and_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_evaluation_order for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_allocations for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_iteration for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_quicksort for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%45#0 0u) to (! tmp%45#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@15 from switch tmp%44#0 {0u => block@16, * => block@17} to goto_nth [block@16][tmp%44#0] else goto block@17
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@15 from goto_nth [block@16][tmp%44#0] else goto block@17 to goto tmp%44#0 ? block@17 : block@16
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@15
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@14 with block@13 in block@19
debug: Merged linear block@14 into block@13
debug: Replaced predecessor block@18 with block@17 in block@19
debug: Merged linear block@18 into block@17
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@13
debug: Removed empty block: block@17
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: window_left#0, left#0
debug: selected window_left#0 from equivalence set
debug: Found equivalence set: window_right#0, right#0
debug: selected window_right#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== right#1 0u) to (! right#1)
debug: Simplified (== right#1 0u) to (! right#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@22 to goto block@2
debug: simplified branch on !tmp%6#0 by swapping zero and non-zero targets
debug: simplified terminator of block@7 from goto tmp%6#0 ? block@8 : block@9 to goto right#1 ? block@9 : block@8
debug: simplified branch on !tmp%10#0 by swapping zero and non-zero targets
debug: simplified terminator of block@11 from goto tmp%10#0 ? block@12 : block@13 to goto right#1 ? block@13 : block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Removed empty block: block@8
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Removed empty block: block@20
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: popped_item.0%0#0, popped#0
debug: selected popped#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:156:6 debug: inlining call to test_cases.array.uint64.Contract.test_quicksort in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:122:6 debug: inlining call to test_cases.array.uint64.Contract.test_iteration in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:116:6 debug: inlining call to test_cases.array.uint64.Contract.test_allocations in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:97:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_evaluation_order in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:75:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_copy_and_extend in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:66:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_too_long in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:53:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_multiple_append in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:41:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_extend in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:5:6 debug: inlining call to test_cases.array.uint64.Contract.test_array in test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#8, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: slot%0#7, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: slot%1#2, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: slot%0#6, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: slot%0#5, array#1
debug: selected array#1 from equivalence set
debug: Found equivalence set: slot%0#4, array#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: slot%1#1, array2#0
debug: selected array2#0 from equivalence set
debug: Found equivalence set: slot%0#3, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: tmp%35#0, num#0
debug: selected num#0 from equivalence set
debug: Found equivalence set: slot%0#2, alloc_test#0
debug: selected alloc_test#0 from equivalence set
debug: Found equivalence set: slot%0#1, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: value#1, last#5
debug: selected value#1 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#1
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: item_index_internal%1#4, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: value#3, last#7
debug: selected value#3 from equivalence set
debug: Found equivalence set: array_data%0#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, native_arr#0
debug: selected native_arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arc4_arr#2
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: concat_result%1#0, combined_arr#0
debug: selected combined_arr#0 from equivalence set
debug: Found equivalence set: slot%0#0, rnd#0
debug: selected rnd#0 from equivalence set
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: value#0, last#2
debug: selected value#0 from equivalence set
debug: Copy propagation made 36 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%0#8 0u) to (! tmp%0#8)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%24#2 0u) to (! tmp%24#2)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 2 8) combined_arr#0)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (extract3 array_head_and_tail%1#0 32u 8u) // on error: Index access is out of bounds to ((extract 34 8) combined_arr#0)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (extract3 array_head_and_tail%2#0 40u 8u) // on error: Index access is out of bounds to ((extract 42 8) combined_arr#0)
debug: Simplified (* 9u 8u) to 72u
debug: Simplified (extract3 array_head_and_tail%3#0 72u 8u) // on error: Index access is out of bounds to ((extract 74 8) combined_arr#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (btoi b#0) to (getbyte tmp%0#1 item_index_internal%0#1)
debug: Simplified (== tmp%45#0 0u) to (! tmp%45#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@14 from switch tmp%44#0 {0u => block@15, * => block@16} to goto_nth [block@15][tmp%44#0] else goto block@16
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@14 from goto_nth [block@15][tmp%44#0] else goto block@16 to goto tmp%44#0 ? block@16 : block@15
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@79 with block@2 in block@80
debug: Merged linear block@79 into block@2
debug: Merged linear block@80 into block@2
debug: Replaced predecessor block@77 with block@3 in block@78
debug: Merged linear block@77 into block@3
debug: Merged linear block@78 into block@3
debug: Replaced predecessor block@75 with block@4 in block@76
debug: Merged linear block@75 into block@4
debug: Merged linear block@76 into block@4
debug: Replaced predecessor block@73 with block@5 in block@74
debug: Merged linear block@73 into block@5
debug: Merged linear block@74 into block@5
debug: Replaced predecessor block@67 with block@6 in block@68
debug: Merged linear block@67 into block@6
debug: Replaced predecessor block@70 with block@69 in block@68
debug: Merged linear block@70 into block@69
debug: Merged linear block@72 into block@71
debug: Replaced predecessor block@61 with block@7 in block@62
debug: Merged linear block@61 into block@7
debug: Replaced predecessor block@64 with block@63 in block@62
debug: Merged linear block@64 into block@63
debug: Merged linear block@66 into block@65
debug: Replaced predecessor block@59 with block@8 in block@60
debug: Merged linear block@59 into block@8
debug: Merged linear block@60 into block@8
debug: Replaced predecessor block@53 with block@9 in block@54
debug: Merged linear block@53 into block@9
debug: Replaced predecessor block@56 with block@55 in block@54
debug: Merged linear block@56 into block@55
debug: Merged linear block@58 into block@57
debug: Replaced predecessor block@31 with block@10 in block@32
debug: Merged linear block@31 into block@10
debug: Replaced predecessor block@34 with block@33 in block@32
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@38 with block@37 in block@36
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@42 with block@41 in block@40
debug: Merged linear block@42 into block@41
debug: Replaced predecessor block@46 with block@45 in block@44
debug: Merged linear block@46 into block@45
debug: Replaced predecessor block@50 with block@49 in block@48
debug: Merged linear block@50 into block@49
debug: Merged linear block@52 into block@51
debug: Replaced predecessor block@21 with block@11 in block@22
debug: Merged linear block@21 into block@11
debug: Replaced predecessor block@24 with block@23 in block@22
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@28 with block@27 in block@26
debug: Merged linear block@28 into block@27
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@13 with block@12 in block@18
debug: Merged linear block@13 into block@12
debug: Replaced predecessor block@19 with block@15 in block@20
debug: Merged linear block@19 into block@15
debug: Merged linear block@20 into block@15
debug: Replaced predecessor block@17 with block@16 in block@18
debug: Merged linear block@17 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@12
debug: Removed empty block: block@16
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%1#0: bytes[8] = (itob i#1) with copy of existing registers (Register(source_location=array/uint64.py:147:28-42, ir_type=bytes[8], name='val_as_bytes%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%2#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, val_as_bytes%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0, array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/uint64.py:18:9 debug: inlining call to test_cases.array.uint64.pop_x in test_cases.array.uint64.Contract.test_array
array/uint64.py:35:9 debug: inlining call to test_cases.array.uint64.return_ref in test_cases.array.uint64.Contract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0, arr#1, arr#2, arr2#0, tmp%40#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@6 with block@4 in block@7
debug: Merged linear block@6 into block@4
debug: Merged linear block@7 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: selected array#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: slot%1#0, array2#0
debug: selected array2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%24#0 0u) to (! tmp%24#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, alloc_test#0
debug: selected alloc_test#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: value#0, last#2
debug: selected value#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: item_index_internal%1#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: value#2, last#4
debug: selected value#2 from equivalence set
debug: Found equivalence set: array_data%0#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, native_arr#0
debug: selected native_arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arc4_arr#2
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: concat_result%1#0, combined_arr#0
debug: selected combined_arr#0 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 2 8) combined_arr#0)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (extract3 array_head_and_tail%1#0 32u 8u) // on error: Index access is out of bounds to ((extract 34 8) combined_arr#0)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (extract3 array_head_and_tail%2#0 40u 8u) // on error: Index access is out of bounds to ((extract 42 8) combined_arr#0)
debug: Simplified (* 9u 8u) to 72u
debug: Simplified (extract3 array_head_and_tail%3#0 72u 8u) // on error: Index access is out of bounds to ((extract 74 8) combined_arr#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@9
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@15 with block@14 in block@13
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@19 with block@18 in block@17
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let val_as_bytes%1#0: bytes[8] = (itob i#1) with copy of existing registers (Register(source_location=array/uint64.py:147:28-42, ir_type=bytes[8], name='val_as_bytes%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%2#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:151:15-30, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, val_as_bytes%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0, array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, rnd#0
debug: selected rnd#0 from equivalence set
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: value#0, last#2
debug: selected value#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi b#0) to (getbyte tmp%0#0 item_index_internal%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.uint64.Contract.test_array for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_multiple_append for inlining
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: marking single-use function test_cases.array.uint64.Contract.test_array_too_long for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_copy_and_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_evaluation_order for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_allocations for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_iteration for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_quicksort for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:156:6 debug: inlining call to test_cases.array.uint64.Contract.test_quicksort in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:122:6 debug: inlining call to test_cases.array.uint64.Contract.test_iteration in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:116:6 debug: inlining call to test_cases.array.uint64.Contract.test_allocations in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:97:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_evaluation_order in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:75:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_copy_and_extend in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:66:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_too_long in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:53:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_multiple_append in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:41:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_extend in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:5:6 debug: inlining call to test_cases.array.uint64.Contract.test_array in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#8, slot_contents%0#7, slot_contents%1#7
debug: selected encoded%0#8 from equivalence set
debug: Found equivalence set: extended%0#7, slot_contents%2#7, slot_contents%3#6, slot_contents%4#5
debug: selected extended%0#7 from equivalence set
debug: Found equivalence set: slot_contents%5#4, slot_contents%6#3, slot_contents%7#3
debug: selected slot_contents%5#4 from equivalence set
debug: Found equivalence set: slot_contents%8#3, slot_contents%9#3, slot_contents%10#2, slot_contents%11#2
debug: selected slot_contents%8#3 from equivalence set
debug: Found equivalence set: extended%1#6, slot_contents%12#2, slot_contents%13#2, slot_contents%14#2, slot_contents%15#2
debug: selected extended%1#6 from equivalence set
debug: Found equivalence set: slot_contents%16#2, slot_contents%17#2, slot_contents%18#0, slot_contents%19#0
debug: selected slot_contents%16#2 from equivalence set
debug: Found equivalence set: extended%2#3, slot_contents%20#0, slot_contents%21#0, slot_contents%22#0, slot_contents%0#9
debug: selected extended%2#3 from equivalence set
debug: Found equivalence set: extended%0#8, slot_contents%1#8
debug: selected extended%0#8 from equivalence set
debug: Found equivalence set: extended%1#7, slot_contents%23#0, slot_contents%24#0
debug: selected extended%1#7 from equivalence set
debug: Found equivalence set: updated_array%0#1, slot_contents%25#0, slot_contents%26#0, slot_contents%27#0, slot_contents%28#0, slot_contents%29#0, slot_contents%30#0
debug: selected updated_array%0#1 from equivalence set
debug: Found equivalence set: encoded%1#6, slot_contents%0#6
debug: selected encoded%1#6 from equivalence set
debug: Found equivalence set: extended%0#6, slot_contents%1#6
debug: selected extended%0#6 from equivalence set
debug: Found equivalence set: extended%1#5, slot_contents%2#6
debug: selected extended%1#5 from equivalence set
debug: Found equivalence set: extended%2#2, slot_contents%3#5
debug: selected extended%2#2 from equivalence set
debug: Found equivalence set: extended%3#0, slot_contents%5#3
debug: selected extended%3#0 from equivalence set
debug: Found equivalence set: extended%0#5, slot_contents%1#5
debug: selected extended%0#5 from equivalence set
debug: Found equivalence set: extended%1#4, slot_contents%2#5
debug: selected extended%1#4 from equivalence set
debug: Found equivalence set: extended%2#1, slot_contents%3#4
debug: selected extended%2#1 from equivalence set
debug: Found equivalence set: slot_contents%1#4, slot_contents%2#4
debug: selected slot_contents%1#4 from equivalence set
debug: Found equivalence set: extended%1#2, slot_contents%3#3, slot_contents%4#3, slot_contents%5#2, slot_contents%10#1
debug: selected extended%1#2 from equivalence set
debug: Found equivalence set: slot_contents%6#2, slot_contents%7#2, slot_contents%8#2, slot_contents%9#2
debug: selected slot_contents%6#2 from equivalence set
debug: Found equivalence set: extended%2#0, slot_contents%11#1, slot_contents%13#1, slot_contents%14#1, slot_contents%15#1, slot_contents%16#1, slot_contents%17#1
debug: selected extended%2#0 from equivalence set
debug: Found equivalence set: encoded%0#3, slot_contents%0#2
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: slot_contents%3#2, slot_contents%4#2, slot_contents%5#1, slot_contents%6#1, slot_contents%7#1, slot_contents%8#1, slot_contents%9#1
debug: selected slot_contents%3#2 from equivalence set
debug: Found equivalence set: slot_contents%10#0, slot_contents%11#0
debug: selected slot_contents%10#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, slot_contents%14#0, slot_contents%15#0, slot_contents%16#0, slot_contents%17#0
debug: selected updated_array%0#0 from equivalence set
debug: Found equivalence set: tmp%35#0, num#0
debug: selected num#0 from equivalence set
debug: Found equivalence set: slot_contents%1#1, slot_contents%2#1
debug: selected slot_contents%1#1 from equivalence set
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: selected slot_contents%1#0 from equivalence set
debug: Copy propagation made 67 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable continue_looping%3#0
debug: Removing unused variable array_head_and_tail%0#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item_offset%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item_offset%3#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@71 with block@3 in block@72
debug: Merged linear block@71 into block@3
debug: Replaced predecessor block@75 with block@74 in block@20
debug: Merged linear block@75 into block@74
debug: Replaced predecessor block@69 with block@4 in block@70
debug: Merged linear block@69 into block@4
debug: Replaced predecessor block@70 with block@4 in block@20
debug: Merged linear block@70 into block@4
debug: Replaced predecessor block@67 with block@5 in block@68
debug: Merged linear block@67 into block@5
debug: Replaced predecessor block@68 with block@5 in block@20
debug: Merged linear block@68 into block@5
debug: Replaced predecessor block@65 with block@6 in block@66
debug: Merged linear block@65 into block@6
debug: Replaced predecessor block@66 with block@6 in block@20
debug: Merged linear block@66 into block@6
debug: Replaced predecessor block@60 with block@7 in block@61
debug: Merged linear block@60 into block@7
debug: Replaced predecessor block@64 with block@63 in block@20
debug: Merged linear block@64 into block@63
debug: Replaced predecessor block@55 with block@8 in block@56
debug: Merged linear block@55 into block@8
debug: Replaced predecessor block@59 with block@58 in block@20
debug: Merged linear block@59 into block@58
debug: Replaced predecessor block@53 with block@9 in block@54
debug: Merged linear block@53 into block@9
debug: Replaced predecessor block@54 with block@9 in block@20
debug: Merged linear block@54 into block@9
debug: Replaced predecessor block@48 with block@10 in block@49
debug: Merged linear block@48 into block@10
debug: Replaced predecessor block@52 with block@51 in block@20
debug: Merged linear block@52 into block@51
debug: Replaced predecessor block@31 with block@11 in block@32
debug: Merged linear block@31 into block@11
debug: Replaced predecessor block@47 with block@46 in block@20
debug: Merged linear block@47 into block@46
debug: Replaced predecessor block@23 with block@12 in block@24
debug: Merged linear block@23 into block@12
debug: Replaced predecessor block@30 with block@29 in block@20
debug: Merged linear block@30 into block@29
debug: Replaced predecessor block@21 with block@16 in block@22
debug: Merged linear block@21 into block@16
debug: Replaced predecessor block@22 with block@16 in block@20
debug: Merged linear block@22 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%3#0, slot_contents%4#0, slot_contents%5#0
debug: selected slot_contents%3#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, slot_contents%6#0
debug: selected updated_array%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#0, slot_contents%1#0
debug: selected slot_contents%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0, slot_contents%1#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: extended%0#0, slot_contents%2#0, slot_contents%3#0, slot_contents%4#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: slot_contents%5#0, slot_contents%6#0, slot_contents%7#0
debug: selected slot_contents%5#0 from equivalence set
debug: Found equivalence set: slot_contents%8#0, slot_contents%9#0, slot_contents%10#0, slot_contents%11#0
debug: selected slot_contents%8#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%12#0, slot_contents%13#0, slot_contents%14#0, slot_contents%15#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: slot_contents%16#0, slot_contents%17#0, slot_contents%18#0, slot_contents%19#0
debug: selected slot_contents%16#0 from equivalence set
debug: Found equivalence set: extended%2#0, slot_contents%20#0, slot_contents%21#0, slot_contents%22#0, slot_contents%0#2
debug: selected extended%2#0 from equivalence set
debug: Found equivalence set: extended%0#1, slot_contents%1#1
debug: selected extended%0#1 from equivalence set
debug: Found equivalence set: extended%1#1, slot_contents%23#0, slot_contents%24#0
debug: selected extended%1#1 from equivalence set
debug: Found equivalence set: updated_array%0#0, slot_contents%25#0, slot_contents%26#0, slot_contents%27#0, slot_contents%28#0, slot_contents%29#0, slot_contents%30#0
debug: selected updated_array%0#0 from equivalence set
debug: Copy propagation made 30 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%1#0, slot_contents%0#0
debug: selected encoded%1#0 from equivalence set
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%2#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: extended%2#0, slot_contents%3#0
debug: selected extended%2#0 from equivalence set
debug: Found equivalence set: extended%3#0, slot_contents%5#0
debug: selected extended%3#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%2#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: extended%2#0, slot_contents%3#0
debug: selected extended%2#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: selected slot_contents%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: extended%1#0, slot_contents%3#0, slot_contents%4#0, slot_contents%5#0, slot_contents%10#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: slot_contents%6#0, slot_contents%7#0, slot_contents%8#0, slot_contents%9#0
debug: selected slot_contents%6#0 from equivalence set
debug: Found equivalence set: extended%2#0, slot_contents%11#0, slot_contents%13#0, slot_contents%14#0, slot_contents%15#0, slot_contents%16#0, slot_contents%17#0
debug: selected extended%2#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: slot_contents%3#0, slot_contents%4#0, slot_contents%5#0, slot_contents%6#0, slot_contents%7#0, slot_contents%8#0, slot_contents%9#0
debug: selected slot_contents%3#0 from equivalence set
debug: Found equivalence set: slot_contents%10#0, slot_contents%11#0
debug: selected slot_contents%10#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, slot_contents%14#0, slot_contents%15#0, slot_contents%16#0, slot_contents%17#0
debug: selected updated_array%0#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: selected slot_contents%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%3#0
debug: Removing unused variable array_head_and_tail%0#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item_offset%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%1#0, slot_contents%2#0
debug: selected slot_contents%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.uint64.Contract
debug: lowering array IR nodes in clear program of test_cases.array.uint64.Contract
debug: optimizing approval program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_len%0#1, tmp%0#9
debug: selected array%array_len%0#1 from equivalence set
debug: Found equivalence set: array%data%0#1, encoded%1#7
debug: selected array%data%0#1 from equivalence set
debug: Found equivalence set: array%array_contents%0#1, extended%0#7
debug: selected array%array_contents%0#1 from equivalence set
debug: Found equivalence set: array%array_len%1#1, tmp%2#5
debug: selected array%array_len%1#1 from equivalence set
debug: Found equivalence set: array%array_len%2#1, tmp%4#5
debug: selected array%array_len%2#1 from equivalence set
debug: Found equivalence set: array%sub_item%2#1, tmp%6#5
debug: selected array%sub_item%2#1 from equivalence set
debug: Found equivalence set: array%array_len%3#1, tmp%8#4
debug: selected array%array_len%3#1 from equivalence set
debug: Found equivalence set: array%array_len%4#1, tmp%10#4
debug: selected array%array_len%4#1 from equivalence set
debug: Found equivalence set: array%sub_item%4#1, tmp%12#3
debug: selected array%sub_item%4#1 from equivalence set
debug: Found equivalence set: array%array_contents%1#1, new_contents%0#0
debug: selected array%array_contents%1#1 from equivalence set
debug: Found equivalence set: array%sub_item%6#1, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: array%array_len%5#1, tmp%14#3
debug: selected array%array_len%5#1 from equivalence set
debug: Found equivalence set: array%array_len%6#1, tmp%16#3
debug: selected array%array_len%6#1 from equivalence set
debug: Found equivalence set: array%sub_item%8#1, tmp%18#3
debug: selected array%sub_item%8#1 from equivalence set
debug: Found equivalence set: array%data%1#1, encoded%2#5
debug: selected array%data%1#1 from equivalence set
debug: Found equivalence set: array%array_contents%2#1, extended%1#6
debug: selected array%array_contents%2#1 from equivalence set
debug: Found equivalence set: array%array_len%7#1, tmp%20#3
debug: selected array%array_len%7#1 from equivalence set
debug: Found equivalence set: array%array_len%8#1, tmp%22#3
debug: selected array%array_len%8#1 from equivalence set
debug: Found equivalence set: array%sub_item%11#1, tmp%24#3
debug: selected array%sub_item%11#1 from equivalence set
debug: Found equivalence set: array%sub_item%13#1, tmp%26#2
debug: selected array%sub_item%13#1 from equivalence set
debug: Found equivalence set: array%array_len%9#1, tmp%28#1
debug: selected array%array_len%9#1 from equivalence set
debug: Found equivalence set: array%array_len%10#1, tmp%30#1
debug: selected array%array_len%10#1 from equivalence set
debug: Found equivalence set: array%sub_item%15#1, tmp%32#1
debug: selected array%sub_item%15#1 from equivalence set
debug: Found equivalence set: array%data%2#1, encoded%3#3
debug: selected array%data%2#1 from equivalence set
debug: Found equivalence set: array%array_contents%3#1, extended%2#3
debug: selected array%array_contents%3#1 from equivalence set
debug: Found equivalence set: array%array_len%11#1, tmp%34#1
debug: selected array%array_len%11#1 from equivalence set
debug: Found equivalence set: array%array_len%12#1, tmp%36#1
debug: selected array%array_len%12#1 from equivalence set
debug: Found equivalence set: array%sub_item%18#1, tmp%38#1
debug: selected array%sub_item%18#1 from equivalence set
debug: Found equivalence set: array%data%3#1, encoded%0#9
debug: selected array%data%3#1 from equivalence set
debug: Found equivalence set: array%array_contents%4#1, extended%0#8
debug: selected array%array_contents%4#1 from equivalence set
debug: Found equivalence set: array%data%4#1, encoded%1#8
debug: selected array%data%4#1 from equivalence set
debug: Found equivalence set: array%array_contents%5#1, extended%1#7
debug: selected array%array_contents%5#1 from equivalence set
debug: Found equivalence set: array%sub_item%22#1, tmp%41#1
debug: selected array%sub_item%22#1 from equivalence set
debug: Found equivalence set: array%updated_array%0#1, updated_array%0#1
debug: selected array%updated_array%0#1 from equivalence set
debug: Found equivalence set: array%array_len%13#1, tmp%42#1
debug: selected array%array_len%13#1 from equivalence set
debug: Found equivalence set: array%sub_item%25#1, tmp%44#1
debug: selected array%sub_item%25#1 from equivalence set
debug: Found equivalence set: array%array_len%14#1, tmp%46#1
debug: selected array%array_len%14#1 from equivalence set
debug: Found equivalence set: array%sub_item%27#1, tmp%48#0
debug: selected array%sub_item%27#1 from equivalence set
debug: Found equivalence set: array%array_len%15#1, tmp%50#0
debug: selected array%array_len%15#1 from equivalence set
debug: Found equivalence set: array%sub_item%29#1, tmp%52#0
debug: selected array%sub_item%29#1 from equivalence set
debug: Found equivalence set: array%data%5#1, encoded%2#4
debug: selected array%data%5#1 from equivalence set
debug: Found equivalence set: array%array_contents%6#1, extended%0#6
debug: selected array%array_contents%6#1 from equivalence set
debug: Found equivalence set: array%data%6#1, encoded%3#2
debug: selected array%data%6#1 from equivalence set
debug: Found equivalence set: array%array_contents%7#1, extended%1#5
debug: selected array%array_contents%7#1 from equivalence set
debug: Found equivalence set: array%data%7#1, encoded%4#1
debug: selected array%data%7#1 from equivalence set
debug: Found equivalence set: array%array_contents%8#1, extended%2#2
debug: selected array%array_contents%8#1 from equivalence set
debug: Found equivalence set: array%array_contents%9#1, extended%3#0
debug: selected array%array_contents%9#1 from equivalence set
debug: Found equivalence set: array%array_len%16#1, tmp%0#8
debug: selected array%array_len%16#1 from equivalence set
debug: Found equivalence set: array%data%8#1, encoded%1#5
debug: selected array%data%8#1 from equivalence set
debug: Found equivalence set: array%array_contents%10#1, extended%0#5
debug: selected array%array_contents%10#1 from equivalence set
debug: Found equivalence set: array%data%9#1, encoded%2#3
debug: selected array%data%9#1 from equivalence set
debug: Found equivalence set: array%array_contents%11#1, extended%1#4
debug: selected array%array_contents%11#1 from equivalence set
debug: Found equivalence set: array%data%10#1, encoded%3#1
debug: selected array%data%10#1 from equivalence set
debug: Found equivalence set: array%array_contents%12#1, extended%2#1
debug: selected array%array_contents%12#1 from equivalence set
debug: Found equivalence set: array%array_len%17#1, tmp%0#7
debug: selected array%array_len%17#1 from equivalence set
debug: Found equivalence set: array%data%11#1, encoded%1#4
debug: selected array%data%11#1 from equivalence set
debug: Found equivalence set: array%array_contents%13#1, extended%0#4
debug: selected array%array_contents%13#1 from equivalence set
debug: Found equivalence set: array%array_len%18#1, tmp%0#6
debug: selected array%array_len%18#1 from equivalence set
debug: Found equivalence set: array%data%12#1, encoded%2#2
debug: selected array%data%12#1 from equivalence set
debug: Found equivalence set: array%array_contents%14#1, extended%1#3
debug: selected array%array_contents%14#1 from equivalence set
debug: Found equivalence set: array%data%13#1, encoded%1#3
debug: selected array%data%13#1 from equivalence set
debug: Found equivalence set: array%array_contents%15#1, extended%0#3
debug: selected array%array_contents%15#1 from equivalence set
debug: Found equivalence set: array%data%14#1, encoded%2#1
debug: selected array%data%14#1 from equivalence set
debug: Found equivalence set: array%array_contents%16#1, extended%1#2
debug: selected array%array_contents%16#1 from equivalence set
debug: Found equivalence set: array%array_len%19#1, tmp%0#5
debug: selected array%array_len%19#1 from equivalence set
debug: Found equivalence set: array%array_len%20#1, tmp%2#4
debug: selected array%array_len%20#1 from equivalence set
debug: Found equivalence set: array%sub_item%41#1, tmp%4#4
debug: selected array%sub_item%41#1 from equivalence set
debug: Found equivalence set: array%array_len%21#1, tmp%6#4
debug: selected array%array_len%21#1 from equivalence set
debug: Found equivalence set: array%array_len%22#1, tmp%8#3
debug: selected array%array_len%22#1 from equivalence set
debug: Found equivalence set: array%sub_item%43#1, tmp%10#3
debug: selected array%sub_item%43#1 from equivalence set
debug: Found equivalence set: array%array_contents%17#1, extended%2#0
debug: selected array%array_contents%17#1 from equivalence set
debug: Found equivalence set: array%array_len%23#1, tmp%12#2
debug: selected array%array_len%23#1 from equivalence set
debug: Found equivalence set: array%array_len%24#1, tmp%14#2
debug: selected array%array_len%24#1 from equivalence set
debug: Found equivalence set: array%array_len%25#1, tmp%16#2
debug: selected array%array_len%25#1 from equivalence set
debug: Found equivalence set: array%sub_item%45#1, tmp%18#2
debug: selected array%sub_item%45#1 from equivalence set
debug: Found equivalence set: array%sub_item%47#1, tmp%20#2
debug: selected array%sub_item%47#1 from equivalence set
debug: Found equivalence set: array%sub_item%49#1, tmp%22#2
debug: selected array%sub_item%49#1 from equivalence set
debug: Found equivalence set: array%sub_item%51#1, tmp%24#2
debug: selected array%sub_item%51#1 from equivalence set
debug: Found equivalence set: array%data%15#1, encoded%1#2
debug: selected array%data%15#1 from equivalence set
debug: Found equivalence set: array%array_contents%18#1, extended%0#2
debug: selected array%array_contents%18#1 from equivalence set
debug: Found equivalence set: array%array_contents%19#1, extended%1#1
debug: selected array%array_contents%19#1 from equivalence set
debug: Found equivalence set: array%array_len%26#1, tmp%2#3
debug: selected array%array_len%26#1 from equivalence set
debug: Found equivalence set: array%sub_item%54#1, tmp%4#3
debug: selected array%sub_item%54#1 from equivalence set
debug: Found equivalence set: array%sub_item%56#1, tmp%6#3
debug: selected array%sub_item%56#1 from equivalence set
debug: Found equivalence set: array%sub_item%58#1, tmp%8#2
debug: selected array%sub_item%58#1 from equivalence set
debug: Found equivalence set: array%sub_item%60#1, tmp%10#2
debug: selected array%sub_item%60#1 from equivalence set
debug: Found equivalence set: array%sub_item%62#1, tmp%12#1
debug: selected array%sub_item%62#1 from equivalence set
debug: Found equivalence set: array%sub_item%64#1, tmp%14#1
debug: selected array%sub_item%64#1 from equivalence set
debug: Found equivalence set: array%array_len%27#1, tmp%17#1
debug: selected array%array_len%27#1 from equivalence set
debug: Found equivalence set: array%sub_item%66#1, index%0#0
debug: selected array%sub_item%66#1 from equivalence set
debug: Found equivalence set: array%sub_item%68#1, new_box_value%0#0
debug: selected array%sub_item%68#1 from equivalence set
debug: Found equivalence set: array%updated_array%1#1, updated_array%0#0
debug: selected array%updated_array%1#1 from equivalence set
debug: Found equivalence set: array%array_len%28#1, tmp%20#1
debug: selected array%array_len%28#1 from equivalence set
debug: Found equivalence set: array%sub_item%71#1, tmp%22#1
debug: selected array%sub_item%71#1 from equivalence set
debug: Found equivalence set: array%sub_item%73#1, tmp%24#1
debug: selected array%sub_item%73#1 from equivalence set
debug: Found equivalence set: array%sub_item%75#1, tmp%26#1
debug: selected array%sub_item%75#1 from equivalence set
debug: Found equivalence set: array%data%16#1, encoded%1#1
debug: selected array%data%16#1 from equivalence set
debug: Found equivalence set: array%array_contents%20#1, extended%0#1
debug: selected array%array_contents%20#1 from equivalence set
debug: Found equivalence set: array%array_len%29#1, tmp%0#3
debug: selected array%array_len%29#1 from equivalence set
debug: Found equivalence set: array%array_len%30#1, array_length%0#1
debug: selected array%array_len%30#1 from equivalence set
debug: Found equivalence set: array%sub_item%78#1, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: array%array_len%31#1, array_length%1#0
debug: selected array%array_len%31#1 from equivalence set
debug: Found equivalence set: array%sub_item%80#1, value#2
debug: selected value#2 from equivalence set
debug: Found equivalence set: array%array_len%32#1, array_length%2#0
debug: selected array%array_len%32#1 from equivalence set
debug: Found equivalence set: array%sub_item%82#1, value#3
debug: selected value#3 from equivalence set
debug: Found equivalence set: array%data%17#1, encoded%3#0
debug: selected array%data%17#1 from equivalence set
debug: Found equivalence set: array%data%18#1, encoded%4#0
debug: selected array%data%18#1 from equivalence set
debug: Found equivalence set: array%array_contents%21#1, extended%1#0
debug: selected array%array_contents%21#1 from equivalence set
debug: Found equivalence set: array%data%19#1, encoded%1#0
debug: selected array%data%19#1 from equivalence set
debug: Found equivalence set: array%array_contents%22#1, extended%0#0
debug: selected array%array_contents%22#1 from equivalence set
debug: Found equivalence set: array%array_len%33#1, tmp%2#1
debug: selected array%array_len%33#1 from equivalence set
debug: Found equivalence set: array%array_len%34#1, tmp%4#1
debug: selected array%array_len%34#1 from equivalence set
debug: Found equivalence set: array%array_len%35#1, array_length%0#0
debug: selected array%array_len%35#1 from equivalence set
debug: Found equivalence set: array%sub_item%85#1, value#0
debug: selected value#0 from equivalence set
debug: Copy propagation made 148 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#8
debug: Removing unused variable encoded%0#7
debug: Removing unused variable encoded%1#6
debug: Removing unused variable encoded%0#6
debug: Removing unused variable encoded%0#5
debug: Removing unused variable encoded%0#4
debug: Removing unused variable encoded%0#3
debug: Removing unused variable encoded%0#2
debug: Removing unused variable encoded%0#1
debug: Removing unused variable encoded%2#0
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) // on error: max array length exceeded to array%sub_item%0#1
debug: Simplified (len array%sub_item%0#1) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (len array%sub_item%0#1) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (- 1u 1u) to 0u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array%sub_item%0#1 0u 8u) to 0x000000000000002a
debug: Simplified (extract3 0x000000000000002a 0u 8u) to 0x000000000000002a
debug: Simplified (btoi 0x000000000000002a) to 42u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (btoi array%sub_item%3#1) to (extract_uint64 array%value%1#1 0u)
debug: Simplified (btoi array%sub_item%5#1) to (extract_uint64 array%value%2#1 0u)
debug: Simplified (btoi array%sub_item%7#1) to (extract_uint64 array%value%3#1 0u)
debug: Simplified (concat 0x array%sub_item%9#1) to array%sub_item%9#1
debug: Simplified (concat 0x array%sub_item%9#1) to array%sub_item%9#1
debug: Simplified (btoi array%sub_item%10#1) to (extract_uint64 array%value%4#1 0u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi array%sub_item%12#1) to (extract_uint64 array%value%5#1 0u)
debug: Simplified (btoi array%sub_item%14#1) to (extract_uint64 array%value%6#1 0u)
debug: Simplified (concat 0x array%sub_item%16#1) to array%sub_item%16#1
debug: Simplified (concat 0x array%sub_item%16#1) to array%sub_item%16#1
debug: Simplified (btoi array%sub_item%17#1) to (extract_uint64 array%value%7#1 0u)
debug: Simplified (concat 0x array%sub_item%19#1) to array%sub_item%19#1
debug: Simplified (concat 0x array%sub_item%19#1) to array%sub_item%19#1
debug: Simplified (concat 0x array%sub_item%20#1) to array%sub_item%20#1
debug: Simplified (concat 0x array%sub_item%20#1) to array%sub_item%20#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi array%sub_item%21#1) to (extract_uint64 array%value%8#1 0u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (concat 0x array%sub_item%23#1) to array%sub_item%23#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi array%sub_item%24#1) to (extract_uint64 array%value%9#1 0u)
debug: Simplified (btoi array%sub_item%26#1) to (extract_uint64 array%value%10#1 0u)
debug: Simplified (btoi array%sub_item%28#1) to (extract_uint64 array%value%11#1 0u)
debug: Simplified (concat 0x array%sub_item%30#1) to array%sub_item%30#1
debug: Simplified (concat 0x array%sub_item%30#1) to array%sub_item%30#1
debug: Simplified (concat 0x array%sub_item%30#1) // on error: max array length exceeded to array%sub_item%30#1
debug: Simplified (concat 0x array%sub_item%31#1) to array%sub_item%31#1
debug: Simplified (concat 0x array%sub_item%31#1) to array%sub_item%31#1
debug: Simplified (concat array%sub_item%30#1 array%sub_item%31#1) // on error: max array length exceeded to 0x00000000000000010000000000000002
debug: Simplified (concat 0x array%sub_item%32#1) to array%sub_item%32#1
debug: Simplified (concat 0x array%sub_item%32#1) to array%sub_item%32#1
debug: Simplified (concat 0x00000000000000010000000000000002 array%sub_item%32#1) // on error: max array length exceeded to 0x000000000000000100000000000000020000000000000003
debug: Simplified (concat 0x array%sub_item%33#1) to array%sub_item%33#1
debug: Simplified (concat 0x array%sub_item%33#1) to array%sub_item%33#1
debug: Simplified (concat 0x array%sub_item%34#1) to array%sub_item%34#1
debug: Simplified (concat 0x array%sub_item%34#1) to array%sub_item%34#1
debug: Simplified (concat 0x array%sub_item%35#1) to array%sub_item%35#1
debug: Simplified (concat 0x array%sub_item%35#1) to array%sub_item%35#1
debug: Simplified (concat 0x array%sub_item%36#1) to array%sub_item%36#1
debug: Simplified (concat 0x array%sub_item%36#1) to array%sub_item%36#1
debug: Simplified (concat 0x array%sub_item%37#1) to array%sub_item%37#1
debug: Simplified (concat 0x array%sub_item%37#1) to array%sub_item%37#1
debug: Simplified (concat 0x array%sub_item%38#1) to array%sub_item%38#1
debug: Simplified (concat 0x array%sub_item%38#1) to array%sub_item%38#1
debug: Simplified (concat 0x array%sub_item%39#1) to array%sub_item%39#1
debug: Simplified (concat 0x array%sub_item%39#1) to array%sub_item%39#1
debug: Simplified (btoi array%sub_item%40#1) to (extract_uint64 array%value%12#1 0u)
debug: Simplified (btoi array%sub_item%42#1) to (extract_uint64 array%value%13#1 0u)
debug: Simplified (btoi array%sub_item%44#1) to (extract_uint64 array%value%14#1 0u)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (btoi array%sub_item%46#1) to (extract_uint64 array%value%15#1 0u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (btoi array%sub_item%48#1) to (extract_uint64 array%value%16#1 0u)
debug: Simplified (* 6u 8u) to 48u
debug: Simplified (btoi array%sub_item%50#1) to (extract_uint64 array%value%17#1 0u)
debug: Simplified (concat 0x array%sub_item%52#1) to array%sub_item%52#1
debug: Simplified (concat 0x array%sub_item%52#1) to array%sub_item%52#1
debug: Simplified (concat 0x array%sub_item%52#1) // on error: max array length exceeded to array%sub_item%52#1
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi array%sub_item%53#1) to (extract_uint64 array%value%18#1 0u)
debug: Simplified (* 1u 8u) to 8u
debug: Simplified (btoi array%sub_item%55#1) to (extract_uint64 array%value%19#1 0u)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (btoi array%sub_item%57#1) to (extract_uint64 array%value%20#1 0u)
debug: Simplified (* 3u 8u) to 24u
debug: Simplified (btoi array%sub_item%59#1) to (extract_uint64 array%value%21#1 0u)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (btoi array%sub_item%61#1) to (extract_uint64 array%value%22#1 0u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (btoi array%sub_item%63#1) to (extract_uint64 array%value%23#1 0u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi array%sub_item%65#1) to (extract_uint64 array%value%24#1 0u)
debug: Simplified (btoi array%sub_item%67#1) to (extract_uint64 array%value%25#1 0u)
debug: Simplified (concat 0x array%sub_item%69#1) to array%sub_item%69#1
debug: Simplified (* 6u 8u) to 48u
debug: Simplified (btoi array%sub_item%70#1) to (extract_uint64 array%value%26#1 0u)
debug: Simplified (* 7u 8u) to 56u
debug: Simplified (btoi array%sub_item%72#1) to (extract_uint64 array%value%27#1 0u)
debug: Simplified (* 3u 8u) to 24u
debug: Simplified (btoi array%sub_item%74#1) to (extract_uint64 array%value%28#1 0u)
debug: Simplified (concat 0x array%sub_item%76#1) to array%sub_item%76#1
debug: Simplified (concat 0x array%sub_item%76#1) to array%sub_item%76#1
debug: Simplified (btoi array%sub_item%77#1) to (extract_uint64 array%value%29#1 0u)
debug: Simplified (btoi array%sub_item%79#1) to (extract_uint64 array%value%30#1 0u)
debug: Simplified (btoi array%sub_item%81#1) to (extract_uint64 array%value%31#1 0u)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (concat 0x array%sub_item%83#1) to array%sub_item%83#1
debug: Simplified (concat 0x array%sub_item%83#1) to array%sub_item%83#1
debug: Simplified (btoi array%sub_item%84#1) to (extract_uint64 array%value%32#1 0u)
debug: Simplified (extract3 array%value%1#1 0u 8u) to ((extract 0 8) array%value%1#1)
debug: Simplified (extract3 array%value%2#1 0u 8u) to ((extract 0 8) array%value%2#1)
debug: Simplified (extract3 array%value%3#1 0u 8u) to ((extract 0 8) array%value%3#1)
debug: Simplified (extract3 array%value%4#1 0u 8u) to ((extract 0 8) array%value%4#1)
debug: Simplified (extract3 array%array_contents%2#1 0u 8u) to ((extract 0 8) array%array_contents%2#1)
debug: Simplified (extract3 array%value%5#1 0u 8u) to ((extract 0 8) array%value%5#1)
debug: Simplified (extract3 array%value%6#1 0u 8u) to ((extract 0 8) array%value%6#1)
debug: Simplified (extract3 array%value%7#1 0u 8u) to ((extract 0 8) array%value%7#1)
debug: Simplified (extract3 array%array_contents%5#1 0u 8u) to ((extract 0 8) array%array_contents%5#1)
debug: Simplified (extract3 array%value%8#1 0u 8u) to ((extract 0 8) array%value%8#1)
debug: Simplified (replace3 array%array_contents%5#1 0u array%sub_item%23#1) to ((replace2 0) array%array_contents%5#1 array%sub_item%23#1)
debug: Simplified (extract3 array%updated_array%0#1 0u 8u) to ((extract 0 8) array%updated_array%0#1)
debug: Simplified (extract3 array%value%9#1 0u 8u) to ((extract 0 8) array%value%9#1)
debug: Simplified (extract3 array%value%10#1 0u 8u) to ((extract 0 8) array%value%10#1)
debug: Simplified (extract3 array%value%11#1 0u 8u) to ((extract 0 8) array%value%11#1)
debug: Simplified (extract3 array%value%12#1 0u 8u) to ((extract 0 8) array%value%12#1)
debug: Simplified (extract3 array%value%13#1 0u 8u) to ((extract 0 8) array%value%13#1)
debug: Simplified (extract3 array%value%14#1 0u 8u) to ((extract 0 8) array%value%14#1)
debug: Simplified (extract3 array%array_contents%17#1 32u 8u) to ((extract 32 8) array%array_contents%17#1)
debug: Simplified (extract3 array%value%15#1 0u 8u) to ((extract 0 8) array%value%15#1)
debug: Simplified (extract3 array%array_contents%17#1 40u 8u) to ((extract 40 8) array%array_contents%17#1)
debug: Simplified (extract3 array%value%16#1 0u 8u) to ((extract 0 8) array%value%16#1)
debug: Simplified (extract3 array%array_contents%17#1 48u 8u) to ((extract 48 8) array%array_contents%17#1)
debug: Simplified (extract3 array%value%17#1 0u 8u) to ((extract 0 8) array%value%17#1)
debug: Simplified (extract3 slot_contents%3#2 0u 8u) to ((extract 0 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%18#1 0u 8u) to ((extract 0 8) array%value%18#1)
debug: Simplified (extract3 slot_contents%3#2 8u 8u) to ((extract 8 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%19#1 0u 8u) to ((extract 0 8) array%value%19#1)
debug: Simplified (extract3 slot_contents%3#2 16u 8u) to ((extract 16 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%20#1 0u 8u) to ((extract 0 8) array%value%20#1)
debug: Simplified (extract3 slot_contents%3#2 24u 8u) to ((extract 24 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%21#1 0u 8u) to ((extract 0 8) array%value%21#1)
debug: Simplified (extract3 slot_contents%3#2 32u 8u) to ((extract 32 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%22#1 0u 8u) to ((extract 0 8) array%value%22#1)
debug: Simplified (extract3 slot_contents%3#2 40u 8u) to ((extract 40 8) slot_contents%3#2)
debug: Simplified (extract3 array%value%23#1 0u 8u) to ((extract 0 8) array%value%23#1)
debug: Simplified (extract3 slot_contents%12#0 0u 8u) to ((extract 0 8) slot_contents%12#0)
debug: Simplified (extract3 array%value%24#1 0u 8u) to ((extract 0 8) array%value%24#1)
debug: Simplified (extract3 array%value%25#1 0u 8u) to ((extract 0 8) array%value%25#1)
debug: Simplified (extract3 array%updated_array%1#1 48u 8u) to ((extract 48 8) array%updated_array%1#1)
debug: Simplified (extract3 array%value%26#1 0u 8u) to ((extract 0 8) array%value%26#1)
debug: Simplified (extract3 array%updated_array%1#1 56u 8u) to ((extract 56 8) array%updated_array%1#1)
debug: Simplified (extract3 array%value%27#1 0u 8u) to ((extract 0 8) array%value%27#1)
debug: Simplified (extract3 array%updated_array%1#1 24u 8u) to ((extract 24 8) array%updated_array%1#1)
debug: Simplified (extract3 array%value%28#1 0u 8u) to ((extract 0 8) array%value%28#1)
debug: Simplified (extract3 array%value%29#1 0u 8u) to ((extract 0 8) array%value%29#1)
debug: Simplified (extract3 array%value%30#1 0u 8u) to ((extract 0 8) array%value%30#1)
debug: Simplified (extract3 array%value%31#1 0u 8u) to ((extract 0 8) array%value%31#1)
debug: Simplified (extract3 array%value%32#1 0u 8u) to ((extract 0 8) array%value%32#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_len%4#1: uint64 = (len slot_contents%5#4) with copy of existing registers (Register(source_location=array/uint64.py:15:15-25, ir_type=uint64, name='array%bytes_len%3', version=1),)
debug: Replacing redundant declaration let array%bytes_len%6#1: uint64 = (len slot_contents%8#3) with copy of existing registers (Register(source_location=array/uint64.py:19:15-25, ir_type=uint64, name='array%bytes_len%5', version=1),)
debug: Replacing redundant declaration let array%bytes_len%8#1: uint64 = (len array%array_contents%2#1) with copy of existing registers (Register(source_location=array/uint64.py:23:15-25, ir_type=uint64, name='array%bytes_len%7', version=1),)
debug: Replacing redundant declaration let array%bytes_len%10#1: uint64 = (len slot_contents%16#2) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='array%bytes_len%9', version=1),)
debug: Replacing redundant declaration let array%bytes_len%12#1: uint64 = (len array%array_contents%3#1) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='array%bytes_len%11', version=1),)
debug: Replacing redundant declaration let array%bytes_len%14#1: uint64 = (len array%updated_array%0#1) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%bytes_len%13', version=1),)
debug: Replacing redundant declaration let array%bytes_len%15#1: uint64 = (len array%updated_array%0#1) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%bytes_len%13', version=1),)
debug: Replacing redundant declaration let array%bytes_len%20#1: uint64 = (len array%array_contents%16#1) with copy of existing registers (Register(source_location=array/uint64.py:83:15-27, ir_type=uint64, name='array%bytes_len%19', version=1),)
debug: Replacing redundant declaration let array%bytes_len%22#1: uint64 = (len slot_contents%6#2) with copy of existing registers (Register(source_location=array/uint64.py:86:15-28, ir_type=uint64, name='array%bytes_len%21', version=1),)
debug: Replacing redundant declaration let array%bytes_len%25#1: uint64 = (len array%array_contents%17#1) with copy of existing registers (Register(source_location=array/uint64.py:90:15-27, ir_type=uint64, name='array%bytes_len%23', version=1),)
debug: Replacing redundant declaration let array%bytes_len%30#1: uint64 = (len slot_contents%1#1) with copy of existing registers (Register(source_location=array/uint64.py:127:15-25, ir_type=uint64, name='array%bytes_len%29', version=1),)
debug: Replacing redundant declaration let array%bytes_len%34#1: uint64 = (len slot_contents%1#0) with copy of existing registers (Register(source_location=array/uint64.py:162:15-25, ir_type=uint64, name='array%bytes_len%33', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1, array%array_contents%0#1
debug: selected array%sub_item%0#1 from equivalence set
debug: Found equivalence set: array%bytes_len%3#1, array%bytes_len%4#1
debug: selected array%bytes_len%3#1 from equivalence set
debug: Found equivalence set: array%bytes_len%5#1, array%bytes_len%6#1
debug: selected array%bytes_len%5#1 from equivalence set
debug: Found equivalence set: array%sub_item%9#1, array%encoded%1#1, array%data%1#1
debug: selected array%sub_item%9#1 from equivalence set
debug: Found equivalence set: array%bytes_len%7#1, array%bytes_len%8#1
debug: selected array%bytes_len%7#1 from equivalence set
debug: Found equivalence set: array%bytes_len%9#1, array%bytes_len%10#1
debug: selected array%bytes_len%9#1 from equivalence set
debug: Found equivalence set: array%sub_item%16#1, array%encoded%2#1, array%data%2#1
debug: selected array%sub_item%16#1 from equivalence set
debug: Found equivalence set: array%bytes_len%11#1, array%bytes_len%12#1
debug: selected array%bytes_len%11#1 from equivalence set
debug: Found equivalence set: array%sub_item%19#1, array%encoded%3#1, array%data%3#1
debug: selected array%sub_item%19#1 from equivalence set
debug: Found equivalence set: array%sub_item%20#1, array%encoded%4#1, array%data%4#1
debug: selected array%sub_item%20#1 from equivalence set
debug: Found equivalence set: array%sub_item%23#1, array%encoded%5#1
debug: selected array%sub_item%23#1 from equivalence set
debug: Found equivalence set: array%bytes_len%13#1, array%bytes_len%14#1, array%bytes_len%15#1
debug: selected array%bytes_len%13#1 from equivalence set
debug: Found equivalence set: array%sub_item%30#1, array%encoded%6#1, array%data%5#1, array%array_contents%6#1
debug: selected array%sub_item%30#1 from equivalence set
debug: Found equivalence set: array%sub_item%31#1, array%encoded%7#1, array%data%6#1
debug: selected array%sub_item%31#1 from equivalence set
debug: Found equivalence set: array%sub_item%32#1, array%encoded%8#1, array%data%7#1
debug: selected array%sub_item%32#1 from equivalence set
debug: Found equivalence set: array%sub_item%33#1, array%encoded%9#1, array%data%8#1
debug: selected array%sub_item%33#1 from equivalence set
debug: Found equivalence set: array%sub_item%34#1, array%encoded%10#1, array%data%9#1
debug: selected array%sub_item%34#1 from equivalence set
debug: Found equivalence set: array%sub_item%35#1, array%encoded%11#1, array%data%10#1
debug: selected array%sub_item%35#1 from equivalence set
debug: Found equivalence set: array%sub_item%36#1, array%encoded%12#1, array%data%11#1
debug: selected array%sub_item%36#1 from equivalence set
debug: Found equivalence set: array%sub_item%37#1, array%encoded%13#1, array%data%12#1
debug: selected array%sub_item%37#1 from equivalence set
debug: Found equivalence set: array%sub_item%38#1, array%encoded%14#1, array%data%13#1
debug: selected array%sub_item%38#1 from equivalence set
debug: Found equivalence set: array%sub_item%39#1, array%encoded%15#1, array%data%14#1
debug: selected array%sub_item%39#1 from equivalence set
debug: Found equivalence set: array%bytes_len%19#1, array%bytes_len%20#1
debug: selected array%bytes_len%19#1 from equivalence set
debug: Found equivalence set: array%bytes_len%21#1, array%bytes_len%22#1
debug: selected array%bytes_len%21#1 from equivalence set
debug: Found equivalence set: array%bytes_len%23#1, array%bytes_len%25#1
debug: selected array%bytes_len%23#1 from equivalence set
debug: Found equivalence set: array%sub_item%52#1, array%encoded%16#1, array%data%15#1, array%array_contents%18#1
debug: selected array%sub_item%52#1 from equivalence set
debug: Found equivalence set: array%sub_item%69#1, array%encoded%17#1
debug: selected array%sub_item%69#1 from equivalence set
debug: Found equivalence set: array%sub_item%76#1, array%encoded%18#1, array%data%16#1
debug: selected array%sub_item%76#1 from equivalence set
debug: Found equivalence set: array%bytes_len%29#1, array%bytes_len%30#1
debug: selected array%bytes_len%29#1 from equivalence set
debug: Found equivalence set: val_as_bytes%0#0, array%encoded%19#1, array%data%17#1, array%encoded%20#1, array%data%18#1
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: array%sub_item%83#1, array%encoded%21#1, array%data%19#1
debug: selected array%sub_item%83#1 from equivalence set
debug: Found equivalence set: array%bytes_len%33#1, array%bytes_len%34#1
debug: selected array%bytes_len%33#1 from equivalence set
debug: Copy propagation made 12 modifications
debug: Replacing redundant declaration let array%array_len%4#1: uint64 = (/ array%bytes_len%3#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:15:15-25, ir_type=uint64, name='array%array_len%3', version=1),)
debug: Replacing redundant declaration let array%array_len%6#1: uint64 = (/ array%bytes_len%5#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:19:15-25, ir_type=uint64, name='array%array_len%5', version=1),)
debug: Replacing redundant declaration let array%array_len%8#1: uint64 = (/ array%bytes_len%7#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:23:15-25, ir_type=uint64, name='array%array_len%7', version=1),)
debug: Replacing redundant declaration let array%array_len%10#1: uint64 = (/ array%bytes_len%9#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='array%array_len%9', version=1),)
debug: Replacing redundant declaration let array%array_len%12#1: uint64 = (/ array%bytes_len%11#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='array%array_len%11', version=1),)
debug: Replacing redundant declaration let array%array_len%14#1: uint64 = (/ array%bytes_len%13#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%array_len%13', version=1),)
debug: Replacing redundant declaration let array%array_len%15#1: uint64 = (/ array%bytes_len%13#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:36:15-25, ir_type=uint64, name='array%array_len%13', version=1),)
debug: Replacing redundant declaration let array%array_len%20#1: uint64 = (/ array%bytes_len%19#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:83:15-27, ir_type=uint64, name='array%array_len%19', version=1),)
debug: Replacing redundant declaration let array%array_len%22#1: uint64 = (/ array%bytes_len%21#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:86:15-28, ir_type=uint64, name='array%array_len%21', version=1),)
debug: Replacing redundant declaration let array%array_len%25#1: uint64 = (/ array%bytes_len%23#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:90:15-27, ir_type=uint64, name='array%array_len%23', version=1),)
debug: Replacing redundant declaration let array%array_len%30#1: uint64 = (/ array%bytes_len%29#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:127:15-25, ir_type=uint64, name='array%array_len%29', version=1),)
debug: Replacing redundant declaration let array%array_len%34#1: uint64 = (/ array%bytes_len%33#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:162:15-25, ir_type=uint64, name='array%array_len%33', version=1),)
debug: Found equivalence set: array%array_len%3#1, array%array_len%4#1
debug: selected array%array_len%3#1 from equivalence set
debug: Found equivalence set: array%array_len%5#1, array%array_len%6#1
debug: selected array%array_len%5#1 from equivalence set
debug: Found equivalence set: array%array_len%7#1, array%array_len%8#1
debug: selected array%array_len%7#1 from equivalence set
debug: Found equivalence set: array%array_len%9#1, array%array_len%10#1
debug: selected array%array_len%9#1 from equivalence set
debug: Found equivalence set: array%array_len%11#1, array%array_len%12#1
debug: selected array%array_len%11#1 from equivalence set
debug: Found equivalence set: array%array_len%13#1, array%array_len%14#1, array%array_len%15#1
debug: selected array%array_len%13#1 from equivalence set
debug: Found equivalence set: array%array_len%19#1, array%array_len%20#1
debug: selected array%array_len%19#1 from equivalence set
debug: Found equivalence set: array%array_len%21#1, array%array_len%22#1
debug: selected array%array_len%21#1 from equivalence set
debug: Found equivalence set: array%array_len%23#1, array%array_len%25#1
debug: selected array%array_len%23#1 from equivalence set
debug: Found equivalence set: array%array_len%29#1, array%array_len%30#1
debug: selected array%array_len%29#1 from equivalence set
debug: Found equivalence set: array%array_len%33#1, array%array_len%34#1
debug: selected array%array_len%33#1 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%1#1, pivot#0
debug: selected pivot#0 from equivalence set
debug: Found equivalence set: array%sub_item%3#1, tmp%2#0
debug: selected array%sub_item%3#1 from equivalence set
debug: Found equivalence set: array%sub_item%5#1, tmp%4#0
debug: selected array%sub_item%5#1 from equivalence set
debug: Found equivalence set: array%sub_item%7#1, tmp%8#0
debug: selected array%sub_item%7#1 from equivalence set
debug: Found equivalence set: array%sub_item%9#1, tmp%9#0
debug: selected array%sub_item%9#1 from equivalence set
debug: Found equivalence set: array%updated_array%0#1, updated_array%0#0
debug: selected array%updated_array%0#1 from equivalence set
debug: Found equivalence set: array%updated_array%1#1, updated_array%1#0
debug: selected array%updated_array%1#1 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi array%sub_item%0#1) to (extract_uint64 array%value%0#1 0u)
debug: Simplified (btoi array%sub_item%2#1) to (extract_uint64 array%value%1#1 0u)
debug: Simplified (btoi array%sub_item%4#1) to (extract_uint64 array%value%2#1 0u)
debug: Simplified (btoi array%sub_item%6#1) to (extract_uint64 array%value%3#1 0u)
debug: Simplified (btoi array%sub_item%8#1) to (extract_uint64 array%value%4#1 0u)
debug: Simplified (concat 0x array%sub_item%10#1) to array%sub_item%10#1
debug: Simplified (concat 0x array%sub_item%11#1) to array%sub_item%11#1
debug: Simplified (extract3 array%value%0#1 0u 8u) to ((extract 0 8) array%value%0#1)
debug: Simplified (extract3 array%value%1#1 0u 8u) to ((extract 0 8) array%value%1#1)
debug: Simplified (extract3 array%value%2#1 0u 8u) to ((extract 0 8) array%value%2#1)
debug: Simplified (extract3 array%value%3#1 0u 8u) to ((extract 0 8) array%value%3#1)
debug: Simplified (extract3 array%value%4#1 0u 8u) to ((extract 0 8) array%value%4#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_index%5#1: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:194:52-61, ir_type=uint64, name='array%bytes_index%4', version=1),)
debug: Replacing redundant declaration let array%bytes_index%6#1: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:194:40-50, ir_type=uint64, name='array%bytes_index%3', version=1),)
debug: Replacing redundant declaration let array%bytes_index%3#1: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:186:22-32, ir_type=uint64, name='array%bytes_index%2', version=1),)
debug: Replacing redundant declaration let array%bytes_index%4#1: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:183:14-23, ir_type=uint64, name='array%bytes_index%1', version=1),)
debug: Found equivalence set: array%bytes_index%2#1, array%bytes_index%3#1, array%bytes_index%6#1
debug: selected array%bytes_index%2#1 from equivalence set
debug: Found equivalence set: array%bytes_index%1#1, array%bytes_index%4#1, array%bytes_index%5#1
debug: selected array%bytes_index%1#1 from equivalence set
debug: Found equivalence set: array%sub_item%10#1, array%encoded%0#1
debug: selected array%sub_item%10#1 from equivalence set
debug: Found equivalence set: array%sub_item%11#1, array%encoded%1#1
debug: selected array%sub_item%11#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: selected array%data%0#1 from equivalence set
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: selected array%array_contents%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%array_len%0#1, tmp%0#0
debug: selected array%array_len%0#1 from equivalence set
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: selected array%data%0#1 from equivalence set
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: selected array%array_contents%0#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%bytes_len%0#1
debug: Removing unused variable array%array_len%0#1
debug: Removing unused variable tmp%1#8
debug: Removing unused variable array%bytes_len%1#1
debug: Removing unused variable array%array_len%1#1
debug: Removing unused variable tmp%3#5
debug: Removing unused variable array%bytes_len%2#1
debug: Removing unused variable array%array_len%2#1
debug: Removing unused variable tmp%5#5
debug: Removing unused variable array%bytes_index%0#1
debug: Removing unused variable array%value%0#1
debug: Removing unused variable array%sub_item%1#1
debug: Removing unused variable array%sub_item%2#1
debug: Removing unused variable tmp%7#4
debug: Removing unused variable array%sub_item%3#1
debug: Removing unused variable array%sub_item%5#1
debug: Removing unused variable array%sub_item%7#1
debug: Removing unused variable array%sub_item%10#1
debug: Removing unused variable array%bytes_index%5#1
debug: Removing unused variable array%sub_item%12#1
debug: Removing unused variable array%sub_item%14#1
debug: Removing unused variable array%sub_item%17#1
debug: Removing unused variable array%bytes_index%8#1
debug: Removing unused variable array%sub_item%21#1
debug: Removing unused variable array%bytes_index%9#1
debug: Removing unused variable array%bytes_index%10#1
debug: Removing unused variable array%sub_item%24#1
debug: Removing unused variable array%sub_item%26#1
debug: Removing unused variable array%sub_item%28#1
debug: Removing unused variable array%sub_item%30#1
debug: Removing unused variable array%sub_item%31#1
debug: Removing unused variable array%array_contents%7#1
debug: Removing unused variable array%sub_item%32#1
debug: Removing unused variable array%array_contents%8#1
debug: Removing unused variable array%sub_item%40#1
debug: Removing unused variable array%sub_item%42#1
debug: Removing unused variable array%sub_item%44#1
debug: Removing unused variable array%bytes_index%16#1
debug: Removing unused variable array%sub_item%46#1
debug: Removing unused variable array%bytes_index%17#1
debug: Removing unused variable array%sub_item%48#1
debug: Removing unused variable array%bytes_index%18#1
debug: Removing unused variable array%sub_item%50#1
debug: Removing unused variable array%bytes_index%19#1
debug: Removing unused variable array%sub_item%53#1
debug: Removing unused variable array%bytes_index%20#1
debug: Removing unused variable array%sub_item%55#1
debug: Removing unused variable array%bytes_index%21#1
debug: Removing unused variable array%sub_item%57#1
debug: Removing unused variable array%bytes_index%22#1
debug: Removing unused variable array%sub_item%59#1
debug: Removing unused variable array%bytes_index%23#1
debug: Removing unused variable array%sub_item%61#1
debug: Removing unused variable array%bytes_index%24#1
debug: Removing unused variable array%sub_item%63#1
debug: Removing unused variable array%bytes_index%25#1
debug: Removing unused variable array%sub_item%65#1
debug: Removing unused variable array%sub_item%67#1
debug: Removing unused variable array%bytes_index%28#1
debug: Removing unused variable array%sub_item%70#1
debug: Removing unused variable array%bytes_index%29#1
debug: Removing unused variable array%sub_item%72#1
debug: Removing unused variable array%bytes_index%30#1
debug: Removing unused variable array%sub_item%74#1
debug: Removing unused variable array%sub_item%77#1
debug: Removing unused variable array%sub_item%79#1
debug: Removing unused variable array%sub_item%81#1
debug: Removing unused variable array%sub_item%84#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%0#1
debug: Removing unused variable array%sub_item%2#1
debug: Removing unused variable array%sub_item%4#1
debug: Removing unused variable array%sub_item%6#1
debug: Removing unused variable array%sub_item%8#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: selected array%sub_item%0#1 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: selected array%sub_item%0#1 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/uint64.py:45:9 debug: eliminating local static slot assigned to arr2#0
array/uint64.py:68:9 debug: eliminating local static slot assigned to array#1
array/uint64.py:77:9 debug: eliminating local static slot assigned to array#0
array/uint64.py:80:9 debug: eliminating local static slot assigned to array2#0
array/uint64.py:124:9 debug: eliminating local static slot assigned to arr#0
array/uint64.py:145:9 debug: eliminating local static slot assigned to native_arr#0
debug: Removing unused variable arr2#0
debug: Removing unused variable array#1
debug: Removing unused variable array#0
debug: Removing unused variable array2#0
debug: Removing unused variable arr#0
debug: Removing unused variable native_arr#0
array/uint64.py:174 debug: auto reserving slots in test_cases.array.uint64.quicksort_window, []
array/uint64.py:233 debug: auto reserving slots in test_cases.array.uint64.add_x, []
array/uint64.py:247 debug: auto reserving slots in test_cases.array.uint64.append_length_and_return, []
debug: Using dynamic slot allocation strategy
debug: removing local static slots in clear program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing tmp%3#0 with [tmp%3#4]
debug: Coalescing tmp%4#0 with [tmp%4#2]
debug: Coalescing tmp%5#0 with [tmp%5#2, tmp%5#1]
debug: Coalescing arr#1 with [arr#4, arr#3, arr#2]
debug: Coalescing slot_contents%5#0 with [slot_contents%5#4]
debug: Coalescing tmp%9#1 with [tmp%9#4, tmp%9#2]
debug: Coalescing tmp%11#0 with [tmp%11#3]
debug: Coalescing tmp%13#1 with [tmp%13#3, tmp%13#2]
debug: Coalescing expected#0 with [expected#5, expected#1, expected#2]
debug: Coalescing _i#0 with [_i#3, _i#8, _i#4, _i#5, _i#11, _i#1, _i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#5, continue_looping%0#4, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing slot_contents%0#0 with [slot_contents%0#8, slot_contents%0#5, slot_contents%0#4, slot_contents%0#3, slot_contents%0#1]
debug: Coalescing tmp%0#0 with [tmp%0#10, tmp%0#11]
debug: Coalescing tmp%15#1 with [tmp%15#3, tmp%15#2]
debug: Coalescing tmp%17#0 with [tmp%17#3, tmp%17#2]
debug: Coalescing tmp%19#2 with [tmp%19#3]
debug: Coalescing tmp%21#1 with [tmp%21#3, tmp%21#2]
debug: Coalescing tmp%23#0 with [tmp%23#3]
debug: Coalescing tmp%25#1 with [tmp%25#3, tmp%25#2]
debug: Coalescing tmp%27#1 with [tmp%27#2]
debug: Coalescing tmp%31#0 with [tmp%31#1]
debug: Coalescing test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 with [test_cases.array.uint64.Contract.__puya_arc4_router__%0#1, test_cases.array.uint64.Contract.__puya_arc4_router__%0#2, test_cases.array.uint64.Contract.__puya_arc4_router__%0#3, test_cases.array.uint64.Contract.__puya_arc4_router__%0#4, test_cases.array.uint64.Contract.__puya_arc4_router__%0#5, test_cases.array.uint64.Contract.__puya_arc4_router__%0#6, test_cases.array.uint64.Contract.__puya_arc4_router__%0#7, test_cases.array.uint64.Contract.__puya_arc4_router__%0#8, test_cases.array.uint64.Contract.__puya_arc4_router__%0#9, test_cases.array.uint64.Contract.__puya_arc4_router__%0#10, test_cases.array.uint64.Contract.__puya_arc4_router__%0#11]
debug: Coalescing tmp%8#0 with [tmp%8#1]
debug: Coalescing tmp%9#0 with [tmp%9#3]
debug: Coalescing slot_contents%4#0 with [slot_contents%4#4, slot_contents%4#1]
debug: Coalescing tmp%1#2 with [tmp%1#7, tmp%1#6, tmp%1#5, tmp%1#4]
debug: Coalescing i#0 with [i#6, i#11, i#7, i#8, i#3, i#14, i#4, i#5, i#17, i#1, i#2]
debug: Coalescing slot_contents%1#0 with [slot_contents%1#4, slot_contents%1#3, slot_contents%1#2, slot_contents%1#1]
debug: Coalescing slot_contents%2#2 with [slot_contents%2#3]
debug: Coalescing tmp%5#3 with [tmp%5#4]
debug: Coalescing slot_contents%6#0 with [slot_contents%6#2]
debug: Coalescing tmp%7#1 with [tmp%7#3, tmp%7#2]
debug: Coalescing tmp%11#1 with [tmp%11#2]
debug: Coalescing slot_contents%12#0 with [slot_contents%12#1]
debug: Coalescing tmp%23#1 with [tmp%23#2]
debug: Coalescing slot_contents%3#0 with [slot_contents%3#2, slot_contents%3#1]
debug: Coalescing tmp%3#1 with [tmp%3#3, tmp%3#2]
debug: Coalescing val#0 with [val#5, val#1, val#2]
debug: Coalescing last#0 with [last#2, last#7, last#3, last#9, last#5, last#11, last#1]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#3, item_index_internal%0#8, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#11, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#1]
debug: Coalescing value#0 with [value#1, value#2, value#3]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#3, item_index_internal%1#5, item_index_internal%1#10, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing reverse_index_internal%2#1 with [reverse_index_internal%2#4, reverse_index_internal%2#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#5, arc4_arr#1, arc4_arr#2]
debug: Coalescing tmp%6#1 with [tmp%6#2]
debug: Coalescing resulted in 328 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%0#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {reverse_index_internal%2#1=None, last#0=last#0, array%array_len%32#1=array%array_len%32#1}
debug: pred: {reverse_index_internal%2#1=array%array_len%32#1, last#0=last#0}
debug: ready: reverse_index_internal%2#1
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail reverse_index_internal%2#1
debug: * avail array%array_len%32#1
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#1, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=None, value#0=value#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=value#0}
debug: ready: last#0
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%1#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: Performing post-SSA optimizations at level 2
debug: Removing duplicated block block@29 and updating references to block@51
debug: Replaced predecessor block@29 with block@51 in block@20
debug: Performing SSA IR destructuring for test_cases.array.uint64.quicksort_window
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.quicksort_window using strategy RootOperandGrouping
debug: Coalescing left#1 with [left#10, left#3, left#13, left#2, left#5, left#18, left#6, left#8]
debug: Coalescing right#1 with [right#10, right#4, right#13, right#2, right#21, right#5, right#6, right#8, right#7]
debug: Coalescing resulted in 51 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.quicksort_window
debug: loc: {left#1=None, right#1=None, window_left#0=window_left#0, window_right#0=window_right#0}
debug: pred: {left#1=window_left#0, right#1=window_right#0}
debug: ready: left#1, right#1
debug: to_do: left#1, right#1
debug: * avail right#1
debug: * avail window_right#0
debug: * avail left#1
debug: * avail window_left#0
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {left#1=left#1, right#1=right#1}
debug: pred: {left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {left#1=left#1, right#1=right#1}
debug: pred: {left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: Performing post-SSA optimizations at level 2
debug: Removing jump block block@1
debug: Removing jump block block@5
debug: Removing jump block block@12
debug: Removing jump block block@14
debug: Removing jump block block@15
debug: Removing jump block block@21
debug: branching to block@1 will be replaced with block@3
debug: branching to block@5 will be replaced with block@6
debug: branching to block@12 will be replaced with block@22
debug: branching to block@14 will be replaced with block@3
debug: branching to block@15 will be replaced with block@22
debug: branching to block@21 will be replaced with block@22
debug: Performing SSA IR destructuring for test_cases.array.uint64.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.add_x using strategy RootOperandGrouping
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.add_x
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.uint64.append_length_and_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.append_length_and_return using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.append_length_and_return
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/Contract.ir/Contract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/Contract.ir/Contract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@3.ops[27]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced main_test_array_route@3.ops[29]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted main_test_array_route@3.ops[31]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced main_test_array_route@3.ops[33]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted main_test_array_route@3.ops[36]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced main_test_array_route@3.ops[38]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted main_test_array_route@3.ops[41]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_array_route@3.ops[43]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_array_route@3.ops[48]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_route@3.ops[50]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_route@3.ops[58]: 'l-store-copy array%value%1#1 0'
debug: Replaced main_test_array_route@3.ops[60]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted main_test_array_route@3.ops[63]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced main_test_array_route@3.ops[65]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted main_test_array_route@3.ops[68]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_test_array_route@3.ops[70]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_test_array_route@3.ops[18]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced main_test_array_route@3.ops[21]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted main_test_array_route@3.ops[54]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced main_test_array_route@3.ops[57]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted main_test_array_route@3.ops[21]: 'l-store-copy arr#1 1'
debug: Replaced main_test_array_route@3.ops[24]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_route@3.ops[25]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_route@3.ops[28]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_route@3.ops[15]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_route@3.ops[21]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_route@3.ops[43]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced main_test_array_route@3.ops[50]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted main_test_array_route@3.ops[34]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced main_test_array_route@3.ops[61]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted main_for_header@72.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@72.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@73.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@73.ops[4]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@73.ops[6]: 'l-store-copy array%array_bytes_length%0#1 0'
debug: Replaced main_for_body@73.ops[8]: 'v-load array%array_bytes_length%0#1' with 'l-load array%array_bytes_length%0#1'
debug: Inserted main_for_body@73.ops[11]: 'l-store-copy array%array_bytes_new_length%0#1 0'
debug: Replaced main_for_body@73.ops[13]: 'v-load array%array_bytes_new_length%0#1' with 'l-load array%array_bytes_new_length%0#1'
debug: Inserted main_for_body@73.ops[30]: 'l-store-copy array%value%2#1 0'
debug: Replaced main_for_body@73.ops[32]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted main_for_body@73.ops[42]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_for_body@73.ops[44]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_for_body@73.ops[25]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced main_for_body@73.ops[28]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted main_for_body@73.ops[36]: 'l-store-copy popped#0 0'
debug: Replaced main_for_body@73.ops[41]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted main_for_body@73.ops[43]: 'l-store-copy expected#0 1'
debug: Replaced main_for_body@73.ops[49]: 'v-load expected#0' with 'l-load expected#0'
debug: Inserted main_for_body@73.ops[14]: 'l-store-copy array%array_bytes_new_length%0#1 0'
debug: Replaced main_for_body@73.ops[20]: 'v-load array%array_bytes_new_length%0#1' with 'l-load array%array_bytes_new_length%0#1'
debug: Inserted main_for_body@73.ops[17]: 'l-store-copy array%array_new_length%0#1 1'
debug: Replaced main_for_body@73.ops[24]: 'v-load array%array_new_length%0#1' with 'l-load array%array_new_length%0#1'
debug: Inserted main_for_body@73.ops[20]: 'l-store-copy slot_contents%0#0 2'
debug: Replaced main_for_body@73.ops[30]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@73.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@73.ops[20]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@73.ops[25]: 'l-store-copy array%array_contents%1#1 2'
debug: Replaced main_for_body@73.ops[44]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted main_for_body@73.ops[1]: 'l-store-copy arr#1 0'
debug: Replaced main_for_body@73.ops[44]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@74.ops[2]: 'l-store-copy slot_contents%8#3 0'
debug: Replaced main_after_for@74.ops[4]: 'v-load slot_contents%8#3' with 'l-load slot_contents%8#3'
debug: Inserted main_after_for@74.ops[6]: 'l-store-copy array%bytes_len%5#1 0'
debug: Replaced main_after_for@74.ops[8]: 'v-load array%bytes_len%5#1' with 'l-load array%bytes_len%5#1'
debug: Inserted main_after_for@74.ops[11]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced main_after_for@74.ops[13]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted main_after_for@74.ops[16]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@74.ops[18]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@74.ops[23]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_after_for@74.ops[25]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@74.ops[33]: 'l-store-copy array%value%3#1 0'
debug: Replaced main_after_for@74.ops[35]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted main_after_for@74.ops[38]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced main_after_for@74.ops[40]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted main_after_for@74.ops[43]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_after_for@74.ops[45]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_after_for@74.ops[59]: 'l-store-copy array%bytes_len%7#1 0'
debug: Replaced main_after_for@74.ops[61]: 'v-load array%bytes_len%7#1' with 'l-load array%bytes_len%7#1'
debug: Inserted main_after_for@74.ops[64]: 'l-store-copy array%array_len%7#1 0'
debug: Replaced main_after_for@74.ops[66]: 'v-load array%array_len%7#1' with 'l-load array%array_len%7#1'
debug: Inserted main_after_for@74.ops[69]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_after_for@74.ops[71]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_after_for@74.ops[76]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_after_for@74.ops[78]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_after_for@74.ops[86]: 'l-store-copy array%value%4#1 0'
debug: Replaced main_after_for@74.ops[88]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted main_after_for@74.ops[91]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced main_after_for@74.ops[93]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted main_after_for@74.ops[96]: 'l-store-copy tmp%25#1 0'
debug: Replaced main_after_for@74.ops[98]: 'v-load tmp%25#1' with 'l-load tmp%25#1'
debug: Inserted main_after_for@74.ops[102]: 'l-store-copy array%value%5#1 0'
debug: Replaced main_after_for@74.ops[104]: 'v-load array%value%5#1' with 'l-load array%value%5#1'
debug: Inserted main_after_for@74.ops[107]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced main_after_for@74.ops[109]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted main_after_for@74.ops[112]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_after_for@74.ops[114]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_after_for@74.ops[121]: 'l-store-copy slot_contents%16#2 0'
debug: Replaced main_after_for@74.ops[123]: 'v-load slot_contents%16#2' with 'l-load slot_contents%16#2'
debug: Inserted main_after_for@74.ops[125]: 'l-store-copy array%bytes_len%9#1 0'
debug: Replaced main_after_for@74.ops[127]: 'v-load array%bytes_len%9#1' with 'l-load array%bytes_len%9#1'
debug: Inserted main_after_for@74.ops[130]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced main_after_for@74.ops[132]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted main_after_for@74.ops[135]: 'l-store-copy tmp%29#1 0'
debug: Replaced main_after_for@74.ops[137]: 'v-load tmp%29#1' with 'l-load tmp%29#1'
debug: Inserted main_after_for@74.ops[142]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_after_for@74.ops[144]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_after_for@74.ops[152]: 'l-store-copy array%value%6#1 0'
debug: Replaced main_after_for@74.ops[154]: 'v-load array%value%6#1' with 'l-load array%value%6#1'
debug: Inserted main_after_for@74.ops[157]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced main_after_for@74.ops[159]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted main_after_for@74.ops[162]: 'l-store-copy tmp%33#1 0'
debug: Replaced main_after_for@74.ops[164]: 'v-load tmp%33#1' with 'l-load tmp%33#1'
debug: Inserted main_after_for@74.ops[172]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced main_after_for@74.ops[174]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted main_after_for@74.ops[176]: 'l-store-copy array%bytes_len%11#1 0'
debug: Replaced main_after_for@74.ops[178]: 'v-load array%bytes_len%11#1' with 'l-load array%bytes_len%11#1'
debug: Inserted main_after_for@74.ops[181]: 'l-store-copy array%array_len%11#1 0'
debug: Replaced main_after_for@74.ops[183]: 'v-load array%array_len%11#1' with 'l-load array%array_len%11#1'
debug: Inserted main_after_for@74.ops[186]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_after_for@74.ops[188]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_after_for@74.ops[193]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_after_for@74.ops[195]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_after_for@74.ops[203]: 'l-store-copy array%value%7#1 0'
debug: Replaced main_after_for@74.ops[205]: 'v-load array%value%7#1' with 'l-load array%value%7#1'
debug: Inserted main_after_for@74.ops[208]: 'l-store-copy array%sub_item%18#1 0'
debug: Replaced main_after_for@74.ops[210]: 'v-load array%sub_item%18#1' with 'l-load array%sub_item%18#1'
debug: Inserted main_after_for@74.ops[213]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_after_for@74.ops[215]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_after_for@74.ops[230]: 'l-store-copy array%array_contents%5#1 0'
debug: Replaced main_after_for@74.ops[232]: 'v-load array%array_contents%5#1' with 'l-load array%array_contents%5#1'
debug: Inserted main_after_for@74.ops[234]: 'l-store-copy array%value%8#1 0'
debug: Replaced main_after_for@74.ops[236]: 'v-load array%value%8#1' with 'l-load array%value%8#1'
debug: Inserted main_after_for@74.ops[239]: 'l-store-copy array%sub_item%22#1 0'
debug: Replaced main_after_for@74.ops[241]: 'v-load array%sub_item%22#1' with 'l-load array%sub_item%22#1'
debug: Inserted main_after_for@74.ops[244]: 'l-store-copy new_box_value%0#1 0'
debug: Replaced main_after_for@74.ops[246]: 'v-load new_box_value%0#1' with 'l-load new_box_value%0#1'
debug: Inserted main_after_for@74.ops[258]: 'l-store-copy array%bytes_len%13#1 0'
debug: Replaced main_after_for@74.ops[260]: 'v-load array%bytes_len%13#1' with 'l-load array%bytes_len%13#1'
debug: Inserted main_after_for@74.ops[263]: 'l-store-copy array%array_len%13#1 0'
debug: Replaced main_after_for@74.ops[265]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted main_after_for@74.ops[268]: 'l-store-copy tmp%43#1 0'
debug: Replaced main_after_for@74.ops[270]: 'v-load tmp%43#1' with 'l-load tmp%43#1'
debug: Inserted main_after_for@74.ops[274]: 'l-store-copy array%value%9#1 0'
debug: Replaced main_after_for@74.ops[276]: 'v-load array%value%9#1' with 'l-load array%value%9#1'
debug: Inserted main_after_for@74.ops[279]: 'l-store-copy array%sub_item%25#1 0'
debug: Replaced main_after_for@74.ops[281]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted main_after_for@74.ops[284]: 'l-store-copy tmp%45#1 0'
debug: Replaced main_after_for@74.ops[286]: 'v-load tmp%45#1' with 'l-load tmp%45#1'
debug: Inserted main_after_for@74.ops[291]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_after_for@74.ops[293]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_after_for@74.ops[301]: 'l-store-copy array%value%10#1 0'
debug: Replaced main_after_for@74.ops[303]: 'v-load array%value%10#1' with 'l-load array%value%10#1'
debug: Inserted main_after_for@74.ops[306]: 'l-store-copy array%sub_item%27#1 0'
debug: Replaced main_after_for@74.ops[308]: 'v-load array%sub_item%27#1' with 'l-load array%sub_item%27#1'
debug: Inserted main_after_for@74.ops[311]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_after_for@74.ops[313]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_after_for@74.ops[318]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_after_for@74.ops[320]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_after_for@74.ops[328]: 'l-store-copy array%value%11#1 0'
debug: Replaced main_after_for@74.ops[330]: 'v-load array%value%11#1' with 'l-load array%value%11#1'
debug: Inserted main_after_for@74.ops[333]: 'l-store-copy array%sub_item%29#1 0'
debug: Replaced main_after_for@74.ops[335]: 'v-load array%sub_item%29#1' with 'l-load array%sub_item%29#1'
debug: Inserted main_after_for@74.ops[338]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_after_for@74.ops[340]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_after_for@74.ops[343]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@74.ops[345]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@74.ops[28]: 'l-store-copy array%bytes_index%3#1 0'
debug: Replaced main_after_for@74.ops[31]: 'v-load array%bytes_index%3#1' with 'l-load array%bytes_index%3#1'
debug: Inserted main_after_for@74.ops[50]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced main_after_for@74.ops[53]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted main_after_for@74.ops[55]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced main_after_for@74.ops[58]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted main_after_for@74.ops[59]: 'l-store-copy array%array_contents%2#1 1'
debug: Replaced main_after_for@74.ops[61]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted main_after_for@74.ops[85]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced main_after_for@74.ops[88]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted main_after_for@74.ops[152]: 'l-store-copy array%bytes_index%6#1 0'
debug: Replaced main_after_for@74.ops[155]: 'v-load array%bytes_index%6#1' with 'l-load array%bytes_index%6#1'
debug: Inserted main_after_for@74.ops[174]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced main_after_for@74.ops[177]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted main_after_for@74.ops[205]: 'l-store-copy array%bytes_index%7#1 0'
debug: Replaced main_after_for@74.ops[208]: 'v-load array%bytes_index%7#1' with 'l-load array%bytes_index%7#1'
debug: Inserted main_after_for@74.ops[227]: 'l-store-copy array%sub_item%19#1 0'
debug: Replaced main_after_for@74.ops[230]: 'v-load array%sub_item%19#1' with 'l-load array%sub_item%19#1'
debug: Inserted main_after_for@74.ops[235]: 'l-store-copy array%sub_item%20#1 0'
debug: Replaced main_after_for@74.ops[238]: 'v-load array%sub_item%20#1' with 'l-load array%sub_item%20#1'
debug: Inserted main_after_for@74.ops[258]: 'l-store-copy array%sub_item%23#1 0'
debug: Replaced main_after_for@74.ops[261]: 'v-load array%sub_item%23#1' with 'l-load array%sub_item%23#1'
debug: Inserted main_after_for@74.ops[263]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced main_after_for@74.ops[266]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted main_after_for@74.ops[267]: 'l-store-copy array%updated_array%0#1 1'
debug: Replaced main_after_for@74.ops[269]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted main_after_for@74.ops[309]: 'l-store-copy array%bytes_index%11#1 0'
debug: Replaced main_after_for@74.ops[312]: 'v-load array%bytes_index%11#1' with 'l-load array%bytes_index%11#1'
debug: Inserted main_after_for@74.ops[337]: 'l-store-copy array%bytes_index%12#1 0'
debug: Replaced main_after_for@74.ops[340]: 'v-load array%bytes_index%12#1' with 'l-load array%bytes_index%12#1'
debug: Inserted main_after_for@74.ops[122]: 'l-store-copy arr#1 0'
debug: Replaced main_after_for@74.ops[125]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@74.ops[233]: 'l-store-copy array%array_contents%4#1 0'
debug: Replaced main_after_for@74.ops[239]: 'v-load array%array_contents%4#1' with 'l-load array%array_contents%4#1'
debug: Inserted main_after_for@74.ops[14]: 'l-store-copy array%array_len%5#1 0'
debug: Replaced main_after_for@74.ops[21]: 'v-load array%array_len%5#1' with 'l-load array%array_len%5#1'
debug: Inserted main_after_for@74.ops[72]: 'l-store-copy array%array_len%7#1 0'
debug: Replaced main_after_for@74.ops[79]: 'v-load array%array_len%7#1' with 'l-load array%array_len%7#1'
debug: Inserted main_after_for@74.ops[141]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced main_after_for@74.ops[148]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted main_after_for@74.ops[195]: 'l-store-copy array%array_len%11#1 0'
debug: Replaced main_after_for@74.ops[202]: 'v-load array%array_len%11#1' with 'l-load array%array_len%11#1'
debug: Inserted main_after_for@74.ops[276]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced main_after_for@74.ops[292]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted main_after_for@74.ops[249]: 'l-store-copy array%array_contents%5#1 0'
debug: Replaced main_after_for@74.ops[267]: 'v-load array%array_contents%5#1' with 'l-load array%array_contents%5#1'
debug: Inserted main_after_for@74.ops[90]: 'l-store-copy array%array_contents%2#1 1'
debug: Replaced main_after_for@74.ops[108]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted main_after_for@74.ops[32]: 'l-store-copy slot_contents%8#3 1'
debug: Replaced main_after_for@74.ops[54]: 'v-load slot_contents%8#3' with 'l-load slot_contents%8#3'
debug: Inserted main_after_for@74.ops[161]: 'l-store-copy slot_contents%16#2 1'
debug: Replaced main_after_for@74.ops[183]: 'v-load slot_contents%16#2' with 'l-load slot_contents%16#2'
debug: Inserted main_after_for@74.ops[216]: 'l-store-copy array%array_contents%3#1 1'
debug: Replaced main_after_for@74.ops[238]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted main_after_for@74.ops[291]: 'l-store-copy array%array_len%13#1 1'
debug: Replaced main_after_for@74.ops[314]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted main_after_for@74.ops[5]: 'l-store-copy slot_contents%8#3 0'
debug: Replaced main_after_for@74.ops[32]: 'v-load slot_contents%8#3' with 'l-load slot_contents%8#3'
debug: Inserted main_after_for@74.ops[65]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced main_after_for@74.ops[92]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted main_after_for@74.ops[136]: 'l-store-copy slot_contents%16#2 0'
debug: Replaced main_after_for@74.ops[163]: 'v-load slot_contents%16#2' with 'l-load slot_contents%16#2'
debug: Inserted main_after_for@74.ops[192]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced main_after_for@74.ops[219]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted main_after_for@74.ops[303]: 'l-store-copy array%updated_array%0#1 1'
debug: Replaced main_after_for@74.ops[329]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted main_after_for@74.ops[320]: 'l-store-copy array%array_len%13#1 1'
debug: Replaced main_after_for@74.ops[348]: 'v-load array%array_len%13#1' with 'l-load array%array_len%13#1'
debug: Inserted main_after_for@74.ops[331]: 'l-store-copy array%updated_array%0#1 2'
debug: Replaced main_after_for@74.ops[359]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted main_after_for@74.ops[1]: 'l-store-copy arr#1 0'
debug: Replaced main_after_for@74.ops[61]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@74.ops[62]: 'l-store-copy arr#1 1'
debug: Replaced main_after_for@74.ops[129]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@74.ops[134]: 'l-store-copy arr#1 0'
debug: Replaced main_after_for@74.ops[283]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_extend_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_array_extend_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_array_extend_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_extend_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_extend_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_array_extend_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_array_extend_route@4.ops[15]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_extend_route@4.ops[17]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_extend_route@4.ops[27]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_test_array_extend_route@4.ops[29]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_test_array_extend_route@4.ops[38]: 'l-store-copy array%bytes_len%16#1 0'
debug: Replaced main_test_array_extend_route@4.ops[40]: 'v-load array%bytes_len%16#1' with 'l-load array%bytes_len%16#1'
debug: Inserted main_test_array_extend_route@4.ops[43]: 'l-store-copy array%array_len%16#1 0'
debug: Replaced main_test_array_extend_route@4.ops[45]: 'v-load array%array_len%16#1' with 'l-load array%array_len%16#1'
debug: Inserted main_test_array_extend_route@4.ops[48]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_test_array_extend_route@4.ops[50]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_test_array_extend_route@4.ops[53]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_extend_route@4.ops[55]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_extend_route@4.ops[32]: 'l-store-copy array%array_contents%9#1 0'
debug: Replaced main_test_array_extend_route@4.ops[35]: 'v-load array%array_contents%9#1' with 'l-load array%array_contents%9#1'
debug: Inserted main_test_array_extend_route@4.ops[36]: 'l-store-copy array%array_contents%9#1 1'
debug: Replaced main_test_array_extend_route@4.ops[38]: 'v-load array%array_contents%9#1' with 'l-load array%array_contents%9#1'
debug: Inserted main_test_array_extend_route@4.ops[18]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_extend_route@4.ops[21]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_extend_route@4.ops[22]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_extend_route@4.ops[27]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_extend_route@4.ops[28]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_extend_route@4.ops[37]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[15]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[17]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[28]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[30]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[53]: 'l-store-copy array%bytes_len%17#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[55]: 'v-load array%bytes_len%17#1' with 'l-load array%bytes_len%17#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[58]: 'l-store-copy array%array_len%17#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[60]: 'v-load array%array_len%17#1' with 'l-load array%array_len%17#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[63]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[65]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_test_array_multiple_append_route@5.ops[68]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[70]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[36]: 'l-store-copy array%sub_item%34#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[39]: 'v-load array%sub_item%34#1' with 'l-load array%sub_item%34#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[44]: 'l-store-copy array%sub_item%35#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[47]: 'v-load array%sub_item%35#1' with 'l-load array%sub_item%35#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[49]: 'l-store-copy array%array_contents%12#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[52]: 'v-load array%array_contents%12#1' with 'l-load array%array_contents%12#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[53]: 'l-store-copy array%array_contents%12#1 1'
debug: Replaced main_test_array_multiple_append_route@5.ops[55]: 'v-load array%array_contents%12#1' with 'l-load array%array_contents%12#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[18]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[21]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[34]: 'l-store-copy array%array_contents%10#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[40]: 'v-load array%array_contents%10#1' with 'l-load array%array_contents%10#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[43]: 'l-store-copy array%array_contents%11#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[49]: 'v-load array%array_contents%11#1' with 'l-load array%array_contents%11#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[26]: 'l-store-copy array%sub_item%33#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[33]: 'v-load array%sub_item%33#1' with 'l-load array%sub_item%33#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[22]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[29]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[30]: 'l-store-copy arr#1 1'
debug: Replaced main_test_array_multiple_append_route@5.ops[57]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_overhead_route@6.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_overhead_route@6.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_overhead_route@6.ops[5]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_overhead_route@6.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_overhead_route@6.ops[10]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_overhead_route@6.ops[12]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_overhead_route@6.ops[15]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_overhead_route@6.ops[17]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_too_long_route@7.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_array_too_long_route@7.ops[5]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[7]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_array_too_long_route@7.ops[10]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[12]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_for_header@61.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@61.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@62.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@62.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@62.ops[9]: 'l-store-copy array%array_contents%13#1 0'
debug: Replaced main_for_body@62.ops[11]: 'v-load array%array_contents%13#1' with 'l-load array%array_contents%13#1'
debug: Inserted main_for_body@62.ops[2]: 'l-store-copy array%sub_item%36#1 0'
debug: Replaced main_for_body@62.ops[8]: 'v-load array%sub_item%36#1' with 'l-load array%sub_item%36#1'
debug: Inserted main_for_body@62.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@62.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@63.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@63.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_after_for@63.ops[5]: 'l-store-copy array%bytes_len%18#1 0'
debug: Replaced main_after_for@63.ops[7]: 'v-load array%bytes_len%18#1' with 'l-load array%bytes_len%18#1'
debug: Inserted main_after_for@63.ops[10]: 'l-store-copy array%array_len%18#1 0'
debug: Replaced main_after_for@63.ops[12]: 'v-load array%array_len%18#1' with 'l-load array%array_len%18#1'
debug: Inserted main_after_for@63.ops[15]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_after_for@63.ops[17]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_after_for@63.ops[25]: 'l-store-copy array%array_contents%14#1 0'
debug: Replaced main_after_for@63.ops[27]: 'v-load array%array_contents%14#1' with 'l-load array%array_contents%14#1'
debug: Inserted main_after_for@63.ops[30]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@63.ops[32]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@63.ops[21]: 'l-store-copy array%sub_item%37#1 0'
debug: Replaced main_after_for@63.ops[24]: 'v-load array%sub_item%37#1' with 'l-load array%sub_item%37#1'
debug: Inserted main_after_for@63.ops[4]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@63.ops[24]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[5]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[7]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[10]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[12]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_for_header@56.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@56.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@57.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@57.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@57.ops[9]: 'l-store-copy array%array_contents%15#1 0'
debug: Replaced main_for_body@57.ops[11]: 'v-load array%array_contents%15#1' with 'l-load array%array_contents%15#1'
debug: Inserted main_for_body@57.ops[2]: 'l-store-copy array%sub_item%38#1 0'
debug: Replaced main_for_body@57.ops[8]: 'v-load array%sub_item%38#1' with 'l-load array%sub_item%38#1'
debug: Inserted main_for_body@57.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@57.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@58.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@58.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_after_for@58.ops[9]: 'l-store-copy slot_contents%2#2 0'
debug: Replaced main_after_for@58.ops[11]: 'v-load slot_contents%2#2' with 'l-load slot_contents%2#2'
debug: Inserted main_after_for@58.ops[14]: 'l-store-copy array%array_contents%16#1 0'
debug: Replaced main_after_for@58.ops[16]: 'v-load array%array_contents%16#1' with 'l-load array%array_contents%16#1'
debug: Inserted main_after_for@58.ops[20]: 'l-store-copy array%bytes_len%19#1 0'
debug: Replaced main_after_for@58.ops[22]: 'v-load array%bytes_len%19#1' with 'l-load array%bytes_len%19#1'
debug: Inserted main_after_for@58.ops[25]: 'l-store-copy array%array_len%19#1 0'
debug: Replaced main_after_for@58.ops[27]: 'v-load array%array_len%19#1' with 'l-load array%array_len%19#1'
debug: Inserted main_after_for@58.ops[30]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_after_for@58.ops[32]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_after_for@58.ops[37]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_after_for@58.ops[39]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_after_for@58.ops[47]: 'l-store-copy array%value%12#1 0'
debug: Replaced main_after_for@58.ops[49]: 'v-load array%value%12#1' with 'l-load array%value%12#1'
debug: Inserted main_after_for@58.ops[52]: 'l-store-copy array%sub_item%41#1 0'
debug: Replaced main_after_for@58.ops[54]: 'v-load array%sub_item%41#1' with 'l-load array%sub_item%41#1'
debug: Inserted main_after_for@58.ops[57]: 'l-store-copy tmp%5#3 0'
debug: Replaced main_after_for@58.ops[59]: 'v-load tmp%5#3' with 'l-load tmp%5#3'
debug: Inserted main_after_for@58.ops[62]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced main_after_for@58.ops[64]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted main_after_for@58.ops[66]: 'l-store-copy array%bytes_len%21#1 0'
debug: Replaced main_after_for@58.ops[68]: 'v-load array%bytes_len%21#1' with 'l-load array%bytes_len%21#1'
debug: Inserted main_after_for@58.ops[71]: 'l-store-copy array%array_len%21#1 0'
debug: Replaced main_after_for@58.ops[73]: 'v-load array%array_len%21#1' with 'l-load array%array_len%21#1'
debug: Inserted main_after_for@58.ops[76]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_after_for@58.ops[78]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_after_for@58.ops[83]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_after_for@58.ops[85]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_after_for@58.ops[93]: 'l-store-copy array%value%13#1 0'
debug: Replaced main_after_for@58.ops[95]: 'v-load array%value%13#1' with 'l-load array%value%13#1'
debug: Inserted main_after_for@58.ops[98]: 'l-store-copy array%sub_item%43#1 0'
debug: Replaced main_after_for@58.ops[100]: 'v-load array%sub_item%43#1' with 'l-load array%sub_item%43#1'
debug: Inserted main_after_for@58.ops[103]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_after_for@58.ops[105]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@58.ops[110]: 'l-store-copy array%array_contents%17#1 0'
debug: Replaced main_after_for@58.ops[112]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[116]: 'l-store-copy array%bytes_len%23#1 0'
debug: Replaced main_after_for@58.ops[118]: 'v-load array%bytes_len%23#1' with 'l-load array%bytes_len%23#1'
debug: Inserted main_after_for@58.ops[121]: 'l-store-copy array%array_len%23#1 0'
debug: Replaced main_after_for@58.ops[123]: 'v-load array%array_len%23#1' with 'l-load array%array_len%23#1'
debug: Inserted main_after_for@58.ops[126]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_after_for@58.ops[128]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_after_for@58.ops[131]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced main_after_for@58.ops[133]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted main_after_for@58.ops[135]: 'l-store-copy array%bytes_len%24#1 0'
debug: Replaced main_after_for@58.ops[137]: 'v-load array%bytes_len%24#1' with 'l-load array%bytes_len%24#1'
debug: Inserted main_after_for@58.ops[140]: 'l-store-copy array%array_len%24#1 0'
debug: Replaced main_after_for@58.ops[142]: 'v-load array%array_len%24#1' with 'l-load array%array_len%24#1'
debug: Inserted main_after_for@58.ops[145]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@58.ops[147]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@58.ops[152]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_after_for@58.ops[154]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@58.ops[162]: 'l-store-copy array%value%14#1 0'
debug: Replaced main_after_for@58.ops[164]: 'v-load array%value%14#1' with 'l-load array%value%14#1'
debug: Inserted main_after_for@58.ops[167]: 'l-store-copy array%sub_item%45#1 0'
debug: Replaced main_after_for@58.ops[169]: 'v-load array%sub_item%45#1' with 'l-load array%sub_item%45#1'
debug: Inserted main_after_for@58.ops[172]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_after_for@58.ops[174]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_after_for@58.ops[178]: 'l-store-copy array%value%15#1 0'
debug: Replaced main_after_for@58.ops[180]: 'v-load array%value%15#1' with 'l-load array%value%15#1'
debug: Inserted main_after_for@58.ops[183]: 'l-store-copy array%sub_item%47#1 0'
debug: Replaced main_after_for@58.ops[185]: 'v-load array%sub_item%47#1' with 'l-load array%sub_item%47#1'
debug: Inserted main_after_for@58.ops[188]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_after_for@58.ops[190]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_after_for@58.ops[194]: 'l-store-copy array%value%16#1 0'
debug: Replaced main_after_for@58.ops[196]: 'v-load array%value%16#1' with 'l-load array%value%16#1'
debug: Inserted main_after_for@58.ops[199]: 'l-store-copy array%sub_item%49#1 0'
debug: Replaced main_after_for@58.ops[201]: 'v-load array%sub_item%49#1' with 'l-load array%sub_item%49#1'
debug: Inserted main_after_for@58.ops[204]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@58.ops[206]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@58.ops[210]: 'l-store-copy array%value%17#1 0'
debug: Replaced main_after_for@58.ops[212]: 'v-load array%value%17#1' with 'l-load array%value%17#1'
debug: Inserted main_after_for@58.ops[215]: 'l-store-copy array%sub_item%51#1 0'
debug: Replaced main_after_for@58.ops[217]: 'v-load array%sub_item%51#1' with 'l-load array%sub_item%51#1'
debug: Inserted main_after_for@58.ops[219]: 'l-store-copy tmp%25#1 0'
debug: Replaced main_after_for@58.ops[221]: 'v-load tmp%25#1' with 'l-load tmp%25#1'
debug: Inserted main_after_for@58.ops[224]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@58.ops[226]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@58.ops[17]: 'l-store-copy array%array_contents%16#1 0'
debug: Replaced main_after_for@58.ops[19]: 'v-load array%array_contents%16#1' with 'l-load array%array_contents%16#1'
debug: Inserted main_after_for@58.ops[43]: 'l-store-copy array%bytes_index%13#1 0'
debug: Replaced main_after_for@58.ops[46]: 'v-load array%bytes_index%13#1' with 'l-load array%bytes_index%13#1'
debug: Inserted main_after_for@58.ops[90]: 'l-store-copy array%bytes_index%14#1 0'
debug: Replaced main_after_for@58.ops[93]: 'v-load array%bytes_index%14#1' with 'l-load array%bytes_index%14#1'
debug: Inserted main_after_for@58.ops[116]: 'l-store-copy array%array_contents%17#1 0'
debug: Replaced main_after_for@58.ops[118]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[161]: 'l-store-copy array%bytes_index%15#1 0'
debug: Replaced main_after_for@58.ops[164]: 'v-load array%bytes_index%15#1' with 'l-load array%bytes_index%15#1'
debug: Inserted main_after_for@58.ops[7]: 'l-store-copy array%sub_item%39#1 0'
debug: Replaced main_after_for@58.ops[13]: 'v-load array%sub_item%39#1' with 'l-load array%sub_item%39#1'
debug: Inserted main_after_for@58.ops[30]: 'l-store-copy array%array_len%19#1 0'
debug: Replaced main_after_for@58.ops[37]: 'v-load array%array_len%19#1' with 'l-load array%array_len%19#1'
debug: Inserted main_after_for@58.ops[78]: 'l-store-copy array%array_len%21#1 0'
debug: Replaced main_after_for@58.ops[85]: 'v-load array%array_len%21#1' with 'l-load array%array_len%21#1'
debug: Inserted main_after_for@58.ops[1]: 'l-store-copy slot%2 0'
debug: Replaced main_after_for@58.ops[10]: 'v-load slot%2' with 'l-load slot%2'
debug: Inserted main_after_for@58.ops[186]: 'l-store-copy array%array_contents%17#1 0'
debug: Replaced main_after_for@58.ops[202]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[203]: 'l-store-copy array%array_contents%17#1 0'
debug: Replaced main_after_for@58.ops[219]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[168]: 'l-store-copy array%array_contents%17#1 1'
debug: Replaced main_after_for@58.ops[186]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[97]: 'l-store-copy slot_contents%6#0 1'
debug: Replaced main_after_for@58.ops[116]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted main_after_for@58.ops[22]: 'l-store-copy array%array_contents%16#1 0'
debug: Replaced main_after_for@58.ops[49]: 'v-load array%array_contents%16#1' with 'l-load array%array_contents%16#1'
debug: Inserted main_after_for@58.ops[71]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced main_after_for@58.ops[98]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted main_after_for@58.ops[135]: 'l-store-copy array%array_len%23#1 0'
debug: Replaced main_after_for@58.ops[161]: 'v-load array%array_len%23#1' with 'l-load array%array_len%23#1'
debug: Inserted main_after_for@58.ops[126]: 'l-store-copy array%array_contents%17#1 0'
debug: Replaced main_after_for@58.ops[172]: 'v-load array%array_contents%17#1' with 'l-load array%array_contents%17#1'
debug: Inserted main_after_for@58.ops[5]: 'l-store-copy slot%3 1'
debug: Replaced main_after_for@58.ops[68]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_after_for@58.ops[51]: 'l-store-copy array%array_contents%16#1 2'
debug: Replaced main_after_for@58.ops[119]: 'v-load array%array_contents%16#1' with 'l-load array%array_contents%16#1'
debug: Inserted main_after_for@58.ops[70]: 'l-store-copy slot%3 1'
debug: Replaced main_after_for@58.ops[146]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_test_array_evaluation_order_route@9.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[5]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[7]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[10]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[12]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[27]: 'l-store-copy tmp%1#3 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[29]: 'v-load tmp%1#3' with 'l-load tmp%1#3'
debug: Inserted main_test_array_evaluation_order_route@9.ops[34]: 'l-store-copy slot_contents%2#2 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[36]: 'v-load slot_contents%2#2' with 'l-load slot_contents%2#2'
debug: Inserted main_test_array_evaluation_order_route@9.ops[45]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[47]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[49]: 'l-store-copy array%bytes_len%26#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[51]: 'v-load array%bytes_len%26#1' with 'l-load array%bytes_len%26#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[54]: 'l-store-copy array%array_len%26#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[56]: 'v-load array%array_len%26#1' with 'l-load array%array_len%26#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[59]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[61]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[65]: 'l-store-copy array%value%18#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[67]: 'v-load array%value%18#1' with 'l-load array%value%18#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[70]: 'l-store-copy array%sub_item%54#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[72]: 'v-load array%sub_item%54#1' with 'l-load array%sub_item%54#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[75]: 'l-store-copy tmp%5#3 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[77]: 'v-load tmp%5#3' with 'l-load tmp%5#3'
debug: Inserted main_test_array_evaluation_order_route@9.ops[81]: 'l-store-copy array%value%19#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[83]: 'v-load array%value%19#1' with 'l-load array%value%19#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[86]: 'l-store-copy array%sub_item%56#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[88]: 'v-load array%sub_item%56#1' with 'l-load array%sub_item%56#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[91]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[93]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[97]: 'l-store-copy array%value%20#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[99]: 'v-load array%value%20#1' with 'l-load array%value%20#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[102]: 'l-store-copy array%sub_item%58#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[104]: 'v-load array%sub_item%58#1' with 'l-load array%sub_item%58#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[107]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[109]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[113]: 'l-store-copy array%value%21#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[115]: 'v-load array%value%21#1' with 'l-load array%value%21#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[118]: 'l-store-copy array%sub_item%60#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[120]: 'v-load array%sub_item%60#1' with 'l-load array%sub_item%60#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[123]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[125]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[129]: 'l-store-copy array%value%22#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[131]: 'v-load array%value%22#1' with 'l-load array%value%22#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[134]: 'l-store-copy array%sub_item%62#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[136]: 'v-load array%sub_item%62#1' with 'l-load array%sub_item%62#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[139]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[141]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[145]: 'l-store-copy array%value%23#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[147]: 'v-load array%value%23#1' with 'l-load array%value%23#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[150]: 'l-store-copy array%sub_item%64#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[152]: 'v-load array%sub_item%64#1' with 'l-load array%sub_item%64#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[155]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[157]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[161]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[163]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[165]: 'l-store-copy slot_contents%10#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[167]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[169]: 'l-store-copy array%bytes_len%27#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[171]: 'v-load array%bytes_len%27#1' with 'l-load array%bytes_len%27#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[174]: 'l-store-copy array%array_len%27#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[176]: 'v-load array%array_len%27#1' with 'l-load array%array_len%27#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[182]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[184]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[186]: 'l-store-copy slot_contents%12#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[188]: 'v-load slot_contents%12#0' with 'l-load slot_contents%12#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[190]: 'l-store-copy array%value%24#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[192]: 'v-load array%value%24#1' with 'l-load array%value%24#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[207]: 'l-store-copy array%value%25#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[209]: 'v-load array%value%25#1' with 'l-load array%value%25#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[230]: 'l-store-copy array%bytes_len%28#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[232]: 'v-load array%bytes_len%28#1' with 'l-load array%bytes_len%28#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[235]: 'l-store-copy array%array_len%28#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[237]: 'v-load array%array_len%28#1' with 'l-load array%array_len%28#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[240]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[242]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[246]: 'l-store-copy array%value%26#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[248]: 'v-load array%value%26#1' with 'l-load array%value%26#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[251]: 'l-store-copy array%sub_item%71#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[253]: 'v-load array%sub_item%71#1' with 'l-load array%sub_item%71#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[256]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[258]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[262]: 'l-store-copy array%value%27#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[264]: 'v-load array%value%27#1' with 'l-load array%value%27#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[267]: 'l-store-copy array%sub_item%73#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[269]: 'v-load array%sub_item%73#1' with 'l-load array%sub_item%73#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[272]: 'l-store-copy tmp%25#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[274]: 'v-load tmp%25#1' with 'l-load tmp%25#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[278]: 'l-store-copy array%value%28#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[280]: 'v-load array%value%28#1' with 'l-load array%value%28#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[283]: 'l-store-copy array%sub_item%75#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[285]: 'v-load array%sub_item%75#1' with 'l-load array%sub_item%75#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[288]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[290]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[293]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[295]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[18]: 'l-store-copy array%sub_item%52#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[21]: 'v-load array%sub_item%52#1' with 'l-load array%sub_item%52#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[40]: 'l-store-copy array%array_contents%19#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[43]: 'v-load array%array_contents%19#1' with 'l-load array%array_contents%19#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[204]: 'l-store-copy array%bytes_index%26#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[207]: 'v-load array%bytes_index%26#1' with 'l-load array%bytes_index%26#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[227]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[230]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[231]: 'l-store-copy array%updated_array%1#1 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[233]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[21]: 'l-store-copy arr#1 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[24]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[25]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[28]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[224]: 'l-store-copy array%sub_item%69#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[228]: 'v-load array%sub_item%69#1' with 'l-load array%sub_item%69#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[15]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[21]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[35]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[42]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[219]: 'l-store-copy array%sub_item%68#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[225]: 'v-load array%sub_item%68#1' with 'l-load array%sub_item%68#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[224]: 'l-store-copy array%bytes_index%27#1 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[231]: 'v-load array%bytes_index%27#1' with 'l-load array%bytes_index%27#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[28]: 'l-store-copy tmp%0#4 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[38]: 'v-load tmp%0#4' with 'l-load tmp%0#4'
debug: Inserted main_test_array_evaluation_order_route@9.ops[39]: 'l-store-copy tmp%0#4 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[48]: 'v-load tmp%0#4' with 'l-load tmp%0#4'
debug: Inserted main_test_array_evaluation_order_route@9.ops[56]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[72]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[73]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[89]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[90]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[106]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[107]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[123]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[124]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[140]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[141]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[157]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[195]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[211]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[250]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[266]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[267]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[283]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[284]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[300]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[31]: 'l-store-copy arr#1 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[52]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[175]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[196]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[195]: 'l-store-copy tmp%18#1 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[217]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[213]: 'l-store-copy array%sub_item%66#1 2'
debug: Replaced main_test_array_evaluation_order_route@9.ops[234]: 'v-load array%sub_item%66#1' with 'l-load array%sub_item%66#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[217]: 'l-store-copy slot_contents%13#0 2'
debug: Replaced main_test_array_evaluation_order_route@9.ops[244]: 'v-load slot_contents%13#0' with 'l-load slot_contents%13#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[216]: 'l-store-copy arr#1 2'
debug: Replaced main_test_array_evaluation_order_route@9.ops[251]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[184]: 'l-store-copy slot_contents%10#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[226]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[53]: 'l-store-copy arr#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[175]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_allocations_route@10.ops[1]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_test_allocations_route@10.ops[3]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_test_allocations_route@10.ops[5]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_allocations_route@10.ops[7]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_allocations_route@10.ops[10]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_allocations_route@10.ops[12]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_allocations_route@10.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_allocations_route@10.ops[17]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_for_header@49.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@49.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@50.ops[1]: 'l-store-copy alloc_test#0 0'
debug: Replaced main_for_body@50.ops[3]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted main_for_body@50.ops[4]: 'l-store-copy alloc_test#0 0'
debug: Replaced main_for_body@50.ops[7]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted main_after_for@51.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@51.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_iteration_route@11.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_iteration_route@11.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_iteration_route@11.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_iteration_route@11.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_iteration_route@11.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_iteration_route@11.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_for_header@32.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@32.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@33.ops[4]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@33.ops[6]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@33.ops[9]: 'l-store-copy array%array_contents%20#1 0'
debug: Replaced main_for_body@33.ops[11]: 'v-load array%array_contents%20#1' with 'l-load array%array_contents%20#1'
debug: Inserted main_for_body@33.ops[2]: 'l-store-copy array%sub_item%76#1 0'
debug: Replaced main_for_body@33.ops[8]: 'v-load array%sub_item%76#1' with 'l-load array%sub_item%76#1'
debug: Inserted main_for_body@33.ops[1]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@33.ops[15]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_after_for@34.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@34.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_after_for@34.ops[5]: 'l-store-copy array%bytes_len%29#1 0'
debug: Replaced main_after_for@34.ops[7]: 'v-load array%bytes_len%29#1' with 'l-load array%bytes_len%29#1'
debug: Inserted main_after_for@34.ops[10]: 'l-store-copy array%array_len%29#1 0'
debug: Replaced main_after_for@34.ops[12]: 'v-load array%array_len%29#1' with 'l-load array%array_len%29#1'
debug: Inserted main_after_for@34.ops[15]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_after_for@34.ops[17]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_for_header@35.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@35.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@36.ops[10]: 'l-store-copy array%value%29#1 0'
debug: Replaced main_for_body@36.ops[12]: 'v-load array%value%29#1' with 'l-load array%value%29#1'
debug: Inserted main_for_body@36.ops[15]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@36.ops[17]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@36.ops[20]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_for_body@36.ops[22]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_for_body@36.ops[5]: 'l-store-copy array%bytes_index%31#1 0'
debug: Replaced main_for_body@36.ops[8]: 'v-load array%bytes_index%31#1' with 'l-load array%bytes_index%31#1'
debug: Inserted main_for_body@36.ops[1]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_for_body@36.ops[8]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_for_body@36.ops[20]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@36.ops[31]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@36.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@36.ops[28]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@37.ops[1]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_after_for@37.ops[3]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_after_for@37.ops[5]: 'l-store-copy array%bytes_len%31#1 0'
debug: Replaced main_after_for@37.ops[7]: 'v-load array%bytes_len%31#1' with 'l-load array%bytes_len%31#1'
debug: Inserted main_after_for@37.ops[12]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced main_after_for@37.ops[14]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_for_header@38.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@38.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@39.ops[10]: 'l-store-copy array%value%30#1 0'
debug: Replaced main_for_body@39.ops[12]: 'v-load array%value%30#1' with 'l-load array%value%30#1'
debug: Inserted main_for_body@39.ops[15]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@39.ops[17]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@39.ops[20]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_for_body@39.ops[22]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@39.ops[27]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced main_for_body@39.ops[29]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_for_body@39.ops[5]: 'l-store-copy array%bytes_index%32#1 0'
debug: Replaced main_for_body@39.ops[8]: 'v-load array%bytes_index%32#1' with 'l-load array%bytes_index%32#1'
debug: Inserted main_for_body@39.ops[1]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced main_for_body@39.ops[8]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted main_for_body@39.ops[21]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@39.ops[27]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@39.ops[4]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@39.ops[21]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@40.ops[1]: 'l-store-copy slot_contents%6#0 0'
debug: Replaced main_after_for@40.ops[3]: 'v-load slot_contents%6#0' with 'l-load slot_contents%6#0'
debug: Inserted main_after_for@40.ops[5]: 'l-store-copy array%bytes_len%32#1 0'
debug: Replaced main_after_for@40.ops[7]: 'v-load array%bytes_len%32#1' with 'l-load array%bytes_len%32#1'
debug: Inserted main_after_for@40.ops[10]: 'l-store-copy array%array_len%32#1 0'
debug: Replaced main_after_for@40.ops[12]: 'v-load array%array_len%32#1' with 'l-load array%array_len%32#1'
debug: Inserted main_for_body@42.ops[14]: 'l-store-copy array%value%31#1 0'
debug: Replaced main_for_body@42.ops[16]: 'v-load array%value%31#1' with 'l-load array%value%31#1'
debug: Inserted main_for_body@42.ops[19]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@42.ops[21]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@42.ops[24]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_for_body@42.ops[26]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_body@42.ops[9]: 'l-store-copy array%bytes_index%33#1 0'
debug: Replaced main_for_body@42.ops[12]: 'v-load array%bytes_index%33#1' with 'l-load array%bytes_index%33#1'
debug: Inserted main_for_body@42.ops[3]: 'l-store-copy reverse_index_internal%2#1 0'
debug: Replaced main_for_body@42.ops[7]: 'v-load reverse_index_internal%2#1' with 'l-load reverse_index_internal%2#1'
debug: Inserted main_for_body@42.ops[6]: 'l-store-copy slot_contents%7#0 1'
debug: Replaced main_for_body@42.ops[13]: 'v-load slot_contents%7#0' with 'l-load slot_contents%7#0'
debug: Inserted main_for_body@42.ops[25]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@42.ops[32]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_header@44.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced main_for_header@44.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted main_for_body@45.ops[9]: 'l-store-copy concatenated%0#0 0'
debug: Replaced main_for_body@45.ops[11]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted main_for_body@45.ops[13]: 'l-store-copy byte_len%0#0 0'
debug: Replaced main_for_body@45.ops[15]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted main_for_body@45.ops[18]: 'l-store-copy len_%0#0 0'
debug: Replaced main_for_body@45.ops[20]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted main_for_body@45.ops[22]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_for_body@45.ops[24]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_for_body@45.ops[26]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_for_body@45.ops[28]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_for_body@45.ops[33]: 'l-store-copy slot_contents%8#0 0'
debug: Replaced main_for_body@45.ops[35]: 'v-load slot_contents%8#0' with 'l-load slot_contents%8#0'
debug: Inserted main_for_body@45.ops[38]: 'l-store-copy array%array_contents%21#1 0'
debug: Replaced main_for_body@45.ops[40]: 'v-load array%array_contents%21#1' with 'l-load array%array_contents%21#1'
debug: Inserted main_for_body@45.ops[5]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_for_body@45.ops[8]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_for_body@45.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced main_for_body@45.ops[8]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted main_for_body@45.ops[14]: 'l-store-copy concatenated%0#0 0'
debug: Replaced main_for_body@45.ops[32]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted main_for_body@45.ops[10]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_for_body@45.ops[40]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_for_body@45.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@45.ops[47]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@46.ops[8]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_after_for@46.ops[10]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_after_for@46.ops[12]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_after_for@46.ops[14]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_after_for@46.ops[17]: 'l-store-copy len_%1#0 0'
debug: Replaced main_after_for@46.ops[19]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_after_for@46.ops[21]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_after_for@46.ops[23]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_after_for@46.ops[25]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_after_for@46.ops[27]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_after_for@46.ops[30]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@46.ops[32]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@46.ops[35]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_after_for@46.ops[37]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_after_for@46.ops[40]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@46.ops[42]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_after_for@46.ops[46]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced main_after_for@46.ops[48]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted main_after_for@46.ops[51]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_after_for@46.ops[53]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_after_for@46.ops[57]: 'l-store-copy reinterpret_biguint%2#0 0'
debug: Replaced main_after_for@46.ops[59]: 'v-load reinterpret_biguint%2#0' with 'l-load reinterpret_biguint%2#0'
debug: Inserted main_after_for@46.ops[62]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@46.ops[64]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_for@46.ops[68]: 'l-store-copy reinterpret_biguint%4#0 0'
debug: Replaced main_after_for@46.ops[70]: 'v-load reinterpret_biguint%4#0' with 'l-load reinterpret_biguint%4#0'
debug: Inserted main_after_for@46.ops[73]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_for@46.ops[75]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_after_for@46.ops[79]: 'l-store-copy reinterpret_biguint%6#0 0'
debug: Replaced main_after_for@46.ops[81]: 'v-load reinterpret_biguint%6#0' with 'l-load reinterpret_biguint%6#0'
debug: Inserted main_after_for@46.ops[84]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_after_for@46.ops[86]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@46.ops[89]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@46.ops[91]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@46.ops[4]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced main_after_for@46.ops[7]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted main_after_for@46.ops[2]: 'l-store-copy expr_value_trimmed%1#0 0'
debug: Replaced main_after_for@46.ops[7]: 'v-load expr_value_trimmed%1#0' with 'l-load expr_value_trimmed%1#0'
debug: Inserted main_after_for@46.ops[47]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@46.ops[58]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@46.ops[59]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@46.ops[70]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@46.ops[71]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@46.ops[82]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@46.ops[35]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@46.ops[47]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@46.ops[13]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_after_for@46.ops[31]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_quicksort_route@12.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_test_quicksort_route@12.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_test_quicksort_route@12.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_quicksort_route@12.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_quicksort_route@12.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_quicksort_route@12.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_test_quicksort_route@12.ops[15]: 'l-store-copy rnd#0 0'
debug: Replaced main_test_quicksort_route@12.ops[17]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_test_quicksort_route@12.ops[21]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_test_quicksort_route@12.ops[23]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_for_header@24.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@24.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@25.ops[3]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_for_body@25.ops[5]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_for_body@25.ops[10]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced main_for_body@25.ops[12]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted main_for_body@25.ops[15]: 'l-store-copy array%array_contents%22#1 0'
debug: Replaced main_for_body@25.ops[18]: 'v-load array%array_contents%22#1' with 'l-load array%array_contents%22#1'
debug: Inserted main_for_body@25.ops[7]: 'l-store-copy array%sub_item%83#1 0'
debug: Replaced main_for_body@25.ops[14]: 'v-load array%sub_item%83#1' with 'l-load array%sub_item%83#1'
debug: Inserted main_for_body@25.ops[10]: 'l-store-copy rnd#0 1'
debug: Replaced main_for_body@25.ops[19]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_for_body@25.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@25.ops[23]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@26.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@26.ops[4]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_after_for@26.ops[6]: 'l-store-copy array%bytes_len%33#1 0'
debug: Replaced main_after_for@26.ops[8]: 'v-load array%bytes_len%33#1' with 'l-load array%bytes_len%33#1'
debug: Inserted main_after_for@26.ops[11]: 'l-store-copy array%array_len%33#1 0'
debug: Replaced main_after_for@26.ops[13]: 'v-load array%array_len%33#1' with 'l-load array%array_len%33#1'
debug: Inserted main_after_for@26.ops[16]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_after_for@26.ops[18]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_after_for@26.ops[32]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_after_for@26.ops[34]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_after_for@26.ops[36]: 'l-store-copy array%bytes_len%35#1 0'
debug: Replaced main_after_for@26.ops[38]: 'v-load array%bytes_len%35#1' with 'l-load array%bytes_len%35#1'
debug: Inserted main_after_for@26.ops[23]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_after_for@26.ops[27]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_after_for@26.ops[14]: 'l-store-copy array%array_len%33#1 0'
debug: Replaced main_after_for@26.ops[21]: 'v-load array%array_len%33#1' with 'l-load array%array_len%33#1'
debug: Inserted main_after_for@26.ops[27]: 'l-store-copy rnd#0 1'
debug: Replaced main_after_for@26.ops[33]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_after_for@26.ops[1]: 'l-store-copy rnd#0 0'
debug: Replaced main_after_for@26.ops[27]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_for_header@27.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@27.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@28.ops[11]: 'l-store-copy array%value%32#1 0'
debug: Replaced main_for_body@28.ops[13]: 'v-load array%value%32#1' with 'l-load array%value%32#1'
debug: Inserted main_for_body@28.ops[16]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@28.ops[18]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@28.ops[21]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_for_body@28.ops[23]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_for_body@28.ops[6]: 'l-store-copy array%bytes_index%34#1 0'
debug: Replaced main_for_body@28.ops[9]: 'v-load array%bytes_index%34#1' with 'l-load array%bytes_index%34#1'
debug: Inserted main_for_body@28.ops[2]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_for_body@28.ops[9]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_for_body@28.ops[21]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@28.ops[32]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@28.ops[5]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced main_for_body@28.ops[29]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_bare_routing@15.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_bare_routing@15.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main___algopy_default_create@16.ops[1]: 'l-store-copy tmp%45#0 0'
debug: Replaced main___algopy_default_create@16.ops[3]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main___algopy_default_create@16.ops[5]: 'l-store-copy tmp%46#0 0'
debug: Replaced main___algopy_default_create@16.ops[7]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main___algopy_default_create@16.ops[10]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@16.ops[12]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@19.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@19.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted quicksort_window_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced quicksort_window_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted quicksort_window_block@0.ops[20]: 'l-store-copy array%value%0#1 0'
debug: Replaced quicksort_window_block@0.ops[22]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted quicksort_window_block@0.ops[15]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced quicksort_window_block@0.ops[18]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted quicksort_window_block@0.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced quicksort_window_block@0.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted quicksort_window_block@0.ops[12]: 'l-store-copy slot_contents%0#0 1'
debug: Replaced quicksort_window_block@0.ops[19]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted quicksort_window_while_top@3.ops[11]: 'l-store-copy array%value%1#1 0'
debug: Replaced quicksort_window_while_top@3.ops[13]: 'v-load array%value%1#1' with 'l-load array%value%1#1'
debug: Inserted quicksort_window_while_top@3.ops[16]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced quicksort_window_while_top@3.ops[18]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted quicksort_window_while_top@3.ops[21]: 'l-store-copy tmp%3#0 0'
debug: Replaced quicksort_window_while_top@3.ops[23]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted quicksort_window_while_top@3.ops[6]: 'l-store-copy array%bytes_index%1#1 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted quicksort_window_while_top@3.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted quicksort_window_while_top@6.ops[11]: 'l-store-copy array%value%2#1 0'
debug: Replaced quicksort_window_while_top@6.ops[13]: 'v-load array%value%2#1' with 'l-load array%value%2#1'
debug: Inserted quicksort_window_while_top@6.ops[20]: 'l-store-copy tmp%5#0 0'
debug: Replaced quicksort_window_while_top@6.ops[22]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted quicksort_window_while_top@6.ops[6]: 'l-store-copy array%bytes_index%2#1 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted quicksort_window_while_top@6.ops[17]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced quicksort_window_while_top@6.ops[20]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted quicksort_window_while_top@6.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted quicksort_window_after_while@10.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced quicksort_window_after_while@10.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted quicksort_window_if_body@11.ops[2]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[4]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[8]: 'l-store-copy array%value%3#1 0'
debug: Replaced quicksort_window_if_body@11.ops[10]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted quicksort_window_if_body@11.ops[18]: 'l-store-copy array%value%4#1 0'
debug: Replaced quicksort_window_if_body@11.ops[20]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted quicksort_window_if_body@11.ops[39]: 'l-store-copy array%updated_array%1#1 0'
debug: Replaced quicksort_window_if_body@11.ops[42]: 'v-load array%updated_array%1#1' with 'l-load array%updated_array%1#1'
debug: Inserted quicksort_window_if_body@11.ops[26]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced quicksort_window_if_body@11.ops[30]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted quicksort_window_if_body@11.ops[35]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced quicksort_window_if_body@11.ops[39]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted quicksort_window_if_body@11.ops[32]: 'l-store-copy array%updated_array%0#1 0'
debug: Replaced quicksort_window_if_body@11.ops[38]: 'v-load array%updated_array%0#1' with 'l-load array%updated_array%0#1'
debug: Inserted quicksort_window_if_body@11.ops[5]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[15]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[24]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced quicksort_window_if_body@11.ops[36]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted quicksort_window_if_body@11.ops[14]: 'l-store-copy array%sub_item%7#1 1'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted quicksort_window_if_body@11.ops[17]: 'l-store-copy slot_contents%3#0 1'
debug: Replaced quicksort_window_if_body@11.ops[32]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[19]: 'l-store-copy array%bytes_index%1#1 3'
debug: Replaced quicksort_window_if_body@11.ops[34]: 'v-load array%bytes_index%1#1' with 'l-load array%bytes_index%1#1'
debug: Inserted quicksort_window_if_body@11.ops[7]: 'l-store-copy array%bytes_index%2#1 2'
debug: Replaced quicksort_window_if_body@11.ops[45]: 'v-load array%bytes_index%2#1' with 'l-load array%bytes_index%2#1'
debug: Inserted quicksort_window_after_if_else@13.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced quicksort_window_after_if_else@13.ops[9]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted quicksort_window_after_if_else@13.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_after_if_else@13.ops[6]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_if_else@16.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced quicksort_window_after_if_else@16.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted quicksort_window_if_body@17.ops[5]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@17.ops[7]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_if_body@18.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@18.ops[5]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_while@22.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced quicksort_window_after_while@22.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted quicksort_window_after_if_else@24.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced quicksort_window_after_if_else@24.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced add_x_for_body@2.ops[7]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced add_x_for_body@2.ops[13]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced add_x_for_body@2.ops[9]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted add_x_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced add_x_for_body@2.ops[17]: 'v-load i#0' with 'l-load i#0'
debug: Inserted append_length_and_return_block@0.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[4]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted append_length_and_return_block@0.ops[6]: 'l-store-copy array%bytes_len%0#1 0'
debug: Replaced append_length_and_return_block@0.ops[8]: 'v-load array%bytes_len%0#1' with 'l-load array%bytes_len%0#1'
debug: Inserted append_length_and_return_block@0.ops[11]: 'l-store-copy array%array_len%0#1 0'
debug: Replaced append_length_and_return_block@0.ops[13]: 'v-load array%array_len%0#1' with 'l-load array%array_len%0#1'
debug: Inserted append_length_and_return_block@0.ops[15]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced append_length_and_return_block@0.ops[18]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted append_length_and_return_block@0.ops[20]: 'l-store-copy array%array_contents%0#1 0'
debug: Replaced append_length_and_return_block@0.ops[23]: 'v-load array%array_contents%0#1' with 'l-load array%array_contents%0#1'
debug: Inserted append_length_and_return_block@0.ops[5]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[18]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted _puya_lib.mem.new_slot@entry.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot@entry.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot@entry.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot@entry.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 24 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_extend_route@4 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_multiple_append_route@5 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_overhead_route@6 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_test_array_evaluation_order_route@9 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main___algopy_default_create@16 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_if_else@19 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_for@46 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_for@51 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_for@58 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_for@63 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: shared x-stack for main_after_for@74 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20: tmp%0#0
debug: Found 7 edge set/s for test_cases.array.uint64.quicksort_window
debug: Found 2 edge set/s for test_cases.array.uint64.add_x
debug: algopy.arc4.ARC4Contract.approval_program f-stack entry: ['arc4_arr#0', 'slot%1', 'slot%2', 'slot%4', 'slot%5', 'tmp%0#2', '_i#0', 'arr#1', 'array%array_len%29#1', 'array%array_len%31#1', 'array%array_len%35#1', 'bytes_length%0#0', 'expected#0', 'i#0', 'idx#0', 'item_index_internal%0#0', 'item_index_internal%1#0', 'last#0', 'num#0', 'reverse_index_internal%2#1', 'rnd#0', 'val#0']
debug: algopy.arc4.ARC4Contract.approval_program f-stack on first store: []
debug: test_cases.array.uint64.quicksort_window f-stack entry: ['array%bytes_index%1#1', 'array%bytes_index%2#1', 'right#16']
debug: test_cases.array.uint64.quicksort_window f-stack on first store: ['pivot#0', 'right#1', 'left#1']
debug: test_cases.array.uint64.add_x f-stack entry: []
debug: test_cases.array.uint64.add_x f-stack on first store: ['i#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
array/uint64.py:174 debug: optimizing TEAL subroutine ops test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
array/uint64.py:233 debug: optimizing TEAL subroutine ops test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
array/uint64.py:247 debug: optimizing TEAL subroutine ops test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20 into main_after_if_else@19
debug: inlining single reference block main_for_body@25 into main_for_header@24
debug: inlining single reference block main_for_body@28 into main_for_header@27
debug: inlining single reference block main_for_body@33 into main_for_header@32
debug: inlining single reference block main_for_body@36 into main_for_header@35
debug: inlining single reference block main_for_body@39 into main_for_header@38
debug: inlining single reference block main_for_body@42 into main_for_header@41
debug: inlining single reference block main_for_body@45 into main_for_header@44
debug: inlining single reference block main_for_body@50 into main_for_header@49
debug: inlining single reference block main_for_body@57 into main_for_header@56
debug: inlining single reference block main_for_body@62 into main_for_header@61
debug: inlining single reference block main_for_body@73 into main_for_header@72
debug: inlining single reference block main___algopy_default_create@16 into main_bare_routing@15
debug: removing explicit jump to fall-through block main_after_if_else@19
debug: removing explicit jump to fall-through block main_for_header@24
debug: removing explicit jump to fall-through block main_for_header@27
debug: removing explicit jump to fall-through block main_for_header@32
debug: removing explicit jump to fall-through block main_for_header@35
debug: removing explicit jump to fall-through block main_for_header@38
debug: removing explicit jump to fall-through block main_for_header@41
debug: removing explicit jump to fall-through block main_for_header@44
debug: removing explicit jump to fall-through block main_for_header@49
debug: removing explicit jump to fall-through block main_for_header@56
debug: removing explicit jump to fall-through block main_for_header@61
debug: removing explicit jump to fall-through block main_for_header@72
array/uint64.py:174 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
debug: inlining single reference block quicksort_window_block@0 into quicksort_window
debug: inlining single reference block quicksort_window_while_body@4 into quicksort_window_while_top@3
debug: inlining single reference block quicksort_window_while_body@7 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_after_if_else@9 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_if_body@23 into quicksort_window_after_while@22
debug: inlining single reference block quicksort_window_if_body@25 into quicksort_window_after_if_else@24
debug: inlining single reference block quicksort_window_if_body@11 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_after_if_else@13 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_if_body@17 into quicksort_window_after_if_else@16
debug: inlining single reference block quicksort_window_if_body@18 into quicksort_window_after_if_else@16
debug: removing explicit jump to fall-through block quicksort_window_while_top@3
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@24
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@26
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@19
array/uint64.py:233 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
debug: inlining single reference block add_x_block@0 into add_x
debug: inlining single reference block add_x_for_body@2 into add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_header@1
array/uint64.py:247 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
debug: inlining single reference block append_length_and_return_block@0 into append_length_and_return
debug: optimizing TEAL subroutine blocks _puya_lib.mem.new_slot() -> uint64:
debug: inlining single reference block _puya_lib.mem.new_slot@entry into _puya_lib.mem.new_slot
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.__init__ for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_arc4_conversion for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.sum_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_arc4_bool for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__init__ in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: point.x#0, reinterpret_biguint%0#0
debug: selected point.x#0 from equivalence set
debug: Found equivalence set: last_point.x#0, reinterpret_biguint%1#0
debug: selected last_point.x#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9 with block@8 in block@1
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__algopy_default_create in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:119:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_arc4_bool in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:94:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.sum_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:76:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_arc4_conversion in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:62:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_bool_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:54:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:44:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:28:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_bytes[8]%0#0, x1#0
debug: selected x1#0 from equivalence set
debug: Found equivalence set: tmp%7#0, y1#0
debug: selected y1#0 from equivalence set
debug: Found equivalence set: reinterpret_bytes[8]%2#0, x2#0
debug: selected x2#0 from equivalence set
debug: Found equivalence set: tmp%8#0, y2#0
debug: selected y2#0 from equivalence set
debug: Found equivalence set: slot%0#6, path#0
debug: selected path#0 from equivalence set
debug: Found equivalence set: tmp%40#1, to_encode%0#0
debug: selected tmp%40#1 from equivalence set
debug: Found equivalence set: item0%0#0, some_more.0#0
debug: selected some_more.0#0 from equivalence set
debug: Found equivalence set: item1%0#0, some_more.1#0
debug: selected some_more.1#0 from equivalence set
debug: Found equivalence set: slot%0#5, arr#5
debug: selected arr#5 from equivalence set
debug: Found equivalence set: concat_result%0#3, result#0, tmp%14#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_bytes[32]%1#0, some_more#0
debug: selected some_more#0 from equivalence set
debug: Found equivalence set: slot%0#4, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: concat_result%0#2, tmp%20#0
debug: selected concat_result%0#2 from equivalence set
debug: Found equivalence set: tmp%26#0, length#1
debug: selected length#1 from equivalence set
debug: Found equivalence set: slot%0#3, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: array_length%0#3, reverse_index_internal%0#2
debug: selected array_length%0#3 from equivalence set
debug: Found equivalence set: count#5, to_encode%1#0
debug: selected count#5 from equivalence set
debug: Found equivalence set: tmp%32#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: slot%0#2, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: array_length%0#2, reverse_index_internal%0#1
debug: selected array_length%0#2 from equivalence set
debug: Found equivalence set: array_data%0#1, arc4_arr#1
debug: selected arc4_arr#1 from equivalence set
debug: Found equivalence set: concat_result%0#1, arc4_arr#2, tmp%33#0
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: tmp%39#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%0#1, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#0
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: total#1, to_encode%2#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_data%0#0, dyn_arr#0
debug: selected dyn_arr#0 from equivalence set
debug: Found equivalence set: slot_contents%3#0, array_head_and_tail%0#0
debug: selected slot_contents%3#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, dyn_arr#1
debug: selected dyn_arr#1 from equivalence set
debug: Found equivalence set: slot_contents%5#0, array_head_and_tail%3#0
debug: selected slot_contents%5#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, tmp%45#0
debug: selected concat_result%1#0 from equivalence set
debug: Copy propagation made 38 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%3#4) to slot_contents%3#4
debug: Simplified (== tmp%10#0 NoOp) to (! tmp%10#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%3#3) to slot_contents%3#3
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%1#4) to slot_contents%1#4
debug: Simplified (== tmp%22#0 NoOp) to (! tmp%22#0)
debug: Simplified (== tmp%0#4 0u) to (! tmp%0#4)
debug: Simplified (== tmp%3#3 0u) to (! tmp%3#3)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%0#3 0u) to (! tmp%0#3)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%5#1) to slot_contents%5#1
debug: Simplified (== tmp%35#0 NoOp) to (! tmp%35#0)
debug: Simplified (== tmp%41#0 NoOp) to (! tmp%41#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (== tmp%48#0 0u) to (! tmp%48#0)
debug: Simplified (extract3 tmp%25#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%25#1) // on error: Index access is out of bounds
debug: Simplified (extract3 tmp%34#1 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) tmp%34#1) // on error: Index access is out of bounds
debug: Simplified (extract3 reinterpret_bytes[32]%0#0 0u 16u) // on error: Index access is out of bounds to ((extract 0 16) reinterpret_bytes[32]%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 reinterpret_bytes[32]%0#0 16u 16u) // on error: Index access is out of bounds to ((extract 16 16) reinterpret_bytes[32]%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@11 from switch tmp%47#0 {0u => block@12, * => block@13} to goto_nth [block@12][tmp%47#0] else goto block@13
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@11 from goto_nth [block@12][tmp%47#0] else goto block@13 to goto tmp%47#0 ? block@13 : block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@54 with block@2 in block@55
debug: Merged linear block@54 into block@2
debug: Replaced predecessor block@57 with block@56 in block@55
debug: Merged linear block@57 into block@56
debug: Merged linear block@59 into block@58
debug: Replaced predecessor block@52 with block@3 in block@53
debug: Merged linear block@52 into block@3
debug: Merged linear block@53 into block@3
debug: Replaced predecessor block@50 with block@4 in block@51
debug: Merged linear block@50 into block@4
debug: Merged linear block@51 into block@4
debug: Replaced predecessor block@38 with block@5 in block@39
debug: Merged linear block@38 into block@5
debug: Replaced predecessor block@41 with block@40 in block@39
debug: Merged linear block@41 into block@40
debug: Replaced predecessor block@47 with block@46 in block@43
debug: Merged linear block@47 into block@46
debug: Merged linear block@49 into block@48
debug: Replaced predecessor block@26 with block@6 in block@27
debug: Merged linear block@26 into block@6
debug: Replaced predecessor block@29 with block@28 in block@27
debug: Merged linear block@29 into block@28
debug: Replaced predecessor block@35 with block@34 in block@31
debug: Merged linear block@35 into block@34
debug: Merged linear block@37 into block@36
debug: Replaced predecessor block@20 with block@7 in block@21
debug: Merged linear block@20 into block@7
debug: Replaced predecessor block@23 with block@22 in block@21
debug: Merged linear block@23 into block@22
debug: Merged linear block@25 into block@24
debug: Replaced predecessor block@18 with block@8 in block@19
debug: Merged linear block@18 into block@8
debug: Merged linear block@19 into block@8
debug: Replaced predecessor block@10 with block@9 in block@15
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@16 with block@12 in block@17
debug: Merged linear block@16 into block@12
debug: Merged linear block@17 into block@12
debug: Replaced predecessor block@14 with block@13 in block@15
debug: Merged linear block@14 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9
debug: Removed empty block: block@13
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%35#1: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=1),)
debug: Replacing redundant declaration let tmp%36#1: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=1),)
debug: Replacing redundant declaration let i#8: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=1),)
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:127:15-29, ir_type=uint64, name='tmp%4', version=1),)
debug: Replacing redundant declaration let array_head_and_tail%2#0: bytes = ((extract 2 0) dyn_arr#1) with copy of existing registers (Register(source_location=array/static_size.py:129:15-25, ir_type=bytes, name='array_head_and_tail%1', version=0),)
debug: Replacing redundant declaration let array_length%2#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:127:15-29, ir_type=uint64, name='tmp%4', version=1),)
debug: Found equivalence set: tmp%18#1, tmp%35#1, tmp%36#1, i#8
debug: selected i#8 from equivalence set
debug: Found equivalence set: slot_contents%3#4, concatenated%0#3
debug: selected slot_contents%3#4 from equivalence set
debug: Found equivalence set: slot_contents%3#3, concatenated%0#2
debug: selected slot_contents%3#3 from equivalence set
debug: Found equivalence set: slot_contents%1#4, concatenated%0#1
debug: selected slot_contents%1#4 from equivalence set
debug: Found equivalence set: slot_contents%5#1, concatenated%0#0
debug: selected slot_contents%5#1 from equivalence set
debug: Found equivalence set: tmp%4#1, array_length%1#0, array_length%2#0
debug: selected tmp%4#1 from equivalence set
debug: Found equivalence set: array_head_and_tail%1#0, array_head_and_tail%2#0
debug: selected array_head_and_tail%1#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:42:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: slot_contents%0#1, slot_contents%1#1
debug: selected slot_contents%0#1 from equivalence set
debug: Found equivalence set: length#3, tmp%40#0
debug: selected length#3 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%3#0) to slot_contents%3#0
debug: Simplified (extract3 tmp%25#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) tmp%25#0) // on error: Index access is out of bounds
debug: Simplified (extract3 tmp%34#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) tmp%34#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@15 into block@14
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%35#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let tmp%36#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:37:38-43, ir_type=uint64, name='tmp%18', version=0),)
debug: Found equivalence set: tmp%18#0, tmp%35#0, tmp%36#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: slot_contents%3#0, concatenated%0#0
debug: selected slot_contents%3#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%3#0) to slot_contents%3#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%1#0) to slot_contents%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%3#0 0u) to (! tmp%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_data%0#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arc4_arr#1
debug: selected arc4_arr#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%5#0) to slot_contents%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_data%0#0, dyn_arr#0
debug: selected dyn_arr#0 from equivalence set
debug: Found equivalence set: slot_contents%3#0, array_head_and_tail%0#0
debug: selected slot_contents%3#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, dyn_arr#1
debug: selected dyn_arr#1 from equivalence set
debug: Found equivalence set: slot_contents%5#0, array_head_and_tail%3#0
debug: selected slot_contents%5#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:127:15-29, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%2#0: bytes = ((extract 2 0) dyn_arr#1) with copy of existing registers (Register(source_location=array/static_size.py:129:15-25, ir_type=bytes, name='array_head_and_tail%1', version=0),)
debug: Replacing redundant declaration let array_length%2#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:127:15-29, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: tmp%4#0, array_length%1#0, array_length%2#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%1#0, array_head_and_tail%2#0
debug: selected array_head_and_tail%1#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#6, slot_contents%1#6, slot_contents%2#5
debug: selected slot_contents%0#6 from equivalence set
debug: Found equivalence set: encoded%0#5, slot_contents%0#5
debug: selected encoded%0#5 from equivalence set
debug: Found equivalence set: extended%0#5, slot_contents%1#5, slot_contents%2#4, slot_contents%3#3
debug: selected extended%0#5 from equivalence set
debug: Found equivalence set: encoded%0#4, slot_contents%0#4
debug: selected encoded%0#4 from equivalence set
debug: Found equivalence set: extended%0#4, slot_contents%1#4
debug: selected extended%0#4 from equivalence set
debug: Found equivalence set: encoded%0#3, slot_contents%0#3
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: slot_contents%2#3, slot_contents%3#2
debug: selected slot_contents%2#3 from equivalence set
debug: Found equivalence set: encoded%0#2, slot_contents%0#2
debug: selected encoded%0#2 from equivalence set
debug: Found equivalence set: slot_contents%2#2, slot_contents%3#1
debug: selected slot_contents%2#2 from equivalence set
debug: Found equivalence set: encoded%0#1, slot_contents%0#1
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: extended%0#1, slot_contents%1#1
debug: selected extended%0#1 from equivalence set
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%2#0, slot_contents%3#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: slot_contents%4#0, slot_contents%5#0
debug: selected slot_contents%4#0 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable array_data%0#4
debug: Removing unused variable expr_value_trimmed%0#4
debug: Removing unused variable tmp%13#0
debug: Removing unused variable array_data%0#3
debug: Removing unused variable expr_value_trimmed%0#3
debug: Removing unused variable tmp%19#0
debug: Removing unused variable array_data%0#2
debug: Removing unused variable expr_value_trimmed%0#2
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable arc4_arr#1
debug: Removing unused variable expr_value_trimmed%0#1
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable dyn_arr#0
debug: Removing unused variable index_is_in_bounds%0#0
debug: Removing unused variable array_data%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@32
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__ in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#6, slot_contents%1#6, slot_contents%2#5
debug: selected slot_contents%0#6 from equivalence set
debug: Found equivalence set: encoded%0#5, slot_contents%0#5
debug: selected encoded%0#5 from equivalence set
debug: Found equivalence set: extended%0#5, slot_contents%1#5, slot_contents%2#4, slot_contents%3#3
debug: selected extended%0#5 from equivalence set
debug: Found equivalence set: encoded%0#4, slot_contents%0#4
debug: selected encoded%0#4 from equivalence set
debug: Found equivalence set: extended%0#4, slot_contents%1#4
debug: selected extended%0#4 from equivalence set
debug: Found equivalence set: encoded%0#3, slot_contents%0#3
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: slot_contents%2#3, slot_contents%3#2
debug: selected slot_contents%2#3 from equivalence set
debug: Found equivalence set: encoded%0#2, slot_contents%0#2
debug: selected encoded%0#2 from equivalence set
debug: Found equivalence set: slot_contents%2#2, slot_contents%3#1
debug: selected slot_contents%2#2 from equivalence set
debug: Found equivalence set: encoded%0#1, slot_contents%0#1
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: extended%0#1, slot_contents%1#1
debug: selected extended%0#1 from equivalence set
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%2#0, slot_contents%3#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: slot_contents%4#0, slot_contents%5#0
debug: selected slot_contents%4#0 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable array_data%0#4
debug: Removing unused variable expr_value_trimmed%0#4
debug: Removing unused variable tmp%13#0
debug: Removing unused variable array_data%0#3
debug: Removing unused variable expr_value_trimmed%0#3
debug: Removing unused variable tmp%19#0
debug: Removing unused variable array_data%0#2
debug: Removing unused variable expr_value_trimmed%0#2
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable arc4_arr#1
debug: Removing unused variable expr_value_trimmed%0#1
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable dyn_arr#0
debug: Removing unused variable index_is_in_bounds%0#0
debug: Removing unused variable array_data%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@34
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#0, slot_contents%1#0
debug: selected slot_contents%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:42:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#6, slot_contents%1#6, slot_contents%2#5
debug: selected slot_contents%0#6 from equivalence set
debug: Found equivalence set: path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: length#5, tmp%40#1
debug: selected length#5 from equivalence set
debug: Found equivalence set: encoded%0#5, slot_contents%0#5
debug: selected encoded%0#5 from equivalence set
debug: Found equivalence set: extended%0#5, slot_contents%1#5, slot_contents%2#4, slot_contents%3#3
debug: selected extended%0#5 from equivalence set
debug: Found equivalence set: encoded%0#4, slot_contents%0#4
debug: selected encoded%0#4 from equivalence set
debug: Found equivalence set: extended%0#4, slot_contents%1#4
debug: selected extended%0#4 from equivalence set
debug: Found equivalence set: encoded%0#3, slot_contents%0#3
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: slot_contents%2#3, slot_contents%3#2
debug: selected slot_contents%2#3 from equivalence set
debug: Found equivalence set: encoded%0#2, slot_contents%0#2
debug: selected encoded%0#2 from equivalence set
debug: Found equivalence set: slot_contents%2#2, slot_contents%3#1
debug: selected slot_contents%2#2 from equivalence set
debug: Found equivalence set: encoded%0#1, slot_contents%0#1
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: extended%0#1, slot_contents%1#1
debug: selected extended%0#1 from equivalence set
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: extended%0#0, slot_contents%1#0
debug: selected extended%0#0 from equivalence set
debug: Found equivalence set: extended%1#0, slot_contents%2#0, slot_contents%3#0
debug: selected extended%1#0 from equivalence set
debug: Found equivalence set: slot_contents%4#0, slot_contents%5#0
debug: selected slot_contents%4#0 from equivalence set
debug: Copy propagation made 24 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable array_data%0#4
debug: Removing unused variable expr_value_trimmed%0#4
debug: Removing unused variable tmp%13#0
debug: Removing unused variable array_data%0#3
debug: Removing unused variable expr_value_trimmed%0#3
debug: Removing unused variable tmp%19#0
debug: Removing unused variable array_data%0#2
debug: Removing unused variable expr_value_trimmed%0#2
debug: Removing unused variable tmp%25#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable arc4_arr#1
debug: Removing unused variable expr_value_trimmed%0#1
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable dyn_arr#0
debug: Removing unused variable index_is_in_bounds%0#0
debug: Removing unused variable array_data%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@59 with block@58 in block@60
debug: Merged linear block@59 into block@58
debug: Merged linear block@69 into block@68
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:42:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: length#5, tmp%40#1
debug: selected length#5 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@38 with block@8 in block@39
debug: Merged linear block@38 into block@8
debug: Replaced predecessor block@48 with block@47 in block@37
debug: Merged linear block@48 into block@47
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%3#4, slot_contents%0#7
debug: selected slot_contents%3#4 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 5/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 5, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.static_size.StaticSizeContract
debug: lowering array IR nodes in clear program of test_cases.array.static_size.StaticSizeContract
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%2#1, encoded%0#6
debug: selected array%data%2#1 from equivalence set
debug: Found equivalence set: array%sub_item%9#1, tmp%12#2
debug: selected array%sub_item%9#1 from equivalence set
debug: Found equivalence set: array%sub_item%11#1, tmp%13#2
debug: selected array%sub_item%11#1 from equivalence set
debug: Found equivalence set: array%sub_item%13#1, tmp%14#2
debug: selected array%sub_item%13#1 from equivalence set
debug: Found equivalence set: array%sub_item%15#1, tmp%15#2
debug: selected array%sub_item%15#1 from equivalence set
debug: Found equivalence set: array%sub_item%16#1, tmp%16#2
debug: selected array%sub_item%16#1 from equivalence set
debug: Found equivalence set: array%sub_item%17#1, tmp%17#2
debug: selected array%sub_item%17#1 from equivalence set
debug: Found equivalence set: array%sub_item%18#1, tmp%20#1
debug: selected array%sub_item%18#1 from equivalence set
debug: Found equivalence set: array%sub_item%20#1, tmp%21#1
debug: selected array%sub_item%20#1 from equivalence set
debug: Found equivalence set: array%sub_item%22#1, tmp%22#1
debug: selected array%sub_item%22#1 from equivalence set
debug: Found equivalence set: array%sub_item%24#1, tmp%23#1
debug: selected array%sub_item%24#1 from equivalence set
debug: Found equivalence set: array%sub_item%25#1, tmp%24#1
debug: selected array%sub_item%25#1 from equivalence set
debug: Found equivalence set: array%sub_item%26#1, tmp%25#1
debug: selected array%sub_item%26#1 from equivalence set
debug: Found equivalence set: array%sub_item%27#1, tmp%29#1
debug: selected array%sub_item%27#1 from equivalence set
debug: Found equivalence set: array%sub_item%29#1, tmp%30#1
debug: selected array%sub_item%29#1 from equivalence set
debug: Found equivalence set: array%sub_item%31#1, tmp%31#1
debug: selected array%sub_item%31#1 from equivalence set
debug: Found equivalence set: array%sub_item%33#1, tmp%32#1
debug: selected array%sub_item%33#1 from equivalence set
debug: Found equivalence set: array%sub_item%34#1, tmp%33#1
debug: selected array%sub_item%34#1 from equivalence set
debug: Found equivalence set: array%sub_item%35#1, tmp%34#1
debug: selected array%sub_item%35#1 from equivalence set
debug: Found equivalence set: array%sub_item%36#1, last_point.x#0
debug: selected last_point.x#0 from equivalence set
debug: Found equivalence set: array%sub_item%38#1, last_point.y#0
debug: selected last_point.y#0 from equivalence set
debug: Found equivalence set: array%sub_item%40#1, last_point.other.a#0
debug: selected last_point.other.a#0 from equivalence set
debug: Found equivalence set: array%sub_item%42#1, last_point.other.b#0
debug: selected last_point.other.b#0 from equivalence set
debug: Found equivalence set: array%sub_item%43#1, last_point.other.c#0
debug: selected last_point.other.c#0 from equivalence set
debug: Found equivalence set: array%sub_item%44#1, last_point.other.d#0
debug: selected last_point.other.d#0 from equivalence set
debug: Found equivalence set: array%array_len%0#1, tmp%0#9
debug: selected array%array_len%0#1 from equivalence set
debug: Found equivalence set: array%sub_item%45#1, point.x#0
debug: selected point.x#0 from equivalence set
debug: Found equivalence set: array%sub_item%47#1, point.y#0
debug: selected point.y#0 from equivalence set
debug: Found equivalence set: array%sub_item%49#1, point.other.a#0
debug: selected point.other.a#0 from equivalence set
debug: Found equivalence set: array%sub_item%51#1, point.other.b#0
debug: selected point.other.b#0 from equivalence set
debug: Found equivalence set: array%sub_item%52#1, point.other.c#0
debug: selected point.other.c#0 from equivalence set
debug: Found equivalence set: array%sub_item%53#1, point.other.d#0
debug: selected point.other.d#0 from equivalence set
debug: Found equivalence set: array%data%4#1, encoded%1#4
debug: selected array%data%4#1 from equivalence set
debug: Found equivalence set: array%array_contents%0#1, extended%0#5
debug: selected array%array_contents%0#1 from equivalence set
debug: Found equivalence set: array%array_len%1#1, tmp%0#7
debug: selected array%array_len%1#1 from equivalence set
debug: Found equivalence set: array%sub_item%54#1, last#0
debug: selected last#0 from equivalence set
debug: Found equivalence set: array%data%5#1, encoded%1#3
debug: selected array%data%5#1 from equivalence set
debug: Found equivalence set: array%array_contents%1#1, extended%0#4
debug: selected array%array_contents%1#1 from equivalence set
debug: Found equivalence set: array%array_len%2#1, tmp%0#6
debug: selected array%array_len%2#1 from equivalence set
debug: Found equivalence set: array%data%6#1, encoded%1#2
debug: selected array%data%6#1 from equivalence set
debug: Found equivalence set: array%array_contents%2#1, extended%0#3
debug: selected array%array_contents%2#1 from equivalence set
debug: Found equivalence set: array%array_len%3#1, tmp%5#3
debug: selected array%array_len%3#1 from equivalence set
debug: Found equivalence set: array%array_len%4#1, array_length%0#3
debug: selected array%array_len%4#1 from equivalence set
debug: Found equivalence set: array%sub_item%56#1, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: array%array_len%5#1, tmp%0#5
debug: selected array%array_len%5#1 from equivalence set
debug: Found equivalence set: array%data%7#1, encoded%1#1
debug: selected array%data%7#1 from equivalence set
debug: Found equivalence set: array%array_contents%3#1, extended%0#2
debug: selected array%array_contents%3#1 from equivalence set
debug: Found equivalence set: array%array_len%6#1, tmp%3#2
debug: selected array%array_len%6#1 from equivalence set
debug: Found equivalence set: array%array_len%7#1, array_length%0#2
debug: selected array%array_len%7#1 from equivalence set
debug: Found equivalence set: array%sub_item%57#1, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: array%array_contents%4#1, extended%0#1
debug: selected array%array_contents%4#1 from equivalence set
debug: Found equivalence set: array%array_len%8#1, array_length%0#1
debug: selected array%array_len%8#1 from equivalence set
debug: Found equivalence set: array%sub_item%58#1, item#0
debug: selected item#0 from equivalence set
debug: Found equivalence set: array%data%8#1, encoded%1#0
debug: selected array%data%8#1 from equivalence set
debug: Found equivalence set: array%array_contents%5#1, extended%0#0
debug: selected array%array_contents%5#1 from equivalence set
debug: Found equivalence set: array%data%9#1, encoded%2#0
debug: selected array%data%9#1 from equivalence set
debug: Found equivalence set: array%array_contents%6#1, extended%1#0
debug: selected array%array_contents%6#1 from equivalence set
debug: Found equivalence set: array%array_len%9#1, array_length%0#0
debug: selected array%array_len%9#1 from equivalence set
debug: Found equivalence set: array%array_len%10#1, array_length%3#0
debug: selected array%array_len%10#1 from equivalence set
debug: Copy propagation made 53 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%9#1
debug: Removing unused variable array%sub_item%11#1
debug: Removing unused variable array%sub_item%13#1
debug: Removing unused variable array%sub_item%16#1
debug: Removing unused variable array%sub_item%17#1
debug: Removing unused variable array%sub_item%18#1
debug: Removing unused variable array%sub_item%20#1
debug: Removing unused variable array%sub_item%22#1
debug: Removing unused variable array%sub_item%24#1
debug: Removing unused variable array%sub_item%25#1
debug: Removing unused variable array%sub_item%27#1
debug: Removing unused variable array%sub_item%29#1
debug: Removing unused variable array%sub_item%31#1
debug: Removing unused variable array%sub_item%33#1
debug: Removing unused variable array%sub_item%34#1
debug: Removing unused variable last_point.other.a#0
debug: Removing unused variable last_point.other.b#0
debug: Removing unused variable last_point.other.c#0
debug: Removing unused variable last_point.other.d#0
debug: Removing unused variable point.other.a#0
debug: Removing unused variable point.other.b#0
debug: Removing unused variable point.other.c#0
debug: Removing unused variable point.other.d#0
debug: Removing unused variable encoded%0#5
debug: Removing unused variable encoded%0#4
debug: Removing unused variable encoded%0#3
debug: Removing unused variable encoded%0#2
debug: Removing unused variable encoded%0#1
debug: Removing unused variable encoded%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x0000000000000000 array%sub_item%0#1) to 0x00000000000000000000000000000000
debug: Simplified (concat 0x array%encoded%5#1) to array%encoded%5#1
debug: Simplified (concat 0x x1#0) to x1#0
debug: Simplified (concat 0x x2#0) to x2#0
debug: Simplified (btoi array%sub_item%14#1) to (extract_uint64 array%value%0#1 24u)
debug: Simplified (* 0u 80u) to 0u
debug: Simplified (btoi array%sub_item%37#1) to (extract_uint64 array%value%3#1 8u)
debug: Simplified (btoi array%sub_item%46#1) to (extract_uint64 array%value%4#1 8u)
debug: Simplified (btoi last_point.x#0) to (extract_uint64 array%value%3#1 0u)
debug: Simplified (btoi point.x#0) to (extract_uint64 array%value%4#1 0u)
debug: Simplified (btoi point.x#0) to (extract_uint64 array%value%4#1 0u)
debug: Simplified (btoi last_point.x#0) to (extract_uint64 array%value%3#1 0u)
debug: Simplified (concat 0x some_more.0#0) to some_more.0#0
debug: Simplified (concat 0x some_more.0#0) to some_more.0#0
debug: Simplified (concat 0x some_more.1#0) to some_more.1#0
debug: Simplified (concat 0x array%data%4#1) // on error: max array length exceeded to array%data%4#1
debug: Simplified (concat 0x some_more#0) to some_more#0
debug: Simplified (concat 0x some_more#0) to some_more#0
debug: Simplified (concat 0x some_more#0) // on error: max array length exceeded to some_more#0
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 1u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x array%encoded_bit%0#1) to array%encoded_bit%0#1
debug: Simplified (concat 0x array%encoded_bit%0#1) to array%encoded_bit%0#1
debug: Simplified (* item_index_internal%0#7 1u) to item_index_internal%0#7
debug: Simplified (btoi array%sub_item%55#1) to (getbyte array%value%6#1 0u)
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#1) to val_as_bytes%0#1
debug: Simplified (concat 0x val_as_bytes%0#1) to val_as_bytes%0#1
debug: Simplified (concat 0x expr_value_trimmed%0#0) // on error: max array length exceeded to expr_value_trimmed%0#0
debug: Simplified (btoi item#0) to (extract_uint64 array%value%8#1 0u)
debug: Simplified (concat 0x encoded_bool%0#0) to encoded_bool%0#0
debug: Simplified (concat 0x encoded_bool%0#0) to encoded_bool%0#0
debug: Simplified (concat 0x encoded_bool%0#0) // on error: max array length exceeded to encoded_bool%0#0
debug: Simplified (concat 0x encoded_bool%1#0) to encoded_bool%1#0
debug: Simplified (concat 0x encoded_bool%1#0) to encoded_bool%1#0
debug: Simplified (extract3 array%value%0#1 8u 8u) to ((extract 8 8) array%value%0#1)
debug: Simplified (extract3 array%value%0#1 16u 8u) to ((extract 16 8) array%value%0#1)
debug: Simplified (extract3 array%value%0#1 24u 8u) to ((extract 24 8) array%value%0#1)
debug: Simplified (extract3 array%value%1#1 8u 8u) to ((extract 8 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 16u 8u) to ((extract 16 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 24u 8u) to ((extract 24 8) array%value%1#1)
debug: Simplified (extract3 array%value%1#1 64u 16u) to ((extract 64 16) array%value%1#1)
debug: Simplified (extract3 array%value%2#1 8u 8u) to ((extract 8 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 16u 8u) to ((extract 16 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 24u 8u) to ((extract 24 8) array%value%2#1)
debug: Simplified (extract3 array%value%2#1 64u 16u) to ((extract 64 16) array%value%2#1)
debug: Simplified (extract3 slot_contents%3#4 0u 80u) to ((extract 0 80) slot_contents%3#4)
debug: Simplified (extract3 array%value%3#1 0u 8u) to ((extract 0 8) array%value%3#1)
debug: Simplified (extract3 array%value%3#1 8u 8u) to ((extract 8 8) array%value%3#1)
debug: Simplified (extract3 array%value%3#1 16u 8u) to ((extract 16 8) array%value%3#1)
debug: Simplified (extract3 array%value%3#1 24u 8u) to ((extract 24 8) array%value%3#1)
debug: Simplified (extract3 array%value%4#1 0u 8u) to ((extract 0 8) array%value%4#1)
debug: Simplified (extract3 array%value%4#1 8u 8u) to ((extract 8 8) array%value%4#1)
debug: Simplified (extract3 array%value%4#1 16u 8u) to ((extract 16 8) array%value%4#1)
debug: Simplified (extract3 array%value%4#1 24u 8u) to ((extract 24 8) array%value%4#1)
debug: Simplified (extract3 array%value%5#1 0u 16u) to ((extract 0 16) array%value%5#1)
debug: Simplified (extract3 array%value%6#1 0u 1u) to ((extract 0 1) array%value%6#1)
debug: Simplified (extract3 array%value%7#1 0u 8u) to ((extract 0 8) array%value%7#1)
debug: Simplified (extract3 array%value%8#1 0u 8u) to ((extract 0 8) array%value%8#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%bytes_index%1#1: uint64 = (* i#7 80u) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1),)
debug: Replacing redundant declaration let array%bytes_index%2#1: uint64 = (* i#7 80u) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=uint64, name='array%bytes_index%0', version=1),)
debug: Replacing redundant declaration let array%bytes_len%0#1: uint64 = (len slot_contents%3#4) with copy of existing registers (Register(source_location=array/static_size.py:41:52-65, ir_type=uint64, name='byte_len%0', version=3),)
debug: Replacing redundant declaration let byte_len%0#2: uint64 = (len array%data%4#1) with copy of existing registers (Register(source_location=array/static_size.py:48:19-21, ir_type=uint64, name='array%bytes_len%1', version=1),)
debug: Replacing redundant declaration let array%bytes_len%4#1: uint64 = (len slot_contents%2#3) with copy of existing registers (Register(source_location=array/static_size.py:69:15-25, ir_type=uint64, name='array%bytes_len%3', version=1),)
debug: Replacing redundant declaration let array%bytes_len%7#1: uint64 = (len slot_contents%2#2) with copy of existing registers (Register(source_location=array/static_size.py:83:15-25, ir_type=uint64, name='array%bytes_len%6', version=1),)
debug: Found equivalence set: array%encoded%5#1, array%data%0#1
debug: selected array%encoded%5#1 from equivalence set
debug: Found equivalence set: x1#0, array%encoded%6#1
debug: selected x1#0 from equivalence set
debug: Found equivalence set: x2#0, array%encoded%12#1
debug: selected x2#0 from equivalence set
debug: Found equivalence set: array%bytes_index%0#1, array%bytes_index%1#1, array%bytes_index%2#1
debug: selected array%bytes_index%0#1 from equivalence set
debug: Found equivalence set: byte_len%0#3, array%bytes_len%0#1
debug: selected byte_len%0#3 from equivalence set
debug: Found equivalence set: some_more.0#0, array%encoded%18#1, array%data%3#1
debug: selected some_more.0#0 from equivalence set
debug: Found equivalence set: some_more.1#0, array%encoded%19#1
debug: selected some_more.1#0 from equivalence set
debug: Found equivalence set: array%data%4#1, array%array_contents%0#1
debug: selected array%data%4#1 from equivalence set
debug: Found equivalence set: array%bytes_len%1#1, byte_len%0#2
debug: selected array%bytes_len%1#1 from equivalence set
debug: Found equivalence set: some_more#0, array%encoded%20#1, array%data%5#1, array%array_contents%1#1
debug: selected some_more#0 from equivalence set
debug: Found equivalence set: array%encoded_bit%0#1, array%encoded%21#1, array%data%6#1
debug: selected array%encoded_bit%0#1 from equivalence set
debug: Found equivalence set: array%bytes_len%3#1, array%bytes_len%4#1
debug: selected array%bytes_len%3#1 from equivalence set
debug: Found equivalence set: item_index_internal%0#7, array%bytes_index%6#1
debug: selected item_index_internal%0#7 from equivalence set
debug: Found equivalence set: val_as_bytes%0#1, array%encoded%22#1, array%data%7#1
debug: selected val_as_bytes%0#1 from equivalence set
debug: Found equivalence set: array%bytes_len%6#1, array%bytes_len%7#1
debug: selected array%bytes_len%6#1 from equivalence set
debug: Found equivalence set: expr_value_trimmed%0#0, array%array_contents%4#1
debug: selected expr_value_trimmed%0#0 from equivalence set
debug: Found equivalence set: encoded_bool%0#0, array%encoded%23#1, array%data%8#1, array%array_contents%5#1
debug: selected encoded_bool%0#0 from equivalence set
debug: Found equivalence set: encoded_bool%1#0, array%encoded%24#1, array%data%9#1
debug: selected encoded_bool%1#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Replacing redundant declaration let array%value%1#1: bytes = (extract3 slot_contents%0#6 array%bytes_index%0#1 80u) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%value%2#1: bytes = (extract3 slot_contents%0#6 array%bytes_index%0#1 80u) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%value%0', version=1),)
debug: Replacing redundant declaration let array%array_len%0#1: uint64 = (/ byte_len%0#3 80u) with copy of existing registers (Register(source_location=array/static_size.py:41:52-65, ir_type=uint64, name='len_%0', version=3),)
debug: Replacing redundant declaration let len_%0#2: uint64 = (/ array%bytes_len%1#1 16u) with copy of existing registers (Register(source_location=array/static_size.py:48:19-21, ir_type=uint64, name='array%array_len%1', version=1),)
debug: Replacing redundant declaration let array%array_len%4#1: uint64 = (/ array%bytes_len%3#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:69:15-25, ir_type=uint64, name='array%array_len%3', version=1),)
debug: Replacing redundant declaration let array%array_len%7#1: uint64 = (/ array%bytes_len%6#1 8u) with copy of existing registers (Register(source_location=array/static_size.py:83:15-25, ir_type=uint64, name='array%array_len%6', version=1),)
debug: Found equivalence set: array%value%0#1, array%value%1#1, array%value%2#1
debug: selected array%value%0#1 from equivalence set
debug: Found equivalence set: len_%0#3, array%array_len%0#1
debug: selected len_%0#3 from equivalence set
debug: Found equivalence set: array%array_len%1#1, len_%0#2
debug: selected array%array_len%1#1 from equivalence set
debug: Found equivalence set: array%array_len%3#1, array%array_len%4#1
debug: selected array%array_len%3#1 from equivalence set
debug: Found equivalence set: array%array_len%6#1, array%array_len%7#1
debug: selected array%array_len%6#1 from equivalence set
debug: Copy propagation made 12 modifications
debug: Replacing redundant declaration let array%sub_item%19#1: bytes = ((extract 8 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%sub_item%21#1: bytes = ((extract 16 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%12', version=1),)
debug: Replacing redundant declaration let array%sub_item%23#1: bytes = ((extract 24 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%14', version=1),)
debug: Replacing redundant declaration let array%sub_item%28#1: bytes = ((extract 8 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%sub_item%30#1: bytes = ((extract 16 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%12', version=1),)
debug: Replacing redundant declaration let array%sub_item%32#1: bytes = ((extract 24 8) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:37:19-26, ir_type=bytes, name='array%sub_item%14', version=1),)
debug: Replacing redundant declaration let array%sub_item%35#1: bytes = ((extract 64 16) array%value%0#1) with copy of existing registers (Register(source_location=array/static_size.py:38:19-26, ir_type=bytes, name='array%sub_item%26', version=1),)
debug: Found equivalence set: array%sub_item%10#1, array%sub_item%19#1, array%sub_item%28#1
debug: selected array%sub_item%10#1 from equivalence set
debug: Found equivalence set: array%sub_item%12#1, array%sub_item%21#1, array%sub_item%30#1
debug: selected array%sub_item%12#1 from equivalence set
debug: Found equivalence set: array%sub_item%14#1, array%sub_item%23#1, array%sub_item%32#1
debug: selected array%sub_item%14#1 from equivalence set
debug: Found equivalence set: array%sub_item%26#1, array%sub_item%35#1
debug: selected array%sub_item%26#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%encoded%0#1
debug: Removing unused variable array%sub_item%0#1
debug: Removing unused variable array%encoded%1#1
debug: Removing unused variable array%sub_item%10#1
debug: Removing unused variable array%sub_item%12#1
debug: Removing unused variable array%sub_item%14#1
debug: Removing unused variable array%bytes_index%3#1
debug: Removing unused variable array%sub_item%37#1
debug: Removing unused variable array%sub_item%39#1
debug: Removing unused variable array%sub_item%41#1
debug: Removing unused variable array%sub_item%46#1
debug: Removing unused variable array%sub_item%48#1
debug: Removing unused variable array%sub_item%50#1
debug: Removing unused variable array%bytes_len%2#1
debug: Removing unused variable array%array_len%2#1
debug: Removing unused variable tmp%1#3
debug: Removing unused variable array%sub_item%55#1
debug: Removing unused variable array%bytes_len%5#1
debug: Removing unused variable array%array_len%5#1
debug: Removing unused variable tmp%1#2
debug: Removing unused variable item#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init, []
array/static_size.py:31:9 debug: eliminating local static slot assigned to path#0
array/static_size.py:46:9 debug: eliminating local static slot assigned to arr#5
array/static_size.py:58:9 debug: eliminating local static slot assigned to arr#4
array/static_size.py:64:9 debug: eliminating local static slot assigned to arr#3
array/static_size.py:78:9 debug: eliminating local static slot assigned to arr#2
array/static_size.py:96:9 debug: eliminating local static slot assigned to arr#1
array/static_size.py:121:9 debug: eliminating local static slot assigned to arr#0
debug: Removing unused variable path#0
debug: Removing unused variable arr#5
debug: Removing unused variable arr#4
debug: Removing unused variable arr#3
debug: Removing unused variable arr#2
debug: Removing unused variable arr#1
debug: Removing unused variable arr#0
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
array/static_size.py:105 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.xtra, []
array/static_size.py:115 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.more, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init using strategy RootOperandGrouping
debug: Coalescing tmp%0#0 with [tmp%0#9, tmp%0#1]
debug: Coalescing tmp%0#2 with [tmp%0#8, tmp%0#4]
debug: Coalescing tmp%3#0 with [tmp%3#6, tmp%3#4, tmp%3#3]
debug: Coalescing tmp%4#0 with [tmp%4#3, tmp%4#2]
debug: Coalescing tmp%5#0 with [tmp%5#5, tmp%5#6]
debug: Coalescing tmp%1#4 with [tmp%1#5]
debug: Coalescing tmp%2#1 with [tmp%2#5]
debug: Coalescing tmp%4#1 with [tmp%4#5, tmp%4#6, tmp%4#4]
debug: Coalescing tmp%8#2 with [tmp%8#3]
debug: Coalescing tmp%9#2 with [tmp%9#3]
debug: Coalescing tmp%10#1 with [tmp%10#2]
debug: Coalescing i#0 with [i#6, i#11, i#7, i#3, i#14, i#4, i#5, i#17, i#1, i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#3, continue_looping%0#4, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing tmp%37#0 with [tmp%37#1]
debug: Coalescing byte_len%0#0 with [byte_len%0#3, byte_len%0#1]
debug: Coalescing len_%0#0 with [len_%0#3, len_%0#1]
debug: Coalescing as_bytes%0#0 with [as_bytes%0#3, as_bytes%0#2, as_bytes%0#1]
debug: Coalescing len_16_bit%0#0 with [len_16_bit%0#3, len_16_bit%0#2, len_16_bit%0#1]
debug: Coalescing concat_result%0#2 with [concat_result%0#4]
debug: Coalescing length#0 with [length#2, length#9, length#5, length#6, length#1]
debug: Coalescing point_idx#0 with [point_idx#5, point_idx#1, point_idx#2]
debug: Coalescing tmp%2#2 with [tmp%2#6, tmp%2#3]
debug: Coalescing dx#0 with [dx#6, dx#1, dx#3]
debug: Coalescing tmp%6#2 with [tmp%6#4]
debug: Coalescing dy#0 with [dy#5, dy#1, dy#2]
debug: Coalescing tmp%10#0 with [tmp%10#3]
debug: Coalescing val_as_bytes%0#0 with [val_as_bytes%0#1]
debug: Coalescing test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 with [test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#1, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#2, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#3, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#4, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#5, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#6, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#7, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#8]
debug: Coalescing tmp%11#0 with [tmp%11#1]
debug: Coalescing tmp%5#1 with [tmp%5#4, tmp%5#2]
debug: Coalescing tmp%17#0 with [tmp%17#1]
debug: Coalescing count#0 with [count#4, count#10, count#5, count#6, count#7, count#16, count#1, count#2, count#3]
debug: Coalescing count#13 with [count#19]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#6, item_index_internal%0#11, item_index_internal%0#7, item_index_internal%0#8, item_index_internal%0#3, item_index_internal%0#14, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#17, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#1]
debug: Coalescing slot_contents%2#1 with [slot_contents%2#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#2]
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing resulted in 252 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.xtra
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.xtra using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.xtra
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.more
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.more using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.more
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/StaticSizeContract.ir/StaticSizeContract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/StaticSizeContract.ir/StaticSizeContract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[10]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@5.ops[17]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_test_array_route@5.ops[19]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_test_array_route@5.ops[25]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_test_array_route@5.ops[27]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_test_array_route@5.ops[61]: 'l-store-copy array%encoded%3#1 0'
debug: Replaced main_test_array_route@5.ops[63]: 'v-load array%encoded%3#1' with 'l-load array%encoded%3#1'
debug: Inserted main_test_array_route@5.ops[66]: 'l-store-copy array%encoded%4#1 0'
debug: Replaced main_test_array_route@5.ops[68]: 'v-load array%encoded%4#1' with 'l-load array%encoded%4#1'
debug: Inserted main_test_array_route@5.ops[92]: 'l-store-copy array%encoded%9#1 0'
debug: Replaced main_test_array_route@5.ops[94]: 'v-load array%encoded%9#1' with 'l-load array%encoded%9#1'
debug: Inserted main_test_array_route@5.ops[97]: 'l-store-copy array%encoded%10#1 0'
debug: Replaced main_test_array_route@5.ops[99]: 'v-load array%encoded%10#1' with 'l-load array%encoded%10#1'
debug: Inserted main_test_array_route@5.ops[127]: 'l-store-copy array%encoded%15#1 0'
debug: Replaced main_test_array_route@5.ops[129]: 'v-load array%encoded%15#1' with 'l-load array%encoded%15#1'
debug: Inserted main_test_array_route@5.ops[132]: 'l-store-copy array%encoded%16#1 0'
debug: Replaced main_test_array_route@5.ops[134]: 'v-load array%encoded%16#1' with 'l-load array%encoded%16#1'
debug: Inserted main_test_array_route@5.ops[141]: 'l-store-copy array%data%2#1 0'
debug: Replaced main_test_array_route@5.ops[143]: 'v-load array%data%2#1' with 'l-load array%data%2#1'
debug: Inserted main_test_array_route@5.ops[50]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced main_test_array_route@5.ops[53]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted main_test_array_route@5.ops[58]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced main_test_array_route@5.ops[61]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted main_test_array_route@5.ops[76]: 'l-store-copy array%sub_item%3#1 0'
debug: Replaced main_test_array_route@5.ops[79]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted main_test_array_route@5.ops[84]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced main_test_array_route@5.ops[87]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted main_test_array_route@5.ops[92]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced main_test_array_route@5.ops[95]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted main_test_array_route@5.ops[107]: 'l-store-copy array%encoded%11#1 0'
debug: Replaced main_test_array_route@5.ops[110]: 'v-load array%encoded%11#1' with 'l-load array%encoded%11#1'
debug: Inserted main_test_array_route@5.ops[115]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced main_test_array_route@5.ops[118]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted main_test_array_route@5.ops[123]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced main_test_array_route@5.ops[126]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted main_test_array_route@5.ops[131]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced main_test_array_route@5.ops[134]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted main_test_array_route@5.ops[146]: 'l-store-copy array%encoded%17#1 0'
debug: Replaced main_test_array_route@5.ops[149]: 'v-load array%encoded%17#1' with 'l-load array%encoded%17#1'
debug: Inserted main_test_array_route@5.ops[55]: 'l-store-copy array%encoded%2#1 0'
debug: Replaced main_test_array_route@5.ops[61]: 'v-load array%encoded%2#1' with 'l-load array%encoded%2#1'
debug: Inserted main_test_array_route@5.ops[82]: 'l-store-copy array%encoded%7#1 0'
debug: Replaced main_test_array_route@5.ops[88]: 'v-load array%encoded%7#1' with 'l-load array%encoded%7#1'
debug: Inserted main_test_array_route@5.ops[91]: 'l-store-copy array%encoded%8#1 0'
debug: Replaced main_test_array_route@5.ops[97]: 'v-load array%encoded%8#1' with 'l-load array%encoded%8#1'
debug: Inserted main_test_array_route@5.ops[123]: 'l-store-copy array%encoded%13#1 0'
debug: Replaced main_test_array_route@5.ops[129]: 'v-load array%encoded%13#1' with 'l-load array%encoded%13#1'
debug: Inserted main_test_array_route@5.ops[132]: 'l-store-copy array%encoded%14#1 0'
debug: Replaced main_test_array_route@5.ops[138]: 'v-load array%encoded%14#1' with 'l-load array%encoded%14#1'
debug: Inserted main_test_array_route@5.ops[37]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_test_array_route@5.ops[49]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_test_array_route@5.ops[36]: 'l-store-copy tmp%1#4 1'
debug: Replaced main_test_array_route@5.ops[59]: 'v-load tmp%1#4' with 'l-load tmp%1#4'
debug: Inserted main_test_array_route@5.ops[35]: 'l-store-copy tmp%2#1 2'
debug: Replaced main_test_array_route@5.ops[70]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_array_route@5.ops[77]: 'l-store-copy array%encoded%5#1 0'
debug: Replaced main_test_array_route@5.ops[116]: 'v-load array%encoded%5#1' with 'l-load array%encoded%5#1'
debug: Inserted main_test_array_route@5.ops[119]: 'l-store-copy array%data%1#1 0'
debug: Replaced main_test_array_route@5.ops[158]: 'v-load array%data%1#1' with 'l-load array%data%1#1'
debug: Inserted main_test_array_route@5.ops[34]: 'l-store-copy tmp%3#5 3'
debug: Replaced main_test_array_route@5.ops[76]: 'v-load tmp%3#5' with 'l-load tmp%3#5'
debug: Inserted main_test_array_route@5.ops[46]: 'l-store-copy tmp%4#1 4'
debug: Replaced main_test_array_route@5.ops[90]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_array_route@5.ops[45]: 'l-store-copy tmp%5#0 5'
debug: Replaced main_test_array_route@5.ops[100]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@5.ops[21]: 'l-store-copy y1#0 0'
debug: Replaced main_test_array_route@5.ops[83]: 'v-load y1#0' with 'l-load y1#0'
debug: Inserted main_test_array_route@5.ops[45]: 'l-store-copy tmp%6#3 7'
debug: Replaced main_test_array_route@5.ops[112]: 'v-load tmp%6#3' with 'l-load tmp%6#3'
debug: Inserted main_test_array_route@5.ops[15]: 'l-store-copy x1#0 0'
debug: Replaced main_test_array_route@5.ops[89]: 'v-load x1#0' with 'l-load x1#0'
debug: Inserted main_test_array_route@5.ops[45]: 'l-store-copy tmp%7#2 9'
debug: Replaced main_test_array_route@5.ops[119]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_test_array_route@5.ops[57]: 'l-store-copy tmp%8#2 10'
debug: Replaced main_test_array_route@5.ops[138]: 'v-load tmp%8#2' with 'l-load tmp%8#2'
debug: Inserted main_test_array_route@5.ops[56]: 'l-store-copy tmp%9#2 11'
debug: Replaced main_test_array_route@5.ops[148]: 'v-load tmp%9#2' with 'l-load tmp%9#2'
debug: Inserted main_test_array_route@5.ops[31]: 'l-store-copy y2#0 2'
debug: Replaced main_test_array_route@5.ops[131]: 'v-load y2#0' with 'l-load y2#0'
debug: Inserted main_test_array_route@5.ops[56]: 'l-store-copy tmp%10#1 13'
debug: Replaced main_test_array_route@5.ops[160]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_test_array_route@5.ops[25]: 'l-store-copy x2#0 2'
debug: Replaced main_test_array_route@5.ops[137]: 'v-load x2#0' with 'l-load x2#0'
debug: Inserted main_test_array_route@5.ops[56]: 'l-store-copy tmp%11#2 15'
debug: Replaced main_test_array_route@5.ops[167]: 'v-load tmp%11#2' with 'l-load tmp%11#2'
debug: Inserted main_for_header@6.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@6.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@7.ops[10]: 'l-store-copy array%value%0#1 0'
debug: Replaced main_for_body@7.ops[12]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted main_for_body@7.ops[23]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_for_body@7.ops[25]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_for_body@7.ops[29]: 'l-store-copy array%sub_item%26#1 0'
debug: Replaced main_for_body@7.ops[31]: 'v-load array%sub_item%26#1' with 'l-load array%sub_item%26#1'
debug: Inserted main_for_body@7.ops[37]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_for_body@7.ops[39]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_for_body@7.ops[45]: 'l-store-copy tmp%28#1 0'
debug: Replaced main_for_body@7.ops[47]: 'v-load tmp%28#1' with 'l-load tmp%28#1'
debug: Inserted main_for_body@7.ops[53]: 'l-store-copy i#8 0'
debug: Replaced main_for_body@7.ops[54]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[56]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_for_body@7.ops[58]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_for_body@7.ops[64]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_for_body@7.ops[66]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_for_body@7.ops[5]: 'l-store-copy array%bytes_index%0#1 0'
debug: Replaced main_for_body@7.ops[8]: 'v-load array%bytes_index%0#1' with 'l-load array%bytes_index%0#1'
debug: Inserted main_for_body@7.ops[20]: 'l-store-copy i#8 0'
debug: Replaced main_for_body@7.ops[23]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[43]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_for_body@7.ops[46]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_for_body@7.ops[63]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_for_body@7.ops[66]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_for_body@7.ops[1]: 'l-store-copy slot_contents%0#6 0'
debug: Replaced main_for_body@7.ops[8]: 'v-load slot_contents%0#6' with 'l-load slot_contents%0#6'
debug: Inserted main_for_body@7.ops[17]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced main_for_body@7.ops[24]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted main_for_body@7.ops[37]: 'l-store-copy reinterpret_biguint%0#0 0'
debug: Replaced main_for_body@7.ops[48]: 'v-load reinterpret_biguint%0#0' with 'l-load reinterpret_biguint%0#0'
debug: Inserted main_for_body@7.ops[57]: 'l-store-copy reinterpret_biguint%1#0 0'
debug: Replaced main_for_body@7.ops[69]: 'v-load reinterpret_biguint%1#0' with 'l-load reinterpret_biguint%1#0'
debug: Inserted main_for_body@7.ops[62]: 'l-store-copy i#8 2'
debug: Replaced main_for_body@7.ops[77]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@7.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@7.ops[16]: 'l-store-copy array%value%0#1 1'
debug: Replaced main_for_body@7.ops[33]: 'v-load array%value%0#1' with 'l-load array%value%0#1'
debug: Inserted main_for_body@7.ops[22]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@7.ops[42]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@7.ops[39]: 'l-store-copy array%sub_item%26#1 1'
debug: Replaced main_for_body@7.ops[59]: 'v-load array%sub_item%26#1' with 'l-load array%sub_item%26#1'
debug: Inserted main_for_body@7.ops[29]: 'l-store-copy i#8 3'
debug: Replaced main_for_body@7.ops[64]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_after_for@8.ops[1]: 'l-store-copy slot_contents%3#4 0'
debug: Replaced main_after_for@8.ops[3]: 'v-load slot_contents%3#4' with 'l-load slot_contents%3#4'
debug: Inserted main_after_for@8.ops[5]: 'l-store-copy byte_len%0#0 0'
debug: Replaced main_after_for@8.ops[7]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted main_after_for@8.ops[10]: 'l-store-copy len_%0#0 0'
debug: Replaced main_after_for@8.ops[12]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted main_after_for@8.ops[14]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_after_for@8.ops[16]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_after_for@8.ops[18]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_after_for@8.ops[20]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_after_for@8.ops[32]: 'l-store-copy array%value%3#1 0'
debug: Replaced main_after_for@8.ops[34]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted main_after_for@8.ops[35]: 'l-store-copy array%value%3#1 0'
debug: Replaced main_after_for@8.ops[38]: 'v-load array%value%3#1' with 'l-load array%value%3#1'
debug: Inserted main_after_for@8.ops[23]: 'l-store-copy concat_result%0#2 0'
debug: Replaced main_after_for@8.ops[29]: 'v-load concat_result%0#2' with 'l-load concat_result%0#2'
debug: Inserted main_after_for@8.ops[22]: 'l-store-copy slot_contents%3#4 1'
debug: Replaced main_after_for@8.ops[32]: 'v-load slot_contents%3#4' with 'l-load slot_contents%3#4'
debug: Inserted main_after_for@8.ops[4]: 'l-store-copy slot_contents%3#4 0'
debug: Replaced main_after_for@8.ops[22]: 'v-load slot_contents%3#4' with 'l-load slot_contents%3#4'
debug: Inserted main_for_header@39.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@39.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@40.ops[10]: 'l-store-copy array%value%4#1 0'
debug: Replaced main_for_body@40.ops[12]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted main_for_body@40.ops[22]: 'l-store-copy tmp%1#6 0'
debug: Replaced main_for_body@40.ops[24]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_for_body@40.ops[5]: 'l-store-copy array%bytes_index%4#1 0'
debug: Replaced main_for_body@40.ops[8]: 'v-load array%bytes_index%4#1' with 'l-load array%bytes_index%4#1'
debug: Inserted main_for_body@40.ops[14]: 'l-store-copy array%value%4#1 0'
debug: Replaced main_for_body@40.ops[17]: 'v-load array%value%4#1' with 'l-load array%value%4#1'
debug: Inserted main_for_body@40.ops[1]: 'l-store-copy slot_contents%2#4 0'
debug: Replaced main_for_body@40.ops[8]: 'v-load slot_contents%2#4' with 'l-load slot_contents%2#4'
debug: Inserted main_for_body@40.ops[17]: 'l-store-copy point.x#0 1'
debug: Replaced main_for_body@40.ops[23]: 'v-load point.x#0' with 'l-load point.x#0'
debug: Inserted main_if_body@41.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_if_body@41.ops[10]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_if_body@41.ops[3]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_if_body@41.ops[10]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_else_body@42.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_else_body@42.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_else_body@42.ops[3]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_else_body@42.ops[10]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_after_if_else@43.ops[3]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_after_if_else@43.ops[5]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_after_if_else@46.ops[1]: 'l-store-copy dx#0 0'
debug: Replaced main_after_if_else@46.ops[2]: 'v-load dx#0' with 'l-load dx#0'
debug: Inserted main_after_if_else@46.ops[6]: 'l-store-copy dy#0 0'
debug: Replaced main_after_if_else@46.ops[7]: 'v-load dy#0' with 'l-load dy#0'
debug: Inserted main_after_if_else@46.ops[13]: 'l-store-copy tmp%9#2 0'
debug: Replaced main_after_if_else@46.ops[15]: 'v-load tmp%9#2' with 'l-load tmp%9#2'
debug: Inserted main_after_if_else@46.ops[9]: 'l-store-copy tmp%8#2 0'
debug: Replaced main_after_if_else@46.ops[12]: 'v-load tmp%8#2' with 'l-load tmp%8#2'
debug: Inserted main_after_if_else@46.ops[18]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_after_if_else@46.ops[21]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_after_if_else@46.ops[4]: 'l-store-copy tmp%7#3 0'
debug: Replaced main_after_if_else@46.ops[12]: 'v-load tmp%7#3' with 'l-load tmp%7#3'
debug: Inserted main_after_for@47.ops[6]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_after_for@47.ops[8]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_after_for@47.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@47.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@47.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_after_for@47.ops[5]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[1]: 'l-store-copy tmp%10#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[3]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[5]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[7]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[10]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[12]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[15]: 'l-store-copy reinterpret_bytes[32]%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[17]: 'v-load reinterpret_bytes[32]%0#0' with 'l-load reinterpret_bytes[32]%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[26]: 'l-store-copy array%data%4#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[28]: 'v-load array%data%4#1' with 'l-load array%data%4#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[32]: 'l-store-copy array%bytes_len%1#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[34]: 'v-load array%bytes_len%1#1' with 'l-load array%bytes_len%1#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[37]: 'l-store-copy array%array_len%1#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[39]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[42]: 'l-store-copy tmp%1#4 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[44]: 'v-load tmp%1#4' with 'l-load tmp%1#4'
debug: Inserted main_test_extend_from_tuple_route@9.ops[52]: 'l-store-copy array%value%5#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[54]: 'v-load array%value%5#1' with 'l-load array%value%5#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[56]: 'l-store-copy last#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[58]: 'v-load last#0' with 'l-load last#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[61]: 'l-store-copy tmp%2#4 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[63]: 'v-load tmp%2#4' with 'l-load tmp%2#4'
debug: Inserted main_test_extend_from_tuple_route@9.ops[67]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[69]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[71]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[73]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[76]: 'l-store-copy result#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[78]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[81]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[83]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[98]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[100]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[103]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[105]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[110]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[112]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[115]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[117]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[22]: 'l-store-copy some_more.1#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[25]: 'v-load some_more.1#0' with 'l-load some_more.1#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[30]: 'l-store-copy array%data%4#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[32]: 'v-load array%data%4#1' with 'l-load array%data%4#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[49]: 'l-store-copy array%bytes_index%5#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[52]: 'v-load array%bytes_index%5#1' with 'l-load array%bytes_index%5#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[96]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[99]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[18]: 'l-store-copy reinterpret_bytes[32]%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[21]: 'v-load reinterpret_bytes[32]%0#0' with 'l-load reinterpret_bytes[32]%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[20]: 'l-store-copy some_more.0#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[26]: 'v-load some_more.0#0' with 'l-load some_more.0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[91]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[96]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[95]: 'l-store-copy array_head_and_tail%0#1 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[102]: 'v-load array_head_and_tail%0#1' with 'l-load array_head_and_tail%0#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[84]: 'l-store-copy result#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[94]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[35]: 'l-store-copy array%data%4#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[54]: 'v-load array%data%4#1' with 'l-load array%data%4#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[96]: 'l-store-copy result#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[119]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[55]: 'l-store-copy array%data%4#1 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[81]: 'v-load array%data%4#1' with 'l-load array%data%4#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[45]: 'l-store-copy array%array_len%1#1 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[73]: 'v-load array%array_len%1#1' with 'l-load array%array_len%1#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[28]: 'l-store-copy some_more.1#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[68]: 'v-load some_more.1#0' with 'l-load some_more.1#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[68]: 'l-store-copy last#0 3'
debug: Replaced main_test_extend_from_tuple_route@9.ops[116]: 'v-load last#0' with 'l-load last#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[15]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[17]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[21]: 'l-store-copy byte_len%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[23]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[26]: 'l-store-copy len_%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[28]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[30]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[32]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[34]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[36]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[43]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[45]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[48]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[50]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[18]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[20]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[40]: 'l-store-copy concat_result%0#2 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[43]: 'v-load concat_result%0#2' with 'l-load concat_result%0#2'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[21]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[39]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_bool_array_route@11.ops[1]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_bool_array_route@11.ops[3]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_test_bool_array_route@11.ops[5]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_bool_array_route@11.ops[7]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_bool_array_route@11.ops[10]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_bool_array_route@11.ops[12]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_bool_array_route@11.ops[15]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_test_bool_array_route@11.ops[17]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_test_bool_array_route@11.ops[19]: 'l-store-copy length#0 0'
debug: Replaced main_test_bool_array_route@11.ops[23]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_for_header@12.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@12.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@13.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@13.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@13.ops[14]: 'l-store-copy slot_contents%1#3 0'
debug: Replaced main_for_body@13.ops[16]: 'v-load slot_contents%1#3' with 'l-load slot_contents%1#3'
debug: Inserted main_for_body@13.ops[19]: 'l-store-copy array%array_contents%2#1 0'
debug: Replaced main_for_body@13.ops[21]: 'v-load array%array_contents%2#1' with 'l-load array%array_contents%2#1'
debug: Inserted main_for_body@13.ops[7]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_for_body@13.ops[11]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_body@13.ops[13]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced main_for_body@13.ops[19]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted main_for_body@13.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@13.ops[26]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@14.ops[1]: 'l-store-copy slot_contents%2#3 0'
debug: Replaced main_after_for@14.ops[3]: 'v-load slot_contents%2#3' with 'l-load slot_contents%2#3'
debug: Inserted main_after_for@14.ops[5]: 'l-store-copy array%bytes_len%3#1 0'
debug: Replaced main_after_for@14.ops[7]: 'v-load array%bytes_len%3#1' with 'l-load array%bytes_len%3#1'
debug: Inserted main_after_for@14.ops[10]: 'l-store-copy array%array_len%3#1 0'
debug: Replaced main_after_for@14.ops[12]: 'v-load array%array_len%3#1' with 'l-load array%array_len%3#1'
debug: Inserted main_after_for@14.ops[15]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_after_for@14.ops[17]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_header@15.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@15.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@16.ops[1]: 'l-store-copy slot_contents%4#2 0'
debug: Replaced main_for_body@16.ops[3]: 'v-load slot_contents%4#2' with 'l-load slot_contents%4#2'
debug: Inserted main_for_body@16.ops[7]: 'l-store-copy array%value%6#1 0'
debug: Replaced main_for_body@16.ops[9]: 'v-load array%value%6#1' with 'l-load array%value%6#1'
debug: Inserted main_for_body@16.ops[12]: 'l-store-copy val#1 0'
debug: Replaced main_for_body@16.ops[16]: 'v-load val#1' with 'l-load val#1'
debug: Inserted main_if_body@17.ops[3]: 'l-store-copy count#0 0'
debug: Replaced main_if_body@17.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted main_after_for@19.ops[6]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_after_for@19.ops[8]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_after_for@19.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@19.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@19.ops[2]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced main_after_for@19.ops[5]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[5]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[7]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[10]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[12]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[15]: 'l-store-copy reinterpret_bytes[8]%5#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[17]: 'v-load reinterpret_bytes[8]%5#0' with 'l-load reinterpret_bytes[8]%5#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[19]: 'l-store-copy length#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[23]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_for_header@21.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@21.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@22.ops[4]: 'l-store-copy slot_contents%1#2 0'
debug: Replaced main_for_body@22.ops[6]: 'v-load slot_contents%1#2' with 'l-load slot_contents%1#2'
debug: Inserted main_for_body@22.ops[9]: 'l-store-copy array%array_contents%3#1 0'
debug: Replaced main_for_body@22.ops[11]: 'v-load array%array_contents%3#1' with 'l-load array%array_contents%3#1'
debug: Inserted main_for_body@22.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_for_body@22.ops[8]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_for_body@22.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@22.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@23.ops[1]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_after_for@23.ops[3]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_after_for@23.ops[5]: 'l-store-copy array%bytes_len%6#1 0'
debug: Replaced main_after_for@23.ops[7]: 'v-load array%bytes_len%6#1' with 'l-load array%bytes_len%6#1'
debug: Inserted main_after_for@23.ops[10]: 'l-store-copy array%array_len%6#1 0'
debug: Replaced main_after_for@23.ops[12]: 'v-load array%array_len%6#1' with 'l-load array%array_len%6#1'
debug: Inserted main_after_for@23.ops[15]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_after_for@23.ops[17]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_header@24.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@24.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@25.ops[10]: 'l-store-copy array%value%7#1 0'
debug: Replaced main_for_body@25.ops[12]: 'v-load array%value%7#1' with 'l-load array%value%7#1'
debug: Inserted main_for_body@25.ops[14]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@25.ops[16]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@25.ops[5]: 'l-store-copy array%bytes_index%7#1 0'
debug: Replaced main_for_body@25.ops[8]: 'v-load array%bytes_index%7#1' with 'l-load array%bytes_index%7#1'
debug: Inserted main_for_body@25.ops[20]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_for_body@25.ops[24]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_for_body@25.ops[1]: 'l-store-copy slot_contents%4#1 0'
debug: Replaced main_for_body@25.ops[8]: 'v-load slot_contents%4#1' with 'l-load slot_contents%4#1'
debug: Inserted main_if_body@26.ops[3]: 'l-store-copy count#0 0'
debug: Replaced main_if_body@26.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted main_after_for@28.ops[1]: 'l-store-copy slot_contents%5#1 0'
debug: Replaced main_after_for@28.ops[3]: 'v-load slot_contents%5#1' with 'l-load slot_contents%5#1'
debug: Inserted main_after_for@28.ops[5]: 'l-store-copy byte_len%0#0 0'
debug: Replaced main_after_for@28.ops[7]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted main_after_for@28.ops[10]: 'l-store-copy len_%0#0 0'
debug: Replaced main_after_for@28.ops[12]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted main_after_for@28.ops[14]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_after_for@28.ops[16]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_after_for@28.ops[18]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced main_after_for@28.ops[20]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted main_after_for@28.ops[27]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_after_for@28.ops[29]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_after_for@28.ops[32]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@28.ops[34]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@28.ops[23]: 'l-store-copy arc4_arr#0 0'
debug: Replaced main_after_for@28.ops[26]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted main_after_for@28.ops[4]: 'l-store-copy slot_contents%5#1 0'
debug: Replaced main_after_for@28.ops[22]: 'v-load slot_contents%5#1' with 'l-load slot_contents%5#1'
debug: Inserted main_sum_array_route@29.ops[1]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_sum_array_route@29.ops[3]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_sum_array_route@29.ops[5]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_sum_array_route@29.ops[7]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_sum_array_route@29.ops[10]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_sum_array_route@29.ops[12]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_sum_array_route@29.ops[15]: 'l-store-copy arc4_arr#0 0'
debug: Replaced main_sum_array_route@29.ops[17]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted main_sum_array_route@29.ops[19]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced main_sum_array_route@29.ops[21]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted main_sum_array_route@29.ops[27]: 'l-store-copy array%bytes_len%8#1 0'
debug: Replaced main_sum_array_route@29.ops[29]: 'v-load array%bytes_len%8#1' with 'l-load array%bytes_len%8#1'
debug: Inserted main_sum_array_route@29.ops[22]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced main_sum_array_route@29.ops[26]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted main_for_header@30.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@30.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@31.ops[10]: 'l-store-copy array%value%8#1 0'
debug: Replaced main_for_body@31.ops[12]: 'v-load array%value%8#1' with 'l-load array%value%8#1'
debug: Inserted main_for_body@31.ops[5]: 'l-store-copy array%bytes_index%8#1 0'
debug: Replaced main_for_body@31.ops[8]: 'v-load array%bytes_index%8#1' with 'l-load array%bytes_index%8#1'
debug: Inserted main_for_body@31.ops[16]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_for_body@31.ops[19]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_for_body@31.ops[1]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_for_body@31.ops[8]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_for_body@31.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@31.ops[24]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@32.ops[6]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_after_for@32.ops[8]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_after_for@32.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@32.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@32.ops[2]: 'l-store-copy val_as_bytes%2#0 0'
debug: Replaced main_after_for@32.ops[5]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_test_arc4_bool_route@33.ops[1]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[3]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_arc4_bool_route@33.ops[5]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[7]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_test_arc4_bool_route@33.ops[10]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[12]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_test_arc4_bool_route@33.ops[43]: 'l-store-copy array%array_contents%6#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[45]: 'v-load array%array_contents%6#1' with 'l-load array%array_contents%6#1'
debug: Inserted main_test_arc4_bool_route@33.ops[49]: 'l-store-copy array%bytes_len%9#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[51]: 'v-load array%bytes_len%9#1' with 'l-load array%bytes_len%9#1'
debug: Inserted main_test_arc4_bool_route@33.ops[60]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[62]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[65]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[67]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_arc4_bool_route@33.ops[70]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[72]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_test_arc4_bool_route@33.ops[76]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[78]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_test_arc4_bool_route@33.ops[81]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[83]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_test_arc4_bool_route@33.ops[98]: 'l-store-copy encoded_bool%2#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[100]: 'v-load encoded_bool%2#0' with 'l-load encoded_bool%2#0'
debug: Inserted main_test_arc4_bool_route@33.ops[115]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[117]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_test_arc4_bool_route@33.ops[122]: 'l-store-copy index_is_in_bounds%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[124]: 'v-load index_is_in_bounds%1#0' with 'l-load index_is_in_bounds%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[134]: 'l-store-copy encoded_bool%3#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[136]: 'v-load encoded_bool%3#0' with 'l-load encoded_bool%3#0'
debug: Inserted main_test_arc4_bool_route@33.ops[151]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[153]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_arc4_bool_route@33.ops[156]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[158]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_test_arc4_bool_route@33.ops[160]: 'l-store-copy array%bytes_len%10#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[162]: 'v-load array%bytes_len%10#1' with 'l-load array%bytes_len%10#1'
debug: Inserted main_test_arc4_bool_route@33.ops[175]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[177]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_test_arc4_bool_route@33.ops[180]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[182]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_arc4_bool_route@33.ops[17]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[20]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_arc4_bool_route@33.ops[31]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[34]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_arc4_bool_route@33.ops[41]: 'l-store-copy encoded_bool%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[44]: 'v-load encoded_bool%1#0' with 'l-load encoded_bool%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[49]: 'l-store-copy array%array_contents%6#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[51]: 'v-load array%array_contents%6#1' with 'l-load array%array_contents%6#1'
debug: Inserted main_test_arc4_bool_route@33.ops[111]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[114]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_test_arc4_bool_route@33.ops[116]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[119]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_arc4_bool_route@33.ops[149]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[152]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_test_arc4_bool_route@33.ops[154]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[157]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_arc4_bool_route@33.ops[179]: 'l-store-copy concat_result%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[182]: 'v-load concat_result%1#0' with 'l-load concat_result%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[15]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_test_arc4_bool_route@33.ops[20]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_test_arc4_bool_route@33.ops[23]: 'l-store-copy to_encode%0#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[27]: 'v-load to_encode%0#1' with 'l-load to_encode%0#1'
debug: Inserted main_test_arc4_bool_route@33.ops[31]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[36]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_arc4_bool_route@33.ops[39]: 'l-store-copy to_encode%1#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[43]: 'v-load to_encode%1#1' with 'l-load to_encode%1#1'
debug: Inserted main_test_arc4_bool_route@33.ops[62]: 'l-store-copy array%array_len%9#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[66]: 'v-load array%array_len%9#1' with 'l-load array%array_len%9#1'
debug: Inserted main_test_arc4_bool_route@33.ops[96]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[100]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[103]: 'l-store-copy is_true%0#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[107]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted main_test_arc4_bool_route@33.ops[116]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[121]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_arc4_bool_route@33.ops[143]: 'l-store-copy is_true%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[147]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[156]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[161]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_test_arc4_bool_route@33.ops[183]: 'l-store-copy array%array_len%10#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[187]: 'v-load array%array_len%10#1' with 'l-load array%array_len%10#1'
debug: Inserted main_test_arc4_bool_route@33.ops[56]: 'l-store-copy array%array_contents%6#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[66]: 'v-load array%array_contents%6#1' with 'l-load array%array_contents%6#1'
debug: Inserted main_test_arc4_bool_route@33.ops[178]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[188]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_test_arc4_bool_route@33.ops[85]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[96]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[116]: 'l-store-copy tmp%8#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[129]: 'v-load tmp%8#1' with 'l-load tmp%8#1'
debug: Inserted main_test_arc4_bool_route@33.ops[157]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[170]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_test_arc4_bool_route@33.ops[73]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[85]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[29]: 'l-store-copy encoded_bool%0#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[48]: 'v-load encoded_bool%0#0' with 'l-load encoded_bool%0#0'
debug: Inserted main_test_arc4_bool_route@33.ops[80]: 'l-store-copy tmp%4#1 1'
debug: Replaced main_test_arc4_bool_route@33.ops[103]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_arc4_bool_route@33.ops[104]: 'l-store-copy tmp%4#1 1'
debug: Replaced main_test_arc4_bool_route@33.ops[141]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_arc4_bool_route@33.ops[107]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced main_test_arc4_bool_route@33.ops[148]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[55]: 'l-store-copy slot%6 1'
debug: Replaced main_test_arc4_bool_route@33.ops[183]: 'v-load slot%6' with 'l-load slot%6'
debug: Inserted main_bare_routing@34.ops[1]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_bare_routing@34.ops[3]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main___algopy_default_create@35.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced main___algopy_default_create@35.ops[3]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main___algopy_default_create@35.ops[5]: 'l-store-copy tmp%49#0 0'
debug: Replaced main___algopy_default_create@35.ops[7]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main___algopy_default_create@35.ops[10]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@35.ops[12]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@36.ops[1]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@36.ops[3]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[33]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[44]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[48]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits_block@0.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits_block@0.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted xtra_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced xtra_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted xtra_block@0.ops[11]: 'l-store-copy new_state_value%0#0 0'
debug: Replaced xtra_block@0.ops[14]: 'v-load new_state_value%0#0' with 'l-load new_state_value%0#0'
debug: Inserted xtra_block@0.ops[21]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced xtra_block@0.ops[24]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted xtra_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced xtra_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted xtra_block@0.ops[30]: 'l-store-copy tmp%2#0 0'
debug: Replaced xtra_block@0.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted xtra_block@0.ops[28]: 'l-store-copy tmp%1#0 0'
debug: Replaced xtra_block@0.ops[35]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted xtra_block@0.ops[24]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced xtra_block@0.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted xtra_block@0.ops[18]: 'l-store-copy tmp%0#0 0'
debug: Replaced xtra_block@0.ops[35]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted more_block@0.ops[10]: 'l-store-copy to_encode%0#0 0'
debug: Replaced more_block@0.ops[12]: 'v-load to_encode%0#0' with 'l-load to_encode%0#0'
debug: Inserted more_block@0.ops[32]: 'l-store-copy to_encode%1#0 0'
debug: Replaced more_block@0.ops[34]: 'v-load to_encode%1#0' with 'l-load to_encode%1#0'
debug: Inserted more_block@0.ops[40]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced more_block@0.ops[42]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted more_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced more_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted more_block@0.ops[19]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced more_block@0.ops[22]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted more_block@0.ops[27]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced more_block@0.ops[30]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted more_block@0.ops[39]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced more_block@0.ops[42]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted more_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced more_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted more_block@0.ops[30]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced more_block@0.ops[35]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted more_block@0.ops[22]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced more_block@0.ops[35]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted more_block@0.ops[16]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced more_block@0.ops[45]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Found 24 edge set/s for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Allocated 3 variable/s to x-stack: array%value%4#1, dy#0, tmp%0#0
debug: shared x-stack for main_for_body@40 -> main_if_body@41: array%value%4#1
debug: shared x-stack for main_for_body@40 -> main_else_body@42: array%value%4#1
debug: shared x-stack for main_if_body@44 -> main_after_if_else@46: dy#0
debug: shared x-stack for main_else_body@45 -> main_after_if_else@46: dy#0
debug: shared x-stack for main_test_extend_from_tuple_route@9 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_test_extend_from_arc4_tuple_route@10 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_after_for@19 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_after_for@28 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_after_for@32 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_test_arc4_bool_route@33 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main___algopy_default_create@35 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_after_if_else@36 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: shared x-stack for main_after_for@47 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37: tmp%0#0
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init f-stack entry: ['array%value%3#1', 'last_point.x#0', 'slot%0', 'slot%3', 'slot%4', 'slot%5', 'array%array_len%3#1', 'array%array_len%6#1', 'array%array_len%8#1', 'count#0', 'count#13', 'dx#0', 'i#0', 'item_index_internal%0#0', 'last_point.y#0', 'len_%0#0', 'length#0', 'point.y#0', 'point_idx#0', 'tmp%2#2', 'total#0']
debug: test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init f-stack on first store: []
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
array/static_size.py:105 debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes:
array/static_size.py:115 debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.more() -> bytes:
debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@37 into main_after_if_else@36
debug: inlining single reference block main_for_body@31 into main_for_header@30
debug: inlining single reference block main_for_body@22 into main_for_header@21
debug: inlining single reference block main_for_body@25 into main_for_header@24
debug: inlining single reference block main_if_body@26 into main_for_header@24
debug: inlining single reference block main_for_body@13 into main_for_header@12
debug: inlining single reference block main_for_body@16 into main_for_header@15
debug: inlining single reference block main_if_body@17 into main_for_header@15
debug: inlining single reference block main_for_body@7 into main_for_header@6
debug: inlining single reference block main_for_body@40 into main_for_header@39
debug: inlining single reference block main_if_body@41 into main_for_header@39
debug: inlining single reference block main_if_body@44 into main_after_if_else@43
debug: inlining single reference block main___algopy_default_create@35 into main_bare_routing@34
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_after_if_else@36
debug: removing explicit jump to fall-through block main_for_header@30
debug: removing explicit jump to fall-through block main_for_header@21
debug: removing explicit jump to fall-through block main_for_header@24
debug: removing explicit jump to fall-through block main_after_if_else@27
debug: removing explicit jump to fall-through block main_for_header@12
debug: removing explicit jump to fall-through block main_for_header@15
debug: removing explicit jump to fall-through block main_after_if_else@18
debug: removing explicit jump to fall-through block main_for_header@6
debug: removing explicit jump to fall-through block main_for_header@39
debug: removing explicit jump to fall-through block main_after_if_else@43
debug: removing explicit jump to fall-through block main_after_if_else@46
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_bits_block@0 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_if_body@1 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_while_body@4 into dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
array/static_size.py:105 debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes:
debug: inlining single reference block xtra_block@0 into xtra
array/static_size.py:115 debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.more() -> bytes:
debug: inlining single reference block more_block@0 into more
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.dynamic_array_pop_bit for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.array.immutable.pop_x for inlining
debug: marking single-use function test_cases.array.immutable.sum_arr for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_nested_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (== tmp%24#0 NoOp) to (! tmp%24#0)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%43#0 NoOp) to (! tmp%43#0)
debug: Simplified (== tmp%47#0 NoOp) to (! tmp%47#0)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (== tmp%52#0 NoOp) to (! tmp%52#0)
debug: Simplified (== tmp%59#0 NoOp) to (! tmp%59#0)
debug: Simplified (== tmp%66#0 NoOp) to (! tmp%66#0)
debug: Simplified (== tmp%73#0 NoOp) to (! tmp%73#0)
debug: Simplified (== tmp%80#0 NoOp) to (! tmp%80#0)
debug: Simplified (== tmp%87#0 NoOp) to (! tmp%87#0)
debug: Simplified (== tmp%93#0 NoOp) to (! tmp%93#0)
debug: Simplified (== tmp%99#0 NoOp) to (! tmp%99#0)
debug: Simplified (== tmp%106#0 NoOp) to (! tmp%106#0)
debug: Simplified (== tmp%113#0 NoOp) to (! tmp%113#0)
debug: Simplified (== tmp%120#0 0u) to (! tmp%120#0)
debug: Simplified (extract3 reinterpret_bytes[16]%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) reinterpret_bytes[16]%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 reinterpret_bytes[16]%1#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) reinterpret_bytes[16]%1#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@26 from switch tmp%119#0 {0u => block@27, * => block@28} to goto_nth [block@27][tmp%119#0] else goto block@28
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@26 from goto_nth [block@27][tmp%119#0] else goto block@28 to goto tmp%119#0 ? block@28 : block@27
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@26
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@25 with block@24 in block@30
debug: Merged linear block@25 into block@24
debug: Replaced predecessor block@29 with block@28 in block@30
debug: Merged linear block@29 into block@28
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@24
debug: Removed empty block: block@28
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let item_start_offset%1#0: uint64 = (extract_uint16 tmp%110#0 2u) with copy of existing registers (Register(source_location=array/immutable.py:74, ir_type=uint64, name='item_end_offset%0', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: item_end_offset%0#0, item_start_offset%1#0
debug: selected item_end_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: uint64 = (* length_minus_1#0 2u) with copy of existing registers (Register(source_location=INTERNAL:103:4-24, ir_type=uint64, name='popped_header_offset', version=0),)
debug: Found equivalence set: popped_header_offset#0, tmp%1#0
debug: selected popped_header_offset#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_length#0, length#0
debug: selected new_length#0 from equivalence set
debug: Found equivalence set: tmp%4#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#1, tmp%11#0
debug: selected array_head_and_tail#1 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable start_at_index#0
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (select tmp%0#1 tmp%2#1 0u) to tmp%0#1
debug: Simplified (* 0u 2u) to 0u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#1: uint64 = (* new_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Found equivalence set: tmp%0#1, tail_offset#0, tmp%3#1
debug: selected tail_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:202:4-26, ir_type=uint64, name='item_offset_adjustment', version=0),)
debug: Replacing redundant declaration let tmp%12#0: uint64 = (* array_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:203:33-64, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let tmp%13#0: uint64 = (len array_head_and_tail#0) with copy of existing registers (Register(source_location=INTERNAL:207:4-26, ir_type=uint64, name='item_offset_adjustment', version=2),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:208:33-62, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: item_offset_adjustment#0, tmp%4#0, tmp%16#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%0#0, tmp%12#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: item_offset_adjustment#2, tmp%13#0
debug: selected item_offset_adjustment#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%4#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%3#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%3#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: data%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi value_at_index%0#0) to (extract_uint64 array_head_and_tail%0#0 item_offset%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:394:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:386:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:378:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:370:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:362:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:352:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:345:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:338:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_tuple_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:331:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:324:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:297:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:232:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:214:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_nested_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:210:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:206:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:187:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:168:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:153:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:135:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:111:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:75:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#16, arr#44
debug: selected arr#44 from equivalence set
debug: Found equivalence set: concat_result%0#17, arr#45
debug: selected arr#45 from equivalence set
debug: Found equivalence set: concat_result%1#10, arr#47
debug: selected arr#47 from equivalence set
debug: Found equivalence set: concat_result%2#2, arr#50
debug: selected arr#50 from equivalence set
debug: Found equivalence set: val_as_bytes%0#4, assigned_value%0#0
debug: selected val_as_bytes%0#4 from equivalence set
debug: Found equivalence set: updated_target%0#0, arr#51
debug: selected arr#51 from equivalence set
debug: Found equivalence set: tmp%11#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: array_data%0#15, arr#36
debug: selected arr#36 from equivalence set
debug: Found equivalence set: concat_result%0#16, arr#38
debug: selected arr#38 from equivalence set
debug: Found equivalence set: encoded_bool%1#3, arc4_item%0#4
debug: selected encoded_bool%1#3 from equivalence set
debug: Found equivalence set: encoded_bool%2#2, arc4_item%1#3
debug: selected encoded_bool%2#2 from equivalence set
debug: Found equivalence set: encoded_bool%3#1, arc4_item%2#3
debug: selected encoded_bool%3#1 from equivalence set
debug: Found equivalence set: encoded_bool%4#1, arc4_item%3#3
debug: selected encoded_bool%4#1 from equivalence set
debug: Found equivalence set: data%1#3, arr#43
debug: selected arr#43 from equivalence set
debug: Found equivalence set: array_data%0#14, arr#32
debug: selected arr#32 from equivalence set
debug: Found equivalence set: concat_result%0#15, arr#34
debug: selected arr#34 from equivalence set
debug: Found equivalence set: data%0#5, arr#35
debug: selected arr#35 from equivalence set
debug: Found equivalence set: array_data%0#13, arr#29
debug: selected arr#29 from equivalence set
debug: Found equivalence set: concat_result%0#14, arr#31
debug: selected arr#31 from equivalence set
debug: Found equivalence set: encoded_bool%0#2, item1%0#4
debug: selected encoded_bool%0#2 from equivalence set
debug: Found equivalence set: encoded_bool%1#2, item2%0#1
debug: selected encoded_bool%1#2 from equivalence set
debug: Found equivalence set: item0%0%0#3, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: item1%0%0#3, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: item2%0%0#1, baz#0
debug: selected baz#0 from equivalence set
debug: Found equivalence set: array_data%0#12, arr#24
debug: selected arr#24 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#3, encoded_tuple%0#2
debug: selected encoded_tuple_buffer%3#3 from equivalence set
debug: Found equivalence set: result%1#3, r_head_and_tail%0#4
debug: selected result%1#3 from equivalence set
debug: Found equivalence set: concat_result%0#13, arr#26
debug: selected arr#26 from equivalence set
debug: Found equivalence set: data%0#4, arr#28
debug: selected arr#28 from equivalence set
debug: Found equivalence set: array_data%0#11, arr#19
debug: selected arr#19 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#2, encoded_tuple%0#1
debug: selected encoded_tuple_buffer%3#2 from equivalence set
debug: Found equivalence set: result%1#2, r_head_and_tail%0#3
debug: selected result%1#2 from equivalence set
debug: Found equivalence set: concat_result%0#12, arr#21
debug: selected arr#21 from equivalence set
debug: Found equivalence set: data%0#3, arr#23
debug: selected arr#23 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%0#0, arr#18
debug: selected arr#18 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%1#0, arr#17
debug: selected arr#17 from equivalence set
debug: Found equivalence set: tmp%40#0, arr_to_add#0
debug: selected arr_to_add#0 from equivalence set
debug: Found equivalence set: reinterpret_uint64[][]%0#0, arr#13
debug: selected arr#13 from equivalence set
debug: Found equivalence set: array_data%0#10, extra_arr#0
debug: selected extra_arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#11, extra_arr#2
debug: selected extra_arr#2 from equivalence set
debug: Found equivalence set: result%1#1, r_head_and_tail%0#2
debug: selected result%1#1 from equivalence set
debug: Found equivalence set: concat_result%1#9, arr#16
debug: selected arr#16 from equivalence set
debug: Found equivalence set: array_data%1#1, totals#0
debug: selected totals#0 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: value_at_index%0#1, inner_arr#0
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: concat_result%2#1, totals#2
debug: selected totals#2 from equivalence set
debug: Found equivalence set: totals#1, tmp%41#0
debug: selected totals#1 from equivalence set
debug: Found equivalence set: array_data%0#9, arr2#1
debug: selected arr2#1 from equivalence set
debug: Found equivalence set: array_data%1#0, arr7#0
debug: selected arr7#0 from equivalence set
debug: Found equivalence set: array_data%2#0, arr8#0
debug: selected arr8#0 from equivalence set
debug: Found equivalence set: array_data%3#0, arr9#0
debug: selected arr9#0 from equivalence set
debug: Found equivalence set: concat_result%0#10, arr2#3
debug: selected arr2#3 from equivalence set
debug: Found equivalence set: concat_result%1#8, arr7#2
debug: selected arr7#2 from equivalence set
debug: Found equivalence set: concat_result%2#0, arr8#2
debug: selected arr8#2 from equivalence set
debug: Found equivalence set: concat_result%3#0, arr9#2
debug: selected arr9#2 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%2#0, arr1#0
debug: selected arr1#0 from equivalence set
debug: Found equivalence set: reinterpret_bool[]%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bool,bool)[]%0#0, arr3#0
debug: selected arr3#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%0#0, arr4#0
debug: selected arr4#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: encoded_bool%0#1, value_at_index%1#0
debug: selected encoded_bool%0#1 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: encoded_bool%1#1, item1%0#1
debug: selected encoded_bool%1#1 from equivalence set
debug: Found equivalence set: encoded_bool%2#1, item2%0#0
debug: selected encoded_bool%2#1 from equivalence set
debug: Found equivalence set: item0%0%0#0, tup.foo#0
debug: selected tup.foo#0 from equivalence set
debug: Found equivalence set: item1%0%0#0, tup.bar#0
debug: selected tup.bar#0 from equivalence set
debug: Found equivalence set: item2%0%0#0, tup.baz#0
debug: selected tup.baz#0 from equivalence set
debug: Found equivalence set: array_length%3#0, reverse_index_internal%3#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: item0%1%0#0, dyn_tup.foo#0
debug: selected dyn_tup.foo#0 from equivalence set
debug: Found equivalence set: item1%1%0#0, dyn_tup.bar#0
debug: selected dyn_tup.bar#0 from equivalence set
debug: Found equivalence set: item_index_internal%3#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: sum1#1, elements_to_encode%0#0
debug: selected sum1#1 from equivalence set
debug: Found equivalence set: sum2#1, elements_to_encode%1#0
debug: selected sum2#1 from equivalence set
debug: Found equivalence set: sum3#1, elements_to_encode%2#0
debug: selected sum3#1 from equivalence set
debug: Found equivalence set: sum4#1, elements_to_encode%3#0
debug: selected sum4#1 from equivalence set
debug: Found equivalence set: tmp%56#0, append#4
debug: selected append#4 from equivalence set
debug: Found equivalence set: concat_result%0#9, arr#10
debug: selected arr#10 from equivalence set
debug: Found equivalence set: concat_result%1#7, arr#12
debug: selected arr#12 from equivalence set
debug: Found equivalence set: arr#11, tmp%57#0
debug: selected arr#11 from equivalence set
debug: Found equivalence set: tmp%63#0, append#3
debug: selected append#3 from equivalence set
debug: Found equivalence set: concat_result%0#8, arr#7
debug: selected arr#7 from equivalence set
debug: Found equivalence set: concat_result%1#6, arr#9
debug: selected arr#9 from equivalence set
debug: Found equivalence set: arr#8, tmp%64#0
debug: selected arr#8 from equivalence set
debug: Found equivalence set: tmp%70#0, append#2
debug: selected append#2 from equivalence set
debug: Found equivalence set: concat_result%0#7, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: concat_result%1#5, arr#6
debug: selected arr#6 from equivalence set
debug: Found equivalence set: arr#5, tmp%71#0
debug: selected arr#5 from equivalence set
debug: Found equivalence set: tmp%77#0, append#1
debug: selected append#1 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#1, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#1 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#1
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#6, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%7#0, encoded_tuple%1#0
debug: selected encoded_tuple_buffer%7#0 from equivalence set
debug: Found equivalence set: result%3#0, r_head_and_tail%1#0
debug: selected result%3#0 from equivalence set
debug: Found equivalence set: concat_result%1#4, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: arr#2, tmp%78#0
debug: selected arr#2 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bool,bool)[]%1#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%84#0, append#0
debug: selected append#0 from equivalence set
debug: Found equivalence set: slot%0#0, mutable#0
debug: selected mutable#0 from equivalence set
debug: Found equivalence set: concat_result%0#5, tmp%85#0
debug: selected concat_result%0#5 from equivalence set
debug: Found equivalence set: reinterpret_bytes[16]%0#0, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: concat_result%0#4, prefix#3
debug: selected prefix#3 from equivalence set
debug: Found equivalence set: concat_result%1#3, result#3, tmp%91#0
debug: selected result#3 from equivalence set
debug: Found equivalence set: item0%0#0, arg.0#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: item1%0#0, arg.1#1
debug: selected arg.1#1 from equivalence set
debug: Found equivalence set: concat_result%0#3, prefix#2
debug: selected prefix#2 from equivalence set
debug: Found equivalence set: concat_result%1#2, result#2, tmp%97#0
debug: selected result#2 from equivalence set
debug: Found equivalence set: tmp%103#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: concat_result%0#2, prefix#1
debug: selected prefix#1 from equivalence set
debug: Found equivalence set: concat_result%1#1, result#1, tmp%104#0
debug: selected result#1 from equivalence set
debug: Found equivalence set: item0%1#0, arg.0#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: item1%1#0, arg.1#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: concat_result%0#1, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, result#0, tmp%111#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%1#0, imm1#0
debug: selected imm1#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%2#0, imm2#0
debug: selected imm2#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, tmp%117#0
debug: selected concat_result%0#0 from equivalence set
debug: Copy propagation made 125 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#4
debug: Removing unused variable encoded_tuple_buffer%0#4
debug: Removing unused variable current_tail_offset%1#3
debug: Removing unused variable tail_offset%0#3
debug: Removing unused variable r_count%0#4
debug: Removing unused variable item1%0%0#2
debug: Removing unused variable item0%1%0#2
debug: Removing unused variable current_tail_offset%0#3
debug: Removing unused variable encoded_tuple_buffer%0#3
debug: Removing unused variable current_tail_offset%1#2
debug: Removing unused variable tail_offset%0#2
debug: Removing unused variable r_count%0#3
debug: Removing unused variable item1%0%0#1
debug: Removing unused variable item0%1%0#1
debug: Removing unused variable current_tail_offset%0#2
debug: Removing unused variable encoded_tuple_buffer%0#2
debug: Removing unused variable current_tail_offset%1#1
debug: Removing unused variable tail_offset%0#1
debug: Removing unused variable r_count%0#2
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%0#1
debug: Removing unused variable encoded_tuple_buffer%0#1
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#1
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%4#1
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#9) to encoded%0#9
debug: Simplified (btoi arc4_item%0#5) to (extract_uint64 array_head_and_tail%0#7 item_offset%0#6)
debug: Simplified (btoi arc4_item%1#4) to (extract_uint64 array_head_and_tail%1#5 item_offset%1#4)
debug: Simplified (btoi arc4_item%2#4) to (extract_uint64 array_head_and_tail%2#5 item_offset%2#4)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array_head_and_tail%3#5 0u 8u) // on error: Index access is out of bounds to ((extract 2 8) arr#47)
debug: Simplified (btoi arc4_item%3#4) to (extract_uint64 arr#47 2u)
debug: Simplified (btoi arc4_item%4#0) to (extract_uint64 array_head_and_tail%4#0 item_offset%4#0)
debug: Simplified (btoi arc4_item%5#0) to (extract_uint64 array_head_and_tail%5#0 item_offset%5#0)
debug: Simplified (btoi arc4_item%6#0) to (extract_uint64 array_head_and_tail%6#0 item_offset%6#0)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (extract3 array_head_and_tail%7#0 16u 8u) // on error: Index access is out of bounds to ((extract 18 8) arr#51)
debug: Simplified (btoi arc4_item%7#0) to (extract_uint64 arr#51 18u)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x encoded_bool%0#3) to encoded_bool%0#3
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#5 0u 16u) // on error: Index access is out of bounds to ((extract 2 16) arr#33)
debug: Simplified (btoi item0%0#5) to (extract_uint64 arc4_item%0#3 0u)
debug: Simplified (btoi item1%0#5) to (extract_uint64 arc4_item%0#3 8u)
debug: Simplified (btoi item0%1#4) to (extract_uint64 arc4_item%1#2 0u)
debug: Simplified (btoi item1%1#4) to (extract_uint64 arc4_item%1#2 8u)
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 array_head_and_tail%2#3 0u 16u) // on error: Index access is out of bounds to ((extract 2 16) arr#35)
debug: Simplified (btoi item0%2#2) to (extract_uint64 arc4_item%2#2 0u)
debug: Simplified (btoi item1%2#2) to (extract_uint64 arc4_item%2#2 8u)
debug: Simplified (btoi item0%3#2) to (extract_uint64 arc4_item%3#2 0u)
debug: Simplified (btoi item1%3#2) to (extract_uint64 arc4_item%3#2 8u)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== tmp%2#7 0u) to (! tmp%2#7)
debug: Simplified (== tmp%5#4 0u) to (! tmp%5#4)
debug: Simplified (* 0u 9u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#4 0u 9u) // on error: Index access is out of bounds to ((extract 2 9) arr#30)
debug: Simplified (btoi item0%0#4) to (extract_uint64 arc4_item%0#2 0u)
debug: Simplified (== foo#0 0u) to (! foo#0)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#3) to val_as_bytes%0#3
debug: Simplified ((extract 6 2) as_bytes%1#8) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#4) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi item0%0#3) to (extract_uint64 arc4_item%0#1 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi item0%2#1) to (extract_uint64 arc4_item%2#1 0u)
debug: Simplified (btoi item0%3#1) to (extract_uint64 arc4_item%3#1 0u)
debug: Simplified (== tmp%24#0 NoOp) to (! tmp%24#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#2) to val_as_bytes%0#2
debug: Simplified ((extract 6 2) as_bytes%1#7) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#3) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi item0%0#2) to (extract_uint64 arc4_item%0#0 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi item0%2#0) to (extract_uint64 arc4_item%2#0 0u)
debug: Simplified (btoi item0%3#0) to (extract_uint64 arc4_item%3#0 0u)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified ((extract 6 2) as_bytes%0#8) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%1#6) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (== tmp%43#0 NoOp) to (! tmp%43#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== i#17 0u) to (! i#17)
debug: Simplified (== i#17 0u) to (! i#17)
debug: Simplified (== i#17 0u) to (! i#17)
debug: Simplified (== i#17 0u) to (! i#17)
debug: Simplified (== tmp%47#0 NoOp) to (! tmp%47#0)
debug: Simplified (btoi value_at_index%0#0) to (extract_uint64 array_head_and_tail%0#0 item_offset%0#0)
debug: Simplified (btoi item0%0#1) to (extract_uint64 value_at_index%2#0 0u)
debug: Simplified (btoi item0%1#1) to (extract_uint64 value_at_index%3#0 0u)
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified (== tmp%52#0 NoOp) to (! tmp%52#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#4) to encoded%0#4
debug: Simplified (== tmp%59#0 NoOp) to (! tmp%59#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x00) to 0x8000
debug: Simplified (concat 0x8000 0x80) to 0x800080
debug: Simplified (concat 0x800080 0x00) to 0x80008000
debug: Simplified (concat 0x80008000 0x80) to 0x8000800080
debug: Simplified (== tmp%0#4 0u) to (! tmp%0#4)
debug: Simplified (concat 0x encoded_bool%5#0) to encoded_bool%5#0
debug: Simplified (== tmp%66#0 NoOp) to (! tmp%66#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#3) to encoded%0#3
debug: Simplified (== tmp%0#3 0u) to (! tmp%0#3)
debug: Simplified (== tmp%2#2 0u) to (! tmp%2#2)
debug: Simplified (== tmp%73#0 NoOp) to (! tmp%73#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) as_bytes%0#3) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (concat 0x val_as_bytes%0#1) to val_as_bytes%0#1
debug: Simplified ((extract 6 2) as_bytes%1#2) to 0x000a
debug: Simplified (concat val_as_bytes%0#1 0x000a) to 0x0000000000000000000a
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (concat 0x0000000000000000000a 0x000548656c6c6f) to 0x0000000000000000000a000548656c6c6f
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000000000a000548656c6c6f) to 17u
debug: Simplified (concat 0x0002 0x0000000000000000000a000548656c6c6f) to 0x00020000000000000000000a000548656c6c6f
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x val_as_bytes%1#1) to val_as_bytes%1#1
debug: Simplified ((extract 6 2) as_bytes%4#0) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%5#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (== tmp%80#0 NoOp) to (! tmp%80#0)
debug: Simplified (== tmp%0#1 0u) to (! tmp%0#1)
debug: Simplified (== tmp%2#1 0u) to (! tmp%2#1)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%2#0) to slot_contents%2#0
debug: Simplified (== tmp%87#0 NoOp) to (! tmp%87#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#1) to encoded%0#1
debug: Simplified (== tmp%93#0 NoOp) to (! tmp%93#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Simplified (== tmp%99#0 NoOp) to (! tmp%99#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x 0x000161) to 0x000161
debug: Simplified (concat 0x000161 0x000162) to 0x000161000162
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (== tmp%106#0 NoOp) to (! tmp%106#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x 0x000161) to 0x000161
debug: Simplified (concat 0x000161 0x000162) to 0x000161000162
debug: Simplified (concat 0x arg.0#0) to arg.0#0
debug: Simplified (== tmp%113#0 NoOp) to (! tmp%113#0)
debug: Simplified (== tmp%120#0 0u) to (! tmp%120#0)
debug: Simplified (replace3 arr#50 18u val_as_bytes%0#4) to ((replace2 18) arr#50 val_as_bytes%0#4)
debug: Simplified (extract3 arc4_item%0#3 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#3) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%0#3 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%0#3) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#2 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#2 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%1#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#2 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#2 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%2#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#2 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#2 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%3#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%0#2 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#2) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%0#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#1) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#1) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#1) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#1 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#1) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#0) // on error: Index access is out of bounds
debug: Simplified (extract3 value_at_index%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) value_at_index%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 value_at_index%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) value_at_index%3#0) // on error: Index access is out of bounds
debug: Simplified (extract3 reinterpret_bytes[16]%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) reinterpret_bytes[16]%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 reinterpret_bytes[16]%1#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) reinterpret_bytes[16]%1#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@25 from switch tmp%119#0 {0u => block@26, * => block@27} to goto_nth [block@26][tmp%119#0] else goto block@27
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@25 from goto_nth [block@26][tmp%119#0] else goto block@27 to goto tmp%119#0 ? block@27 : block@26
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@168 with block@2 in block@169
debug: Merged linear block@168 into block@2
debug: Merged linear block@169 into block@2
debug: Replaced predecessor block@152 with block@3 in block@153
debug: Merged linear block@152 into block@3
debug: Replaced predecessor block@155 with block@154 in block@153
debug: Merged linear block@155 into block@154
debug: Merged linear block@167 into block@166
debug: Replaced predecessor block@146 with block@4 in block@147
debug: Merged linear block@146 into block@4
debug: Replaced predecessor block@149 with block@148 in block@147
debug: Merged linear block@149 into block@148
debug: Merged linear block@151 into block@150
debug: Replaced predecessor block@140 with block@5 in block@141
debug: Merged linear block@140 into block@5
debug: Replaced predecessor block@143 with block@142 in block@141
debug: Merged linear block@143 into block@142
debug: Merged linear block@145 into block@144
debug: Replaced predecessor block@130 with block@6 in block@131
debug: Merged linear block@130 into block@6
debug: Replaced predecessor block@133 with block@132 in block@131
debug: Merged linear block@133 into block@132
debug: Replaced predecessor block@137 with block@136 in block@135
debug: Merged linear block@137 into block@136
debug: Merged linear block@139 into block@138
debug: Replaced predecessor block@120 with block@7 in block@121
debug: Merged linear block@120 into block@7
debug: Replaced predecessor block@123 with block@122 in block@121
debug: Merged linear block@123 into block@122
debug: Replaced predecessor block@127 with block@126 in block@125
debug: Merged linear block@127 into block@126
debug: Merged linear block@129 into block@128
debug: Replaced predecessor block@118 with block@8 in block@119
debug: Merged linear block@118 into block@8
debug: Merged linear block@119 into block@8
debug: Replaced predecessor block@116 with block@9 in block@117
debug: Merged linear block@116 into block@9
debug: Merged linear block@117 into block@9
debug: Replaced predecessor block@102 with block@10 in block@103
debug: Merged linear block@102 into block@10
debug: Replaced predecessor block@107 with block@106 in block@105
debug: Merged linear block@107 into block@106
debug: Replaced predecessor block@109 with block@108 in block@103
debug: Merged linear block@109 into block@108
debug: Replaced predecessor block@113 with block@112 in block@111
debug: Merged linear block@113 into block@112
debug: Merged linear block@115 into block@114
debug: Replaced predecessor block@96 with block@11 in block@97
debug: Merged linear block@96 into block@11
debug: Replaced predecessor block@99 with block@98 in block@97
debug: Merged linear block@99 into block@98
debug: Merged linear block@101 into block@100
debug: Replaced predecessor block@72 with block@12 in block@73
debug: Merged linear block@72 into block@12
debug: Replaced predecessor block@75 with block@74 in block@73
debug: Merged linear block@75 into block@74
debug: Replaced predecessor block@81 with block@80 in block@77
debug: Merged linear block@81 into block@80
debug: Replaced predecessor block@89 with block@88 in block@83
debug: Merged linear block@89 into block@88
debug: Replaced predecessor block@93 with block@92 in block@91
debug: Merged linear block@93 into block@92
debug: Merged linear block@95 into block@94
debug: Replaced predecessor block@66 with block@13 in block@67
debug: Merged linear block@66 into block@13
debug: Replaced predecessor block@69 with block@68 in block@67
debug: Merged linear block@69 into block@68
debug: Merged linear block@71 into block@70
debug: Replaced predecessor block@60 with block@14 in block@61
debug: Merged linear block@60 into block@14
debug: Replaced predecessor block@63 with block@62 in block@61
debug: Merged linear block@63 into block@62
debug: Merged linear block@65 into block@64
debug: Replaced predecessor block@54 with block@15 in block@55
debug: Merged linear block@54 into block@15
debug: Replaced predecessor block@57 with block@56 in block@55
debug: Merged linear block@57 into block@56
debug: Merged linear block@59 into block@58
debug: Replaced predecessor block@48 with block@16 in block@49
debug: Merged linear block@48 into block@16
debug: Replaced predecessor block@51 with block@50 in block@49
debug: Merged linear block@51 into block@50
debug: Merged linear block@53 into block@52
debug: Replaced predecessor block@42 with block@17 in block@43
debug: Merged linear block@42 into block@17
debug: Replaced predecessor block@45 with block@44 in block@43
debug: Merged linear block@45 into block@44
debug: Merged linear block@47 into block@46
debug: Replaced predecessor block@40 with block@18 in block@41
debug: Merged linear block@40 into block@18
debug: Merged linear block@41 into block@18
debug: Replaced predecessor block@38 with block@19 in block@39
debug: Merged linear block@38 into block@19
debug: Merged linear block@39 into block@19
debug: Replaced predecessor block@36 with block@20 in block@37
debug: Merged linear block@36 into block@20
debug: Merged linear block@37 into block@20
debug: Replaced predecessor block@34 with block@21 in block@35
debug: Merged linear block@34 into block@21
debug: Merged linear block@35 into block@21
debug: Replaced predecessor block@32 with block@22 in block@33
debug: Merged linear block@32 into block@22
debug: Merged linear block@33 into block@22
debug: Replaced predecessor block@24 with block@23 in block@29
debug: Merged linear block@24 into block@23
debug: Replaced predecessor block@30 with block@26 in block@31
debug: Merged linear block@30 into block@26
debug: Merged linear block@31 into block@26
debug: Replaced predecessor block@28 with block@27 in block@29
debug: Merged linear block@28 into block@27
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@23
debug: Removed empty block: block@27
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#7: uint64 = (extract_uint16 arr#45 0u) with copy of existing registers (Register(source_location=array/immutable.py:81:15-25, ir_type=uint64, name='tmp%2', version=10),)
debug: Replacing redundant declaration let tmp%10#6: uint64 = (extract_uint16 arr#46 0u) with copy of existing registers (Register(source_location=array/immutable.py:85:15-25, ir_type=uint64, name='tmp%8', version=7),)
debug: Replacing redundant declaration let expr_value_trimmed%1#7: bytes = ((extract 2 0) arr#46) with copy of existing registers (Register(source_location=array/immutable.py:86:15-22, ir_type=bytes, name='array_head_and_tail%1', version=5),)
debug: Replacing redundant declaration let tmp%16#6: uint64 = (extract_uint16 arr#47 0u) with copy of existing registers (Register(source_location=array/immutable.py:89:15-25, ir_type=uint64, name='tmp%14', version=6),)
debug: Replacing redundant declaration let array_head_and_tail%3#5: bytes = ((extract 2 0) arr#47) with copy of existing registers (Register(source_location=array/immutable.py:90:15-22, ir_type=bytes, name='array_head_and_tail%2', version=5),)
debug: Replacing redundant declaration let tmp%24#2: uint64 = (extract_uint16 arr#48 0u) with copy of existing registers (Register(source_location=array/immutable.py:94:15-25, ir_type=uint64, name='tmp%22', version=3),)
debug: Replacing redundant declaration let tmp%30#2: uint64 = (extract_uint16 arr#49 0u) with copy of existing registers (Register(source_location=array/immutable.py:98:15-25, ir_type=uint64, name='tmp%28', version=2),)
debug: Replacing redundant declaration let expr_value_trimmed%2#1: bytes = ((extract 2 0) arr#49) with copy of existing registers (Register(source_location=array/immutable.py:99:15-22, ir_type=bytes, name='array_head_and_tail%5', version=0),)
debug: Replacing redundant declaration let tmp%36#2: uint64 = (extract_uint16 arr#50 0u) with copy of existing registers (Register(source_location=array/immutable.py:102:15-25, ir_type=uint64, name='tmp%34', version=2),)
debug: Replacing redundant declaration let array_length%0#5: uint64 = (extract_uint16 arr#50 0u) with copy of existing registers (Register(source_location=array/immutable.py:102:15-25, ir_type=uint64, name='tmp%34', version=2),)
debug: Replacing redundant declaration let i#39: uint64 = (+ i#38 1u) with copy of existing registers (Register(source_location=array/immutable.py:141:30-35, ir_type=uint64, name='tmp%2', version=8),)
debug: Replacing redundant declaration let tmp%9#5: uint64 = (extract_uint16 arr#33 0u) with copy of existing registers (Register(source_location=array/immutable.py:143:15-25, ir_type=uint64, name='tmp%4', version=5),)
debug: Replacing redundant declaration let array_head_and_tail%1#3: bytes = ((extract 2 0) arr#33) with copy of existing registers (Register(source_location=array/immutable.py:144:15-21, ir_type=bytes, name='array_head_and_tail%0', version=5),)
debug: Replacing redundant declaration let tmp%19#4: uint64 = (extract_uint16 arr#35 0u) with copy of existing registers (Register(source_location=array/immutable.py:148:15-25, ir_type=uint64, name='tmp%14', version=4),)
debug: Replacing redundant declaration let array_head_and_tail%3#3: bytes = ((extract 2 0) arr#35) with copy of existing registers (Register(source_location=array/immutable.py:149:15-21, ir_type=bytes, name='array_head_and_tail%2', version=3),)
debug: Replacing redundant declaration let i#30: uint64 = (+ i#29 1u) with copy of existing registers (Register(source_location=array/immutable.py:174:30-35, ir_type=uint64, name='tmp%2', version=6),)
debug: Replacing redundant declaration let tmp%6#3: uint64 = (+ i#32 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=2),)
debug: Replacing redundant declaration let array_head_and_tail%1#2: bytes = ((extract 2 0) arr#25) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='array_head_and_tail%0', version=3),)
debug: Replacing redundant declaration let item_offset_offset%1#1: uint64 = (* i#32 2u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_offset_offset%0', version=3),)
debug: Replacing redundant declaration let array_length%1#2: uint64 = (extract_uint16 arr#25 0u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='array_length%0', version=3),)
debug: Replacing redundant declaration let next_index%1#1: uint64 = (+ i#32 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=2),)
debug: Replacing redundant declaration let i#33: uint64 = (+ i#32 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=2),)
debug: Replacing redundant declaration let array_length%2#2: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let tmp%16#3: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let array_head_and_tail%3#2: bytes = ((extract 2 0) arr#28) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=bytes, name='array_head_and_tail%2', version=2),)
debug: Replacing redundant declaration let array_length%3#2: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=3),)
debug: Replacing redundant declaration let i#24: uint64 = (+ i#23 1u) with copy of existing registers (Register(source_location=array/immutable.py:193:53-58, ir_type=uint64, name='tmp%2', version=5),)
debug: Replacing redundant declaration let tmp%6#2: uint64 = (+ i#26 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=1),)
debug: Replacing redundant declaration let array_head_and_tail%1#1: bytes = ((extract 2 0) arr#20) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='array_head_and_tail%0', version=2),)
debug: Replacing redundant declaration let item_offset_offset%1#0: uint64 = (* i#26 2u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_offset_offset%0', version=2),)
debug: Replacing redundant declaration let array_length%1#1: uint64 = (extract_uint16 arr#20 0u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='array_length%0', version=2),)
debug: Replacing redundant declaration let next_index%1#0: uint64 = (+ i#26 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=1),)
debug: Replacing redundant declaration let i#27: uint64 = (+ i#26 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=1),)
debug: Replacing redundant declaration let array_length%2#1: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=2),)
debug: Replacing redundant declaration let tmp%15#2: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=2),)
debug: Replacing redundant declaration let array_head_and_tail%3#1: bytes = ((extract 2 0) arr#23) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=bytes, name='array_head_and_tail%2', version=1),)
debug: Replacing redundant declaration let array_length%3#1: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=2),)
debug: Replacing redundant declaration let tmp%10#1: bool = (! i#17) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=1),)
debug: Replacing redundant declaration let tmp%11#1: bool = (== i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=1),)
debug: Replacing redundant declaration let tmp%18#1: bool = (! i#17) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=1),)
debug: Replacing redundant declaration let tmp%19#1: bool = (== i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=1),)
debug: Replacing redundant declaration let tmp%20#1: bool = (== i#17 2u) with copy of existing registers (Register(source_location=array/immutable.py:251:22-28, ir_type=bool, name='tmp%12', version=1),)
debug: Replacing redundant declaration let tmp%21#1: bool = (== i#17 3u) with copy of existing registers (Register(source_location=array/immutable.py:252:22-28, ir_type=bool, name='tmp%13', version=1),)
debug: Replacing redundant declaration let tmp%22#1: bool = (== i#17 4u) with copy of existing registers (Register(source_location=array/immutable.py:253:22-28, ir_type=bool, name='tmp%14', version=1),)
debug: Replacing redundant declaration let tmp%23#1: bool = (== i#17 5u) with copy of existing registers (Register(source_location=array/immutable.py:254:22-28, ir_type=bool, name='tmp%15', version=1),)
debug: Replacing redundant declaration let tmp%24#1: bool = (== i#17 6u) with copy of existing registers (Register(source_location=array/immutable.py:255:22-28, ir_type=bool, name='tmp%16', version=1),)
debug: Replacing redundant declaration let tmp%26#1: uint64 = (+ i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=1),)
debug: Replacing redundant declaration let tmp%27#1: bool = (! i#17) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=1),)
debug: Replacing redundant declaration let tmp%28#1: bool = (== i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=1),)
debug: Replacing redundant declaration let tmp%29#1: bool = (== i#17 2u) with copy of existing registers (Register(source_location=array/immutable.py:251:22-28, ir_type=bool, name='tmp%12', version=1),)
debug: Replacing redundant declaration let tmp%30#1: bool = (== i#17 3u) with copy of existing registers (Register(source_location=array/immutable.py:252:22-28, ir_type=bool, name='tmp%13', version=1),)
debug: Replacing redundant declaration let tmp%31#1: bool = (== i#17 4u) with copy of existing registers (Register(source_location=array/immutable.py:253:22-28, ir_type=bool, name='tmp%14', version=1),)
debug: Replacing redundant declaration let tmp%32#1: bool = (== i#17 5u) with copy of existing registers (Register(source_location=array/immutable.py:254:22-28, ir_type=bool, name='tmp%15', version=1),)
debug: Replacing redundant declaration let tmp%33#1: bool = (== i#17 6u) with copy of existing registers (Register(source_location=array/immutable.py:255:22-28, ir_type=bool, name='tmp%16', version=1),)
debug: Replacing redundant declaration let tmp%34#1: bool = (== i#17 7u) with copy of existing registers (Register(source_location=array/immutable.py:269:22-28, ir_type=bool, name='tmp%25', version=1),)
debug: Replacing redundant declaration let tmp%36#1: uint64 = (+ i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=1),)
debug: Replacing redundant declaration let i#18: uint64 = (+ i#17 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=1),)
debug: Replacing redundant declaration let tmp%1#4: uint64 = (len dyn_tup.bar#0) with copy of existing registers (Register(source_location=array/immutable.py:319:20-44, ir_type=uint64, name='tmp%0', version=5),)
debug: Replacing redundant declaration let item_index_internal%3#2: uint64 = (+ idx#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:317, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let item_start_offset%1#0: uint64 = (extract_uint16 tmp%110#0 2u) with copy of existing registers (Register(source_location=array/immutable.py:74, ir_type=uint64, name='item_end_offset%0', version=0),)
debug: Replacing redundant declaration let array_length%0#4: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=6),)
debug: Replacing redundant declaration let array_length%1#3: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=6),)
debug: Replacing redundant declaration let array_length%2#3: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=6),)
debug: Replacing redundant declaration let array_length%3#3: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=6),)
debug: Replacing redundant declaration let array_length%0#3: uint64 = (extract_uint16 arr#25 0u) with copy of existing registers (Register(source_location=array/immutable.py:176:15-25, ir_type=uint64, name='tmp%4', version=3),)
debug: Replacing redundant declaration let array_length%0#2: uint64 = (extract_uint16 arr#20 0u) with copy of existing registers (Register(source_location=array/immutable.py:195:15-25, ir_type=uint64, name='tmp%4', version=2),)
debug: Replacing redundant declaration let array_length%4#0: uint64 = (extract_uint16 arr4#0 0u) with copy of existing registers (Register(source_location=array/immutable.py:317, ir_type=uint64, name='array_length%3', version=0),)
debug: Replacing redundant declaration let as_bytes%4#0: bytes[8] = (itob 10u) with copy of existing registers (Register(source_location=array/immutable.py:347:14-76, ir_type=bytes[8], name='as_bytes%1', version=2),)
debug: Replacing redundant declaration let as_bytes%5#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/immutable.py:347:14-76, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Found equivalence set: encoded%0#9, concatenated%0#9
debug: selected encoded%0#9 from equivalence set
debug: Found equivalence set: tmp%2#10, tmp%4#7
debug: selected tmp%2#10 from equivalence set
debug: Found equivalence set: tmp%8#7, tmp%10#6
debug: selected tmp%8#7 from equivalence set
debug: Found equivalence set: array_head_and_tail%1#5, expr_value_trimmed%1#7
debug: selected array_head_and_tail%1#5 from equivalence set
debug: Found equivalence set: tmp%14#6, tmp%16#6
debug: selected tmp%14#6 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#5, array_head_and_tail%3#5
debug: selected array_head_and_tail%2#5 from equivalence set
debug: Found equivalence set: tmp%22#3, tmp%24#2
debug: selected tmp%22#3 from equivalence set
debug: Found equivalence set: tmp%28#2, tmp%30#2
debug: selected tmp%28#2 from equivalence set
debug: Found equivalence set: array_head_and_tail%5#0, expr_value_trimmed%2#1
debug: selected array_head_and_tail%5#0 from equivalence set
debug: Found equivalence set: tmp%34#2, tmp%36#2, array_length%0#5
debug: selected tmp%34#2 from equivalence set
debug: Found equivalence set: encoded_bool%0#3, data%0#6
debug: selected encoded_bool%0#3 from equivalence set
debug: Found equivalence set: tmp%4#6, array_length%0#4, array_length%1#3, array_length%2#3, array_length%3#3
debug: selected tmp%4#6 from equivalence set
debug: Found equivalence set: tmp%2#8, i#39
debug: selected i#39 from equivalence set
debug: Found equivalence set: tmp%4#5, tmp%9#5
debug: selected tmp%4#5 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#5, array_head_and_tail%1#3
debug: selected array_head_and_tail%0#5 from equivalence set
debug: Found equivalence set: tmp%14#4, tmp%19#4
debug: selected tmp%14#4 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#3, array_head_and_tail%3#3
debug: selected array_head_and_tail%2#3 from equivalence set
debug: Found equivalence set: val_as_bytes%0#3, encoded_tuple_buffer%1#4
debug: selected val_as_bytes%0#3 from equivalence set
debug: Found equivalence set: tmp%2#6, i#30
debug: selected i#30 from equivalence set
debug: Found equivalence set: tmp%4#3, array_length%0#3, array_length%1#2
debug: selected tmp%4#3 from equivalence set
debug: Found equivalence set: next_index%0#2, tmp%6#3, next_index%1#1, i#33
debug: selected i#33 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#3, array_head_and_tail%1#2
debug: selected array_head_and_tail%0#3 from equivalence set
debug: Found equivalence set: item_offset_offset%0#3, item_offset_offset%1#1
debug: selected item_offset_offset%0#3 from equivalence set
debug: Found equivalence set: tmp%10#3, array_length%2#2, tmp%16#3, array_length%3#2
debug: selected tmp%10#3 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#2, array_head_and_tail%3#2
debug: selected array_head_and_tail%2#2 from equivalence set
debug: Found equivalence set: val_as_bytes%0#2, encoded_tuple_buffer%1#3
debug: selected val_as_bytes%0#2 from equivalence set
debug: Found equivalence set: tmp%2#5, i#24
debug: selected i#24 from equivalence set
debug: Found equivalence set: tmp%4#2, array_length%0#2, array_length%1#1
debug: selected tmp%4#2 from equivalence set
debug: Found equivalence set: next_index%0#1, tmp%6#2, next_index%1#0, i#27
debug: selected i#27 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#2, array_head_and_tail%1#1
debug: selected array_head_and_tail%0#2 from equivalence set
debug: Found equivalence set: item_offset_offset%0#2, item_offset_offset%1#0
debug: selected item_offset_offset%0#2 from equivalence set
debug: Found equivalence set: tmp%10#2, array_length%2#1, tmp%15#2, array_length%3#1
debug: selected tmp%10#2 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#1, array_head_and_tail%3#1
debug: selected array_head_and_tail%2#1 from equivalence set
debug: Found equivalence set: tmp%8#1, tmp%10#1, tmp%18#1, tmp%27#1
debug: selected tmp%8#1 from equivalence set
debug: Found equivalence set: tmp%9#1, tmp%11#1, tmp%19#1, tmp%28#1
debug: selected tmp%9#1 from equivalence set
debug: Found equivalence set: tmp%12#1, tmp%20#1, tmp%29#1
debug: selected tmp%12#1 from equivalence set
debug: Found equivalence set: tmp%13#1, tmp%21#1, tmp%30#1
debug: selected tmp%13#1 from equivalence set
debug: Found equivalence set: tmp%14#1, tmp%22#1, tmp%31#1
debug: selected tmp%14#1 from equivalence set
debug: Found equivalence set: tmp%15#1, tmp%23#1, tmp%32#1
debug: selected tmp%15#1 from equivalence set
debug: Found equivalence set: tmp%16#1, tmp%24#1, tmp%33#1
debug: selected tmp%16#1 from equivalence set
debug: Found equivalence set: tmp%17#1, tmp%26#1, tmp%36#1, i#18
debug: selected i#18 from equivalence set
debug: Found equivalence set: tmp%25#1, tmp%34#1
debug: selected tmp%25#1 from equivalence set
debug: Found equivalence set: array_length%3#0, array_length%4#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: tmp%0#5, tmp%1#4
debug: selected tmp%0#5 from equivalence set
debug: Found equivalence set: next_index%0#0, item_index_internal%3#2
debug: selected next_index%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: encoded%0#4, concatenated%0#4
debug: selected encoded%0#4 from equivalence set
debug: Found equivalence set: encoded_bool%5#0, data%5#0
debug: selected encoded_bool%5#0 from equivalence set
debug: Found equivalence set: encoded%0#3, concatenated%0#3
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: val_as_bytes%0#1, encoded_tuple_buffer%1#1
debug: selected val_as_bytes%0#1 from equivalence set
debug: Found equivalence set: val_as_bytes%1#1, encoded_tuple_buffer%5#0
debug: selected val_as_bytes%1#1 from equivalence set
debug: Found equivalence set: as_bytes%1#2, as_bytes%4#0
debug: selected as_bytes%1#2 from equivalence set
debug: Found equivalence set: as_bytes%2#0, as_bytes%5#0
debug: selected as_bytes%2#0 from equivalence set
debug: Found equivalence set: slot_contents%2#0, concatenated%0#2
debug: selected slot_contents%2#0 from equivalence set
debug: Found equivalence set: encoded%0#1, concatenated%0#1
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: item_end_offset%0#0, item_start_offset%1#0
debug: selected item_end_offset%0#0 from equivalence set
debug: Found equivalence set: arg.0#0, data%2#0
debug: selected arg.0#0 from equivalence set
debug: Copy propagation made 89 modifications
debug: Replacing redundant declaration let item_offset%1#2: uint64 = (extract_uint16 array_head_and_tail%0#3 item_offset_offset%0#3) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_offset%0', version=3),)
debug: Replacing redundant declaration let has_next%1#1: uint64 = (- tmp%4#3 i#33) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='has_next%0', version=2),)
debug: Replacing redundant declaration let end_of_array%1#1: uint64 = (len array_head_and_tail%0#3) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='end_of_array%0', version=2),)
debug: Replacing redundant declaration let next_item_offset_offset%1#1: uint64 = (* i#33 2u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_item_offset_offset%0', version=2),)
debug: Replacing redundant declaration let tmp%17#3: uint64 = (- tmp%10#3 1u) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=uint64, name='has_next%2', version=1),)
debug: Replacing redundant declaration let end_of_array%3#1: uint64 = (len array_head_and_tail%2#2) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=uint64, name='end_of_array%2', version=1),)
debug: Replacing redundant declaration let item_offset%1#1: uint64 = (extract_uint16 array_head_and_tail%0#2 item_offset_offset%0#2) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_offset%0', version=2),)
debug: Replacing redundant declaration let has_next%1#0: uint64 = (- tmp%4#2 i#27) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='has_next%0', version=1),)
debug: Replacing redundant declaration let end_of_array%1#0: uint64 = (len array_head_and_tail%0#2) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='end_of_array%0', version=1),)
debug: Replacing redundant declaration let next_item_offset_offset%1#0: uint64 = (* i#27 2u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_item_offset_offset%0', version=1),)
debug: Replacing redundant declaration let tmp%16#2: uint64 = (- tmp%10#2 1u) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=uint64, name='has_next%2', version=0),)
debug: Replacing redundant declaration let end_of_array%3#0: uint64 = (len array_head_and_tail%2#1) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=uint64, name='end_of_array%2', version=0),)
debug: Found equivalence set: item_offset%0#3, item_offset%1#2
debug: selected item_offset%0#3 from equivalence set
debug: Found equivalence set: has_next%0#2, has_next%1#1
debug: selected has_next%0#2 from equivalence set
debug: Found equivalence set: end_of_array%0#2, end_of_array%1#1
debug: selected end_of_array%0#2 from equivalence set
debug: Found equivalence set: next_item_offset_offset%0#2, next_item_offset_offset%1#1
debug: selected next_item_offset_offset%0#2 from equivalence set
debug: Found equivalence set: has_next%2#1, tmp%17#3
debug: selected has_next%2#1 from equivalence set
debug: Found equivalence set: end_of_array%2#1, end_of_array%3#1
debug: selected end_of_array%2#1 from equivalence set
debug: Found equivalence set: item_offset%0#2, item_offset%1#1
debug: selected item_offset%0#2 from equivalence set
debug: Found equivalence set: has_next%0#1, has_next%1#0
debug: selected has_next%0#1 from equivalence set
debug: Found equivalence set: end_of_array%0#1, end_of_array%1#0
debug: selected end_of_array%0#1 from equivalence set
debug: Found equivalence set: next_item_offset_offset%0#1, next_item_offset_offset%1#0
debug: selected next_item_offset_offset%0#1 from equivalence set
debug: Found equivalence set: has_next%2#0, tmp%16#2
debug: selected has_next%2#0 from equivalence set
debug: Found equivalence set: end_of_array%2#0, end_of_array%3#0
debug: selected end_of_array%2#0 from equivalence set
debug: Copy propagation made 14 modifications
debug: Replacing redundant declaration let next_item_offset%1#1: uint64 = (extract_uint16 array_head_and_tail%0#3 next_item_offset_offset%0#2) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_item_offset%0', version=2),)
debug: Replacing redundant declaration let next_item_offset%1#0: uint64 = (extract_uint16 array_head_and_tail%0#2 next_item_offset_offset%0#1) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_item_offset%0', version=1),)
debug: Found equivalence set: next_item_offset%0#2, next_item_offset%1#1
debug: selected next_item_offset%0#2 from equivalence set
debug: Found equivalence set: next_item_offset%0#1, next_item_offset%1#0
debug: selected next_item_offset%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let end_offset%1#1: uint64 = (select end_of_array%0#2 next_item_offset%0#2 has_next%0#2) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='end_offset%0', version=2),)
debug: Replacing redundant declaration let end_offset%1#0: uint64 = (select end_of_array%0#1 next_item_offset%0#1 has_next%0#1) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='end_offset%0', version=1),)
debug: Found equivalence set: end_offset%0#2, end_offset%1#1
debug: selected end_offset%0#2 from equivalence set
debug: Found equivalence set: end_offset%0#1, end_offset%1#0
debug: selected end_offset%0#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let arc4_item%1#1: bytes = (substring3 array_head_and_tail%0#3 item_offset%0#3 end_offset%0#2) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='arc4_item%0', version=1),)
debug: Replacing redundant declaration let arc4_item%1#0: bytes = (substring3 array_head_and_tail%0#2 item_offset%0#2 end_offset%0#1) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='arc4_item%0', version=0),)
debug: Found equivalence set: arc4_item%0#1, arc4_item%1#1
debug: selected arc4_item%0#1 from equivalence set
debug: Found equivalence set: arc4_item%0#0, arc4_item%1#0
debug: selected arc4_item%0#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Replacing redundant declaration let item0%1#3: bytes = ((extract 0 8) arc4_item%0#1) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='item0%0', version=3),)
debug: Replacing redundant declaration let item_start_offset%1#2: uint64 = (extract_uint16 arc4_item%0#1 8u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_start_offset%0', version=3),)
debug: Replacing redundant declaration let item_end_offset%1#2: uint64 = (len arc4_item%0#1) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_end_offset%0', version=3),)
debug: Replacing redundant declaration let item0%1#2: bytes = ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='item0%0', version=2),)
debug: Replacing redundant declaration let item_start_offset%1#1: uint64 = (extract_uint16 arc4_item%0#0 8u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_start_offset%0', version=2),)
debug: Replacing redundant declaration let item_end_offset%1#1: uint64 = (len arc4_item%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_end_offset%0', version=2),)
debug: Found equivalence set: item0%0#3, item0%1#3
debug: selected item0%0#3 from equivalence set
debug: Found equivalence set: item_start_offset%0#3, item_start_offset%1#2
debug: selected item_start_offset%0#3 from equivalence set
debug: Found equivalence set: item_end_offset%0#3, item_end_offset%1#2
debug: selected item_end_offset%0#3 from equivalence set
debug: Found equivalence set: item0%0#2, item0%1#2
debug: selected item0%0#2 from equivalence set
debug: Found equivalence set: item_start_offset%0#2, item_start_offset%1#1
debug: selected item_start_offset%0#2 from equivalence set
debug: Found equivalence set: item_end_offset%0#2, item_end_offset%1#1
debug: selected item_end_offset%0#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let item1%1#3: bytes = (substring3 arc4_item%0#1 item_start_offset%0#3 item_end_offset%0#3) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='item1%0', version=3),)
debug: Replacing redundant declaration let item1%1#2: bytes = (substring3 arc4_item%0#0 item_start_offset%0#2 item_end_offset%0#2) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='item1%0', version=2),)
debug: Found equivalence set: item1%0#3, item1%1#3
debug: selected item1%0#3 from equivalence set
debug: Found equivalence set: item1%0#2, item1%1#2
debug: selected item1%0#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:93:9 debug: inlining call to test_cases.array.immutable.pop_x in test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#3, arr#8
debug: selected arr#3 from equivalence set
debug: Found equivalence set: arr#9, arr#4
debug: selected arr#9 from equivalence set
debug: Found equivalence set: concat_result%2#0, arr#6
debug: selected arr#6 from equivalence set
debug: Found equivalence set: val_as_bytes%0#0, assigned_value%0#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: updated_target%0#0, arr#7
debug: selected arr#7 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Simplified (btoi arc4_item%0#0) to (extract_uint64 array_head_and_tail%0#0 item_offset%0#0)
debug: Simplified (btoi arc4_item%1#0) to (extract_uint64 array_head_and_tail%1#0 item_offset%1#0)
debug: Simplified (btoi arc4_item%2#0) to (extract_uint64 array_head_and_tail%2#0 item_offset%2#0)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 array_head_and_tail%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 2 8) arr#3)
debug: Simplified (btoi arc4_item%3#0) to (extract_uint64 arr#3 2u)
debug: Simplified (btoi arc4_item%4#0) to (extract_uint64 array_head_and_tail%4#0 item_offset%4#0)
debug: Simplified (btoi arc4_item%5#0) to (extract_uint64 array_head_and_tail%5#0 item_offset%5#0)
debug: Simplified (btoi arc4_item%6#0) to (extract_uint64 array_head_and_tail%6#0 item_offset%6#0)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (extract3 array_head_and_tail%7#0 16u 8u) // on error: Index access is out of bounds to ((extract 18 8) arr#7)
debug: Simplified (btoi arc4_item%7#0) to (extract_uint64 arr#7 18u)
debug: Simplified (replace3 arr#6 18u val_as_bytes%0#0) to ((replace2 18) arr#6 val_as_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:81:15-25, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%10#0: uint64 = (extract_uint16 arr#2 0u) with copy of existing registers (Register(source_location=array/immutable.py:85:15-25, ir_type=uint64, name='tmp%8', version=0),)
debug: Replacing redundant declaration let expr_value_trimmed%1#0: bytes = ((extract 2 0) arr#2) with copy of existing registers (Register(source_location=array/immutable.py:86:15-22, ir_type=bytes, name='array_head_and_tail%1', version=0),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (extract_uint16 arr#3 0u) with copy of existing registers (Register(source_location=array/immutable.py:89:15-25, ir_type=uint64, name='tmp%14', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) arr#3) with copy of existing registers (Register(source_location=array/immutable.py:90:15-22, ir_type=bytes, name='array_head_and_tail%2', version=0),)
debug: Replacing redundant declaration let tmp%24#0: uint64 = (extract_uint16 arr#9 0u) with copy of existing registers (Register(source_location=array/immutable.py:94:15-25, ir_type=uint64, name='tmp%22', version=0),)
debug: Replacing redundant declaration let tmp%30#0: uint64 = (extract_uint16 arr#5 0u) with copy of existing registers (Register(source_location=array/immutable.py:98:15-25, ir_type=uint64, name='tmp%28', version=0),)
debug: Replacing redundant declaration let expr_value_trimmed%2#0: bytes = ((extract 2 0) arr#5) with copy of existing registers (Register(source_location=array/immutable.py:99:15-22, ir_type=bytes, name='array_head_and_tail%5', version=0),)
debug: Replacing redundant declaration let tmp%36#0: uint64 = (extract_uint16 arr#6 0u) with copy of existing registers (Register(source_location=array/immutable.py:102:15-25, ir_type=uint64, name='tmp%34', version=0),)
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 arr#6 0u) with copy of existing registers (Register(source_location=array/immutable.py:102:15-25, ir_type=uint64, name='tmp%34', version=0),)
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, tmp%4#0
debug: selected tmp%2#0 from equivalence set
debug: Found equivalence set: tmp%8#0, tmp%10#0
debug: selected tmp%8#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%1#0, expr_value_trimmed%1#0
debug: selected array_head_and_tail%1#0 from equivalence set
debug: Found equivalence set: tmp%14#0, tmp%16#0
debug: selected tmp%14#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%2#0 from equivalence set
debug: Found equivalence set: tmp%22#0, tmp%24#0
debug: selected tmp%22#0 from equivalence set
debug: Found equivalence set: tmp%28#0, tmp%30#0
debug: selected tmp%28#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%5#0, expr_value_trimmed%2#0
debug: selected array_head_and_tail%5#0 from equivalence set
debug: Found equivalence set: tmp%34#0, tmp%36#0, array_length%0#0
debug: selected tmp%34#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:132:19 debug: inlining call to _puya_lib.arc4.dynamic_array_pop_bit in test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: encoded_bool%1#0, arc4_item%0#0
debug: selected encoded_bool%1#0 from equivalence set
debug: Found equivalence set: encoded_bool%2#0, arc4_item%1#0
debug: selected encoded_bool%2#0 from equivalence set
debug: Found equivalence set: encoded_bool%3#0, arc4_item%2#0
debug: selected encoded_bool%3#0 from equivalence set
debug: Found equivalence set: encoded_bool%4#0, arc4_item%3#0
debug: selected encoded_bool%4#0 from equivalence set
debug: Found equivalence set: arr#1, array#0
debug: selected arr#1 from equivalence set
debug: Found equivalence set: popped#0, popped%0#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: result#2, data%1#0, arr#7
debug: selected result#2 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable popped#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x encoded_bool%0#0) to encoded_bool%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@15 with block@13 in block@16
debug: Merged linear block@15 into block@13
debug: Replaced predecessor block@16 with block@13 in block@14
debug: Merged linear block@16 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_length%2#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_length%3#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_length#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:119:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: encoded_bool%0#0, data%0#0
debug: selected encoded_bool%0#0 from equivalence set
debug: Found equivalence set: tmp%4#0, array_length%0#0, array_length%1#0, array_length%2#0, array_length%3#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: data%0#0, arr#3
debug: selected arr#3 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#0 0u 16u) // on error: Index access is out of bounds to ((extract 2 16) arr#1)
debug: Simplified (btoi item0%0#0) to (extract_uint64 arc4_item%0#0 0u)
debug: Simplified (btoi item1%0#0) to (extract_uint64 arc4_item%0#0 8u)
debug: Simplified (btoi item0%1#0) to (extract_uint64 arc4_item%1#0 0u)
debug: Simplified (btoi item1%1#0) to (extract_uint64 arc4_item%1#0 8u)
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 array_head_and_tail%2#0 0u 16u) // on error: Index access is out of bounds to ((extract 2 16) arr#3)
debug: Simplified (btoi item0%2#0) to (extract_uint64 arc4_item%2#0 0u)
debug: Simplified (btoi item1%2#0) to (extract_uint64 arc4_item%2#0 8u)
debug: Simplified (btoi item0%3#0) to (extract_uint64 arc4_item%3#0 0u)
debug: Simplified (btoi item1%3#0) to (extract_uint64 arc4_item%3#0 8u)
debug: Simplified (extract3 arc4_item%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%0#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#0 8u 8u) // on error: Index access is out of bounds to ((extract 8 8) arc4_item%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:141:30-35, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%9#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:143:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) arr#1) with copy of existing registers (Register(source_location=array/immutable.py:144:15-21, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let tmp%19#0: uint64 = (extract_uint16 arr#3 0u) with copy of existing registers (Register(source_location=array/immutable.py:148:15-25, ir_type=uint64, name='tmp%14', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) arr#3) with copy of existing registers (Register(source_location=array/immutable.py:149:15-21, ir_type=bytes, name='array_head_and_tail%2', version=0),)
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: tmp%4#0, tmp%9#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0
debug: selected array_head_and_tail%0#0 from equivalence set
debug: Found equivalence set: tmp%14#0, tmp%19#0
debug: selected tmp%14#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%2#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: encoded_bool%0#0, item1%0#0
debug: selected encoded_bool%0#0 from equivalence set
debug: Found equivalence set: encoded_bool%1#0, item2%0#0
debug: selected encoded_bool%1#0 from equivalence set
debug: Found equivalence set: item0%0%0#0, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: item1%0%0#0, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: item2%0%0#0, baz#0
debug: selected baz#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Simplified (== tmp%5#0 0u) to (! tmp%5#0)
debug: Simplified (* 0u 9u) to 0u
debug: Simplified (extract3 array_head_and_tail%0#0 0u 9u) // on error: Index access is out of bounds to ((extract 2 9) arr#1)
debug: Simplified (btoi item0%0#0) to (extract_uint64 arc4_item%0#0 0u)
debug: Simplified (== foo#0 0u) to (! foo#0)
debug: Simplified (extract3 arc4_item%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#0, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#0 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: data%0#0, arr#4
debug: selected arr#4 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable item1%0%0#0
debug: Removing unused variable item0%1%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi item0%0#0) to (extract_uint64 arc4_item%0#0 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi item0%2#0) to (extract_uint64 arc4_item%2#0 0u)
debug: Simplified (btoi item0%3#0) to (extract_uint64 arc4_item%3#0 0u)
debug: Simplified (extract3 arc4_item%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:174:30-35, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%6#0: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) arr#1) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let item_offset_offset%1#0: uint64 = (* i#4 2u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_offset_offset%0', version=0),)
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='array_length%0', version=0),)
debug: Replacing redundant declaration let next_index%1#0: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let i#5: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let array_length%2#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) arr#4) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=bytes, name='array_head_and_tail%2', version=0),)
debug: Replacing redundant declaration let array_length%3#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:182:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:176:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: tmp%4#0, array_length%0#0, array_length%1#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: next_index%0#0, tmp%6#0, next_index%1#0, i#5
debug: selected i#5 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0
debug: selected array_head_and_tail%0#0 from equivalence set
debug: Found equivalence set: item_offset_offset%0#0, item_offset_offset%1#0
debug: selected item_offset_offset%0#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_length%2#0, tmp%16#0, array_length%3#0
debug: selected tmp%10#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%2#0 from equivalence set
debug: Copy propagation made 22 modifications
debug: Replacing redundant declaration let item_offset%1#0: uint64 = (extract_uint16 array_head_and_tail%0#0 item_offset_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_offset%0', version=0),)
debug: Replacing redundant declaration let has_next%1#0: uint64 = (- tmp%4#0 i#5) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='has_next%0', version=0),)
debug: Replacing redundant declaration let end_of_array%1#0: uint64 = (len array_head_and_tail%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='end_of_array%0', version=0),)
debug: Replacing redundant declaration let next_item_offset_offset%1#0: uint64 = (* i#5 2u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_item_offset_offset%0', version=0),)
debug: Replacing redundant declaration let tmp%17#0: uint64 = (- tmp%10#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=uint64, name='has_next%2', version=0),)
debug: Replacing redundant declaration let end_of_array%3#0: uint64 = (len array_head_and_tail%2#0) with copy of existing registers (Register(source_location=array/immutable.py:183:15-21, ir_type=uint64, name='end_of_array%2', version=0),)
debug: Found equivalence set: item_offset%0#0, item_offset%1#0
debug: selected item_offset%0#0 from equivalence set
debug: Found equivalence set: has_next%0#0, has_next%1#0
debug: selected has_next%0#0 from equivalence set
debug: Found equivalence set: end_of_array%0#0, end_of_array%1#0
debug: selected end_of_array%0#0 from equivalence set
debug: Found equivalence set: next_item_offset_offset%0#0, next_item_offset_offset%1#0
debug: selected next_item_offset_offset%0#0 from equivalence set
debug: Found equivalence set: has_next%2#0, tmp%17#0
debug: selected has_next%2#0 from equivalence set
debug: Found equivalence set: end_of_array%2#0, end_of_array%3#0
debug: selected end_of_array%2#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Replacing redundant declaration let next_item_offset%1#0: uint64 = (extract_uint16 array_head_and_tail%0#0 next_item_offset_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='next_item_offset%0', version=0),)
debug: Found equivalence set: next_item_offset%0#0, next_item_offset%1#0
debug: selected next_item_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let end_offset%1#0: uint64 = (select end_of_array%0#0 next_item_offset%0#0 has_next%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='end_offset%0', version=0),)
debug: Found equivalence set: end_offset%0#0, end_offset%1#0
debug: selected end_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let arc4_item%1#0: bytes = (substring3 array_head_and_tail%0#0 item_offset%0#0 end_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='arc4_item%0', version=0),)
debug: Found equivalence set: arc4_item%0#0, arc4_item%1#0
debug: selected arc4_item%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let item0%1#0: bytes = ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='item0%0', version=0),)
debug: Replacing redundant declaration let item_start_offset%1#0: uint64 = (extract_uint16 arc4_item%0#0 8u) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_start_offset%0', version=0),)
debug: Replacing redundant declaration let item_end_offset%1#0: uint64 = (len arc4_item%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=uint64, name='item_end_offset%0', version=0),)
debug: Found equivalence set: item0%0#0, item0%1#0
debug: selected item0%0#0 from equivalence set
debug: Found equivalence set: item_start_offset%0#0, item_start_offset%1#0
debug: selected item_start_offset%0#0 from equivalence set
debug: Found equivalence set: item_end_offset%0#0, item_end_offset%1#0
debug: selected item_end_offset%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let item1%1#0: bytes = (substring3 arc4_item%0#0 item_start_offset%0#0 item_end_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:178:19-25, ir_type=bytes, name='item1%0', version=0),)
debug: Found equivalence set: item1%0#0, item1%1#0
debug: selected item1%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%3#0, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#0 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: data%0#0, arr#4
debug: selected arr#4 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable item1%0%0#0
debug: Removing unused variable item0%1%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi item0%0#0) to (extract_uint64 arc4_item%0#0 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi item0%2#0) to (extract_uint64 arc4_item%2#0 0u)
debug: Simplified (btoi item0%3#0) to (extract_uint64 arc4_item%3#0 0u)
debug: Simplified (extract3 arc4_item%0#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%1#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%1#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 arc4_item%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) arc4_item%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:193:53-58, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let tmp%6#0: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%1#0: bytes = ((extract 2 0) arr#1) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='array_head_and_tail%0', version=0),)
debug: Replacing redundant declaration let item_offset_offset%1#0: uint64 = (* i#4 2u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_offset_offset%0', version=0),)
debug: Replacing redundant declaration let array_length%1#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='array_length%0', version=0),)
debug: Replacing redundant declaration let next_index%1#0: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let i#5: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let array_length%2#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let tmp%15#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let array_head_and_tail%3#0: bytes = ((extract 2 0) arr#4) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=bytes, name='array_head_and_tail%2', version=0),)
debug: Replacing redundant declaration let array_length%3#0: uint64 = (extract_uint16 arr#4 0u) with copy of existing registers (Register(source_location=array/immutable.py:201:15-25, ir_type=uint64, name='tmp%10', version=0),)
debug: Replacing redundant declaration let array_length%0#0: uint64 = (extract_uint16 arr#1 0u) with copy of existing registers (Register(source_location=array/immutable.py:195:15-25, ir_type=uint64, name='tmp%4', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: tmp%4#0, array_length%0#0, array_length%1#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: next_index%0#0, tmp%6#0, next_index%1#0, i#5
debug: selected i#5 from equivalence set
debug: Found equivalence set: array_head_and_tail%0#0, array_head_and_tail%1#0
debug: selected array_head_and_tail%0#0 from equivalence set
debug: Found equivalence set: item_offset_offset%0#0, item_offset_offset%1#0
debug: selected item_offset_offset%0#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_length%2#0, tmp%15#0, array_length%3#0
debug: selected tmp%10#0 from equivalence set
debug: Found equivalence set: array_head_and_tail%2#0, array_head_and_tail%3#0
debug: selected array_head_and_tail%2#0 from equivalence set
debug: Copy propagation made 22 modifications
debug: Replacing redundant declaration let item_offset%1#0: uint64 = (extract_uint16 array_head_and_tail%0#0 item_offset_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_offset%0', version=0),)
debug: Replacing redundant declaration let has_next%1#0: uint64 = (- tmp%4#0 i#5) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='has_next%0', version=0),)
debug: Replacing redundant declaration let end_of_array%1#0: uint64 = (len array_head_and_tail%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='end_of_array%0', version=0),)
debug: Replacing redundant declaration let next_item_offset_offset%1#0: uint64 = (* i#5 2u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_item_offset_offset%0', version=0),)
debug: Replacing redundant declaration let tmp%16#0: uint64 = (- tmp%10#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=uint64, name='has_next%2', version=0),)
debug: Replacing redundant declaration let end_of_array%3#0: uint64 = (len array_head_and_tail%2#0) with copy of existing registers (Register(source_location=array/immutable.py:202:15-21, ir_type=uint64, name='end_of_array%2', version=0),)
debug: Found equivalence set: item_offset%0#0, item_offset%1#0
debug: selected item_offset%0#0 from equivalence set
debug: Found equivalence set: has_next%0#0, has_next%1#0
debug: selected has_next%0#0 from equivalence set
debug: Found equivalence set: end_of_array%0#0, end_of_array%1#0
debug: selected end_of_array%0#0 from equivalence set
debug: Found equivalence set: next_item_offset_offset%0#0, next_item_offset_offset%1#0
debug: selected next_item_offset_offset%0#0 from equivalence set
debug: Found equivalence set: has_next%2#0, tmp%16#0
debug: selected has_next%2#0 from equivalence set
debug: Found equivalence set: end_of_array%2#0, end_of_array%3#0
debug: selected end_of_array%2#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Replacing redundant declaration let next_item_offset%1#0: uint64 = (extract_uint16 array_head_and_tail%0#0 next_item_offset_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='next_item_offset%0', version=0),)
debug: Found equivalence set: next_item_offset%0#0, next_item_offset%1#0
debug: selected next_item_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let end_offset%1#0: uint64 = (select end_of_array%0#0 next_item_offset%0#0 has_next%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='end_offset%0', version=0),)
debug: Found equivalence set: end_offset%0#0, end_offset%1#0
debug: selected end_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let arc4_item%1#0: bytes = (substring3 array_head_and_tail%0#0 item_offset%0#0 end_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='arc4_item%0', version=0),)
debug: Found equivalence set: arc4_item%0#0, arc4_item%1#0
debug: selected arc4_item%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Replacing redundant declaration let item0%1#0: bytes = ((extract 0 8) arc4_item%0#0) // on error: Index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='item0%0', version=0),)
debug: Replacing redundant declaration let item_start_offset%1#0: uint64 = (extract_uint16 arc4_item%0#0 8u) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_start_offset%0', version=0),)
debug: Replacing redundant declaration let item_end_offset%1#0: uint64 = (len arc4_item%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=uint64, name='item_end_offset%0', version=0),)
debug: Found equivalence set: item0%0#0, item0%1#0
debug: selected item0%0#0 from equivalence set
debug: Found equivalence set: item_start_offset%0#0, item_start_offset%1#0
debug: selected item_start_offset%0#0 from equivalence set
debug: Found equivalence set: item_end_offset%0#0, item_end_offset%1#0
debug: selected item_end_offset%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let item1%1#0: bytes = (substring3 arc4_item%0#0 item_start_offset%0#0 item_end_offset%0#0) with copy of existing registers (Register(source_location=array/immutable.py:197:19-25, ir_type=bytes, name='item1%0', version=0),)
debug: Found equivalence set: item1%0#0, item1%1#0
debug: selected item1%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:228:36 debug: inlining call to test_cases.array.immutable.sum_arr in test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, extra_arr#0
debug: selected extra_arr#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, extra_arr#2
debug: selected extra_arr#2 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: array_data%1#0, totals#0
debug: selected totals#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: value_at_index%0#0, inner_arr#0, arr#4
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: total#1, tmp%0#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: concat_result%2#0, totals#2
debug: selected totals#2 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable value_at_index%0#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@4 in block@3
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@7 with block@6 in block@1
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@13 with block@10 in block@14
debug: Merged linear block@13 into block@10
debug: Replaced predecessor block@17 with block@16 in block@11
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@11 with block@16 in block@9
debug: Merged linear block@11 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_data%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: array_data%1#0, arr7#0
debug: selected arr7#0 from equivalence set
debug: Found equivalence set: array_data%2#0, arr8#0
debug: selected arr8#0 from equivalence set
debug: Found equivalence set: array_data%3#0, arr9#0
debug: selected arr9#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr2#2
debug: selected arr2#2 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr7#2
debug: selected arr7#2 from equivalence set
debug: Found equivalence set: concat_result%2#0, arr8#2
debug: selected arr8#2 from equivalence set
debug: Found equivalence set: concat_result%3#0, arr9#2
debug: selected arr9#2 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (== 0u 0u) to 1u
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%10#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%11#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%18#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%19#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%20#0: bool = (== i#1 2u) with copy of existing registers (Register(source_location=array/immutable.py:251:22-28, ir_type=bool, name='tmp%12', version=0),)
debug: Replacing redundant declaration let tmp%21#0: bool = (== i#1 3u) with copy of existing registers (Register(source_location=array/immutable.py:252:22-28, ir_type=bool, name='tmp%13', version=0),)
debug: Replacing redundant declaration let tmp%22#0: bool = (== i#1 4u) with copy of existing registers (Register(source_location=array/immutable.py:253:22-28, ir_type=bool, name='tmp%14', version=0),)
debug: Replacing redundant declaration let tmp%23#0: bool = (== i#1 5u) with copy of existing registers (Register(source_location=array/immutable.py:254:22-28, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%24#0: bool = (== i#1 6u) with copy of existing registers (Register(source_location=array/immutable.py:255:22-28, ir_type=bool, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%26#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=0),)
debug: Replacing redundant declaration let tmp%27#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%28#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:244:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%29#0: bool = (== i#1 2u) with copy of existing registers (Register(source_location=array/immutable.py:251:22-28, ir_type=bool, name='tmp%12', version=0),)
debug: Replacing redundant declaration let tmp%30#0: bool = (== i#1 3u) with copy of existing registers (Register(source_location=array/immutable.py:252:22-28, ir_type=bool, name='tmp%13', version=0),)
debug: Replacing redundant declaration let tmp%31#0: bool = (== i#1 4u) with copy of existing registers (Register(source_location=array/immutable.py:253:22-28, ir_type=bool, name='tmp%14', version=0),)
debug: Replacing redundant declaration let tmp%32#0: bool = (== i#1 5u) with copy of existing registers (Register(source_location=array/immutable.py:254:22-28, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%33#0: bool = (== i#1 6u) with copy of existing registers (Register(source_location=array/immutable.py:255:22-28, ir_type=bool, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%34#0: bool = (== i#1 7u) with copy of existing registers (Register(source_location=array/immutable.py:269:22-28, ir_type=bool, name='tmp%25', version=0),)
debug: Replacing redundant declaration let tmp%36#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=0),)
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:248:24-29, ir_type=uint64, name='tmp%17', version=0),)
debug: Found equivalence set: tmp%8#0, tmp%10#0, tmp%18#0, tmp%27#0
debug: selected tmp%8#0 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%11#0, tmp%19#0, tmp%28#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%12#0, tmp%20#0, tmp%29#0
debug: selected tmp%12#0 from equivalence set
debug: Found equivalence set: tmp%13#0, tmp%21#0, tmp%30#0
debug: selected tmp%13#0 from equivalence set
debug: Found equivalence set: tmp%14#0, tmp%22#0, tmp%31#0
debug: selected tmp%14#0 from equivalence set
debug: Found equivalence set: tmp%15#0, tmp%23#0, tmp%32#0
debug: selected tmp%15#0 from equivalence set
debug: Found equivalence set: tmp%16#0, tmp%24#0, tmp%33#0
debug: selected tmp%16#0 from equivalence set
debug: Found equivalence set: tmp%17#0, tmp%26#0, tmp%36#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: tmp%25#0, tmp%34#0
debug: selected tmp%25#0 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: encoded_bool%0#0, value_at_index%1#0
debug: selected encoded_bool%0#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: encoded_bool%1#0, item1%0#0
debug: selected encoded_bool%1#0 from equivalence set
debug: Found equivalence set: encoded_bool%2#0, item2%0#0
debug: selected encoded_bool%2#0 from equivalence set
debug: Found equivalence set: item0%0%0#0, tup.foo#0
debug: selected tup.foo#0 from equivalence set
debug: Found equivalence set: item1%0%0#0, tup.bar#0
debug: selected tup.bar#0 from equivalence set
debug: Found equivalence set: item2%0%0#0, tup.baz#0
debug: selected tup.baz#0 from equivalence set
debug: Found equivalence set: array_length%3#0, reverse_index_internal%3#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: item0%1%0#0, dyn_tup.foo#0
debug: selected dyn_tup.foo#0 from equivalence set
debug: Found equivalence set: item1%1%0#0, dyn_tup.bar#0
debug: selected dyn_tup.bar#0 from equivalence set
debug: Found equivalence set: item_index_internal%3#1, idx#0
debug: selected idx#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi value_at_index%0#0) to (extract_uint64 array_head_and_tail%0#0 item_offset%0#0)
debug: Simplified (btoi item0%0#0) to (extract_uint64 value_at_index%2#0 0u)
debug: Simplified (btoi item0%1#0) to (extract_uint64 value_at_index%3#0 0u)
debug: Simplified (extract3 value_at_index%2#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) value_at_index%2#0) // on error: Index access is out of bounds
debug: Simplified (extract3 value_at_index%3#0 0u 8u) // on error: Index access is out of bounds to ((extract 0 8) value_at_index%3#0) // on error: Index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Replaced predecessor block@17 with block@16 in block@11
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@21 with block@20 in block@19
debug: Merged linear block@21 into block@20
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#0: uint64 = (len dyn_tup.bar#0) with copy of existing registers (Register(source_location=array/immutable.py:319:20-44, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let item_index_internal%3#2: uint64 = (+ idx#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:317, ir_type=uint64, name='next_index%0', version=0),)
debug: Replacing redundant declaration let array_length%4#0: uint64 = (extract_uint16 arr4#0 0u) with copy of existing registers (Register(source_location=array/immutable.py:317, ir_type=uint64, name='array_length%3', version=0),)
debug: Found equivalence set: array_length%3#0, array_length%4#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: tmp%0#0, tmp%1#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: next_index%0#0, item_index_internal%3#2
debug: selected next_index%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x00 0u 0u) to 0x00
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (concat 0x 0x80) to 0x80
debug: Simplified (concat 0x80 0x00) to 0x8000
debug: Simplified (concat 0x8000 0x80) to 0x800080
debug: Simplified (concat 0x800080 0x00) to 0x80008000
debug: Simplified (concat 0x80008000 0x80) to 0x8000800080
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (concat 0x encoded_bool%5#0) to encoded_bool%5#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_tuple_buffer%3#0, encoded_tuple%0#0
debug: selected encoded_tuple_buffer%3#0 from equivalence set
debug: Found equivalence set: result%1#0, r_head_and_tail%0#0
debug: selected result%1#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: encoded_tuple_buffer%7#0, encoded_tuple%1#0
debug: selected encoded_tuple_buffer%7#0 from equivalence set
debug: Found equivalence set: result%3#0, r_head_and_tail%1#0
debug: selected result%3#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable current_tail_offset%0#0
debug: Removing unused variable encoded_tuple_buffer%0#0
debug: Removing unused variable current_tail_offset%1#0
debug: Removing unused variable tail_offset%0#0
debug: Removing unused variable r_count%0#0
debug: Removing unused variable current_tail_offset%2#0
debug: Removing unused variable encoded_tuple_buffer%4#0
debug: Removing unused variable current_tail_offset%3#0
debug: Removing unused variable tail_offset%1#0
debug: Removing unused variable r_count%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified (concat 0x val_as_bytes%0#0) to val_as_bytes%0#0
debug: Simplified ((extract 6 2) as_bytes%1#0) to 0x000a
debug: Simplified (concat val_as_bytes%0#0 0x000a) to 0x0000000000000000000a
debug: Simplified (len 0x000548656c6c6f) to 7u
debug: Simplified (concat 0x0000000000000000000a 0x000548656c6c6f) to 0x0000000000000000000a000548656c6c6f
debug: Simplified ((extract 6 2) as_bytes%2#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (len 0x0000000000000000000a000548656c6c6f) to 17u
debug: Simplified (concat 0x0002 0x0000000000000000000a000548656c6c6f) to 0x00020000000000000000000a000548656c6c6f
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x val_as_bytes%1#0) to val_as_bytes%1#0
debug: Simplified ((extract 6 2) as_bytes%4#0) to 0x000a
debug: Simplified ((extract 6 2) as_bytes%5#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let as_bytes%4#0: bytes[8] = (itob 10u) with copy of existing registers (Register(source_location=array/immutable.py:347:14-76, ir_type=bytes[8], name='as_bytes%1', version=0),)
debug: Replacing redundant declaration let as_bytes%5#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/immutable.py:347:14-76, ir_type=bytes[8], name='as_bytes%2', version=0),)
debug: Found equivalence set: val_as_bytes%0#0, encoded_tuple_buffer%1#0
debug: selected val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: val_as_bytes%1#0, encoded_tuple_buffer%5#0
debug: selected val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: as_bytes%1#0, as_bytes%4#0
debug: selected as_bytes%1#0 from equivalence set
debug: Found equivalence set: as_bytes%2#0, as_bytes%5#0
debug: selected as_bytes%2#0 from equivalence set
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, mutable#0
debug: selected mutable#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x slot_contents%2#0) to slot_contents%2#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified (concat 0x encoded%0#0) to encoded%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x 0x000161) to 0x000161
debug: Simplified (concat 0x000161 0x000162) to 0x000161000162
debug: Simplified (* 2u 2u) to 4u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat_result%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: concat_result%1#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x0000 0x) to 0x0000
debug: Simplified (concat 0x 0x000161) to 0x000161
debug: Simplified (concat 0x000161 0x000162) to 0x000161000162
debug: Simplified (concat 0x arg.0#0) to arg.0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_nested_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:394:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:386:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:378:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:370:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:362:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:352:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:345:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:338:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_tuple_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:331:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:324:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:297:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:232:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:214:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_nested_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:210:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:206:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:187:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:168:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:153:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:135:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:111:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:75:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_array in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%11#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%0#0, arr#18
debug: selected arr#18 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%1#0, arr#17
debug: selected arr#17 from equivalence set
debug: Found equivalence set: tmp%40#0, arr_to_add#0
debug: selected arr_to_add#0 from equivalence set
debug: Found equivalence set: reinterpret_uint64[][]%0#0, arr#13
debug: selected arr#13 from equivalence set
debug: Found equivalence set: totals#1, tmp%41#0
debug: selected totals#1 from equivalence set
debug: Found equivalence set: reinterpret_uint64[]%2#0, arr1#0
debug: selected arr1#0 from equivalence set
debug: Found equivalence set: reinterpret_bool[]%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bool,bool)[]%0#0, arr3#0
debug: selected arr3#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%0#0, arr4#0
debug: selected arr4#0 from equivalence set
debug: Found equivalence set: sum1#1, elements_to_encode%0#0
debug: selected sum1#1 from equivalence set
debug: Found equivalence set: sum2#1, elements_to_encode%1#0
debug: selected sum2#1 from equivalence set
debug: Found equivalence set: sum3#1, elements_to_encode%2#0
debug: selected sum3#1 from equivalence set
debug: Found equivalence set: sum4#1, elements_to_encode%3#0
debug: selected sum4#1 from equivalence set
debug: Found equivalence set: tmp%56#0, append#4
debug: selected append#4 from equivalence set
debug: Found equivalence set: encoded%0#4, concatenated%0#4
debug: selected encoded%0#4 from equivalence set
debug: Found equivalence set: arr#11, tmp%57#0
debug: selected arr#11 from equivalence set
debug: Found equivalence set: tmp%63#0, append#3
debug: selected append#3 from equivalence set
debug: Found equivalence set: encoded_bool%5#0, data%5#0
debug: selected encoded_bool%5#0 from equivalence set
debug: Found equivalence set: arr#8, tmp%64#0
debug: selected arr#8 from equivalence set
debug: Found equivalence set: tmp%70#0, append#2
debug: selected append#2 from equivalence set
debug: Found equivalence set: encoded%0#3, concatenated%0#3
debug: selected encoded%0#3 from equivalence set
debug: Found equivalence set: arr#5, tmp%71#0
debug: selected arr#5 from equivalence set
debug: Found equivalence set: tmp%77#0, append#1
debug: selected append#1 from equivalence set
debug: Found equivalence set: arr#2, tmp%78#0
debug: selected arr#2 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bool,bool)[]%1#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%84#0, append#0
debug: selected append#0 from equivalence set
debug: Found equivalence set: encoded%0#2, slot_contents%0#0
debug: selected encoded%0#2 from equivalence set
debug: Found equivalence set: slot_contents%2#0, concatenated%0#2
debug: selected slot_contents%2#0 from equivalence set
debug: Found equivalence set: concat_result%0#1, tmp%85#0
debug: selected concat_result%0#1 from equivalence set
debug: Found equivalence set: reinterpret_bytes[16]%0#0, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: encoded%0#1, concatenated%0#1
debug: selected encoded%0#1 from equivalence set
debug: Found equivalence set: result#3, tmp%91#0
debug: selected result#3 from equivalence set
debug: Found equivalence set: item0%0#0, arg.0#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: item1%0#0, arg.1#1
debug: selected arg.1#1 from equivalence set
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: result#2, tmp%97#0
debug: selected result#2 from equivalence set
debug: Found equivalence set: tmp%103#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: result#1, tmp%104#0
debug: selected result#1 from equivalence set
debug: Found equivalence set: item0%1#0, arg.0#0, data%2#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: item1%1#0, arg.1#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: result#0, tmp%111#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%1#0, imm1#0
debug: selected imm1#0 from equivalence set
debug: Found equivalence set: reinterpret_(uint64,bytes)[]%2#0, imm2#0
debug: selected imm2#0 from equivalence set
debug: Found equivalence set: concat_result%0#0, tmp%117#0
debug: selected concat_result%0#0 from equivalence set
debug: Copy propagation made 39 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable arr#39
debug: Removing unused variable tmp%0#14
debug: Removing unused variable tmp%1#11
debug: Removing unused variable expr_value_trimmed%0#9
debug: Removing unused variable arc4_item%0#4
debug: Removing unused variable arc4_item%1#1
debug: Removing unused variable arc4_item%2#3
debug: Removing unused variable item_offset%3#3
debug: Removing unused variable arc4_item%3#3
debug: Removing unused variable arc4_item%4#0
debug: Removing unused variable arc4_item%5#0
debug: Removing unused variable arc4_item%6#0
debug: Removing unused variable array_head_and_tail%7#0
debug: Removing unused variable item_offset%7#0
debug: Removing unused variable arc4_item%7#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%0#12
debug: Removing unused variable tmp%1#9
debug: Removing unused variable tmp%6#4
debug: Removing unused variable index_is_in_bounds%0#0
debug: Removing unused variable tmp%18#4
debug: Removing unused variable tmp%2#7
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%0#11
debug: Removing unused variable tmp%1#8
debug: Removing unused variable item_offset%0#6
debug: Removing unused variable item0%0#5
debug: Removing unused variable item1%0#3
debug: Removing unused variable item0%1#2
debug: Removing unused variable item1%1#2
debug: Removing unused variable item_offset%2#3
debug: Removing unused variable item0%2#2
debug: Removing unused variable item1%2#2
debug: Removing unused variable item0%3#2
debug: Removing unused variable item1%3#2
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%0#10
debug: Removing unused variable tmp%1#7
debug: Removing unused variable array_head_and_tail%0#5
debug: Removing unused variable item_offset%0#5
debug: Removing unused variable item0%0#4
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%0#9
debug: Removing unused variable tmp%1#6
debug: Removing unused variable as_bytes%1#8
debug: Removing unused variable offset_as_uint16%0#3
debug: Removing unused variable data_length%0#3
debug: Removing unused variable as_bytes%2#4
debug: Removing unused variable next_item_head%0#3
debug: Removing unused variable result%0#3
debug: Removing unused variable next_item_len%0#3
debug: Removing unused variable item0%0#3
debug: Removing unused variable item_offset_offset%2#1
debug: Removing unused variable next_index%2#1
debug: Removing unused variable next_item_offset_offset%2#1
debug: Removing unused variable item0%2#1
debug: Removing unused variable item0%3#1
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%0#8
debug: Removing unused variable tmp%1#5
debug: Removing unused variable as_bytes%1#7
debug: Removing unused variable offset_as_uint16%0#2
debug: Removing unused variable data_length%0#2
debug: Removing unused variable as_bytes%2#3
debug: Removing unused variable next_item_head%0#2
debug: Removing unused variable result%0#2
debug: Removing unused variable next_item_len%0#2
debug: Removing unused variable item0%0#2
debug: Removing unused variable item_offset_offset%2#0
debug: Removing unused variable next_index%2#0
debug: Removing unused variable next_item_offset_offset%2#0
debug: Removing unused variable item0%2#0
debug: Removing unused variable item0%3#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable as_bytes%0#8
debug: Removing unused variable offset_as_uint16%0#1
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable data_length%0#1
debug: Removing unused variable tmp%39#0
debug: Removing unused variable as_bytes%1#6
debug: Removing unused variable next_item_head%0#1
debug: Removing unused variable result%0#1
debug: Removing unused variable next_item_len%0#1
debug: Removing unused variable tmp%46#0
debug: Removing unused variable tmp%0#7
debug: Removing unused variable tmp%1#4
debug: Removing unused variable tmp%2#4
debug: Removing unused variable tmp%3#3
debug: Removing unused variable tmp%4#1
debug: Removing unused variable tmp%5#1
debug: Removing unused variable tmp%6#1
debug: Removing unused variable tmp%7#1
debug: Removing unused variable tmp%50#0
debug: Removing unused variable value_at_index%0#0
debug: Removing unused variable item0%0#1
debug: Removing unused variable item0%1#1
debug: Removing unused variable tmp%55#0
debug: Removing unused variable array_data%0#8
debug: Removing unused variable expr_value_trimmed%0#4
debug: Removing unused variable tmp%62#0
debug: Removing unused variable array_data%0#7
debug: Removing unused variable encoded_bool%0#0
debug: Removing unused variable encoded_bool%1#0
debug: Removing unused variable encoded_bool%2#0
debug: Removing unused variable encoded_bool%3#0
debug: Removing unused variable encoded_bool%4#0
debug: Removing unused variable data%0#2
debug: Removing unused variable data%1#2
debug: Removing unused variable data%2#2
debug: Removing unused variable data%3#1
debug: Removing unused variable data%4#0
debug: Removing unused variable tmp%69#0
debug: Removing unused variable array_data%0#6
debug: Removing unused variable expr_value_trimmed%0#3
debug: Removing unused variable tmp%76#0
debug: Removing unused variable array_data%0#5
debug: Removing unused variable val_as_bytes%0#1
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#3
debug: Removing unused variable length_uint16%0#0
debug: Removing unused variable encoded_value%0#0
debug: Removing unused variable as_bytes%1#2
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%2#1
debug: Removing unused variable data_length%0#0
debug: Removing unused variable encoded_tuple_buffer%3#1
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable result%1#0
debug: Removing unused variable l_count%0#1
debug: Removing unused variable l_head_and_tail%0#1
debug: Removing unused variable offset_as_uint16%1#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable next_item_head%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable next_item_len%1#0
debug: Removing unused variable tmp%83#0
debug: Removing unused variable array_data%0#4
debug: Removing unused variable expr_value_trimmed%1#2
debug: Removing unused variable tmp%90#0
debug: Removing unused variable array_data%0#3
debug: Removing unused variable expr_value_trimmed%0#1
debug: Removing unused variable tmp%96#0
debug: Removing unused variable array_data%0#2
debug: Removing unused variable expr_value_trimmed%0#0
debug: Removing unused variable tmp%102#0
debug: Removing unused variable array_data%0#1
debug: Removing unused variable data%0#1
debug: Removing unused variable data%1#1
debug: Removing unused variable start_of_tail%0#0
debug: Removing unused variable tmp%109#0
debug: Removing unused variable array_data%0#0
debug: Removing unused variable data%0#0
debug: Removing unused variable data%1#0
debug: Removing unused variable tmp%116#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@153 with block@3 in block@154
debug: Merged linear block@153 into block@3
debug: Replaced predecessor block@157 with block@156 in block@31
debug: Merged linear block@157 into block@156
debug: Replaced predecessor block@138 with block@4 in block@139
debug: Merged linear block@138 into block@4
debug: Replaced predecessor block@152 with block@151 in block@31
debug: Merged linear block@152 into block@151
debug: Replaced predecessor block@133 with block@5 in block@134
debug: Merged linear block@133 into block@5
debug: Replaced predecessor block@137 with block@136 in block@31
debug: Merged linear block@137 into block@136
debug: Replaced predecessor block@128 with block@6 in block@129
debug: Merged linear block@128 into block@6
debug: Replaced predecessor block@132 with block@131 in block@31
debug: Merged linear block@132 into block@131
debug: Replaced predecessor block@120 with block@7 in block@121
debug: Merged linear block@120 into block@7
debug: Replaced predecessor block@127 with block@126 in block@31
debug: Merged linear block@127 into block@126
debug: Replaced predecessor block@112 with block@8 in block@113
debug: Merged linear block@112 into block@8
debug: Replaced predecessor block@119 with block@118 in block@31
debug: Merged linear block@119 into block@118
debug: Replaced predecessor block@110 with block@9 in block@111
debug: Merged linear block@110 into block@9
debug: Replaced predecessor block@111 with block@9 in block@31
debug: Merged linear block@111 into block@9
debug: Replaced predecessor block@108 with block@10 in block@109
debug: Merged linear block@108 into block@10
debug: Replaced predecessor block@109 with block@10 in block@31
debug: Merged linear block@109 into block@10
debug: Replaced predecessor block@94 with block@11 in block@95
debug: Merged linear block@94 into block@11
debug: Replaced predecessor block@107 with block@106 in block@31
debug: Merged linear block@107 into block@106
debug: Replaced predecessor block@89 with block@12 in block@90
debug: Merged linear block@89 into block@12
debug: Replaced predecessor block@93 with block@92 in block@31
debug: Merged linear block@93 into block@92
debug: Replaced predecessor block@69 with block@13 in block@70
debug: Merged linear block@69 into block@13
debug: Replaced predecessor block@88 with block@87 in block@31
debug: Merged linear block@88 into block@87
debug: Replaced predecessor block@64 with block@14 in block@65
debug: Merged linear block@64 into block@14
debug: Replaced predecessor block@68 with block@67 in block@31
debug: Merged linear block@68 into block@67
debug: Replaced predecessor block@59 with block@15 in block@60
debug: Merged linear block@59 into block@15
debug: Replaced predecessor block@63 with block@62 in block@31
debug: Merged linear block@63 into block@62
debug: Replaced predecessor block@54 with block@16 in block@55
debug: Merged linear block@54 into block@16
debug: Replaced predecessor block@58 with block@57 in block@31
debug: Merged linear block@58 into block@57
debug: Replaced predecessor block@49 with block@17 in block@50
debug: Merged linear block@49 into block@17
debug: Replaced predecessor block@53 with block@52 in block@31
debug: Merged linear block@53 into block@52
debug: Replaced predecessor block@44 with block@18 in block@45
debug: Merged linear block@44 into block@18
debug: Replaced predecessor block@48 with block@47 in block@31
debug: Merged linear block@48 into block@47
debug: Replaced predecessor block@42 with block@19 in block@43
debug: Merged linear block@42 into block@19
debug: Replaced predecessor block@43 with block@19 in block@31
debug: Merged linear block@43 into block@19
debug: Replaced predecessor block@40 with block@20 in block@41
debug: Merged linear block@40 into block@20
debug: Replaced predecessor block@41 with block@20 in block@31
debug: Merged linear block@41 into block@20
debug: Replaced predecessor block@38 with block@21 in block@39
debug: Merged linear block@38 into block@21
debug: Replaced predecessor block@39 with block@21 in block@31
debug: Merged linear block@39 into block@21
debug: Replaced predecessor block@36 with block@22 in block@37
debug: Merged linear block@36 into block@22
debug: Replaced predecessor block@37 with block@22 in block@31
debug: Merged linear block@37 into block@22
debug: Replaced predecessor block@34 with block@23 in block@35
debug: Merged linear block@34 into block@23
debug: Replaced predecessor block@35 with block@23 in block@31
debug: Merged linear block@35 into block@23
debug: Replaced predecessor block@32 with block@27 in block@33
debug: Merged linear block@32 into block@27
debug: Replaced predecessor block@33 with block@27 in block@31
debug: Merged linear block@33 into block@27
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#1
debug: Removing unused variable tmp%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable arr#0
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Removing unused variable arc4_item%0#0
debug: Removing unused variable arc4_item%1#0
debug: Removing unused variable arc4_item%2#0
debug: Removing unused variable item_offset%3#0
debug: Removing unused variable arc4_item%3#0
debug: Removing unused variable arc4_item%4#0
debug: Removing unused variable arc4_item%5#0
debug: Removing unused variable arc4_item%6#0
debug: Removing unused variable array_head_and_tail%7#0
debug: Removing unused variable item_offset%7#0
debug: Removing unused variable arc4_item%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable index_is_in_bounds%0#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item1%0#0
debug: Removing unused variable item0%1#0
debug: Removing unused variable item1%1#0
debug: Removing unused variable item_offset%2#0
debug: Removing unused variable item0%2#0
debug: Removing unused variable item1%2#0
debug: Removing unused variable item0%3#0
debug: Removing unused variable item1%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable array_head_and_tail%0#0
debug: Removing unused variable item_offset%0#0
debug: Removing unused variable item0%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item_offset_offset%2#0
debug: Removing unused variable next_index%2#0
debug: Removing unused variable next_item_offset_offset%2#0
debug: Removing unused variable item0%2#0
debug: Removing unused variable item0%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item_offset_offset%2#0
debug: Removing unused variable next_index%2#0
debug: Removing unused variable next_item_offset_offset%2#0
debug: Removing unused variable item0%2#0
debug: Removing unused variable item0%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%1#0
debug: Removing unused variable data_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%0#0
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%3#0
debug: Removing unused variable tmp%4#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable value_at_index%0#0
debug: Removing unused variable item0%0#0
debug: Removing unused variable item0%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_bool%5#0, data%5#0
debug: selected encoded_bool%5#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable encoded_bool%0#0
debug: Removing unused variable encoded_bool%1#0
debug: Removing unused variable encoded_bool%2#0
debug: Removing unused variable encoded_bool%3#0
debug: Removing unused variable encoded_bool%4#0
debug: Removing unused variable data%0#0
debug: Removing unused variable data%1#0
debug: Removing unused variable data%2#0
debug: Removing unused variable data%3#0
debug: Removing unused variable data%4#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable val_as_bytes%0#0
debug: Removing unused variable length%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable length_uint16%0#0
debug: Removing unused variable encoded_value%0#0
debug: Removing unused variable as_bytes%1#0
debug: Removing unused variable offset_as_uint16%0#0
debug: Removing unused variable encoded_tuple_buffer%2#0
debug: Removing unused variable data_length%0#0
debug: Removing unused variable encoded_tuple_buffer%3#0
debug: Removing unused variable as_bytes%2#0
debug: Removing unused variable next_item_head%0#0
debug: Removing unused variable result%0#0
debug: Removing unused variable next_item_len%0#0
debug: Removing unused variable result%1#0
debug: Removing unused variable l_count%0#0
debug: Removing unused variable l_head_and_tail%0#0
debug: Removing unused variable offset_as_uint16%1#0
debug: Removing unused variable data_length%1#0
debug: Removing unused variable next_item_head%1#0
debug: Removing unused variable result%2#0
debug: Removing unused variable next_item_len%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, slot_contents%0#0
debug: selected encoded%0#0 from equivalence set
debug: Found equivalence set: slot_contents%2#0, concatenated%0#0
debug: selected slot_contents%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable expr_value_trimmed%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded%0#0, concatenated%0#0
debug: selected encoded%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable expr_value_trimmed%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable data%0#0
debug: Removing unused variable data%1#0
debug: Removing unused variable start_of_tail%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, data%2#0
debug: selected arg.0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_data%0#0
debug: Removing unused variable data%0#0
debug: Removing unused variable data%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: lowering array IR nodes in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#9
debug: selected array%data%0#1 from equivalence set
debug: Found equivalence set: array%data%1#1, encoded%1#7
debug: selected array%data%1#1 from equivalence set
debug: Found equivalence set: array%data%2#1, encoded%2#1
debug: selected array%data%2#1 from equivalence set
debug: Found equivalence set: array%data%3#1, encoded%0#8
debug: selected array%data%3#1 from equivalence set
debug: Found equivalence set: array%data%4#1, encoded%0#7
debug: selected array%data%4#1 from equivalence set
debug: Found equivalence set: array%data%5#1, encoded%0#6
debug: selected array%data%5#1 from equivalence set
debug: Found equivalence set: array%data%6#1, encoded%1#6
debug: selected array%data%6#1 from equivalence set
debug: Found equivalence set: array%data%7#1, encoded%0#5
debug: selected array%data%7#1 from equivalence set
debug: Found equivalence set: array%data%8#1, encoded%1#5
debug: selected array%data%8#1 from equivalence set
debug: Found equivalence set: array%data%9#1, encoded%2#0
debug: selected array%data%9#1 from equivalence set
debug: Found equivalence set: array%data%10#1, encoded%3#0
debug: selected array%data%10#1 from equivalence set
debug: Found equivalence set: array%data%13#1, encoded%0#4
debug: selected array%data%13#1 from equivalence set
debug: Found equivalence set: array%data%14#1, encoded%1#4
debug: selected array%data%14#1 from equivalence set
debug: Found equivalence set: array%data%15#1, encoded%0#3
debug: selected array%data%15#1 from equivalence set
debug: Found equivalence set: array%data%16#1, encoded%1#3
debug: selected array%data%16#1 from equivalence set
debug: Found equivalence set: array%array_contents%0#1, extended%0#0
debug: selected array%array_contents%0#1 from equivalence set
debug: Found equivalence set: array%data%17#1, encoded%1#2
debug: selected array%data%17#1 from equivalence set
debug: Found equivalence set: array%array_contents%1#1, extended%1#0
debug: selected array%array_contents%1#1 from equivalence set
debug: Found equivalence set: array%data%19#1, encoded%0#1
debug: selected array%data%19#1 from equivalence set
debug: Found equivalence set: array%data%20#1, encoded%1#1
debug: selected array%data%20#1 from equivalence set
debug: Found equivalence set: array%data%22#1, encoded%0#0
debug: selected array%data%22#1 from equivalence set
debug: Found equivalence set: array%data%24#1, encoded%1#0
debug: selected array%data%24#1 from equivalence set
debug: Copy propagation made 27 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable encoded%0#2
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (len array%sub_item%0#1) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#13) to 0x0001
debug: Simplified (concat 0x0001 array%sub_item%0#1) to 0x0001000000000000002a
debug: Simplified (extract_uint16 0x0001000000000000002a 0u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (- 1u 1u) to 0u
debug: Simplified ((extract 2 0) 0x0001000000000000002a) to 0x000000000000002a
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract_uint64 0x000000000000002a 0u) to 42u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%1#1) to array%sub_item%1#1
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Simplified (concat 0x array%sub_item%2#1) to array%sub_item%2#1
debug: Simplified (concat 0x array%sub_item%3#1) to array%sub_item%3#1
debug: Simplified (concat 0x array%encoded%4#1) to array%encoded%4#1
debug: Simplified (concat 0x array%sub_item%5#1) to array%sub_item%5#1
debug: Simplified (concat 0x array%sub_item%6#1) to array%sub_item%6#1
debug: Simplified (concat 0x array%sub_item%7#1) to array%sub_item%7#1
debug: Simplified (concat 0x array%sub_item%7#1) to array%sub_item%7#1
debug: Simplified (concat 0x array%sub_item%8#1) to array%sub_item%8#1
debug: Simplified (concat 0x array%sub_item%8#1) to array%sub_item%8#1
debug: Simplified (concat 0x array%encoded_bit%1#1) to array%encoded_bit%1#1
debug: Simplified (concat 0x array%sub_item%9#1) to array%sub_item%9#1
debug: Simplified (concat 0x array%sub_item%10#1) to array%sub_item%10#1
debug: Simplified (concat 0x array%encoded%12#1) to array%encoded%12#1
debug: Simplified (concat 0x array%sub_item%18#1) to array%sub_item%18#1
debug: Simplified (concat 0x array%encoded%15#1) to array%encoded%15#1
debug: Simplified (concat 0x array%sub_item%27#1) to array%sub_item%27#1
debug: Simplified (concat 0x array%encoded%19#1) to array%encoded%19#1
debug: Simplified (concat 0x array%sub_item%37#1) to array%sub_item%37#1
debug: Simplified (concat 0x array%sub_item%37#1) to array%sub_item%37#1
debug: Simplified (concat 0x array%sub_item%38#1) to array%sub_item%38#1
debug: Simplified (concat array%sub_item%37#1 array%sub_item%38#1) to 0x00000000000000010000000000000002
debug: Simplified (concat 0x array%sub_item%39#1) to array%sub_item%39#1
debug: Simplified (concat 0x00000000000000010000000000000002 array%sub_item%39#1) to 0x000000000000000100000000000000020000000000000003
debug: Simplified (len 0x000000000000000100000000000000020000000000000003) to 24u
debug: Simplified (/ 24u 8u) to 3u
debug: Simplified ((extract 6 2) as_bytes%0#5) to 0x0003
debug: Simplified (concat 0x0003 0x000000000000000100000000000000020000000000000003) to 0x0003000000000000000100000000000000020000000000000003
debug: Simplified (concat 0x array%sub_item%40#1) to array%sub_item%40#1
debug: Simplified (concat 0x array%sub_item%40#1) to array%sub_item%40#1
debug: Simplified (concat 0x array%sub_item%41#1) to array%sub_item%41#1
debug: Simplified (select 0x00 0x80 1u) to 0x80
debug: Simplified (concat array%sub_item%41#1 0x80) to 0x000000000000000080
debug: Simplified (setbit 0x000000000000000080 65u 0u) to 0x000000000000000080
debug: Simplified (concat 0x 0x000000000000000080) to 0x000000000000000080
debug: Simplified (len 0x000000000000000080) to 9u
debug: Simplified (/ 9u 9u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#4) to 0x0001
debug: Simplified (concat 0x0001 0x000000000000000080) to 0x0001000000000000000080
debug: Simplified (concat 0x array%sub_item%43#1) to array%sub_item%43#1
debug: Simplified (concat 0x array%sub_item%44#1) to array%sub_item%44#1
debug: Simplified (concat 0x expr_value_trimmed%0#2) // on error: max array length exceeded to expr_value_trimmed%0#2
debug: Simplified (concat 0x array%sub_item%45#1) to array%sub_item%45#1
debug: Simplified (concat 0x array%sub_item%46#1) to array%sub_item%46#1
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x 0x0000000000000002) to 0x0000000000000002
debug: Simplified (concat 0x0000000000000001 0x0000000000000002) to 0x00000000000000010000000000000002
debug: Simplified (len 0x00000000000000010000000000000002) to 16u
debug: Simplified (/ 16u 8u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#1) to 0x0002
debug: Simplified (concat 0x0002 0x00000000000000010000000000000002) to 0x000200000000000000010000000000000002
debug: Simplified ((extract 2 0) 0x000200000000000000010000000000000002) to 0x00000000000000010000000000000002
debug: Simplified (concat 0x arg#1) to arg#1
debug: Simplified (concat 0x arg#1) to arg#1
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x 0x0000000000000001) to 0x0000000000000001
debug: Simplified (concat 0x 0x0000000000000002) to 0x0000000000000002
debug: Simplified (concat 0x0000000000000001 0x0000000000000002) to 0x00000000000000010000000000000002
debug: Simplified (len 0x00000000000000010000000000000002) to 16u
debug: Simplified (/ 16u 8u) to 2u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0002
debug: Simplified (concat 0x0002 0x00000000000000010000000000000002) to 0x000200000000000000010000000000000002
debug: Simplified ((extract 2 0) 0x000200000000000000010000000000000002) to 0x00000000000000010000000000000002
debug: Simplified (concat 0x arg.0#1) to arg.0#1
debug: Simplified (concat 0x arg.0#1) to arg.0#1
debug: Simplified (concat 0x arg.1#1) to arg.1#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let array%encoded_bit%2#1: bytes = (select 0x00 0x80 tmp%8#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-62, ir_type=bytes, name='array%encoded_bit%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%18#1: bytes[8] = (itob i#17) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=bytes[8], name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%encoded_bit%3#1: bytes = (select 0x00 0x80 tmp%8#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-62, ir_type=bytes, name='array%encoded_bit%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%26#1: bytes[8] = (itob i#18) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=bytes[8], name='array%sub_item%17', version=1),)
debug: Replacing redundant declaration let array%sub_item%27#1: bytes[8] = (itob i#17) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=bytes[8], name='array%sub_item%10', version=1),)
debug: Replacing redundant declaration let array%encoded_bit%4#1: bytes = (select 0x00 0x80 tmp%8#1) with copy of existing registers (Register(source_location=array/immutable.py:244:46-62, ir_type=bytes, name='array%encoded_bit%1', version=1),)
debug: Replacing redundant declaration let array%sub_item%36#1: bytes[8] = (itob i#18) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=bytes[8], name='array%sub_item%17', version=1),)
debug: Replacing redundant declaration let as_bytes%0#5: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=array/immutable.py:326:51-60, ir_type=bytes[8], name='array%sub_item%39', version=1),)
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: selected array%sub_item%0#1 from equivalence set
debug: Found equivalence set: array%sub_item%1#1, array%encoded%1#1, array%data%1#1
debug: selected array%sub_item%1#1 from equivalence set
debug: Found equivalence set: array%sub_item%2#1, array%encoded%2#1, array%data%2#1
debug: selected array%sub_item%2#1 from equivalence set
debug: Found equivalence set: array%sub_item%3#1, array%encoded%3#1
debug: selected array%sub_item%3#1 from equivalence set
debug: Found equivalence set: array%encoded%4#1, array%data%3#1
debug: selected array%encoded%4#1 from equivalence set
debug: Found equivalence set: array%sub_item%5#1, array%encoded%5#1
debug: selected array%sub_item%5#1 from equivalence set
debug: Found equivalence set: array%sub_item%6#1, array%data%4#1
debug: selected array%sub_item%6#1 from equivalence set
debug: Found equivalence set: array%sub_item%7#1, array%encoded%7#1, array%data%5#1
debug: selected array%sub_item%7#1 from equivalence set
debug: Found equivalence set: array%sub_item%8#1, array%encoded%8#1, array%data%6#1
debug: selected array%sub_item%8#1 from equivalence set
debug: Found equivalence set: array%encoded_bit%1#1, array%encoded%9#1, array%encoded_bit%2#1, array%encoded_bit%3#1, array%encoded_bit%4#1
debug: selected array%encoded_bit%1#1 from equivalence set
debug: Found equivalence set: array%sub_item%9#1, array%data%7#1
debug: selected array%sub_item%9#1 from equivalence set
debug: Found equivalence set: array%sub_item%10#1, array%encoded%10#1, array%sub_item%18#1, array%encoded%13#1, array%sub_item%27#1, array%encoded%16#1
debug: selected array%sub_item%10#1 from equivalence set
debug: Found equivalence set: array%encoded%12#1, array%data%8#1
debug: selected array%encoded%12#1 from equivalence set
debug: Found equivalence set: array%sub_item%17#1, array%sub_item%26#1, array%sub_item%36#1
debug: selected array%sub_item%17#1 from equivalence set
debug: Found equivalence set: array%encoded%15#1, array%data%9#1
debug: selected array%encoded%15#1 from equivalence set
debug: Found equivalence set: array%encoded%19#1, array%data%10#1
debug: selected array%encoded%19#1 from equivalence set
debug: Found equivalence set: array%sub_item%37#1, array%encoded%20#1, array%data%11#1
debug: selected array%sub_item%37#1 from equivalence set
debug: Found equivalence set: array%sub_item%38#1, array%encoded%21#1
debug: selected array%sub_item%38#1 from equivalence set
debug: Found equivalence set: array%sub_item%39#1, array%encoded%22#1, as_bytes%0#5
debug: selected array%sub_item%39#1 from equivalence set
debug: Found equivalence set: array%sub_item%40#1, array%encoded%23#1, array%data%14#1
debug: selected array%sub_item%40#1 from equivalence set
debug: Found equivalence set: array%sub_item%41#1, array%encoded%24#1
debug: selected array%sub_item%41#1 from equivalence set
debug: Found equivalence set: array%sub_item%43#1, array%encoded%26#1
debug: selected array%sub_item%43#1 from equivalence set
debug: Found equivalence set: array%sub_item%44#1, array%data%16#1
debug: selected array%sub_item%44#1 from equivalence set
debug: Found equivalence set: expr_value_trimmed%0#2, array%array_contents%0#1
debug: selected expr_value_trimmed%0#2 from equivalence set
debug: Found equivalence set: array%sub_item%45#1, array%encoded%28#1
debug: selected array%sub_item%45#1 from equivalence set
debug: Found equivalence set: array%sub_item%46#1, array%data%17#1
debug: selected array%sub_item%46#1 from equivalence set
debug: Found equivalence set: arg#1, array%encoded%32#1, array%data%20#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: arg.0#1, array%encoded%35#1, array%data%23#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: arg.1#1, array%encoded%36#1
debug: selected arg.1#1 from equivalence set
debug: Copy propagation made 7 modifications
debug: Replacing redundant declaration let array%encoded%14#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (concat array%sub_item%10#1 array%encoded_bit%1#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%encoded%11', version=1),)
debug: Replacing redundant declaration let array%encoded%17#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (concat array%sub_item%10#1 array%encoded_bit%1#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%encoded%11', version=1),)
debug: Found equivalence set: array%encoded%11#1, array%encoded%14#1, array%encoded%17#1
debug: selected array%encoded%11#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%19#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%encoded%11#1 65u tmp%9#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%11', version=1),)
debug: Replacing redundant declaration let array%sub_item%28#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%encoded%11#1 65u tmp%9#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%11', version=1),)
debug: Found equivalence set: array%sub_item%11#1, array%sub_item%19#1, array%sub_item%28#1
debug: selected array%sub_item%11#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%20#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%11#1 66u tmp%12#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%12', version=1),)
debug: Replacing redundant declaration let array%sub_item%29#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%11#1 66u tmp%12#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%12', version=1),)
debug: Found equivalence set: array%sub_item%12#1, array%sub_item%20#1, array%sub_item%29#1
debug: selected array%sub_item%12#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%21#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%12#1 67u tmp%13#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%13', version=1),)
debug: Replacing redundant declaration let array%sub_item%30#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%12#1 67u tmp%13#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%13', version=1),)
debug: Found equivalence set: array%sub_item%13#1, array%sub_item%21#1, array%sub_item%30#1
debug: selected array%sub_item%13#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%22#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%13#1 68u tmp%14#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%14', version=1),)
debug: Replacing redundant declaration let array%sub_item%31#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%13#1 68u tmp%14#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%14', version=1),)
debug: Found equivalence set: array%sub_item%14#1, array%sub_item%22#1, array%sub_item%31#1
debug: selected array%sub_item%14#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%23#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%14#1 69u tmp%15#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%15', version=1),)
debug: Replacing redundant declaration let array%sub_item%32#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%14#1 69u tmp%15#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%15', version=1),)
debug: Found equivalence set: array%sub_item%15#1, array%sub_item%23#1, array%sub_item%32#1
debug: selected array%sub_item%15#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%24#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%15#1 70u tmp%16#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%16', version=1),)
debug: Replacing redundant declaration let array%sub_item%33#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%15#1 70u tmp%16#1) with copy of existing registers (Register(source_location=array/immutable.py:247:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%16', version=1),)
debug: Found equivalence set: array%sub_item%16#1, array%sub_item%24#1, array%sub_item%33#1
debug: selected array%sub_item%16#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let array%sub_item%34#1: (uint64,bool,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[] = (setbit array%sub_item%16#1 71u tmp%25#1) with copy of existing registers (Register(source_location=array/immutable.py:260:24-25, ir_type=(uint64,bool,bool,bool,bool,bool,bool,bool,bool,uint64)[], name='array%sub_item%25', version=1),)
debug: Found equivalence set: array%sub_item%25#1, array%sub_item%34#1
debug: selected array%sub_item%25#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%data%0#1, encoded%0#0
debug: selected array%data%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Simplified (concat 0x array%sub_item%0#1) to array%sub_item%0#1
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array%sub_item%0#1
debug: Removing unused variable byte_len%0#9
debug: Removing unused variable len_%0#9
debug: Removing unused variable as_bytes%0#13
debug: Removing unused variable len_16_bit%0#9
debug: Removing unused variable arr#40
debug: Removing unused variable tmp%2#8
debug: Removing unused variable tmp%3#10
debug: Removing unused variable tmp%5#8
debug: Removing unused variable array_head_and_tail%0#8
debug: Removing unused variable item_offset%0#7
debug: Removing unused variable tmp%6#5
debug: Removing unused variable tmp%7#7
debug: Removing unused variable array%sub_item%37#1
debug: Removing unused variable array%sub_item%38#1
debug: Removing unused variable array%data%12#1
debug: Removing unused variable array%sub_item%39#1
debug: Removing unused variable array%data%13#1
debug: Removing unused variable byte_len%0#4
debug: Removing unused variable len_%0#4
debug: Removing unused variable len_16_bit%0#4
debug: Removing unused variable array%sub_item%41#1
debug: Removing unused variable array%encoded_bit%5#1
debug: Removing unused variable array%encoded%25#1
debug: Removing unused variable array%sub_item%42#1
debug: Removing unused variable array%data%15#1
debug: Removing unused variable byte_len%0#3
debug: Removing unused variable len_%0#3
debug: Removing unused variable as_bytes%0#4
debug: Removing unused variable len_16_bit%0#3
debug: Removing unused variable array%encoded%30#1
debug: Removing unused variable array%data%18#1
debug: Removing unused variable array%encoded%31#1
debug: Removing unused variable array%data%19#1
debug: Removing unused variable byte_len%0#1
debug: Removing unused variable len_%0#1
debug: Removing unused variable as_bytes%0#1
debug: Removing unused variable len_16_bit%0#1
debug: Removing unused variable prefix#3
debug: Removing unused variable expr_value_trimmed%1#1
debug: Removing unused variable array%encoded%33#1
debug: Removing unused variable array%data%21#1
debug: Removing unused variable array%encoded%34#1
debug: Removing unused variable array%data%22#1
debug: Removing unused variable byte_len%0#0
debug: Removing unused variable len_%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable len_16_bit%0#0
debug: Removing unused variable prefix#2
debug: Removing unused variable expr_value_trimmed%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array%sub_item%0#1, array%encoded%0#1, array%data%0#1
debug: selected array%sub_item%0#1 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Redundant Slot Op Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/immutable.py:356:9 debug: eliminating local static slot assigned to mutable#0
debug: Removing unused variable mutable#0
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_fixed_size, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_byte_length_head, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
array/immutable.py:401 debug: auto reserving slots in test_cases.array.immutable.times, []
array/immutable.py:409 debug: auto reserving slots in test_cases.array.immutable.add_x, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy RootOperandGrouping
debug: Coalescing tmp%0#1 with [tmp%0#6, tmp%0#5, tmp%0#4, tmp%0#2]
debug: Coalescing tmp%3#0 with [tmp%3#9, tmp%3#7]
debug: Coalescing tmp%5#0 with [tmp%5#7, tmp%5#4]
debug: Coalescing arr#10 with [arr#41, arr#42, arr#52, arr#48, arr#49, arr#44, arr#45, arr#46, arr#18, arr#17, arr#73, arr#11, arr#12]
debug: Coalescing tmp%8#3 with [tmp%8#7]
debug: Coalescing tmp%9#1 with [tmp%9#6, tmp%9#5, tmp%9#4, tmp%9#3, tmp%9#2]
debug: Coalescing array_head_and_tail%1#0 with [array_head_and_tail%1#2, array_head_and_tail%1#1]
debug: Coalescing item_offset%1#0 with [item_offset%1#2, item_offset%1#1]
debug: Coalescing tmp%12#0 with [tmp%12#6]
debug: Coalescing tmp%13#0 with [tmp%13#6, tmp%13#5, tmp%13#4, tmp%13#2, tmp%13#1]
debug: Coalescing concatenated%1#0 with [concatenated%1#6, concatenated%1#5, concatenated%1#4, concatenated%1#3, concatenated%1#2, concatenated%1#1]
debug: Coalescing byte_len%1#0 with [byte_len%1#6, byte_len%1#5, byte_len%1#4, byte_len%1#3, byte_len%1#2, byte_len%1#1]
debug: Coalescing len_%1#0 with [len_%1#6, len_%1#5, len_%1#4, len_%1#3, len_%1#2, len_%1#1]
debug: Coalescing as_bytes%1#0 with [as_bytes%1#9, as_bytes%1#5, as_bytes%1#4, as_bytes%1#3, as_bytes%1#1]
debug: Coalescing len_16_bit%1#0 with [len_16_bit%1#6, len_16_bit%1#5, len_16_bit%1#4, len_16_bit%1#3, len_16_bit%1#2, len_16_bit%1#1]
debug: Coalescing tmp%14#0 with [tmp%14#6, tmp%14#4]
debug: Coalescing tmp%15#1 with [tmp%15#5, tmp%15#3, tmp%15#2]
debug: Coalescing array_head_and_tail%2#0 with [array_head_and_tail%2#5, array_head_and_tail%2#4, array_head_and_tail%2#3, array_head_and_tail%2#2, array_head_and_tail%2#1]
debug: Coalescing item_offset%2#0 with [item_offset%2#4, item_offset%2#2, item_offset%2#1]
debug: Coalescing tmp%18#0 with [tmp%18#5]
debug: Coalescing tmp%19#1 with [tmp%19#4]
debug: Coalescing tmp%20#0 with [tmp%20#4, tmp%20#3, tmp%20#2]
debug: Coalescing tmp%21#0 with [tmp%21#4, tmp%21#3, tmp%21#2, tmp%21#1]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#14, continue_looping%0#13, continue_looping%0#12, continue_looping%0#11, continue_looping%0#10, continue_looping%0#9, continue_looping%0#7, continue_looping%0#8, continue_looping%0#6, continue_looping%0#5, continue_looping%0#4, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing popped%0#0 with [popped%0#3, popped%0#2, popped%0#1]
debug: Coalescing tmp%22#0 with [tmp%22#2]
debug: Coalescing tmp%23#1 with [tmp%23#2]
debug: Coalescing tmp%26#0 with [tmp%26#1]
debug: Coalescing tmp%28#0 with [tmp%28#1]
debug: Coalescing tmp%29#0 with [tmp%29#1]
debug: Coalescing tmp%32#0 with [tmp%32#1]
debug: Coalescing tmp%33#0 with [tmp%33#1]
debug: Coalescing concatenated%2#0 with [concatenated%2#1]
debug: Coalescing byte_len%2#0 with [byte_len%2#1]
debug: Coalescing len_%2#0 with [len_%2#1]
debug: Coalescing as_bytes%2#1 with [as_bytes%2#5, as_bytes%2#2]
debug: Coalescing len_16_bit%2#0 with [len_16_bit%2#1]
debug: Coalescing tmp%34#0 with [tmp%34#1]
debug: Coalescing tmp%35#1 with [tmp%35#2]
debug: Coalescing tmp%37#1 with [tmp%37#2]
debug: Coalescing tmp%38#0 with [tmp%38#2]
debug: Coalescing val_as_bytes%0#0 with [val_as_bytes%0#4, val_as_bytes%0#3, val_as_bytes%0#2]
debug: Coalescing test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 with [test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#1, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#2, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#3, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#4, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#5, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#6, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#7, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#8, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#9, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#10, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#11, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#12, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#13, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#14, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#15, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#16, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#17, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#18, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#19, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#20, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#21, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#22]
debug: Coalescing tmp%0#0 with [tmp%0#14]
debug: Coalescing tmp%7#0 with [tmp%7#4]
debug: Coalescing tmp%8#0 with [tmp%8#6, tmp%8#5, tmp%8#4, tmp%8#1]
debug: Coalescing arr#7 with [arr#36, arr#55, arr#37, arr#38, arr#76, arr#8, arr#9]
debug: Coalescing i#0 with [i#41, i#46, i#42, i#43, i#38, i#49, i#39, i#35, i#52, i#36, i#37, i#29, i#55, i#30, i#32, i#58, i#33, i#23, i#61, i#24, i#26, i#64, i#27, i#19, i#67, i#20, i#21, i#22, i#16, i#70, i#17, i#15, i#12, i#73, i#13, i#14, i#9, i#76, i#10, i#11, i#6, i#79, i#7, i#8, i#3, i#82, i#4, i#5, i#85, i#1, i#2]
debug: Coalescing i#18 with [i#40, i#31, i#34, i#25, i#28]
debug: Coalescing tmp%2#1 with [tmp%2#6, tmp%2#5, tmp%2#2]
debug: Coalescing tmp%3#1 with [tmp%3#8, tmp%3#6, tmp%3#2]
debug: Coalescing encoded_bool%0#1 with [encoded_bool%0#3, encoded_bool%0#2]
debug: Coalescing tmp%5#2 with [tmp%5#6, tmp%5#5, tmp%5#3]
debug: Coalescing array_head_and_tail%0#0 with [array_head_and_tail%0#7, array_head_and_tail%0#6, array_head_and_tail%0#4, array_head_and_tail%0#3, array_head_and_tail%0#1, array_head_and_tail%0#2]
debug: Coalescing is_true%0#0 with [is_true%0#2, is_true%0#1]
debug: Coalescing encoded_bool%1#1 with [encoded_bool%1#3, encoded_bool%1#2]
debug: Coalescing tmp%7#2 with [tmp%7#6, tmp%7#5, tmp%7#3]
debug: Coalescing is_true%1#0 with [is_true%1#2, is_true%1#1]
debug: Coalescing encoded_bool%2#1 with [encoded_bool%2#2]
debug: Coalescing tmp%11#1 with [tmp%11#4, tmp%11#3, tmp%11#2]
debug: Coalescing tmp%12#1 with [tmp%12#5, tmp%12#4, tmp%12#3, tmp%12#2]
debug: Coalescing is_true%2#0 with [is_true%2#1]
debug: Coalescing tmp%14#1 with [tmp%14#5, tmp%14#3, tmp%14#2]
debug: Coalescing array_head_and_tail%3#0 with [array_head_and_tail%3#1]
debug: Coalescing tmp%16#1 with [tmp%16#3, tmp%16#2]
debug: Coalescing tmp%17#0 with [tmp%17#3, tmp%17#2, tmp%17#1]
debug: Coalescing tmp%0#3 with [tmp%0#13]
debug: Coalescing result#4 with [result#5, result#6]
debug: Coalescing tmp%4#2 with [tmp%4#7, tmp%4#5, tmp%4#4, tmp%4#3]
debug: Coalescing arr#32 with [arr#58, arr#33, arr#34, arr#35]
debug: Coalescing expr_value_trimmed%0#5 with [expr_value_trimmed%0#8, expr_value_trimmed%0#7, expr_value_trimmed%0#6]
debug: Coalescing concatenated%0#5 with [concatenated%0#8, concatenated%0#7, concatenated%0#6]
debug: Coalescing byte_len%0#2 with [byte_len%0#8, byte_len%0#7, byte_len%0#6, byte_len%0#5]
debug: Coalescing len_%0#2 with [len_%0#8, len_%0#7, len_%0#6, len_%0#5]
debug: Coalescing as_bytes%0#2 with [as_bytes%0#12, as_bytes%0#11, as_bytes%0#10, as_bytes%0#9, as_bytes%0#7, as_bytes%0#6]
debug: Coalescing len_16_bit%0#2 with [len_16_bit%0#8, len_16_bit%0#7, len_16_bit%0#6, len_16_bit%0#5]
debug: Coalescing arc4_item%0#0 with [arc4_item%0#3, arc4_item%0#2, arc4_item%0#1]
debug: Coalescing item0%0%0#0 with [item0%0%0#2, item0%0%0#1]
debug: Coalescing tmp%6#2 with [tmp%6#3]
debug: Coalescing tmp%10#1 with [tmp%10#3, tmp%10#2]
debug: Coalescing arc4_item%2#0 with [arc4_item%2#2, arc4_item%2#1]
debug: Coalescing item0%2%0#0 with [item0%2%0#2, item0%2%0#1]
debug: Coalescing tmp%18#1 with [tmp%18#3, tmp%18#2]
debug: Coalescing item_offset%3#0 with [item_offset%3#2, item_offset%3#1]
debug: Coalescing arc4_item%3#0 with [arc4_item%3#2, arc4_item%3#1]
debug: Coalescing item0%3%0#0 with [item0%3%0#2, item0%3%0#1]
debug: Coalescing arr#0 with [arr#29, arr#61, arr#30, arr#31, arr#4, arr#79, arr#5, arr#6]
debug: Coalescing arr#1 with [arr#24, arr#64, arr#25, arr#26, arr#28, arr#19, arr#67, arr#20, arr#21, arr#23, arr#82, arr#2, arr#3]
debug: Coalescing tmp%3#4 with [tmp%3#5]
debug: Coalescing length%0#1 with [length%0#2]
debug: Coalescing length_uint16%0#1 with [length_uint16%0#2]
debug: Coalescing encoded_value%0#1 with [encoded_value%0#2]
debug: Coalescing encoded_tuple_buffer%2#0 with [encoded_tuple_buffer%2#4, encoded_tuple_buffer%2#3, encoded_tuple_buffer%2#2]
debug: Coalescing encoded_tuple_buffer%3#0 with [encoded_tuple_buffer%3#3, encoded_tuple_buffer%3#2]
debug: Coalescing result%1#1 with [result%1#3, result%1#2]
debug: Coalescing l_count%0#0 with [l_count%0#4, l_count%0#3, l_count%0#2]
debug: Coalescing l_head_and_tail%0#0 with [l_head_and_tail%0#4, l_head_and_tail%0#3, l_head_and_tail%0#2]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#3, continue_looping%1#2, continue_looping%1#1]
debug: Coalescing item_offset_offset%0#0 with [item_offset_offset%0#3, item_offset_offset%0#2, item_offset_offset%0#1]
debug: Coalescing item_offset%0#0 with [item_offset%0#4, item_offset%0#3, item_offset%0#1, item_offset%0#2]
debug: Coalescing has_next%0#0 with [has_next%0#2, has_next%0#1]
debug: Coalescing end_of_array%0#0 with [end_of_array%0#2, end_of_array%0#1]
debug: Coalescing next_item_offset_offset%0#0 with [next_item_offset_offset%0#2, next_item_offset_offset%0#1]
debug: Coalescing next_item_offset%0#0 with [next_item_offset%0#2, next_item_offset%0#1]
debug: Coalescing end_offset%0#0 with [end_offset%0#2, end_offset%0#1]
debug: Coalescing item_start_offset%0#0 with [item_start_offset%0#3, item_start_offset%0#2, item_start_offset%0#1]
debug: Coalescing item_end_offset%0#0 with [item_end_offset%0#3, item_end_offset%0#2, item_end_offset%0#1]
debug: Coalescing item1%0#1 with [item1%0#2]
debug: Coalescing item1%1%0#0 with [item1%1%0#1]
debug: Coalescing has_next%2#0 with [has_next%2#1]
debug: Coalescing end_of_array%2#0 with [end_of_array%2#1]
debug: Coalescing next_item_offset%2#0 with [next_item_offset%2#1]
debug: Coalescing end_offset%2#0 with [end_offset%2#1]
debug: Coalescing item_start_offset%2#0 with [item_start_offset%2#1]
debug: Coalescing item_end_offset%2#0 with [item_end_offset%2#1]
debug: Coalescing item1%2#0 with [item1%2#1]
debug: Coalescing item1%2%0#0 with [item1%2%0#1]
debug: Coalescing item_offset_offset%3#0 with [item_offset_offset%3#1]
debug: Coalescing next_index%3#0 with [next_index%3#1]
debug: Coalescing has_next%3#0 with [has_next%3#1]
debug: Coalescing next_item_offset_offset%3#0 with [next_item_offset_offset%3#1]
debug: Coalescing next_item_offset%3#0 with [next_item_offset%3#1]
debug: Coalescing end_offset%3#0 with [end_offset%3#1]
debug: Coalescing item_start_offset%3#0 with [item_start_offset%3#1]
debug: Coalescing item_end_offset%3#0 with [item_end_offset%3#1]
debug: Coalescing item1%3#0 with [item1%3#1]
debug: Coalescing item1%3%0#0 with [item1%3%0#1]
debug: Coalescing tmp%25#0 with [tmp%25#1]
debug: Coalescing arr#13 with [arr#70, arr#15, arr#16]
debug: Coalescing extra_arr#0 with [extra_arr#5, extra_arr#1, extra_arr#2]
debug: Coalescing j#0 with [j#5, j#1, j#2]
debug: Coalescing totals#0 with [totals#5, totals#1, totals#2]
debug: Coalescing array_length%0#0 with [array_length%0#1]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#3, item_index_internal%0#11, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#17, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing item_index_internal%0#6 with [item_index_internal%0#14, item_index_internal%0#7, item_index_internal%0#8]
debug: Coalescing continue_looping%2#0 with [continue_looping%2#1]
debug: Coalescing expr_value_trimmed%1#3 with [expr_value_trimmed%1#6, expr_value_trimmed%1#5, expr_value_trimmed%1#4]
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing tmp%43#0 with [tmp%43#1]
debug: Coalescing tmp%44#0 with [tmp%44#1]
debug: Coalescing arr2#1 with [arr2#6, arr2#2, arr2#3]
debug: Coalescing arr7#0 with [arr7#5, arr7#1, arr7#2]
debug: Coalescing arr8#0 with [arr8#5, arr8#1, arr8#2]
debug: Coalescing arr9#0 with [arr9#5, arr9#1, arr9#2]
debug: Coalescing as_bytes%3#0 with [as_bytes%3#1]
debug: Coalescing sum4#0 with [sum4#6, sum4#1, sum4#2, sum4#3]
debug: Coalescing sum3#0 with [sum3#12, sum3#1, sum3#2, sum3#3, sum3#4, sum3#5, sum3#9]
debug: Coalescing sum3#15 with [sum3#18]
debug: Coalescing sum2#0 with [sum2#7, sum2#1, sum2#2, sum2#4]
debug: Coalescing sum1#0 with [sum1#5, sum1#1, sum1#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing val_as_bytes%1#0 with [val_as_bytes%1#1]
debug: Coalescing append#0 with [append#4, append#3, append#2, append#1]
debug: Coalescing tmp%1#1 with [tmp%1#3, tmp%1#2]
debug: Coalescing concat_result%0#0 with [concat_result%0#1]
debug: Coalescing result#2 with [result#3]
debug: Coalescing prefix#0 with [prefix#1]
debug: Coalescing result#0 with [result#1]
debug: Coalescing resulted in 1232 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: loc: {_i#0=_i#0, arr#10=arr#10}
debug: pred: {_i#0=_i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: _i#0, arr#10
debug: * to_do arr#10
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#10=arr#10}
debug: pred: {_i#0=_i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: _i#0, arr#10
debug: * to_do arr#10
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#10=arr#10}
debug: pred: {_i#0=_i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: _i#0, arr#10
debug: * to_do arr#10
debug: * to_do _i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#32=arr#32}
debug: pred: {i#0=i#0, arr#32=arr#32}
debug: ready: 
debug: to_do: i#0, arr#32
debug: * to_do arr#32
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#32=arr#32}
debug: pred: {i#0=i#0, arr#32=arr#32}
debug: ready: 
debug: to_do: i#0, arr#32
debug: * to_do arr#32
debug: * to_do i#0
debug: loc: {i#0=None, arr#32=arr#32, i#18=i#18}
debug: pred: {i#0=i#18, arr#32=arr#32}
debug: ready: i#0
debug: to_do: i#0, arr#32
debug: * avail i#0
debug: * avail i#18
debug: * to_do arr#32
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=None, arr#1=arr#1, i#18=i#18}
debug: pred: {i#0=i#18, arr#1=arr#1}
debug: ready: i#0
debug: to_do: i#0, arr#1
debug: * avail i#0
debug: * avail i#18
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=None, arr#1=arr#1, i#18=i#18}
debug: pred: {i#0=i#18, arr#1=arr#1}
debug: ready: i#0
debug: to_do: i#0, arr#1
debug: * avail i#0
debug: * avail i#18
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#13=arr#13}
debug: pred: {i#0=i#0, arr#13=arr#13}
debug: ready: 
debug: to_do: i#0, arr#13
debug: * to_do arr#13
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#13=arr#13}
debug: pred: {i#0=i#0, arr#13=arr#13}
debug: ready: 
debug: to_do: i#0, arr#13
debug: * to_do arr#13
debug: * to_do i#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {i#0=i#0, arr#13=arr#13}
debug: pred: {i#0=i#0, arr#13=arr#13}
debug: ready: 
debug: to_do: i#0, arr#13
debug: * to_do arr#13
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: pred: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#6, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#6
debug: loc: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: pred: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#6, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#6
debug: loc: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: pred: {item_index_internal%0#6=item_index_internal%0#6, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#6, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#6
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {i#0=i#0, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#1, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#1, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#1
debug: * to_do i#0
debug: loc: {i#0=None, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0, i#18=i#18}
debug: pred: {i#0=i#18, arr2#1=arr2#1, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: i#0
debug: to_do: i#0, arr2#1, arr7#0, arr8#0, arr9#0
debug: * avail i#0
debug: * avail i#18
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#1
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {idx#0=None, sum4#0=sum4#0, item_index_internal%3#0=item_index_internal%3#0}
debug: pred: {idx#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: ready: idx#0
debug: to_do: idx#0, sum4#0
debug: * avail idx#0
debug: * avail item_index_internal%3#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, sum4#0=sum4#0}
debug: pred: {idx#0=idx#0, sum4#0=sum4#0}
debug: ready: 
debug: to_do: idx#0, sum4#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {idx#0=None, sum4#0=sum4#0, next_index%0#0=next_index%0#0}
debug: pred: {idx#0=next_index%0#0, sum4#0=sum4#0}
debug: ready: idx#0
debug: to_do: idx#0, sum4#0
debug: * avail idx#0
debug: * avail next_index%0#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {i#0=i#0, arr#10=arr#10}
debug: pred: {i#0=i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: i#0, arr#10
debug: * to_do arr#10
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#10=arr#10}
debug: pred: {i#0=i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: i#0, arr#10
debug: * to_do arr#10
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#10=arr#10}
debug: pred: {i#0=i#0, arr#10=arr#10}
debug: ready: 
debug: to_do: i#0, arr#10
debug: * to_do arr#10
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#7=arr#7}
debug: pred: {i#0=i#0, arr#7=arr#7}
debug: ready: 
debug: to_do: i#0, arr#7
debug: * to_do arr#7
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#1=arr#1}
debug: pred: {i#0=i#0, arr#1=arr#1}
debug: ready: 
debug: to_do: i#0, arr#1
debug: * to_do arr#1
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_fixed_size using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#5, new_head#1, new_head#2]
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_byte_length_head using strategy RootOperandGrouping
debug: Coalescing tmp%5#0 with [tmp%5#1]
debug: Coalescing tmp%7#0 with [tmp%7#1]
debug: Coalescing array_head_and_tail#0 with [array_head_and_tail#5, array_head_and_tail#1, array_head_and_tail#2]
debug: Coalescing tail_offset#1 with [tail_offset#5, tail_offset#2]
debug: Coalescing head_offset#0 with [head_offset#6, head_offset#1, head_offset#3]
debug: Coalescing resulted in 27 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=None, array_head_and_tail#0=array_head_and_tail#0, tail_offset#0=tail_offset#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: tail_offset#1
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * avail tail_offset#1
debug: * avail tail_offset#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy RootOperandGrouping
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 38 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.immutable.times
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.times using strategy RootOperandGrouping
debug: Coalescing result#0 with [result#5, result#1, result#2]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.times
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.immutable.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.add_x using strategy RootOperandGrouping
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 17 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.add_x
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/ImmutableArrayContract.ir/ImmutableArrayContract.approval.0.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy RootOperandGrouping
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/ImmutableArrayContract.ir/ImmutableArrayContract.clear.0.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[24]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_uint64_array_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_uint64_array_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_uint64_array_route@3.ops[17]: 'l-store-copy arr#10 0'
debug: Replaced main_test_uint64_array_route@3.ops[19]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_uint64_array_route@3.ops[22]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_test_uint64_array_route@3.ops[24]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_test_uint64_array_route@3.ops[27]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_uint64_array_route@3.ops[29]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_uint64_array_route@3.ops[45]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[47]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_uint64_array_route@3.ops[50]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[52]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_uint64_array_route@3.ops[60]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[62]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[64]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[66]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[69]: 'l-store-copy len_%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[71]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[73]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[75]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[77]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[79]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[82]: 'l-store-copy arr#10 0'
debug: Replaced main_test_uint64_array_route@3.ops[84]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_uint64_array_route@3.ops[87]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[89]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_uint64_array_route@3.ops[92]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_test_uint64_array_route@3.ops[94]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_test_uint64_array_route@3.ops[110]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[112]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_uint64_array_route@3.ops[115]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_uint64_array_route@3.ops[117]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_uint64_array_route@3.ops[122]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[124]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_uint64_array_route@3.ops[127]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[129]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_uint64_array_route@3.ops[41]: 'l-store-copy item_offset%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[44]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[57]: 'l-store-copy array%sub_item%1#1 0'
debug: Replaced main_test_uint64_array_route@3.ops[60]: 'v-load array%sub_item%1#1' with 'l-load array%sub_item%1#1'
debug: Inserted main_test_uint64_array_route@3.ops[108]: 'l-store-copy item_offset%2#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[111]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[34]: 'l-store-copy tmp%11#5 0'
debug: Replaced main_test_uint64_array_route@3.ops[39]: 'v-load tmp%11#5' with 'l-load tmp%11#5'
debug: Inserted main_test_uint64_array_route@3.ops[102]: 'l-store-copy tmp%17#4 0'
debug: Replaced main_test_uint64_array_route@3.ops[107]: 'v-load tmp%17#4' with 'l-load tmp%17#4'
debug: Inserted main_test_uint64_array_route@3.ops[38]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[45]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[107]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[114]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[25]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_test_uint64_array_route@3.ops[32]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_test_uint64_array_route@3.ops[95]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[102]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_uint64_array_route@3.ops[47]: 'l-store-copy array_head_and_tail%1#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[63]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[20]: 'l-store-copy arr#10 0'
debug: Replaced main_test_uint64_array_route@3.ops[38]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_uint64_array_route@3.ops[70]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[88]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[93]: 'l-store-copy arr#10 0'
debug: Replaced main_test_uint64_array_route@3.ops[111]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_uint64_array_route@3.ops[112]: 'l-store-copy arr#10 1'
debug: Replaced main_test_uint64_array_route@3.ops[133]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_for_header@154.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@154.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_after_for@156.ops[3]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_after_for@156.ops[5]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_after_for@156.ops[8]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@156.ops[10]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@156.ops[26]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_after_for@156.ops[28]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_after_for@156.ops[31]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_after_for@156.ops[33]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_after_for@156.ops[38]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[40]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[43]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_after_for@156.ops[45]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_after_for@156.ops[48]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_after_for@156.ops[50]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_after_for@156.ops[66]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_after_for@156.ops[68]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_after_for@156.ops[71]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_after_for@156.ops[73]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_after_for@156.ops[81]: 'l-store-copy concatenated%2#0 0'
debug: Replaced main_after_for@156.ops[83]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted main_after_for@156.ops[85]: 'l-store-copy byte_len%2#0 0'
debug: Replaced main_after_for@156.ops[87]: 'v-load byte_len%2#0' with 'l-load byte_len%2#0'
debug: Inserted main_after_for@156.ops[90]: 'l-store-copy len_%2#0 0'
debug: Replaced main_after_for@156.ops[92]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted main_after_for@156.ops[94]: 'l-store-copy as_bytes%2#1 0'
debug: Replaced main_after_for@156.ops[96]: 'v-load as_bytes%2#1' with 'l-load as_bytes%2#1'
debug: Inserted main_after_for@156.ops[98]: 'l-store-copy len_16_bit%2#0 0'
debug: Replaced main_after_for@156.ops[100]: 'v-load len_16_bit%2#0' with 'l-load len_16_bit%2#0'
debug: Inserted main_after_for@156.ops[103]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[105]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[108]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_after_for@156.ops[110]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_after_for@156.ops[113]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_after_for@156.ops[115]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_after_for@156.ops[131]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_after_for@156.ops[133]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_after_for@156.ops[136]: 'l-store-copy tmp%39#2 0'
debug: Replaced main_after_for@156.ops[138]: 'v-load tmp%39#2' with 'l-load tmp%39#2'
debug: Inserted main_after_for@156.ops[146]: 'l-store-copy index_is_in_bounds%0#1 0'
debug: Replaced main_after_for@156.ops[148]: 'v-load index_is_in_bounds%0#1' with 'l-load index_is_in_bounds%0#1'
debug: Inserted main_after_for@156.ops[153]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[155]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[158]: 'l-store-copy tmp%40#2 0'
debug: Replaced main_after_for@156.ops[160]: 'v-load tmp%40#2' with 'l-load tmp%40#2'
debug: Inserted main_after_for@156.ops[163]: 'l-store-copy tmp%41#2 0'
debug: Replaced main_after_for@156.ops[165]: 'v-load tmp%41#2' with 'l-load tmp%41#2'
debug: Inserted main_after_for@156.ops[170]: 'l-store-copy tmp%42#2 0'
debug: Replaced main_after_for@156.ops[172]: 'v-load tmp%42#2' with 'l-load tmp%42#2'
debug: Inserted main_after_for@156.ops[175]: 'l-store-copy tmp%43#2 0'
debug: Replaced main_after_for@156.ops[177]: 'v-load tmp%43#2' with 'l-load tmp%43#2'
debug: Inserted main_after_for@156.ops[183]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@156.ops[185]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@156.ops[22]: 'l-store-copy item_offset%4#0 0'
debug: Replaced main_after_for@156.ops[25]: 'v-load item_offset%4#0' with 'l-load item_offset%4#0'
debug: Inserted main_after_for@156.ops[63]: 'l-store-copy item_offset%5#0 0'
debug: Replaced main_after_for@156.ops[66]: 'v-load item_offset%5#0' with 'l-load item_offset%5#0'
debug: Inserted main_after_for@156.ops[79]: 'l-store-copy array%sub_item%2#1 0'
debug: Replaced main_after_for@156.ops[82]: 'v-load array%sub_item%2#1' with 'l-load array%sub_item%2#1'
debug: Inserted main_after_for@156.ops[130]: 'l-store-copy item_offset%6#0 0'
debug: Replaced main_after_for@156.ops[133]: 'v-load item_offset%6#0' with 'l-load item_offset%6#0'
debug: Inserted main_after_for@156.ops[15]: 'l-store-copy tmp%25#2 0'
debug: Replaced main_after_for@156.ops[20]: 'v-load tmp%25#2' with 'l-load tmp%25#2'
debug: Inserted main_after_for@156.ops[57]: 'l-store-copy tmp%31#1 0'
debug: Replaced main_after_for@156.ops[62]: 'v-load tmp%31#1' with 'l-load tmp%31#1'
debug: Inserted main_after_for@156.ops[125]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_after_for@156.ops[130]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_after_for@156.ops[19]: 'l-store-copy array_head_and_tail%4#0 1'
debug: Replaced main_after_for@156.ops[26]: 'v-load array_head_and_tail%4#0' with 'l-load array_head_and_tail%4#0'
debug: Inserted main_after_for@156.ops[62]: 'l-store-copy array_head_and_tail%5#0 1'
debug: Replaced main_after_for@156.ops[69]: 'v-load array_head_and_tail%5#0' with 'l-load array_head_and_tail%5#0'
debug: Inserted main_after_for@156.ops[131]: 'l-store-copy array_head_and_tail%6#0 1'
debug: Replaced main_after_for@156.ops[138]: 'v-load array_head_and_tail%6#0' with 'l-load array_head_and_tail%6#0'
debug: Inserted main_after_for@156.ops[6]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_after_for@156.ops[13]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_after_for@156.ops[50]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_after_for@156.ops[57]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_after_for@156.ops[120]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_after_for@156.ops[127]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_after_for@156.ops[155]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_after_for@156.ops[165]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_after_for@156.ops[170]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[182]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[183]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[196]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[72]: 'l-store-copy array_head_and_tail%5#0 1'
debug: Replaced main_after_for@156.ops[88]: 'v-load array_head_and_tail%5#0' with 'l-load array_head_and_tail%5#0'
debug: Inserted main_after_for@156.ops[1]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[19]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[46]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[64]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[96]: 'l-store-copy concatenated%2#0 0'
debug: Replaced main_after_for@156.ops[114]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted main_after_for@156.ops[119]: 'l-store-copy arr#10 0'
debug: Replaced main_after_for@156.ops[137]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[20]: 'l-store-copy arr#10 1'
debug: Replaced main_after_for@156.ops[41]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_after_for@156.ops[134]: 'l-store-copy tmp%34#0 1'
debug: Replaced main_after_for@156.ops[165]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_after_for@156.ops[140]: 'l-store-copy arr#10 2'
debug: Replaced main_after_for@156.ops[172]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_bool_array_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_bool_array_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_bool_array_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_bool_array_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_bool_array_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_bool_array_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_bool_array_route@4.ops[15]: 'l-store-copy reinterpret_bytes[8]%0#0 0'
debug: Replaced main_test_bool_array_route@4.ops[17]: 'v-load reinterpret_bytes[8]%0#0' with 'l-load reinterpret_bytes[8]%0#0'
debug: Inserted main_for_header@139.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@139.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@140.ops[1]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@140.ops[4]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@140.ops[11]: 'l-store-copy encoded_bool%0#1 0'
debug: Replaced main_for_body@140.ops[14]: 'v-load encoded_bool%0#1' with 'l-load encoded_bool%0#1'
debug: Inserted main_for_body@140.ops[6]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_for_body@140.ops[10]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@140.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@140.ops[21]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@141.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced main_after_for@141.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted main_after_for@141.ops[8]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_after_for@141.ops[10]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_after_for@141.ops[7]: 'l-store-copy length#0 1'
debug: Replaced main_after_for@141.ops[13]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_if_body@142.ops[13]: 'l-store-copy encoded_bool%1#1 0'
debug: Replaced main_if_body@142.ops[15]: 'v-load encoded_bool%1#1' with 'l-load encoded_bool%1#1'
debug: Inserted main_if_body@142.ops[18]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_if_body@142.ops[20]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_if_body@142.ops[22]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_if_body@142.ops[24]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_if_body@142.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_if_body@142.ops[6]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_if_body@142.ops[9]: 'l-store-copy is_true%0#0 0'
debug: Replaced main_if_body@142.ops[13]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted main_after_if_else@143.ops[3]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_if_else@143.ops[5]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_if_body@144.ops[6]: 'l-store-copy index_is_in_bounds%1#0 0'
debug: Replaced main_if_body@144.ops[8]: 'v-load index_is_in_bounds%1#0' with 'l-load index_is_in_bounds%1#0'
debug: Inserted main_if_body@144.ops[18]: 'l-store-copy encoded_bool%2#1 0'
debug: Replaced main_if_body@144.ops[20]: 'v-load encoded_bool%2#1' with 'l-load encoded_bool%2#1'
debug: Inserted main_if_body@144.ops[23]: 'l-store-copy tmp%10#4 0'
debug: Replaced main_if_body@144.ops[25]: 'v-load tmp%10#4' with 'l-load tmp%10#4'
debug: Inserted main_if_body@144.ops[27]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_if_body@144.ops[29]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_if_body@144.ops[13]: 'l-store-copy is_true%1#0 0'
debug: Replaced main_if_body@144.ops[17]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted main_if_body@144.ops[2]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced main_if_body@144.ops[11]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_after_if_else@145.ops[3]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_after_if_else@145.ops[5]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_if_body@146.ops[6]: 'l-store-copy index_is_in_bounds%2#0 0'
debug: Replaced main_if_body@146.ops[8]: 'v-load index_is_in_bounds%2#0' with 'l-load index_is_in_bounds%2#0'
debug: Inserted main_if_body@146.ops[18]: 'l-store-copy encoded_bool%3#1 0'
debug: Replaced main_if_body@146.ops[20]: 'v-load encoded_bool%3#1' with 'l-load encoded_bool%3#1'
debug: Inserted main_if_body@146.ops[23]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_if_body@146.ops[25]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_if_body@146.ops[13]: 'l-store-copy is_true%2#0 0'
debug: Replaced main_if_body@146.ops[17]: 'v-load is_true%2#0' with 'l-load is_true%2#0'
debug: Inserted main_if_body@146.ops[2]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_if_body@146.ops[11]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_if_else@147.ops[3]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_if_else@147.ops[5]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_if_body@148.ops[10]: 'l-store-copy index_is_in_bounds%3#0 0'
debug: Replaced main_if_body@148.ops[12]: 'v-load index_is_in_bounds%3#0' with 'l-load index_is_in_bounds%3#0'
debug: Inserted main_if_body@148.ops[22]: 'l-store-copy encoded_bool%4#1 0'
debug: Replaced main_if_body@148.ops[24]: 'v-load encoded_bool%4#1' with 'l-load encoded_bool%4#1'
debug: Inserted main_if_body@148.ops[27]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_if_body@148.ops[29]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_if_body@148.ops[31]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_if_body@148.ops[33]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_if_body@148.ops[17]: 'l-store-copy is_true%3#0 0'
debug: Replaced main_if_body@148.ops[21]: 'v-load is_true%3#0' with 'l-load is_true%3#0'
debug: Inserted main_if_body@148.ops[3]: 'l-store-copy tmp%15#4 0'
debug: Replaced main_if_body@148.ops[8]: 'v-load tmp%15#4' with 'l-load tmp%15#4'
debug: Inserted main_if_body@148.ops[7]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced main_if_body@148.ops[16]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted main_if_body@148.ops[10]: 'l-store-copy tmp%15#4 1'
debug: Replaced main_if_body@148.ops[18]: 'v-load tmp%15#4' with 'l-load tmp%15#4'
debug: Inserted main_if_body@150.ops[3]: 'l-store-copy length_minus_1#0 0'
debug: Replaced main_if_body@150.ops[5]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@150.ops[7]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_if_body@150.ops[9]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_if_body@150.ops[28]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_if_body@150.ops[30]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_if_body@150.ops[42]: 'l-store-copy result#4 0'
debug: Replaced main_if_body@150.ops[44]: 'v-load result#4' with 'l-load result#4'
debug: Inserted main_if_body@150.ops[55]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_if_body@150.ops[57]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_if_body@150.ops[11]: 'l-store-copy tmp%1#10 0'
debug: Replaced main_if_body@150.ops[14]: 'v-load tmp%1#10' with 'l-load tmp%1#10'
debug: Inserted main_if_body@150.ops[20]: 'l-store-copy popped_location#0 0'
debug: Replaced main_if_body@150.ops[23]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted main_if_body@150.ops[35]: 'l-store-copy tmp%4#2 0'
debug: Replaced main_if_body@150.ops[38]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_if_body@150.ops[54]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_if_body@150.ops[57]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_if_body@150.ops[40]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_if_body@150.ops[44]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_if_body@150.ops[16]: 'l-store-copy result#4 0'
debug: Replaced main_if_body@150.ops[23]: 'v-load result#4' with 'l-load result#4'
debug: Inserted main_if_body@150.ops[52]: 'l-store-copy tmp%19#3 0'
debug: Replaced main_if_body@150.ops[59]: 'v-load tmp%19#3' with 'l-load tmp%19#3'
debug: Inserted main_if_body@150.ops[19]: 'l-store-copy length_minus_1#0 1'
debug: Replaced main_if_body@150.ops[29]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@150.ops[6]: 'l-store-copy length_minus_1#0 0'
debug: Replaced main_if_body@150.ops[19]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@150.ops[29]: 'l-store-copy result#4 1'
debug: Replaced main_if_body@150.ops[46]: 'v-load result#4' with 'l-load result#4'
debug: Inserted main_after_if_else@151.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@151.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_fixed_size_tuple_array_route@5.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@5.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_for_header@134.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@134.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@135.ops[24]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@135.ops[26]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@135.ops[28]: 'l-store-copy byte_len%0#2 0'
debug: Replaced main_for_body@135.ops[30]: 'v-load byte_len%0#2' with 'l-load byte_len%0#2'
debug: Inserted main_for_body@135.ops[33]: 'l-store-copy len_%0#2 0'
debug: Replaced main_for_body@135.ops[35]: 'v-load len_%0#2' with 'l-load len_%0#2'
debug: Inserted main_for_body@135.ops[37]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@135.ops[39]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@135.ops[41]: 'l-store-copy len_16_bit%0#2 0'
debug: Replaced main_for_body@135.ops[43]: 'v-load len_16_bit%0#2' with 'l-load len_16_bit%0#2'
debug: Inserted main_for_body@135.ops[16]: 'l-store-copy array%sub_item%4#1 0'
debug: Replaced main_for_body@135.ops[19]: 'v-load array%sub_item%4#1' with 'l-load array%sub_item%4#1'
debug: Inserted main_for_body@135.ops[21]: 'l-store-copy array%encoded%4#1 0'
debug: Replaced main_for_body@135.ops[24]: 'v-load array%encoded%4#1' with 'l-load array%encoded%4#1'
debug: Inserted main_for_body@135.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@135.ops[8]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@135.ops[11]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@135.ops[16]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@135.ops[15]: 'l-store-copy array%sub_item%3#1 1'
debug: Replaced main_for_body@135.ops[21]: 'v-load array%sub_item%3#1' with 'l-load array%sub_item%3#1'
debug: Inserted main_for_body@135.ops[7]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@135.ops[14]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@135.ops[33]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@135.ops[51]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@135.ops[2]: 'l-store-copy expr_value_trimmed%0#5 0'
debug: Replaced main_for_body@135.ops[28]: 'v-load expr_value_trimmed%0#5' with 'l-load expr_value_trimmed%0#5'
debug: Inserted main_for_body@135.ops[16]: 'l-store-copy i#18 2'
debug: Replaced main_for_body@135.ops[56]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_after_for@136.ops[3]: 'l-store-copy tmp%4#2 0'
debug: Replaced main_after_for@136.ops[5]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_after_for@136.ops[8]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_after_for@136.ops[10]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_after_for@136.ops[17]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_after_for@136.ops[19]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_after_for@136.ops[38]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@136.ops[40]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_for@136.ops[45]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_after_for@136.ops[47]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@136.ops[55]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced main_after_for@136.ops[57]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted main_after_for@136.ops[76]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_after_for@136.ops[78]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_after_for@136.ops[88]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_after_for@136.ops[90]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_after_for@136.ops[93]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@136.ops[95]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@136.ops[102]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@136.ops[104]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@136.ops[123]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_after_for@136.ops[125]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@136.ops[130]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_after_for@136.ops[132]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_after_for@136.ops[140]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@136.ops[142]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@136.ops[161]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@136.ops[163]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@136.ops[169]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@136.ops[171]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@136.ops[34]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_after_for@136.ops[37]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_after_for@136.ops[51]: 'l-store-copy item_offset%1#0 0'
debug: Replaced main_after_for@136.ops[54]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted main_after_for@136.ops[74]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_after_for@136.ops[77]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_after_for@136.ops[86]: 'l-store-copy arr#32 1'
debug: Replaced main_after_for@136.ops[89]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[123]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_after_for@136.ops[126]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@136.ops[140]: 'l-store-copy item_offset%3#0 0'
debug: Replaced main_after_for@136.ops[143]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted main_after_for@136.ops[163]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_after_for@136.ops[166]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_after_for@136.ops[13]: 'l-store-copy arr#32 0'
debug: Replaced main_after_for@136.ops[16]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[103]: 'l-store-copy arr#32 0'
debug: Replaced main_after_for@136.ops[106]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[21]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_after_for@136.ops[25]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_after_for@136.ops[62]: 'l-store-copy arc4_item%1#0 0'
debug: Replaced main_after_for@136.ops[66]: 'v-load arc4_item%1#0' with 'l-load arc4_item%1#0'
debug: Inserted main_after_for@136.ops[113]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@136.ops[117]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@136.ops[154]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@136.ops[158]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@136.ops[24]: 'l-store-copy item0%0%0#0 1'
debug: Replaced main_after_for@136.ops[30]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted main_after_for@136.ops[29]: 'l-store-copy item1%0%0#0 1'
debug: Replaced main_after_for@136.ops[35]: 'v-load item1%0%0#0' with 'l-load item1%0%0#0'
debug: Inserted main_after_for@136.ops[34]: 'l-store-copy tmp%6#2 1'
debug: Replaced main_after_for@136.ops[41]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_after_for@136.ops[68]: 'l-store-copy item0%1%0#0 1'
debug: Replaced main_after_for@136.ops[74]: 'v-load item0%1%0#0' with 'l-load item0%1%0#0'
debug: Inserted main_after_for@136.ops[73]: 'l-store-copy item1%1%0#2 1'
debug: Replaced main_after_for@136.ops[79]: 'v-load item1%1%0#2' with 'l-load item1%1%0#2'
debug: Inserted main_after_for@136.ops[78]: 'l-store-copy tmp%11#1 1'
debug: Replaced main_after_for@136.ops[85]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@136.ops[122]: 'l-store-copy item0%2%0#0 1'
debug: Replaced main_after_for@136.ops[128]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted main_after_for@136.ops[127]: 'l-store-copy item1%2%0#2 1'
debug: Replaced main_after_for@136.ops[133]: 'v-load item1%2%0#2' with 'l-load item1%2%0#2'
debug: Inserted main_after_for@136.ops[132]: 'l-store-copy tmp%16#1 1'
debug: Replaced main_after_for@136.ops[139]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_after_for@136.ops[166]: 'l-store-copy item0%3%0#0 1'
debug: Replaced main_after_for@136.ops[172]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted main_after_for@136.ops[171]: 'l-store-copy item1%3%0#2 1'
debug: Replaced main_after_for@136.ops[177]: 'v-load item1%3%0#2' with 'l-load item1%3%0#2'
debug: Inserted main_after_for@136.ops[176]: 'l-store-copy tmp%21#0 1'
debug: Replaced main_after_for@136.ops[183]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_after_for@136.ops[1]: 'l-store-copy arr#32 0'
debug: Replaced main_after_for@136.ops[13]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[100]: 'l-store-copy arr#32 0'
debug: Replaced main_after_for@136.ops[112]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[7]: 'l-store-copy tmp%4#2 1'
debug: Replaced main_after_for@136.ops[50]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_after_for@136.ops[17]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced main_after_for@136.ops[61]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_after_for@136.ops[108]: 'l-store-copy tmp%14#0 1'
debug: Replaced main_after_for@136.ops[151]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_after_for@136.ops[118]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced main_after_for@136.ops[162]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@136.ops[20]: 'l-store-copy arr#32 2'
debug: Replaced main_after_for@136.ops[96]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_after_for@136.ops[122]: 'l-store-copy arr#32 2'
debug: Replaced main_after_for@136.ops[199]: 'v-load arr#32' with 'l-load arr#32'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@6.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@6.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_for_header@129.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@129.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@130.ops[6]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@130.ops[8]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@130.ops[14]: 'l-store-copy tmp%4#2 0'
debug: Replaced main_for_body@130.ops[16]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_for_body@130.ops[19]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_for_body@130.ops[21]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_for_body@130.ops[35]: 'l-store-copy array%encoded%6#1 0'
debug: Replaced main_for_body@130.ops[37]: 'v-load array%encoded%6#1' with 'l-load array%encoded%6#1'
debug: Inserted main_for_body@130.ops[45]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@130.ops[47]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@130.ops[49]: 'l-store-copy byte_len%0#2 0'
debug: Replaced main_for_body@130.ops[51]: 'v-load byte_len%0#2' with 'l-load byte_len%0#2'
debug: Inserted main_for_body@130.ops[54]: 'l-store-copy len_%0#2 0'
debug: Replaced main_for_body@130.ops[56]: 'v-load len_%0#2' with 'l-load len_%0#2'
debug: Inserted main_for_body@130.ops[58]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@130.ops[60]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@130.ops[62]: 'l-store-copy len_16_bit%0#2 0'
debug: Replaced main_for_body@130.ops[64]: 'v-load len_16_bit%0#2' with 'l-load len_16_bit%0#2'
debug: Inserted main_for_body@130.ops[31]: 'l-store-copy array%encoded_bit%0#1 0'
debug: Replaced main_for_body@130.ops[34]: 'v-load array%encoded_bit%0#1' with 'l-load array%encoded_bit%0#1'
debug: Inserted main_for_body@130.ops[42]: 'l-store-copy array%sub_item%6#1 0'
debug: Replaced main_for_body@130.ops[45]: 'v-load array%sub_item%6#1' with 'l-load array%sub_item%6#1'
debug: Inserted main_for_body@130.ops[26]: 'l-store-copy array%sub_item%5#1 0'
debug: Replaced main_for_body@130.ops[34]: 'v-load array%sub_item%5#1' with 'l-load array%sub_item%5#1'
debug: Inserted main_for_body@130.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@130.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@130.ops[13]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@130.ops[26]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@130.ops[53]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@130.ops[71]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@130.ops[25]: 'l-store-copy tmp%6#2 1'
debug: Replaced main_for_body@130.ops[44]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_body@130.ops[11]: 'l-store-copy tmp%3#1 1'
debug: Replaced main_for_body@130.ops[34]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@130.ops[2]: 'l-store-copy expr_value_trimmed%0#5 0'
debug: Replaced main_for_body@130.ops[50]: 'v-load expr_value_trimmed%0#5' with 'l-load expr_value_trimmed%0#5'
debug: Inserted main_for_body@130.ops[30]: 'l-store-copy i#0 3'
debug: Replaced main_for_body@130.ops[78]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@131.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_after_for@131.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_after_for@131.ops[8]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@131.ops[10]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_for@131.ops[14]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_after_for@131.ops[16]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_after_for@131.ops[28]: 'l-store-copy encoded_bool%0#1 0'
debug: Replaced main_after_for@131.ops[30]: 'v-load encoded_bool%0#1' with 'l-load encoded_bool%0#1'
debug: Inserted main_after_for@131.ops[42]: 'l-store-copy encoded_bool%1#1 0'
debug: Replaced main_after_for@131.ops[44]: 'v-load encoded_bool%1#1' with 'l-load encoded_bool%1#1'
debug: Inserted main_after_for@131.ops[50]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_for@131.ops[52]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_after_for@131.ops[62]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@131.ops[64]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@131.ops[23]: 'l-store-copy is_true%0#0 0'
debug: Replaced main_after_for@131.ops[27]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted main_after_for@131.ops[38]: 'l-store-copy is_true%1#0 0'
debug: Replaced main_after_for@131.ops[42]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted main_after_for@131.ops[17]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_after_for@131.ops[21]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_after_for@131.ops[50]: 'l-store-copy baz#0 0'
debug: Replaced main_after_for@131.ops[60]: 'v-load baz#0' with 'l-load baz#0'
debug: Inserted main_after_for@131.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@131.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@131.ops[23]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_after_for@131.ops[38]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_after_for@131.ops[37]: 'l-store-copy bar#0 1'
debug: Replaced main_after_for@131.ops[61]: 'v-load bar#0' with 'l-load bar#0'
debug: Inserted main_after_for@131.ops[21]: 'l-store-copy foo#0 1'
debug: Replaced main_after_for@131.ops[56]: 'v-load foo#0' with 'l-load foo#0'
debug: Inserted main_after_for@131.ops[14]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@131.ops[68]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[5]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[7]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@7.ops[10]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@7.ops[12]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_for_header@121.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@121.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@122.ops[12]: 'l-store-copy length%0#1 0'
debug: Replaced main_for_body@122.ops[14]: 'v-load length%0#1' with 'l-load length%0#1'
debug: Inserted main_for_body@122.ops[16]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@122.ops[18]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@122.ops[20]: 'l-store-copy length_uint16%0#1 0'
debug: Replaced main_for_body@122.ops[22]: 'v-load length_uint16%0#1' with 'l-load length_uint16%0#1'
debug: Inserted main_for_body@122.ops[29]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_for_body@122.ops[31]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_for_body@122.ops[34]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_for_body@122.ops[37]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_for_body@122.ops[46]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced main_for_body@122.ops[49]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted main_for_body@122.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@122.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@122.ops[4]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@122.ops[9]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@122.ops[8]: 'l-store-copy tmp%3#4 1'
debug: Replaced main_for_body@122.ops[13]: 'v-load tmp%3#4' with 'l-load tmp%3#4'
debug: Inserted main_for_body@122.ops[44]: 'l-store-copy arr#1 0'
debug: Replaced main_for_body@122.ops[48]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_for_body@122.ops[47]: 'l-store-copy l_count%0#0 1'
debug: Replaced main_for_body@122.ops[53]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted main_for_body@122.ops[28]: 'l-store-copy encoded_value%0#1 0'
debug: Replaced main_for_body@122.ops[36]: 'v-load encoded_value%0#1' with 'l-load encoded_value%0#1'
debug: Inserted main_for_body@122.ops[14]: 'l-store-copy tmp%3#4 0'
debug: Replaced main_for_body@122.ops[27]: 'v-load tmp%3#4' with 'l-load tmp%3#4'
debug: Inserted main_for_body@122.ops[44]: 'l-store-copy result%1#1 0'
debug: Replaced main_for_body@122.ops[59]: 'v-load result%1#1' with 'l-load result%1#1'
debug: Inserted main_for_body@122.ops[12]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_for_body@122.ops[32]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_for_body@122.ops[11]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@122.ops[64]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_after_for@123.ops[3]: 'l-store-copy tmp%4#2 0'
debug: Replaced main_after_for@123.ops[5]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_after_for@123.ops[8]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_after_for@123.ops[10]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_for_header@124.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@124.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@125.ops[39]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@125.ops[41]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@125.ops[60]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_for_body@125.ops[62]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_for_body@125.ops[66]: 'l-store-copy item1%1%0#0 0'
debug: Replaced main_for_body@125.ops[68]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted main_for_body@125.ops[70]: 'l-store-copy tmp%8#3 0'
debug: Replaced main_for_body@125.ops[72]: 'v-load tmp%8#3' with 'l-load tmp%8#3'
debug: Inserted main_for_body@125.ops[75]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_for_body@125.ops[77]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@125.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced main_for_body@125.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted main_for_body@125.ops[15]: 'l-store-copy i#18 0'
debug: Replaced main_for_body@125.ops[18]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@125.ops[27]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced main_for_body@125.ops[30]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted main_for_body@125.ops[32]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced main_for_body@125.ops[35]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted main_for_body@125.ops[38]: 'l-store-copy end_offset%0#0 0'
debug: Replaced main_for_body@125.ops[42]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted main_for_body@125.ops[55]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@125.ops[58]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@125.ops[57]: 'l-store-copy item_end_offset%0#0 1'
debug: Replaced main_for_body@125.ops[61]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted main_for_body@125.ops[47]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@125.ops[51]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@125.ops[52]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@125.ops[56]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@125.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_for_body@125.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@125.ops[56]: 'l-store-copy item_start_offset%0#0 1'
debug: Replaced main_for_body@125.ops[64]: 'v-load item_start_offset%0#0' with 'l-load item_start_offset%0#0'
debug: Inserted main_for_body@125.ops[20]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@125.ops[26]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@125.ops[24]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced main_for_body@125.ops[32]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@125.ops[69]: 'l-store-copy item1%0#1 0'
debug: Replaced main_for_body@125.ops[78]: 'v-load item1%0#1' with 'l-load item1%0#1'
debug: Inserted main_for_body@125.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@125.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@125.ops[27]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced main_for_body@125.ops[39]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted main_for_body@125.ops[35]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced main_for_body@125.ops[46]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@125.ops[11]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced main_for_body@125.ops[25]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@125.ops[57]: 'l-store-copy item0%0%0#0 1'
debug: Replaced main_for_body@125.ops[76]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted main_for_body@125.ops[24]: 'l-store-copy has_next%0#0 2'
debug: Replaced main_for_body@125.ops[44]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted main_for_body@125.ops[79]: 'l-store-copy i#18 2'
debug: Replaced main_for_body@125.ops[100]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@125.ops[14]: 'l-store-copy item_offset%0#0 2'
debug: Replaced main_for_body@125.ops[50]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@125.ops[33]: 'l-store-copy i#18 4'
debug: Replaced main_for_body@125.ops[80]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@125.ops[17]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@125.ops[97]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@126.ops[7]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_after_for@126.ops[9]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@126.ops[12]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_after_for@126.ops[14]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@126.ops[18]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@126.ops[20]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[44]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@126.ops[46]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@126.ops[61]: 'l-store-copy item1%2#0 0'
debug: Replaced main_after_for@126.ops[63]: 'v-load item1%2#0' with 'l-load item1%2#0'
debug: Inserted main_after_for@126.ops[80]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@126.ops[82]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@126.ops[117]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@126.ops[119]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@126.ops[134]: 'l-store-copy item1%3#0 0'
debug: Replaced main_after_for@126.ops[136]: 'v-load item1%3#0' with 'l-load item1%3#0'
debug: Inserted main_after_for@126.ops[153]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_after_for@126.ops[155]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_after_for@126.ops[161]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@126.ops[163]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@126.ops[2]: 'l-store-copy arr#1 1'
debug: Replaced main_after_for@126.ops[5]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@126.ops[35]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced main_after_for@126.ops[38]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted main_after_for@126.ops[74]: 'l-store-copy tmp%13#3 0'
debug: Replaced main_after_for@126.ops[77]: 'v-load tmp%13#3' with 'l-load tmp%13#3'
debug: Inserted main_after_for@126.ops[79]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@126.ops[82]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@126.ops[91]: 'l-store-copy item_offset_offset%3#0 0'
debug: Replaced main_after_for@126.ops[94]: 'v-load item_offset_offset%3#0' with 'l-load item_offset_offset%3#0'
debug: Inserted main_after_for@126.ops[100]: 'l-store-copy next_index%3#0 0'
debug: Replaced main_after_for@126.ops[103]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted main_after_for@126.ops[109]: 'l-store-copy next_item_offset_offset%3#0 0'
debug: Replaced main_after_for@126.ops[112]: 'v-load next_item_offset_offset%3#0' with 'l-load next_item_offset_offset%3#0'
debug: Inserted main_after_for@126.ops[114]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced main_after_for@126.ops[117]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted main_after_for@126.ops[153]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_after_for@126.ops[156]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_after_for@126.ops[158]: 'l-store-copy tmp%20#1 0'
debug: Replaced main_after_for@126.ops[161]: 'v-load tmp%20#1' with 'l-load tmp%20#1'
debug: Inserted main_after_for@126.ops[30]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@126.ops[33]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[42]: 'l-store-copy end_offset%2#0 0'
debug: Replaced main_after_for@126.ops[46]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted main_after_for@126.ops[59]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@126.ops[62]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@126.ops[61]: 'l-store-copy item_end_offset%2#0 1'
debug: Replaced main_after_for@126.ops[65]: 'v-load item_end_offset%2#0' with 'l-load item_end_offset%2#0'
debug: Inserted main_after_for@126.ops[108]: 'l-store-copy next_index%3#0 1'
debug: Replaced main_after_for@126.ops[111]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted main_after_for@126.ops[125]: 'l-store-copy end_offset%3#0 0'
debug: Replaced main_after_for@126.ops[129]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted main_after_for@126.ops[142]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@126.ops[145]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@126.ops[144]: 'l-store-copy item_end_offset%3#0 1'
debug: Replaced main_after_for@126.ops[148]: 'v-load item_end_offset%3#0' with 'l-load item_end_offset%3#0'
debug: Inserted main_after_for@126.ops[51]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@126.ops[55]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@126.ops[56]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@126.ops[60]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@126.ops[136]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@126.ops[140]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@126.ops[141]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@126.ops[145]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@126.ops[32]: 'l-store-copy end_of_array%2#0 1'
debug: Replaced main_after_for@126.ops[39]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted main_after_for@126.ops[60]: 'l-store-copy item_start_offset%2#0 1'
debug: Replaced main_after_for@126.ops[68]: 'v-load item_start_offset%2#0' with 'l-load item_start_offset%2#0'
debug: Inserted main_after_for@126.ops[146]: 'l-store-copy item_start_offset%3#0 1'
debug: Replaced main_after_for@126.ops[154]: 'v-load item_start_offset%3#0' with 'l-load item_start_offset%3#0'
debug: Inserted main_after_for@126.ops[22]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@126.ops[30]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[76]: 'l-store-copy item1%2%0#0 0'
debug: Replaced main_after_for@126.ops[86]: 'v-load item1%2%0#0' with 'l-load item1%2%0#0'
debug: Inserted main_after_for@126.ops[81]: 'l-store-copy tmp%12#1 1'
debug: Replaced main_after_for@126.ops[92]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_after_for@126.ops[100]: 'l-store-copy has_next%2#0 0'
debug: Replaced main_after_for@126.ops[109]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@126.ops[165]: 'l-store-copy item1%3%0#0 0'
debug: Replaced main_after_for@126.ops[175]: 'v-load item1%3%0#0' with 'l-load item1%3%0#0'
debug: Inserted main_after_for@126.ops[170]: 'l-store-copy tmp%18#1 1'
debug: Replaced main_after_for@126.ops[181]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@126.ops[36]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced main_after_for@126.ops[47]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[126]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced main_after_for@126.ops[137]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[6]: 'l-store-copy arr#1 0'
debug: Replaced main_after_for@126.ops[18]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@126.ops[30]: 'l-store-copy has_next%2#0 1'
debug: Replaced main_after_for@126.ops[45]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@126.ops[121]: 'l-store-copy has_next%3#0 1'
debug: Replaced main_after_for@126.ops[136]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted main_after_for@126.ops[12]: 'l-store-copy tmp%10#1 1'
debug: Replaced main_after_for@126.ops[28]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@126.ops[60]: 'l-store-copy item0%2%0#0 1'
debug: Replaced main_after_for@126.ops[83]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted main_after_for@126.ops[111]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced main_after_for@126.ops[131]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[153]: 'l-store-copy item0%3%0#0 1'
debug: Replaced main_after_for@126.ops[176]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted main_after_for@126.ops[27]: 'l-store-copy item_offset%2#0 2'
debug: Replaced main_after_for@126.ops[52]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_after_for@126.ops[115]: 'l-store-copy item_offset%3#0 2'
debug: Replaced main_after_for@126.ops[146]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted main_after_for@126.ops[48]: 'l-store-copy has_next%2#0 4'
debug: Replaced main_after_for@126.ops[106]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@126.ops[53]: 'l-store-copy array_head_and_tail%2#0 3'
debug: Replaced main_after_for@126.ops[113]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@126.ops[30]: 'l-store-copy tmp%10#1 2'
debug: Replaced main_after_for@126.ops[125]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@126.ops[47]: 'l-store-copy end_of_array%2#0 5'
debug: Replaced main_after_for@126.ops[143]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted main_after_for@126.ops[20]: 'l-store-copy arr#1 1'
debug: Replaced main_after_for@126.ops[205]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[1]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[3]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[5]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[7]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@8.ops[10]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@8.ops[12]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_for_header@113.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@113.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@114.ops[12]: 'l-store-copy length%0#1 0'
debug: Replaced main_for_body@114.ops[14]: 'v-load length%0#1' with 'l-load length%0#1'
debug: Inserted main_for_body@114.ops[16]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@114.ops[18]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@114.ops[20]: 'l-store-copy length_uint16%0#1 0'
debug: Replaced main_for_body@114.ops[22]: 'v-load length_uint16%0#1' with 'l-load length_uint16%0#1'
debug: Inserted main_for_body@114.ops[29]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_for_body@114.ops[31]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_for_body@114.ops[34]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_for_body@114.ops[37]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_for_body@114.ops[46]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced main_for_body@114.ops[49]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted main_for_body@114.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@114.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@114.ops[4]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@114.ops[9]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@114.ops[8]: 'l-store-copy tmp%3#4 1'
debug: Replaced main_for_body@114.ops[13]: 'v-load tmp%3#4' with 'l-load tmp%3#4'
debug: Inserted main_for_body@114.ops[44]: 'l-store-copy arr#1 0'
debug: Replaced main_for_body@114.ops[48]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_for_body@114.ops[47]: 'l-store-copy l_count%0#0 1'
debug: Replaced main_for_body@114.ops[53]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted main_for_body@114.ops[28]: 'l-store-copy encoded_value%0#1 0'
debug: Replaced main_for_body@114.ops[36]: 'v-load encoded_value%0#1' with 'l-load encoded_value%0#1'
debug: Inserted main_for_body@114.ops[14]: 'l-store-copy tmp%3#4 0'
debug: Replaced main_for_body@114.ops[27]: 'v-load tmp%3#4' with 'l-load tmp%3#4'
debug: Inserted main_for_body@114.ops[44]: 'l-store-copy result%1#1 0'
debug: Replaced main_for_body@114.ops[59]: 'v-load result%1#1' with 'l-load result%1#1'
debug: Inserted main_for_body@114.ops[12]: 'l-store-copy val_as_bytes%0#0 1'
debug: Replaced main_for_body@114.ops[32]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_for_body@114.ops[11]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@114.ops[64]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_after_for@115.ops[3]: 'l-store-copy tmp%4#2 0'
debug: Replaced main_after_for@115.ops[5]: 'v-load tmp%4#2' with 'l-load tmp%4#2'
debug: Inserted main_after_for@115.ops[8]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_after_for@115.ops[10]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_for_header@116.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@116.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@117.ops[39]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@117.ops[41]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@117.ops[60]: 'l-store-copy tmp%7#2 0'
debug: Replaced main_for_body@117.ops[62]: 'v-load tmp%7#2' with 'l-load tmp%7#2'
debug: Inserted main_for_body@117.ops[73]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_for_body@117.ops[75]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@117.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced main_for_body@117.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted main_for_body@117.ops[15]: 'l-store-copy i#18 0'
debug: Replaced main_for_body@117.ops[18]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@117.ops[27]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced main_for_body@117.ops[30]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted main_for_body@117.ops[32]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced main_for_body@117.ops[35]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted main_for_body@117.ops[73]: 'l-store-copy tmp%8#2 0'
debug: Replaced main_for_body@117.ops[76]: 'v-load tmp%8#2' with 'l-load tmp%8#2'
debug: Inserted main_for_body@117.ops[38]: 'l-store-copy end_offset%0#0 0'
debug: Replaced main_for_body@117.ops[42]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted main_for_body@117.ops[55]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@117.ops[58]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@117.ops[57]: 'l-store-copy item_end_offset%0#0 1'
debug: Replaced main_for_body@117.ops[61]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted main_for_body@117.ops[47]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@117.ops[51]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@117.ops[52]: 'l-store-copy arc4_item%0#0 0'
debug: Replaced main_for_body@117.ops[56]: 'v-load arc4_item%0#0' with 'l-load arc4_item%0#0'
debug: Inserted main_for_body@117.ops[75]: 'l-store-copy item1%1%0#0 0'
debug: Replaced main_for_body@117.ops[81]: 'v-load item1%1%0#0' with 'l-load item1%1%0#0'
debug: Inserted main_for_body@117.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_for_body@117.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@117.ops[56]: 'l-store-copy item_start_offset%0#0 1'
debug: Replaced main_for_body@117.ops[64]: 'v-load item_start_offset%0#0' with 'l-load item_start_offset%0#0'
debug: Inserted main_for_body@117.ops[20]: 'l-store-copy i#18 1'
debug: Replaced main_for_body@117.ops[26]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@117.ops[24]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced main_for_body@117.ops[32]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@117.ops[69]: 'l-store-copy item1%0#1 0'
debug: Replaced main_for_body@117.ops[78]: 'v-load item1%0#1' with 'l-load item1%0#1'
debug: Inserted main_for_body@117.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@117.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@117.ops[27]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced main_for_body@117.ops[39]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted main_for_body@117.ops[35]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced main_for_body@117.ops[46]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@117.ops[11]: 'l-store-copy array_head_and_tail%0#0 2'
debug: Replaced main_for_body@117.ops[25]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@117.ops[57]: 'l-store-copy item0%0%0#0 1'
debug: Replaced main_for_body@117.ops[76]: 'v-load item0%0%0#0' with 'l-load item0%0%0#0'
debug: Inserted main_for_body@117.ops[24]: 'l-store-copy has_next%0#0 2'
debug: Replaced main_for_body@117.ops[44]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted main_for_body@117.ops[79]: 'l-store-copy i#18 2'
debug: Replaced main_for_body@117.ops[100]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@117.ops[14]: 'l-store-copy item_offset%0#0 2'
debug: Replaced main_for_body@117.ops[50]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@117.ops[33]: 'l-store-copy i#18 4'
debug: Replaced main_for_body@117.ops[80]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@117.ops[17]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@117.ops[92]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@118.ops[7]: 'l-store-copy tmp%10#1 0'
debug: Replaced main_after_for@118.ops[9]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@118.ops[12]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_after_for@118.ops[14]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@118.ops[18]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@118.ops[20]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[44]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@118.ops[46]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@118.ops[61]: 'l-store-copy item1%2#0 0'
debug: Replaced main_after_for@118.ops[63]: 'v-load item1%2#0' with 'l-load item1%2#0'
debug: Inserted main_after_for@118.ops[77]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@118.ops[79]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@118.ops[114]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@118.ops[116]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@118.ops[131]: 'l-store-copy item1%3#0 0'
debug: Replaced main_after_for@118.ops[133]: 'v-load item1%3#0' with 'l-load item1%3#0'
debug: Inserted main_after_for@118.ops[147]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_after_for@118.ops[149]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_after_for@118.ops[155]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@118.ops[157]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@118.ops[2]: 'l-store-copy arr#1 1'
debug: Replaced main_after_for@118.ops[5]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@118.ops[35]: 'l-store-copy next_item_offset%2#0 0'
debug: Replaced main_after_for@118.ops[38]: 'v-load next_item_offset%2#0' with 'l-load next_item_offset%2#0'
debug: Inserted main_after_for@118.ops[75]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_after_for@118.ops[78]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_after_for@118.ops[87]: 'l-store-copy item_offset_offset%3#0 0'
debug: Replaced main_after_for@118.ops[90]: 'v-load item_offset_offset%3#0' with 'l-load item_offset_offset%3#0'
debug: Inserted main_after_for@118.ops[96]: 'l-store-copy next_index%3#0 0'
debug: Replaced main_after_for@118.ops[99]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted main_after_for@118.ops[105]: 'l-store-copy next_item_offset_offset%3#0 0'
debug: Replaced main_after_for@118.ops[108]: 'v-load next_item_offset_offset%3#0' with 'l-load next_item_offset_offset%3#0'
debug: Inserted main_after_for@118.ops[110]: 'l-store-copy next_item_offset%3#0 0'
debug: Replaced main_after_for@118.ops[113]: 'v-load next_item_offset%3#0' with 'l-load next_item_offset%3#0'
debug: Inserted main_after_for@118.ops[150]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_after_for@118.ops[153]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@118.ops[30]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@118.ops[33]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[42]: 'l-store-copy end_offset%2#0 0'
debug: Replaced main_after_for@118.ops[46]: 'v-load end_offset%2#0' with 'l-load end_offset%2#0'
debug: Inserted main_after_for@118.ops[59]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@118.ops[62]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@118.ops[61]: 'l-store-copy item_end_offset%2#0 1'
debug: Replaced main_after_for@118.ops[65]: 'v-load item_end_offset%2#0' with 'l-load item_end_offset%2#0'
debug: Inserted main_after_for@118.ops[104]: 'l-store-copy next_index%3#0 1'
debug: Replaced main_after_for@118.ops[107]: 'v-load next_index%3#0' with 'l-load next_index%3#0'
debug: Inserted main_after_for@118.ops[121]: 'l-store-copy end_offset%3#0 0'
debug: Replaced main_after_for@118.ops[125]: 'v-load end_offset%3#0' with 'l-load end_offset%3#0'
debug: Inserted main_after_for@118.ops[138]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@118.ops[141]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@118.ops[140]: 'l-store-copy item_end_offset%3#0 1'
debug: Replaced main_after_for@118.ops[144]: 'v-load item_end_offset%3#0' with 'l-load item_end_offset%3#0'
debug: Inserted main_after_for@118.ops[51]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@118.ops[55]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@118.ops[56]: 'l-store-copy arc4_item%2#0 0'
debug: Replaced main_after_for@118.ops[60]: 'v-load arc4_item%2#0' with 'l-load arc4_item%2#0'
debug: Inserted main_after_for@118.ops[132]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@118.ops[136]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@118.ops[137]: 'l-store-copy arc4_item%3#0 0'
debug: Replaced main_after_for@118.ops[141]: 'v-load arc4_item%3#0' with 'l-load arc4_item%3#0'
debug: Inserted main_after_for@118.ops[32]: 'l-store-copy end_of_array%2#0 1'
debug: Replaced main_after_for@118.ops[39]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted main_after_for@118.ops[60]: 'l-store-copy item_start_offset%2#0 1'
debug: Replaced main_after_for@118.ops[68]: 'v-load item_start_offset%2#0' with 'l-load item_start_offset%2#0'
debug: Inserted main_after_for@118.ops[75]: 'l-store-copy item1%2%0#0 0'
debug: Replaced main_after_for@118.ops[81]: 'v-load item1%2%0#0' with 'l-load item1%2%0#0'
debug: Inserted main_after_for@118.ops[80]: 'l-store-copy tmp%12#1 1'
debug: Replaced main_after_for@118.ops[87]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_after_for@118.ops[144]: 'l-store-copy item_start_offset%3#0 1'
debug: Replaced main_after_for@118.ops[152]: 'v-load item_start_offset%3#0' with 'l-load item_start_offset%3#0'
debug: Inserted main_after_for@118.ops[159]: 'l-store-copy item1%3%0#0 0'
debug: Replaced main_after_for@118.ops[165]: 'v-load item1%3%0#0' with 'l-load item1%3%0#0'
debug: Inserted main_after_for@118.ops[164]: 'l-store-copy tmp%17#0 1'
debug: Replaced main_after_for@118.ops[171]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@118.ops[22]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_after_for@118.ops[30]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[96]: 'l-store-copy has_next%2#0 0'
debug: Replaced main_after_for@118.ops[105]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@118.ops[36]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced main_after_for@118.ops[47]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[122]: 'l-store-copy array_head_and_tail%2#0 1'
debug: Replaced main_after_for@118.ops[133]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[6]: 'l-store-copy arr#1 0'
debug: Replaced main_after_for@118.ops[18]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_after_for@118.ops[30]: 'l-store-copy has_next%2#0 1'
debug: Replaced main_after_for@118.ops[45]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@118.ops[117]: 'l-store-copy has_next%3#0 1'
debug: Replaced main_after_for@118.ops[132]: 'v-load has_next%3#0' with 'l-load has_next%3#0'
debug: Inserted main_after_for@118.ops[12]: 'l-store-copy tmp%10#1 1'
debug: Replaced main_after_for@118.ops[28]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@118.ops[60]: 'l-store-copy item0%2%0#0 1'
debug: Replaced main_after_for@118.ops[83]: 'v-load item0%2%0#0' with 'l-load item0%2%0#0'
debug: Inserted main_after_for@118.ops[107]: 'l-store-copy array_head_and_tail%2#0 2'
debug: Replaced main_after_for@118.ops[127]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[149]: 'l-store-copy item0%3%0#0 1'
debug: Replaced main_after_for@118.ops[172]: 'v-load item0%3%0#0' with 'l-load item0%3%0#0'
debug: Inserted main_after_for@118.ops[27]: 'l-store-copy item_offset%2#0 2'
debug: Replaced main_after_for@118.ops[52]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_after_for@118.ops[111]: 'l-store-copy item_offset%3#0 2'
debug: Replaced main_after_for@118.ops[142]: 'v-load item_offset%3#0' with 'l-load item_offset%3#0'
debug: Inserted main_after_for@118.ops[48]: 'l-store-copy has_next%2#0 4'
debug: Replaced main_after_for@118.ops[102]: 'v-load has_next%2#0' with 'l-load has_next%2#0'
debug: Inserted main_after_for@118.ops[53]: 'l-store-copy array_head_and_tail%2#0 3'
debug: Replaced main_after_for@118.ops[109]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_after_for@118.ops[30]: 'l-store-copy tmp%10#1 2'
debug: Replaced main_after_for@118.ops[121]: 'v-load tmp%10#1' with 'l-load tmp%10#1'
debug: Inserted main_after_for@118.ops[47]: 'l-store-copy end_of_array%2#0 5'
debug: Replaced main_after_for@118.ops[139]: 'v-load end_of_array%2#0' with 'l-load end_of_array%2#0'
debug: Inserted main_after_for@118.ops[20]: 'l-store-copy arr#1 1'
debug: Replaced main_after_for@118.ops[197]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_test_implicit_conversion_log_route@9.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_implicit_conversion_log_route@9.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_implicit_conversion_log_route@9.ops[5]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_implicit_conversion_log_route@9.ops[7]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_implicit_conversion_log_route@9.ops[10]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_test_implicit_conversion_log_route@9.ops[12]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_test_implicit_conversion_log_route@9.ops[15]: 'l-store-copy arr#10 0'
debug: Replaced main_test_implicit_conversion_log_route@9.ops[17]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_implicit_conversion_log_route@9.ops[20]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_log_route@9.ops[22]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[1]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[3]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[5]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[7]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[10]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[12]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[23]: 'l-store-copy event%0#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[25]: 'v-load event%0#0' with 'l-load event%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[28]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[30]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[15]: 'l-store-copy arr#10 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[18]: 'v-load arr#10' with 'l-load arr#10'
debug: Inserted main_test_implicit_conversion_emit_route@10.ops[20]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@10.ops[23]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_test_nested_array_route@11.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_nested_array_route@11.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_nested_array_route@11.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_nested_array_route@11.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_nested_array_route@11.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_nested_array_route@11.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_nested_array_route@11.ops[15]: 'l-store-copy reinterpret_bytes[8]%1#0 0'
debug: Replaced main_test_nested_array_route@11.ops[17]: 'v-load reinterpret_bytes[8]%1#0' with 'l-load reinterpret_bytes[8]%1#0'
debug: Inserted main_for_header@95.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@95.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_header@97.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@97.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@98.ops[9]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@98.ops[11]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@98.ops[13]: 'l-store-copy byte_len%0#2 0'
debug: Replaced main_for_body@98.ops[15]: 'v-load byte_len%0#2' with 'l-load byte_len%0#2'
debug: Inserted main_for_body@98.ops[18]: 'l-store-copy len_%0#2 0'
debug: Replaced main_for_body@98.ops[20]: 'v-load len_%0#2' with 'l-load len_%0#2'
debug: Inserted main_for_body@98.ops[22]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@98.ops[24]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@98.ops[26]: 'l-store-copy len_16_bit%0#2 0'
debug: Replaced main_for_body@98.ops[28]: 'v-load len_16_bit%0#2' with 'l-load len_16_bit%0#2'
debug: Inserted main_for_body@98.ops[5]: 'l-store-copy array%sub_item%7#1 0'
debug: Replaced main_for_body@98.ops[8]: 'v-load array%sub_item%7#1' with 'l-load array%sub_item%7#1'
debug: Inserted main_for_body@98.ops[2]: 'l-store-copy expr_value_trimmed%0#5 0'
debug: Replaced main_for_body@98.ops[8]: 'v-load expr_value_trimmed%0#5' with 'l-load expr_value_trimmed%0#5'
debug: Inserted main_for_body@98.ops[14]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@98.ops[32]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@98.ops[5]: 'l-store-copy j#0 1'
debug: Replaced main_for_body@98.ops[36]: 'v-load j#0' with 'l-load j#0'
debug: Inserted main_after_for@99.ops[10]: 'l-store-copy l_head_and_tail%0#0 0'
debug: Replaced main_after_for@99.ops[13]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted main_after_for@99.ops[5]: 'l-store-copy arr#13 0'
debug: Replaced main_after_for@99.ops[9]: 'v-load arr#13' with 'l-load arr#13'
debug: Inserted main_after_for@99.ops[8]: 'l-store-copy l_count%0#0 1'
debug: Replaced main_after_for@99.ops[14]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted main_after_for@99.ops[3]: 'l-store-copy result%1#1 0'
debug: Replaced main_after_for@99.ops[18]: 'v-load result%1#1' with 'l-load result%1#1'
debug: Inserted main_for_header@101.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@101.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@102.ops[14]: 'l-store-copy item_length%0#0 0'
debug: Replaced main_for_body@102.ops[16]: 'v-load item_length%0#0' with 'l-load item_length%0#0'
debug: Inserted main_for_body@102.ops[19]: 'l-store-copy item_length_in_bytes%0#0 0'
debug: Replaced main_for_body@102.ops[21]: 'v-load item_length_in_bytes%0#0' with 'l-load item_length_in_bytes%0#0'
debug: Inserted main_for_body@102.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced main_for_body@102.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted main_for_body@102.ops[11]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_for_body@102.ops[14]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@102.ops[26]: 'l-store-copy item_head_tail_length%0#0 0'
debug: Replaced main_for_body@102.ops[30]: 'v-load item_head_tail_length%0#0' with 'l-load item_head_tail_length%0#0'
debug: Inserted main_for_body@102.ops[9]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced main_for_body@102.ops[14]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@102.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_for_body@102.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@102.ops[34]: 'l-store-copy inner_arr#0 0'
debug: Replaced main_for_body@102.ops[41]: 'v-load inner_arr#0' with 'l-load inner_arr#0'
debug: Inserted main_for_body@102.ops[16]: 'l-store-copy array_head_and_tail%0#0 1'
debug: Replaced main_for_body@102.ops[31]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@102.ops[18]: 'l-store-copy item_offset%0#0 2'
debug: Replaced main_for_body@102.ops[33]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_header@103.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@103.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@104.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_for_body@104.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@104.ops[11]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_for_body@104.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@104.ops[5]: 'l-store-copy item_index_internal%0#6 1'
debug: Replaced main_for_body@104.ops[19]: 'v-load item_index_internal%0#6' with 'l-load item_index_internal%0#6'
debug: Inserted main_after_for@105.ops[6]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_after_for@105.ops[8]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_after_for@105.ops[10]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_after_for@105.ops[12]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_after_for@105.ops[15]: 'l-store-copy len_%1#0 0'
debug: Replaced main_after_for@105.ops[17]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_after_for@105.ops[19]: 'l-store-copy as_bytes%2#1 0'
debug: Replaced main_after_for@105.ops[21]: 'v-load as_bytes%2#1' with 'l-load as_bytes%2#1'
debug: Inserted main_after_for@105.ops[23]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_after_for@105.ops[25]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_after_for@105.ops[2]: 'l-store-copy array%sub_item%8#1 0'
debug: Replaced main_after_for@105.ops[5]: 'v-load array%sub_item%8#1' with 'l-load array%sub_item%8#1'
debug: Inserted main_after_for@105.ops[10]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_after_for@105.ops[28]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_after_for@106.ops[3]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_after_for@106.ops[5]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_after_for@106.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@106.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bit_packed_tuples_route@12.ops[1]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_test_bit_packed_tuples_route@12.ops[3]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_test_bit_packed_tuples_route@12.ops[5]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_test_bit_packed_tuples_route@12.ops[7]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_test_bit_packed_tuples_route@12.ops[10]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_test_bit_packed_tuples_route@12.ops[12]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_for_header@90.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@90.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@91.ops[14]: 'l-store-copy array%encoded_bit%1#1 0'
debug: Replaced main_for_body@91.ops[16]: 'v-load array%encoded_bit%1#1' with 'l-load array%encoded_bit%1#1'
debug: Inserted main_for_body@91.ops[24]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@91.ops[26]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@91.ops[28]: 'l-store-copy len_%0#2 0'
debug: Replaced main_for_body@91.ops[30]: 'v-load len_%0#2' with 'l-load len_%0#2'
debug: Inserted main_for_body@91.ops[32]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_for_body@91.ops[34]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_for_body@91.ops[36]: 'l-store-copy len_16_bit%0#2 0'
debug: Replaced main_for_body@91.ops[38]: 'v-load len_16_bit%0#2' with 'l-load len_16_bit%0#2'
debug: Inserted main_for_body@91.ops[71]: 'l-store-copy array%sub_item%10#1 0'
debug: Replaced main_for_body@91.ops[73]: 'v-load array%sub_item%10#1' with 'l-load array%sub_item%10#1'
debug: Inserted main_for_body@91.ops[76]: 'l-store-copy array%encoded%11#1 0'
debug: Replaced main_for_body@91.ops[78]: 'v-load array%encoded%11#1' with 'l-load array%encoded%11#1'
debug: Inserted main_for_body@91.ops[82]: 'l-store-copy array%sub_item%11#1 0'
debug: Replaced main_for_body@91.ops[84]: 'v-load array%sub_item%11#1' with 'l-load array%sub_item%11#1'
debug: Inserted main_for_body@91.ops[88]: 'l-store-copy array%sub_item%12#1 0'
debug: Replaced main_for_body@91.ops[90]: 'v-load array%sub_item%12#1' with 'l-load array%sub_item%12#1'
debug: Inserted main_for_body@91.ops[94]: 'l-store-copy array%sub_item%13#1 0'
debug: Replaced main_for_body@91.ops[96]: 'v-load array%sub_item%13#1' with 'l-load array%sub_item%13#1'
debug: Inserted main_for_body@91.ops[100]: 'l-store-copy array%sub_item%14#1 0'
debug: Replaced main_for_body@91.ops[102]: 'v-load array%sub_item%14#1' with 'l-load array%sub_item%14#1'
debug: Inserted main_for_body@91.ops[106]: 'l-store-copy array%sub_item%15#1 0'
debug: Replaced main_for_body@91.ops[108]: 'v-load array%sub_item%15#1' with 'l-load array%sub_item%15#1'
debug: Inserted main_for_body@91.ops[123]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@91.ops[125]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@91.ops[127]: 'l-store-copy byte_len%0#2 0'
debug: Replaced main_for_body@91.ops[129]: 'v-load byte_len%0#2' with 'l-load byte_len%0#2'
debug: Inserted main_for_body@91.ops[132]: 'l-store-copy len_%1#0 0'
debug: Replaced main_for_body@91.ops[134]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_for_body@91.ops[136]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_for_body@91.ops[138]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_for_body@91.ops[140]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_for_body@91.ops[142]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_for_body@91.ops[157]: 'l-store-copy array%sub_item%25#1 0'
debug: Replaced main_for_body@91.ops[159]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted main_for_body@91.ops[166]: 'l-store-copy concatenated%2#0 0'
debug: Replaced main_for_body@91.ops[168]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted main_for_body@91.ops[170]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_for_body@91.ops[172]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_for_body@91.ops[175]: 'l-store-copy len_%2#0 0'
debug: Replaced main_for_body@91.ops[177]: 'v-load len_%2#0' with 'l-load len_%2#0'
debug: Inserted main_for_body@91.ops[179]: 'l-store-copy as_bytes%2#1 0'
debug: Replaced main_for_body@91.ops[181]: 'v-load as_bytes%2#1' with 'l-load as_bytes%2#1'
debug: Inserted main_for_body@91.ops[183]: 'l-store-copy len_16_bit%2#0 0'
debug: Replaced main_for_body@91.ops[185]: 'v-load len_16_bit%2#0' with 'l-load len_16_bit%2#0'
debug: Inserted main_for_body@91.ops[204]: 'l-store-copy array%encoded%18#1 0'
debug: Replaced main_for_body@91.ops[206]: 'v-load array%encoded%18#1' with 'l-load array%encoded%18#1'
debug: Inserted main_for_body@91.ops[213]: 'l-store-copy concatenated%3#0 0'
debug: Replaced main_for_body@91.ops[215]: 'v-load concatenated%3#0' with 'l-load concatenated%3#0'
debug: Inserted main_for_body@91.ops[217]: 'l-store-copy byte_len%2#0 0'
debug: Replaced main_for_body@91.ops[219]: 'v-load byte_len%2#0' with 'l-load byte_len%2#0'
debug: Inserted main_for_body@91.ops[222]: 'l-store-copy len_%3#0 0'
debug: Replaced main_for_body@91.ops[224]: 'v-load len_%3#0' with 'l-load len_%3#0'
debug: Inserted main_for_body@91.ops[226]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced main_for_body@91.ops[228]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted main_for_body@91.ops[230]: 'l-store-copy len_16_bit%3#0 0'
debug: Replaced main_for_body@91.ops[232]: 'v-load len_16_bit%3#0' with 'l-load len_16_bit%3#0'
debug: Inserted main_for_body@91.ops[20]: 'l-store-copy array%sub_item%9#1 0'
debug: Replaced main_for_body@91.ops[23]: 'v-load array%sub_item%9#1' with 'l-load array%sub_item%9#1'
debug: Inserted main_for_body@91.ops[116]: 'l-store-copy array%sub_item%17#1 0'
debug: Replaced main_for_body@91.ops[119]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted main_for_body@91.ops[121]: 'l-store-copy array%encoded%12#1 0'
debug: Replaced main_for_body@91.ops[124]: 'v-load array%encoded%12#1' with 'l-load array%encoded%12#1'
debug: Inserted main_for_body@91.ops[165]: 'l-store-copy array%encoded%15#1 0'
debug: Replaced main_for_body@91.ops[168]: 'v-load array%encoded%15#1' with 'l-load array%encoded%15#1'
debug: Inserted main_for_body@91.ops[204]: 'l-store-copy array%sub_item%35#1 0'
debug: Replaced main_for_body@91.ops[207]: 'v-load array%sub_item%35#1' with 'l-load array%sub_item%35#1'
debug: Inserted main_for_body@91.ops[214]: 'l-store-copy array%encoded%19#1 0'
debug: Replaced main_for_body@91.ops[217]: 'v-load array%encoded%19#1' with 'l-load array%encoded%19#1'
debug: Inserted main_for_body@91.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[7]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[156]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_for_body@91.ops[160]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_for_body@91.ops[201]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_for_body@91.ops[205]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_for_body@91.ops[48]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[53]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[57]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[58]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[62]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[63]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[67]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[68]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[72]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[73]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@91.ops[77]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[120]: 'l-store-copy array%sub_item%16#1 0'
debug: Replaced main_for_body@91.ops[126]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted main_for_body@91.ops[6]: 'l-store-copy tmp%8#0 1'
debug: Replaced main_for_body@91.ops[14]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_for_body@91.ops[11]: 'l-store-copy tmp%9#1 1'
debug: Replaced main_for_body@91.ops[21]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@91.ops[31]: 'l-store-copy concatenated%0#5 0'
debug: Replaced main_for_body@91.ops[44]: 'v-load concatenated%0#5' with 'l-load concatenated%0#5'
debug: Inserted main_for_body@91.ops[140]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@91.ops[158]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@91.ops[163]: 'l-store-copy expr_value_trimmed%2#0 0'
debug: Replaced main_for_body@91.ops[181]: 'v-load expr_value_trimmed%2#0' with 'l-load expr_value_trimmed%2#0'
debug: Inserted main_for_body@91.ops[187]: 'l-store-copy concatenated%2#0 0'
debug: Replaced main_for_body@91.ops[205]: 'v-load concatenated%2#0' with 'l-load concatenated%2#0'
debug: Inserted main_for_body@91.ops[238]: 'l-store-copy concatenated%3#0 0'
debug: Replaced main_for_body@91.ops[256]: 'v-load concatenated%3#0' with 'l-load concatenated%3#0'
debug: Inserted main_for_body@91.ops[2]: 'l-store-copy expr_value_trimmed%0#5 0'
debug: Replaced main_for_body@91.ops[26]: 'v-load expr_value_trimmed%0#5' with 'l-load expr_value_trimmed%0#5'
debug: Inserted main_for_body@91.ops[211]: 'l-store-copy expr_value_trimmed%3#0 0'
debug: Replaced main_for_body@91.ops[234]: 'v-load expr_value_trimmed%3#0' with 'l-load expr_value_trimmed%3#0'
debug: Inserted main_for_body@91.ops[131]: 'l-store-copy array%sub_item%16#1 1'
debug: Replaced main_for_body@91.ops[172]: 'v-load array%sub_item%16#1' with 'l-load array%sub_item%16#1'
debug: Inserted main_for_body@91.ops[10]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@91.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[56]: 'l-store-copy tmp%12#1 1'
debug: Replaced main_for_body@91.ops[100]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_for_body@91.ops[62]: 'l-store-copy tmp%13#0 2'
debug: Replaced main_for_body@91.ops[107]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_for_body@91.ops[68]: 'l-store-copy tmp%14#1 3'
debug: Replaced main_for_body@91.ops[114]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_for_body@91.ops[137]: 'l-store-copy array%sub_item%17#1 2'
debug: Replaced main_for_body@91.ops[184]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted main_for_body@91.ops[173]: 'l-store-copy i#0 3'
debug: Replaced main_for_body@91.ops[220]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[185]: 'l-store-copy array%sub_item%25#1 3'
debug: Replaced main_for_body@91.ops[232]: 'v-load array%sub_item%25#1' with 'l-load array%sub_item%25#1'
debug: Inserted main_for_body@91.ops[74]: 'l-store-copy tmp%15#1 4'
debug: Replaced main_for_body@91.ops[121]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_for_body@91.ops[85]: 'l-store-copy i#18 5'
debug: Replaced main_for_body@91.ops[132]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_for_body@91.ops[80]: 'l-store-copy tmp%16#1 5'
debug: Replaced main_for_body@91.ops[129]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_for_body@91.ops[190]: 'l-store-copy array%sub_item%17#1 4'
debug: Replaced main_for_body@91.ops[242]: 'v-load array%sub_item%17#1' with 'l-load array%sub_item%17#1'
debug: Inserted main_for_body@91.ops[22]: 'l-store-copy array%encoded_bit%1#1 3'
debug: Replaced main_for_body@91.ops[94]: 'v-load array%encoded_bit%1#1' with 'l-load array%encoded_bit%1#1'
debug: Inserted main_for_body@91.ops[25]: 'l-store-copy tmp%9#1 5'
debug: Replaced main_for_body@91.ops[101]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@91.ops[91]: 'l-store-copy i#0 8'
debug: Replaced main_for_body@91.ops[178]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@91.ops[53]: 'l-store-copy expr_value_trimmed%1#3 3'
debug: Replaced main_for_body@91.ops[148]: 'v-load expr_value_trimmed%1#3' with 'l-load expr_value_trimmed%1#3'
debug: Inserted main_for_body@91.ops[138]: 'l-store-copy i#18 3'
debug: Replaced main_for_body@91.ops[278]: 'v-load i#18' with 'l-load i#18'
debug: Inserted main_after_for@92.ops[3]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_after_for@92.ops[5]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_after_for@92.ops[8]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_after_for@92.ops[10]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_after_for@92.ops[15]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_after_for@92.ops[17]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_after_for@92.ops[20]: 'l-store-copy tmp%40#1 0'
debug: Replaced main_after_for@92.ops[22]: 'v-load tmp%40#1' with 'l-load tmp%40#1'
debug: Inserted main_after_for@92.ops[27]: 'l-store-copy tmp%41#1 0'
debug: Replaced main_after_for@92.ops[29]: 'v-load tmp%41#1' with 'l-load tmp%41#1'
debug: Inserted main_after_for@92.ops[32]: 'l-store-copy tmp%42#1 0'
debug: Replaced main_after_for@92.ops[34]: 'v-load tmp%42#1' with 'l-load tmp%42#1'
debug: Inserted main_after_for@92.ops[39]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_after_for@92.ops[41]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_after_for@92.ops[44]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_after_for@92.ops[46]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_after_for@92.ops[61]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@92.ops[63]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@92.ops[37]: 'l-store-copy arr9#0 0'
debug: Replaced main_after_for@92.ops[59]: 'v-load arr9#0' with 'l-load arr9#0'
debug: Inserted main_after_for@92.ops[25]: 'l-store-copy arr8#0 0'
debug: Replaced main_after_for@92.ops[57]: 'v-load arr8#0' with 'l-load arr8#0'
debug: Inserted main_after_for@92.ops[13]: 'l-store-copy arr7#0 0'
debug: Replaced main_after_for@92.ops[55]: 'v-load arr7#0' with 'l-load arr7#0'
debug: Inserted main_after_for@92.ops[1]: 'l-store-copy arr2#1 0'
debug: Replaced main_after_for@92.ops[53]: 'v-load arr2#1' with 'l-load arr2#1'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@13.ops[1]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@13.ops[3]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@13.ops[5]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@13.ops[7]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@13.ops[10]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@13.ops[12]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@13.ops[15]: 'l-store-copy arr1#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@13.ops[31]: 'v-load arr1#0' with 'l-load arr1#0'
debug: Inserted main_for_header@70.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@70.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@71.ops[6]: 'l-store-copy item_offset%0#0 0'
debug: Replaced main_for_body@71.ops[9]: 'v-load item_offset%0#0' with 'l-load item_offset%0#0'
debug: Inserted main_for_body@71.ops[11]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@71.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@71.ops[2]: 'l-store-copy array_head_and_tail%0#0 0'
debug: Replaced main_for_body@71.ops[9]: 'v-load array_head_and_tail%0#0' with 'l-load array_head_and_tail%0#0'
debug: Inserted main_for_body@71.ops[5]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@71.ops[19]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_header@73.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@73.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@74.ops[2]: 'l-store-copy array_head_and_tail%1#0 0'
debug: Replaced main_for_body@74.ops[4]: 'v-load array_head_and_tail%1#0' with 'l-load array_head_and_tail%1#0'
debug: Inserted main_for_body@74.ops[12]: 'l-store-copy encoded_bool%0#1 0'
debug: Replaced main_for_body@74.ops[14]: 'v-load encoded_bool%0#1' with 'l-load encoded_bool%0#1'
debug: Inserted main_for_body@74.ops[7]: 'l-store-copy is_true%0#0 0'
debug: Replaced main_for_body@74.ops[11]: 'v-load is_true%0#0' with 'l-load is_true%0#0'
debug: Inserted main_for_body@74.ops[18]: 'l-store-copy b#0 0'
debug: Replaced main_for_body@74.ops[22]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_if_body@75.ops[3]: 'l-store-copy sum2#0 0'
debug: Replaced main_if_body@75.ops[5]: 'v-load sum2#0' with 'l-load sum2#0'
debug: Inserted main_for_header@78.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@78.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@79.ops[11]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced main_for_body@79.ops[13]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted main_for_body@79.ops[25]: 'l-store-copy encoded_bool%1#1 0'
debug: Replaced main_for_body@79.ops[27]: 'v-load encoded_bool%1#1' with 'l-load encoded_bool%1#1'
debug: Inserted main_for_body@79.ops[39]: 'l-store-copy encoded_bool%2#1 0'
debug: Replaced main_for_body@79.ops[41]: 'v-load encoded_bool%2#1' with 'l-load encoded_bool%2#1'
debug: Inserted main_for_body@79.ops[48]: 'l-store-copy sum3#0 0'
debug: Replaced main_for_body@79.ops[50]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_for_body@79.ops[6]: 'l-store-copy item_offset%1#0 0'
debug: Replaced main_for_body@79.ops[9]: 'v-load item_offset%1#0' with 'l-load item_offset%1#0'
debug: Inserted main_for_body@79.ops[21]: 'l-store-copy is_true%1#0 0'
debug: Replaced main_for_body@79.ops[25]: 'v-load is_true%1#0' with 'l-load is_true%1#0'
debug: Inserted main_for_body@79.ops[36]: 'l-store-copy is_true%2#0 0'
debug: Replaced main_for_body@79.ops[40]: 'v-load is_true%2#0' with 'l-load is_true%2#0'
debug: Inserted main_for_body@79.ops[15]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced main_for_body@79.ops[19]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted main_for_body@79.ops[2]: 'l-store-copy array_head_and_tail%2#0 0'
debug: Replaced main_for_body@79.ops[9]: 'v-load array_head_and_tail%2#0' with 'l-load array_head_and_tail%2#0'
debug: Inserted main_for_body@79.ops[21]: 'l-store-copy value_at_index%2#0 0'
debug: Replaced main_for_body@79.ops[36]: 'v-load value_at_index%2#0' with 'l-load value_at_index%2#0'
debug: Inserted main_for_body@79.ops[35]: 'l-store-copy tup.bar#0 1'
debug: Replaced main_for_body@79.ops[59]: 'v-load tup.bar#0' with 'l-load tup.bar#0'
debug: Inserted main_for_body@79.ops[19]: 'l-store-copy tup.foo#0 1'
debug: Replaced main_for_body@79.ops[54]: 'v-load tup.foo#0' with 'l-load tup.foo#0'
debug: Inserted main_if_body@80.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced main_if_body@80.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_after_if_else@81.ops[1]: 'l-store-copy sum3#0 0'
debug: Replaced main_after_if_else@81.ops[3]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_if_body@82.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced main_if_body@82.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_after_for@84.ops[5]: 'l-store-copy item_index_internal%3#0 0'
debug: Replaced main_after_for@84.ops[7]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted main_for_header@85.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced main_for_header@85.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted main_for_body@86.ops[39]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced main_for_body@86.ops[41]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted main_for_body@86.ops[56]: 'l-store-copy item1%1#1 0'
debug: Replaced main_for_body@86.ops[58]: 'v-load item1%1#1' with 'l-load item1%1#1'
debug: Inserted main_for_body@86.ops[75]: 'l-store-copy tmp%2#3 0'
debug: Replaced main_for_body@86.ops[77]: 'v-load tmp%2#3' with 'l-load tmp%2#3'
debug: Inserted main_for_body@86.ops[6]: 'l-store-copy item_offset_offset%0#0 0'
debug: Replaced main_for_body@86.ops[9]: 'v-load item_offset_offset%0#0' with 'l-load item_offset_offset%0#0'
debug: Inserted main_for_body@86.ops[15]: 'l-store-copy next_index%0#0 0'
debug: Replaced main_for_body@86.ops[18]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted main_for_body@86.ops[27]: 'l-store-copy next_item_offset_offset%0#0 0'
debug: Replaced main_for_body@86.ops[30]: 'v-load next_item_offset_offset%0#0' with 'l-load next_item_offset_offset%0#0'
debug: Inserted main_for_body@86.ops[32]: 'l-store-copy next_item_offset%0#0 0'
debug: Replaced main_for_body@86.ops[35]: 'v-load next_item_offset%0#0' with 'l-load next_item_offset%0#0'
debug: Inserted main_for_body@86.ops[71]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@86.ops[74]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@86.ops[38]: 'l-store-copy end_offset%0#0 0'
debug: Replaced main_for_body@86.ops[42]: 'v-load end_offset%0#0' with 'l-load end_offset%0#0'
debug: Inserted main_for_body@86.ops[55]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced main_for_body@86.ops[58]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted main_for_body@86.ops[57]: 'l-store-copy item_end_offset%0#0 1'
debug: Replaced main_for_body@86.ops[61]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted main_for_body@86.ops[78]: 'l-store-copy tmp%0#1 1'
debug: Replaced main_for_body@86.ops[81]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@86.ops[47]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced main_for_body@86.ops[51]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted main_for_body@86.ops[52]: 'l-store-copy value_at_index%3#0 0'
debug: Replaced main_for_body@86.ops[56]: 'v-load value_at_index%3#0' with 'l-load value_at_index%3#0'
debug: Inserted main_for_body@86.ops[73]: 'l-store-copy sum4#0 0'
debug: Replaced main_for_body@86.ops[79]: 'v-load sum4#0' with 'l-load sum4#0'
debug: Inserted main_for_body@86.ops[2]: 'l-store-copy array_head_and_tail%3#0 0'
debug: Replaced main_for_body@86.ops[9]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted main_for_body@86.ops[56]: 'l-store-copy item_start_offset%0#0 1'
debug: Replaced main_for_body@86.ops[64]: 'v-load item_start_offset%0#0' with 'l-load item_start_offset%0#0'
debug: Inserted main_for_body@86.ops[71]: 'l-store-copy dyn_tup.bar#0 0'
debug: Replaced main_for_body@86.ops[78]: 'v-load dyn_tup.bar#0' with 'l-load dyn_tup.bar#0'
debug: Inserted main_for_body@86.ops[20]: 'l-store-copy next_index%0#0 1'
debug: Replaced main_for_body@86.ops[26]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted main_for_body@86.ops[24]: 'l-store-copy array_head_and_tail%3#0 1'
debug: Replaced main_for_body@86.ops[32]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted main_for_body@86.ops[5]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@86.ops[14]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@86.ops[27]: 'l-store-copy end_of_array%0#0 2'
debug: Replaced main_for_body@86.ops[39]: 'v-load end_of_array%0#0' with 'l-load end_of_array%0#0'
debug: Inserted main_for_body@86.ops[35]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced main_for_body@86.ops[46]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted main_for_body@86.ops[11]: 'l-store-copy array_head_and_tail%3#0 2'
debug: Replaced main_for_body@86.ops[25]: 'v-load array_head_and_tail%3#0' with 'l-load array_head_and_tail%3#0'
debug: Inserted main_for_body@86.ops[24]: 'l-store-copy has_next%0#0 2'
debug: Replaced main_for_body@86.ops[44]: 'v-load has_next%0#0' with 'l-load has_next%0#0'
debug: Inserted main_for_body@86.ops[58]: 'l-store-copy dyn_tup.foo#0 1'
debug: Replaced main_for_body@86.ops[82]: 'v-load dyn_tup.foo#0' with 'l-load dyn_tup.foo#0'
debug: Inserted main_for_body@86.ops[14]: 'l-store-copy item_offset%2#0 2'
debug: Replaced main_for_body@86.ops[50]: 'v-load item_offset%2#0' with 'l-load item_offset%2#0'
debug: Inserted main_for_body@86.ops[33]: 'l-store-copy next_index%0#0 4'
debug: Replaced main_for_body@86.ops[104]: 'v-load next_index%0#0' with 'l-load next_index%0#0'
debug: Inserted main_for_body@86.ops[17]: 'l-store-copy idx#0 2'
debug: Replaced main_for_body@86.ops[99]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@87.ops[15]: 'l-store-copy encoded_tuple_buffer%2#0 0'
debug: Replaced main_after_for@87.ops[17]: 'v-load encoded_tuple_buffer%2#0' with 'l-load encoded_tuple_buffer%2#0'
debug: Inserted main_after_for@87.ops[20]: 'l-store-copy encoded_tuple_buffer%3#0 0'
debug: Replaced main_after_for@87.ops[22]: 'v-load encoded_tuple_buffer%3#0' with 'l-load encoded_tuple_buffer%3#0'
debug: Inserted main_after_for@87.ops[29]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_after_for@87.ops[31]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_after_for@87.ops[34]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@87.ops[36]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@87.ops[25]: 'l-store-copy encoded_tuple_buffer%4#0 0'
debug: Replaced main_after_for@87.ops[28]: 'v-load encoded_tuple_buffer%4#0' with 'l-load encoded_tuple_buffer%4#0'
debug: Inserted main_after_for@87.ops[5]: 'l-store-copy val_as_bytes%1#0 0'
debug: Replaced main_after_for@87.ops[14]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_after_for@87.ops[9]: 'l-store-copy val_as_bytes%2#0 1'
debug: Replaced main_after_for@87.ops[20]: 'v-load val_as_bytes%2#0' with 'l-load val_as_bytes%2#0'
debug: Inserted main_after_for@87.ops[2]: 'l-store-copy val_as_bytes%0#0 0'
debug: Replaced main_after_for@87.ops[15]: 'v-load val_as_bytes%0#0' with 'l-load val_as_bytes%0#0'
debug: Inserted main_after_for@87.ops[14]: 'l-store-copy val_as_bytes%3#0 3'
debug: Replaced main_after_for@87.ops[27]: 'v-load val_as_bytes%3#0' with 'l-load val_as_bytes%3#0'
debug: Inserted main_test_uint64_return_route@14.ops[1]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_test_uint64_return_route@14.ops[3]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_test_uint64_return_route@14.ops[5]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_test_uint64_return_route@14.ops[7]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_test_uint64_return_route@14.ops[10]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_test_uint64_return_route@14.ops[12]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main_test_uint64_return_route@14.ops[15]: 'l-store-copy reinterpret_bytes[8]%2#0 0'
debug: Replaced main_test_uint64_return_route@14.ops[17]: 'v-load reinterpret_bytes[8]%2#0' with 'l-load reinterpret_bytes[8]%2#0'
debug: Inserted main_for_header@65.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@65.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@66.ops[9]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@66.ops[11]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@66.ops[13]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_for_body@66.ops[15]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_for_body@66.ops[18]: 'l-store-copy len_%1#0 0'
debug: Replaced main_for_body@66.ops[20]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_for_body@66.ops[22]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_for_body@66.ops[24]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_for_body@66.ops[26]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_for_body@66.ops[28]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_for_body@66.ops[5]: 'l-store-copy array%sub_item%40#1 0'
debug: Replaced main_for_body@66.ops[8]: 'v-load array%sub_item%40#1' with 'l-load array%sub_item%40#1'
debug: Inserted main_for_body@66.ops[2]: 'l-store-copy expr_value_trimmed%1#3 0'
debug: Replaced main_for_body@66.ops[8]: 'v-load expr_value_trimmed%1#3' with 'l-load expr_value_trimmed%1#3'
debug: Inserted main_for_body@66.ops[14]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@66.ops[32]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@66.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@66.ops[36]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@67.ops[3]: 'l-store-copy tmp%58#0 0'
debug: Replaced main_after_for@67.ops[5]: 'v-load tmp%58#0' with 'l-load tmp%58#0'
debug: Inserted main_after_for@67.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@67.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bool_return_route@15.ops[1]: 'l-store-copy tmp%59#0 0'
debug: Replaced main_test_bool_return_route@15.ops[3]: 'v-load tmp%59#0' with 'l-load tmp%59#0'
debug: Inserted main_test_bool_return_route@15.ops[5]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_test_bool_return_route@15.ops[7]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_test_bool_return_route@15.ops[10]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_test_bool_return_route@15.ops[12]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_test_bool_return_route@15.ops[15]: 'l-store-copy reinterpret_bytes[8]%3#0 0'
debug: Replaced main_test_bool_return_route@15.ops[17]: 'v-load reinterpret_bytes[8]%3#0' with 'l-load reinterpret_bytes[8]%3#0'
debug: Inserted main_for_header@60.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@60.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@61.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@61.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@61.ops[12]: 'l-store-copy encoded_bool%5#0 0'
debug: Replaced main_for_body@61.ops[15]: 'v-load encoded_bool%5#0' with 'l-load encoded_bool%5#0'
debug: Inserted main_for_body@61.ops[7]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_for_body@61.ops[11]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_for_body@61.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@61.ops[22]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@62.ops[3]: 'l-store-copy tmp%65#0 0'
debug: Replaced main_after_for@62.ops[5]: 'v-load tmp%65#0' with 'l-load tmp%65#0'
debug: Inserted main_after_for@62.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@62.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_tuple_return_route@16.ops[1]: 'l-store-copy tmp%66#0 0'
debug: Replaced main_test_tuple_return_route@16.ops[3]: 'v-load tmp%66#0' with 'l-load tmp%66#0'
debug: Inserted main_test_tuple_return_route@16.ops[5]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_test_tuple_return_route@16.ops[7]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_test_tuple_return_route@16.ops[10]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_test_tuple_return_route@16.ops[12]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_test_tuple_return_route@16.ops[15]: 'l-store-copy reinterpret_bytes[8]%4#0 0'
debug: Replaced main_test_tuple_return_route@16.ops[17]: 'v-load reinterpret_bytes[8]%4#0' with 'l-load reinterpret_bytes[8]%4#0'
debug: Inserted main_for_header@55.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@55.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@56.ops[6]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@56.ops[8]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@56.ops[14]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@56.ops[16]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@56.ops[30]: 'l-store-copy array%encoded%27#1 0'
debug: Replaced main_for_body@56.ops[32]: 'v-load array%encoded%27#1' with 'l-load array%encoded%27#1'
debug: Inserted main_for_body@56.ops[40]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@56.ops[42]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@56.ops[44]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_for_body@56.ops[46]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_for_body@56.ops[49]: 'l-store-copy len_%1#0 0'
debug: Replaced main_for_body@56.ops[51]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_for_body@56.ops[53]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_for_body@56.ops[55]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_for_body@56.ops[57]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_for_body@56.ops[59]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_for_body@56.ops[26]: 'l-store-copy array%encoded_bit%6#1 0'
debug: Replaced main_for_body@56.ops[29]: 'v-load array%encoded_bit%6#1' with 'l-load array%encoded_bit%6#1'
debug: Inserted main_for_body@56.ops[37]: 'l-store-copy array%sub_item%44#1 0'
debug: Replaced main_for_body@56.ops[40]: 'v-load array%sub_item%44#1' with 'l-load array%sub_item%44#1'
debug: Inserted main_for_body@56.ops[21]: 'l-store-copy array%sub_item%43#1 0'
debug: Replaced main_for_body@56.ops[29]: 'v-load array%sub_item%43#1' with 'l-load array%sub_item%43#1'
debug: Inserted main_for_body@56.ops[4]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@56.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@56.ops[13]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@56.ops[21]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@56.ops[11]: 'l-store-copy tmp%1#1 1'
debug: Replaced main_for_body@56.ops[28]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_for_body@56.ops[49]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_for_body@56.ops[67]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_for_body@56.ops[21]: 'l-store-copy tmp%3#1 2'
debug: Replaced main_for_body@56.ops[40]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@56.ops[2]: 'l-store-copy expr_value_trimmed%1#3 0'
debug: Replaced main_for_body@56.ops[45]: 'v-load expr_value_trimmed%1#3' with 'l-load expr_value_trimmed%1#3'
debug: Inserted main_for_body@56.ops[25]: 'l-store-copy i#0 3'
debug: Replaced main_for_body@56.ops[73]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@57.ops[3]: 'l-store-copy tmp%72#0 0'
debug: Replaced main_after_for@57.ops[5]: 'v-load tmp%72#0' with 'l-load tmp%72#0'
debug: Inserted main_after_for@57.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@57.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_tuple_return_route@17.ops[1]: 'l-store-copy tmp%73#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@17.ops[3]: 'v-load tmp%73#0' with 'l-load tmp%73#0'
debug: Inserted main_test_dynamic_tuple_return_route@17.ops[5]: 'l-store-copy tmp%74#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@17.ops[7]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted main_test_dynamic_tuple_return_route@17.ops[10]: 'l-store-copy tmp%75#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@17.ops[12]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted main_test_dynamic_tuple_return_route@17.ops[15]: 'l-store-copy reinterpret_bytes[8]%5#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@17.ops[17]: 'v-load reinterpret_bytes[8]%5#0' with 'l-load reinterpret_bytes[8]%5#0'
debug: Inserted main_for_header@50.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@50.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@51.ops[8]: 'l-store-copy length%1#0 0'
debug: Replaced main_for_body@51.ops[10]: 'v-load length%1#0' with 'l-load length%1#0'
debug: Inserted main_for_body@51.ops[12]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced main_for_body@51.ops[14]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted main_for_body@51.ops[16]: 'l-store-copy length_uint16%1#0 0'
debug: Replaced main_for_body@51.ops[18]: 'v-load length_uint16%1#0' with 'l-load length_uint16%1#0'
debug: Inserted main_for_body@51.ops[25]: 'l-store-copy encoded_tuple_buffer%6#0 0'
debug: Replaced main_for_body@51.ops[27]: 'v-load encoded_tuple_buffer%6#0' with 'l-load encoded_tuple_buffer%6#0'
debug: Inserted main_for_body@51.ops[30]: 'l-store-copy encoded_tuple_buffer%7#0 0'
debug: Replaced main_for_body@51.ops[33]: 'v-load encoded_tuple_buffer%7#0' with 'l-load encoded_tuple_buffer%7#0'
debug: Inserted main_for_body@51.ops[42]: 'l-store-copy l_head_and_tail%1#0 0'
debug: Replaced main_for_body@51.ops[45]: 'v-load l_head_and_tail%1#0' with 'l-load l_head_and_tail%1#0'
debug: Inserted main_for_body@51.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@51.ops[4]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@51.ops[3]: 'l-store-copy tmp%0#3 1'
debug: Replaced main_for_body@51.ops[8]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_for_body@51.ops[39]: 'l-store-copy arr#1 0'
debug: Replaced main_for_body@51.ops[43]: 'v-load arr#1' with 'l-load arr#1'
debug: Inserted main_for_body@51.ops[42]: 'l-store-copy l_count%1#0 1'
debug: Replaced main_for_body@51.ops[48]: 'v-load l_count%1#0' with 'l-load l_count%1#0'
debug: Inserted main_for_body@51.ops[23]: 'l-store-copy encoded_value%1#0 0'
debug: Replaced main_for_body@51.ops[31]: 'v-load encoded_value%1#0' with 'l-load encoded_value%1#0'
debug: Inserted main_for_body@51.ops[9]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_for_body@51.ops[22]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_for_body@51.ops[39]: 'l-store-copy result%3#0 0'
debug: Replaced main_for_body@51.ops[54]: 'v-load result%3#0' with 'l-load result%3#0'
debug: Inserted main_for_body@51.ops[7]: 'l-store-copy val_as_bytes%1#0 1'
debug: Replaced main_for_body@51.ops[27]: 'v-load val_as_bytes%1#0' with 'l-load val_as_bytes%1#0'
debug: Inserted main_for_body@51.ops[6]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@51.ops[59]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@52.ops[3]: 'l-store-copy tmp%79#0 0'
debug: Replaced main_after_for@52.ops[5]: 'v-load tmp%79#0' with 'l-load tmp%79#0'
debug: Inserted main_after_for@52.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@52.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[1]: 'l-store-copy tmp%80#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[3]: 'v-load tmp%80#0' with 'l-load tmp%80#0'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[5]: 'l-store-copy tmp%81#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[7]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[10]: 'l-store-copy tmp%82#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[12]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[17]: 'l-store-copy reinterpret_bytes[8]%6#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[19]: 'v-load reinterpret_bytes[8]%6#0' with 'l-load reinterpret_bytes[8]%6#0'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[24]: 'l-store-copy expr_value_trimmed%0#2 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[26]: 'v-load expr_value_trimmed%0#2' with 'l-load expr_value_trimmed%0#2'
debug: Inserted main_test_convert_to_array_and_back_route@18.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@18.ops[23]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_header@45.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@45.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@46.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@46.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@46.ops[11]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@46.ops[13]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@46.ops[27]: 'l-store-copy array%encoded%29#1 0'
debug: Replaced main_for_body@46.ops[29]: 'v-load array%encoded%29#1' with 'l-load array%encoded%29#1'
debug: Inserted main_for_body@46.ops[35]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_for_body@46.ops[37]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_for_body@46.ops[40]: 'l-store-copy array%array_contents%1#1 0'
debug: Replaced main_for_body@46.ops[42]: 'v-load array%array_contents%1#1' with 'l-load array%array_contents%1#1'
debug: Inserted main_for_body@46.ops[23]: 'l-store-copy array%encoded_bit%7#1 0'
debug: Replaced main_for_body@46.ops[26]: 'v-load array%encoded_bit%7#1' with 'l-load array%encoded_bit%7#1'
debug: Inserted main_for_body@46.ops[34]: 'l-store-copy array%sub_item%46#1 0'
debug: Replaced main_for_body@46.ops[40]: 'v-load array%sub_item%46#1' with 'l-load array%sub_item%46#1'
debug: Inserted main_for_body@46.ops[18]: 'l-store-copy array%sub_item%45#1 0'
debug: Replaced main_for_body@46.ops[26]: 'v-load array%sub_item%45#1' with 'l-load array%sub_item%45#1'
debug: Inserted main_for_body@46.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@46.ops[9]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@46.ops[10]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@46.ops[18]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@46.ops[8]: 'l-store-copy tmp%1#1 1'
debug: Replaced main_for_body@46.ops[25]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_for_body@46.ops[18]: 'l-store-copy tmp%3#1 2'
debug: Replaced main_for_body@46.ops[37]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@46.ops[21]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@46.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@47.ops[1]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced main_after_for@47.ops[3]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted main_after_for@47.ops[5]: 'l-store-copy byte_len%0#2 0'
debug: Replaced main_after_for@47.ops[7]: 'v-load byte_len%0#2' with 'l-load byte_len%0#2'
debug: Inserted main_after_for@47.ops[10]: 'l-store-copy len_%0#2 0'
debug: Replaced main_after_for@47.ops[12]: 'v-load len_%0#2' with 'l-load len_%0#2'
debug: Inserted main_after_for@47.ops[14]: 'l-store-copy as_bytes%0#2 0'
debug: Replaced main_after_for@47.ops[16]: 'v-load as_bytes%0#2' with 'l-load as_bytes%0#2'
debug: Inserted main_after_for@47.ops[18]: 'l-store-copy len_16_bit%0#2 0'
debug: Replaced main_after_for@47.ops[20]: 'v-load len_16_bit%0#2' with 'l-load len_16_bit%0#2'
debug: Inserted main_after_for@47.ops[27]: 'l-store-copy tmp%86#0 0'
debug: Replaced main_after_for@47.ops[29]: 'v-load tmp%86#0' with 'l-load tmp%86#0'
debug: Inserted main_after_for@47.ops[32]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@47.ops[34]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@47.ops[23]: 'l-store-copy concat_result%0#0 0'
debug: Replaced main_after_for@47.ops[26]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted main_after_for@47.ops[4]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced main_after_for@47.ops[22]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[1]: 'l-store-copy tmp%87#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[3]: 'v-load tmp%87#0' with 'l-load tmp%87#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[5]: 'l-store-copy tmp%88#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[7]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[10]: 'l-store-copy tmp%89#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[12]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[19]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[21]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[23]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[25]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[28]: 'l-store-copy len_%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[30]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[32]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[34]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[36]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[38]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[45]: 'l-store-copy tmp%92#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[47]: 'v-load tmp%92#0' with 'l-load tmp%92#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[50]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[52]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[15]: 'l-store-copy arg#1 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[18]: 'v-load arg#1' with 'l-load arg#1'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[42]: 'l-store-copy result#2 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[45]: 'v-load result#2' with 'l-load result#2'
debug: Inserted main_test_concat_with_arc4_tuple_route@19.ops[23]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@19.ops[41]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[1]: 'l-store-copy tmp%93#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[3]: 'v-load tmp%93#0' with 'l-load tmp%93#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[5]: 'l-store-copy tmp%94#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[7]: 'v-load tmp%94#0' with 'l-load tmp%94#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[10]: 'l-store-copy tmp%95#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[12]: 'v-load tmp%95#0' with 'l-load tmp%95#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[15]: 'l-store-copy reinterpret_bytes[16]%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[17]: 'v-load reinterpret_bytes[16]%1#0' with 'l-load reinterpret_bytes[16]%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[30]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[32]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[34]: 'l-store-copy byte_len%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[36]: 'v-load byte_len%1#0' with 'l-load byte_len%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[39]: 'l-store-copy len_%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[41]: 'v-load len_%1#0' with 'l-load len_%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[43]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[45]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[47]: 'l-store-copy len_16_bit%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[49]: 'v-load len_16_bit%1#0' with 'l-load len_16_bit%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[56]: 'l-store-copy tmp%98#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[58]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[61]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[63]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[22]: 'l-store-copy arg.1#1 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[25]: 'v-load arg.1#1' with 'l-load arg.1#1'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[27]: 'l-store-copy array%data%24#1 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[30]: 'v-load array%data%24#1' with 'l-load array%data%24#1'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[54]: 'l-store-copy result#2 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[57]: 'v-load result#2' with 'l-load result#2'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[18]: 'l-store-copy reinterpret_bytes[16]%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[21]: 'v-load reinterpret_bytes[16]%1#0' with 'l-load reinterpret_bytes[16]%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[20]: 'l-store-copy arg.0#1 1'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[26]: 'v-load arg.0#1' with 'l-load arg.0#1'
debug: Inserted main_test_concat_with_native_tuple_route@20.ops[37]: 'l-store-copy concatenated%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@20.ops[55]: 'v-load concatenated%1#0' with 'l-load concatenated%1#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[1]: 'l-store-copy tmp%99#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[3]: 'v-load tmp%99#0' with 'l-load tmp%99#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[5]: 'l-store-copy tmp%100#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[7]: 'v-load tmp%100#0' with 'l-load tmp%100#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[10]: 'l-store-copy tmp%101#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[12]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[37]: 'l-store-copy tmp%105#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[39]: 'v-load tmp%105#0' with 'l-load tmp%105#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[42]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[44]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[28]: 'l-store-copy data%2#1 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[31]: 'v-load data%2#1' with 'l-load data%2#1'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[34]: 'l-store-copy result#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[37]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[22]: 'l-store-copy arg#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[25]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[24]: 'l-store-copy total_length%0#0 1'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[28]: 'v-load total_length%0#0' with 'l-load total_length%0#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[15]: 'l-store-copy arg#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[22]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@21.ops[21]: 'l-store-copy prefix#0 1'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@21.ops[34]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[1]: 'l-store-copy tmp%106#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[3]: 'v-load tmp%106#0' with 'l-load tmp%106#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[5]: 'l-store-copy tmp%107#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[7]: 'v-load tmp%107#0' with 'l-load tmp%107#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[10]: 'l-store-copy tmp%108#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[12]: 'v-load tmp%108#0' with 'l-load tmp%108#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[15]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[17]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[55]: 'l-store-copy tmp%112#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[57]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[60]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[62]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[46]: 'l-store-copy data%3#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[49]: 'v-load data%3#0' with 'l-load data%3#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[52]: 'l-store-copy result#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[55]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[24]: 'l-store-copy item_end_offset%0#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[28]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[32]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[35]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[34]: 'l-store-copy item_end_offset%1#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[38]: 'v-load item_end_offset%1#0' with 'l-load item_end_offset%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[18]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[22]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[23]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[28]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[29]: 'l-store-copy tmp%110#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[34]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[48]: 'l-store-copy prefix#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[55]: 'v-load prefix#0' with 'l-load prefix#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[21]: 'l-store-copy item_start_offset%0#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[31]: 'v-load item_start_offset%0#0' with 'l-load item_start_offset%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[33]: 'l-store-copy item_end_offset%0#0 3'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[42]: 'v-load item_end_offset%0#0' with 'l-load item_end_offset%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[45]: 'l-store-copy arg.1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[54]: 'v-load arg.1#0' with 'l-load arg.1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@22.ops[35]: 'l-store-copy arg.0#0 2'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@22.ops[54]: 'v-load arg.0#0' with 'l-load arg.0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[1]: 'l-store-copy tmp%113#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[3]: 'v-load tmp%113#0' with 'l-load tmp%113#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[5]: 'l-store-copy tmp%114#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[7]: 'v-load tmp%114#0' with 'l-load tmp%114#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[10]: 'l-store-copy tmp%115#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[12]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[41]: 'l-store-copy tmp%118#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[43]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[46]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[48]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[37]: 'l-store-copy concat_result%0#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[40]: 'v-load concat_result%0#0' with 'l-load concat_result%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[15]: 'l-store-copy imm1#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[19]: 'v-load imm1#0' with 'l-load imm1#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[20]: 'l-store-copy imm1#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[24]: 'v-load imm1#0' with 'l-load imm1#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[28]: 'l-store-copy imm2#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[32]: 'v-load imm2#0' with 'l-load imm2#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[34]: 'l-store-copy r_head_and_tail%0#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[39]: 'v-load r_head_and_tail%0#0' with 'l-load r_head_and_tail%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[31]: 'l-store-copy r_count%0#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[39]: 'v-load r_count%0#0' with 'l-load r_count%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[18]: 'l-store-copy imm2#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[28]: 'v-load imm2#0' with 'l-load imm2#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[27]: 'l-store-copy l_head_and_tail%0#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[40]: 'v-load l_head_and_tail%0#0' with 'l-load l_head_and_tail%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@23.ops[24]: 'l-store-copy l_count%0#0 2'
debug: Replaced main_test_concat_immutable_dynamic_route@23.ops[40]: 'v-load l_count%0#0' with 'l-load l_count%0#0'
debug: Inserted main_bare_routing@26.ops[1]: 'l-store-copy tmp%119#0 0'
debug: Replaced main_bare_routing@26.ops[3]: 'v-load tmp%119#0' with 'l-load tmp%119#0'
debug: Inserted main___algopy_default_create@27.ops[1]: 'l-store-copy tmp%120#0 0'
debug: Replaced main___algopy_default_create@27.ops[3]: 'v-load tmp%120#0' with 'l-load tmp%120#0'
debug: Inserted main___algopy_default_create@27.ops[5]: 'l-store-copy tmp%121#0 0'
debug: Replaced main___algopy_default_create@27.ops[7]: 'v-load tmp%121#0' with 'l-load tmp%121#0'
debug: Inserted main___algopy_default_create@27.ops[10]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@27.ops[12]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@30.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@30.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[20]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[22]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[24]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[26]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[19]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[30]: 'l-store-copy item_location#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[33]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[41]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[44]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[33]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[38]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[35]: 'l-store-copy item_location#0 2'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[41]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[38]: 'l-store-copy popped#0 2'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[46]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[24]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[33]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[16]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[18]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[23]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[26]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[25]: 'l-store-copy tmp%0#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[29]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[19]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[23]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[13]: 'l-store-copy popped_header_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[21]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[23]: 'l-store-copy popped_offset#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[31]: 'v-load popped_offset#0' with 'l-load popped_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[5]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[8]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[10]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[2]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[4]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[6]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[8]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[15]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[18]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[21]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[26]: 'l-store-copy updated#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[29]: 'v-load updated#0' with 'l-load updated#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[24]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[26]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[33]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[35]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[44]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[48]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits_block@0.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits_block@0.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[12]: 'l-store-copy tmp%0#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[20]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[22]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[33]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[35]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[53]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[55]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[37]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[40]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[50]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[53]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[45]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[49]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[65]: 'l-store-copy tail_offset#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[69]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[10]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[30]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[41]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[9]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[20]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[19]: 'l-store-copy header_end#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[30]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[46]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[58]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[31]: 'l-store-copy header_end#0 2'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[54]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[22]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[69]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[2]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[4]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[11]: 'l-store-copy array_head_and_tail#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[13]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'l-store-copy tmp%6#1 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[18]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[21]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[24]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[6]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[10]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'l-store-copy tail_offset#1 1'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[25]: 'v-load tail_offset#1' with 'l-load tail_offset#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[1]: 'l-store-copy tail_offset#1 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'v-load tail_offset#1' with 'l-load tail_offset#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[11]: 'l-store-copy head_offset#0 3'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[31]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_after_for@5.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_after_for@5.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'l-store-copy tmp%19#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[21]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[34]: 'l-store-copy tmp%18#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[29]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted times_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced times_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[9]: 'l-store-copy concatenated%0#0 0'
debug: Replaced add_x_for_body@2.ops[11]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted add_x_for_body@2.ops[13]: 'l-store-copy byte_len%0#0 0'
debug: Replaced add_x_for_body@2.ops[15]: 'v-load byte_len%0#0' with 'l-load byte_len%0#0'
debug: Inserted add_x_for_body@2.ops[18]: 'l-store-copy len_%0#0 0'
debug: Replaced add_x_for_body@2.ops[20]: 'v-load len_%0#0' with 'l-load len_%0#0'
debug: Inserted add_x_for_body@2.ops[22]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[24]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[26]: 'l-store-copy len_16_bit%0#0 0'
debug: Replaced add_x_for_body@2.ops[28]: 'v-load len_16_bit%0#0' with 'l-load len_16_bit%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy array%sub_item%0#1 0'
debug: Replaced add_x_for_body@2.ops[8]: 'v-load array%sub_item%0#1' with 'l-load array%sub_item%0#1'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy expr_value_trimmed%0#0 0'
debug: Replaced add_x_for_body@2.ops[8]: 'v-load expr_value_trimmed%0#0' with 'l-load expr_value_trimmed%0#0'
debug: Inserted add_x_for_body@2.ops[14]: 'l-store-copy concatenated%0#0 0'
debug: Replaced add_x_for_body@2.ops[32]: 'v-load concatenated%0#0' with 'l-load concatenated%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy i#0 1'
debug: Replaced add_x_for_body@2.ops[36]: 'v-load i#0' with 'l-load i#0'
debug: Found 55 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_log_route@9 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_emit_route@10 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_concat_with_arc4_tuple_route@19 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_concat_with_native_tuple_route@20 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_dynamic_concat_with_arc4_tuple_route@21 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_dynamic_concat_with_native_tuple_route@22 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_test_concat_immutable_dynamic_route@23 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main___algopy_default_create@27 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_if_else@30 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@47 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@52 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@57 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@62 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@67 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@87 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@92 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@106 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@118 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@126 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@131 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@136 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_if_else@151 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: shared x-stack for main_after_for@156 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31: tmp%0#0
debug: Found 2 edge set/s for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: Found 2 edge set/s for _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Found 4 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Found 2 edge set/s for test_cases.array.immutable.times
debug: Found 2 edge set/s for test_cases.array.immutable.add_x
debug: algopy.arc4.ARC4Contract.approval_program f-stack entry: ['arr#0', 'arr#1', 'arr#10', 'arr#13', 'arr#32', 'arr#7', 'arr1#0', 'arr2#0', 'arr2#1', 'arr3#0', 'arr4#0', 'arr7#0', 'arr8#0', 'arr9#0', 'expr_value_trimmed%1#3', 'extra_arr#0', 'inner_arr#0', 'slot%0', 'totals#0', '_i#0', 'append#0', 'arr_to_add#0', 'array_length#0', 'array_length%0#0', 'array_length%0#2', 'array_length%1#0', 'array_length%2#0', 'array_length%3#0', 'i#0', 'idx#0', 'item_index_internal%0#0', 'item_index_internal%0#6', 'item_index_internal%1#0', 'item_index_internal%2#0', 'j#0', 'length#0', 'sum1#0', 'sum2#0', 'sum2#10', 'sum3#0', 'sum3#15', 'sum4#0', 'tmp%4#2', 'total#0', 'tup.baz#0']
debug: algopy.arc4.ARC4Contract.approval_program f-stack on first store: []
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack on first store: ['length_minus_1#0', 'popped_header_offset#0', 'head_and_tail#0', 'popped_offset#0', 'popped#0', 'new_head#0', 'head_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: _puya_lib.arc4.dynamic_array_concat_byte_length_head f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_concat_byte_length_head f-stack on first store: ['tmp%2#0', 'array_head_and_tail#0', 'tail_offset#0', 'head_offset#0', 'tail_offset#1']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['item_offset_adjustment#2']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%0#0', 'head_offset#0']
debug: test_cases.array.immutable.times f-stack entry: []
debug: test_cases.array.immutable.times f-stack on first store: ['result#0', '_i#0']
debug: test_cases.array.immutable.add_x f-stack entry: []
debug: test_cases.array.immutable.add_x f-stack on first store: ['i#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: Replaced 'Uncover(source_location=array/immutable.py:74, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('tmp%110#0',)), StackDefine(local_ids=('tmp%110#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:74, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('item_end_offset%0#0',)), StackDefine(local_ids=('item_end_offset%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:74, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('item_end_offset%1#0',)), StackDefine(local_ids=('item_end_offset%1#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:317, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('array_head_and_tail%3#0',)), StackDefine(local_ids=('array_head_and_tail%3#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:317, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('item_offset%2#0',)), StackDefine(local_ids=('item_offset%2#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:317, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('end_offset%0#0',)), StackDefine(local_ids=('end_offset%0#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:197:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('array_head_and_tail%0#0',)), StackDefine(local_ids=('array_head_and_tail%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:197:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('item_offset%0#0',)), StackDefine(local_ids=('item_offset%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:197:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('end_offset%0#0',)), StackDefine(local_ids=('end_offset%0#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:178:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('array_head_and_tail%0#0',)), StackDefine(local_ids=('array_head_and_tail%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:178:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('item_offset%0#0',)), StackDefine(local_ids=('item_offset%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:178:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('end_offset%0#0',)), StackDefine(local_ids=('end_offset%0#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
array/immutable.py:401 debug: optimizing TEAL subroutine ops test_cases.array.immutable.times(n: uint64) -> bytes:
array/immutable.py:409 debug: optimizing TEAL subroutine ops test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@31 into main_after_if_else@30
debug: inlining single reference block main_for_body@46 into main_for_header@45
debug: inlining single reference block main_for_body@51 into main_for_header@50
debug: inlining single reference block main_for_body@56 into main_for_header@55
debug: inlining single reference block main_for_body@61 into main_for_header@60
debug: inlining single reference block main_for_body@66 into main_for_header@65
debug: inlining single reference block main_for_body@71 into main_for_header@70
debug: inlining single reference block main_for_body@74 into main_for_header@73
debug: inlining single reference block main_if_body@75 into main_for_header@73
debug: inlining single reference block main_for_body@79 into main_for_header@78
debug: inlining single reference block main_if_body@80 into main_for_header@78
debug: inlining single reference block main_if_body@82 into main_after_if_else@81
debug: inlining single reference block main_for_body@86 into main_for_header@85
debug: inlining single reference block main_for_body@91 into main_for_header@90
debug: inlining single reference block main_for_body@96 into main_for_header@95
debug: inlining single reference block main_for_body@98 into main_for_header@97
debug: inlining single reference block main_for_body@102 into main_for_header@101
debug: inlining single reference block main_for_body@104 into main_for_header@103
debug: inlining single reference block main_for_body@114 into main_for_header@113
debug: inlining single reference block main_for_body@117 into main_for_header@116
debug: inlining single reference block main_for_body@122 into main_for_header@121
debug: inlining single reference block main_for_body@125 into main_for_header@124
debug: inlining single reference block main_for_body@130 into main_for_header@129
debug: inlining single reference block main_for_body@135 into main_for_header@134
debug: inlining single reference block main_for_body@140 into main_for_header@139
debug: inlining single reference block main_if_body@142 into main_after_for@141
debug: inlining single reference block main_if_body@144 into main_after_if_else@143
debug: inlining single reference block main_if_body@146 into main_after_if_else@145
debug: inlining single reference block main_if_body@148 into main_after_if_else@147
debug: inlining single reference block main_if_body@150 into main_after_if_else@149
debug: inlining single reference block main_for_body@155 into main_for_header@154
debug: inlining single reference block main___algopy_default_create@27 into main_bare_routing@26
debug: removing explicit jump to fall-through block main_after_if_else@30
debug: removing explicit jump to fall-through block main_for_header@45
debug: removing explicit jump to fall-through block main_for_header@50
debug: removing explicit jump to fall-through block main_for_header@55
debug: removing explicit jump to fall-through block main_for_header@60
debug: removing explicit jump to fall-through block main_for_header@65
debug: removing explicit jump to fall-through block main_for_header@70
debug: removing explicit jump to fall-through block main_for_header@73
debug: removing explicit jump to fall-through block main_after_if_else@76
debug: removing explicit jump to fall-through block main_for_header@78
debug: removing explicit jump to fall-through block main_after_if_else@81
debug: removing explicit jump to fall-through block main_after_if_else@83
debug: removing explicit jump to fall-through block main_for_header@85
debug: removing explicit jump to fall-through block main_for_header@90
debug: removing explicit jump to fall-through block main_for_header@95
debug: removing explicit jump to fall-through block main_for_header@97
debug: removing explicit jump to fall-through block main_for_header@101
debug: removing explicit jump to fall-through block main_for_header@103
debug: removing explicit jump to fall-through block main_for_header@113
debug: removing explicit jump to fall-through block main_for_header@116
debug: removing explicit jump to fall-through block main_for_header@121
debug: removing explicit jump to fall-through block main_for_header@124
debug: removing explicit jump to fall-through block main_for_header@129
debug: removing explicit jump to fall-through block main_for_header@134
debug: removing explicit jump to fall-through block main_for_header@139
debug: removing explicit jump to fall-through block main_after_if_else@143
debug: removing explicit jump to fall-through block main_after_if_else@145
debug: removing explicit jump to fall-through block main_after_if_else@147
debug: removing explicit jump to fall-through block main_after_if_else@149
debug: removing explicit jump to fall-through block main_after_if_else@151
debug: removing explicit jump to fall-through block main_for_header@154
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
debug: inlining single reference block dynamic_array_pop_fixed_size_block@0 into dynamic_array_pop_fixed_size
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
debug: inlining single reference block dynamic_array_pop_dynamic_element_block@0 into dynamic_array_pop_dynamic_element
debug: inlining single reference block dynamic_array_pop_dynamic_element_for_body@2 into dynamic_array_pop_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_pop_dynamic_element_for_header@1
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_bits_block@0 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_if_body@1 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_while_body@4 into dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_byte_length_head_block@0 into dynamic_array_concat_byte_length_head
debug: inlining single reference block dynamic_array_concat_byte_length_head_for_body@3 into dynamic_array_concat_byte_length_head_for_header@2
debug: removing explicit jump to fall-through block dynamic_array_concat_byte_length_head_for_header@2
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: inlining single reference block dynamic_array_concat_dynamic_element_block@0 into dynamic_array_concat_dynamic_element
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@2 into dynamic_array_concat_dynamic_element_for_header@1
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@6 into dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
array/immutable.py:401 debug: optimizing TEAL subroutine blocks test_cases.array.immutable.times(n: uint64) -> bytes:
debug: inlining single reference block times_block@0 into times
debug: inlining single reference block times_for_body@2 into times_for_header@1
debug: removing explicit jump to fall-through block times_for_header@1
array/immutable.py:409 debug: optimizing TEAL subroutine blocks test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
debug: inlining single reference block add_x_block@0 into add_x
debug: inlining single reference block add_x_for_body@2 into add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_header@1
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing array/out_O2/AbiCallContract.approval.teal
info: Writing array/out_O2/AbiCallContract.clear.teal
info: Writing array/out_O2/AbiCallContract.approval.bin
info: Writing array/out_O2/AbiCallContract.clear.bin
info: Writing array/out_O2/AbiCallContract.approval.puya.map
info: Writing array/out_O2/AbiCallContract.clear.puya.map
info: Writing array/out_O2/Contract.approval.teal
info: Writing array/out_O2/Contract.clear.teal
info: Writing array/out_O2/Contract.approval.bin
info: Writing array/out_O2/Contract.clear.bin
info: Writing array/out_O2/Contract.approval.puya.map
info: Writing array/out_O2/Contract.clear.puya.map
info: Writing array/out_O2/StaticSizeContract.approval.teal
info: Writing array/out_O2/StaticSizeContract.clear.teal
info: Writing array/out_O2/StaticSizeContract.approval.bin
info: Writing array/out_O2/StaticSizeContract.clear.bin
info: Writing array/out_O2/StaticSizeContract.approval.puya.map
info: Writing array/out_O2/StaticSizeContract.clear.puya.map
info: Writing array/out_O2/ImmutableArrayContract.approval.teal
info: Writing array/out_O2/ImmutableArrayContract.clear.teal
info: Writing array/out_O2/ImmutableArrayContract.approval.bin
info: Writing array/out_O2/ImmutableArrayContract.clear.bin
info: Writing array/out_O2/ImmutableArrayContract.approval.puya.map
info: Writing array/out_O2/ImmutableArrayContract.clear.puya.map