debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=False, output_arc56=False, output_ssa_ir=False, output_optimization_ir=False, output_destructured_ir=True, output_memory_ir=False, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=0, optimization_level=2, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['array'], resource_encoding='value', output_awst=False, output_awst_json=False, output_source_annotations_json=False, output_client=False, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
array/unused_opt_allowed.py:25:9 warning: expression result is ignored
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.quicksort_window
debug: Sealing block@0
debug: Terminated block@0
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let left#1: uint64 = undefined while trying to resolve 'left' in block@3
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let pivot#1: uint64 = undefined while trying to resolve 'pivot' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#2 <- block@2, arr#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#2 <- block@2, arr#1 <- block@4)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#2 <- block@2, arr#1 <- block@4) (arr#1) with arr#2 in current definition for 2 blocks
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let left#3: uint64 = undefined while trying to resolve 'left' in block@1
debug: Added left#3 to Phi node: let left#1: uint64 = φ(left#3 <- block@2) in block@2
debug: Added left#2 to Phi node: let left#1: uint64 = φ(left#3 <- block@2, left#2 <- block@4) in block@4
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let pivot#2: uint64 = undefined while trying to resolve 'pivot' in block@1
debug: Added pivot#2 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2) in block@2
debug: Added pivot#1 to Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2
debug: Deleting Phi assignment: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4)
debug: Replaced trivial Phi node: let pivot#1: uint64 = φ(pivot#2 <- block@2, pivot#1 <- block@4) (pivot#1) with pivot#2 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Looking for 'pivot' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let pivot#3: uint64 = undefined while trying to resolve 'pivot' in block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let arr#3: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@6
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@6
debug: Created Phi assignment: let right#1: uint64 = undefined while trying to resolve 'right' in block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@6
debug: Added pivot#2 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5) in block@5
debug: Added pivot#3 to Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2
debug: Deleting Phi assignment: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9)
debug: Replaced trivial Phi node: let pivot#3: uint64 = φ(pivot#2 <- block@5, pivot#3 <- block@9) (pivot#3) with pivot#2 in current definition for 3 blocks
debug: Added arr#2 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@5) in block@5
debug: Added arr#3 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@5, arr#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@5, arr#3 <- block@9)
debug: Replaced trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@5, arr#3 <- block@9) (arr#3) with arr#2 in current definition for 3 blocks
debug: Created Phi assignment: let right#3: uint64 = undefined while trying to resolve 'right' in block@3
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let right#4: uint64 = undefined while trying to resolve 'right' in block@1
debug: Added right#4 to Phi node: let right#3: uint64 = φ(right#4 <- block@2) in block@2
debug: Added right#3 to Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4
debug: Deleting Phi assignment: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4)
debug: Replaced trivial Phi node: let right#3: uint64 = φ(right#4 <- block@2, right#3 <- block@4) (right#3) with right#4 in current definition for 2 blocks
debug: Added right#4 to Phi node: let right#1: uint64 = φ(right#4 <- block@5) in block@5
debug: Added right#2 to Phi node: let right#1: uint64 = φ(right#4 <- block@5, right#2 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let left#4: uint64 = undefined while trying to resolve 'left' in block@6
debug: Added left#1 to Phi node: let left#4: uint64 = φ(left#1 <- block@5) in block@5
debug: Added left#4 to Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1
debug: Deleting Phi assignment: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9)
debug: Replaced trivial Phi node: let left#4: uint64 = φ(left#1 <- block@5, left#4 <- block@9) (left#4) with left#1 in current definition for 3 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Terminated block@21
debug: Sealing block@1
debug: Added arr#0 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#5 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#5 <- block@14) in block@14
debug: Added left#0 to Phi node: let left#3: uint64 = φ(left#0 <- block@0) in block@0
debug: Added left#5 to Phi node: let left#3: uint64 = φ(left#0 <- block@0, left#5 <- block@14) in block@14
debug: Added pivot#0 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0) in block@0
debug: Added pivot#2 to Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0
debug: Deleting Phi assignment: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14)
debug: Replaced trivial Phi node: let pivot#2: uint64 = φ(pivot#0 <- block@0, pivot#2 <- block@14) (pivot#2) with pivot#0 in current definition for 12 blocks
debug: Added right#0 to Phi node: let right#4: uint64 = φ(right#0 <- block@0) in block@0
debug: Added right#5 to Phi node: let right#4: uint64 = φ(right#0 <- block@0, right#5 <- block@14) in block@14
debug: Sealing block@22
debug: Created Phi assignment: let window_left#1: uint64 = undefined while trying to resolve 'window_left' in block@22
debug: Created Phi assignment: let window_left#2: uint64 = undefined while trying to resolve 'window_left' in block@1
debug: Added window_left#0 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0) in block@0
debug: Created Phi assignment: let window_left#3: uint64 = undefined while trying to resolve 'window_left' in block@6
debug: Created Phi assignment: let window_left#4: uint64 = undefined while trying to resolve 'window_left' in block@3
debug: Added window_left#2 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2) in block@2
debug: Added window_left#4 to Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2
debug: Deleting Phi assignment: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4)
debug: Replaced trivial Phi node: let window_left#4: uint64 = φ(window_left#2 <- block@2, window_left#4 <- block@4) (window_left#4) with window_left#2 in current definition for 2 blocks
debug: Added window_left#2 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5) in block@5
debug: Added window_left#3 to Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2
debug: Deleting Phi assignment: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9)
debug: Replaced trivial Phi node: let window_left#3: uint64 = φ(window_left#2 <- block@5, window_left#3 <- block@9) (window_left#3) with window_left#2 in current definition for 3 blocks
debug: Added window_left#2 to Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0
debug: Deleting Phi assignment: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14)
debug: Replaced trivial Phi node: let window_left#2: uint64 = φ(window_left#0 <- block@0, window_left#2 <- block@14) (window_left#2) with window_left#0 in current definition for 12 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1) in block@1
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12) in block@12
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15) in block@15
debug: Created Phi assignment: let window_left#5: uint64 = undefined while trying to resolve 'window_left' in block@19
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17) in block@17
debug: Added window_left#0 to Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0
debug: Deleting Phi assignment: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18)
debug: Replaced trivial Phi node: let window_left#5: uint64 = φ(window_left#0 <- block@17, window_left#0 <- block@18) (window_left#5) with window_left#0 in current definition for 1 blocks
debug: Added window_left#0 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19) in block@19
debug: Looking for 'window_left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_left#6: uint64 = undefined while trying to resolve 'window_left' in block@21
debug: Added window_left#6 to Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#6 <- block@21) in block@21
debug: Created Phi assignment: let right#7: uint64 = undefined while trying to resolve 'right' in block@22
debug: Added right#4 to Phi node: let right#7: uint64 = φ(right#4 <- block@1) in block@1
debug: Added right#1 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12) in block@12
debug: Added right#5 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15) in block@15
debug: Created Phi assignment: let right#8: uint64 = undefined while trying to resolve 'right' in block@19
debug: Added right#1 to Phi node: let right#8: uint64 = φ(right#1 <- block@17) in block@17
debug: Added right#6 to Phi node: let right#8: uint64 = φ(right#1 <- block@17, right#6 <- block@18) in block@18
debug: Added right#8 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19) in block@19
debug: Looking for 'right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let right#9: uint64 = undefined while trying to resolve 'right' in block@21
debug: Added right#9 to Phi node: let right#7: uint64 = φ(right#4 <- block@1, right#1 <- block@12, right#5 <- block@15, right#8 <- block@19, right#9 <- block@21) in block@21
debug: Terminated block@22
debug: Sealing block@23
debug: Created Phi assignment: let arr#6: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@22
debug: Added arr#2 to Phi node: let arr#6: Encoded(uint64[])* = φ(arr#2 <- block@1) in block@1
debug: Added arr#5 to Phi node: let arr#6: Encoded(uint64[])* = φ(arr#2 <- block@1, arr#5 <- block@12) in block@12
debug: Added arr#5 to Phi node: let arr#6: Encoded(uint64[])* = φ(arr#2 <- block@1, arr#5 <- block@12, arr#5 <- block@15) in block@15
debug: Created Phi assignment: let arr#7: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@19
debug: Added arr#2 to Phi node: let arr#7: Encoded(uint64[])* = φ(arr#2 <- block@17) in block@17
debug: Added arr#2 to Phi node: let arr#7: Encoded(uint64[])* = φ(arr#2 <- block@17, arr#2 <- block@18) in block@18
debug: Replacing trivial Phi node: let arr#7: Encoded(uint64[])* = φ(arr#2 <- block@17, arr#2 <- block@18) (arr#7) with arr#2
debug: Deleting Phi assignment: let arr#7: Encoded(uint64[])* = φ(arr#2 <- block@17, arr#2 <- block@18)
debug: Replaced trivial Phi node: let arr#7: Encoded(uint64[])* = φ(arr#2 <- block@17, arr#2 <- block@18) (arr#7) with arr#2 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#6: Encoded(uint64[])* = φ(arr#2 <- block@1, arr#5 <- block@12, arr#5 <- block@15, arr#2 <- block@19) in block@19
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let arr#8: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@21
debug: Added arr#8 to Phi node: let arr#6: Encoded(uint64[])* = φ(arr#2 <- block@1, arr#5 <- block@12, arr#5 <- block@15, arr#2 <- block@19, arr#8 <- block@21) in block@21
debug: Terminated block@23
debug: Sealing block@24
debug: Created Phi assignment: let left#7: uint64 = undefined while trying to resolve 'left' in block@24
debug: Created Phi assignment: let left#8: uint64 = undefined while trying to resolve 'left' in block@22
debug: Added left#3 to Phi node: let left#8: uint64 = φ(left#3 <- block@1) in block@1
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12) in block@12
debug: Added left#5 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15) in block@15
debug: Created Phi assignment: let left#9: uint64 = undefined while trying to resolve 'left' in block@19
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17) in block@17
debug: Added left#6 to Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) in block@18
debug: Replacing trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6
debug: Deleting Phi assignment: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18)
debug: Replaced trivial Phi node: let left#9: uint64 = φ(left#6 <- block@17, left#6 <- block@18) (left#9) with left#6 in current definition for 1 blocks
debug: Added left#6 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19) in block@19
debug: Looking for 'left' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let left#10: uint64 = undefined while trying to resolve 'left' in block@21
debug: Added left#10 to Phi node: let left#8: uint64 = φ(left#3 <- block@1, left#5 <- block@12, left#5 <- block@15, left#6 <- block@19, left#10 <- block@21) in block@21
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22) in block@22
debug: Added left#8 to Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) in block@23
debug: Replacing trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8
debug: Deleting Phi assignment: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23)
debug: Replaced trivial Phi node: let left#7: uint64 = φ(left#8 <- block@22, left#8 <- block@23) (left#7) with left#8 in current definition for 1 blocks
debug: Created Phi assignment: let window_right#1: uint64 = undefined while trying to resolve 'window_right' in block@24
debug: Created Phi assignment: let window_right#2: uint64 = undefined while trying to resolve 'window_right' in block@22
debug: Created Phi assignment: let window_right#3: uint64 = undefined while trying to resolve 'window_right' in block@1
debug: Added window_right#0 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0) in block@0
debug: Created Phi assignment: let window_right#4: uint64 = undefined while trying to resolve 'window_right' in block@6
debug: Created Phi assignment: let window_right#5: uint64 = undefined while trying to resolve 'window_right' in block@3
debug: Added window_right#3 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2) in block@2
debug: Added window_right#5 to Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) in block@4
debug: Replacing trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3
debug: Deleting Phi assignment: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4)
debug: Replaced trivial Phi node: let window_right#5: uint64 = φ(window_right#3 <- block@2, window_right#5 <- block@4) (window_right#5) with window_right#3 in current definition for 2 blocks
debug: Added window_right#3 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5) in block@5
debug: Added window_right#4 to Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) in block@9
debug: Replacing trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3
debug: Deleting Phi assignment: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9)
debug: Replaced trivial Phi node: let window_right#4: uint64 = φ(window_right#3 <- block@5, window_right#4 <- block@9) (window_right#4) with window_right#3 in current definition for 3 blocks
debug: Added window_right#3 to Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) in block@14
debug: Replacing trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0
debug: Deleting Phi assignment: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14)
debug: Replaced trivial Phi node: let window_right#3: uint64 = φ(window_right#0 <- block@0, window_right#3 <- block@14) (window_right#3) with window_right#0 in current definition for 12 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1) in block@1
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12) in block@12
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15) in block@15
debug: Created Phi assignment: let window_right#6: uint64 = undefined while trying to resolve 'window_right' in block@19
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17) in block@17
debug: Added window_right#0 to Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) in block@18
debug: Replacing trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0
debug: Deleting Phi assignment: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18)
debug: Replaced trivial Phi node: let window_right#6: uint64 = φ(window_right#0 <- block@17, window_right#0 <- block@18) (window_right#6) with window_right#0 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19) in block@19
debug: Looking for 'window_right' in an unsealed block creating an incomplete Phi: block@21
debug: Created Phi assignment: let window_right#7: uint64 = undefined while trying to resolve 'window_right' in block@21
debug: Added window_right#7 to Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#7 <- block@21) in block@21
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22) in block@22
debug: Added window_right#2 to Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) in block@23
debug: Replacing trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2
debug: Deleting Phi assignment: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23)
debug: Replaced trivial Phi node: let window_right#1: uint64 = φ(window_right#2 <- block@22, window_right#2 <- block@23) (window_right#1) with window_right#2 in current definition for 1 blocks
debug: Terminated block@24
debug: Sealing block@25
debug: Created Phi assignment: let arr#9: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@24
debug: Added arr#6 to Phi node: let arr#9: Encoded(uint64[])* = φ(arr#6 <- block@22) in block@22
debug: Added arr#6 to Phi node: let arr#9: Encoded(uint64[])* = φ(arr#6 <- block@22, arr#6 <- block@23) in block@23
debug: Replacing trivial Phi node: let arr#9: Encoded(uint64[])* = φ(arr#6 <- block@22, arr#6 <- block@23) (arr#9) with arr#6
debug: Deleting Phi assignment: let arr#9: Encoded(uint64[])* = φ(arr#6 <- block@22, arr#6 <- block@23)
debug: Replaced trivial Phi node: let arr#9: Encoded(uint64[])* = φ(arr#6 <- block@22, arr#6 <- block@23) (arr#9) with arr#6 in current definition for 1 blocks
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@21
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8) in block@8
debug: Added window_left#0 to Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0
debug: Deleting Phi assignment: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20)
debug: Replacing trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0
debug: Deleting Phi assignment: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21)
debug: Replaced trivial Phi node: let window_left#6: uint64 = φ(window_left#0 <- block@8, window_left#0 <- block@20) (window_left#6) with window_left#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_left#1: uint64 = φ(window_left#0 <- block@1, window_left#0 <- block@12, window_left#0 <- block@15, window_left#0 <- block@19, window_left#0 <- block@21) (window_left#1) with window_left#0 in current definition for 2 blocks
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8) in block@8
debug: Added right#1 to Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1
debug: Deleting Phi assignment: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20)
debug: Replaced trivial Phi node: let right#9: uint64 = φ(right#1 <- block@8, right#1 <- block@20) (right#9) with right#1 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#8: Encoded(uint64[])* = φ(arr#2 <- block@8) in block@8
debug: Added arr#2 to Phi node: let arr#8: Encoded(uint64[])* = φ(arr#2 <- block@8, arr#2 <- block@20) in block@20
debug: Replacing trivial Phi node: let arr#8: Encoded(uint64[])* = φ(arr#2 <- block@8, arr#2 <- block@20) (arr#8) with arr#2
debug: Deleting Phi assignment: let arr#8: Encoded(uint64[])* = φ(arr#2 <- block@8, arr#2 <- block@20)
debug: Replaced trivial Phi node: let arr#8: Encoded(uint64[])* = φ(arr#2 <- block@8, arr#2 <- block@20) (arr#8) with arr#2 in current definition for 1 blocks
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8) in block@8
debug: Added left#1 to Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) in block@20
debug: Replacing trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1
debug: Deleting Phi assignment: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20)
debug: Replaced trivial Phi node: let left#10: uint64 = φ(left#1 <- block@8, left#1 <- block@20) (left#10) with left#1 in current definition for 1 blocks
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8) in block@8
debug: Added window_right#0 to Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) in block@20
debug: Replacing trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0
debug: Deleting Phi assignment: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20)
debug: Replacing trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0
debug: Deleting Phi assignment: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21)
debug: Replaced trivial Phi node: let window_right#7: uint64 = φ(window_right#0 <- block@8, window_right#0 <- block@20) (window_right#7) with window_right#0 in current definition for 1 blocks
debug: Replaced trivial Phi node: let window_right#2: uint64 = φ(window_right#0 <- block@1, window_right#0 <- block@12, window_right#0 <- block@15, window_right#0 <- block@19, window_right#0 <- block@21) (window_right#2) with window_right#0 in current definition for 4 blocks
debug: Building IR for function test_cases.array.uint64.create_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.assert_last_is_zero
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.return_ref
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Looking for 'expected' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let expected#1: uint64 = undefined while trying to resolve 'expected' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Added expected#0 to Phi node: let expected#1: uint64 = φ(expected#0 <- block@0) in block@0
debug: Added expected#2 to Phi node: let expected#1: uint64 = φ(expected#0 <- block@0, expected#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.append_length_and_return
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.do_something_with_array
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.path_length
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'point_idx' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let point_idx#1: uint64 = undefined while trying to resolve 'point_idx' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = undefined while trying to resolve 'path' in block@1
debug: Looking for 'last_point.x' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.x#1: Encoded(uint64) = undefined while trying to resolve 'last_point.x' in block@1
debug: Looking for 'last_point.y' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.y#1: uint64 = undefined while trying to resolve 'last_point.y' in block@1
debug: Looking for 'last_point.other.a' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.a#1: uint64 = undefined while trying to resolve 'last_point.other.a' in block@1
debug: Looking for 'last_point.other.b' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.b#1: uint64 = undefined while trying to resolve 'last_point.other.b' in block@1
debug: Looking for 'last_point.other.c' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.c#1: account = undefined while trying to resolve 'last_point.other.c' in block@1
debug: Looking for 'last_point.other.d' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.d#1: Encoded(uint64,uint64) = undefined while trying to resolve 'last_point.other.d' in block@1
debug: Looking for 'last_point.other.e' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let last_point.other.e#1: biguint = undefined while trying to resolve 'last_point.other.e' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Created Phi assignment: let point.x#1: Encoded(uint64) = undefined while trying to resolve 'point.x' in block@5
debug: Added point.x#0 to Phi node: let point.x#1: Encoded(uint64) = φ(point.x#0 <- block@3) in block@3
debug: Added point.x#0 to Phi node: let point.x#1: Encoded(uint64) = φ(point.x#0 <- block@3, point.x#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.x#1: Encoded(uint64) = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0
debug: Deleting Phi assignment: let point.x#1: Encoded(uint64) = φ(point.x#0 <- block@3, point.x#0 <- block@4)
debug: Replaced trivial Phi node: let point.x#1: Encoded(uint64) = φ(point.x#0 <- block@3, point.x#0 <- block@4) (point.x#1) with point.x#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.y#1: uint64 = undefined while trying to resolve 'point.y' in block@5
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3) in block@3
debug: Added point.y#0 to Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0
debug: Deleting Phi assignment: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4)
debug: Replaced trivial Phi node: let point.y#1: uint64 = φ(point.y#0 <- block@3, point.y#0 <- block@4) (point.y#1) with point.y#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.a#1: uint64 = undefined while trying to resolve 'point.other.a' in block@5
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3) in block@3
debug: Added point.other.a#0 to Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0
debug: Deleting Phi assignment: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.a#1: uint64 = φ(point.other.a#0 <- block@3, point.other.a#0 <- block@4) (point.other.a#1) with point.other.a#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.b#1: uint64 = undefined while trying to resolve 'point.other.b' in block@5
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3) in block@3
debug: Added point.other.b#0 to Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0
debug: Deleting Phi assignment: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.b#1: uint64 = φ(point.other.b#0 <- block@3, point.other.b#0 <- block@4) (point.other.b#1) with point.other.b#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.c#1: account = undefined while trying to resolve 'point.other.c' in block@5
debug: Added point.other.c#0 to Phi node: let point.other.c#1: account = φ(point.other.c#0 <- block@3) in block@3
debug: Added point.other.c#0 to Phi node: let point.other.c#1: account = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.c#1: account = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0
debug: Deleting Phi assignment: let point.other.c#1: account = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.c#1: account = φ(point.other.c#0 <- block@3, point.other.c#0 <- block@4) (point.other.c#1) with point.other.c#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.d#1: Encoded(uint64,uint64) = undefined while trying to resolve 'point.other.d' in block@5
debug: Added point.other.d#0 to Phi node: let point.other.d#1: Encoded(uint64,uint64) = φ(point.other.d#0 <- block@3) in block@3
debug: Added point.other.d#0 to Phi node: let point.other.d#1: Encoded(uint64,uint64) = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.d#1: Encoded(uint64,uint64) = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0
debug: Deleting Phi assignment: let point.other.d#1: Encoded(uint64,uint64) = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.d#1: Encoded(uint64,uint64) = φ(point.other.d#0 <- block@3, point.other.d#0 <- block@4) (point.other.d#1) with point.other.d#0 in current definition for 1 blocks
debug: Created Phi assignment: let point.other.e#1: biguint = undefined while trying to resolve 'point.other.e' in block@5
debug: Added point.other.e#0 to Phi node: let point.other.e#1: biguint = φ(point.other.e#0 <- block@3) in block@3
debug: Added point.other.e#0 to Phi node: let point.other.e#1: biguint = φ(point.other.e#0 <- block@3, point.other.e#0 <- block@4) in block@4
debug: Replacing trivial Phi node: let point.other.e#1: biguint = φ(point.other.e#0 <- block@3, point.other.e#0 <- block@4) (point.other.e#1) with point.other.e#0
debug: Deleting Phi assignment: let point.other.e#1: biguint = φ(point.other.e#0 <- block@3, point.other.e#0 <- block@4)
debug: Replaced trivial Phi node: let point.other.e#1: biguint = φ(point.other.e#0 <- block@3, point.other.e#0 <- block@4) (point.other.e#1) with point.other.e#0 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.x#2: Encoded(uint64) = undefined while trying to resolve 'last_point.x' in block@5
debug: Added last_point.x#1 to Phi node: let last_point.x#2: Encoded(uint64) = φ(last_point.x#1 <- block@3) in block@3
debug: Added last_point.x#1 to Phi node: let last_point.x#2: Encoded(uint64) = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.x#2: Encoded(uint64) = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#2: Encoded(uint64) = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.x#2: Encoded(uint64) = φ(last_point.x#1 <- block@3, last_point.x#1 <- block@4) (last_point.x#2) with last_point.x#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.y#2: uint64 = undefined while trying to resolve 'last_point.y' in block@5
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3) in block@3
debug: Added last_point.y#1 to Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.y#2: uint64 = φ(last_point.y#1 <- block@3, last_point.y#1 <- block@4) (last_point.y#2) with last_point.y#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.a#2: uint64 = undefined while trying to resolve 'last_point.other.a' in block@5
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3) in block@3
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.a#2: uint64 = φ(last_point.other.a#1 <- block@3, last_point.other.a#1 <- block@4) (last_point.other.a#2) with last_point.other.a#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.b#2: uint64 = undefined while trying to resolve 'last_point.other.b' in block@5
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3) in block@3
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.b#2: uint64 = φ(last_point.other.b#1 <- block@3, last_point.other.b#1 <- block@4) (last_point.other.b#2) with last_point.other.b#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.c#2: account = undefined while trying to resolve 'last_point.other.c' in block@5
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: account = φ(last_point.other.c#1 <- block@3) in block@3
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#2: account = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.c#2: account = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#2: account = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.c#2: account = φ(last_point.other.c#1 <- block@3, last_point.other.c#1 <- block@4) (last_point.other.c#2) with last_point.other.c#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.d#2: Encoded(uint64,uint64) = undefined while trying to resolve 'last_point.other.d' in block@5
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@3) in block@3
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#2: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.d#2: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#2: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.d#2: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@3, last_point.other.d#1 <- block@4) (last_point.other.d#2) with last_point.other.d#1 in current definition for 1 blocks
debug: Created Phi assignment: let last_point.other.e#2: biguint = undefined while trying to resolve 'last_point.other.e' in block@5
debug: Added last_point.other.e#1 to Phi node: let last_point.other.e#2: biguint = φ(last_point.other.e#1 <- block@3) in block@3
debug: Added last_point.other.e#1 to Phi node: let last_point.other.e#2: biguint = φ(last_point.other.e#1 <- block@3, last_point.other.e#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let last_point.other.e#2: biguint = φ(last_point.other.e#1 <- block@3, last_point.other.e#1 <- block@4) (last_point.other.e#2) with last_point.other.e#1
debug: Deleting Phi assignment: let last_point.other.e#2: biguint = φ(last_point.other.e#1 <- block@3, last_point.other.e#1 <- block@4)
debug: Replaced trivial Phi node: let last_point.other.e#2: biguint = φ(last_point.other.e#1 <- block@3, last_point.other.e#1 <- block@4) (last_point.other.e#2) with last_point.other.e#1 in current definition for 1 blocks
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@8
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@5
debug: Looking for 'length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3) in block@3
debug: Added length#3 to Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) in block@4
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#3 <- block@3, length#3 <- block@4) (length#2) with length#3 in current definition for 1 blocks
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6) in block@6
debug: Added length#3 to Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#3 <- block@6, length#3 <- block@7) (length#1) with length#3 in current definition for 1 blocks
debug: Created Phi assignment: let dx#2: uint64 = undefined while trying to resolve 'dx' in block@8
debug: Created Phi assignment: let dx#3: uint64 = undefined while trying to resolve 'dx' in block@5
debug: Added dx#0 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3) in block@3
debug: Added dx#1 to Phi node: let dx#3: uint64 = φ(dx#0 <- block@3, dx#1 <- block@4) in block@4
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6) in block@6
debug: Added dx#3 to Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3
debug: Deleting Phi assignment: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7)
debug: Replaced trivial Phi node: let dx#2: uint64 = φ(dx#3 <- block@6, dx#3 <- block@7) (dx#2) with dx#3 in current definition for 1 blocks
debug: Created Phi assignment: let dy#2: uint64 = undefined while trying to resolve 'dy' in block@8
debug: Added dy#0 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6) in block@6
debug: Added dy#1 to Phi node: let dy#2: uint64 = φ(dy#0 <- block@6, dy#1 <- block@7) in block@7
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@1
debug: Added point_idx#0 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0) in block@0
debug: Added point_idx#2 to Phi node: let point_idx#1: uint64 = φ(point_idx#0 <- block@0, point_idx#2 <- block@9) in block@9
debug: Added path#0 to Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0) in block@0
debug: Created Phi assignment: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = undefined while trying to resolve 'path' in block@8
debug: Created Phi assignment: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = undefined while trying to resolve 'path' in block@5
debug: Added path#1 to Phi node: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@3) in block@3
debug: Added path#1 to Phi node: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@3, path#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1
debug: Deleting Phi assignment: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@3, path#1 <- block@4)
debug: Replaced trivial Phi node: let path#3: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@3, path#1 <- block@4) (path#3) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@6) in block@6
debug: Added path#1 to Phi node: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@6, path#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1
debug: Deleting Phi assignment: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@6, path#1 <- block@7)
debug: Replaced trivial Phi node: let path#2: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#1 <- block@6, path#1 <- block@7) (path#2) with path#1 in current definition for 1 blocks
debug: Added path#1 to Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@9)
debug: Replaced trivial Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@9) (path#1) with path#0 in current definition for 9 blocks
debug: Added last_point.x#0 to Phi node: let last_point.x#1: Encoded(uint64) = φ(last_point.x#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.x#3: Encoded(uint64) = undefined while trying to resolve 'last_point.x' in block@8
debug: Added last_point.x#1 to Phi node: let last_point.x#3: Encoded(uint64) = φ(last_point.x#1 <- block@6) in block@6
debug: Added last_point.x#1 to Phi node: let last_point.x#3: Encoded(uint64) = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.x#3: Encoded(uint64) = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1
debug: Deleting Phi assignment: let last_point.x#3: Encoded(uint64) = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.x#3: Encoded(uint64) = φ(last_point.x#1 <- block@6, last_point.x#1 <- block@7) (last_point.x#3) with last_point.x#1 in current definition for 1 blocks
debug: Added last_point.x#1 to Phi node: let last_point.x#1: Encoded(uint64) = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.x#1: Encoded(uint64) = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0
debug: Deleting Phi assignment: let last_point.x#1: Encoded(uint64) = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.x#1: Encoded(uint64) = φ(last_point.x#0 <- block@0, last_point.x#1 <- block@9) (last_point.x#1) with last_point.x#0 in current definition for 9 blocks
debug: Added last_point.y#0 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.y#3: uint64 = undefined while trying to resolve 'last_point.y' in block@8
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6) in block@6
debug: Added last_point.y#1 to Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1
debug: Deleting Phi assignment: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.y#3: uint64 = φ(last_point.y#1 <- block@6, last_point.y#1 <- block@7) (last_point.y#3) with last_point.y#1 in current definition for 1 blocks
debug: Added last_point.y#1 to Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0
debug: Deleting Phi assignment: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.y#1: uint64 = φ(last_point.y#0 <- block@0, last_point.y#1 <- block@9) (last_point.y#1) with last_point.y#0 in current definition for 9 blocks
debug: Added last_point.other.a#0 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.a#3: uint64 = undefined while trying to resolve 'last_point.other.a' in block@8
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6) in block@6
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1
debug: Deleting Phi assignment: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.a#3: uint64 = φ(last_point.other.a#1 <- block@6, last_point.other.a#1 <- block@7) (last_point.other.a#3) with last_point.other.a#1 in current definition for 1 blocks
debug: Added last_point.other.a#1 to Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0
debug: Deleting Phi assignment: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.a#1: uint64 = φ(last_point.other.a#0 <- block@0, last_point.other.a#1 <- block@9) (last_point.other.a#1) with last_point.other.a#0 in current definition for 9 blocks
debug: Added last_point.other.b#0 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.b#3: uint64 = undefined while trying to resolve 'last_point.other.b' in block@8
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6) in block@6
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1
debug: Deleting Phi assignment: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.b#3: uint64 = φ(last_point.other.b#1 <- block@6, last_point.other.b#1 <- block@7) (last_point.other.b#3) with last_point.other.b#1 in current definition for 1 blocks
debug: Added last_point.other.b#1 to Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0
debug: Deleting Phi assignment: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.b#1: uint64 = φ(last_point.other.b#0 <- block@0, last_point.other.b#1 <- block@9) (last_point.other.b#1) with last_point.other.b#0 in current definition for 9 blocks
debug: Added last_point.other.c#0 to Phi node: let last_point.other.c#1: account = φ(last_point.other.c#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.c#3: account = undefined while trying to resolve 'last_point.other.c' in block@8
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: account = φ(last_point.other.c#1 <- block@6) in block@6
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#3: account = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.c#3: account = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1
debug: Deleting Phi assignment: let last_point.other.c#3: account = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.c#3: account = φ(last_point.other.c#1 <- block@6, last_point.other.c#1 <- block@7) (last_point.other.c#3) with last_point.other.c#1 in current definition for 1 blocks
debug: Added last_point.other.c#1 to Phi node: let last_point.other.c#1: account = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.c#1: account = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0
debug: Deleting Phi assignment: let last_point.other.c#1: account = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.c#1: account = φ(last_point.other.c#0 <- block@0, last_point.other.c#1 <- block@9) (last_point.other.c#1) with last_point.other.c#0 in current definition for 9 blocks
debug: Added last_point.other.d#0 to Phi node: let last_point.other.d#1: Encoded(uint64,uint64) = φ(last_point.other.d#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.d#3: Encoded(uint64,uint64) = undefined while trying to resolve 'last_point.other.d' in block@8
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@6) in block@6
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#3: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.d#3: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1
debug: Deleting Phi assignment: let last_point.other.d#3: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.d#3: Encoded(uint64,uint64) = φ(last_point.other.d#1 <- block@6, last_point.other.d#1 <- block@7) (last_point.other.d#3) with last_point.other.d#1 in current definition for 1 blocks
debug: Added last_point.other.d#1 to Phi node: let last_point.other.d#1: Encoded(uint64,uint64) = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.d#1: Encoded(uint64,uint64) = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0
debug: Deleting Phi assignment: let last_point.other.d#1: Encoded(uint64,uint64) = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.d#1: Encoded(uint64,uint64) = φ(last_point.other.d#0 <- block@0, last_point.other.d#1 <- block@9) (last_point.other.d#1) with last_point.other.d#0 in current definition for 9 blocks
debug: Added last_point.other.e#0 to Phi node: let last_point.other.e#1: biguint = φ(last_point.other.e#0 <- block@0) in block@0
debug: Created Phi assignment: let last_point.other.e#3: biguint = undefined while trying to resolve 'last_point.other.e' in block@8
debug: Added last_point.other.e#1 to Phi node: let last_point.other.e#3: biguint = φ(last_point.other.e#1 <- block@6) in block@6
debug: Added last_point.other.e#1 to Phi node: let last_point.other.e#3: biguint = φ(last_point.other.e#1 <- block@6, last_point.other.e#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let last_point.other.e#3: biguint = φ(last_point.other.e#1 <- block@6, last_point.other.e#1 <- block@7) (last_point.other.e#3) with last_point.other.e#1
debug: Deleting Phi assignment: let last_point.other.e#3: biguint = φ(last_point.other.e#1 <- block@6, last_point.other.e#1 <- block@7)
debug: Replaced trivial Phi node: let last_point.other.e#3: biguint = φ(last_point.other.e#1 <- block@6, last_point.other.e#1 <- block@7) (last_point.other.e#3) with last_point.other.e#1 in current definition for 1 blocks
debug: Added last_point.other.e#1 to Phi node: let last_point.other.e#1: biguint = φ(last_point.other.e#0 <- block@0, last_point.other.e#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let last_point.other.e#1: biguint = φ(last_point.other.e#0 <- block@0, last_point.other.e#1 <- block@9) (last_point.other.e#1) with last_point.other.e#0
debug: Deleting Phi assignment: let last_point.other.e#1: biguint = φ(last_point.other.e#0 <- block@0, last_point.other.e#1 <- block@9)
debug: Replaced trivial Phi node: let last_point.other.e#1: biguint = φ(last_point.other.e#0 <- block@0, last_point.other.e#1 <- block@9) (last_point.other.e#1) with last_point.other.e#0 in current definition for 9 blocks
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#4 to Phi node: let length#3: uint64 = φ(length#0 <- block@0, length#4 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.immutable.sum_imm_fixed
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#3 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#3 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.times
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let result#1: string = undefined while trying to resolve 'result' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added result#0 to Phi node: let result#1: string = φ(result#0 <- block@0) in block@0
debug: Added result#2 to Phi node: let result#1: string = φ(result#0 <- block@0, result#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.add_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+uint64[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.pop_x
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+uint64[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.add_xb
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+uint512[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+uint512[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+uint512[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.sum_arr
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Building IR for function test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Building IR for function test_cases.array.uint64.Contract.test_array
debug: Sealing block@0
array/uint64.py:21:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:25:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:29:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:33:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:38:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:42:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:44:9 debug: encountered already materialized expression (test_cases.array.uint64.return_ref(arr, arr)), reusing result: tmp%36#0
array/uint64.py:44:30 debug: encountered already materialized expression (0u), reusing result: 0u
array/uint64.py:44:9 debug: base assignment target is in a slot
array/uint64.py:47:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/uint64.py:48:16 debug: encountered already materialized expression (arr), reusing result: arr#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_multiple_append
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.overhead
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_too_long
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: Encoded(uint64[])* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array#1: Encoded(uint64[])* = undefined while trying to resolve 'array' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added array#0 to Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0) in block@0
debug: Added array#1 to Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0
debug: Deleting Phi assignment: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3)
debug: Replaced trivial Phi node: let array#1: Encoded(uint64[])* = φ(array#0 <- block@0, array#1 <- block@3) (array#1) with array#0 in current definition for 3 blocks
debug: Sealing block@4
array/uint64.py:93:16 debug: encountered already materialized expression (array), reusing result: array#0
array/uint64.py:96:16 debug: encountered already materialized expression (array2), reusing result: array2#0
array/uint64.py:101:16 debug: encountered already materialized expression (array), reusing result: array#0
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Sealing block@0
array/uint64.py:119:49 debug: encountered already materialized expression (test_cases.array.uint64.append_length_and_return(arr)), reusing result: tmp%11#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage
debug: Sealing block@0
array/uint64.py:129:9 debug: base assignment target is in a slot
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.test_allocations
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for '_i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let _i#1: uint64 = undefined while trying to resolve '_i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added _i#0 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0) in block@0
debug: Added _i#2 to Phi node: let _i#1: uint64 = φ(_i#0 <- block@0, _i#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.uint64.Contract.test_iteration
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'val' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let val#1: uint64 = undefined while trying to resolve 'val' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added val#0 to Phi node: let val#1: uint64 = φ(val#0 <- block@0) in block@0
debug: Added val#2 to Phi node: let val#1: uint64 = φ(val#0 <- block@0, val#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Created Phi assignment: let arr#2: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4) in block@4
debug: Added arr#2 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@7) (arr#2) with arr#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8) in block@8
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@8, item_index_internal%1#2 <- block@11) in block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#3: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@9
debug: Added arr#0 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#0 <- block@8) in block@8
debug: Added arr#3 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#0 <- block@8, arr#3 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0
debug: Deleting Phi assignment: let arr#3: Encoded(uint64[])* = φ(arr#0 <- block@8, arr#3 <- block@11)
debug: Replaced trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#0 <- block@8, arr#3 <- block@11) (arr#3) with arr#0 in current definition for 3 blocks
debug: Terminated block@12
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@13
debug: Looking for 'reverse_index_internal%2' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let reverse_index_internal%2#1: uint64 = undefined while trying to resolve 'reverse_index_internal%2' in block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@13
debug: Created Phi assignment: let last#3: uint64 = undefined while trying to resolve 'last' in block@13
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@13
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12) in block@12
debug: Added item_index_internal%2#1 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0
debug: Deleting Phi assignment: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15)
debug: Replaced trivial Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@12, item_index_internal%2#1 <- block@15) (item_index_internal%2#1) with item_index_internal%2#0 in current definition for 3 blocks
debug: Added reverse_index_internal%2#0 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12) in block@12
debug: Added reverse_index_internal%2#2 to Phi node: let reverse_index_internal%2#1: uint64 = φ(reverse_index_internal%2#0 <- block@12, reverse_index_internal%2#2 <- block@15) in block@15
debug: Created Phi assignment: let last#5: uint64 = undefined while trying to resolve 'last' in block@9
debug: Added last#1 to Phi node: let last#5: uint64 = φ(last#1 <- block@8) in block@8
debug: Added last#5 to Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) in block@11
debug: Replacing trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1
debug: Deleting Phi assignment: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11)
debug: Replaced trivial Phi node: let last#5: uint64 = φ(last#1 <- block@8, last#5 <- block@11) (last#5) with last#1 in current definition for 3 blocks
debug: Added last#1 to Phi node: let last#3: uint64 = φ(last#1 <- block@12) in block@12
debug: Added last#4 to Phi node: let last#3: uint64 = φ(last#1 <- block@12, last#4 <- block@15) in block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Looking for 'arc4_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let arc4_arr#1: Encoded(len+uint64[]) = undefined while trying to resolve 'arc4_arr' in block@17
debug: Looking for 'native_arr' in an unsealed block creating an incomplete Phi: block@17
debug: Created Phi assignment: let native_arr#1: Encoded(uint64[])* = undefined while trying to resolve 'native_arr' in block@17
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@17
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@16) in block@16
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@16, i#2 <- block@19) in block@19
debug: Added arc4_arr#0 to Phi node: let arc4_arr#1: Encoded(len+uint64[]) = φ(arc4_arr#0 <- block@16) in block@16
debug: Added arc4_arr#2 to Phi node: let arc4_arr#1: Encoded(len+uint64[]) = φ(arc4_arr#0 <- block@16, arc4_arr#2 <- block@19) in block@19
debug: Added native_arr#0 to Phi node: let native_arr#1: Encoded(uint64[])* = φ(native_arr#0 <- block@16) in block@16
debug: Added native_arr#1 to Phi node: let native_arr#1: Encoded(uint64[])* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) in block@19
debug: Replacing trivial Phi node: let native_arr#1: Encoded(uint64[])* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0
debug: Deleting Phi assignment: let native_arr#1: Encoded(uint64[])* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19)
debug: Replaced trivial Phi node: let native_arr#1: Encoded(uint64[])* = φ(native_arr#0 <- block@16, native_arr#1 <- block@19) (native_arr#1) with native_arr#0 in current definition for 3 blocks
debug: Sealing block@20
debug: Terminated block@20
debug: Building IR for function test_cases.array.uint64.Contract.test_quicksort
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'rnd' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let rnd#1: Encoded(uint64[])* = undefined while trying to resolve 'rnd' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added rnd#0 to Phi node: let rnd#1: Encoded(uint64[])* = φ(rnd#0 <- block@0) in block@0
debug: Added rnd#1 to Phi node: let rnd#1: Encoded(uint64[])* = φ(rnd#0 <- block@0, rnd#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let rnd#1: Encoded(uint64[])* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0
debug: Deleting Phi assignment: let rnd#1: Encoded(uint64[])* = φ(rnd#0 <- block@0, rnd#1 <- block@3)
debug: Replaced trivial Phi node: let rnd#1: Encoded(uint64[])* = φ(rnd#0 <- block@0, rnd#1 <- block@3) (rnd#1) with rnd#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'last' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let last#1: uint64 = undefined while trying to resolve 'last' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@7) in block@7
debug: Added last#0 to Phi node: let last#1: uint64 = φ(last#0 <- block@4) in block@4
debug: Added last#2 to Phi node: let last#1: uint64 = φ(last#0 <- block@4, last#2 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Building IR for function test_cases.array.uint64.Contract.test_unobserved_write
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.uint64.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.test_unobserved_write
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'path' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = undefined while trying to resolve 'path' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added path#0 to Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0) in block@0
debug: Added path#1 to Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0
debug: Deleting Phi assignment: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@3)
debug: Replaced trivial Phi node: let path#1: Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])* = φ(path#0 <- block@0, path#1 <- block@3) (path#1) with path#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Sealing block@0
array/static_size.py:61:16 debug: encountered already materialized expression (arr), reusing result: arr#0
array/static_size.py:64:16 debug: encountered already materialized expression (result), reusing result: result#0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(bool8[])* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(uint64[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'count' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let count#1: uint64 = undefined while trying to resolve 'count' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@9) in block@9
debug: Added count#0 to Phi node: let count#1: uint64 = φ(count#0 <- block@4) in block@4
debug: Created Phi assignment: let count#3: uint64 = undefined while trying to resolve 'count' in block@8
debug: Added count#1 to Phi node: let count#3: uint64 = φ(count#1 <- block@6) in block@6
debug: Added count#2 to Phi node: let count#3: uint64 = φ(count#1 <- block@6, count#2 <- block@7) in block@7
debug: Added count#3 to Phi node: let count#1: uint64 = φ(count#0 <- block@4, count#3 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr#2: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@5
debug: Added arr#0 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4) in block@4
debug: Created Phi assignment: let arr#3: Encoded(uint64[])* = undefined while trying to resolve 'arr' in block@8
debug: Added arr#2 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@6) in block@6
debug: Added arr#2 to Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@6, arr#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2
debug: Deleting Phi assignment: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@6, arr#2 <- block@7)
debug: Replaced trivial Phi node: let arr#3: Encoded(uint64[])* = φ(arr#2 <- block@6, arr#2 <- block@7) (arr#3) with arr#2 in current definition for 1 blocks
debug: Added arr#2 to Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0
debug: Deleting Phi assignment: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@9)
debug: Replaced trivial Phi node: let arr#2: Encoded(uint64[])* = φ(arr#0 <- block@4, arr#2 <- block@9) (arr#2) with arr#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.sum_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'total' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let total#1: uint64 = undefined while trying to resolve 'total' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added total#0 to Phi node: let total#1: uint64 = φ(total#0 <- block@0) in block@0
debug: Added total#2 to Phi node: let total#1: uint64 = φ(total#0 <- block@0, total#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.xtra
debug: Sealing block@0
array/static_size.py:125:9 debug: encountered already materialized expression ('count'), reusing result: "count"
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.more
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr2' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr2#1: Encoded(bool8[])* = undefined while trying to resolve 'arr2' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added arr2#0 to Phi node: let arr2#1: Encoded(bool8[])* = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#1 to Phi node: let arr2#1: Encoded(bool8[])* = φ(arr2#0 <- block@0, arr2#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr2#1: Encoded(bool8[])* = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0
debug: Deleting Phi assignment: let arr2#1: Encoded(bool8[])* = φ(arr2#0 <- block@0, arr2#1 <- block@3)
debug: Replaced trivial Phi node: let arr2#1: Encoded(bool8[])* = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let arr#1: Encoded(bool8[])* = undefined while trying to resolve 'arr' in block@1
debug: Added arr#0 to Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0) in block@0
debug: Added arr#1 to Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0
debug: Deleting Phi assignment: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3)
debug: Replaced trivial Phi node: let arr#1: Encoded(bool8[])* = φ(arr#0 <- block@0, arr#1 <- block@3) (arr#1) with arr#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.more
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Sealing block@15
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@18
debug: Terminated block@18
debug: Sealing block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@22
debug: Terminated block@22
debug: Sealing block@23
debug: Terminated block@23
debug: Sealing block@24
debug: Terminated block@24
debug: Sealing block@25
debug: Terminated block@25
debug: Sealing block@26
debug: Terminated block@26
debug: Sealing block@27
debug: Terminated block@27
debug: Sealing block@28
debug: Terminated block@28
debug: Sealing block@29
debug: Terminated block@29
debug: Sealing block@30
debug: Terminated block@30
debug: Sealing block@31
debug: Terminated block@31
debug: Sealing block@32
debug: Terminated block@32
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Sealing block@0
array/immutable.py:101:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:105:16 debug: encountered already materialized expression (arr), reusing result: arr#2
array/immutable.py:109:16 debug: encountered already materialized expression (arr), reusing result: arr#3
array/immutable.py:114:16 debug: encountered already materialized expression (arr), reusing result: arr#4
array/immutable.py:118:16 debug: encountered already materialized expression (arr), reusing result: arr#5
array/immutable.py:122:16 debug: encountered already materialized expression (arr), reusing result: arr#6
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: Sealing block@0
array/immutable.py:137:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:141:16 debug: encountered already materialized expression (arr), reusing result: arr#2
array/immutable.py:145:16 debug: encountered already materialized expression (arr), reusing result: arr#3
array/immutable.py:150:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+bool1[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+bool1[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length#1: uint64 = undefined while trying to resolve 'length' in block@1
debug: Added length#0 to Phi node: let length#1: uint64 = φ(length#0 <- block@0) in block@0
debug: Added length#1 to Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0
debug: Deleting Phi assignment: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3)
debug: Replaced trivial Phi node: let length#1: uint64 = φ(length#0 <- block@0, length#1 <- block@3) (length#1) with length#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Created Phi assignment: let length#2: uint64 = undefined while trying to resolve 'length' in block@6
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4) in block@4
debug: Added length#0 to Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) in block@5
debug: Replacing trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0
debug: Deleting Phi assignment: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5)
debug: Replaced trivial Phi node: let length#2: uint64 = φ(length#0 <- block@4, length#0 <- block@5) (length#2) with length#0 in current definition for 1 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Created Phi assignment: let arr#3: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@6
debug: Added arr#1 to Phi node: let arr#3: Encoded(len+bool1[]) = φ(arr#1 <- block@4) in block@4
debug: Added arr#1 to Phi node: let arr#3: Encoded(len+bool1[]) = φ(arr#1 <- block@4, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#3: Encoded(len+bool1[]) = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: Encoded(len+bool1[]) = φ(arr#1 <- block@4, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#3: Encoded(len+bool1[]) = φ(arr#1 <- block@4, arr#1 <- block@5) (arr#3) with arr#1 in current definition for 1 blocks
debug: Terminated block@7
debug: Sealing block@8
debug: Created Phi assignment: let length#3: uint64 = undefined while trying to resolve 'length' in block@8
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6) in block@6
debug: Added length#0 to Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) in block@7
debug: Replacing trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0
debug: Deleting Phi assignment: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7)
debug: Replaced trivial Phi node: let length#3: uint64 = φ(length#0 <- block@6, length#0 <- block@7) (length#3) with length#0 in current definition for 1 blocks
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let arr#4: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@8
debug: Added arr#1 to Phi node: let arr#4: Encoded(len+bool1[]) = φ(arr#1 <- block@6) in block@6
debug: Added arr#1 to Phi node: let arr#4: Encoded(len+bool1[]) = φ(arr#1 <- block@6, arr#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#4: Encoded(len+bool1[]) = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1
debug: Deleting Phi assignment: let arr#4: Encoded(len+bool1[]) = φ(arr#1 <- block@6, arr#1 <- block@7)
debug: Replaced trivial Phi node: let arr#4: Encoded(len+bool1[]) = φ(arr#1 <- block@6, arr#1 <- block@7) (arr#4) with arr#1 in current definition for 1 blocks
debug: Terminated block@9
debug: Sealing block@10
debug: Created Phi assignment: let length#4: uint64 = undefined while trying to resolve 'length' in block@10
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8) in block@8
debug: Added length#0 to Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) in block@9
debug: Replacing trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0
debug: Deleting Phi assignment: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9)
debug: Replaced trivial Phi node: let length#4: uint64 = φ(length#0 <- block@8, length#0 <- block@9) (length#4) with length#0 in current definition for 1 blocks
debug: Terminated block@10
debug: Sealing block@11
debug: Created Phi assignment: let arr#5: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@10
debug: Added arr#1 to Phi node: let arr#5: Encoded(len+bool1[]) = φ(arr#1 <- block@8) in block@8
debug: Added arr#1 to Phi node: let arr#5: Encoded(len+bool1[]) = φ(arr#1 <- block@8, arr#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr#5: Encoded(len+bool1[]) = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1
debug: Deleting Phi assignment: let arr#5: Encoded(len+bool1[]) = φ(arr#1 <- block@8, arr#1 <- block@9)
debug: Replaced trivial Phi node: let arr#5: Encoded(len+bool1[]) = φ(arr#1 <- block@8, arr#1 <- block@9) (arr#5) with arr#1 in current definition for 1 blocks
debug: Terminated block@11
debug: Sealing block@12
debug: Created Phi assignment: let arr#6: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@12
debug: Added arr#1 to Phi node: let arr#6: Encoded(len+bool1[]) = φ(arr#1 <- block@10) in block@10
debug: Added arr#1 to Phi node: let arr#6: Encoded(len+bool1[]) = φ(arr#1 <- block@10, arr#1 <- block@11) in block@11
debug: Replacing trivial Phi node: let arr#6: Encoded(len+bool1[]) = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1
debug: Deleting Phi assignment: let arr#6: Encoded(len+bool1[]) = φ(arr#1 <- block@10, arr#1 <- block@11)
debug: Replaced trivial Phi node: let arr#6: Encoded(len+bool1[]) = φ(arr#1 <- block@10, arr#1 <- block@11) (arr#6) with arr#1 in current definition for 1 blocks
debug: Created Phi assignment: let length#5: uint64 = undefined while trying to resolve 'length' in block@12
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10) in block@10
debug: Added length#0 to Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) in block@11
debug: Replacing trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0
debug: Deleting Phi assignment: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11)
debug: Replaced trivial Phi node: let length#5: uint64 = φ(length#0 <- block@10, length#0 <- block@11) (length#5) with length#0 in current definition for 1 blocks
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Terminated block@14
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,uint64)[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,uint64)[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,uint64)[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
array/immutable.py:189:16 debug: encountered already materialized expression (arr), reusing result: arr#1
array/immutable.py:194:16 debug: encountered already materialized expression (arr), reusing result: arr#3
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,(len+uint8[]))[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: Encoded(len+(uint64,(len+uint8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:228:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let i#4: uint64 = undefined while trying to resolve 'i' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added i#3 to Phi node: let i#4: uint64 = φ(i#3 <- block@4) in block@4
debug: Added i#5 to Phi node: let i#4: uint64 = φ(i#3 <- block@4, i#5 <- block@7) in block@7
debug: Added arr#1 to Phi node: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#1 <- block@4) in block@4
debug: Added arr#3 to Phi node: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1
debug: Deleting Phi assignment: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7)
debug: Replaced trivial Phi node: let arr#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#1 <- block@4, arr#3 <- block@7) (arr#3) with arr#1 in current definition for 3 blocks
debug: Sealing block@8
array/immutable.py:247:16 debug: encountered already materialized expression (arr), reusing result: arr#4
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Looking for 'j' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let j#1: uint64 = undefined while trying to resolve 'j' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'extra_arr' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let extra_arr#1: Encoded(len+uint64[]) = undefined while trying to resolve 'extra_arr' in block@3
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@3
debug: Added j#0 to Phi node: let j#1: uint64 = φ(j#0 <- block@2) in block@2
debug: Added j#2 to Phi node: let j#1: uint64 = φ(j#0 <- block@2, j#2 <- block@5) in block@5
debug: Added extra_arr#0 to Phi node: let extra_arr#1: Encoded(len+uint64[]) = φ(extra_arr#0 <- block@2) in block@2
debug: Added extra_arr#2 to Phi node: let extra_arr#1: Encoded(len+uint64[]) = φ(extra_arr#0 <- block@2, extra_arr#2 <- block@5) in block@5
debug: Sealing block@6
debug: Created Phi assignment: let arr#1: Encoded(len+(len+uint64[])[]) = undefined while trying to resolve 'arr' in block@3
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#2: Encoded(len+(len+uint64[])[]) = undefined while trying to resolve 'arr' in block@1
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(len+uint64[])[]) = φ(arr#2 <- block@2) in block@2
debug: Added arr#1 to Phi node: let arr#1: Encoded(len+(len+uint64[])[]) = φ(arr#2 <- block@2, arr#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let arr#1: Encoded(len+(len+uint64[])[]) = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2
debug: Deleting Phi assignment: let arr#1: Encoded(len+(len+uint64[])[]) = φ(arr#2 <- block@2, arr#1 <- block@5)
debug: Replaced trivial Phi node: let arr#1: Encoded(len+(len+uint64[])[]) = φ(arr#2 <- block@2, arr#1 <- block@5) (arr#1) with arr#2 in current definition for 3 blocks
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@7) in block@7
debug: Added arr#0 to Phi node: let arr#2: Encoded(len+(len+uint64[])[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#3 to Phi node: let arr#2: Encoded(len+(len+uint64[])[]) = φ(arr#0 <- block@0, arr#3 <- block@7) in block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Looking for 'totals' in an unsealed block creating an incomplete Phi: block@9
debug: Created Phi assignment: let totals#1: Encoded(len+uint64[]) = undefined while trying to resolve 'totals' in block@9
debug: Terminated block@10
debug: Sealing block@11
debug: Terminated block@11
debug: Sealing block@9
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8) in block@8
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@8, item_index_internal%0#2 <- block@11) in block@11
debug: Added totals#0 to Phi node: let totals#1: Encoded(len+uint64[]) = φ(totals#0 <- block@8) in block@8
debug: Added totals#2 to Phi node: let totals#1: Encoded(len+uint64[]) = φ(totals#0 <- block@8, totals#2 <- block@11) in block@11
debug: Sealing block@12
debug: Terminated block@12
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr2' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr2#1: Encoded(len+(bool1,bool1)[]) = undefined while trying to resolve 'arr2' in block@1
debug: Looking for 'arr7' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr7#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = undefined while trying to resolve 'arr7' in block@1
debug: Looking for 'arr8' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr8#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = undefined while trying to resolve 'arr8' in block@1
debug: Looking for 'arr9' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr9#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = undefined while trying to resolve 'arr9' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr2#0 to Phi node: let arr2#1: Encoded(len+(bool1,bool1)[]) = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#2 to Phi node: let arr2#1: Encoded(len+(bool1,bool1)[]) = φ(arr2#0 <- block@0, arr2#2 <- block@3) in block@3
debug: Added arr7#0 to Phi node: let arr7#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr7#0 <- block@0) in block@0
debug: Added arr7#2 to Phi node: let arr7#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr7#0 <- block@0, arr7#2 <- block@3) in block@3
debug: Added arr8#0 to Phi node: let arr8#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr8#0 <- block@0) in block@0
debug: Added arr8#2 to Phi node: let arr8#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr8#0 <- block@0, arr8#2 <- block@3) in block@3
debug: Added arr9#0 to Phi node: let arr9#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr9#0 <- block@0) in block@0
debug: Added arr9#2 to Phi node: let arr9#1: Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[]) = φ(arr9#0 <- block@0, arr9#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Sealing block@0
array/immutable.py:349:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:349:37 debug: encountered already materialized expression (0u), reusing result: 0u
array/immutable.py:349:37 debug: encountered already materialized expression (0u), reusing result: 0u
debug: Terminated block@0
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'sum1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sum1#1: uint64 = undefined while trying to resolve 'sum1' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0) in block@0
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@0, item_index_internal%0#2 <- block@3) in block@3
debug: Added sum1#0 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0) in block@0
debug: Added sum1#2 to Phi node: let sum1#1: uint64 = φ(sum1#0 <- block@0, sum1#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let arr2#1: Encoded(len+bool1[]) = undefined while trying to resolve 'arr2' in block@1
debug: Added arr2#0 to Phi node: let arr2#1: Encoded(len+bool1[]) = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#1 to Phi node: let arr2#1: Encoded(len+bool1[]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr2#1: Encoded(len+bool1[]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0
debug: Deleting Phi assignment: let arr2#1: Encoded(len+bool1[]) = φ(arr2#0 <- block@0, arr2#1 <- block@3)
debug: Replaced trivial Phi node: let arr2#1: Encoded(len+bool1[]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%1' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%1#1: uint64 = undefined while trying to resolve 'item_index_internal%1' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Looking for 'sum2' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let sum2#1: uint64 = undefined while trying to resolve 'sum2' in block@5
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@5
debug: Added item_index_internal%1#0 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4) in block@4
debug: Added item_index_internal%1#2 to Phi node: let item_index_internal%1#1: uint64 = φ(item_index_internal%1#0 <- block@4, item_index_internal%1#2 <- block@9) in block@9
debug: Created Phi assignment: let sum2#3: uint64 = undefined while trying to resolve 'sum2' in block@1
debug: Added sum2#0 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0) in block@0
debug: Added sum2#3 to Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0
debug: Deleting Phi assignment: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3)
debug: Replaced trivial Phi node: let sum2#3: uint64 = φ(sum2#0 <- block@0, sum2#3 <- block@3) (sum2#3) with sum2#0 in current definition for 3 blocks
debug: Added sum2#0 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4) in block@4
debug: Created Phi assignment: let sum2#4: uint64 = undefined while trying to resolve 'sum2' in block@8
debug: Added sum2#1 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6) in block@6
debug: Added sum2#2 to Phi node: let sum2#4: uint64 = φ(sum2#1 <- block@6, sum2#2 <- block@7) in block@7
debug: Added sum2#4 to Phi node: let sum2#1: uint64 = φ(sum2#0 <- block@4, sum2#4 <- block@9) in block@9
debug: Sealing block@10
debug: Created Phi assignment: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = undefined while trying to resolve 'arr3' in block@5
debug: Created Phi assignment: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = undefined while trying to resolve 'arr3' in block@1
debug: Added arr3#0 to Phi node: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@0) in block@0
debug: Added arr3#2 to Phi node: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@0, arr3#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0
debug: Deleting Phi assignment: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@0, arr3#2 <- block@3)
debug: Replaced trivial Phi node: let arr3#2: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@0, arr3#2 <- block@3) (arr3#2) with arr3#0 in current definition for 3 blocks
debug: Added arr3#0 to Phi node: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@4) in block@4
debug: Created Phi assignment: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = undefined while trying to resolve 'arr3' in block@8
debug: Added arr3#1 to Phi node: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#1 <- block@6) in block@6
debug: Added arr3#1 to Phi node: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#1 <- block@6, arr3#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1
debug: Deleting Phi assignment: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#1 <- block@6, arr3#1 <- block@7)
debug: Replaced trivial Phi node: let arr3#3: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#1 <- block@6, arr3#1 <- block@7) (arr3#3) with arr3#1 in current definition for 1 blocks
debug: Added arr3#1 to Phi node: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@4, arr3#1 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0
debug: Deleting Phi assignment: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@4, arr3#1 <- block@9)
debug: Replaced trivial Phi node: let arr3#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr3#0 <- block@4, arr3#1 <- block@9) (arr3#1) with arr3#0 in current definition for 5 blocks
debug: Terminated block@10
debug: Looking for 'item_index_internal%2' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let item_index_internal%2#1: uint64 = undefined while trying to resolve 'item_index_internal%2' in block@11
debug: Terminated block@11
debug: Sealing block@12
debug: Looking for 'sum3' in an unsealed block creating an incomplete Phi: block@11
debug: Created Phi assignment: let sum3#1: uint64 = undefined while trying to resolve 'sum3' in block@11
debug: Terminated block@12
debug: Sealing block@13
debug: Terminated block@13
debug: Sealing block@14
debug: Created Phi assignment: let tup.foo#1: uint64 = undefined while trying to resolve 'tup.foo' in block@14
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12) in block@12
debug: Added tup.foo#0 to Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0
debug: Deleting Phi assignment: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13)
debug: Replaced trivial Phi node: let tup.foo#1: uint64 = φ(tup.foo#0 <- block@12, tup.foo#0 <- block@13) (tup.foo#1) with tup.foo#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.bar#1: bool = undefined while trying to resolve 'tup.bar' in block@14
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12) in block@12
debug: Added tup.bar#0 to Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0
debug: Deleting Phi assignment: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13)
debug: Replaced trivial Phi node: let tup.bar#1: bool = φ(tup.bar#0 <- block@12, tup.bar#0 <- block@13) (tup.bar#1) with tup.bar#0 in current definition for 1 blocks
debug: Created Phi assignment: let tup.baz#1: bool = undefined while trying to resolve 'tup.baz' in block@14
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12) in block@12
debug: Added tup.baz#0 to Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) in block@13
debug: Replacing trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0
debug: Deleting Phi assignment: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13)
debug: Replaced trivial Phi node: let tup.baz#1: bool = φ(tup.baz#0 <- block@12, tup.baz#0 <- block@13) (tup.baz#1) with tup.baz#0 in current definition for 1 blocks
debug: Terminated block@14
debug: Sealing block@15
debug: Created Phi assignment: let sum3#4: uint64 = undefined while trying to resolve 'sum3' in block@14
debug: Added sum3#2 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12) in block@12
debug: Added sum3#3 to Phi node: let sum3#4: uint64 = φ(sum3#2 <- block@12, sum3#3 <- block@13) in block@13
debug: Terminated block@15
debug: Sealing block@16
debug: Terminated block@16
debug: Sealing block@17
debug: Terminated block@17
debug: Sealing block@11
debug: Added item_index_internal%2#0 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10) in block@10
debug: Added item_index_internal%2#2 to Phi node: let item_index_internal%2#1: uint64 = φ(item_index_internal%2#0 <- block@10, item_index_internal%2#2 <- block@17) in block@17
debug: Created Phi assignment: let sum3#6: uint64 = undefined while trying to resolve 'sum3' in block@5
debug: Created Phi assignment: let sum3#7: uint64 = undefined while trying to resolve 'sum3' in block@1
debug: Added sum3#0 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0) in block@0
debug: Added sum3#7 to Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0
debug: Deleting Phi assignment: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3)
debug: Replaced trivial Phi node: let sum3#7: uint64 = φ(sum3#0 <- block@0, sum3#7 <- block@3) (sum3#7) with sum3#0 in current definition for 3 blocks
debug: Added sum3#0 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4) in block@4
debug: Created Phi assignment: let sum3#8: uint64 = undefined while trying to resolve 'sum3' in block@8
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6) in block@6
debug: Added sum3#6 to Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6
debug: Deleting Phi assignment: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7)
debug: Replaced trivial Phi node: let sum3#8: uint64 = φ(sum3#6 <- block@6, sum3#6 <- block@7) (sum3#8) with sum3#6 in current definition for 1 blocks
debug: Added sum3#6 to Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0
debug: Deleting Phi assignment: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9)
debug: Replaced trivial Phi node: let sum3#6: uint64 = φ(sum3#0 <- block@4, sum3#6 <- block@9) (sum3#6) with sum3#0 in current definition for 5 blocks
debug: Added sum3#0 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10) in block@10
debug: Created Phi assignment: let sum3#9: uint64 = undefined while trying to resolve 'sum3' in block@16
debug: Added sum3#4 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14) in block@14
debug: Added sum3#5 to Phi node: let sum3#9: uint64 = φ(sum3#4 <- block@14, sum3#5 <- block@15) in block@15
debug: Added sum3#9 to Phi node: let sum3#1: uint64 = φ(sum3#0 <- block@10, sum3#9 <- block@17) in block@17
debug: Sealing block@18
debug: Created Phi assignment: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@11
debug: Created Phi assignment: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@5
debug: Created Phi assignment: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@1
debug: Added arr4#0 to Phi node: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@0) in block@0
debug: Added arr4#3 to Phi node: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@0, arr4#3 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0
debug: Deleting Phi assignment: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@0, arr4#3 <- block@3)
debug: Replaced trivial Phi node: let arr4#3: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@0, arr4#3 <- block@3) (arr4#3) with arr4#0 in current definition for 3 blocks
debug: Added arr4#0 to Phi node: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@4) in block@4
debug: Created Phi assignment: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@8
debug: Added arr4#2 to Phi node: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#2 <- block@6) in block@6
debug: Added arr4#2 to Phi node: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#2 <- block@6, arr4#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2
debug: Deleting Phi assignment: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#2 <- block@6, arr4#2 <- block@7)
debug: Replaced trivial Phi node: let arr4#4: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#2 <- block@6, arr4#2 <- block@7) (arr4#4) with arr4#2 in current definition for 1 blocks
debug: Added arr4#2 to Phi node: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@4, arr4#2 <- block@9) in block@9
debug: Replacing trivial Phi node: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0
debug: Deleting Phi assignment: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@4, arr4#2 <- block@9)
debug: Replaced trivial Phi node: let arr4#2: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@4, arr4#2 <- block@9) (arr4#2) with arr4#0 in current definition for 5 blocks
debug: Added arr4#0 to Phi node: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@10) in block@10
debug: Created Phi assignment: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@16
debug: Created Phi assignment: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr4' in block@14
debug: Added arr4#1 to Phi node: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@12) in block@12
debug: Added arr4#1 to Phi node: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@12, arr4#1 <- block@13) in block@13
debug: Replacing trivial Phi node: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1
debug: Deleting Phi assignment: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@12, arr4#1 <- block@13)
debug: Replaced trivial Phi node: let arr4#6: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@12, arr4#1 <- block@13) (arr4#6) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@14) in block@14
debug: Added arr4#1 to Phi node: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@14, arr4#1 <- block@15) in block@15
debug: Replacing trivial Phi node: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1
debug: Deleting Phi assignment: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@14, arr4#1 <- block@15)
debug: Replaced trivial Phi node: let arr4#5: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#1 <- block@14, arr4#1 <- block@15) (arr4#5) with arr4#1 in current definition for 1 blocks
debug: Added arr4#1 to Phi node: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@10, arr4#1 <- block@17) in block@17
debug: Replacing trivial Phi node: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0
debug: Deleting Phi assignment: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@10, arr4#1 <- block@17)
debug: Replaced trivial Phi node: let arr4#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr4#0 <- block@10, arr4#1 <- block@17) (arr4#1) with arr4#0 in current definition for 7 blocks
debug: Terminated block@18
debug: Looking for 'item_index_internal%3' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let item_index_internal%3#1: uint64 = undefined while trying to resolve 'item_index_internal%3' in block@19
debug: Terminated block@19
debug: Sealing block@20
debug: Looking for 'sum4' in an unsealed block creating an incomplete Phi: block@19
debug: Created Phi assignment: let sum4#1: uint64 = undefined while trying to resolve 'sum4' in block@19
debug: Terminated block@20
debug: Sealing block@21
debug: Terminated block@21
debug: Sealing block@19
debug: Added item_index_internal%3#0 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18) in block@18
debug: Added item_index_internal%3#2 to Phi node: let item_index_internal%3#1: uint64 = φ(item_index_internal%3#0 <- block@18, item_index_internal%3#2 <- block@21) in block@21
debug: Created Phi assignment: let sum4#4: uint64 = undefined while trying to resolve 'sum4' in block@11
debug: Created Phi assignment: let sum4#5: uint64 = undefined while trying to resolve 'sum4' in block@5
debug: Created Phi assignment: let sum4#6: uint64 = undefined while trying to resolve 'sum4' in block@1
debug: Added sum4#0 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0) in block@0
debug: Added sum4#6 to Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) in block@3
debug: Replacing trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0
debug: Deleting Phi assignment: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3)
debug: Replaced trivial Phi node: let sum4#6: uint64 = φ(sum4#0 <- block@0, sum4#6 <- block@3) (sum4#6) with sum4#0 in current definition for 3 blocks
debug: Added sum4#0 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4) in block@4
debug: Created Phi assignment: let sum4#7: uint64 = undefined while trying to resolve 'sum4' in block@8
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6) in block@6
debug: Added sum4#5 to Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5
debug: Deleting Phi assignment: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7)
debug: Replaced trivial Phi node: let sum4#7: uint64 = φ(sum4#5 <- block@6, sum4#5 <- block@7) (sum4#7) with sum4#5 in current definition for 1 blocks
debug: Added sum4#5 to Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0
debug: Deleting Phi assignment: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9)
debug: Replaced trivial Phi node: let sum4#5: uint64 = φ(sum4#0 <- block@4, sum4#5 <- block@9) (sum4#5) with sum4#0 in current definition for 5 blocks
debug: Added sum4#0 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10) in block@10
debug: Created Phi assignment: let sum4#8: uint64 = undefined while trying to resolve 'sum4' in block@16
debug: Created Phi assignment: let sum4#9: uint64 = undefined while trying to resolve 'sum4' in block@14
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12) in block@12
debug: Added sum4#4 to Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4
debug: Deleting Phi assignment: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13)
debug: Replaced trivial Phi node: let sum4#9: uint64 = φ(sum4#4 <- block@12, sum4#4 <- block@13) (sum4#9) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14) in block@14
debug: Added sum4#4 to Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4
debug: Deleting Phi assignment: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15)
debug: Replaced trivial Phi node: let sum4#8: uint64 = φ(sum4#4 <- block@14, sum4#4 <- block@15) (sum4#8) with sum4#4 in current definition for 1 blocks
debug: Added sum4#4 to Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0
debug: Deleting Phi assignment: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17)
debug: Replaced trivial Phi node: let sum4#4: uint64 = φ(sum4#0 <- block@10, sum4#4 <- block@17) (sum4#4) with sum4#0 in current definition for 7 blocks
debug: Added sum4#0 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18) in block@18
debug: Added sum4#3 to Phi node: let sum4#1: uint64 = φ(sum4#0 <- block@18, sum4#3 <- block@21) in block@21
debug: Sealing block@22
debug: Created Phi assignment: let sum1#3: uint64 = undefined while trying to resolve 'sum1' in block@19
debug: Created Phi assignment: let sum1#4: uint64 = undefined while trying to resolve 'sum1' in block@11
debug: Created Phi assignment: let sum1#5: uint64 = undefined while trying to resolve 'sum1' in block@5
debug: Added sum1#1 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4) in block@4
debug: Created Phi assignment: let sum1#6: uint64 = undefined while trying to resolve 'sum1' in block@8
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6) in block@6
debug: Added sum1#5 to Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) in block@7
debug: Replacing trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5
debug: Deleting Phi assignment: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7)
debug: Replaced trivial Phi node: let sum1#6: uint64 = φ(sum1#5 <- block@6, sum1#5 <- block@7) (sum1#6) with sum1#5 in current definition for 1 blocks
debug: Added sum1#5 to Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) in block@9
debug: Replacing trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1
debug: Deleting Phi assignment: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9)
debug: Replaced trivial Phi node: let sum1#5: uint64 = φ(sum1#1 <- block@4, sum1#5 <- block@9) (sum1#5) with sum1#1 in current definition for 5 blocks
debug: Added sum1#1 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10) in block@10
debug: Created Phi assignment: let sum1#7: uint64 = undefined while trying to resolve 'sum1' in block@16
debug: Created Phi assignment: let sum1#8: uint64 = undefined while trying to resolve 'sum1' in block@14
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12) in block@12
debug: Added sum1#4 to Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4
debug: Deleting Phi assignment: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13)
debug: Replaced trivial Phi node: let sum1#8: uint64 = φ(sum1#4 <- block@12, sum1#4 <- block@13) (sum1#8) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14) in block@14
debug: Added sum1#4 to Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4
debug: Deleting Phi assignment: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15)
debug: Replaced trivial Phi node: let sum1#7: uint64 = φ(sum1#4 <- block@14, sum1#4 <- block@15) (sum1#7) with sum1#4 in current definition for 1 blocks
debug: Added sum1#4 to Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1
debug: Deleting Phi assignment: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17)
debug: Replaced trivial Phi node: let sum1#4: uint64 = φ(sum1#1 <- block@10, sum1#4 <- block@17) (sum1#4) with sum1#1 in current definition for 7 blocks
debug: Added sum1#1 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18) in block@18
debug: Added sum1#3 to Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1
debug: Deleting Phi assignment: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21)
debug: Replaced trivial Phi node: let sum1#3: uint64 = φ(sum1#1 <- block@18, sum1#3 <- block@21) (sum1#3) with sum1#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum2#5: uint64 = undefined while trying to resolve 'sum2' in block@19
debug: Created Phi assignment: let sum2#6: uint64 = undefined while trying to resolve 'sum2' in block@11
debug: Added sum2#1 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10) in block@10
debug: Created Phi assignment: let sum2#7: uint64 = undefined while trying to resolve 'sum2' in block@16
debug: Created Phi assignment: let sum2#8: uint64 = undefined while trying to resolve 'sum2' in block@14
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12) in block@12
debug: Added sum2#6 to Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) in block@13
debug: Replacing trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6
debug: Deleting Phi assignment: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13)
debug: Replaced trivial Phi node: let sum2#8: uint64 = φ(sum2#6 <- block@12, sum2#6 <- block@13) (sum2#8) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14) in block@14
debug: Added sum2#6 to Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) in block@15
debug: Replacing trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6
debug: Deleting Phi assignment: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15)
debug: Replaced trivial Phi node: let sum2#7: uint64 = φ(sum2#6 <- block@14, sum2#6 <- block@15) (sum2#7) with sum2#6 in current definition for 1 blocks
debug: Added sum2#6 to Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) in block@17
debug: Replacing trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1
debug: Deleting Phi assignment: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17)
debug: Replaced trivial Phi node: let sum2#6: uint64 = φ(sum2#1 <- block@10, sum2#6 <- block@17) (sum2#6) with sum2#1 in current definition for 7 blocks
debug: Added sum2#1 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18) in block@18
debug: Added sum2#5 to Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1
debug: Deleting Phi assignment: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21)
debug: Replaced trivial Phi node: let sum2#5: uint64 = φ(sum2#1 <- block@18, sum2#5 <- block@21) (sum2#5) with sum2#1 in current definition for 3 blocks
debug: Created Phi assignment: let sum3#10: uint64 = undefined while trying to resolve 'sum3' in block@19
debug: Added sum3#1 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18) in block@18
debug: Added sum3#10 to Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) in block@21
debug: Replacing trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1
debug: Deleting Phi assignment: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21)
debug: Replaced trivial Phi node: let sum3#10: uint64 = φ(sum3#1 <- block@18, sum3#10 <- block@21) (sum3#10) with sum3#1 in current definition for 3 blocks
debug: Terminated block@22
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+uint64[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+uint64[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+bool1[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+bool1[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+bool1[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,bool1,bool1)[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = undefined while trying to resolve 'arr' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr#0 to Phi node: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#0 <- block@0) in block@0
debug: Added arr#2 to Phi node: let arr#1: Encoded(len+(uint64,(len+utf8[]))[]) = φ(arr#0 <- block@0, arr#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'mutable' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let mutable#1: Encoded((uint64,bool1,bool1)[])* = undefined while trying to resolve 'mutable' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added mutable#0 to Phi node: let mutable#1: Encoded((uint64,bool1,bool1)[])* = φ(mutable#0 <- block@0) in block@0
debug: Added mutable#1 to Phi node: let mutable#1: Encoded((uint64,bool1,bool1)[])* = φ(mutable#0 <- block@0, mutable#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let mutable#1: Encoded((uint64,bool1,bool1)[])* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0
debug: Deleting Phi assignment: let mutable#1: Encoded((uint64,bool1,bool1)[])* = φ(mutable#0 <- block@0, mutable#1 <- block@3)
debug: Replaced trivial Phi node: let mutable#1: Encoded((uint64,bool1,bool1)[])* = φ(mutable#0 <- block@0, mutable#1 <- block@3) (mutable#1) with mutable#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr
debug: Sealing block@0
array/immutable.py:455:35 debug: encountered already materialized expression (struct12), reusing result: struct12#0
array/immutable.py:455:35 debug: encountered already materialized expression (struct12), reusing result: struct12#0
debug: Terminated block@0
debug: Looking for 'i' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let i#1: uint64 = undefined while trying to resolve 'i' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'arr1' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let arr1#1: Encoded((uint64,uint64)[3]) = undefined while trying to resolve 'arr1' in block@1
debug: Looking for 'struct12' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let struct12#1: Encoded(uint64,uint64) = undefined while trying to resolve 'struct12' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added i#0 to Phi node: let i#1: uint64 = φ(i#0 <- block@0) in block@0
debug: Added i#2 to Phi node: let i#1: uint64 = φ(i#0 <- block@0, i#2 <- block@3) in block@3
debug: Added arr1#0 to Phi node: let arr1#1: Encoded((uint64,uint64)[3]) = φ(arr1#0 <- block@0) in block@0
debug: Added arr1#2 to Phi node: let arr1#1: Encoded((uint64,uint64)[3]) = φ(arr1#0 <- block@0, arr1#2 <- block@3) in block@3
debug: Added struct12#0 to Phi node: let struct12#1: Encoded(uint64,uint64) = φ(struct12#0 <- block@0) in block@0
debug: Added struct12#1 to Phi node: let struct12#1: Encoded(uint64,uint64) = φ(struct12#0 <- block@0, struct12#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let struct12#1: Encoded(uint64,uint64) = φ(struct12#0 <- block@0, struct12#1 <- block@3) (struct12#1) with struct12#0
debug: Deleting Phi assignment: let struct12#1: Encoded(uint64,uint64) = φ(struct12#0 <- block@0, struct12#1 <- block@3)
debug: Replaced trivial Phi node: let struct12#1: Encoded(uint64,uint64) = φ(struct12#0 <- block@0, struct12#1 <- block@3) (struct12#1) with struct12#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let arr2#1: Encoded((uint64,uint64)[3]) = undefined while trying to resolve 'arr2' in block@1
debug: Added arr2#0 to Phi node: let arr2#1: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@0) in block@0
debug: Added arr2#1 to Phi node: let arr2#1: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let arr2#1: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0
debug: Deleting Phi assignment: let arr2#1: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@0, arr2#1 <- block@3)
debug: Replaced trivial Phi node: let arr2#1: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@0, arr2#1 <- block@3) (arr2#1) with arr2#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'item_index_internal%0' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_index_internal%0#1: uint64 = undefined while trying to resolve 'item_index_internal%0' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'struct12' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let struct12#2: Encoded(uint64,uint64) = undefined while trying to resolve 'struct12' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added item_index_internal%0#0 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4) in block@4
debug: Added item_index_internal%0#2 to Phi node: let item_index_internal%0#1: uint64 = φ(item_index_internal%0#0 <- block@4, item_index_internal%0#2 <- block@7) in block@7
debug: Added struct12#0 to Phi node: let struct12#2: Encoded(uint64,uint64) = φ(struct12#0 <- block@4) in block@4
debug: Added struct12#2 to Phi node: let struct12#2: Encoded(uint64,uint64) = φ(struct12#0 <- block@4, struct12#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let struct12#2: Encoded(uint64,uint64) = φ(struct12#0 <- block@4, struct12#2 <- block@7) (struct12#2) with struct12#0
debug: Deleting Phi assignment: let struct12#2: Encoded(uint64,uint64) = φ(struct12#0 <- block@4, struct12#2 <- block@7)
debug: Replaced trivial Phi node: let struct12#2: Encoded(uint64,uint64) = φ(struct12#0 <- block@4, struct12#2 <- block@7) (struct12#2) with struct12#0 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let arr1#3: Encoded((uint64,uint64)[3]) = undefined while trying to resolve 'arr1' in block@5
debug: Added arr1#1 to Phi node: let arr1#3: Encoded((uint64,uint64)[3]) = φ(arr1#1 <- block@4) in block@4
debug: Added arr1#3 to Phi node: let arr1#3: Encoded((uint64,uint64)[3]) = φ(arr1#1 <- block@4, arr1#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr1#3: Encoded((uint64,uint64)[3]) = φ(arr1#1 <- block@4, arr1#3 <- block@7) (arr1#3) with arr1#1
debug: Deleting Phi assignment: let arr1#3: Encoded((uint64,uint64)[3]) = φ(arr1#1 <- block@4, arr1#3 <- block@7)
debug: Replaced trivial Phi node: let arr1#3: Encoded((uint64,uint64)[3]) = φ(arr1#1 <- block@4, arr1#3 <- block@7) (arr1#3) with arr1#1 in current definition for 3 blocks
debug: Created Phi assignment: let arr2#2: Encoded((uint64,uint64)[3]) = undefined while trying to resolve 'arr2' in block@5
debug: Added arr2#0 to Phi node: let arr2#2: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@4) in block@4
debug: Added arr2#2 to Phi node: let arr2#2: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@4, arr2#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let arr2#2: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@4, arr2#2 <- block@7) (arr2#2) with arr2#0
debug: Deleting Phi assignment: let arr2#2: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@4, arr2#2 <- block@7)
debug: Replaced trivial Phi node: let arr2#2: Encoded((uint64,uint64)[3]) = φ(arr2#0 <- block@4, arr2#2 <- block@7) (arr2#2) with arr2#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.array.uint64.quicksort_window
debug: removing unused subroutine test_cases.array.uint64.create_array
debug: removing unused subroutine test_cases.array.uint64.assert_last_is_zero
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.add_x
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.append_length_and_return
debug: removing unused subroutine test_cases.array.uint64.do_something_with_array
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: removing unused subroutine test_cases.array.immutable.sum_imm_fixed
debug: removing unused subroutine test_cases.array.immutable.times
debug: removing unused subroutine test_cases.array.immutable.add_x
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: optimizing approval program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6 from switch tmp%8#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%8#0] else goto block@8
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6 from goto_nth [block@7][tmp%8#0] else goto block@8 to goto tmp%8#0 ? block@8 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@6
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@9 with block@8 in block@10
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, item_offset_adjustment#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%2#0, item_offset#0
debug: selected item_offset#0 from equivalence set
debug: Found equivalence set: tmp%6#0, new_head#2
debug: selected new_head#2 from equivalence set
debug: Found equivalence set: tmp%7#0, item_offset_adjustment#2
debug: selected item_offset_adjustment#2 from equivalence set
debug: Found equivalence set: tmp%9#0, item_offset#1
debug: selected item_offset#1 from equivalence set
debug: Found equivalence set: tmp%13#0, new_head#4
debug: selected new_head#4 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:202:4-26, ir_type=uint64, name='item_offset_adjustment', version=0),)
debug: Replacing redundant declaration let tmp%18#0: uint64 = (* array_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:203:33-64, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%19#0: uint64 = (len array_head_and_tail#0) with copy of existing registers (Register(source_location=INTERNAL:207:4-26, ir_type=uint64, name='item_offset_adjustment', version=2),)
debug: Replacing redundant declaration let tmp%22#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:208:33-62, ir_type=uint64, name='tmp%8', version=0),)
debug: Found equivalence set: item_offset_adjustment#0, tmp%8#0, tmp%22#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%18#0
debug: selected tmp%1#0 from equivalence set
debug: Found equivalence set: item_offset_adjustment#2, tmp%19#0
debug: selected item_offset_adjustment#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create in test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
array/unused_opt_allowed.py:13:6 debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call in test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%0#0, arr#0, inner_txn_params%0%%param_ApplicationArgs_idx_1#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%7#0, app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0, inner_txn_params%1%%param_ApplicationID_idx_0#0, inner_txn_params%2%%param_ApplicationID_idx_0#0
debug: selected app#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, nested_arr#0
debug: selected nested_arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint64[])[])%0#0, nested_arr#1, inner_txn_params%1%%param_ApplicationArgs_idx_1#0
debug: selected nested_arr#1 from equivalence set
debug: Found equivalence set: encoded_array%1#0, indirect_nested_arr#0, inner_txn_params%2%%param_ApplicationArgs_idx_1#0
debug: selected indirect_nested_arr#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%1#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#1)
debug: Removing unused variable inner_txn_params%2#0
debug: Removing unused variable inner_txn_params%2%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%2%%Fee_length#0
debug: Removing unused variable inner_txn_params%2%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%2%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%2%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%2%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%2%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%2%%Sender_length#0
debug: Removing unused variable inner_txn_params%2%%Note_length#0
debug: Removing unused variable inner_txn_params%2%%Receiver_length#0
debug: Removing unused variable inner_txn_params%2%%Amount_length#0
debug: Removing unused variable inner_txn_params%2%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%2%%VotePK_length#0
debug: Removing unused variable inner_txn_params%2%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%2%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%2%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%2%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%2%%Type_length#0
debug: Removing unused variable inner_txn_params%2%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%2%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%2%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%2%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%2%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%2%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%2%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%2%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%2%%Accounts_length#0
debug: Removing unused variable inner_txn_params%2%%Assets_length#0
debug: Removing unused variable inner_txn_params%2%%Applications_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgramPages_length#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%9#0 0u) to (! tmp%9#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@5 from switch tmp%8#0 {0u => block@6, * => block@7} to goto_nth [block@6][tmp%8#0] else goto block@7
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@5 from goto_nth [block@6][tmp%8#0] else goto block@7 to goto tmp%8#0 ? block@7 : block@6
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@12 with block@2 in block@13
debug: Merged linear block@12 into block@2
debug: Replaced predecessor block@13 with block@2 in block@14
debug: Merged linear block@13 into block@2
debug: Replaced predecessor block@14 with block@2 in block@15
debug: Merged linear block@14 into block@2
debug: Replaced predecessor block@15 with block@2 in block@16
debug: Merged linear block@15 into block@2
debug: Merged linear block@16 into block@2
debug: Replaced predecessor block@4 with block@3 in block@9
debug: Merged linear block@4 into block@3
debug: Replaced predecessor block@10 with block@6 in block@11
debug: Merged linear block@10 into block@6
debug: Merged linear block@11 into block@6
debug: Replaced predecessor block@8 with block@7 in block@9
debug: Merged linear block@8 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@3
debug: Removed empty block: block@7
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arr#0, inner_txn_params%0%%param_ApplicationArgs_idx_1#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: app#0, inner_txn_params%0%%param_ApplicationID_idx_0#0, inner_txn_params%1%%param_ApplicationID_idx_0#0, inner_txn_params%2%%param_ApplicationID_idx_0#0
debug: selected app#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, nested_arr#0
debug: selected nested_arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint64[])[])%0#0, nested_arr#1, inner_txn_params%1%%param_ApplicationArgs_idx_1#0
debug: selected nested_arr#1 from equivalence set
debug: Found equivalence set: encoded_array%1#0, indirect_nested_arr#0, inner_txn_params%2%%param_ApplicationArgs_idx_1#0
debug: selected indirect_nested_arr#0 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable inner_txn_params%0#0
debug: Removing unused variable inner_txn_params%0%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%0%%Fee_length#0
debug: Removing unused variable inner_txn_params%0%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%0%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%0%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%0%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%0%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%0%%Sender_length#0
debug: Removing unused variable inner_txn_params%0%%Note_length#0
debug: Removing unused variable inner_txn_params%0%%Receiver_length#0
debug: Removing unused variable inner_txn_params%0%%Amount_length#0
debug: Removing unused variable inner_txn_params%0%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%0%%VotePK_length#0
debug: Removing unused variable inner_txn_params%0%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%0%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%0%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%0%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%0%%Type_length#0
debug: Removing unused variable inner_txn_params%0%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%0%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%0%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%0%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%0%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%0%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%0%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%0%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%0%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%0%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%0%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%0%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%0%%Accounts_length#0
debug: Removing unused variable inner_txn_params%0%%Assets_length#0
debug: Removing unused variable inner_txn_params%0%%Applications_length#0
debug: Removing unused variable inner_txn_params%0%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%0%%ClearStateProgramPages_length#0
debug: Removing unused variable inner_txn_params%1#0
debug: Removing unused variable inner_txn_params%1%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%1%%Fee_length#0
debug: Removing unused variable inner_txn_params%1%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%1%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%1%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%1%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%1%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%1%%Sender_length#0
debug: Removing unused variable inner_txn_params%1%%Note_length#0
debug: Removing unused variable inner_txn_params%1%%Receiver_length#0
debug: Removing unused variable inner_txn_params%1%%Amount_length#0
debug: Removing unused variable inner_txn_params%1%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%1%%VotePK_length#0
debug: Removing unused variable inner_txn_params%1%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%1%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%1%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%1%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%1%%Type_length#0
debug: Removing unused variable inner_txn_params%1%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%1%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%1%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%1%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%1%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%1%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%1%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%1%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%1%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%1%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%1%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%1%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%1%%Accounts_length#0
debug: Removing unused variable inner_txn_params%1%%Assets_length#0
debug: Removing unused variable inner_txn_params%1%%Applications_length#0
debug: Removing unused variable inner_txn_params%1%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%1%%ClearStateProgramPages_length#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#0)
debug: Removing unused variable inner_txn_params%2#0
debug: Removing unused variable inner_txn_params%2%%param_Fee_idx_0#0
debug: Removing unused variable inner_txn_params%2%%Fee_length#0
debug: Removing unused variable inner_txn_params%2%%param_TypeEnum_idx_0#0
debug: Removing unused variable inner_txn_params%2%%TypeEnum_length#0
debug: Removing unused variable inner_txn_params%2%%param_ApplicationArgs_idx_0#0
debug: Removing unused variable inner_txn_params%2%%ApplicationArgs_length#0
debug: Removing unused variable inner_txn_params%2%%ApplicationID_length#0
debug: Removing unused variable inner_txn_params%2%%Sender_length#0
debug: Removing unused variable inner_txn_params%2%%Note_length#0
debug: Removing unused variable inner_txn_params%2%%Receiver_length#0
debug: Removing unused variable inner_txn_params%2%%Amount_length#0
debug: Removing unused variable inner_txn_params%2%%CloseRemainderTo_length#0
debug: Removing unused variable inner_txn_params%2%%VotePK_length#0
debug: Removing unused variable inner_txn_params%2%%SelectionPK_length#0
debug: Removing unused variable inner_txn_params%2%%VoteFirst_length#0
debug: Removing unused variable inner_txn_params%2%%VoteLast_length#0
debug: Removing unused variable inner_txn_params%2%%VoteKeyDilution_length#0
debug: Removing unused variable inner_txn_params%2%%Type_length#0
debug: Removing unused variable inner_txn_params%2%%XferAsset_length#0
debug: Removing unused variable inner_txn_params%2%%AssetAmount_length#0
debug: Removing unused variable inner_txn_params%2%%AssetSender_length#0
debug: Removing unused variable inner_txn_params%2%%AssetReceiver_length#0
debug: Removing unused variable inner_txn_params%2%%AssetCloseTo_length#0
debug: Removing unused variable inner_txn_params%2%%OnCompletion_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgram_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgram_length#0
debug: Removing unused variable inner_txn_params%2%%RekeyTo_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAsset_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetTotal_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDecimals_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetUnitName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetName_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetURL_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetManager_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetReserve_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetFreeze_length#0
debug: Removing unused variable inner_txn_params%2%%ConfigAssetClawback_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAsset_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetAccount_length#0
debug: Removing unused variable inner_txn_params%2%%FreezeAssetFrozen_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%GlobalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumUint_length#0
debug: Removing unused variable inner_txn_params%2%%LocalNumByteSlice_length#0
debug: Removing unused variable inner_txn_params%2%%ExtraProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%Nonparticipation_length#0
debug: Removing unused variable inner_txn_params%2%%StateProofPK_length#0
debug: Removing unused variable inner_txn_params%2%%Accounts_length#0
debug: Removing unused variable inner_txn_params%2%%Assets_length#0
debug: Removing unused variable inner_txn_params%2%%Applications_length#0
debug: Removing unused variable inner_txn_params%2%%ApprovalProgramPages_length#0
debug: Removing unused variable inner_txn_params%2%%ClearStateProgramPages_length#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Merged linear block@3 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/unused_opt_allowed.py:13:6 debug: inlining call to test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%7#0, app#0
debug: selected app#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#1)
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@14 with block@3 in block@15
debug: Merged linear block@14 into block@3
debug: Replaced predecessor block@15 with block@3 in block@11
debug: Merged linear block@15 into block@3
debug: Replaced predecessor block@12 with block@7 in block@13
debug: Merged linear block@12 into block@7
debug: Replaced predecessor block@13 with block@7 in block@11
debug: Merged linear block@13 into block@7
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call
debug: removing unused subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, tmp%2#1)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: lowering array IR nodes in clear program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: optimizing approval program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+(len+uint64[])[])%0#0, nested_arr#0
debug: selected nested_arr#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded((len+uint64[])[])%0#0, tmp%0#2
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%1#0, aggregate%as_Encoded(len+((len+uint64[]),uint64)[])%0#0, indirect_nested_arr#0
debug: selected indirect_nested_arr#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%1#1
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((len+uint64[]),uint64)%0#0
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded(((len+uint64[]),uint64)[])%0#0, tmp%2#1
debug: selected aggregate%concat%2#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, aggregate%concat%2#0)
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, aggregate%concat%2#0)
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(extract_uint16%1#0, extract_to_end%1#0, 1u, aggregate%concat%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified ((extract 2 0) 0x0000) to 0x
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x000a
debug: Simplified (concat 0x 0x000a) to 0x000a
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%as_bytes%2#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:20:21-61, ir_type=bytes[8], name='aggregate%as_bytes%0', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%4#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/unused_opt_allowed.py:21:21-43, ir_type=bytes[8], name='aggregate%as_bytes%1', version=0),)
debug: Found equivalence set: aggregate%as_bytes%0#0, aggregate%as_bytes%2#0
debug: selected aggregate%as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%1#0, aggregate%as_bytes%4#0
debug: selected aggregate%as_bytes%1#0 from equivalence set
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable nested_arr#0
debug: Removing unused variable extract_uint16%0#0
debug: Removing unused variable extract_to_end%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable indirect_nested_arr#0
debug: Removing unused variable extract_uint16%1#0
debug: Removing unused variable extract_to_end%1#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%head%3#0
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(0u, 0x, 1u, aggregate%concat%2#0)
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(0u, 0x, 1u, aggregate%concat%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Not removing unused assignment since source is not marked as pure: let as_Encoded(len+((len+uint64[]),uint64)[])%0#0: Encoded(len+((len+uint64[]),uint64)[]) = _puya_lib.arc4.dynamic_array_concat_dynamic_element(0u, 0x, 1u, aggregate%concat%2#0)
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.unused_opt_allowed.AbiCallContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.unused_opt_allowed.AbiCallContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 with [test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#1, test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#2]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 8 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy 'root_operand'
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 38 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/AbiCallContract.ir/AbiCallContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/AbiCallContract.ir/AbiCallContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[4]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[17]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[19]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[59]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[61]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[67]: 'l-store-copy aggregate%head%2#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[69]: 'v-load aggregate%head%2#0' with 'l-load aggregate%head%2#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[96]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[98]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[21]: 'l-store-copy app#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[24]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[64]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[67]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[74]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[77]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[38]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[43]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[80]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[85]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[45]: 'l-store-copy nested_arr#1 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[52]: 'v-load nested_arr#1' with 'l-load nested_arr#1'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[29]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[37]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[29]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[62]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[77]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[39]: 'l-store-copy arr#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[62]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[26]: 'l-store-copy app#0 1'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[52]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_test_implicit_conversion_abi_call_route@3.ops[53]: 'l-store-copy app#0 2'
debug: Replaced main_test_implicit_conversion_abi_call_route@3.ops[96]: 'v-load app#0' with 'l-load app#0'
debug: Inserted main_bare_routing@6.ops[1]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_bare_routing@6.ops[3]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main___algopy_default_create@7.ops[1]: 'l-store-copy tmp%9#0 0'
debug: Replaced main___algopy_default_create@7.ops[3]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main___algopy_default_create@7.ops[5]: 'l-store-copy tmp%10#0 0'
debug: Replaced main___algopy_default_create@7.ops[7]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted main___algopy_default_create@7.ops[10]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@7.ops[12]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@10.ops[1]: 'l-store-copy test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@10.ops[3]: 'v-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'l-store-copy tmp%25#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[21]: 'l-store-copy tmp%20#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[34]: 'l-store-copy tmp%24#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[29]: 'l-store-copy tmp%23#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'l-store-copy tmp%21#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_abi_call_route@3 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main___algopy_default_create@7 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: shared x-stack for main_after_if_else@10 -> main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11: tmp%0#0
debug: Found 4 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['item_offset_adjustment#2']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%1#0', 'head_offset#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11` with `return`
debug: replacing `b main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__@11 into main_after_if_else@10
debug: inlining single reference block main___algopy_default_create@7 into main_bare_routing@6
debug: removing explicit jump to fall-through block main_after_if_else@10
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: inlining single reference block dynamic_array_concat_dynamic_element_block@0 into dynamic_array_concat_dynamic_element
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@2 into dynamic_array_concat_dynamic_element_for_header@1
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@6 into dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
array/uint64.py:201 debug: function is auto-recursive: test_cases.array.uint64.quicksort_window
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.array.uint64.return_ref for inlining
debug: marking single-use function test_cases.array.uint64.pop_x for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_multiple_append for inlining
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: marking single-use function test_cases.array.uint64.Contract.test_array_too_long for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_copy_and_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_evaluation_order for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_allocations for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_iteration for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_quicksort for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_unobserved_write for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%35#0 NoOp) to (! tmp%35#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%44#0 NoOp) to (! tmp%44#0)
debug: Simplified (== tmp%48#0 NoOp) to (! tmp%48#0)
debug: Simplified (== tmp%53#0 0u) to (! tmp%53#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@17 from switch tmp%52#0 {0u => block@18, * => block@19} to goto_nth [block@18][tmp%52#0] else goto block@19
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@17 from goto_nth [block@18][tmp%52#0] else goto block@19 to goto tmp%52#0 ? block@19 : block@18
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@17
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@16 with block@15 in block@21
debug: Merged linear block@16 into block@15
debug: Replaced predecessor block@20 with block@19 in block@21
debug: Merged linear block@20 into block@19
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@15
debug: Removed empty block: block@19
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#1, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#1, array_head_and_tail#3
debug: selected array_head_and_tail#3 from equivalence set
debug: Found equivalence set: tmp%11#1, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 16 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%1#1: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%4#1: uint64 = (* array_length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=1),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%1#0, tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%0#1, tmp%4#1
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: window_left#0, left#0
debug: selected window_left#0 from equivalence set
debug: Found equivalence set: window_right#0, right#0
debug: selected window_right#0 from equivalence set
debug: Found equivalence set: values%0#0, pivot#0
debug: selected pivot#0 from equivalence set
debug: Found equivalence set: tmp%3#0, left#2
debug: selected left#2 from equivalence set
debug: Found equivalence set: tmp%6#0, right#2
debug: selected right#2 from equivalence set
debug: Found equivalence set: arr#2, arr#4, arr#5
debug: selected arr#2 from equivalence set
debug: Found equivalence set: tmp%8#0, left#5
debug: selected left#5 from equivalence set
debug: Found equivalence set: tmp%10#0, right#5
debug: selected right#5 from equivalence set
debug: Found equivalence set: tmp%13#0, left#6
debug: selected left#6 from equivalence set
debug: Found equivalence set: tmp%15#0, right#6
debug: selected right#6 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== right#1 0u) to (! right#1)
debug: Simplified (== right#1 0u) to (! right#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@1 from goto 1u ? block@2 : block@22 to goto block@2
debug: simplified branch on !tmp%5#0 by swapping zero and non-zero targets
debug: simplified terminator of block@7 from goto tmp%5#0 ? block@8 : block@9 to goto right#1 ? block@9 : block@8
debug: simplified branch on !tmp%9#0 by swapping zero and non-zero targets
debug: simplified terminator of block@11 from goto tmp%9#0 ? block@12 : block@13 to goto right#1 ? block@13 : block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@2 with block@1 in block@3
debug: Merged linear block@2 into block@1
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Removed empty block: block@8
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Removed empty block: block@20
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: array_item%3#0
debug: replacing redundant encode-of-decode with: array_item%4#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== values%0#0 0u) to (! values%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.return_ref
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%2#0, expected#2
debug: selected expected#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let total_length%0#0: uint64 = (len slot_contents%0#0) with copy of existing registers (Register(source_location=array/uint64.py:286:17-26, ir_type=uint64, name='len%0', version=0),)
debug: Found equivalence set: len%0#0, total_length%0#0
debug: selected len%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:191:6 debug: inlining call to test_cases.array.uint64.Contract.test_unobserved_write in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:174:6 debug: inlining call to test_cases.array.uint64.Contract.test_quicksort in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:140:6 debug: inlining call to test_cases.array.uint64.Contract.test_iteration in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:134:6 debug: inlining call to test_cases.array.uint64.Contract.test_allocations in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:125:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:106:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_evaluation_order in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:84:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_copy_and_extend in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:75:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_too_long in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:71:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_multiple_append in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:50:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_extend in test_cases.array.uint64.Contract.__puya_arc4_router__
array/uint64.py:14:6 debug: inlining call to test_cases.array.uint64.Contract.test_array in test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#9, arr#9
debug: selected arr#9 from equivalence set
debug: Found equivalence set: slot%0#8, arr#8
debug: selected arr#8 from equivalence set
debug: Found equivalence set: slot%1#2, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: slot%0#7, arr#7
debug: selected arr#7 from equivalence set
debug: Found equivalence set: slot%0#6, array#1
debug: selected array#1 from equivalence set
debug: Found equivalence set: slot%0#5, array#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: slot%1#1, array2#0
debug: selected array2#0 from equivalence set
debug: Found equivalence set: slot%0#4, arr#5, arr#6
debug: selected arr#5 from equivalence set
debug: Found equivalence set: slot%0#3, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: tmp%39#0, num#0
debug: selected num#0 from equivalence set
debug: Found equivalence set: slot%0#2, alloc_test#0
debug: selected alloc_test#0 from equivalence set
debug: Found equivalence set: slot%0#1, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: values%0#2, value#1, last#6
debug: selected value#1 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#1
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%1#0, value#2
debug: selected value#2 from equivalence set
debug: Found equivalence set: item_index_internal%1#4, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: values%2#0, value#3, last#8
debug: selected value#3 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, native_arr#0
debug: selected native_arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arc4_arr#2
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, combined_arr#0
debug: selected combined_arr#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%0#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%4#0, reinterpret_biguint%2#0
debug: selected array_item%4#0 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%4#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: array_item%6#0, reinterpret_biguint%6#0
debug: selected array_item%6#0 from equivalence set
debug: Found equivalence set: slot%0#0, rnd#0
debug: selected rnd#0 from equivalence set
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#1, value#0, last#3
debug: selected value#0 from equivalence set
debug: Found equivalence set: tmp%0#1, arr#0, arr#1, arr#2
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%2#1, last#0
debug: selected last#0 from equivalence set
debug: Copy propagation made 56 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%0#10 0u) to (! tmp%0#10)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%15#0 NoOp) to (! tmp%15#0)
debug: Simplified (== tmp%19#0 NoOp) to (! tmp%19#0)
debug: Simplified (== tmp%23#0 NoOp) to (! tmp%23#0)
debug: Simplified (== values%5#1 0u) to (! values%5#1)
debug: Simplified (== tmp%27#0 NoOp) to (! tmp%27#0)
debug: Simplified (== tmp%31#0 NoOp) to (! tmp%31#0)
debug: Simplified (== tmp%35#0 NoOp) to (! tmp%35#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%44#0 NoOp) to (! tmp%44#0)
debug: Simplified (len tmp%0#2) to 32u
debug: Simplified (btoi b#0) to (getbyte tmp%0#2 item_index_internal%0#1)
debug: Simplified (== tmp%48#0 NoOp) to (! tmp%48#0)
debug: Simplified (== tmp%53#0 0u) to (! tmp%53#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%1#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%3#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@16 from switch tmp%52#0 {0u => block@17, * => block@18} to goto_nth [block@17][tmp%52#0] else goto block@18
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@16 from goto_nth [block@17][tmp%52#0] else goto block@18 to goto tmp%52#0 ? block@18 : block@17
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@85 with block@2 in block@86
debug: Merged linear block@85 into block@2
debug: Merged linear block@86 into block@2
debug: Replaced predecessor block@83 with block@3 in block@84
debug: Merged linear block@83 into block@3
debug: Merged linear block@84 into block@3
debug: Replaced predecessor block@81 with block@4 in block@82
debug: Merged linear block@81 into block@4
debug: Merged linear block@82 into block@4
debug: Replaced predecessor block@79 with block@5 in block@80
debug: Merged linear block@79 into block@5
debug: Merged linear block@80 into block@5
debug: Replaced predecessor block@73 with block@6 in block@74
debug: Merged linear block@73 into block@6
debug: Replaced predecessor block@76 with block@75 in block@74
debug: Merged linear block@76 into block@75
debug: Merged linear block@78 into block@77
debug: Replaced predecessor block@67 with block@7 in block@68
debug: Merged linear block@67 into block@7
debug: Replaced predecessor block@70 with block@69 in block@68
debug: Merged linear block@70 into block@69
debug: Merged linear block@72 into block@71
debug: Replaced predecessor block@65 with block@8 in block@66
debug: Merged linear block@65 into block@8
debug: Merged linear block@66 into block@8
debug: Replaced predecessor block@63 with block@9 in block@64
debug: Merged linear block@63 into block@9
debug: Merged linear block@64 into block@9
debug: Replaced predecessor block@57 with block@10 in block@58
debug: Merged linear block@57 into block@10
debug: Replaced predecessor block@60 with block@59 in block@58
debug: Merged linear block@60 into block@59
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@35 with block@11 in block@36
debug: Merged linear block@35 into block@11
debug: Replaced predecessor block@38 with block@37 in block@36
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@42 with block@41 in block@40
debug: Merged linear block@42 into block@41
debug: Replaced predecessor block@46 with block@45 in block@44
debug: Merged linear block@46 into block@45
debug: Replaced predecessor block@50 with block@49 in block@48
debug: Merged linear block@50 into block@49
debug: Replaced predecessor block@54 with block@53 in block@52
debug: Merged linear block@54 into block@53
debug: Merged linear block@56 into block@55
debug: Replaced predecessor block@25 with block@12 in block@26
debug: Merged linear block@25 into block@12
debug: Replaced predecessor block@28 with block@27 in block@26
debug: Merged linear block@28 into block@27
debug: Replaced predecessor block@32 with block@31 in block@30
debug: Merged linear block@32 into block@31
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@23 with block@13 in block@24
debug: Merged linear block@23 into block@13
debug: Merged linear block@24 into block@13
debug: Replaced predecessor block@15 with block@14 in block@20
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@21 with block@17 in block@22
debug: Merged linear block@21 into block@17
debug: Merged linear block@22 into block@17
debug: Replaced predecessor block@19 with block@18 in block@20
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@14
debug: Removed empty block: block@18
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#1: Encoded(uint64[]) = bytes_encode<uint64[]>() with copy of existing registers (Register(source_location=array/uint64.py:52:14-38, ir_type=Encoded(uint64[]), name='encoded_array%0', version=8),)
debug: Replacing redundant declaration let tmp%8#1: Encoded(uint64) = bytes_encode<uint64>(i#1) with copy of existing registers (Register(source_location=array/uint64.py:165:28-42, ir_type=Encoded(uint64), name='tmp%6', version=2),)
debug: Replacing redundant declaration let encoded_array%2#0: Encoded(uint64[]) = bytes_encode<uint64[]>() with copy of existing registers (Register(source_location=array/uint64.py:142:14-38, ir_type=Encoded(uint64[]), name='encoded_array%0', version=1),)
debug: Found equivalence set: encoded_array%0#8, encoded_array%1#1
debug: selected encoded_array%0#8 from equivalence set
debug: Found equivalence set: encoded_array%0#1, encoded_array%2#0
debug: selected encoded_array%0#1 from equivalence set
debug: Found equivalence set: tmp%6#2, tmp%8#1
debug: selected tmp%6#2 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let tmp%9#1: Encoded(uint64[]) = bytes_encode<uint64[]>(tmp%6#2) with copy of existing registers (Register(source_location=array/uint64.py:165:12-43, ir_type=Encoded(uint64[]), name='tmp%7', version=2),)
debug: Found equivalence set: tmp%7#2, tmp%9#1
debug: selected tmp%7#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: array_item%6#1
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/uint64.py:27:9 debug: inlining call to test_cases.array.uint64.pop_x in test_cases.array.uint64.Contract.test_array
array/uint64.py:44:9 debug: inlining call to test_cases.array.uint64.return_ref in test_cases.array.uint64.Contract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0, arr#1, arr#2, arr2#0, tmp%36#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@6 with block@4 in block@7
debug: Merged linear block@6 into block@4
debug: Merged linear block@7 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let encoded_array%1#0: Encoded(uint64[]) = bytes_encode<uint64[]>() with copy of existing registers (Register(source_location=array/uint64.py:52:14-38, ir_type=Encoded(uint64[]), name='encoded_array%0', version=0),)
debug: Found equivalence set: encoded_array%0#0, encoded_array%1#0
debug: selected encoded_array%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: selected array#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, array#0
debug: selected array#0 from equivalence set
debug: Found equivalence set: slot%1#0, array2#0
debug: selected array2#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== values%5#0 0u) to (! values%5#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0, arr#1
debug: selected arr#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: replacing redundant encode-of-decode with: array_item%6#0
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, alloc_test#0
debug: selected alloc_test#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0, last#2
debug: selected value#0 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%1#0, value#1
debug: selected value#1 from equivalence set
debug: Found equivalence set: item_index_internal%1#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: values%2#0, value#2, last#4
debug: selected value#2 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, native_arr#0
debug: selected native_arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arc4_arr#2
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, combined_arr#0
debug: selected combined_arr#0 from equivalence set
debug: Found equivalence set: array_item%3#0, reinterpret_biguint%0#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%4#0, reinterpret_biguint%2#0
debug: selected array_item%4#0 from equivalence set
debug: Found equivalence set: array_item%5#0, reinterpret_biguint%4#0
debug: selected array_item%5#0 from equivalence set
debug: Found equivalence set: array_item%6#0, reinterpret_biguint%6#0
debug: selected array_item%6#0 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item_index_internal%2#0
debug: Removing unused variable reinterpret_biguint%1#0
debug: Removing unused variable reinterpret_biguint%3#0
debug: Removing unused variable reinterpret_biguint%5#0
debug: Removing unused variable reinterpret_biguint%7#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%1#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%3#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@11 with block@10 in block@9
debug: Merged linear block@11 into block@10
debug: Replaced predecessor block@15 with block@14 in block@13
debug: Merged linear block@15 into block@14
debug: Replaced predecessor block@19 with block@18 in block@17
debug: Merged linear block@19 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: Encoded(uint64) = bytes_encode<uint64>(i#1) with copy of existing registers (Register(source_location=array/uint64.py:165:28-42, ir_type=Encoded(uint64), name='tmp%6', version=0),)
debug: Replacing redundant declaration let encoded_array%2#0: Encoded(uint64[]) = bytes_encode<uint64[]>() with copy of existing registers (Register(source_location=array/uint64.py:142:14-38, ir_type=Encoded(uint64[]), name='encoded_array%0', version=0),)
debug: Found equivalence set: encoded_array%0#0, encoded_array%2#0
debug: selected encoded_array%0#0 from equivalence set
debug: Found equivalence set: tmp%6#0, tmp%8#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let tmp%9#0: Encoded(uint64[]) = bytes_encode<uint64[]>(tmp%6#0) with copy of existing registers (Register(source_location=array/uint64.py:165:12-43, ir_type=Encoded(uint64[]), name='tmp%7', version=0),)
debug: Found equivalence set: tmp%7#0, tmp%9#0
debug: selected tmp%7#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, rnd#0
debug: selected rnd#0 from equivalence set
debug: Found equivalence set: bytes_length%0#0, reverse_index_internal%0#0
debug: selected bytes_length%0#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%1#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, value#0, last#2
debug: selected value#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len tmp%0#0) to 32u
debug: Simplified (btoi b#0) to (getbyte tmp%0#0 item_index_internal%0#1)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_unobserved_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr#0, arr#1, arr#2
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%2#0, last#0
debug: selected last#0 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.uint64.return_ref
debug: removing unused subroutine test_cases.array.uint64.pop_x
debug: removing unused subroutine test_cases.array.uint64.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_multiple_append for inlining
debug: marking trivial method test_cases.array.uint64.Contract.overhead as inlineable
debug: marking single-use function test_cases.array.uint64.Contract.test_array_too_long for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_copy_and_extend for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_evaluation_order for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_allocations for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_iteration for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_quicksort for inlining
debug: marking single-use function test_cases.array.uint64.Contract.test_unobserved_write for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.uint64.Contract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:191:6 debug: inlining call to test_cases.array.uint64.Contract.test_unobserved_write in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:174:6 debug: inlining call to test_cases.array.uint64.Contract.test_quicksort in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:140:6 debug: inlining call to test_cases.array.uint64.Contract.test_iteration in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:134:6 debug: inlining call to test_cases.array.uint64.Contract.test_allocations in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:125:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:106:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_evaluation_order in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:84:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_copy_and_extend in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:75:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_too_long in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:71:6 debug: inlining call to test_cases.array.uint64.Contract.overhead in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:62:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_multiple_append in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:50:6 debug: inlining call to test_cases.array.uint64.Contract.test_array_extend in algopy.arc4.ARC4Contract.approval_program
array/uint64.py:14:6 debug: inlining call to test_cases.array.uint64.Contract.test_array in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%6#1, encoded_value%0#2
debug: selected array_item%6#1 from equivalence set
debug: Found equivalence set: tmp%39#0, num#0
debug: selected num#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%18#0
debug: Removing unused variable tmp%22#0
debug: Removing unused variable tmp%26#0
debug: Removing unused variable tmp%30#0
debug: Removing unused variable values%6#0
debug: Removing unused variable tmp%34#0
debug: Removing unused variable tmp%38#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable continue_looping%3#0
debug: Removing unused variable tmp%47#0
debug: Removing unused variable bytes_length%0#0
debug: Removing unused variable b#0
debug: Removing unused variable tmp%51#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@77 with block@3 in block@78
debug: Merged linear block@77 into block@3
debug: Replaced predecessor block@81 with block@80 in block@22
debug: Merged linear block@81 into block@80
debug: Replaced predecessor block@75 with block@4 in block@76
debug: Merged linear block@75 into block@4
debug: Replaced predecessor block@76 with block@4 in block@22
debug: Merged linear block@76 into block@4
debug: Replaced predecessor block@73 with block@5 in block@74
debug: Merged linear block@73 into block@5
debug: Replaced predecessor block@74 with block@5 in block@22
debug: Merged linear block@74 into block@5
debug: Replaced predecessor block@71 with block@6 in block@72
debug: Merged linear block@71 into block@6
debug: Replaced predecessor block@72 with block@6 in block@22
debug: Merged linear block@72 into block@6
debug: Replaced predecessor block@66 with block@7 in block@67
debug: Merged linear block@66 into block@7
debug: Replaced predecessor block@70 with block@69 in block@22
debug: Merged linear block@70 into block@69
debug: Replaced predecessor block@61 with block@8 in block@62
debug: Merged linear block@61 into block@8
debug: Replaced predecessor block@65 with block@64 in block@22
debug: Merged linear block@65 into block@64
debug: Replaced predecessor block@59 with block@9 in block@60
debug: Merged linear block@59 into block@9
debug: Replaced predecessor block@60 with block@9 in block@22
debug: Merged linear block@60 into block@9
debug: Replaced predecessor block@57 with block@10 in block@58
debug: Merged linear block@57 into block@10
debug: Replaced predecessor block@58 with block@10 in block@22
debug: Merged linear block@58 into block@10
debug: Replaced predecessor block@52 with block@11 in block@53
debug: Merged linear block@52 into block@11
debug: Replaced predecessor block@56 with block@55 in block@22
debug: Merged linear block@56 into block@55
debug: Replaced predecessor block@35 with block@12 in block@36
debug: Merged linear block@35 into block@12
debug: Replaced predecessor block@51 with block@50 in block@22
debug: Merged linear block@51 into block@50
debug: Replaced predecessor block@27 with block@13 in block@28
debug: Merged linear block@27 into block@13
debug: Replaced predecessor block@34 with block@33 in block@22
debug: Merged linear block@34 into block@33
debug: Replaced predecessor block@25 with block@14 in block@26
debug: Merged linear block@25 into block@14
debug: Replaced predecessor block@26 with block@14 in block@22
debug: Merged linear block@26 into block@14
debug: Replaced predecessor block@23 with block@18 in block@24
debug: Merged linear block@23 into block@18
debug: Replaced predecessor block@24 with block@18 in block@22
debug: Merged linear block@24 into block@18
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%10#0, array_head_and_tail#1
debug: selected array_head_and_tail#1 from equivalence set
debug: Found equivalence set: array_length#0, length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: index#0, start_at_index#0
debug: selected index#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#2, tmp%11#0
debug: selected array_head_and_tail#2 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let head_offset#0: uint64 = (* index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:298:59-78, ir_type=uint64, name='tmp%1', version=1),)
debug: Found equivalence set: tmp%1#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%3#0, encoded_value%0#0
debug: selected array_item%3#0 from equivalence set
debug: Found equivalence set: array_item%4#0, encoded_value%1#0
debug: selected array_item%4#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%5#0
debug: Removing unused variable values%3#0
debug: Removing unused variable values%4#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.overhead
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_item%6#0, encoded_value%0#0
debug: selected array_item%6#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable values%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_allocations
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_iteration
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable continue_looping%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_quicksort
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable bytes_length%0#0
debug: Removing unused variable b#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.test_unobserved_write
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_multiple_append
debug: removing unused subroutine test_cases.array.uint64.Contract.overhead
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_too_long
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_copy_and_extend
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_evaluation_order
debug: removing unused subroutine test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage
debug: removing unused subroutine test_cases.array.uint64.Contract.test_allocations
debug: removing unused subroutine test_cases.array.uint64.Contract.test_iteration
debug: removing unused subroutine test_cases.array.uint64.Contract.test_quicksort
debug: removing unused subroutine test_cases.array.uint64.Contract.test_unobserved_write
debug: removing unused subroutine test_cases.array.uint64.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 3, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.uint64.Contract
debug: lowering array IR nodes in clear program of test_cases.array.uint64.Contract
debug: optimizing approval program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%array_len%0#0, tmp%0#10
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%1#0, tmp%2#9
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%1#0, tmp%3#10
debug: selected aggregate%array_len%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%2#0, tmp%5#5
debug: selected aggregate%array_len%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#6
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%3#0, tmp%8#3
debug: selected aggregate%array_len%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%4#0, tmp%10#4
debug: selected aggregate%array_len%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#4
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%5#0, tmp%13#4
debug: selected aggregate%array_len%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%6#0, tmp%15#4
debug: selected aggregate%array_len%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#3
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64[])%2#0, tmp%18#3
debug: selected aggregate%head%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%7#0, tmp%19#3
debug: selected aggregate%array_len%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%8#0, tmp%21#2
debug: selected aggregate%array_len%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#3
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%4#3
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%9#0, tmp%25#1
debug: selected aggregate%array_len%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%10#0, tmp%27#1
debug: selected aggregate%array_len%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, array_item%5#3
debug: selected aggregate%encoded_element%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(uint64[])%3#0, tmp%30#1
debug: selected aggregate%head%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%11#0, tmp%31#1
debug: selected aggregate%array_len%11#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%12#0, tmp%33#1
debug: selected aggregate%array_len%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%6#0, array_item%6#2
debug: selected aggregate%encoded_element%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(uint64[])%4#0, tmp%0#11
debug: selected aggregate%head%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(uint64[])%5#0, tmp%1#12
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%7#0, array_item%7#1
debug: selected aggregate%encoded_element%7#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%as_Encoded(uint64)%5#0, encoded_value%0#3
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, updated_array%0#3
debug: selected aggregate%updated_array%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%13#0, tmp%38#1
debug: selected aggregate%array_len%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%9#0, array_item%8#1
debug: selected aggregate%encoded_element%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%14#0, tmp%41#1
debug: selected aggregate%array_len%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%10#0, array_item%9#1
debug: selected aggregate%encoded_element%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%15#0, tmp%44#1
debug: selected aggregate%array_len%15#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%11#0, array_item%10#1
debug: selected aggregate%encoded_element%11#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%as_Encoded(uint64)%6#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(uint64[])%7#0, tmp%0#9
debug: selected aggregate%head%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%as_Encoded(uint64)%7#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%head%6#0, aggregate%as_Encoded(uint64[])%8#0, tmp%1#9
debug: selected aggregate%head%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, aggregate%as_Encoded(uint64)%8#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%as_Encoded(uint64[])%9#0, tmp%2#8
debug: selected aggregate%head%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%16#0, tmp%3#9
debug: selected aggregate%array_len%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%as_Encoded(uint64)%9#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%head%8#0, aggregate%as_Encoded(uint64[])%11#0, tmp%0#8
debug: selected aggregate%head%8#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%as_Encoded(uint64)%10#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%head%9#0, aggregate%as_Encoded(uint64[])%12#0, tmp%1#8
debug: selected aggregate%head%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%as_Encoded(uint64)%11#0
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%head%10#0, aggregate%as_Encoded(uint64[])%13#0, tmp%2#7
debug: selected aggregate%head%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%17#0, tmp%3#8
debug: selected aggregate%array_len%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%12#0, aggregate%as_Encoded(uint64)%12#0
debug: selected aggregate%val_as_bytes%12#0 from equivalence set
debug: Found equivalence set: aggregate%head%11#0, aggregate%as_Encoded(uint64[])%15#0, tmp%0#7
debug: selected aggregate%head%11#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%18#0, tmp%1#7
debug: selected aggregate%array_len%18#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%13#0, aggregate%as_Encoded(uint64)%13#0
debug: selected aggregate%val_as_bytes%13#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%as_Encoded(uint64[])%16#0, tmp%3#7
debug: selected aggregate%head%12#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%14#0, aggregate%as_Encoded(uint64)%14#0
debug: selected aggregate%val_as_bytes%14#0 from equivalence set
debug: Found equivalence set: aggregate%head%13#0, aggregate%as_Encoded(uint64[])%18#0, tmp%0#6
debug: selected aggregate%head%13#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%15#0, aggregate%as_Encoded(uint64)%15#0
debug: selected aggregate%val_as_bytes%15#0 from equivalence set
debug: Found equivalence set: aggregate%head%14#0, aggregate%as_Encoded(uint64[])%19#0, tmp%1#6
debug: selected aggregate%head%14#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%19#0, tmp%2#5
debug: selected aggregate%array_len%19#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%20#0, tmp%4#5
debug: selected aggregate%array_len%20#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, array_item%0#5
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%21#0, tmp%7#4
debug: selected aggregate%array_len%21#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%22#0, tmp%9#2
debug: selected aggregate%array_len%22#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%1#3
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%23#0, tmp%12#3
debug: selected aggregate%array_len%23#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%24#0, tmp%14#3
debug: selected aggregate%array_len%24#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%25#0, tmp%16#2
debug: selected aggregate%array_len%25#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%14#0, array_item%2#2
debug: selected aggregate%encoded_element%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%15#0, array_item%3#2
debug: selected aggregate%encoded_element%15#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%16#0, array_item%4#2
debug: selected aggregate%encoded_element%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%17#0, array_item%5#2
debug: selected aggregate%encoded_element%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%16#0, aggregate%as_Encoded(uint64)%16#0
debug: selected aggregate%val_as_bytes%16#0 from equivalence set
debug: Found equivalence set: aggregate%head%15#0, aggregate%as_Encoded(uint64[])%21#0, tmp%0#5
debug: selected aggregate%head%15#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%26#0, tmp%3#5
debug: selected aggregate%array_len%26#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%18#0, array_item%0#4
debug: selected aggregate%encoded_element%18#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%19#0, array_item%1#2
debug: selected aggregate%encoded_element%19#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%20#0, array_item%2#1
debug: selected aggregate%encoded_element%20#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%21#0, array_item%3#1
debug: selected aggregate%encoded_element%21#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%22#0, array_item%4#1
debug: selected aggregate%encoded_element%22#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%23#0, array_item%5#1
debug: selected aggregate%encoded_element%23#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%27#0, tmp%12#2
debug: selected aggregate%array_len%27#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%24#0, array_item%6#1
debug: selected aggregate%encoded_element%24#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%25#0, array_item%7#0
debug: selected aggregate%encoded_element%25#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, updated_array%0#2
debug: selected aggregate%updated_array%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%28#0, tmp%15#2
debug: selected aggregate%array_len%28#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%27#0, array_item%8#0
debug: selected aggregate%encoded_element%27#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%28#0, array_item%9#0
debug: selected aggregate%encoded_element%28#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%29#0, array_item%10#0
debug: selected aggregate%encoded_element%29#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, aggregate%as_Encoded(uint64)%17#0
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%head%16#0, aggregate%as_Encoded(uint64[])%23#0, tmp%0#4
debug: selected aggregate%head%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%18#0, aggregate%as_Encoded(uint64)%18#0, encoded_value%0#1
debug: selected aggregate%val_as_bytes%18#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%2#0, updated_array%0#1
debug: selected aggregate%updated_array%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%29#0, tmp%1#4
debug: selected aggregate%array_len%29#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%31#0, array_item%0#3
debug: selected aggregate%encoded_element%31#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%32#0, array_item%1#1
debug: selected aggregate%encoded_element%32#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%19#0, aggregate%as_Encoded(uint64)%19#0
debug: selected aggregate%val_as_bytes%19#0 from equivalence set
debug: Found equivalence set: aggregate%head%17#0, aggregate%as_Encoded(uint64[])%26#0, tmp%0#3
debug: selected aggregate%head%17#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%30#0, tmp%1#3
debug: selected aggregate%array_len%30#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%31#0, array_length%0#1
debug: selected aggregate%array_len%31#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%33#0, array_item%0#2
debug: selected aggregate%encoded_element%33#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%32#0, array_length%1#0
debug: selected aggregate%array_len%32#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%34#0, array_item%1#0
debug: selected aggregate%encoded_element%34#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%33#0, array_length%2#0
debug: selected aggregate%array_len%33#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%35#0, array_item%2#0
debug: selected aggregate%encoded_element%35#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%20#0, aggregate%as_Encoded(uint64)%20#0, tmp%6#2
debug: selected aggregate%val_as_bytes%20#0 from equivalence set
debug: Found equivalence set: aggregate%head%18#0, aggregate%as_Encoded(uint64[])%27#0, tmp%7#2
debug: selected aggregate%head%18#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%10#1
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%36#0, array_item%3#0
debug: selected aggregate%encoded_element%36#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%37#0, array_item%4#0
debug: selected aggregate%encoded_element%37#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%38#0, array_item%5#0
debug: selected aggregate%encoded_element%38#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%39#0, array_item%6#0
debug: selected aggregate%encoded_element%39#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%21#0, aggregate%as_Encoded(uint64)%21#0
debug: selected aggregate%val_as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%head%19#0, aggregate%as_Encoded(uint64[])%29#0, tmp%2#1
debug: selected aggregate%head%19#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%34#0, tmp%3#2
debug: selected aggregate%array_len%34#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%35#0, tmp%5#1
debug: selected aggregate%array_len%35#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%36#0, array_length%0#0
debug: selected aggregate%array_len%36#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%40#0, array_item%0#1
debug: selected aggregate%encoded_element%40#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%37#0, tmp%1#1
debug: selected aggregate%array_len%37#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%22#0, aggregate%as_Encoded(uint64)%22#0, encoded_value%0#0
debug: selected aggregate%val_as_bytes%22#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%3#0, updated_array%0#0
debug: selected aggregate%updated_array%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%23#0, aggregate%as_Encoded(uint64)%23#0, encoded_value%1#0
debug: selected aggregate%val_as_bytes%23#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%4#0, updated_array%1#0
debug: selected aggregate%updated_array%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%43#0, array_item%0#0
debug: selected aggregate%encoded_element%43#0 from equivalence set
debug: Copy propagation made 129 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_Encoded(uint64[])%0#0
debug: Removing unused variable encoded_array%0#9
debug: Removing unused variable aggregate%encoded_element%8#0
debug: Removing unused variable aggregate%as_Encoded(uint64[])%6#0
debug: Removing unused variable encoded_array%0#8
debug: Removing unused variable aggregate%as_Encoded(uint64[])%10#0
debug: Removing unused variable encoded_array%0#7
debug: Removing unused variable aggregate%as_Encoded(uint64[])%14#0
debug: Removing unused variable encoded_array%0#6
debug: Removing unused variable aggregate%as_Encoded(uint64[])%17#0
debug: Removing unused variable encoded_array%0#5
debug: Removing unused variable aggregate%as_Encoded(uint64[])%20#0
debug: Removing unused variable encoded_array%0#4
debug: Removing unused variable aggregate%encoded_element%26#0
debug: Removing unused variable aggregate%as_Encoded(uint64[])%22#0
debug: Removing unused variable encoded_array%0#3
debug: Removing unused variable aggregate%encoded_element%30#0
debug: Removing unused variable aggregate%as_Encoded(uint64[])%24#0
debug: Removing unused variable encoded_array%0#2
debug: Removing unused variable aggregate%as_Encoded(uint64[])%25#0
debug: Removing unused variable encoded_array%0#1
debug: Removing unused variable aggregate%as_Encoded(uint64[])%28#0
debug: Removing unused variable encoded_array%0#0
debug: Removing unused variable aggregate%encoded_element%41#0
debug: Removing unused variable aggregate%encoded_element%42#0
debug: Removing unused variable aggregate%bytes_offset%8#0
debug: Removing unused variable aggregate%bytes_offset%26#0
debug: Removing unused variable aggregate%bytes_offset%30#0
debug: Removing unused variable aggregate%bytes_offset%41#0
debug: Removing unused variable aggregate%bytes_offset%42#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (btoi aggregate%encoded_element%0#0) to (extract_uint64 slot_contents%1#9 aggregate%bytes_offset%0#0)
debug: Simplified (btoi aggregate%encoded_element%1#0) to (extract_uint64 slot_contents%2#7 aggregate%bytes_offset%1#0)
debug: Simplified (btoi aggregate%encoded_element%2#0) to (extract_uint64 slot_contents%3#5 aggregate%bytes_offset%2#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%1#0) to aggregate%val_as_bytes%1#0
debug: Simplified (btoi aggregate%encoded_element%3#0) to (extract_uint64 slot_contents%5#3 aggregate%bytes_offset%3#0)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%4#0) to (extract_uint64 slot_contents%6#2 0u)
debug: Simplified (btoi aggregate%encoded_element%5#0) to (extract_uint64 slot_contents%7#2 aggregate%bytes_offset%5#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%2#0) to aggregate%val_as_bytes%2#0
debug: Simplified (btoi aggregate%encoded_element%6#0) to (extract_uint64 slot_contents%9#2 aggregate%bytes_offset%6#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%3#0) to aggregate%val_as_bytes%3#0
debug: Simplified (concat 0x aggregate%val_as_bytes%4#0) to aggregate%val_as_bytes%4#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%7#0) to (extract_uint64 slot_contents%10#2 0u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%9#0) to (extract_uint64 slot_contents%12#1 0u)
debug: Simplified (btoi aggregate%encoded_element%10#0) to (extract_uint64 slot_contents%13#1 aggregate%bytes_offset%10#0)
debug: Simplified (btoi aggregate%encoded_element%11#0) to (extract_uint64 slot_contents%14#1 aggregate%bytes_offset%11#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%6#0) to aggregate%val_as_bytes%6#0
debug: Simplified (concat 0x aggregate%val_as_bytes%7#0) to aggregate%val_as_bytes%7#0
debug: Simplified (concat 0x aggregate%val_as_bytes%8#0) to aggregate%val_as_bytes%8#0
debug: Simplified (concat 0x aggregate%val_as_bytes%9#0) to aggregate%val_as_bytes%9#0
debug: Simplified (concat 0x aggregate%val_as_bytes%10#0) to aggregate%val_as_bytes%10#0
debug: Simplified (concat 0x aggregate%val_as_bytes%11#0) to aggregate%val_as_bytes%11#0
debug: Simplified (concat 0x aggregate%val_as_bytes%12#0) to aggregate%val_as_bytes%12#0
debug: Simplified (concat 0x aggregate%val_as_bytes%13#0) to aggregate%val_as_bytes%13#0
debug: Simplified (concat 0x aggregate%val_as_bytes%14#0) to aggregate%val_as_bytes%14#0
debug: Simplified (concat 0x aggregate%val_as_bytes%15#0) to aggregate%val_as_bytes%15#0
debug: Simplified (btoi aggregate%encoded_element%12#0) to (extract_uint64 slot_contents%3#3 aggregate%bytes_offset%12#0)
debug: Simplified (btoi aggregate%encoded_element%13#0) to (extract_uint64 slot_contents%4#2 aggregate%bytes_offset%13#0)
debug: Simplified (btoi aggregate%encoded_element%14#0) to (extract_uint64 slot_contents%7#1 aggregate%bytes_offset%14#0)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (btoi aggregate%encoded_element%15#0) to (extract_uint64 slot_contents%8#1 32u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (btoi aggregate%encoded_element%16#0) to (extract_uint64 slot_contents%9#1 40u)
debug: Simplified (* 6u 8u) to 48u
debug: Simplified (btoi aggregate%encoded_element%17#0) to (extract_uint64 slot_contents%10#1 48u)
debug: Simplified (concat 0x aggregate%val_as_bytes%16#0) to aggregate%val_as_bytes%16#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%18#0) to (extract_uint64 slot_contents%3#2 0u)
debug: Simplified (* 1u 8u) to 8u
debug: Simplified (btoi aggregate%encoded_element%19#0) to (extract_uint64 slot_contents%4#1 8u)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (btoi aggregate%encoded_element%20#0) to (extract_uint64 slot_contents%5#1 16u)
debug: Simplified (* 3u 8u) to 24u
debug: Simplified (btoi aggregate%encoded_element%21#0) to (extract_uint64 slot_contents%6#0 24u)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (btoi aggregate%encoded_element%22#0) to (extract_uint64 slot_contents%7#0 32u)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (btoi aggregate%encoded_element%23#0) to (extract_uint64 slot_contents%8#0 40u)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%25#0) to (extract_uint64 slot_contents%10#0 0u)
debug: Simplified (* 6u 8u) to 48u
debug: Simplified (btoi aggregate%encoded_element%27#0) to (extract_uint64 slot_contents%12#0 48u)
debug: Simplified (* 7u 8u) to 56u
debug: Simplified (btoi aggregate%encoded_element%28#0) to (extract_uint64 slot_contents%13#0 56u)
debug: Simplified (* 3u 8u) to 24u
debug: Simplified (btoi aggregate%encoded_element%29#0) to (extract_uint64 slot_contents%14#0 24u)
debug: Simplified (concat 0x aggregate%val_as_bytes%17#0) to aggregate%val_as_bytes%17#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (btoi aggregate%encoded_element%31#0) to (extract_uint64 slot_contents%2#2 0u)
debug: Simplified (* 1u 8u) to 8u
debug: Simplified (btoi aggregate%encoded_element%32#0) to (extract_uint64 slot_contents%3#1 8u)
debug: Simplified (concat 0x aggregate%val_as_bytes%19#0) to aggregate%val_as_bytes%19#0
debug: Simplified (btoi aggregate%encoded_element%33#0) to (extract_uint64 slot_contents%1#2 aggregate%bytes_offset%33#0)
debug: Simplified (btoi aggregate%encoded_element%34#0) to (extract_uint64 slot_contents%2#1 aggregate%bytes_offset%34#0)
debug: Simplified (btoi aggregate%encoded_element%35#0) to (extract_uint64 slot_contents%3#0 aggregate%bytes_offset%35#0)
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (concat 0x aggregate%val_as_bytes%20#0) to aggregate%val_as_bytes%20#0
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%0#0 0u 8u) // on error: index access is out of bounds to ((extract 2 8) combined_arr#0)
debug: Simplified (* 4u 8u) to 32u
debug: Simplified (extract3 aggregate%array_trimmed%1#0 32u 8u) // on error: index access is out of bounds to ((extract 34 8) combined_arr#0)
debug: Simplified (* 5u 8u) to 40u
debug: Simplified (extract3 aggregate%array_trimmed%2#0 40u 8u) // on error: index access is out of bounds to ((extract 42 8) combined_arr#0)
debug: Simplified (* 9u 8u) to 72u
debug: Simplified (extract3 aggregate%array_trimmed%3#0 72u 8u) // on error: index access is out of bounds to ((extract 74 8) combined_arr#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%21#0) to aggregate%val_as_bytes%21#0
debug: Simplified (btoi aggregate%encoded_element%40#0) to (extract_uint64 slot_contents%1#1 aggregate%bytes_offset%40#0)
debug: Simplified (btoi aggregate%encoded_element%43#0) to (extract_uint64 slot_contents%2#0 aggregate%bytes_offset%43#0)
debug: Simplified (extract3 slot_contents%6#2 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%6#2) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%10#2 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%10#2) // on error: index access is out of bounds
debug: Simplified (replace3 slot_contents%11#1 0u aggregate%val_as_bytes%5#0) to ((replace2 0) slot_contents%11#1 aggregate%val_as_bytes%5#0)
debug: Simplified (extract3 slot_contents%12#1 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%12#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%8#1 32u 8u) // on error: index access is out of bounds to ((extract 32 8) slot_contents%8#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%9#1 40u 8u) // on error: index access is out of bounds to ((extract 40 8) slot_contents%9#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%10#1 48u 8u) // on error: index access is out of bounds to ((extract 48 8) slot_contents%10#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%3#2 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%3#2) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%4#1 8u 8u) // on error: index access is out of bounds to ((extract 8 8) slot_contents%4#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%5#1 16u 8u) // on error: index access is out of bounds to ((extract 16 8) slot_contents%5#1) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%6#0 24u 8u) // on error: index access is out of bounds to ((extract 24 8) slot_contents%6#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%7#0 32u 8u) // on error: index access is out of bounds to ((extract 32 8) slot_contents%7#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%8#0 40u 8u) // on error: index access is out of bounds to ((extract 40 8) slot_contents%8#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%10#0 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%10#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%12#0 48u 8u) // on error: index access is out of bounds to ((extract 48 8) slot_contents%12#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%13#0 56u 8u) // on error: index access is out of bounds to ((extract 56 8) slot_contents%13#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%14#0 24u 8u) // on error: index access is out of bounds to ((extract 24 8) slot_contents%14#0) // on error: index access is out of bounds
debug: Simplified (replace3 slot_contents%1#3 0u aggregate%val_as_bytes%18#0) to ((replace2 0) slot_contents%1#3 aggregate%val_as_bytes%18#0)
debug: Simplified (extract3 slot_contents%2#2 0u 8u) // on error: index access is out of bounds to ((extract 0 8) slot_contents%2#2) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%3#1 8u 8u) // on error: index access is out of bounds to ((extract 8 8) slot_contents%3#1) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%array_trimmed%1#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:169:15-30, ir_type=bytes, name='aggregate%array_trimmed%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%2#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:169:15-30, ir_type=bytes, name='aggregate%array_trimmed%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%3#0: bytes = ((extract 2 0) combined_arr#0) with copy of existing registers (Register(source_location=array/uint64.py:169:15-30, ir_type=bytes, name='aggregate%array_trimmed%0', version=0),)
debug: Replacing redundant declaration let aggregate%write_offset%4#0: uint64 = (* last#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:195:8-29, ir_type=uint64, name='aggregate%write_offset%3', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%43#0: uint64 = (* last#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:195:8-29, ir_type=uint64, name='aggregate%write_offset%3', version=0),)
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%head%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%head%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%head%3#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%head%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%head%5#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%head%6#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, aggregate%head%7#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%head%8#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%head%9#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%head%10#0
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%12#0, aggregate%head%11#0
debug: selected aggregate%val_as_bytes%12#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%13#0, aggregate%head%12#0
debug: selected aggregate%val_as_bytes%13#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%14#0, aggregate%head%13#0
debug: selected aggregate%val_as_bytes%14#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%15#0, aggregate%head%14#0
debug: selected aggregate%val_as_bytes%15#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%16#0, aggregate%head%15#0
debug: selected aggregate%val_as_bytes%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, aggregate%head%16#0
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%19#0, aggregate%head%17#0
debug: selected aggregate%val_as_bytes%19#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%20#0, aggregate%head%18#0
debug: selected aggregate%val_as_bytes%20#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%0#0, aggregate%array_trimmed%1#0, aggregate%array_trimmed%2#0, aggregate%array_trimmed%3#0
debug: selected aggregate%array_trimmed%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%21#0, aggregate%head%19#0
debug: selected aggregate%val_as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%write_offset%3#0, aggregate%write_offset%4#0, aggregate%bytes_offset%43#0
debug: selected aggregate%write_offset%3#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/uint64.py:17:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:19:9 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:20:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:21:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:21:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:25:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:25:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:16:15 debug: removing unobserved slot write to key: arr#6
array/uint64.py:29:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:29:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:31:9 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:32:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:33:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:33:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:34:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:38:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:38:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:40:9 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:41:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:42:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:42:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:272:5 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:273:5 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:44:9 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:44:9 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:45:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:46:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:47:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:47:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:48:20 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:48:16 debug: replacing slot read with cached value for key: arr#6
array/uint64.py:40:9 debug: removing unobserved slot write to key: arr#6
array/uint64.py:272:5 debug: removing unobserved slot write to key: arr#6
array/uint64.py:273:5 debug: removing unobserved slot write to key: arr#6
array/uint64.py:55:9 debug: replacing slot read with cached value for key: arr2#0
array/uint64.py:56:9 debug: replacing slot read with cached value for key: arr2#0
array/uint64.py:57:9 debug: replacing slot read with cached value for key: arr2#0
array/uint64.py:59:9 debug: replacing slot read with cached value for key: arr2#0
array/uint64.py:60:16 debug: replacing slot read with cached value for key: arr#5
array/uint64.py:54:16 debug: removing unobserved slot write to key: arr2#0
array/uint64.py:55:9 debug: removing unobserved slot write to key: arr2#0
array/uint64.py:56:9 debug: removing unobserved slot write to key: arr2#0
array/uint64.py:67:9 debug: replacing slot read with cached value for key: arr#4
array/uint64.py:68:9 debug: replacing slot read with cached value for key: arr#4
array/uint64.py:69:16 debug: replacing slot read with cached value for key: arr#4
array/uint64.py:66:9 debug: removing unobserved slot write to key: arr#4
array/uint64.py:67:9 debug: removing unobserved slot write to key: arr#4
array/uint64.py:82:9 debug: replacing slot read with cached value for key: array#1
array/uint64.py:92:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:93:22 debug: replacing slot read with cached value for key: array#0
array/uint64.py:93:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:96:23 debug: replacing slot read with cached value for key: array2#0
array/uint64.py:96:16 debug: replacing slot read with cached value for key: array2#0
array/uint64.py:98:9 debug: replacing slot read with cached value for key: array2#0
array/uint64.py:98:9 debug: replacing slot read with cached value for key: array#0
array/uint64.py:99:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:101:22 debug: replacing slot read with cached value for key: array#0
array/uint64.py:101:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:102:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:103:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:104:16 debug: replacing slot read with cached value for key: array#0
array/uint64.py:109:9 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:112:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:113:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:114:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:115:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:116:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:117:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:119:49 debug: replacing slot read with cached value for key: tmp%11#2
array/uint64.py:120:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:121:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:122:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:123:16 debug: replacing slot read with cached value for key: arr#3
array/uint64.py:108:15 debug: removing unobserved slot write to key: arr#3
array/uint64.py:128:9 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:131:16 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:132:16 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:127:15 debug: removing unobserved slot write to key: arr#2
array/uint64.py:149 debug: replacing slot read with cached value for key: arr#1
array/uint64.py:183:42 debug: replacing slot read with cached value for key: rnd#0
array/uint64.py:195:9 debug: replacing slot read with cached value for key: arr#0
array/uint64.py:198:16 debug: replacing slot read with cached value for key: arr#0
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#0
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#0
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#0
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%4#0
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, updated_array%0#0
debug: selected aggregate%updated_array%0#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, updated_array%1#0
debug: selected aggregate%updated_array%1#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable aggregate%encoded_element%6#0
debug: Removing unused variable aggregate%bytes_offset%5#0
debug: Removing unused variable aggregate%bytes_offset%6#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%encoded_element%0#0) to (extract_uint64 slot_contents%0#0 aggregate%bytes_offset%0#0)
debug: Simplified (btoi aggregate%encoded_element%1#0) to (extract_uint64 slot_contents%1#0 aggregate%bytes_offset%1#0)
debug: Simplified (btoi aggregate%encoded_element%2#0) to (extract_uint64 slot_contents%2#0 aggregate%bytes_offset%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%write_offset%0#0: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:223:52-61, ir_type=uint64, name='aggregate%bytes_offset%4', version=0),)
debug: Replacing redundant declaration let aggregate%write_offset%1#0: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:223:40-50, ir_type=uint64, name='aggregate%bytes_offset%3', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%3#0: uint64 = (* right#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:215:22-32, ir_type=uint64, name='aggregate%bytes_offset%2', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%4#0: uint64 = (* left#1 8u) with copy of existing registers (Register(source_location=array/uint64.py:212:14-23, ir_type=uint64, name='aggregate%bytes_offset%1', version=0),)
debug: Found equivalence set: aggregate%bytes_offset%2#0, aggregate%bytes_offset%3#0, aggregate%write_offset%1#0
debug: selected aggregate%bytes_offset%2#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_offset%1#0, aggregate%bytes_offset%4#0, aggregate%write_offset%0#0
debug: selected aggregate%bytes_offset%1#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/uint64.py:223:53 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:223:17 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:223:17 debug: replacing slot read with cached value for key: arr#2
array/uint64.py:223:17 debug: removing unobserved slot write to key: arr#2
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%1#0, tmp%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_Encoded(uint64[])%0#0
debug: Removing unused variable encoded_array%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%array_len%0#0, tmp%0#0
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%encoded_element%0#0) to (extract_uint64 slot_contents%0#0 aggregate%bytes_offset%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/uint64.py:265:12 debug: replacing slot read with cached value for key: arr#0
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%array_len%0#0, tmp%0#0
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%1#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/uint64.py:293:5 debug: replacing slot read with cached value for key: arr#0
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: concat%0#8, aggregate%slot_contents%1#0, aggregate%slot_contents%2#0, slot_contents%1#9
debug: selected concat%0#8 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%3#0, aggregate%slot_contents%4#0, slot_contents%2#7
debug: selected aggregate%slot_contents%3#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%5#0, aggregate%slot_contents%6#0, slot_contents%3#5, slot_contents%4#4
debug: selected aggregate%slot_contents%5#0 from equivalence set
debug: Found equivalence set: concat%1#6, aggregate%slot_contents%7#0, aggregate%slot_contents%8#0, slot_contents%5#3, slot_contents%6#2
debug: selected concat%1#6 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%9#0, aggregate%slot_contents%10#0, slot_contents%7#2, slot_contents%8#2
debug: selected aggregate%slot_contents%9#0 from equivalence set
debug: Found equivalence set: concat%2#4, aggregate%slot_contents%11#0, aggregate%slot_contents%12#0, slot_contents%9#2, slot_contents%0#11
debug: selected concat%2#4 from equivalence set
debug: Found equivalence set: concat%0#9, slot_contents%1#10
debug: selected concat%0#9 from equivalence set
debug: Found equivalence set: concat%1#7, slot_contents%10#2, slot_contents%11#1
debug: selected concat%1#7 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, aggregate%slot_contents%13#0, slot_contents%12#1, aggregate%slot_contents%14#0, slot_contents%13#1, aggregate%slot_contents%15#0, slot_contents%14#1
debug: selected aggregate%updated_array%0#0 from equivalence set
debug: Found equivalence set: concat%0#7, slot_contents%1#8
debug: selected concat%0#7 from equivalence set
debug: Found equivalence set: concat%1#5, slot_contents%2#6
debug: selected concat%1#5 from equivalence set
debug: Found equivalence set: concat%2#3, slot_contents%3#4
debug: selected concat%2#3 from equivalence set
debug: Found equivalence set: concat%3#1, aggregate%slot_contents%16#0
debug: selected concat%3#1 from equivalence set
debug: Found equivalence set: concat%0#6, slot_contents%1#7
debug: selected concat%0#6 from equivalence set
debug: Found equivalence set: concat%1#4, slot_contents%2#5
debug: selected concat%1#4 from equivalence set
debug: Found equivalence set: concat%2#2, aggregate%slot_contents%17#0
debug: selected concat%2#2 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%18#0, slot_contents%1#6
debug: selected aggregate%slot_contents%18#0 from equivalence set
debug: Found equivalence set: concat%1#2, aggregate%slot_contents%19#0, aggregate%slot_contents%20#0, slot_contents%3#3, slot_contents%6#1
debug: selected concat%1#2 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%21#0, aggregate%slot_contents%22#0, slot_contents%4#2, slot_contents%5#2
debug: selected aggregate%slot_contents%21#0 from equivalence set
debug: Found equivalence set: concat%2#1, aggregate%slot_contents%23#0, aggregate%slot_contents%25#0, slot_contents%7#1, slot_contents%8#1, slot_contents%9#1, slot_contents%10#1
debug: selected concat%2#1 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%26#0, slot_contents%3#2, slot_contents%4#1, slot_contents%5#1, slot_contents%6#0, slot_contents%7#0, slot_contents%8#0
debug: selected aggregate%slot_contents%26#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%27#0, slot_contents%9#0
debug: selected aggregate%slot_contents%27#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, aggregate%slot_contents%28#0, slot_contents%12#0, slot_contents%13#0, slot_contents%14#0
debug: selected aggregate%updated_array%1#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%29#0, slot_contents%2#2, slot_contents%3#1
debug: selected aggregate%slot_contents%29#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%30#0, aggregate%slot_contents%31#0
debug: selected aggregate%slot_contents%30#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%34#0, aggregate%slot_contents%35#0
debug: selected aggregate%slot_contents%34#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%37#0, slot_contents%0#0
debug: selected aggregate%slot_contents%37#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%4#0, slot_contents%2#0
debug: selected aggregate%updated_array%4#0 from equivalence set
debug: Copy propagation made 95 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%slot_contents%0#0
debug: Removing unused variable slot_contents%0#9
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable aggregate%bytes_offset%4#0
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable aggregate%encoded_element%6#0
debug: Removing unused variable aggregate%bytes_offset%7#0
debug: Removing unused variable aggregate%encoded_element%7#0
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%bytes_offset%9#0
debug: Removing unused variable aggregate%encoded_element%9#0
debug: Removing unused variable aggregate%encoded_element%10#0
debug: Removing unused variable aggregate%encoded_element%11#0
debug: Removing unused variable slot_contents%0#8
debug: Removing unused variable aggregate%encoded_element%12#0
debug: Removing unused variable aggregate%encoded_element%13#0
debug: Removing unused variable aggregate%encoded_element%14#0
debug: Removing unused variable aggregate%bytes_offset%15#0
debug: Removing unused variable aggregate%encoded_element%15#0
debug: Removing unused variable aggregate%bytes_offset%16#0
debug: Removing unused variable aggregate%encoded_element%16#0
debug: Removing unused variable aggregate%bytes_offset%17#0
debug: Removing unused variable aggregate%encoded_element%17#0
debug: Removing unused variable slot_contents%0#4
debug: Removing unused variable aggregate%bytes_offset%18#0
debug: Removing unused variable aggregate%encoded_element%18#0
debug: Removing unused variable aggregate%bytes_offset%19#0
debug: Removing unused variable aggregate%encoded_element%19#0
debug: Removing unused variable aggregate%bytes_offset%20#0
debug: Removing unused variable aggregate%encoded_element%20#0
debug: Removing unused variable aggregate%bytes_offset%21#0
debug: Removing unused variable aggregate%encoded_element%21#0
debug: Removing unused variable aggregate%bytes_offset%22#0
debug: Removing unused variable aggregate%encoded_element%22#0
debug: Removing unused variable aggregate%bytes_offset%23#0
debug: Removing unused variable aggregate%encoded_element%23#0
debug: Removing unused variable aggregate%bytes_offset%25#0
debug: Removing unused variable aggregate%encoded_element%25#0
debug: Removing unused variable aggregate%bytes_offset%27#0
debug: Removing unused variable aggregate%encoded_element%27#0
debug: Removing unused variable aggregate%bytes_offset%28#0
debug: Removing unused variable aggregate%encoded_element%28#0
debug: Removing unused variable aggregate%bytes_offset%29#0
debug: Removing unused variable aggregate%encoded_element%29#0
debug: Removing unused variable slot_contents%0#3
debug: Removing unused variable aggregate%write_offset%2#0
debug: Removing unused variable aggregate%bytes_offset%31#0
debug: Removing unused variable aggregate%encoded_element%31#0
debug: Removing unused variable aggregate%bytes_offset%32#0
debug: Removing unused variable aggregate%encoded_element%32#0
debug: Removing unused variable aggregate%encoded_element%33#0
debug: Removing unused variable aggregate%encoded_element%34#0
debug: Removing unused variable aggregate%encoded_element%35#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%36#0
debug: Removing unused variable aggregate%bytes_offset%37#0
debug: Removing unused variable aggregate%bytes_offset%38#0
debug: Removing unused variable aggregate%bytes_offset%39#0
debug: Removing unused variable aggregate%encoded_element%40#0
debug: Removing unused variable aggregate%encoded_element%43#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) // on error: max array length exceeded to aggregate%val_as_bytes%0#0
debug: Simplified (len aggregate%val_as_bytes%0#0) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (len aggregate%val_as_bytes%0#0) to 8u
debug: Simplified (/ 8u 8u) to 1u
debug: Simplified (- 1u 1u) to 0u
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract_uint64 aggregate%val_as_bytes%0#0 0u) to 42u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%6#0) // on error: max array length exceeded to aggregate%val_as_bytes%6#0
debug: Simplified (concat aggregate%val_as_bytes%6#0 aggregate%val_as_bytes%7#0) // on error: max array length exceeded to 0x00000000000000010000000000000002
debug: Simplified (concat 0x00000000000000010000000000000002 aggregate%val_as_bytes%8#0) // on error: max array length exceeded to 0x000000000000000100000000000000020000000000000003
debug: Simplified (concat 0x aggregate%val_as_bytes%16#0) // on error: max array length exceeded to aggregate%val_as_bytes%16#0
debug: Simplified (concat 0x aggregate%val_as_bytes%17#0) // on error: max array length exceeded to aggregate%val_as_bytes%17#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%bytes_len%4#0: uint64 = (len aggregate%slot_contents%3#0) with copy of existing registers (Register(source_location=array/uint64.py:24:15-25, ir_type=uint64, name='aggregate%bytes_len%3', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%6#0: uint64 = (len aggregate%slot_contents%5#0) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='aggregate%bytes_len%5', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%8#0: uint64 = (len concat%1#6) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='aggregate%bytes_len%7', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%10#0: uint64 = (len aggregate%slot_contents%9#0) with copy of existing registers (Register(source_location=array/uint64.py:37:15-25, ir_type=uint64, name='aggregate%bytes_len%9', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%12#0: uint64 = (len concat%2#4) with copy of existing registers (Register(source_location=array/uint64.py:41:15-25, ir_type=uint64, name='aggregate%bytes_len%11', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%14#0: uint64 = (len aggregate%updated_array%0#0) with copy of existing registers (Register(source_location=array/uint64.py:45:15-25, ir_type=uint64, name='aggregate%bytes_len%13', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%15#0: uint64 = (len aggregate%updated_array%0#0) with copy of existing registers (Register(source_location=array/uint64.py:45:15-25, ir_type=uint64, name='aggregate%bytes_len%13', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%20#0: uint64 = (len concat%1#2) with copy of existing registers (Register(source_location=array/uint64.py:92:15-27, ir_type=uint64, name='aggregate%bytes_len%19', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%22#0: uint64 = (len aggregate%slot_contents%21#0) with copy of existing registers (Register(source_location=array/uint64.py:95:15-28, ir_type=uint64, name='aggregate%bytes_len%21', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%25#0: uint64 = (len concat%2#1) with copy of existing registers (Register(source_location=array/uint64.py:99:15-27, ir_type=uint64, name='aggregate%bytes_len%23', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%31#0: uint64 = (len aggregate%slot_contents%30#0) with copy of existing registers (Register(source_location=array/uint64.py:145:15-25, ir_type=uint64, name='aggregate%bytes_len%30', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%35#0: uint64 = (len aggregate%slot_contents%34#0) with copy of existing registers (Register(source_location=array/uint64.py:180:15-25, ir_type=uint64, name='aggregate%bytes_len%34', version=0),)
debug: Found equivalence set: aggregate%val_as_bytes%0#0, concat%0#8
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%3#0, aggregate%bytes_len%4#0
debug: selected aggregate%bytes_len%3#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%5#0, aggregate%bytes_len%6#0
debug: selected aggregate%bytes_len%5#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%7#0, aggregate%bytes_len%8#0
debug: selected aggregate%bytes_len%7#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%9#0, aggregate%bytes_len%10#0
debug: selected aggregate%bytes_len%9#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%11#0, aggregate%bytes_len%12#0
debug: selected aggregate%bytes_len%11#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%13#0, aggregate%bytes_len%14#0, aggregate%bytes_len%15#0
debug: selected aggregate%bytes_len%13#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, concat%0#7
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%19#0, aggregate%bytes_len%20#0
debug: selected aggregate%bytes_len%19#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%21#0, aggregate%bytes_len%22#0
debug: selected aggregate%bytes_len%21#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%23#0, aggregate%bytes_len%25#0
debug: selected aggregate%bytes_len%23#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%16#0, concat%0#3
debug: selected aggregate%val_as_bytes%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, concat%0#2
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%30#0, aggregate%bytes_len%31#0
debug: selected aggregate%bytes_len%30#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%34#0, aggregate%bytes_len%35#0
debug: selected aggregate%bytes_len%34#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Replacing redundant declaration let aggregate%array_len%4#0: uint64 = (/ aggregate%bytes_len%3#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:24:15-25, ir_type=uint64, name='aggregate%array_len%3', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%6#0: uint64 = (/ aggregate%bytes_len%5#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:28:15-25, ir_type=uint64, name='aggregate%array_len%5', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%8#0: uint64 = (/ aggregate%bytes_len%7#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:32:15-25, ir_type=uint64, name='aggregate%array_len%7', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%10#0: uint64 = (/ aggregate%bytes_len%9#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:37:15-25, ir_type=uint64, name='aggregate%array_len%9', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%12#0: uint64 = (/ aggregate%bytes_len%11#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:41:15-25, ir_type=uint64, name='aggregate%array_len%11', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%14#0: uint64 = (/ aggregate%bytes_len%13#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:45:15-25, ir_type=uint64, name='aggregate%array_len%13', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%15#0: uint64 = (/ aggregate%bytes_len%13#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:45:15-25, ir_type=uint64, name='aggregate%array_len%13', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%20#0: uint64 = (/ aggregate%bytes_len%19#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:92:15-27, ir_type=uint64, name='aggregate%array_len%19', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%22#0: uint64 = (/ aggregate%bytes_len%21#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:95:15-28, ir_type=uint64, name='aggregate%array_len%21', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%25#0: uint64 = (/ aggregate%bytes_len%23#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:99:15-27, ir_type=uint64, name='aggregate%array_len%23', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%31#0: uint64 = (/ aggregate%bytes_len%30#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:145:15-25, ir_type=uint64, name='aggregate%array_len%30', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%35#0: uint64 = (/ aggregate%bytes_len%34#0 8u) with copy of existing registers (Register(source_location=array/uint64.py:180:15-25, ir_type=uint64, name='aggregate%array_len%34', version=0),)
debug: Found equivalence set: aggregate%array_len%3#0, aggregate%array_len%4#0
debug: selected aggregate%array_len%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%5#0, aggregate%array_len%6#0
debug: selected aggregate%array_len%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%7#0, aggregate%array_len%8#0
debug: selected aggregate%array_len%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%9#0, aggregate%array_len%10#0
debug: selected aggregate%array_len%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%11#0, aggregate%array_len%12#0
debug: selected aggregate%array_len%11#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%13#0, aggregate%array_len%14#0, aggregate%array_len%15#0
debug: selected aggregate%array_len%13#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%19#0, aggregate%array_len%20#0
debug: selected aggregate%array_len%19#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%21#0, aggregate%array_len%22#0
debug: selected aggregate%array_len%21#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%23#0, aggregate%array_len%25#0
debug: selected aggregate%array_len%23#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%30#0, aggregate%array_len%31#0
debug: selected aggregate%array_len%30#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%34#0, aggregate%array_len%35#0
debug: selected aggregate%array_len%34#0 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%3#0, slot_contents%4#0, slot_contents%5#0
debug: selected slot_contents%3#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, slot_contents%6#0
debug: selected aggregate%updated_array%0#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%slot_contents%0#0, slot_contents%0#0
debug: selected aggregate%slot_contents%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%slot_contents%0#0, slot_contents%0#0
debug: selected aggregate%slot_contents%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%bytes_len%0#0
debug: Removing unused variable aggregate%array_len%0#0
debug: Removing unused variable tmp%1#10
debug: Removing unused variable aggregate%bytes_len%1#0
debug: Removing unused variable aggregate%array_len%1#0
debug: Removing unused variable tmp%4#8
debug: Removing unused variable aggregate%bytes_len%2#0
debug: Removing unused variable aggregate%array_len%2#0
debug: Removing unused variable tmp%6#5
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable values%0#4
debug: Removing unused variable tmp%7#5
debug: Removing unused variable aggregate%val_as_bytes%6#0
debug: Removing unused variable aggregate%val_as_bytes%7#0
debug: Removing unused variable concat%1#5
debug: Removing unused variable aggregate%val_as_bytes%8#0
debug: Removing unused variable concat%2#3
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.quicksort_window
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Not removing empty block block@5 because it's used by phi nodes
debug: Not removing empty block block@12 because it's used by phi nodes
debug: Not removing empty block block@14 because it's used by phi nodes
debug: Not removing empty block block@15 because it's used by phi nodes
debug: Not removing empty block block@21 because it's used by phi nodes
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.create_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.assert_last_is_zero
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.uint64.append_length_and_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.uint64.Contract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/uint64.py:54:9 debug: eliminating local static slot assigned to arr2#0
array/uint64.py:77:9 debug: eliminating local static slot assigned to array#1
array/uint64.py:86:9 debug: eliminating local static slot assigned to array#0
array/uint64.py:89:9 debug: eliminating local static slot assigned to array2#0
array/uint64.py:142:9 debug: eliminating local static slot assigned to arr#1
array/uint64.py:163:9 debug: eliminating local static slot assigned to native_arr#0
debug: Removing unused variable arr2#0
debug: Removing unused variable array#1
debug: Removing unused variable array#0
debug: Removing unused variable array2#0
debug: Removing unused variable arr#1
debug: Removing unused variable native_arr#0
array/uint64.py:201 debug: auto reserving slots in test_cases.array.uint64.quicksort_window, []
array/uint64.py:255 debug: auto reserving slots in test_cases.array.uint64.create_array, []
array/uint64.py:263 debug: auto reserving slots in test_cases.array.uint64.assert_last_is_zero, []
array/uint64.py:277 debug: auto reserving slots in test_cases.array.uint64.add_x, []
array/uint64.py:291 debug: auto reserving slots in test_cases.array.uint64.append_length_and_return, []
debug: Using dynamic slot allocation strategy
debug: removing local static slots in clear program of test_cases.array.uint64.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing tmp%4#0 with [tmp%4#7, tmp%4#6, tmp%4#4, tmp%4#3, tmp%4#2, tmp%4#1]
debug: Coalescing tmp%5#0 with [tmp%5#4]
debug: Coalescing arr#0 with [arr#6, arr#5, arr#4, arr#3, arr#2]
debug: Coalescing tmp%9#1 with [tmp%9#3]
debug: Coalescing tmp%11#0 with [tmp%11#4]
debug: Coalescing values%1#0 with [values%1#3, values%1#2, values%1#1]
debug: Coalescing tmp%12#0 with [tmp%12#4, tmp%12#1]
debug: Coalescing expected#0 with [expected#5, expected#1, expected#2]
debug: Coalescing _i#0 with [_i#3, _i#8, _i#4, _i#5, _i#11, _i#1, _i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#5, continue_looping%0#4, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing slot_contents%0#1 with [slot_contents%0#10, slot_contents%0#7, slot_contents%0#6, slot_contents%0#5, slot_contents%0#2]
debug: Coalescing len%0#0 with [len%0#1]
debug: Coalescing tmp%14#1 with [tmp%14#4]
debug: Coalescing values%2#0 with [values%2#2, values%2#1]
debug: Coalescing tmp%17#1 with [tmp%17#3]
debug: Coalescing concat%1#0 with [concat%1#6, concat%1#7, concat%1#4, concat%1#3, concat%1#2, concat%1#1, concat%1#0]
debug: Coalescing tmp%20#0 with [tmp%20#2, tmp%20#1]
debug: Coalescing values%3#0 with [values%3#2, values%3#1]
debug: Coalescing values%4#0 with [values%4#2, values%4#1]
debug: Coalescing tmp%24#0 with [tmp%24#1]
debug: Coalescing values%5#0 with [values%5#2, values%5#1]
debug: Coalescing concat%2#0 with [concat%2#4, concat%2#2, concat%2#1]
debug: Coalescing tmp%32#0 with [tmp%32#1]
debug: Coalescing concat%0#0 with [concat%0#9, concat%0#6, concat%0#5, concat%0#4, concat%0#1]
debug: Coalescing values%7#0 with [values%7#1]
debug: Coalescing tmp%37#0 with [tmp%37#1]
debug: Coalescing values%8#0 with [values%8#1]
debug: Coalescing tmp%42#0 with [tmp%42#1]
debug: Coalescing values%9#0 with [values%9#1]
debug: Coalescing values%10#0 with [values%10#1]
debug: Coalescing test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 with [test_cases.array.uint64.Contract.__puya_arc4_router__%0#1, test_cases.array.uint64.Contract.__puya_arc4_router__%0#2, test_cases.array.uint64.Contract.__puya_arc4_router__%0#3, test_cases.array.uint64.Contract.__puya_arc4_router__%0#4, test_cases.array.uint64.Contract.__puya_arc4_router__%0#5, test_cases.array.uint64.Contract.__puya_arc4_router__%0#6, test_cases.array.uint64.Contract.__puya_arc4_router__%0#7, test_cases.array.uint64.Contract.__puya_arc4_router__%0#8, test_cases.array.uint64.Contract.__puya_arc4_router__%0#9, test_cases.array.uint64.Contract.__puya_arc4_router__%0#10, test_cases.array.uint64.Contract.__puya_arc4_router__%0#11, test_cases.array.uint64.Contract.__puya_arc4_router__%0#12, test_cases.array.uint64.Contract.__puya_arc4_router__%0#13]
debug: Coalescing tmp%0#0 with [tmp%0#3]
debug: Coalescing tmp%8#0 with [tmp%8#2, tmp%8#1]
debug: Coalescing slot_contents%4#0 with [slot_contents%4#3]
debug: Coalescing concat%3#0 with [concat%3#1, concat%3#0]
debug: Coalescing tmp%13#0 with [tmp%13#2]
debug: Coalescing tmp%16#0 with [tmp%16#1]
debug: Coalescing tmp%17#0 with [tmp%17#2]
debug: Coalescing i#0 with [i#6, i#11, i#7, i#8, i#3, i#14, i#4, i#5, i#17, i#1, i#2]
debug: Coalescing tmp%2#2 with [tmp%2#6, tmp%2#3]
debug: Coalescing slot_contents%1#0 with [slot_contents%1#5, slot_contents%1#4, slot_contents%1#3, slot_contents%1#2, slot_contents%1#1]
debug: Coalescing slot_contents%2#1 with [slot_contents%2#4, slot_contents%2#3]
debug: Coalescing tmp%3#1 with [tmp%3#6, tmp%3#4, tmp%3#3]
debug: Coalescing values%0#0 with [values%0#3, values%0#2, values%0#1]
debug: Coalescing tmp%6#3 with [tmp%6#4]
debug: Coalescing tmp%11#1 with [tmp%11#3]
debug: Coalescing tmp%13#1 with [tmp%13#3]
debug: Coalescing tmp%15#1 with [tmp%15#3]
debug: Coalescing tmp%18#1 with [tmp%18#2]
debug: Coalescing tmp%19#1 with [tmp%19#2]
debug: Coalescing tmp%5#2 with [tmp%5#3]
debug: Coalescing tmp%7#1 with [tmp%7#3]
debug: Coalescing val#0 with [val#5, val#1, val#2]
debug: Coalescing last#0 with [last#3, last#8, last#4, last#10, last#6, last#1, last#12, last#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#3, item_index_internal%0#8, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#11, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#1]
debug: Coalescing value#0 with [value#1, value#2, value#3]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#3, item_index_internal%1#5, item_index_internal%1#10, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing reverse_index_internal%2#1 with [reverse_index_internal%2#4, reverse_index_internal%2#2]
debug: Coalescing arc4_arr#0 with [arc4_arr#5, arc4_arr#1, arc4_arr#2]
debug: Coalescing resulted in 424 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, expected#0=expected#0}
debug: pred: {_i#0=_i#0, expected#0=expected#0}
debug: ready: 
debug: to_do: _i#0, expected#0
debug: * to_do expected#0
debug: * to_do _i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%0#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%0#0
debug: loc: {reverse_index_internal%2#1=None, last#0=last#0, aggregate%array_len%33#0=aggregate%array_len%33#0}
debug: pred: {reverse_index_internal%2#1=aggregate%array_len%33#0, last#0=last#0}
debug: ready: reverse_index_internal%2#1
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail reverse_index_internal%2#1
debug: * avail aggregate%array_len%33#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=last#0}
debug: ready: 
debug: to_do: reverse_index_internal%2#1, last#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=None, value#0=value#0}
debug: pred: {reverse_index_internal%2#1=reverse_index_internal%2#1, last#0=value#0}
debug: ready: last#0
debug: to_do: reverse_index_internal%2#1, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do reverse_index_internal%2#1
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: pred: {i#0=i#0, arc4_arr#0=arc4_arr#0}
debug: ready: 
debug: to_do: i#0, arc4_arr#0
debug: * to_do arc4_arr#0
debug: * to_do i#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=last#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, last#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, last#0=None, value#0=value#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, last#0=value#0}
debug: ready: last#0
debug: to_do: item_index_internal%1#0, last#0
debug: * avail last#0
debug: * avail value#0
debug: * to_do last#0
debug: * to_do item_index_internal%1#0
debug: Performing post-SSA optimizations at level 2
debug: Removing duplicated block block@33 and updating references to block@55
debug: Replaced predecessor block@33 with block@55 in block@22
debug: Performing SSA IR destructuring for test_cases.array.uint64.quicksort_window
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.quicksort_window using strategy 'root_operand'
debug: Coalescing arr#0 with [arr#5, arr#2]
debug: Coalescing left#1 with [left#10, left#3, left#13, left#2, left#5, left#18, left#6, left#8]
debug: Coalescing right#1 with [right#10, right#4, right#13, right#2, right#21, right#5, right#6, right#8, right#7]
debug: Coalescing resulted in 62 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.quicksort_window
debug: loc: {arr#0=arr#0, left#1=None, right#1=None, window_left#0=window_left#0, window_right#0=window_right#0}
debug: pred: {arr#0=arr#0, left#1=window_left#0, right#1=window_right#0}
debug: ready: left#1, right#1
debug: to_do: arr#0, left#1, right#1
debug: * avail right#1
debug: * avail window_right#0
debug: * avail left#1
debug: * avail window_left#0
debug: * to_do right#1
debug: * to_do left#1
debug: * to_do arr#0
debug: loc: {arr#0=arr#0, left#1=left#1, right#1=right#1}
debug: pred: {arr#0=arr#0, left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: arr#0, left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: * to_do arr#0
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {arr#0=arr#0, left#1=left#1, right#1=right#1}
debug: pred: {arr#0=arr#0, left#1=left#1, right#1=right#1}
debug: ready: 
debug: to_do: arr#0, left#1, right#1
debug: * to_do right#1
debug: * to_do left#1
debug: * to_do arr#0
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: loc: {right#1=right#1, left#1=left#1}
debug: pred: {right#1=right#1, left#1=left#1}
debug: ready: 
debug: to_do: right#1, left#1
debug: * to_do left#1
debug: * to_do right#1
debug: Performing post-SSA optimizations at level 2
debug: Removing jump block block@1
debug: Removing jump block block@5
debug: Removing jump block block@12
debug: Removing jump block block@14
debug: Removing jump block block@15
debug: Removing jump block block@21
debug: branching to block@1 will be replaced with block@3
debug: branching to block@5 will be replaced with block@6
debug: branching to block@12 will be replaced with block@22
debug: branching to block@14 will be replaced with block@3
debug: branching to block@15 will be replaced with block@22
debug: branching to block@21 will be replaced with block@22
debug: Performing SSA IR destructuring for test_cases.array.uint64.create_array
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.create_array using strategy 'root_operand'
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.create_array
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.uint64.assert_last_is_zero
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.assert_last_is_zero using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.assert_last_is_zero
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.uint64.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.add_x using strategy 'root_operand'
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 9 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.add_x
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.uint64.append_length_and_return
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.uint64.append_length_and_return using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.uint64.append_length_and_return
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/Contract.ir/Contract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/Contract.ir/Contract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[15]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@3.ops[27]: 'l-store-copy aggregate%slot_contents%3#0 0'
debug: Replaced main_test_array_route@3.ops[29]: 'v-load aggregate%slot_contents%3#0' with 'l-load aggregate%slot_contents%3#0'
debug: Inserted main_test_array_route@3.ops[31]: 'l-store-copy aggregate%bytes_len%3#0 0'
debug: Replaced main_test_array_route@3.ops[33]: 'v-load aggregate%bytes_len%3#0' with 'l-load aggregate%bytes_len%3#0'
debug: Inserted main_test_array_route@3.ops[36]: 'l-store-copy aggregate%array_len%3#0 0'
debug: Replaced main_test_array_route@3.ops[38]: 'v-load aggregate%array_len%3#0' with 'l-load aggregate%array_len%3#0'
debug: Inserted main_test_array_route@3.ops[41]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_array_route@3.ops[43]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_array_route@3.ops[48]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_route@3.ops[50]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_route@3.ops[57]: 'l-store-copy values%1#0 0'
debug: Replaced main_test_array_route@3.ops[59]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_test_array_route@3.ops[62]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_array_route@3.ops[64]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_array_route@3.ops[18]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced main_test_array_route@3.ops[21]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted main_test_array_route@3.ops[54]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced main_test_array_route@3.ops[57]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted main_test_array_route@3.ops[21]: 'l-store-copy arr#0 1'
debug: Replaced main_test_array_route@3.ops[24]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_route@3.ops[25]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_route@3.ops[28]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_route@3.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_route@3.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_route@3.ops[43]: 'l-store-copy aggregate%array_len%3#0 0'
debug: Replaced main_test_array_route@3.ops[50]: 'v-load aggregate%array_len%3#0' with 'l-load aggregate%array_len%3#0'
debug: Inserted main_test_array_route@3.ops[34]: 'l-store-copy aggregate%slot_contents%3#0 0'
debug: Replaced main_test_array_route@3.ops[61]: 'v-load aggregate%slot_contents%3#0' with 'l-load aggregate%slot_contents%3#0'
debug: Inserted main_for_header@78.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@78.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@79.ops[2]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_for_body@79.ops[4]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@79.ops[6]: 'l-store-copy len%0#0 0'
debug: Replaced main_for_body@79.ops[8]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_for_body@79.ops[21]: 'l-store-copy data%0#0 0'
debug: Replaced main_for_body@79.ops[23]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted main_for_body@79.ops[32]: 'l-store-copy tmp%1#11 0'
debug: Replaced main_for_body@79.ops[34]: 'v-load tmp%1#11' with 'l-load tmp%1#11'
debug: Inserted main_for_body@79.ops[11]: 'l-store-copy sub%0#0 0'
debug: Replaced main_for_body@79.ops[15]: 'v-load sub%0#0' with 'l-load sub%0#0'
debug: Inserted main_for_body@79.ops[16]: 'l-store-copy sub%0#0 2'
debug: Replaced main_for_body@79.ops[20]: 'v-load sub%0#0' with 'l-load sub%0#0'
debug: Inserted main_for_body@79.ops[27]: 'l-store-copy popped#0 0'
debug: Replaced main_for_body@79.ops[32]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted main_for_body@79.ops[14]: 'l-store-copy slot_contents%0#1 1'
debug: Replaced main_for_body@79.ops[20]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@79.ops[35]: 'l-store-copy expected#0 1'
debug: Replaced main_for_body@79.ops[41]: 'v-load expected#0' with 'l-load expected#0'
debug: Inserted main_for_body@79.ops[5]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_for_body@79.ops[14]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@79.ops[20]: 'l-store-copy extract%0#0 2'
debug: Replaced main_for_body@79.ops[33]: 'v-load extract%0#0' with 'l-load extract%0#0'
debug: Inserted main_for_body@79.ops[10]: 'l-store-copy len%0#0 1'
debug: Replaced main_for_body@79.ops[25]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_for_body@79.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_for_body@79.ops[34]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@80.ops[2]: 'l-store-copy aggregate%slot_contents%5#0 0'
debug: Replaced main_after_for@80.ops[4]: 'v-load aggregate%slot_contents%5#0' with 'l-load aggregate%slot_contents%5#0'
debug: Inserted main_after_for@80.ops[6]: 'l-store-copy aggregate%bytes_len%5#0 0'
debug: Replaced main_after_for@80.ops[8]: 'v-load aggregate%bytes_len%5#0' with 'l-load aggregate%bytes_len%5#0'
debug: Inserted main_after_for@80.ops[11]: 'l-store-copy aggregate%array_len%5#0 0'
debug: Replaced main_after_for@80.ops[13]: 'v-load aggregate%array_len%5#0' with 'l-load aggregate%array_len%5#0'
debug: Inserted main_after_for@80.ops[16]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@80.ops[18]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@80.ops[23]: 'l-store-copy tmp%16#3 0'
debug: Replaced main_after_for@80.ops[25]: 'v-load tmp%16#3' with 'l-load tmp%16#3'
debug: Inserted main_after_for@80.ops[32]: 'l-store-copy values%2#0 0'
debug: Replaced main_after_for@80.ops[34]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted main_after_for@80.ops[37]: 'l-store-copy tmp%17#1 0'
debug: Replaced main_after_for@80.ops[39]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted main_after_for@80.ops[53]: 'l-store-copy aggregate%bytes_len%7#0 0'
debug: Replaced main_after_for@80.ops[55]: 'v-load aggregate%bytes_len%7#0' with 'l-load aggregate%bytes_len%7#0'
debug: Inserted main_after_for@80.ops[58]: 'l-store-copy aggregate%array_len%7#0 0'
debug: Replaced main_after_for@80.ops[60]: 'v-load aggregate%array_len%7#0' with 'l-load aggregate%array_len%7#0'
debug: Inserted main_after_for@80.ops[63]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_after_for@80.ops[65]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_after_for@80.ops[70]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_after_for@80.ops[72]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_after_for@80.ops[79]: 'l-store-copy values%3#0 0'
debug: Replaced main_after_for@80.ops[81]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted main_after_for@80.ops[84]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@80.ops[86]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@80.ops[91]: 'l-store-copy values%4#0 0'
debug: Replaced main_after_for@80.ops[93]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted main_after_for@80.ops[96]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_after_for@80.ops[98]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_after_for@80.ops[105]: 'l-store-copy aggregate%slot_contents%9#0 0'
debug: Replaced main_after_for@80.ops[107]: 'v-load aggregate%slot_contents%9#0' with 'l-load aggregate%slot_contents%9#0'
debug: Inserted main_after_for@80.ops[109]: 'l-store-copy aggregate%bytes_len%9#0 0'
debug: Replaced main_after_for@80.ops[111]: 'v-load aggregate%bytes_len%9#0' with 'l-load aggregate%bytes_len%9#0'
debug: Inserted main_after_for@80.ops[114]: 'l-store-copy aggregate%array_len%9#0 0'
debug: Replaced main_after_for@80.ops[116]: 'v-load aggregate%array_len%9#0' with 'l-load aggregate%array_len%9#0'
debug: Inserted main_after_for@80.ops[119]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_after_for@80.ops[121]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_after_for@80.ops[126]: 'l-store-copy tmp%28#1 0'
debug: Replaced main_after_for@80.ops[128]: 'v-load tmp%28#1' with 'l-load tmp%28#1'
debug: Inserted main_after_for@80.ops[135]: 'l-store-copy values%5#0 0'
debug: Replaced main_after_for@80.ops[137]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted main_after_for@80.ops[140]: 'l-store-copy tmp%29#1 0'
debug: Replaced main_after_for@80.ops[142]: 'v-load tmp%29#1' with 'l-load tmp%29#1'
debug: Inserted main_after_for@80.ops[150]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@80.ops[152]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@80.ops[154]: 'l-store-copy aggregate%bytes_len%11#0 0'
debug: Replaced main_after_for@80.ops[156]: 'v-load aggregate%bytes_len%11#0' with 'l-load aggregate%bytes_len%11#0'
debug: Inserted main_after_for@80.ops[159]: 'l-store-copy aggregate%array_len%11#0 0'
debug: Replaced main_after_for@80.ops[161]: 'v-load aggregate%array_len%11#0' with 'l-load aggregate%array_len%11#0'
debug: Inserted main_after_for@80.ops[164]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_after_for@80.ops[166]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_after_for@80.ops[171]: 'l-store-copy tmp%34#1 0'
debug: Replaced main_after_for@80.ops[173]: 'v-load tmp%34#1' with 'l-load tmp%34#1'
debug: Inserted main_after_for@80.ops[180]: 'l-store-copy values%6#1 0'
debug: Replaced main_after_for@80.ops[182]: 'v-load values%6#1' with 'l-load values%6#1'
debug: Inserted main_after_for@80.ops[185]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_after_for@80.ops[187]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_after_for@80.ops[202]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@80.ops[204]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[207]: 'l-store-copy values%7#0 0'
debug: Replaced main_after_for@80.ops[209]: 'v-load values%7#0' with 'l-load values%7#0'
debug: Inserted main_after_for@80.ops[212]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_after_for@80.ops[214]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_after_for@80.ops[226]: 'l-store-copy aggregate%bytes_len%13#0 0'
debug: Replaced main_after_for@80.ops[228]: 'v-load aggregate%bytes_len%13#0' with 'l-load aggregate%bytes_len%13#0'
debug: Inserted main_after_for@80.ops[231]: 'l-store-copy aggregate%array_len%13#0 0'
debug: Replaced main_after_for@80.ops[233]: 'v-load aggregate%array_len%13#0' with 'l-load aggregate%array_len%13#0'
debug: Inserted main_after_for@80.ops[236]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_after_for@80.ops[238]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_after_for@80.ops[243]: 'l-store-copy values%8#0 0'
debug: Replaced main_after_for@80.ops[245]: 'v-load values%8#0' with 'l-load values%8#0'
debug: Inserted main_after_for@80.ops[248]: 'l-store-copy tmp%40#1 0'
debug: Replaced main_after_for@80.ops[250]: 'v-load tmp%40#1' with 'l-load tmp%40#1'
debug: Inserted main_after_for@80.ops[255]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_after_for@80.ops[257]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_after_for@80.ops[264]: 'l-store-copy values%9#0 0'
debug: Replaced main_after_for@80.ops[266]: 'v-load values%9#0' with 'l-load values%9#0'
debug: Inserted main_after_for@80.ops[269]: 'l-store-copy tmp%43#1 0'
debug: Replaced main_after_for@80.ops[271]: 'v-load tmp%43#1' with 'l-load tmp%43#1'
debug: Inserted main_after_for@80.ops[276]: 'l-store-copy tmp%45#1 0'
debug: Replaced main_after_for@80.ops[278]: 'v-load tmp%45#1' with 'l-load tmp%45#1'
debug: Inserted main_after_for@80.ops[285]: 'l-store-copy values%10#0 0'
debug: Replaced main_after_for@80.ops[287]: 'v-load values%10#0' with 'l-load values%10#0'
debug: Inserted main_after_for@80.ops[290]: 'l-store-copy tmp%46#1 0'
debug: Replaced main_after_for@80.ops[292]: 'v-load tmp%46#1' with 'l-load tmp%46#1'
debug: Inserted main_after_for@80.ops[295]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@80.ops[297]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@80.ops[28]: 'l-store-copy aggregate%bytes_offset%2#0 0'
debug: Replaced main_after_for@80.ops[31]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted main_after_for@80.ops[44]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_after_for@80.ops[47]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_after_for@80.ops[49]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@80.ops[52]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[53]: 'l-store-copy concat%1#0 1'
debug: Replaced main_after_for@80.ops[55]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[79]: 'l-store-copy aggregate%bytes_offset%3#0 0'
debug: Replaced main_after_for@80.ops[82]: 'v-load aggregate%bytes_offset%3#0' with 'l-load aggregate%bytes_offset%3#0'
debug: Inserted main_after_for@80.ops[136]: 'l-store-copy aggregate%bytes_offset%5#0 0'
debug: Replaced main_after_for@80.ops[139]: 'v-load aggregate%bytes_offset%5#0' with 'l-load aggregate%bytes_offset%5#0'
debug: Inserted main_after_for@80.ops[152]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_after_for@80.ops[155]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_after_for@80.ops[183]: 'l-store-copy aggregate%bytes_offset%6#0 0'
debug: Replaced main_after_for@80.ops[186]: 'v-load aggregate%bytes_offset%6#0' with 'l-load aggregate%bytes_offset%6#0'
debug: Inserted main_after_for@80.ops[199]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced main_after_for@80.ops[202]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted main_after_for@80.ops[207]: 'l-store-copy aggregate%val_as_bytes%4#0 0'
debug: Replaced main_after_for@80.ops[210]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted main_after_for@80.ops[226]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced main_after_for@80.ops[229]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted main_after_for@80.ops[231]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced main_after_for@80.ops[234]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_after_for@80.ops[235]: 'l-store-copy aggregate%updated_array%0#0 1'
debug: Replaced main_after_for@80.ops[237]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_after_for@80.ops[273]: 'l-store-copy aggregate%bytes_offset%10#0 0'
debug: Replaced main_after_for@80.ops[276]: 'v-load aggregate%bytes_offset%10#0' with 'l-load aggregate%bytes_offset%10#0'
debug: Inserted main_after_for@80.ops[295]: 'l-store-copy aggregate%bytes_offset%11#0 0'
debug: Replaced main_after_for@80.ops[298]: 'v-load aggregate%bytes_offset%11#0' with 'l-load aggregate%bytes_offset%11#0'
debug: Inserted main_after_for@80.ops[106]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@80.ops[109]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@80.ops[205]: 'l-store-copy concat%0#0 0'
debug: Replaced main_after_for@80.ops[211]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_after_for@80.ops[14]: 'l-store-copy aggregate%array_len%5#0 0'
debug: Replaced main_after_for@80.ops[21]: 'v-load aggregate%array_len%5#0' with 'l-load aggregate%array_len%5#0'
debug: Inserted main_after_for@80.ops[66]: 'l-store-copy aggregate%array_len%7#0 0'
debug: Replaced main_after_for@80.ops[73]: 'v-load aggregate%array_len%7#0' with 'l-load aggregate%array_len%7#0'
debug: Inserted main_after_for@80.ops[125]: 'l-store-copy aggregate%array_len%9#0 0'
debug: Replaced main_after_for@80.ops[132]: 'v-load aggregate%array_len%9#0' with 'l-load aggregate%array_len%9#0'
debug: Inserted main_after_for@80.ops[173]: 'l-store-copy aggregate%array_len%11#0 0'
debug: Replaced main_after_for@80.ops[180]: 'v-load aggregate%array_len%11#0' with 'l-load aggregate%array_len%11#0'
debug: Inserted main_after_for@80.ops[84]: 'l-store-copy concat%1#0 1'
debug: Replaced main_after_for@80.ops[96]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[222]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@80.ops[236]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[32]: 'l-store-copy aggregate%slot_contents%5#0 1'
debug: Replaced main_after_for@80.ops[48]: 'v-load aggregate%slot_contents%5#0' with 'l-load aggregate%slot_contents%5#0'
debug: Inserted main_after_for@80.ops[145]: 'l-store-copy aggregate%slot_contents%9#0 1'
debug: Replaced main_after_for@80.ops[161]: 'v-load aggregate%slot_contents%9#0' with 'l-load aggregate%slot_contents%9#0'
debug: Inserted main_after_for@80.ops[194]: 'l-store-copy concat%2#0 1'
debug: Replaced main_after_for@80.ops[210]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@80.ops[249]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced main_after_for@80.ops[265]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_after_for@80.ops[259]: 'l-store-copy aggregate%array_len%13#0 1'
debug: Replaced main_after_for@80.ops[278]: 'v-load aggregate%array_len%13#0' with 'l-load aggregate%array_len%13#0'
debug: Inserted main_after_for@80.ops[267]: 'l-store-copy aggregate%updated_array%0#0 1'
debug: Replaced main_after_for@80.ops[289]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_after_for@80.ops[280]: 'l-store-copy aggregate%array_len%13#0 1'
debug: Replaced main_after_for@80.ops[302]: 'v-load aggregate%array_len%13#0' with 'l-load aggregate%array_len%13#0'
debug: Inserted main_after_for@80.ops[291]: 'l-store-copy aggregate%updated_array%0#0 2'
debug: Replaced main_after_for@80.ops[313]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted main_after_for@80.ops[5]: 'l-store-copy aggregate%slot_contents%5#0 0'
debug: Replaced main_after_for@80.ops[32]: 'v-load aggregate%slot_contents%5#0' with 'l-load aggregate%slot_contents%5#0'
debug: Inserted main_after_for@80.ops[59]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@80.ops[86]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@80.ops[120]: 'l-store-copy aggregate%slot_contents%9#0 0'
debug: Replaced main_after_for@80.ops[147]: 'v-load aggregate%slot_contents%9#0' with 'l-load aggregate%slot_contents%9#0'
debug: Inserted main_after_for@80.ops[170]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@80.ops[197]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@80.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@80.ops[55]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@80.ops[56]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@80.ops[113]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@80.ops[118]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@80.ops[251]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_extend_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_array_extend_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_array_extend_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_extend_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_extend_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_array_extend_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_array_extend_route@4.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_extend_route@4.ops[17]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_extend_route@4.ops[27]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_test_array_extend_route@4.ops[29]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_test_array_extend_route@4.ops[38]: 'l-store-copy aggregate%bytes_len%16#0 0'
debug: Replaced main_test_array_extend_route@4.ops[40]: 'v-load aggregate%bytes_len%16#0' with 'l-load aggregate%bytes_len%16#0'
debug: Inserted main_test_array_extend_route@4.ops[43]: 'l-store-copy aggregate%array_len%16#0 0'
debug: Replaced main_test_array_extend_route@4.ops[45]: 'v-load aggregate%array_len%16#0' with 'l-load aggregate%array_len%16#0'
debug: Inserted main_test_array_extend_route@4.ops[48]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_extend_route@4.ops[50]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_extend_route@4.ops[53]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_extend_route@4.ops[55]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_extend_route@4.ops[32]: 'l-store-copy concat%3#0 0'
debug: Replaced main_test_array_extend_route@4.ops[35]: 'v-load concat%3#0' with 'l-load concat%3#0'
debug: Inserted main_test_array_extend_route@4.ops[36]: 'l-store-copy concat%3#0 1'
debug: Replaced main_test_array_extend_route@4.ops[38]: 'v-load concat%3#0' with 'l-load concat%3#0'
debug: Inserted main_test_array_extend_route@4.ops[18]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_extend_route@4.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_extend_route@4.ops[22]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_extend_route@4.ops[27]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_extend_route@4.ops[28]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_extend_route@4.ops[37]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[17]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[52]: 'l-store-copy aggregate%bytes_len%17#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[54]: 'v-load aggregate%bytes_len%17#0' with 'l-load aggregate%bytes_len%17#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[57]: 'l-store-copy aggregate%array_len%17#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[59]: 'v-load aggregate%array_len%17#0' with 'l-load aggregate%array_len%17#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[62]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[64]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[67]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[69]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[28]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[31]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[36]: 'l-store-copy aggregate%val_as_bytes%10#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[39]: 'v-load aggregate%val_as_bytes%10#0' with 'l-load aggregate%val_as_bytes%10#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[44]: 'l-store-copy aggregate%val_as_bytes%11#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[47]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[49]: 'l-store-copy concat%2#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[52]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[53]: 'l-store-copy concat%2#0 1'
debug: Replaced main_test_array_multiple_append_route@5.ops[55]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[18]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[22]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[25]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[27]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[33]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_test_array_multiple_append_route@5.ops[36]: 'l-store-copy concat%0#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[42]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[45]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[51]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_array_multiple_append_route@5.ops[26]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_multiple_append_route@5.ops[57]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_overhead_route@6.ops[1]: 'l-store-copy tmp%15#0 0'
debug: Replaced main_overhead_route@6.ops[3]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted main_overhead_route@6.ops[5]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_overhead_route@6.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_overhead_route@6.ops[10]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_overhead_route@6.ops[12]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_overhead_route@6.ops[15]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_overhead_route@6.ops[17]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_too_long_route@7.ops[1]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[3]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_array_too_long_route@7.ops[5]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[7]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_array_too_long_route@7.ops[10]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_array_too_long_route@7.ops[12]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_for_header@67.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@67.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@68.ops[8]: 'l-store-copy concat%0#0 0'
debug: Replaced main_for_body@68.ops[10]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_for_body@68.ops[4]: 'l-store-copy aggregate%val_as_bytes%12#0 0'
debug: Replaced main_for_body@68.ops[7]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_for_body@68.ops[1]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_for_body@68.ops[7]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@68.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@68.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@69.ops[1]: 'l-store-copy aggregate%slot_contents%18#0 0'
debug: Replaced main_after_for@69.ops[3]: 'v-load aggregate%slot_contents%18#0' with 'l-load aggregate%slot_contents%18#0'
debug: Inserted main_after_for@69.ops[5]: 'l-store-copy aggregate%bytes_len%18#0 0'
debug: Replaced main_after_for@69.ops[7]: 'v-load aggregate%bytes_len%18#0' with 'l-load aggregate%bytes_len%18#0'
debug: Inserted main_after_for@69.ops[10]: 'l-store-copy aggregate%array_len%18#0 0'
debug: Replaced main_after_for@69.ops[12]: 'v-load aggregate%array_len%18#0' with 'l-load aggregate%array_len%18#0'
debug: Inserted main_after_for@69.ops[15]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_after_for@69.ops[17]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_after_for@69.ops[25]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@69.ops[27]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@69.ops[30]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@69.ops[32]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@69.ops[21]: 'l-store-copy aggregate%val_as_bytes%13#0 0'
debug: Replaced main_after_for@69.ops[24]: 'v-load aggregate%val_as_bytes%13#0' with 'l-load aggregate%val_as_bytes%13#0'
debug: Inserted main_after_for@69.ops[4]: 'l-store-copy aggregate%slot_contents%18#0 0'
debug: Replaced main_after_for@69.ops[24]: 'v-load aggregate%slot_contents%18#0' with 'l-load aggregate%slot_contents%18#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[1]: 'l-store-copy tmp%23#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[3]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[5]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[7]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_array_copy_and_extend_route@8.ops[10]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_array_copy_and_extend_route@8.ops[12]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_for_header@62.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@62.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@63.ops[8]: 'l-store-copy concat%0#0 0'
debug: Replaced main_for_body@63.ops[10]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_for_body@63.ops[4]: 'l-store-copy aggregate%val_as_bytes%14#0 0'
debug: Replaced main_for_body@63.ops[7]: 'v-load aggregate%val_as_bytes%14#0' with 'l-load aggregate%val_as_bytes%14#0'
debug: Inserted main_for_body@63.ops[1]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_for_body@63.ops[7]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@63.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@63.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@64.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_after_for@64.ops[3]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_after_for@64.ops[13]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@64.ops[15]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@64.ops[19]: 'l-store-copy aggregate%bytes_len%19#0 0'
debug: Replaced main_after_for@64.ops[21]: 'v-load aggregate%bytes_len%19#0' with 'l-load aggregate%bytes_len%19#0'
debug: Inserted main_after_for@64.ops[24]: 'l-store-copy aggregate%array_len%19#0 0'
debug: Replaced main_after_for@64.ops[26]: 'v-load aggregate%array_len%19#0' with 'l-load aggregate%array_len%19#0'
debug: Inserted main_after_for@64.ops[29]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_after_for@64.ops[31]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_after_for@64.ops[36]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_after_for@64.ops[38]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_after_for@64.ops[45]: 'l-store-copy values%0#0 0'
debug: Replaced main_after_for@64.ops[47]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_after_for@64.ops[50]: 'l-store-copy tmp%6#3 0'
debug: Replaced main_after_for@64.ops[52]: 'v-load tmp%6#3' with 'l-load tmp%6#3'
debug: Inserted main_after_for@64.ops[55]: 'l-store-copy aggregate%slot_contents%21#0 0'
debug: Replaced main_after_for@64.ops[57]: 'v-load aggregate%slot_contents%21#0' with 'l-load aggregate%slot_contents%21#0'
debug: Inserted main_after_for@64.ops[59]: 'l-store-copy aggregate%bytes_len%21#0 0'
debug: Replaced main_after_for@64.ops[61]: 'v-load aggregate%bytes_len%21#0' with 'l-load aggregate%bytes_len%21#0'
debug: Inserted main_after_for@64.ops[64]: 'l-store-copy aggregate%array_len%21#0 0'
debug: Replaced main_after_for@64.ops[66]: 'v-load aggregate%array_len%21#0' with 'l-load aggregate%array_len%21#0'
debug: Inserted main_after_for@64.ops[69]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@64.ops[71]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_for@64.ops[76]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_after_for@64.ops[78]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_after_for@64.ops[85]: 'l-store-copy values%1#0 0'
debug: Replaced main_after_for@64.ops[87]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_after_for@64.ops[90]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_after_for@64.ops[92]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@64.ops[97]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@64.ops[99]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[103]: 'l-store-copy aggregate%bytes_len%23#0 0'
debug: Replaced main_after_for@64.ops[105]: 'v-load aggregate%bytes_len%23#0' with 'l-load aggregate%bytes_len%23#0'
debug: Inserted main_after_for@64.ops[108]: 'l-store-copy aggregate%array_len%23#0 0'
debug: Replaced main_after_for@64.ops[110]: 'v-load aggregate%array_len%23#0' with 'l-load aggregate%array_len%23#0'
debug: Inserted main_after_for@64.ops[113]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_after_for@64.ops[115]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_after_for@64.ops[118]: 'l-store-copy aggregate%slot_contents%24#0 0'
debug: Replaced main_after_for@64.ops[120]: 'v-load aggregate%slot_contents%24#0' with 'l-load aggregate%slot_contents%24#0'
debug: Inserted main_after_for@64.ops[122]: 'l-store-copy aggregate%bytes_len%24#0 0'
debug: Replaced main_after_for@64.ops[124]: 'v-load aggregate%bytes_len%24#0' with 'l-load aggregate%bytes_len%24#0'
debug: Inserted main_after_for@64.ops[127]: 'l-store-copy aggregate%array_len%24#0 0'
debug: Replaced main_after_for@64.ops[129]: 'v-load aggregate%array_len%24#0' with 'l-load aggregate%array_len%24#0'
debug: Inserted main_after_for@64.ops[132]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@64.ops[134]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@64.ops[139]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_after_for@64.ops[141]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@64.ops[148]: 'l-store-copy values%2#0 0'
debug: Replaced main_after_for@64.ops[150]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted main_after_for@64.ops[153]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_after_for@64.ops[155]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@64.ops[160]: 'l-store-copy values%3#0 0'
debug: Replaced main_after_for@64.ops[162]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted main_after_for@64.ops[165]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_after_for@64.ops[167]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_after_for@64.ops[172]: 'l-store-copy values%4#0 0'
debug: Replaced main_after_for@64.ops[174]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted main_after_for@64.ops[177]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_after_for@64.ops[179]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_after_for@64.ops[184]: 'l-store-copy values%5#0 0'
debug: Replaced main_after_for@64.ops[186]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted main_after_for@64.ops[188]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_after_for@64.ops[190]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_after_for@64.ops[193]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@64.ops[195]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@64.ops[9]: 'l-store-copy aggregate%val_as_bytes%15#0 0'
debug: Replaced main_after_for@64.ops[12]: 'v-load aggregate%val_as_bytes%15#0' with 'l-load aggregate%val_as_bytes%15#0'
debug: Inserted main_after_for@64.ops[17]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@64.ops[19]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@64.ops[43]: 'l-store-copy aggregate%bytes_offset%12#0 0'
debug: Replaced main_after_for@64.ops[46]: 'v-load aggregate%bytes_offset%12#0' with 'l-load aggregate%bytes_offset%12#0'
debug: Inserted main_after_for@64.ops[84]: 'l-store-copy aggregate%bytes_offset%13#0 0'
debug: Replaced main_after_for@64.ops[87]: 'v-load aggregate%bytes_offset%13#0' with 'l-load aggregate%bytes_offset%13#0'
debug: Inserted main_after_for@64.ops[104]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@64.ops[106]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[149]: 'l-store-copy aggregate%bytes_offset%14#0 0'
debug: Replaced main_after_for@64.ops[152]: 'v-load aggregate%bytes_offset%14#0' with 'l-load aggregate%bytes_offset%14#0'
debug: Inserted main_after_for@64.ops[1]: 'l-store-copy slot%2 0'
debug: Replaced main_after_for@64.ops[6]: 'v-load slot%2' with 'l-load slot%2'
debug: Inserted main_after_for@64.ops[7]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_after_for@64.ops[13]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_after_for@64.ops[31]: 'l-store-copy aggregate%array_len%19#0 0'
debug: Replaced main_after_for@64.ops[38]: 'v-load aggregate%array_len%19#0' with 'l-load aggregate%array_len%19#0'
debug: Inserted main_after_for@64.ops[73]: 'l-store-copy aggregate%array_len%21#0 0'
debug: Replaced main_after_for@64.ops[80]: 'v-load aggregate%array_len%21#0' with 'l-load aggregate%array_len%21#0'
debug: Inserted main_after_for@64.ops[156]: 'l-store-copy concat%2#0 1'
debug: Replaced main_after_for@64.ops[168]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[169]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@64.ops[181]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[182]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@64.ops[194]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[91]: 'l-store-copy aggregate%slot_contents%21#0 1'
debug: Replaced main_after_for@64.ops[104]: 'v-load aggregate%slot_contents%21#0' with 'l-load aggregate%slot_contents%21#0'
debug: Inserted main_after_for@64.ops[22]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@64.ops[49]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@64.ops[65]: 'l-store-copy aggregate%slot_contents%21#0 0'
debug: Replaced main_after_for@64.ops[92]: 'v-load aggregate%slot_contents%21#0' with 'l-load aggregate%slot_contents%21#0'
debug: Inserted main_after_for@64.ops[123]: 'l-store-copy aggregate%array_len%23#0 0'
debug: Replaced main_after_for@64.ops[149]: 'v-load aggregate%array_len%23#0' with 'l-load aggregate%array_len%23#0'
debug: Inserted main_after_for@64.ops[114]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@64.ops[160]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@64.ops[5]: 'l-store-copy slot%3 1'
debug: Replaced main_after_for@64.ops[62]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_after_for@64.ops[51]: 'l-store-copy concat%1#0 2'
debug: Replaced main_after_for@64.ops[107]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@64.ops[64]: 'l-store-copy slot%3 1'
debug: Replaced main_after_for@64.ops[134]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_test_array_evaluation_order_route@9.ops[1]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[3]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[5]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[7]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[10]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[12]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[27]: 'l-store-copy tmp%2#4 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[29]: 'v-load tmp%2#4' with 'l-load tmp%2#4'
debug: Inserted main_test_array_evaluation_order_route@9.ops[34]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[36]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[45]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[47]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[49]: 'l-store-copy aggregate%bytes_len%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[51]: 'v-load aggregate%bytes_len%26#0' with 'l-load aggregate%bytes_len%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[54]: 'l-store-copy aggregate%array_len%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[56]: 'v-load aggregate%array_len%26#0' with 'l-load aggregate%array_len%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[59]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[61]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[66]: 'l-store-copy values%0#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[68]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[71]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[73]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_test_array_evaluation_order_route@9.ops[78]: 'l-store-copy values%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[80]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[83]: 'l-store-copy tmp%6#3 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[85]: 'v-load tmp%6#3' with 'l-load tmp%6#3'
debug: Inserted main_test_array_evaluation_order_route@9.ops[90]: 'l-store-copy values%2#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[92]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[95]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[97]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[102]: 'l-store-copy values%3#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[104]: 'v-load values%3#0' with 'l-load values%3#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[107]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[109]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[114]: 'l-store-copy values%4#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[116]: 'v-load values%4#0' with 'l-load values%4#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[119]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[121]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[126]: 'l-store-copy values%5#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[128]: 'v-load values%5#0' with 'l-load values%5#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[131]: 'l-store-copy tmp%10#2 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[133]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_test_array_evaluation_order_route@9.ops[137]: 'l-store-copy tmp%11#2 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[139]: 'v-load tmp%11#2' with 'l-load tmp%11#2'
debug: Inserted main_test_array_evaluation_order_route@9.ops[141]: 'l-store-copy aggregate%slot_contents%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[143]: 'v-load aggregate%slot_contents%27#0' with 'l-load aggregate%slot_contents%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[145]: 'l-store-copy aggregate%bytes_len%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[147]: 'v-load aggregate%bytes_len%27#0' with 'l-load aggregate%bytes_len%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[150]: 'l-store-copy aggregate%array_len%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[152]: 'v-load aggregate%array_len%27#0' with 'l-load aggregate%array_len%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[155]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[157]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[168]: 'l-store-copy tmp%14#2 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[170]: 'v-load tmp%14#2' with 'l-load tmp%14#2'
debug: Inserted main_test_array_evaluation_order_route@9.ops[172]: 'l-store-copy slot_contents%10#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[174]: 'v-load slot_contents%10#0' with 'l-load slot_contents%10#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[195]: 'l-store-copy aggregate%bytes_len%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[197]: 'v-load aggregate%bytes_len%28#0' with 'l-load aggregate%bytes_len%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[200]: 'l-store-copy aggregate%array_len%28#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[202]: 'v-load aggregate%array_len%28#0' with 'l-load aggregate%array_len%28#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[205]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[207]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[212]: 'l-store-copy values%8#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[214]: 'v-load values%8#0' with 'l-load values%8#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[217]: 'l-store-copy tmp%17#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[219]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[224]: 'l-store-copy values%9#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[226]: 'v-load values%9#0' with 'l-load values%9#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[229]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[231]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[236]: 'l-store-copy values%10#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[238]: 'v-load values%10#0' with 'l-load values%10#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[241]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[243]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_array_evaluation_order_route@9.ops[246]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[248]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[18]: 'l-store-copy aggregate%val_as_bytes%16#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[21]: 'v-load aggregate%val_as_bytes%16#0' with 'l-load aggregate%val_as_bytes%16#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[40]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[43]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[162]: 'l-store-copy aggregate%bytes_offset%24#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[165]: 'v-load aggregate%bytes_offset%24#0' with 'l-load aggregate%bytes_offset%24#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[187]: 'l-store-copy aggregate%write_offset%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[190]: 'v-load aggregate%write_offset%1#0' with 'l-load aggregate%write_offset%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[193]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[196]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[197]: 'l-store-copy aggregate%updated_array%1#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[199]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[21]: 'l-store-copy arr#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[24]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[25]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[28]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[183]: 'l-store-copy values%7#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[188]: 'v-load values%7#0' with 'l-load values%7#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[35]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[42]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[188]: 'l-store-copy slot_contents%11#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[195]: 'v-load slot_contents%11#0' with 'l-load slot_contents%11#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[28]: 'l-store-copy tmp%1#5 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[38]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_test_array_evaluation_order_route@9.ops[39]: 'l-store-copy tmp%1#5 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[48]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_test_array_evaluation_order_route@9.ops[72]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[84]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[85]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[97]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[98]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[110]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[111]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[123]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[124]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[136]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[181]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[194]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[230]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[242]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[243]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[255]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[195]: 'l-store-copy arr#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[210]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[56]: 'l-store-copy aggregate%slot_contents%26#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[72]: 'v-load aggregate%slot_contents%26#0' with 'l-load aggregate%slot_contents%26#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[216]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[232]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[158]: 'l-store-copy aggregate%slot_contents%27#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[177]: 'v-load aggregate%slot_contents%27#0' with 'l-load aggregate%slot_contents%27#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[31]: 'l-store-copy arr#0 1'
debug: Replaced main_test_array_evaluation_order_route@9.ops[52]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[182]: 'l-store-copy aggregate%encoded_element%24#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[210]: 'v-load aggregate%encoded_element%24#0' with 'l-load aggregate%encoded_element%24#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[151]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[185]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_evaluation_order_route@9.ops[53]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_evaluation_order_route@9.ops[151]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[1]: 'l-store-copy tmp%31#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[3]: 'v-load tmp%31#0' with 'l-load tmp%31#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[5]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[7]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[10]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[12]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[30]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[32]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[41]: 'l-store-copy aggregate%slot_contents%29#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[43]: 'v-load aggregate%slot_contents%29#0' with 'l-load aggregate%slot_contents%29#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[45]: 'l-store-copy aggregate%bytes_len%29#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[47]: 'v-load aggregate%bytes_len%29#0' with 'l-load aggregate%bytes_len%29#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[50]: 'l-store-copy aggregate%array_len%29#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[52]: 'v-load aggregate%array_len%29#0' with 'l-load aggregate%array_len%29#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[55]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[57]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[62]: 'l-store-copy values%0#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[64]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[67]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[69]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[74]: 'l-store-copy values%1#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[76]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[79]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[81]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[84]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[86]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[18]: 'l-store-copy aggregate%val_as_bytes%17#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[21]: 'v-load aggregate%val_as_bytes%17#0' with 'l-load aggregate%val_as_bytes%17#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[36]: 'l-store-copy aggregate%updated_array%2#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[39]: 'v-load aggregate%updated_array%2#0' with 'l-load aggregate%updated_array%2#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[21]: 'l-store-copy arr#0 1'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[24]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[21]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[27]: 'l-store-copy update_assignment_current_base_value%0#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[32]: 'v-load update_assignment_current_base_value%0#0' with 'l-load update_assignment_current_base_value%0#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[31]: 'l-store-copy aggregate%val_as_bytes%18#0 1'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[38]: 'v-load aggregate%val_as_bytes%18#0' with 'l-load aggregate%val_as_bytes%18#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[34]: 'l-store-copy update_assignment_current_base_value%0#0 1'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[43]: 'v-load update_assignment_current_base_value%0#0' with 'l-load update_assignment_current_base_value%0#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[67]: 'l-store-copy aggregate%slot_contents%29#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[79]: 'v-load aggregate%slot_contents%29#0' with 'l-load aggregate%slot_contents%29#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[51]: 'l-store-copy aggregate%slot_contents%29#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[67]: 'v-load aggregate%slot_contents%29#0' with 'l-load aggregate%slot_contents%29#0'
debug: Inserted main_test_array_assignment_maximum_cursage_route@10.ops[26]: 'l-store-copy arr#0 0'
debug: Replaced main_test_array_assignment_maximum_cursage_route@10.ops[47]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_allocations_route@11.ops[1]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_test_allocations_route@11.ops[3]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_test_allocations_route@11.ops[5]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_allocations_route@11.ops[7]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_allocations_route@11.ops[10]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_allocations_route@11.ops[12]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_allocations_route@11.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_test_allocations_route@11.ops[17]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_for_header@53.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@53.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@54.ops[1]: 'l-store-copy alloc_test#0 0'
debug: Replaced main_for_body@54.ops[3]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted main_for_body@54.ops[4]: 'l-store-copy alloc_test#0 0'
debug: Replaced main_for_body@54.ops[7]: 'v-load alloc_test#0' with 'l-load alloc_test#0'
debug: Inserted main_after_for@55.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@55.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_iteration_route@12.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_test_iteration_route@12.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_test_iteration_route@12.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_iteration_route@12.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_iteration_route@12.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_iteration_route@12.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_for_header@36.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@36.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@37.ops[8]: 'l-store-copy concat%0#0 0'
debug: Replaced main_for_body@37.ops[10]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_for_body@37.ops[4]: 'l-store-copy aggregate%val_as_bytes%19#0 0'
debug: Replaced main_for_body@37.ops[7]: 'v-load aggregate%val_as_bytes%19#0' with 'l-load aggregate%val_as_bytes%19#0'
debug: Inserted main_for_body@37.ops[1]: 'l-store-copy slot_contents%0#1 0'
debug: Replaced main_for_body@37.ops[7]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@37.ops[4]: 'l-store-copy val#0 1'
debug: Replaced main_for_body@37.ops[15]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_after_for@38.ops[1]: 'l-store-copy aggregate%slot_contents%30#0 0'
debug: Replaced main_after_for@38.ops[3]: 'v-load aggregate%slot_contents%30#0' with 'l-load aggregate%slot_contents%30#0'
debug: Inserted main_after_for@38.ops[5]: 'l-store-copy aggregate%bytes_len%30#0 0'
debug: Replaced main_after_for@38.ops[7]: 'v-load aggregate%bytes_len%30#0' with 'l-load aggregate%bytes_len%30#0'
debug: Inserted main_after_for@38.ops[10]: 'l-store-copy aggregate%array_len%30#0 0'
debug: Replaced main_after_for@38.ops[12]: 'v-load aggregate%array_len%30#0' with 'l-load aggregate%array_len%30#0'
debug: Inserted main_after_for@38.ops[15]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_after_for@38.ops[17]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_for_header@39.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@39.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@40.ops[9]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@40.ops[11]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@40.ops[14]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_for_body@40.ops[16]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_for_body@40.ops[5]: 'l-store-copy aggregate%bytes_offset%33#0 0'
debug: Replaced main_for_body@40.ops[8]: 'v-load aggregate%bytes_offset%33#0' with 'l-load aggregate%bytes_offset%33#0'
debug: Inserted main_for_body@40.ops[1]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_for_body@40.ops[8]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_for_body@40.ops[14]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@40.ops[25]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@40.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@40.ops[22]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@41.ops[1]: 'l-store-copy aggregate%slot_contents%32#0 0'
debug: Replaced main_after_for@41.ops[3]: 'v-load aggregate%slot_contents%32#0' with 'l-load aggregate%slot_contents%32#0'
debug: Inserted main_after_for@41.ops[5]: 'l-store-copy aggregate%bytes_len%32#0 0'
debug: Replaced main_after_for@41.ops[7]: 'v-load aggregate%bytes_len%32#0' with 'l-load aggregate%bytes_len%32#0'
debug: Inserted main_after_for@41.ops[12]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced main_after_for@41.ops[14]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_for_header@42.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@42.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@43.ops[9]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@43.ops[11]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@43.ops[14]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_for_body@43.ops[16]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_body@43.ops[21]: 'l-store-copy item_index_internal%1#0 0'
debug: Replaced main_for_body@43.ops[23]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_for_body@43.ops[5]: 'l-store-copy aggregate%bytes_offset%34#0 0'
debug: Replaced main_for_body@43.ops[8]: 'v-load aggregate%bytes_offset%34#0' with 'l-load aggregate%bytes_offset%34#0'
debug: Inserted main_for_body@43.ops[1]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_for_body@43.ops[8]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_for_body@43.ops[15]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@43.ops[21]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@43.ops[4]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@43.ops[15]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@44.ops[1]: 'l-store-copy aggregate%slot_contents%33#0 0'
debug: Replaced main_after_for@44.ops[3]: 'v-load aggregate%slot_contents%33#0' with 'l-load aggregate%slot_contents%33#0'
debug: Inserted main_after_for@44.ops[5]: 'l-store-copy aggregate%bytes_len%33#0 0'
debug: Replaced main_after_for@44.ops[7]: 'v-load aggregate%bytes_len%33#0' with 'l-load aggregate%bytes_len%33#0'
debug: Inserted main_after_for@44.ops[10]: 'l-store-copy aggregate%array_len%33#0 0'
debug: Replaced main_after_for@44.ops[12]: 'v-load aggregate%array_len%33#0' with 'l-load aggregate%array_len%33#0'
debug: Inserted main_for_body@46.ops[13]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@46.ops[15]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@46.ops[18]: 'l-store-copy tmp%5#2 0'
debug: Replaced main_for_body@46.ops[20]: 'v-load tmp%5#2' with 'l-load tmp%5#2'
debug: Inserted main_for_body@46.ops[9]: 'l-store-copy aggregate%bytes_offset%35#0 0'
debug: Replaced main_for_body@46.ops[12]: 'v-load aggregate%bytes_offset%35#0' with 'l-load aggregate%bytes_offset%35#0'
debug: Inserted main_for_body@46.ops[3]: 'l-store-copy reverse_index_internal%2#1 0'
debug: Replaced main_for_body@46.ops[7]: 'v-load reverse_index_internal%2#1' with 'l-load reverse_index_internal%2#1'
debug: Inserted main_for_body@46.ops[6]: 'l-store-copy slot_contents%3#0 1'
debug: Replaced main_for_body@46.ops[13]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_for_body@46.ops[19]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@46.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_header@48.ops[3]: 'l-store-copy continue_looping%4#0 0'
debug: Replaced main_for_header@48.ops[5]: 'v-load continue_looping%4#0' with 'l-load continue_looping%4#0'
debug: Inserted main_for_body@49.ops[10]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@49.ops[12]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@49.ops[15]: 'l-store-copy add%0#0 0'
debug: Replaced main_for_body@49.ops[17]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted main_for_body@49.ops[19]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_for_body@49.ops[21]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_for_body@49.ops[29]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_for_body@49.ops[31]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_for_body@49.ops[34]: 'l-store-copy concat%2#0 0'
debug: Replaced main_for_body@49.ops[36]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_for_body@49.ops[2]: 'l-store-copy aggregate%val_as_bytes%20#0 0'
debug: Replaced main_for_body@49.ops[5]: 'v-load aggregate%val_as_bytes%20#0' with 'l-load aggregate%val_as_bytes%20#0'
debug: Inserted main_for_body@49.ops[24]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced main_for_body@49.ops[27]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted main_for_body@49.ops[5]: 'l-store-copy arc4_arr#0 1'
debug: Replaced main_for_body@49.ops[9]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted main_for_body@49.ops[8]: 'l-store-copy concat%1#0 1'
debug: Replaced main_for_body@49.ops[28]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_for_body@49.ops[7]: 'l-store-copy aggregate%val_as_bytes%20#0 2'
debug: Replaced main_for_body@49.ops[37]: 'v-load aggregate%val_as_bytes%20#0' with 'l-load aggregate%val_as_bytes%20#0'
debug: Inserted main_for_body@49.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@49.ops[44]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@50.ops[5]: 'l-store-copy concat%3#0 0'
debug: Replaced main_after_for@50.ops[7]: 'v-load concat%3#0' with 'l-load concat%3#0'
debug: Inserted main_after_for@50.ops[9]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_after_for@50.ops[11]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_after_for@50.ops[13]: 'l-store-copy len%0#0 0'
debug: Replaced main_after_for@50.ops[15]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_after_for@50.ops[18]: 'l-store-copy div_floor%0#0 0'
debug: Replaced main_after_for@50.ops[20]: 'v-load div_floor%0#0' with 'l-load div_floor%0#0'
debug: Inserted main_after_for@50.ops[22]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_after_for@50.ops[24]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_after_for@50.ops[30]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@50.ops[32]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@50.ops[35]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_after_for@50.ops[37]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_after_for@50.ops[40]: 'l-store-copy tmp%11#1 0'
debug: Replaced main_after_for@50.ops[42]: 'v-load tmp%11#1' with 'l-load tmp%11#1'
debug: Inserted main_after_for@50.ops[46]: 'l-store-copy aggregate%encoded_element%36#0 0'
debug: Replaced main_after_for@50.ops[48]: 'v-load aggregate%encoded_element%36#0' with 'l-load aggregate%encoded_element%36#0'
debug: Inserted main_after_for@50.ops[51]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_after_for@50.ops[53]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_after_for@50.ops[57]: 'l-store-copy aggregate%encoded_element%37#0 0'
debug: Replaced main_after_for@50.ops[59]: 'v-load aggregate%encoded_element%37#0' with 'l-load aggregate%encoded_element%37#0'
debug: Inserted main_after_for@50.ops[62]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_after_for@50.ops[64]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_after_for@50.ops[68]: 'l-store-copy aggregate%encoded_element%38#0 0'
debug: Replaced main_after_for@50.ops[70]: 'v-load aggregate%encoded_element%38#0' with 'l-load aggregate%encoded_element%38#0'
debug: Inserted main_after_for@50.ops[73]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@50.ops[75]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@50.ops[79]: 'l-store-copy aggregate%encoded_element%39#0 0'
debug: Replaced main_after_for@50.ops[81]: 'v-load aggregate%encoded_element%39#0' with 'l-load aggregate%encoded_element%39#0'
debug: Inserted main_after_for@50.ops[84]: 'l-store-copy tmp%15#1 0'
debug: Replaced main_after_for@50.ops[86]: 'v-load tmp%15#1' with 'l-load tmp%15#1'
debug: Inserted main_after_for@50.ops[89]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@50.ops[91]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@50.ops[1]: 'l-store-copy slot_contents%5#0 0'
debug: Replaced main_after_for@50.ops[4]: 'v-load slot_contents%5#0' with 'l-load slot_contents%5#0'
debug: Inserted main_after_for@50.ops[27]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced main_after_for@50.ops[30]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted main_after_for@50.ops[47]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@50.ops[58]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@50.ops[59]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@50.ops[70]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@50.ops[71]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@50.ops[82]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@50.ops[35]: 'l-store-copy combined_arr#0 0'
debug: Replaced main_after_for@50.ops[47]: 'v-load combined_arr#0' with 'l-load combined_arr#0'
debug: Inserted main_after_for@50.ops[9]: 'l-store-copy concat%3#0 0'
debug: Replaced main_after_for@50.ops[30]: 'v-load concat%3#0' with 'l-load concat%3#0'
debug: Inserted main_test_quicksort_route@13.ops[1]: 'l-store-copy tmp%44#0 0'
debug: Replaced main_test_quicksort_route@13.ops[3]: 'v-load tmp%44#0' with 'l-load tmp%44#0'
debug: Inserted main_test_quicksort_route@13.ops[5]: 'l-store-copy tmp%45#0 0'
debug: Replaced main_test_quicksort_route@13.ops[7]: 'v-load tmp%45#0' with 'l-load tmp%45#0'
debug: Inserted main_test_quicksort_route@13.ops[10]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_test_quicksort_route@13.ops[12]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_test_quicksort_route@13.ops[15]: 'l-store-copy rnd#0 0'
debug: Replaced main_test_quicksort_route@13.ops[17]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_for_header@28.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@28.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@29.ops[9]: 'l-store-copy aggregate%val_as_bytes%21#0 0'
debug: Replaced main_for_body@29.ops[12]: 'v-load aggregate%val_as_bytes%21#0' with 'l-load aggregate%val_as_bytes%21#0'
debug: Inserted main_for_body@29.ops[14]: 'l-store-copy concat%0#0 0'
debug: Replaced main_for_body@29.ops[17]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted main_for_body@29.ops[3]: 'l-store-copy tmp%1#2 0'
debug: Replaced main_for_body@29.ops[8]: 'v-load tmp%1#2' with 'l-load tmp%1#2'
debug: Inserted main_for_body@29.ops[7]: 'l-store-copy slot_contents%0#1 1'
debug: Replaced main_for_body@29.ops[13]: 'v-load slot_contents%0#1' with 'l-load slot_contents%0#1'
debug: Inserted main_for_body@29.ops[6]: 'l-store-copy rnd#0 1'
debug: Replaced main_for_body@29.ops[19]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_for_body@29.ops[2]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@29.ops[23]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@30.ops[2]: 'l-store-copy aggregate%slot_contents%34#0 0'
debug: Replaced main_after_for@30.ops[4]: 'v-load aggregate%slot_contents%34#0' with 'l-load aggregate%slot_contents%34#0'
debug: Inserted main_after_for@30.ops[6]: 'l-store-copy aggregate%bytes_len%34#0 0'
debug: Replaced main_after_for@30.ops[8]: 'v-load aggregate%bytes_len%34#0' with 'l-load aggregate%bytes_len%34#0'
debug: Inserted main_after_for@30.ops[11]: 'l-store-copy aggregate%array_len%34#0 0'
debug: Replaced main_after_for@30.ops[13]: 'v-load aggregate%array_len%34#0' with 'l-load aggregate%array_len%34#0'
debug: Inserted main_after_for@30.ops[16]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_after_for@30.ops[18]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_after_for@30.ops[32]: 'l-store-copy aggregate%slot_contents%36#0 0'
debug: Replaced main_after_for@30.ops[34]: 'v-load aggregate%slot_contents%36#0' with 'l-load aggregate%slot_contents%36#0'
debug: Inserted main_after_for@30.ops[36]: 'l-store-copy aggregate%bytes_len%36#0 0'
debug: Replaced main_after_for@30.ops[38]: 'v-load aggregate%bytes_len%36#0' with 'l-load aggregate%bytes_len%36#0'
debug: Inserted main_after_for@30.ops[23]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@30.ops[27]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_after_for@30.ops[14]: 'l-store-copy aggregate%array_len%34#0 0'
debug: Replaced main_after_for@30.ops[21]: 'v-load aggregate%array_len%34#0' with 'l-load aggregate%array_len%34#0'
debug: Inserted main_after_for@30.ops[27]: 'l-store-copy rnd#0 1'
debug: Replaced main_after_for@30.ops[33]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_after_for@30.ops[1]: 'l-store-copy rnd#0 0'
debug: Replaced main_after_for@30.ops[27]: 'v-load rnd#0' with 'l-load rnd#0'
debug: Inserted main_for_header@31.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@31.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@32.ops[10]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@32.ops[12]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@32.ops[15]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_for_body@32.ops[17]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_for_body@32.ops[6]: 'l-store-copy aggregate%bytes_offset%40#0 0'
debug: Replaced main_for_body@32.ops[9]: 'v-load aggregate%bytes_offset%40#0' with 'l-load aggregate%bytes_offset%40#0'
debug: Inserted main_for_body@32.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_for_body@32.ops[9]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_for_body@32.ops[15]: 'l-store-copy value#0 0'
debug: Replaced main_for_body@32.ops[26]: 'v-load value#0' with 'l-load value#0'
debug: Inserted main_for_body@32.ops[5]: 'l-store-copy item_index_internal%1#0 1'
debug: Replaced main_for_body@32.ops[23]: 'v-load item_index_internal%1#0' with 'l-load item_index_internal%1#0'
debug: Inserted main_test_unobserved_write_route@14.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[3]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_test_unobserved_write_route@14.ops[5]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[7]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_test_unobserved_write_route@14.ops[10]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[12]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_test_unobserved_write_route@14.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[17]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_unobserved_write_route@14.ops[19]: 'l-store-copy aggregate%slot_contents%37#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[21]: 'v-load aggregate%slot_contents%37#0' with 'l-load aggregate%slot_contents%37#0'
debug: Inserted main_test_unobserved_write_route@14.ops[23]: 'l-store-copy aggregate%bytes_len%37#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[25]: 'v-load aggregate%bytes_len%37#0' with 'l-load aggregate%bytes_len%37#0'
debug: Inserted main_test_unobserved_write_route@14.ops[28]: 'l-store-copy aggregate%array_len%37#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[30]: 'v-load aggregate%array_len%37#0' with 'l-load aggregate%array_len%37#0'
debug: Inserted main_test_unobserved_write_route@14.ops[56]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[58]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_test_unobserved_write_route@14.ops[69]: 'l-store-copy values%0#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[71]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted main_test_unobserved_write_route@14.ops[74]: 'l-store-copy tmp%3#1 0'
debug: Replaced main_test_unobserved_write_route@14.ops[76]: 'v-load tmp%3#1' with 'l-load tmp%3#1'
debug: Inserted main_test_unobserved_write_route@14.ops[79]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[81]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_unobserved_write_route@14.ops[40]: 'l-store-copy aggregate%write_offset%3#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[43]: 'v-load aggregate%write_offset%3#0' with 'l-load aggregate%write_offset%3#0'
debug: Inserted main_test_unobserved_write_route@14.ops[46]: 'l-store-copy aggregate%updated_array%3#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[49]: 'v-load aggregate%updated_array%3#0' with 'l-load aggregate%updated_array%3#0'
debug: Inserted main_test_unobserved_write_route@14.ops[64]: 'l-store-copy aggregate%updated_array%4#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[67]: 'v-load aggregate%updated_array%4#0' with 'l-load aggregate%updated_array%4#0'
debug: Inserted main_test_unobserved_write_route@14.ops[68]: 'l-store-copy aggregate%updated_array%4#0 1'
debug: Replaced main_test_unobserved_write_route@14.ops[70]: 'v-load aggregate%updated_array%4#0' with 'l-load aggregate%updated_array%4#0'
debug: Inserted main_test_unobserved_write_route@14.ops[49]: 'l-store-copy arr#0 1'
debug: Replaced main_test_unobserved_write_route@14.ops[52]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_unobserved_write_route@14.ops[33]: 'l-store-copy last#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[38]: 'v-load last#0' with 'l-load last#0'
debug: Inserted main_test_unobserved_write_route@14.ops[54]: 'l-store-copy arr#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[59]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_unobserved_write_route@14.ops[58]: 'l-store-copy aggregate%val_as_bytes%23#0 1'
debug: Replaced main_test_unobserved_write_route@14.ops[66]: 'v-load aggregate%val_as_bytes%23#0' with 'l-load aggregate%val_as_bytes%23#0'
debug: Inserted main_test_unobserved_write_route@14.ops[37]: 'l-store-copy aggregate%val_as_bytes%22#0 1'
debug: Replaced main_test_unobserved_write_route@14.ops[46]: 'v-load aggregate%val_as_bytes%22#0' with 'l-load aggregate%val_as_bytes%22#0'
debug: Inserted main_test_unobserved_write_route@14.ops[62]: 'l-store-copy arr#0 1'
debug: Replaced main_test_unobserved_write_route@14.ops[72]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_unobserved_write_route@14.ops[68]: 'l-store-copy aggregate%write_offset%3#0 3'
debug: Replaced main_test_unobserved_write_route@14.ops[78]: 'v-load aggregate%write_offset%3#0' with 'l-load aggregate%write_offset%3#0'
debug: Inserted main_test_unobserved_write_route@14.ops[46]: 'l-store-copy aggregate%write_offset%3#0 2'
debug: Replaced main_test_unobserved_write_route@14.ops[68]: 'v-load aggregate%write_offset%3#0' with 'l-load aggregate%write_offset%3#0'
debug: Inserted main_test_unobserved_write_route@14.ops[22]: 'l-store-copy aggregate%slot_contents%37#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[45]: 'v-load aggregate%slot_contents%37#0' with 'l-load aggregate%slot_contents%37#0'
debug: Inserted main_test_unobserved_write_route@14.ops[18]: 'l-store-copy arr#0 0'
debug: Replaced main_test_unobserved_write_route@14.ops[53]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_bare_routing@17.ops[1]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_bare_routing@17.ops[3]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main___algopy_default_create@18.ops[1]: 'l-store-copy tmp%53#0 0'
debug: Replaced main___algopy_default_create@18.ops[3]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main___algopy_default_create@18.ops[5]: 'l-store-copy tmp%54#0 0'
debug: Replaced main___algopy_default_create@18.ops[7]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main___algopy_default_create@18.ops[10]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@18.ops[12]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@21.ops[1]: 'l-store-copy test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@21.ops[3]: 'v-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0'
debug: Inserted quicksort_window_block@0.ops[3]: 'l-store-copy tmp%0#0 0'
debug: Replaced quicksort_window_block@0.ops[5]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted quicksort_window_block@0.ops[15]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced quicksort_window_block@0.ops[18]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted quicksort_window_block@0.ops[8]: 'l-store-copy tmp%1#0 0'
debug: Replaced quicksort_window_block@0.ops[13]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted quicksort_window_block@0.ops[12]: 'l-store-copy slot_contents%0#0 1'
debug: Replaced quicksort_window_block@0.ops[19]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted quicksort_window_while_top@3.ops[10]: 'l-store-copy values%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[12]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted quicksort_window_while_top@3.ops[15]: 'l-store-copy tmp%2#0 0'
debug: Replaced quicksort_window_while_top@3.ops[17]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted quicksort_window_while_top@3.ops[6]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted quicksort_window_while_top@3.ops[2]: 'l-store-copy slot_contents%1#0 0'
debug: Replaced quicksort_window_while_top@3.ops[9]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted quicksort_window_while_top@6.ops[14]: 'l-store-copy tmp%4#0 0'
debug: Replaced quicksort_window_while_top@6.ops[16]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted quicksort_window_while_top@6.ops[6]: 'l-store-copy aggregate%bytes_offset%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted quicksort_window_while_top@6.ops[11]: 'l-store-copy values%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[14]: 'v-load values%2#0' with 'l-load values%2#0'
debug: Inserted quicksort_window_while_top@6.ops[2]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced quicksort_window_while_top@6.ops[9]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted quicksort_window_after_while@10.ops[3]: 'l-store-copy tmp%7#0 0'
debug: Replaced quicksort_window_after_while@10.ops[5]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted quicksort_window_if_body@11.ops[2]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[4]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[18]: 'l-store-copy aggregate%updated_array%0#0 0'
debug: Replaced quicksort_window_if_body@11.ops[20]: 'v-load aggregate%updated_array%0#0' with 'l-load aggregate%updated_array%0#0'
debug: Inserted quicksort_window_if_body@11.ops[24]: 'l-store-copy aggregate%updated_array%1#0 0'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load aggregate%updated_array%1#0' with 'l-load aggregate%updated_array%1#0'
debug: Inserted quicksort_window_if_body@11.ops[5]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[10]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[11]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced quicksort_window_if_body@11.ops[16]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted quicksort_window_if_body@11.ops[13]: 'l-store-copy aggregate%bytes_offset%1#0 2'
debug: Replaced quicksort_window_if_body@11.ops[18]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted quicksort_window_if_body@11.ops[9]: 'l-store-copy aggregate%encoded_element%3#0 1'
debug: Replaced quicksort_window_if_body@11.ops[20]: 'v-load aggregate%encoded_element%3#0' with 'l-load aggregate%encoded_element%3#0'
debug: Inserted quicksort_window_if_body@11.ops[17]: 'l-store-copy aggregate%encoded_element%4#0 3'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load aggregate%encoded_element%4#0' with 'l-load aggregate%encoded_element%4#0'
debug: Inserted quicksort_window_if_body@11.ops[7]: 'l-store-copy aggregate%bytes_offset%2#0 2'
debug: Replaced quicksort_window_if_body@11.ops[27]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted quicksort_window_after_if_else@13.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced quicksort_window_after_if_else@13.ops[9]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted quicksort_window_after_if_else@13.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_after_if_else@13.ops[6]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_if_else@16.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced quicksort_window_after_if_else@16.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted quicksort_window_if_body@17.ops[5]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@17.ops[7]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_if_body@18.ops[3]: 'l-store-copy right#1 0'
debug: Replaced quicksort_window_if_body@18.ops[5]: 'v-load right#1' with 'l-load right#1'
debug: Inserted quicksort_window_after_while@22.ops[3]: 'l-store-copy tmp%16#0 0'
debug: Replaced quicksort_window_after_while@22.ops[5]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted quicksort_window_after_if_else@24.ops[3]: 'l-store-copy tmp%17#0 0'
debug: Replaced quicksort_window_after_if_else@24.ops[5]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted create_array_block@0.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced create_array_block@0.ops[3]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted create_array_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced create_array_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted create_array_for_body@2.ops[5]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced create_array_for_body@2.ops[8]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted create_array_for_body@2.ops[10]: 'l-store-copy concat%0#0 0'
debug: Replaced create_array_for_body@2.ops[13]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted create_array_for_body@2.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced create_array_for_body@2.ops[8]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted create_array_for_body@2.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced create_array_for_body@2.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted create_array_for_body@2.ops[6]: 'l-store-copy i#0 2'
debug: Replaced create_array_for_body@2.ops[18]: 'v-load i#0' with 'l-load i#0'
debug: Inserted assert_last_is_zero_block@0.ops[2]: 'l-store-copy aggregate%slot_contents%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[4]: 'v-load aggregate%slot_contents%0#0' with 'l-load aggregate%slot_contents%0#0'
debug: Inserted assert_last_is_zero_block@0.ops[6]: 'l-store-copy aggregate%bytes_len%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[8]: 'v-load aggregate%bytes_len%0#0' with 'l-load aggregate%bytes_len%0#0'
debug: Inserted assert_last_is_zero_block@0.ops[11]: 'l-store-copy aggregate%array_len%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[13]: 'v-load aggregate%array_len%0#0' with 'l-load aggregate%array_len%0#0'
debug: Inserted assert_last_is_zero_block@0.ops[16]: 'l-store-copy tmp%1#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[18]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted assert_last_is_zero_block@0.ops[25]: 'l-store-copy values%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[27]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted assert_last_is_zero_block@0.ops[29]: 'l-store-copy tmp%2#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[31]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted assert_last_is_zero_block@0.ops[21]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[24]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted assert_last_is_zero_block@0.ops[5]: 'l-store-copy aggregate%slot_contents%0#0 0'
debug: Replaced assert_last_is_zero_block@0.ops[24]: 'v-load aggregate%slot_contents%0#0' with 'l-load aggregate%slot_contents%0#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[8]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy concat%0#0 0'
debug: Replaced add_x_for_body@2.ops[13]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy slot_contents%0#0 0'
debug: Replaced add_x_for_body@2.ops[8]: 'v-load slot_contents%0#0' with 'l-load slot_contents%0#0'
debug: Inserted add_x_for_body@2.ops[5]: 'l-store-copy i#0 1'
debug: Replaced add_x_for_body@2.ops[17]: 'v-load i#0' with 'l-load i#0'
debug: Inserted append_length_and_return_block@0.ops[2]: 'l-store-copy aggregate%slot_contents%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[4]: 'v-load aggregate%slot_contents%0#0' with 'l-load aggregate%slot_contents%0#0'
debug: Inserted append_length_and_return_block@0.ops[6]: 'l-store-copy aggregate%bytes_len%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[8]: 'v-load aggregate%bytes_len%0#0' with 'l-load aggregate%bytes_len%0#0'
debug: Inserted append_length_and_return_block@0.ops[11]: 'l-store-copy aggregate%array_len%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[13]: 'v-load aggregate%array_len%0#0' with 'l-load aggregate%array_len%0#0'
debug: Inserted append_length_and_return_block@0.ops[15]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[18]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted append_length_and_return_block@0.ops[20]: 'l-store-copy concat%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[23]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted append_length_and_return_block@0.ops[5]: 'l-store-copy aggregate%slot_contents%0#0 0'
debug: Replaced append_length_and_return_block@0.ops[18]: 'v-load aggregate%slot_contents%0#0' with 'l-load aggregate%slot_contents%0#0'
debug: Inserted _puya_lib.mem.new_slot@entry.ops[2]: 'l-store-copy free_slot#0 0'
debug: Replaced _puya_lib.mem.new_slot@entry.ops[6]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Inserted _puya_lib.mem.new_slot@entry.ops[7]: 'l-store-copy free_slot#0 2'
debug: Replaced _puya_lib.mem.new_slot@entry.ops[12]: 'v-load free_slot#0' with 'l-load free_slot#0'
debug: Found 24 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_array_extend_route@4 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_test_array_multiple_append_route@5 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_overhead_route@6 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_test_array_evaluation_order_route@9 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_test_array_assignment_maximum_cursage_route@10 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_test_unobserved_write_route@14 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main___algopy_default_create@18 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_if_else@21 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_for@50 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_for@55 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_for@64 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_for@69 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: shared x-stack for main_after_for@80 -> main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22: tmp%0#0
debug: Found 7 edge set/s for test_cases.array.uint64.quicksort_window
debug: Found 2 edge set/s for test_cases.array.uint64.create_array
debug: Found 2 edge set/s for test_cases.array.uint64.add_x
debug: algopy.arc4.ARC4Contract.approval_program f-stack entry: ['arc4_arr#0', 'slot%1', 'slot%2', 'slot%4', 'slot%5', 'tmp%0#2', '_i#0', 'aggregate%array_len%30#0', 'aggregate%array_len%32#0', 'aggregate%array_len%36#0', 'arr#0', 'expected#0', 'i#0', 'idx#0', 'item_index_internal%0#0', 'item_index_internal%1#0', 'last#0', 'num#0', 'reverse_index_internal%2#1', 'rnd#0', 'val#0']
debug: algopy.arc4.ARC4Contract.approval_program f-stack on first store: []
debug: test_cases.array.uint64.quicksort_window f-stack entry: ['aggregate%bytes_offset%1#0', 'aggregate%bytes_offset%2#0', 'right#16']
debug: test_cases.array.uint64.quicksort_window f-stack on first store: ['pivot#0', 'right#1', 'left#1']
debug: test_cases.array.uint64.create_array f-stack entry: []
debug: test_cases.array.uint64.create_array f-stack on first store: ['arr#0', 'i#0']
debug: test_cases.array.uint64.add_x f-stack entry: []
debug: test_cases.array.uint64.add_x f-stack on first store: ['i#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: Replaced 'Uncover(source_location=array/uint64.py:286:17-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('slot_contents%0#1',)), StackDefine(local_ids=('slot_contents%0#1',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/uint64.py:286:17-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('sub%0#0',)), StackDefine(local_ids=('sub%0#0',))), n=2, op_code='uncover', consumes=3, produces=3); Uncover(source_location=array/uint64.py:286:17-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('len%0#0',)), StackDefine(local_ids=('len%0#0',))), n=3, op_code='uncover', consumes=4, produces=4)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2)', reducing by 1 ops by search
array/uint64.py:201 debug: optimizing TEAL subroutine ops test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
array/uint64.py:255 debug: optimizing TEAL subroutine ops test_cases.array.uint64.create_array() -> uint64:
array/uint64.py:263 debug: optimizing TEAL subroutine ops test_cases.array.uint64.assert_last_is_zero(arr: uint64) -> void:
array/uint64.py:277 debug: optimizing TEAL subroutine ops test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
array/uint64.py:291 debug: optimizing TEAL subroutine ops test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.mem.new_slot() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: replacing `b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22 into main_after_if_else@21
debug: inlining single reference block main_for_body@29 into main_for_header@28
debug: inlining single reference block main_for_body@32 into main_for_header@31
debug: inlining single reference block main_for_body@37 into main_for_header@36
debug: inlining single reference block main_for_body@40 into main_for_header@39
debug: inlining single reference block main_for_body@43 into main_for_header@42
debug: inlining single reference block main_for_body@46 into main_for_header@45
debug: inlining single reference block main_for_body@49 into main_for_header@48
debug: inlining single reference block main_for_body@54 into main_for_header@53
debug: inlining single reference block main_for_body@63 into main_for_header@62
debug: inlining single reference block main_for_body@68 into main_for_header@67
debug: inlining single reference block main_for_body@79 into main_for_header@78
debug: inlining single reference block main___algopy_default_create@18 into main_bare_routing@17
debug: removing explicit jump to fall-through block main_after_if_else@21
debug: removing explicit jump to fall-through block main_for_header@28
debug: removing explicit jump to fall-through block main_for_header@31
debug: removing explicit jump to fall-through block main_for_header@36
debug: removing explicit jump to fall-through block main_for_header@39
debug: removing explicit jump to fall-through block main_for_header@42
debug: removing explicit jump to fall-through block main_for_header@45
debug: removing explicit jump to fall-through block main_for_header@48
debug: removing explicit jump to fall-through block main_for_header@53
debug: removing explicit jump to fall-through block main_for_header@62
debug: removing explicit jump to fall-through block main_for_header@67
debug: removing explicit jump to fall-through block main_for_header@78
array/uint64.py:201 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
debug: inlining single reference block quicksort_window_block@0 into quicksort_window
debug: inlining single reference block quicksort_window_while_body@4 into quicksort_window_while_top@3
debug: inlining single reference block quicksort_window_while_body@7 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_after_if_else@9 into quicksort_window_while_top@6
debug: inlining single reference block quicksort_window_if_body@23 into quicksort_window_after_while@22
debug: inlining single reference block quicksort_window_if_body@25 into quicksort_window_after_if_else@24
debug: inlining single reference block quicksort_window_if_body@11 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_after_if_else@13 into quicksort_window_after_while@10
debug: inlining single reference block quicksort_window_if_body@17 into quicksort_window_after_if_else@16
debug: inlining single reference block quicksort_window_if_body@18 into quicksort_window_after_if_else@16
debug: removing explicit jump to fall-through block quicksort_window_while_top@3
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@24
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@26
debug: removing explicit jump to fall-through block quicksort_window_after_if_else@19
array/uint64.py:255 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.create_array() -> uint64:
debug: inlining single reference block create_array_block@0 into create_array
debug: inlining single reference block create_array_for_body@2 into create_array_for_header@1
debug: removing explicit jump to fall-through block create_array_for_header@1
array/uint64.py:263 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.assert_last_is_zero(arr: uint64) -> void:
debug: inlining single reference block assert_last_is_zero_block@0 into assert_last_is_zero
array/uint64.py:277 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
debug: inlining single reference block add_x_block@0 into add_x
debug: inlining single reference block add_x_for_body@2 into add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_header@1
array/uint64.py:291 debug: optimizing TEAL subroutine blocks test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
debug: inlining single reference block append_length_and_return_block@0 into append_length_and_return
debug: optimizing TEAL subroutine blocks _puya_lib.mem.new_slot() -> uint64:
debug: inlining single reference block _puya_lib.mem.new_slot@entry into _puya_lib.mem.new_slot
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.__init__ for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_arc4_conversion for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.sum_array for inlining
debug: marking single-use function test_cases.array.static_size.StaticSizeContract.test_arc4_bool for inlining
debug: marking single-use function algopy.arc4.ARC4Contract.approval_program for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to algopy.arc4.ARC4Contract.approval_program in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__init__ in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#1, tmp%1#0
debug: selected tmp%0#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@1 in block@6
debug: Merged linear block@5 into block@1
debug: Replaced predecessor block@6 with block@1 in block@2
debug: Merged linear block@6 into block@1
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Merged linear block@4 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_array_length#0
debug: selected new_array_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, new_array_length_b#0
debug: selected new_array_length_b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, current_bytes#0
debug: selected current_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, required_bytes#0
debug: selected required_bytes#0 from equivalence set
debug: Found equivalence set: tmp%12#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%13#0, write_offset#0
debug: selected write_offset#0 from equivalence set
debug: Found equivalence set: tmp%14#0, write_end#0
debug: selected write_end#0 from equivalence set
debug: Found equivalence set: tmp%17#0, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%18#0, write_offset#2
debug: selected write_offset#2 from equivalence set
debug: Found equivalence set: tmp%19#0, read_offset#2
debug: selected read_offset#2 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: values%0#0, last_point.x#0, reinterpret_biguint%1#0
debug: selected last_point.x#0 from equivalence set
debug: Found equivalence set: values%1#0, last_point.y#0
debug: selected last_point.y#0 from equivalence set
debug: Found equivalence set: values%2#0, last_point.other.a#0
debug: selected last_point.other.a#0 from equivalence set
debug: Found equivalence set: values%3#0, last_point.other.b#0
debug: selected last_point.other.b#0 from equivalence set
debug: Found equivalence set: values%4#0, last_point.other.c#0
debug: selected last_point.other.c#0 from equivalence set
debug: Found equivalence set: values%5#0, last_point.other.d#0
debug: selected last_point.other.d#0 from equivalence set
debug: Found equivalence set: values%6#0, last_point.other.e#0
debug: selected last_point.other.e#0 from equivalence set
debug: Found equivalence set: values%7#0, point.x#0, reinterpret_biguint%0#0
debug: selected point.x#0 from equivalence set
debug: Found equivalence set: values%8#0, point.y#0
debug: selected point.y#0 from equivalence set
debug: Found equivalence set: values%9#0, point.other.a#0
debug: selected point.other.a#0 from equivalence set
debug: Found equivalence set: values%10#0, point.other.b#0
debug: selected point.other.b#0 from equivalence set
debug: Found equivalence set: values%11#0, point.other.c#0
debug: selected point.other.c#0 from equivalence set
debug: Found equivalence set: values%12#0, point.other.d#0
debug: selected point.other.d#0 from equivalence set
debug: Found equivalence set: values%13#0, point.other.e#0
debug: selected point.other.e#0 from equivalence set
debug: Found equivalence set: tmp%4#0, dx#0
debug: selected dx#0 from equivalence set
debug: Found equivalence set: tmp%7#0, dx#1
debug: selected dx#1 from equivalence set
debug: Found equivalence set: tmp%9#0, dy#0
debug: selected dy#0 from equivalence set
debug: Found equivalence set: tmp%10#0, dy#1
debug: selected dy#1 from equivalence set
debug: Found equivalence set: tmp%15#0, length#4
debug: selected length#4 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@9 with block@8 in block@1
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__algopy_default_create in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:138:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_arc4_bool in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:112:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.sum_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:94:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_arc4_conversion in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:75:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_bool_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:67:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:57:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
array/static_size.py:41:6 debug: inlining call to test_cases.array.static_size.StaticSizeContract.test_array in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: reinterpret_Encoded(uint64)%0#0, x1#0
debug: selected x1#0 from equivalence set
debug: Found equivalence set: tmp%7#0, y1#0
debug: selected y1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64)%2#0, x2#0
debug: selected x2#0 from equivalence set
debug: Found equivalence set: tmp%8#0, y2#0
debug: selected y2#0 from equivalence set
debug: Found equivalence set: slot%0#6, path#0
debug: selected path#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%0#1
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%1#0
debug: selected tuple_item%1#0 from equivalence set
debug: Found equivalence set: tmp%26#2, tmp%9#0
debug: selected tmp%26#2 from equivalence set
debug: Found equivalence set: tmp%16#0, some_more.0#0
debug: selected some_more.0#0 from equivalence set
debug: Found equivalence set: tmp%17#0, some_more.1#0
debug: selected some_more.1#0 from equivalence set
debug: Found equivalence set: slot%0#5, arr#5
debug: selected arr#5 from equivalence set
debug: Found equivalence set: array_item%0#4, last#0
debug: selected last#0 from equivalence set
debug: Found equivalence set: converted_array%0#1, result#0, tmp%18#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((uint64,uint64),(uint64,uint64))%1#0, some_more#0
debug: selected some_more#0 from equivalence set
debug: Found equivalence set: slot%0#4, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: converted_array%0#0, tmp%24#0
debug: selected converted_array%0#0 from equivalence set
debug: Found equivalence set: tmp%30#0, length#1
debug: selected length#1 from equivalence set
debug: Found equivalence set: slot%0#3, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: slot%1#1, arr2#1
debug: selected arr2#1 from equivalence set
debug: Found equivalence set: array_length%0#3, reverse_index_internal%0#3
debug: selected array_length%0#3 from equivalence set
debug: Found equivalence set: values%0#1, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: tmp%11#2, count#6
debug: selected count#6 from equivalence set
debug: Found equivalence set: count#5, tmp%31#0
debug: selected count#5 from equivalence set
debug: Found equivalence set: tmp%38#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: slot%0#2, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: array_length%0#2, reverse_index_internal%0#2
debug: selected array_length%0#2 from equivalence set
debug: Found equivalence set: array_item%0#2, val#0, reinterpret_biguint%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%8#2, count#2
debug: selected count#2 from equivalence set
debug: Found equivalence set: encoded_array%1#1, arc4_arr#1
debug: selected arc4_arr#1 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arc4_arr#2, tmp%39#0
debug: selected arc4_arr#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%0#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: slot%0#1, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: array_item%0#1, item#0
debug: selected item#0 from equivalence set
debug: Found equivalence set: tmp%1#2, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: total#1, tmp%45#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, dyn_arr#0
debug: selected dyn_arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, dyn_arr#1
debug: selected dyn_arr#1 from equivalence set
debug: Found equivalence set: slot%1#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%2#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: bit_packed_source%0#0, tmp%52#0
debug: selected bit_packed_source%0#0 from equivalence set
debug: Copy propagation made 51 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%12#0 NoOp) to (! tmp%12#0)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (== tmp%26#0 NoOp) to (! tmp%26#0)
debug: Simplified (== tmp%0#4 0u) to (! tmp%0#4)
debug: Simplified (== tmp%3#3 0u) to (! tmp%3#3)
debug: Simplified (== tmp%34#0 NoOp) to (! tmp%34#0)
debug: Simplified (== tmp%0#3 0u) to (! tmp%0#3)
debug: Simplified (== tmp%41#0 NoOp) to (! tmp%41#0)
debug: Simplified (== tmp%48#0 NoOp) to (! tmp%48#0)
debug: Simplified (== tmp%55#0 0u) to (! tmp%55#0)
debug: Simplified (replace3 concat%1#1 0u as_u16_bytes%0#0) to ((replace2 0) concat%1#1 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@11 from switch tmp%54#0 {0u => block@12, * => block@13} to goto_nth [block@12][tmp%54#0] else goto block@13
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@11 from goto_nth [block@12][tmp%54#0] else goto block@13 to goto tmp%54#0 ? block@13 : block@12
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@58 with block@2 in block@59
debug: Merged linear block@58 into block@2
debug: Replaced predecessor block@61 with block@60 in block@59
debug: Merged linear block@61 into block@60
debug: Merged linear block@63 into block@62
debug: Replaced predecessor block@56 with block@3 in block@57
debug: Merged linear block@56 into block@3
debug: Merged linear block@57 into block@3
debug: Replaced predecessor block@54 with block@4 in block@55
debug: Merged linear block@54 into block@4
debug: Merged linear block@55 into block@4
debug: Replaced predecessor block@42 with block@5 in block@43
debug: Merged linear block@42 into block@5
debug: Replaced predecessor block@45 with block@44 in block@43
debug: Merged linear block@45 into block@44
debug: Replaced predecessor block@51 with block@50 in block@47
debug: Merged linear block@51 into block@50
debug: Merged linear block@53 into block@52
debug: Replaced predecessor block@30 with block@6 in block@31
debug: Merged linear block@30 into block@6
debug: Replaced predecessor block@33 with block@32 in block@31
debug: Merged linear block@33 into block@32
debug: Replaced predecessor block@39 with block@38 in block@35
debug: Merged linear block@39 into block@38
debug: Merged linear block@41 into block@40
debug: Replaced predecessor block@24 with block@7 in block@25
debug: Merged linear block@24 into block@7
debug: Replaced predecessor block@27 with block@26 in block@25
debug: Merged linear block@27 into block@26
debug: Merged linear block@29 into block@28
debug: Replaced predecessor block@18 with block@8 in block@19
debug: Merged linear block@18 into block@8
debug: Replaced predecessor block@21 with block@20 in block@19
debug: Merged linear block@21 into block@20
debug: Merged linear block@23 into block@22
debug: Replaced predecessor block@10 with block@9 in block@15
debug: Merged linear block@10 into block@9
debug: Replaced predecessor block@16 with block@12 in block@17
debug: Merged linear block@16 into block@12
debug: Merged linear block@17 into block@12
debug: Replaced predecessor block@14 with block@13 in block@15
debug: Merged linear block@14 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@9
debug: Removed empty block: block@13
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%20#2: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=2),)
debug: Replacing redundant declaration let tmp%21#2: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=2),)
debug: Replacing redundant declaration let i#8: uint64 = (+ i#7 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=2),)
debug: Found equivalence set: tmp%15#2, tmp%20#2, tmp%21#2, i#8
debug: selected i#8 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:55:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.test_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: tuple_item%0#0, reinterpret_biguint%0#0
debug: selected tuple_item%0#0 from equivalence set
debug: Found equivalence set: tuple_item%1#0, reinterpret_biguint%1#0
debug: selected tuple_item%1#0 from equivalence set
debug: Found equivalence set: length#3, tmp%26#0
debug: selected length#3 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@5 with block@4 in block@6
debug: Merged linear block@5 into block@4
debug: Merged linear block@15 into block@14
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%20#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%21#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=0),)
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/static_size.py:50:38-43, ir_type=uint64, name='tmp%15', version=0),)
debug: Found equivalence set: tmp%15#0, tmp%20#0, tmp%21#0, i#2
debug: selected i#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_item%0#0, last#0
debug: selected last#0 from equivalence set
debug: Found equivalence set: converted_array%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: slot%1#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%11#0, count#2
debug: selected count#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%3#0 0u) to (! tmp%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, val#0, reinterpret_biguint%0#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: tmp%8#0, count#2
debug: selected count#2 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arc4_arr#0
debug: selected arc4_arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arc4_arr#1
debug: selected arc4_arr#1 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%1#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, item#0
debug: selected item#0 from equivalence set
debug: Found equivalence set: tmp%1#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/static_size.py:128:15 debug: replacing app_global read with cached value for key: "count"
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, dyn_arr#0
debug: selected dyn_arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, dyn_arr#1
debug: selected dyn_arr#1 from equivalence set
debug: Found equivalence set: slot%1#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%2#0, b#0
debug: selected b#0 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%51#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@35
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__init__
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_bool_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_conversion
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.sum_array
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.test_arc4_bool
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__ in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%51#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@37
debug: Replaced predecessor block@3 with block@2 in block@4
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:55:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: length#5, tmp%26#2
debug: selected length#5 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%15#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%29#0
debug: Removing unused variable tmp%37#0
debug: Removing unused variable tmp%44#0
debug: Removing unused variable tmp%51#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@63 with block@62 in block@64
debug: Merged linear block@63 into block@62
debug: Merged linear block@73 into block@72
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, maybe_value%1#0
debug: selected tmp%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable maybe_exists%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: marking single-use function test_cases.array.static_size.path_length for inlining
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
array/static_size.py:55:16 debug: inlining call to test_cases.array.static_size.path_length in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: path#0, path#1
debug: selected path#0 from equivalence set
debug: Found equivalence set: length#5, tmp%26#2
debug: selected length#5 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@41 with block@8 in block@42
debug: Merged linear block@41 into block@8
debug: Replaced predecessor block@51 with block@50 in block@40
debug: Merged linear block@51 into block@50
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.path_length
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.static_size.path_length
debug: Unused subroutines removed
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.static_size.StaticSizeContract
debug: lowering array IR nodes in clear program of test_cases.array.static_size.StaticSizeContract
debug: optimizing approval program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: tmp%2#5, aggregate%as_Encoded(uint8[32])%0#0
debug: selected tmp%2#5 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%0#0, aggregate%as_Encoded(uint512)%0#0
debug: selected aggregate%arc4_encoded%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%6#0, aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%0#0
debug: selected aggregate%head%6#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%0#0
debug: selected aggregate%head%7#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%as_Encoded(uint64)%5#0
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: tmp%7#5, aggregate%as_Encoded(uint8[32])%1#0
debug: selected tmp%7#5 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%1#0, aggregate%as_Encoded(uint512)%1#0
debug: selected aggregate%arc4_encoded%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%15#0, aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%1#0
debug: selected aggregate%head%15#0 from equivalence set
debug: Found equivalence set: aggregate%head%16#0, aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%1#0
debug: selected aggregate%head%16#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%as_Encoded(uint64)%6#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%as_Encoded(uint64)%7#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, aggregate%as_Encoded(uint64)%8#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Found equivalence set: tmp%12#2, aggregate%as_Encoded(uint8[32])%2#0
debug: selected tmp%12#2 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%2#0, aggregate%as_Encoded(uint512)%2#0
debug: selected aggregate%arc4_encoded%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%24#0, aggregate%as_Encoded(uint64,uint64,uint8[32],(uint64,uint64),uint512)%2#0
debug: selected aggregate%head%24#0 from equivalence set
debug: Found equivalence set: aggregate%head%25#0, aggregate%as_Encoded(uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))%2#0
debug: selected aggregate%head%25#0 from equivalence set
debug: Found equivalence set: aggregate%head%26#0, aggregate%as_Encoded((uint64,uint64,(uint64,uint64,uint8[32],(uint64,uint64),uint512))[])%0#0, encoded_array%0#6
debug: selected aggregate%head%26#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#5
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%extract%0#0, values%0#2
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, values%1#1
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%item0%0#0, values%2#1
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, values%3#0
debug: selected aggregate%item1%1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%5#0, values%4#0
debug: selected aggregate%extract%5#0 from equivalence set
debug: Found equivalence set: aggregate%extract%6#0, values%5#0
debug: selected aggregate%extract%6#0 from equivalence set
debug: Found equivalence set: aggregate%extract%7#0, values%6#0
debug: selected aggregate%extract%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#2
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%extract%8#0, values%7#0
debug: selected aggregate%extract%8#0 from equivalence set
debug: Found equivalence set: aggregate%item1%2#0, values%8#0
debug: selected aggregate%item1%2#0 from equivalence set
debug: Found equivalence set: aggregate%item0%1#0, values%9#0
debug: selected aggregate%item0%1#0 from equivalence set
debug: Found equivalence set: aggregate%item1%3#0, values%10#0
debug: selected aggregate%item1%3#0 from equivalence set
debug: Found equivalence set: aggregate%extract%13#0, values%11#0
debug: selected aggregate%extract%13#0 from equivalence set
debug: Found equivalence set: aggregate%extract%14#0, values%12#0
debug: selected aggregate%extract%14#0 from equivalence set
debug: Found equivalence set: aggregate%extract%15#0, values%13#0
debug: selected aggregate%extract%15#0 from equivalence set
debug: Found equivalence set: aggregate%extract%16#0, tuple_item%0#0
debug: selected aggregate%extract%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#1
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%extract%17#0, values%14#0
debug: selected aggregate%extract%17#0 from equivalence set
debug: Found equivalence set: aggregate%item1%4#0, values%15#0
debug: selected aggregate%item1%4#0 from equivalence set
debug: Found equivalence set: aggregate%item0%2#0, values%16#0
debug: selected aggregate%item0%2#0 from equivalence set
debug: Found equivalence set: aggregate%item1%5#0, values%17#0
debug: selected aggregate%item1%5#0 from equivalence set
debug: Found equivalence set: aggregate%extract%22#0, values%18#0
debug: selected aggregate%extract%22#0 from equivalence set
debug: Found equivalence set: aggregate%extract%23#0, values%19#0
debug: selected aggregate%extract%23#0 from equivalence set
debug: Found equivalence set: aggregate%extract%24#0, values%20#0
debug: selected aggregate%extract%24#0 from equivalence set
debug: Found equivalence set: aggregate%extract%25#0, tuple_item%1#0
debug: selected aggregate%extract%25#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%0#0, tmp%25#2
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%0#6
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%extract%26#0, last_point.x#0
debug: selected last_point.x#0 from equivalence set
debug: Found equivalence set: aggregate%item1%6#0, last_point.y#0
debug: selected last_point.y#0 from equivalence set
debug: Found equivalence set: aggregate%item0%3#0, last_point.other.a#0
debug: selected last_point.other.a#0 from equivalence set
debug: Found equivalence set: aggregate%item1%7#0, last_point.other.b#0
debug: selected last_point.other.b#0 from equivalence set
debug: Found equivalence set: aggregate%extract%31#0, last_point.other.c#0
debug: selected last_point.other.c#0 from equivalence set
debug: Found equivalence set: aggregate%extract%32#0, last_point.other.d#0
debug: selected last_point.other.d#0 from equivalence set
debug: Found equivalence set: aggregate%extract%33#0, last_point.other.e#0
debug: selected last_point.other.e#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%1#0, tmp%0#10
debug: selected aggregate%array_len%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%1#3
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%extract%34#0, point.x#0
debug: selected point.x#0 from equivalence set
debug: Found equivalence set: aggregate%item1%8#0, point.y#0
debug: selected point.y#0 from equivalence set
debug: Found equivalence set: aggregate%item0%4#0, point.other.a#0
debug: selected point.other.a#0 from equivalence set
debug: Found equivalence set: aggregate%item1%9#0, point.other.b#0
debug: selected point.other.b#0 from equivalence set
debug: Found equivalence set: aggregate%extract%39#0, point.other.c#0
debug: selected point.other.c#0 from equivalence set
debug: Found equivalence set: aggregate%extract%40#0, point.other.d#0
debug: selected point.other.d#0 from equivalence set
debug: Found equivalence set: aggregate%extract%41#0, point.other.e#0
debug: selected point.other.e#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%as_Encoded(uint64)%9#0, tmp%10#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%extract%42#0, some_more.0#0
debug: selected some_more.0#0 from equivalence set
debug: Found equivalence set: aggregate%extract%43#0, some_more.1#0
debug: selected some_more.1#0 from equivalence set
debug: Found equivalence set: aggregate%head%28#0, aggregate%as_Encoded((uint64,uint64)[])%1#0, tmp%0#8
debug: selected aggregate%head%28#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%2#0, tmp%1#5
debug: selected aggregate%array_len%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, last#0
debug: selected last#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%3#0, tmp%4#4
debug: selected aggregate%array_len%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%5#4
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%6#0, array_item%1#1
debug: selected aggregate%encoded_element%6#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%4#0, tmp%0#7
debug: selected aggregate%array_len%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%5#0, tmp%0#6
debug: selected aggregate%array_len%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%29#0, aggregate%as_Encoded(bool8[])%1#0, tmp%5#3
debug: selected aggregate%head%29#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%6#0, tmp%6#3
debug: selected aggregate%array_len%6#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%7#0, tmp%8#3
debug: selected aggregate%array_len%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%8#0, array_length%0#3
debug: selected aggregate%array_len%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%7#0, array_item%0#3
debug: selected aggregate%encoded_element%7#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%0#0, val#1
debug: selected val#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%as_Encoded(uint64)%10#0, tmp%32#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%9#0, tmp%0#5
debug: selected aggregate%array_len%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%as_Encoded(uint64)%11#0, tmp%3#2
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%head%30#0, aggregate%as_Encoded(uint64[])%1#0, tmp%4#2
debug: selected aggregate%head%30#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%10#0, tmp%5#2
debug: selected aggregate%array_len%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%11#0, array_length%0#2
debug: selected aggregate%array_len%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%8#0, val#0
debug: selected val#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, arc4_arr#1
debug: selected arc4_arr#1 from equivalence set
debug: Found equivalence set: aggregate%array_len%12#0, array_length%0#1
debug: selected aggregate%array_len%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%9#0, item#0
debug: selected item#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%12#0, aggregate%as_Encoded(uint64)%12#0, tmp%46#0
debug: selected aggregate%val_as_bytes%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%as_Encoded(bool8)%1#0, tmp%3#1
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%31#0, aggregate%as_Encoded(bool8[])%3#0, tmp%4#1
debug: selected aggregate%head%31#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, aggregate%as_Encoded(bool8)%2#0, tmp%8#1
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%32#0, aggregate%as_Encoded(bool8[])%4#0, tmp%9#1
debug: selected aggregate%head%32#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%1#0, aggregate%as_Encoded(len+bool1[])%0#0, dyn_arr#0
debug: selected dyn_arr#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%13#0, tmp%10#1
debug: selected aggregate%array_len%13#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, tmp%11#1
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%1#0, array_item%0#0
debug: selected aggregate%get_bit%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%3#0, values%0#0
debug: selected aggregate%encoded_bool%3#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%2#0, tmp%15#1
debug: selected aggregate%get_bit%2#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%3#0, array_item%1#0
debug: selected aggregate%get_bit%3#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%4#0, values%1#0
debug: selected aggregate%encoded_bool%4#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%4#0, tmp%20#1
debug: selected aggregate%get_bit%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, array_length%0#0
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%5#0, array_item%2#0
debug: selected aggregate%get_bit%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%5#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: aggregate%head%33#0, aggregate%as_Encoded(bool8[])%5#0, tmp%25#1
debug: selected aggregate%head%33#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%14#0, tmp%26#1
debug: selected aggregate%array_len%14#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%10#0, array_item%3#0
debug: selected aggregate%encoded_element%10#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%6#0, tmp%28#1
debug: selected aggregate%get_bit%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%11#0, array_item%4#0
debug: selected aggregate%encoded_element%11#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%7#0, tmp%33#1
debug: selected aggregate%get_bit%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, array_item%5#0
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%8#0, tmp%38#1
debug: selected aggregate%get_bit%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%6#0
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%9#0, tmp%43#1
debug: selected aggregate%get_bit%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%15#0, tmp%48#1
debug: selected aggregate%array_len%15#0 from equivalence set
debug: Copy propagation made 114 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%item1%0#0
debug: Removing unused variable aggregate%item0%0#0
debug: Removing unused variable aggregate%extract%5#0
debug: Removing unused variable aggregate%extract%6#0
debug: Removing unused variable aggregate%extract%7#0
debug: Removing unused variable aggregate%extract%8#0
debug: Removing unused variable aggregate%item1%2#0
debug: Removing unused variable aggregate%item0%1#0
debug: Removing unused variable aggregate%item1%3#0
debug: Removing unused variable aggregate%extract%13#0
debug: Removing unused variable aggregate%extract%15#0
debug: Removing unused variable aggregate%extract%17#0
debug: Removing unused variable aggregate%item1%4#0
debug: Removing unused variable aggregate%item0%2#0
debug: Removing unused variable aggregate%item1%5#0
debug: Removing unused variable aggregate%extract%22#0
debug: Removing unused variable aggregate%extract%24#0
debug: Removing unused variable last_point.other.a#0
debug: Removing unused variable last_point.other.b#0
debug: Removing unused variable last_point.other.c#0
debug: Removing unused variable last_point.other.d#0
debug: Removing unused variable last_point.other.e#0
debug: Removing unused variable point.other.a#0
debug: Removing unused variable point.other.b#0
debug: Removing unused variable point.other.c#0
debug: Removing unused variable point.other.d#0
debug: Removing unused variable point.other.e#0
debug: Removing unused variable aggregate%as_Encoded((uint64,uint64)[])%0#0
debug: Removing unused variable encoded_array%0#5
debug: Removing unused variable aggregate%as_Encoded((uint64,uint64)[])%2#0
debug: Removing unused variable encoded_array%0#4
debug: Removing unused variable aggregate%as_Encoded(bool8[])%0#0
debug: Removing unused variable encoded_array%0#3
debug: Removing unused variable aggregate%as_Encoded(uint64[])%0#0
debug: Removing unused variable encoded_array%0#2
debug: Removing unused variable aggregate%as_Encoded(uint64[])%2#0
debug: Removing unused variable encoded_array%0#1
debug: Removing unused variable aggregate%as_Encoded(bool8[])%2#0
debug: Removing unused variable encoded_array%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%extract%3#0
debug: Removing unused variable aggregate%extract%9#0
debug: Removing unused variable aggregate%extract%11#0
debug: Removing unused variable aggregate%extract%12#0
debug: Removing unused variable aggregate%extract%18#0
debug: Removing unused variable aggregate%extract%20#0
debug: Removing unused variable aggregate%extract%21#0
debug: Removing unused variable aggregate%extract%29#0
debug: Removing unused variable aggregate%extract%30#0
debug: Removing unused variable aggregate%extract%37#0
debug: Removing unused variable aggregate%extract%38#0
debug: Removing unused variable aggregate%extract%28#0
debug: Removing unused variable aggregate%extract%36#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x 0x0000000000000000) to 0x0000000000000000
debug: Simplified (concat 0x0000000000000000 aggregate%val_as_bytes%0#0) to 0x00000000000000000000000000000000
debug: Simplified (concat 0x aggregate%val_as_bytes%1#0) to aggregate%val_as_bytes%1#0
debug: Simplified (concat 0x aggregate%head%7#0) to aggregate%head%7#0
debug: Simplified (concat 0x x1#0) to x1#0
debug: Simplified (concat 0x aggregate%val_as_bytes%4#0) to aggregate%val_as_bytes%4#0
debug: Simplified (concat 0x x2#0) to x2#0
debug: Simplified (concat 0x aggregate%val_as_bytes%7#0) to aggregate%val_as_bytes%7#0
debug: Simplified (btoi aggregate%extract%4#0) to (extract_uint64 aggregate%extract%2#0 8u)
debug: Simplified (* 0u 144u) to 0u
debug: Simplified (btoi aggregate%extract%27#0) to (extract_uint64 aggregate%encoded_element%3#0 8u)
debug: Simplified (btoi aggregate%extract%35#0) to (extract_uint64 aggregate%encoded_element%4#0 8u)
debug: Simplified (btoi last_point.x#0) to (extract_uint64 aggregate%encoded_element%3#0 0u)
debug: Simplified (btoi point.x#0) to (extract_uint64 aggregate%encoded_element%4#0 0u)
debug: Simplified (btoi point.x#0) to (extract_uint64 aggregate%encoded_element%4#0 0u)
debug: Simplified (btoi last_point.x#0) to (extract_uint64 aggregate%encoded_element%3#0 0u)
debug: Simplified (concat 0x some_more.0#0) to some_more.0#0
debug: Simplified (/ aggregate%bytes_len%5#0 1u) to aggregate%bytes_len%5#0
debug: Simplified (concat 0x aggregate%encoded_bool%0#0) to aggregate%encoded_bool%0#0
debug: Simplified (/ aggregate%bytes_len%6#0 1u) to aggregate%bytes_len%6#0
debug: Simplified (/ aggregate%bytes_len%7#0 1u) to aggregate%bytes_len%7#0
debug: Simplified (/ aggregate%bytes_len%8#0 1u) to aggregate%bytes_len%8#0
debug: Simplified (* item_index_internal%0#10 1u) to item_index_internal%0#10
debug: Simplified (concat 0x aggregate%val_as_bytes%11#0) to aggregate%val_as_bytes%11#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (btoi item#0) to (extract_uint64 slot_contents%1#1 aggregate%bytes_offset%9#0)
debug: Simplified (concat 0x aggregate%encoded_bool%1#0) to aggregate%encoded_bool%1#0
debug: Simplified (concat 0x aggregate%encoded_bool%2#0) to aggregate%encoded_bool%2#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0000
debug: Simplified (/ aggregate%bytes_len%13#0 1u) to aggregate%bytes_len%13#0
debug: Simplified (+ 0u 16u) to 16u
debug: Simplified (+ 1u 16u) to 17u
debug: Simplified (concat 0x b#0) to b#0
debug: Simplified (/ aggregate%bytes_len%14#0 1u) to aggregate%bytes_len%14#0
debug: Simplified (* 0u 1u) to 0u
debug: Simplified (* 1u 1u) to 1u
debug: Simplified (* 2u 1u) to 2u
debug: Simplified (* 3u 1u) to 3u
debug: Simplified (/ aggregate%bytes_len%15#0 1u) to aggregate%bytes_len%15#0
debug: Simplified (extract3 aggregate%encoded_element%0#0 16u 128u) to ((extract 16 128) aggregate%encoded_element%0#0)
debug: Simplified (extract3 aggregate%extract%2#0 8u 8u) to ((extract 8 8) aggregate%extract%2#0)
debug: Simplified (extract3 aggregate%encoded_element%1#0 16u 128u) to ((extract 16 128) aggregate%encoded_element%1#0)
debug: Simplified (extract3 aggregate%extract%10#0 48u 16u) to ((extract 48 16) aggregate%extract%10#0)
debug: Simplified (extract3 aggregate%extract%14#0 0u 8u) to ((extract 0 8) aggregate%extract%14#0)
debug: Simplified (extract3 aggregate%encoded_element%2#0 16u 128u) to ((extract 16 128) aggregate%encoded_element%2#0)
debug: Simplified (extract3 aggregate%extract%19#0 48u 16u) to ((extract 48 16) aggregate%extract%19#0)
debug: Simplified (extract3 aggregate%extract%23#0 8u 8u) to ((extract 8 8) aggregate%extract%23#0)
debug: Simplified (extract3 slot_contents%0#7 0u 144u) // on error: index access is out of bounds to ((extract 0 144) slot_contents%0#7) // on error: index access is out of bounds
debug: Simplified (extract3 aggregate%encoded_element%3#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%3#0)
debug: Simplified (extract3 aggregate%encoded_element%3#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%3#0)
debug: Simplified (extract3 aggregate%encoded_element%4#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%4#0)
debug: Simplified (extract3 aggregate%encoded_element%4#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%4#0)
debug: Simplified (extract3 reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 0u 16u) to ((extract 0 16) reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0)
debug: Simplified (extract3 reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 16u 16u) to ((extract 16 16) reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0)
debug: Simplified (extract3 slot_contents%5#0 0u 1u) // on error: index access is out of bounds to ((extract 0 1) slot_contents%5#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%6#0 1u 1u) // on error: index access is out of bounds to ((extract 1 1) slot_contents%6#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%7#0 2u 1u) // on error: index access is out of bounds to ((extract 2 1) slot_contents%7#0) // on error: index access is out of bounds
debug: Simplified (extract3 slot_contents%8#0 3u 1u) // on error: index access is out of bounds to ((extract 3 1) slot_contents%8#0) // on error: index access is out of bounds
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%bzero%1#0: bytes = (bzero 64u) with copy of existing registers (Register(source_location=array/static_size.py:44-48:15-9, ir_type=bytes, name='aggregate%bzero%0', version=0),)
debug: Replacing redundant declaration let aggregate%bzero%2#0: bytes = (bzero 64u) with copy of existing registers (Register(source_location=array/static_size.py:44-48:15-9, ir_type=bytes, name='aggregate%bzero%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%1#0: uint64 = (* i#7 144u) with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_offset%2#0: uint64 = (* i#7 144u) with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%2#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:146:15-29, ir_type=uint64, name='aggregate%array_length%1', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%3#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:146:15-29, ir_type=uint64, name='aggregate%array_length%1', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%4#0: uint64 = (extract_uint16 dyn_arr#1 0u) with copy of existing registers (Register(source_location=array/static_size.py:146:15-29, ir_type=uint64, name='aggregate%array_length%1', version=0),)
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%head%2#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%head%8#0
debug: selected aggregate%head%7#0 from equivalence set
debug: Found equivalence set: x1#0, aggregate%head%9#0
debug: selected x1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%head%11#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%bzero%0#0, aggregate%bzero%1#0, aggregate%bzero%2#0
debug: selected aggregate%bzero%0#0 from equivalence set
debug: Found equivalence set: x2#0, aggregate%head%18#0
debug: selected x2#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%head%20#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_offset%0#0, aggregate%bytes_offset%1#0, aggregate%bytes_offset%2#0
debug: selected aggregate%bytes_offset%0#0 from equivalence set
debug: Found equivalence set: some_more.0#0, aggregate%head%27#0
debug: selected some_more.0#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%5#0, aggregate%array_len%5#0
debug: selected aggregate%bytes_len%5#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%head%29#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%6#0, aggregate%array_len%6#0
debug: selected aggregate%bytes_len%6#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%7#0, aggregate%array_len%7#0
debug: selected aggregate%bytes_len%7#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%8#0, aggregate%array_len%8#0
debug: selected aggregate%bytes_len%8#0 from equivalence set
debug: Found equivalence set: item_index_internal%0#10, aggregate%bytes_offset%7#0
debug: selected item_index_internal%0#10 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%head%30#0
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, aggregate%head%31#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, aggregate%head%32#0
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%13#0, aggregate%array_len%13#0
debug: selected aggregate%bytes_len%13#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, aggregate%array_length%2#0, aggregate%array_length%3#0, aggregate%array_length%4#0
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: b#0, aggregate%head%33#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%14#0, aggregate%array_len%14#0
debug: selected aggregate%bytes_len%14#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%15#0, aggregate%array_len%15#0
debug: selected aggregate%bytes_len%15#0 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/static_size.py:51:20 debug: replacing slot read with cached value for key: path#0
array/static_size.py:52:20 debug: replacing slot read with cached value for key: path#0
array/static_size.py:167:18 debug: replacing slot read with cached value for key: path#0
array/static_size.py:169:32 debug: replacing slot read with cached value for key: path#0
array/static_size.py:60:9 debug: replacing slot read with cached value for key: arr#5
array/static_size.py:61:20 debug: replacing slot read with cached value for key: arr#5
array/static_size.py:61:16 debug: replacing slot read with cached value for key: arr#5
array/static_size.py:63:18 debug: replacing slot read with cached value for key: arr#5
array/static_size.py:59:15 debug: removing unobserved slot write to key: arr#5
array/static_size.py:72:9 debug: replacing slot read with cached value for key: arr#4
array/static_size.py:73:16 debug: replacing slot read with cached value for key: arr#4
array/static_size.py:71:15 debug: removing unobserved slot write to key: arr#4
array/static_size.py:78:16 debug: replacing slot read with cached value for key: arr#3
array/static_size.py:84:16 debug: replacing slot read with cached value for key: arr#3
array/static_size.py:85:9 debug: replacing slot read with cached value for key: arr2#1
array/static_size.py:86:16 debug: replacing slot read with cached value for key: arr2#1
array/static_size.py:97:16 debug: replacing slot read with cached value for key: arr#2
array/static_size.py:103 debug: replacing slot read with cached value for key: arr#2
array/static_size.py:115:9 debug: replacing slot read with cached value for key: arr#1
array/static_size.py:118 debug: replacing slot read with cached value for key: arr#1
array/static_size.py:114:15 debug: removing unobserved slot write to key: arr#1
array/static_size.py:141:9 debug: replacing slot read with cached value for key: arr#0
array/static_size.py:142:9 debug: replacing slot read with cached value for key: arr#0
array/static_size.py:145:9 debug: replacing slot read with cached value for key: arr#0
array/static_size.py:140:15 debug: removing unobserved slot write to key: arr#0
array/static_size.py:141:9 debug: removing unobserved slot write to key: arr#0
array/static_size.py:157:16 debug: replacing slot read with cached value for key: arr2#0
array/static_size.py:158:16 debug: replacing slot read with cached value for key: arr2#0
array/static_size.py:159:16 debug: replacing slot read with cached value for key: arr2#0
array/static_size.py:160:16 debug: replacing slot read with cached value for key: arr2#0
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0, tmp%1#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0, tmp%3#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64,uint64)%0#0, tmp%4#0
debug: selected aggregate%head%1#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/static_size.py:136:70 debug: replacing app_global read with cached value for key: "count"
array/static_size.py:136:83 debug: replacing app_global read with cached value for key: "count"
debug: Begin optimization pass 2/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot_contents%0#6, slot_contents%1#6, slot_contents%2#4
debug: selected slot_contents%0#6 from equivalence set
debug: Found equivalence set: slot_contents%3#2, slot_contents%0#7, aggregate%slot_contents%0#0
debug: selected slot_contents%3#2 from equivalence set
debug: Found equivalence set: concat%0#5, aggregate%slot_contents%1#0, slot_contents%1#5, slot_contents%2#3
debug: selected concat%0#5 from equivalence set
debug: Found equivalence set: concat%0#4, slot_contents%1#4
debug: selected concat%0#4 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%3#0, slot_contents%1#3, slot_contents%3#1
debug: selected aggregate%slot_contents%3#0 from equivalence set
debug: Found equivalence set: concat%1#2, aggregate%slot_contents%4#0
debug: selected concat%1#2 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%7#0, aggregate%slot_contents%8#0
debug: selected aggregate%slot_contents%7#0 from equivalence set
debug: Found equivalence set: concat%0#1, aggregate%slot_contents%9#0
debug: selected concat%0#1 from equivalence set
debug: Found equivalence set: concat%0#0, slot_contents%1#0
debug: selected concat%0#0 from equivalence set
debug: Found equivalence set: concat%1#0, slot_contents%2#0
debug: selected concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%slot_contents%10#0, slot_contents%5#0, slot_contents%6#0, slot_contents%7#0, slot_contents%8#0
debug: selected aggregate%slot_contents%10#0 from equivalence set
debug: Copy propagation made 22 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%head%0#0
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable aggregate%head%1#0
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%extract%27#0
debug: Removing unused variable aggregate%extract%35#0
debug: Removing unused variable slot_contents%0#5
debug: Removing unused variable slot_contents%0#4
debug: Removing unused variable aggregate%slot_contents%2#0
debug: Removing unused variable aggregate%slot_contents%6#0
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable arc4_arr#1
debug: Removing unused variable slot_contents%0#1
debug: Removing unused variable item#0
debug: Removing unused variable slot_contents%0#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable dyn_arr#0
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%add%0#0
debug: Removing unused variable aggregate%add%1#0
debug: Removing unused variable aggregate%bytes_offset%10#0
debug: Removing unused variable aggregate%bytes_offset%11#0
debug: Removing unused variable aggregate%bytes_offset%12#0
debug: Removing unused variable aggregate%bytes_offset%13#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%head%28#0) // on error: max array length exceeded to aggregate%head%28#0
debug: Simplified (concat 0x some_more#0) // on error: max array length exceeded to some_more#0
debug: Simplified (len 0x) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (len 0x) to 0u
debug: Simplified (/ 0u 8u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x extract_to_end%0#0) // on error: max array length exceeded to extract_to_end%0#0
debug: Simplified (concat 0x aggregate%encoded_bool%1#0) // on error: max array length exceeded to aggregate%encoded_bool%1#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%encoded_element%1#0: bytes = (extract3 slot_contents%0#6 aggregate%bytes_offset%0#0 144u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=bytes, name='aggregate%encoded_element%0', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_element%2#0: bytes = (extract3 slot_contents%0#6 aggregate%bytes_offset%0#0 144u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=bytes, name='aggregate%encoded_element%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%1#0: uint64 = (len slot_contents%3#2) with copy of existing registers (Register(source_location=array/static_size.py:54:52-65, ir_type=uint64, name='aggregate%bytes_len%0', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%3#0: uint64 = (len aggregate%head%28#0) with copy of existing registers (Register(source_location=array/static_size.py:61:19-21, ir_type=uint64, name='aggregate%bytes_len%2', version=0),)
debug: Replacing redundant declaration let aggregate%bytes_len%11#0: uint64 = (len aggregate%slot_contents%7#0) with copy of existing registers (Register(source_location=array/static_size.py:101:15-25, ir_type=uint64, name='aggregate%bytes_len%10', version=0),)
debug: Found equivalence set: aggregate%encoded_element%0#0, aggregate%encoded_element%1#0, aggregate%encoded_element%2#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%0#0, aggregate%bytes_len%1#0
debug: selected aggregate%bytes_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%28#0, concat%0#5
debug: selected aggregate%head%28#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%2#0, aggregate%bytes_len%3#0
debug: selected aggregate%bytes_len%2#0 from equivalence set
debug: Found equivalence set: some_more#0, concat%0#4
debug: selected some_more#0 from equivalence set
debug: Found equivalence set: aggregate%bytes_len%10#0, aggregate%bytes_len%11#0
debug: selected aggregate%bytes_len%10#0 from equivalence set
debug: Found equivalence set: extract_to_end%0#0, concat%0#1
debug: selected extract_to_end%0#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%1#0, concat%0#0
debug: selected aggregate%encoded_bool%1#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let aggregate%extract%10#0: bytes = ((extract 16 128) aggregate%encoded_element%0#0) with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=bytes, name='aggregate%extract%2', version=0),)
debug: Replacing redundant declaration let aggregate%extract%19#0: bytes = ((extract 16 128) aggregate%encoded_element%0#0) with copy of existing registers (Register(source_location=array/static_size.py:50:19-26, ir_type=bytes, name='aggregate%extract%2', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%1#0: uint64 = (/ aggregate%bytes_len%0#0 144u) with copy of existing registers (Register(source_location=array/static_size.py:54:52-65, ir_type=uint64, name='aggregate%array_len%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%3#0: uint64 = (/ aggregate%bytes_len%2#0 16u) with copy of existing registers (Register(source_location=array/static_size.py:61:19-21, ir_type=uint64, name='aggregate%array_len%2', version=0),)
debug: Replacing redundant declaration let aggregate%array_len%11#0: uint64 = (/ aggregate%bytes_len%10#0 8u) with copy of existing registers (Register(source_location=array/static_size.py:101:15-25, ir_type=uint64, name='aggregate%array_len%10', version=0),)
debug: Found equivalence set: aggregate%extract%2#0, aggregate%extract%10#0, aggregate%extract%19#0
debug: selected aggregate%extract%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%0#0, aggregate%array_len%1#0
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%2#0, aggregate%array_len%3#0
debug: selected aggregate%array_len%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%10#0, aggregate%array_len%11#0
debug: selected aggregate%array_len%10#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let aggregate%extract%23#0: bytes = ((extract 48 16) aggregate%extract%2#0) with copy of existing registers (Register(source_location=array/static_size.py:51:19-26, ir_type=bytes, name='aggregate%extract%14', version=0),)
debug: Found equivalence set: aggregate%extract%14#0, aggregate%extract%23#0
debug: selected aggregate%extract%14#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: maybe_value%0#0, maybe_value%1#0, maybe_value%2#0
debug: selected maybe_value%0#0 from equivalence set
debug: Found equivalence set: maybe_exists%0#0, maybe_exists%1#0, maybe_exists%2#0
debug: selected maybe_exists%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Removing redundant assert of maybe_exists%0#0
debug: Removing redundant assert of maybe_exists%0#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 3/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%bytes_len%5#0
debug: Removing unused variable tmp%1#4
debug: Removing unused variable aggregate%bytes_len%9#0
debug: Removing unused variable aggregate%array_len%9#0
debug: Removing unused variable tmp%1#3
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.xtra
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.static_size.StaticSizeContract.more
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.static_size.StaticSizeContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init, []
array/static_size.py:44:9 debug: eliminating local static slot assigned to path#0
array/static_size.py:59:9 debug: eliminating local static slot assigned to arr#5
array/static_size.py:71:9 debug: eliminating local static slot assigned to arr#4
array/static_size.py:77:9 debug: eliminating local static slot assigned to arr#3
array/static_size.py:84:9 debug: eliminating local static slot assigned to arr2#1
array/static_size.py:96:9 debug: eliminating local static slot assigned to arr#2
array/static_size.py:114:9 debug: eliminating local static slot assigned to arr#1
array/static_size.py:140:9 debug: eliminating local static slot assigned to arr#0
array/static_size.py:151:9 debug: eliminating local static slot assigned to arr2#0
debug: Removing unused variable path#0
debug: Removing unused variable arr#5
debug: Removing unused variable arr#4
debug: Removing unused variable arr#3
debug: Removing unused variable arr2#1
debug: Removing unused variable arr#2
debug: Removing unused variable arr#1
debug: Removing unused variable arr#0
debug: Removing unused variable arr2#0
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
array/static_size.py:123 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.xtra, []
array/static_size.py:134 debug: auto reserving slots in test_cases.array.static_size.StaticSizeContract.more, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.static_size.StaticSizeContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init using strategy 'root_operand'
debug: Coalescing tmp%0#0 with [tmp%0#10, tmp%0#1]
debug: Coalescing tmp%0#2 with [tmp%0#9, tmp%0#4]
debug: Coalescing tmp%3#0 with [tmp%3#6, tmp%3#3]
debug: Coalescing tmp%4#0 with [tmp%4#3]
debug: Coalescing tmp%5#0 with [tmp%5#5, tmp%5#6]
debug: Coalescing tmp%6#4 with [tmp%6#5, tmp%6#6]
debug: Coalescing tmp%11#3 with [tmp%11#4]
debug: Coalescing i#0 with [i#6, i#11, i#7, i#3, i#14, i#4, i#5, i#17, i#1, i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#4, continue_looping%0#5, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing slot_contents%0#2 with [slot_contents%0#6, slot_contents%0#3, slot_contents%0#2]
debug: Coalescing tmp%19#1 with [tmp%19#2]
debug: Coalescing tmp%22#0 with [tmp%22#2]
debug: Coalescing tmp%24#1 with [tmp%24#2]
debug: Coalescing slot_contents%3#0 with [slot_contents%3#2, slot_contents%3#0]
debug: Coalescing as_bytes%0#0 with [as_bytes%0#3, as_bytes%0#2, as_bytes%0#1]
debug: Coalescing as_u16_bytes%0#0 with [as_u16_bytes%0#3, as_u16_bytes%0#2, as_u16_bytes%0#1]
debug: Coalescing converted_array%0#0 with [converted_array%0#2, converted_array%0#0]
debug: Coalescing length#0 with [length#2, length#9, length#5, length#6, length#1]
debug: Coalescing point_idx#0 with [point_idx#5, point_idx#1, point_idx#2]
debug: Coalescing slot_contents%1#1 with [slot_contents%1#7, slot_contents%1#2, slot_contents%1#1]
debug: Coalescing tmp%2#2 with [tmp%2#6, tmp%2#4, tmp%2#3]
debug: Coalescing dx#0 with [dx#6, dx#1, dx#3]
debug: Coalescing dy#0 with [dy#5, dy#1, dy#2]
debug: Coalescing tmp%12#0 with [tmp%12#3]
debug: Coalescing tmp%13#1 with [tmp%13#3]
debug: Coalescing tmp%14#0 with [tmp%14#3]
debug: Coalescing test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 with [test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#1, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#2, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#3, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#4, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#5, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#6, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#7, test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#8]
debug: Coalescing tmp%7#1 with [tmp%7#4, tmp%7#3, tmp%7#2]
debug: Coalescing tmp%27#0 with [tmp%27#1]
debug: Coalescing concat%0#2 with [concat%0#3, concat%0#2]
debug: Coalescing slot_contents%2#1 with [slot_contents%2#2, slot_contents%2#1]
debug: Coalescing concat%1#0 with [concat%1#2, concat%1#1, concat%1#0]
debug: Coalescing count#0 with [count#4, count#10, count#5, count#6, count#7, count#16, count#1, count#2, count#3]
debug: Coalescing count#13 with [count#19]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#9, item_index_internal%0#14, item_index_internal%0#10, item_index_internal%0#11, item_index_internal%0#6, item_index_internal%0#17, item_index_internal%0#7, item_index_internal%0#8, item_index_internal%0#3, item_index_internal%0#20, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#23, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#1]
debug: Coalescing slot_contents%4#0 with [slot_contents%4#1]
debug: Coalescing extract_to_end%0#0 with [extract_to_end%0#1]
debug: Coalescing arc4_arr#0 with [arc4_arr#2]
debug: Coalescing tmp%42#0 with [tmp%42#1]
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing resulted in 291 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {point_idx#0=point_idx#0, length#0=length#0}
debug: pred: {point_idx#0=point_idx#0, length#0=length#0}
debug: ready: 
debug: to_do: point_idx#0, length#0
debug: * to_do length#0
debug: * to_do point_idx#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, count#0=count#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, count#0
debug: * to_do count#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy 'root_operand'
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.xtra
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.xtra using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.xtra
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.static_size.StaticSizeContract.more
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.static_size.StaticSizeContract.more using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.array.static_size.StaticSizeContract.more
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/StaticSizeContract.ir/StaticSizeContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/StaticSizeContract.ir/StaticSizeContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#0 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted main_after_if_else@2.ops[1]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_after_if_else@2.ops[3]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_abi_routing@4.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@4.ops[10]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_array_route@5.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_array_route@5.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_array_route@5.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_array_route@5.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_array_route@5.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_array_route@5.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@5.ops[17]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_test_array_route@5.ops[19]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_test_array_route@5.ops[25]: 'l-store-copy reinterpret_Encoded(uint64)%3#0 0'
debug: Replaced main_test_array_route@5.ops[27]: 'v-load reinterpret_Encoded(uint64)%3#0' with 'l-load reinterpret_Encoded(uint64)%3#0'
debug: Inserted main_test_array_route@5.ops[60]: 'l-store-copy aggregate%head%3#0 0'
debug: Replaced main_test_array_route@5.ops[62]: 'v-load aggregate%head%3#0' with 'l-load aggregate%head%3#0'
debug: Inserted main_test_array_route@5.ops[65]: 'l-store-copy aggregate%head%4#0 0'
debug: Replaced main_test_array_route@5.ops[67]: 'v-load aggregate%head%4#0' with 'l-load aggregate%head%4#0'
debug: Inserted main_test_array_route@5.ops[73]: 'l-store-copy aggregate%value_len%0#0 0'
debug: Replaced main_test_array_route@5.ops[75]: 'v-load aggregate%value_len%0#0' with 'l-load aggregate%value_len%0#0'
debug: Inserted main_test_array_route@5.ops[78]: 'l-store-copy aggregate%len_ok%0#0 0'
debug: Replaced main_test_array_route@5.ops[80]: 'v-load aggregate%len_ok%0#0' with 'l-load aggregate%len_ok%0#0'
debug: Inserted main_test_array_route@5.ops[113]: 'l-store-copy aggregate%head%12#0 0'
debug: Replaced main_test_array_route@5.ops[115]: 'v-load aggregate%head%12#0' with 'l-load aggregate%head%12#0'
debug: Inserted main_test_array_route@5.ops[118]: 'l-store-copy aggregate%head%13#0 0'
debug: Replaced main_test_array_route@5.ops[120]: 'v-load aggregate%head%13#0' with 'l-load aggregate%head%13#0'
debug: Inserted main_test_array_route@5.ops[126]: 'l-store-copy aggregate%value_len%1#0 0'
debug: Replaced main_test_array_route@5.ops[128]: 'v-load aggregate%value_len%1#0' with 'l-load aggregate%value_len%1#0'
debug: Inserted main_test_array_route@5.ops[131]: 'l-store-copy aggregate%len_ok%1#0 0'
debug: Replaced main_test_array_route@5.ops[133]: 'v-load aggregate%len_ok%1#0' with 'l-load aggregate%len_ok%1#0'
debug: Inserted main_test_array_route@5.ops[167]: 'l-store-copy aggregate%head%21#0 0'
debug: Replaced main_test_array_route@5.ops[169]: 'v-load aggregate%head%21#0' with 'l-load aggregate%head%21#0'
debug: Inserted main_test_array_route@5.ops[172]: 'l-store-copy aggregate%head%22#0 0'
debug: Replaced main_test_array_route@5.ops[174]: 'v-load aggregate%head%22#0' with 'l-load aggregate%head%22#0'
debug: Inserted main_test_array_route@5.ops[180]: 'l-store-copy aggregate%value_len%2#0 0'
debug: Replaced main_test_array_route@5.ops[182]: 'v-load aggregate%value_len%2#0' with 'l-load aggregate%value_len%2#0'
debug: Inserted main_test_array_route@5.ops[185]: 'l-store-copy aggregate%len_ok%2#0 0'
debug: Replaced main_test_array_route@5.ops[187]: 'v-load aggregate%len_ok%2#0' with 'l-load aggregate%len_ok%2#0'
debug: Inserted main_test_array_route@5.ops[204]: 'l-store-copy aggregate%head%26#0 0'
debug: Replaced main_test_array_route@5.ops[206]: 'v-load aggregate%head%26#0' with 'l-load aggregate%head%26#0'
debug: Inserted main_test_array_route@5.ops[56]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_test_array_route@5.ops[59]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_test_array_route@5.ops[85]: 'l-store-copy aggregate%bzero%0#0 0'
debug: Replaced main_test_array_route@5.ops[88]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted main_test_array_route@5.ops[90]: 'l-store-copy aggregate%arc4_encoded%0#0 0'
debug: Replaced main_test_array_route@5.ops[93]: 'v-load aggregate%arc4_encoded%0#0' with 'l-load aggregate%arc4_encoded%0#0'
debug: Inserted main_test_array_route@5.ops[95]: 'l-store-copy aggregate%head%6#0 0'
debug: Replaced main_test_array_route@5.ops[98]: 'v-load aggregate%head%6#0' with 'l-load aggregate%head%6#0'
debug: Inserted main_test_array_route@5.ops[103]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced main_test_array_route@5.ops[106]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted main_test_array_route@5.ops[114]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced main_test_array_route@5.ops[117]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted main_test_array_route@5.ops[144]: 'l-store-copy aggregate%arc4_encoded%1#0 0'
debug: Replaced main_test_array_route@5.ops[147]: 'v-load aggregate%arc4_encoded%1#0' with 'l-load aggregate%arc4_encoded%1#0'
debug: Inserted main_test_array_route@5.ops[149]: 'l-store-copy aggregate%head%15#0 0'
debug: Replaced main_test_array_route@5.ops[152]: 'v-load aggregate%head%15#0' with 'l-load aggregate%head%15#0'
debug: Inserted main_test_array_route@5.ops[154]: 'l-store-copy aggregate%head%16#0 0'
debug: Replaced main_test_array_route@5.ops[157]: 'v-load aggregate%head%16#0' with 'l-load aggregate%head%16#0'
debug: Inserted main_test_array_route@5.ops[162]: 'l-store-copy aggregate%val_as_bytes%6#0 0'
debug: Replaced main_test_array_route@5.ops[165]: 'v-load aggregate%val_as_bytes%6#0' with 'l-load aggregate%val_as_bytes%6#0'
debug: Inserted main_test_array_route@5.ops[173]: 'l-store-copy aggregate%val_as_bytes%8#0 0'
debug: Replaced main_test_array_route@5.ops[176]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_test_array_route@5.ops[203]: 'l-store-copy aggregate%arc4_encoded%2#0 0'
debug: Replaced main_test_array_route@5.ops[206]: 'v-load aggregate%arc4_encoded%2#0' with 'l-load aggregate%arc4_encoded%2#0'
debug: Inserted main_test_array_route@5.ops[208]: 'l-store-copy aggregate%head%24#0 0'
debug: Replaced main_test_array_route@5.ops[211]: 'v-load aggregate%head%24#0' with 'l-load aggregate%head%24#0'
debug: Inserted main_test_array_route@5.ops[213]: 'l-store-copy aggregate%head%25#0 0'
debug: Replaced main_test_array_route@5.ops[216]: 'v-load aggregate%head%25#0' with 'l-load aggregate%head%25#0'
debug: Inserted main_test_array_route@5.ops[53]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_test_array_route@5.ops[59]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_test_array_route@5.ops[112]: 'l-store-copy aggregate%val_as_bytes%4#0 0'
debug: Replaced main_test_array_route@5.ops[118]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted main_test_array_route@5.ops[172]: 'l-store-copy aggregate%val_as_bytes%7#0 0'
debug: Replaced main_test_array_route@5.ops[178]: 'v-load aggregate%val_as_bytes%7#0' with 'l-load aggregate%val_as_bytes%7#0'
debug: Inserted main_test_array_route@5.ops[133]: 'l-store-copy tmp%9#3 0'
debug: Replaced main_test_array_route@5.ops[144]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_test_array_route@5.ops[194]: 'l-store-copy tmp%14#2 0'
debug: Replaced main_test_array_route@5.ops[205]: 'v-load tmp%14#2' with 'l-load tmp%14#2'
debug: Inserted main_test_array_route@5.ops[74]: 'l-store-copy tmp%4#5 0'
debug: Replaced main_test_array_route@5.ops[89]: 'v-load tmp%4#5' with 'l-load tmp%4#5'
debug: Inserted main_test_array_route@5.ops[38]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_test_array_route@5.ops[52]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_test_array_route@5.ops[133]: 'l-store-copy aggregate%head%14#0 0'
debug: Replaced main_test_array_route@5.ops[152]: 'v-load aggregate%head%14#0' with 'l-load aggregate%head%14#0'
debug: Inserted main_test_array_route@5.ops[195]: 'l-store-copy aggregate%head%23#0 0'
debug: Replaced main_test_array_route@5.ops[214]: 'v-load aggregate%head%23#0' with 'l-load aggregate%head%23#0'
debug: Inserted main_test_array_route@5.ops[37]: 'l-store-copy tmp%1#6 1'
debug: Replaced main_test_array_route@5.ops[57]: 'v-load tmp%1#6' with 'l-load tmp%1#6'
debug: Inserted main_test_array_route@5.ops[74]: 'l-store-copy aggregate%head%5#0 0'
debug: Replaced main_test_array_route@5.ops[97]: 'v-load aggregate%head%5#0' with 'l-load aggregate%head%5#0'
debug: Inserted main_test_array_route@5.ops[36]: 'l-store-copy tmp%2#5 2'
debug: Replaced main_test_array_route@5.ops[68]: 'v-load tmp%2#5' with 'l-load tmp%2#5'
debug: Inserted main_test_array_route@5.ops[35]: 'l-store-copy tmp%3#5 3'
debug: Replaced main_test_array_route@5.ops[74]: 'v-load tmp%3#5' with 'l-load tmp%3#5'
debug: Inserted main_test_array_route@5.ops[34]: 'l-store-copy tmp%4#5 4'
debug: Replaced main_test_array_route@5.ops[79]: 'v-load tmp%4#5' with 'l-load tmp%4#5'
debug: Inserted main_test_array_route@5.ops[116]: 'l-store-copy aggregate%head%10#0 0'
debug: Replaced main_test_array_route@5.ops[163]: 'v-load aggregate%head%10#0' with 'l-load aggregate%head%10#0'
debug: Inserted main_test_array_route@5.ops[179]: 'l-store-copy aggregate%head%19#0 0'
debug: Replaced main_test_array_route@5.ops[226]: 'v-load aggregate%head%19#0' with 'l-load aggregate%head%19#0'
debug: Inserted main_test_array_route@5.ops[97]: 'l-store-copy aggregate%bzero%0#0 2'
debug: Replaced main_test_array_route@5.ops[155]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted main_test_array_route@5.ops[109]: 'l-store-copy aggregate%head%7#0 1'
debug: Replaced main_test_array_route@5.ops[170]: 'v-load aggregate%head%7#0' with 'l-load aggregate%head%7#0'
debug: Inserted main_test_array_route@5.ops[173]: 'l-store-copy aggregate%head%17#0 0'
debug: Replaced main_test_array_route@5.ops[234]: 'v-load aggregate%head%17#0' with 'l-load aggregate%head%17#0'
debug: Inserted main_test_array_route@5.ops[157]: 'l-store-copy aggregate%bzero%0#0 4'
debug: Replaced main_test_array_route@5.ops[221]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted main_test_array_route@5.ops[49]: 'l-store-copy tmp%5#0 5'
debug: Replaced main_test_array_route@5.ops[121]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_array_route@5.ops[48]: 'l-store-copy tmp%6#4 6'
debug: Replaced main_test_array_route@5.ops[126]: 'v-load tmp%6#4' with 'l-load tmp%6#4'
debug: Inserted main_test_array_route@5.ops[47]: 'l-store-copy tmp%7#5 7'
debug: Replaced main_test_array_route@5.ops[137]: 'v-load tmp%7#5' with 'l-load tmp%7#5'
debug: Inserted main_test_array_route@5.ops[21]: 'l-store-copy y1#0 0'
debug: Replaced main_test_array_route@5.ops[115]: 'v-load y1#0' with 'l-load y1#0'
debug: Inserted main_test_array_route@5.ops[47]: 'l-store-copy tmp%8#4 9'
debug: Replaced main_test_array_route@5.ops[144]: 'v-load tmp%8#4' with 'l-load tmp%8#4'
debug: Inserted main_test_array_route@5.ops[46]: 'l-store-copy tmp%9#3 10'
debug: Replaced main_test_array_route@5.ops[149]: 'v-load tmp%9#3' with 'l-load tmp%9#3'
debug: Inserted main_test_array_route@5.ops[15]: 'l-store-copy x1#0 0'
debug: Replaced main_test_array_route@5.ops[122]: 'v-load x1#0' with 'l-load x1#0'
debug: Inserted main_test_array_route@5.ops[62]: 'l-store-copy tmp%10#3 12'
debug: Replaced main_test_array_route@5.ops[193]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_test_array_route@5.ops[61]: 'l-store-copy tmp%11#3 13'
debug: Replaced main_test_array_route@5.ops[198]: 'v-load tmp%11#3' with 'l-load tmp%11#3'
debug: Inserted main_test_array_route@5.ops[60]: 'l-store-copy tmp%12#2 14'
debug: Replaced main_test_array_route@5.ops[209]: 'v-load tmp%12#2' with 'l-load tmp%12#2'
debug: Inserted main_test_array_route@5.ops[31]: 'l-store-copy y2#0 2'
debug: Replaced main_test_array_route@5.ops[187]: 'v-load y2#0' with 'l-load y2#0'
debug: Inserted main_test_array_route@5.ops[60]: 'l-store-copy tmp%13#2 16'
debug: Replaced main_test_array_route@5.ops[216]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_test_array_route@5.ops[25]: 'l-store-copy x2#0 2'
debug: Replaced main_test_array_route@5.ops[193]: 'v-load x2#0' with 'l-load x2#0'
debug: Inserted main_test_array_route@5.ops[60]: 'l-store-copy tmp%14#2 18'
debug: Replaced main_test_array_route@5.ops[222]: 'v-load tmp%14#2' with 'l-load tmp%14#2'
debug: Inserted main_for_header@6.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@6.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@7.ops[10]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced main_for_body@7.ops[12]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted main_for_body@7.ops[14]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced main_for_body@7.ops[16]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted main_for_body@7.ops[27]: 'l-store-copy tmp%16#2 0'
debug: Replaced main_for_body@7.ops[29]: 'v-load tmp%16#2' with 'l-load tmp%16#2'
debug: Inserted main_for_body@7.ops[33]: 'l-store-copy aggregate%extract%14#0 0'
debug: Replaced main_for_body@7.ops[35]: 'v-load aggregate%extract%14#0' with 'l-load aggregate%extract%14#0'
debug: Inserted main_for_body@7.ops[41]: 'l-store-copy tmp%17#2 0'
debug: Replaced main_for_body@7.ops[43]: 'v-load tmp%17#2' with 'l-load tmp%17#2'
debug: Inserted main_for_body@7.ops[49]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_for_body@7.ops[51]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_for_body@7.ops[57]: 'l-store-copy i#8 0'
debug: Replaced main_for_body@7.ops[58]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[60]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_for_body@7.ops[62]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_for_body@7.ops[68]: 'l-store-copy tmp%24#1 0'
debug: Replaced main_for_body@7.ops[70]: 'v-load tmp%24#1' with 'l-load tmp%24#1'
debug: Inserted main_for_body@7.ops[5]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced main_for_body@7.ops[8]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted main_for_body@7.ops[24]: 'l-store-copy i#8 0'
debug: Replaced main_for_body@7.ops[27]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[47]: 'l-store-copy tmp%18#2 0'
debug: Replaced main_for_body@7.ops[50]: 'v-load tmp%18#2' with 'l-load tmp%18#2'
debug: Inserted main_for_body@7.ops[67]: 'l-store-copy tmp%23#2 0'
debug: Replaced main_for_body@7.ops[70]: 'v-load tmp%23#2' with 'l-load tmp%23#2'
debug: Inserted main_for_body@7.ops[1]: 'l-store-copy slot_contents%0#2 0'
debug: Replaced main_for_body@7.ops[8]: 'v-load slot_contents%0#2' with 'l-load slot_contents%0#2'
debug: Inserted main_for_body@7.ops[21]: 'l-store-copy aggregate%item1%1#0 0'
debug: Replaced main_for_body@7.ops[28]: 'v-load aggregate%item1%1#0' with 'l-load aggregate%item1%1#0'
debug: Inserted main_for_body@7.ops[41]: 'l-store-copy aggregate%extract%16#0 0'
debug: Replaced main_for_body@7.ops[52]: 'v-load aggregate%extract%16#0' with 'l-load aggregate%extract%16#0'
debug: Inserted main_for_body@7.ops[61]: 'l-store-copy aggregate%extract%25#0 0'
debug: Replaced main_for_body@7.ops[73]: 'v-load aggregate%extract%25#0' with 'l-load aggregate%extract%25#0'
debug: Inserted main_for_body@7.ops[66]: 'l-store-copy i#8 2'
debug: Replaced main_for_body@7.ops[81]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_for_body@7.ops[19]: 'l-store-copy aggregate%extract%2#0 0'
debug: Replaced main_for_body@7.ops[36]: 'v-load aggregate%extract%2#0' with 'l-load aggregate%extract%2#0'
debug: Inserted main_for_body@7.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@7.ops[25]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@7.ops[26]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@7.ops[46]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@7.ops[43]: 'l-store-copy aggregate%extract%14#0 1'
debug: Replaced main_for_body@7.ops[63]: 'v-load aggregate%extract%14#0' with 'l-load aggregate%extract%14#0'
debug: Inserted main_for_body@7.ops[33]: 'l-store-copy i#8 3'
debug: Replaced main_for_body@7.ops[68]: 'v-load i#8' with 'l-load i#8'
debug: Inserted main_after_for@8.ops[1]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_after_for@8.ops[3]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_after_for@8.ops[5]: 'l-store-copy aggregate%bytes_len%0#0 0'
debug: Replaced main_after_for@8.ops[7]: 'v-load aggregate%bytes_len%0#0' with 'l-load aggregate%bytes_len%0#0'
debug: Inserted main_after_for@8.ops[10]: 'l-store-copy aggregate%array_len%0#0 0'
debug: Replaced main_after_for@8.ops[12]: 'v-load aggregate%array_len%0#0' with 'l-load aggregate%array_len%0#0'
debug: Inserted main_after_for@8.ops[14]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_after_for@8.ops[16]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_after_for@8.ops[18]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced main_after_for@8.ops[20]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted main_after_for@8.ops[32]: 'l-store-copy aggregate%encoded_element%3#0 0'
debug: Replaced main_after_for@8.ops[34]: 'v-load aggregate%encoded_element%3#0' with 'l-load aggregate%encoded_element%3#0'
debug: Inserted main_after_for@8.ops[35]: 'l-store-copy aggregate%encoded_element%3#0 0'
debug: Replaced main_after_for@8.ops[38]: 'v-load aggregate%encoded_element%3#0' with 'l-load aggregate%encoded_element%3#0'
debug: Inserted main_after_for@8.ops[23]: 'l-store-copy converted_array%0#0 0'
debug: Replaced main_after_for@8.ops[29]: 'v-load converted_array%0#0' with 'l-load converted_array%0#0'
debug: Inserted main_after_for@8.ops[22]: 'l-store-copy slot_contents%3#0 1'
debug: Replaced main_after_for@8.ops[32]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_after_for@8.ops[4]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_after_for@8.ops[22]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_for_header@42.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@42.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@43.ops[10]: 'l-store-copy aggregate%encoded_element%4#0 0'
debug: Replaced main_for_body@43.ops[12]: 'v-load aggregate%encoded_element%4#0' with 'l-load aggregate%encoded_element%4#0'
debug: Inserted main_for_body@43.ops[22]: 'l-store-copy tmp%1#7 0'
debug: Replaced main_for_body@43.ops[24]: 'v-load tmp%1#7' with 'l-load tmp%1#7'
debug: Inserted main_for_body@43.ops[5]: 'l-store-copy aggregate%bytes_offset%4#0 0'
debug: Replaced main_for_body@43.ops[8]: 'v-load aggregate%bytes_offset%4#0' with 'l-load aggregate%bytes_offset%4#0'
debug: Inserted main_for_body@43.ops[14]: 'l-store-copy aggregate%encoded_element%4#0 0'
debug: Replaced main_for_body@43.ops[17]: 'v-load aggregate%encoded_element%4#0' with 'l-load aggregate%encoded_element%4#0'
debug: Inserted main_for_body@43.ops[1]: 'l-store-copy slot_contents%1#1 0'
debug: Replaced main_for_body@43.ops[8]: 'v-load slot_contents%1#1' with 'l-load slot_contents%1#1'
debug: Inserted main_for_body@43.ops[17]: 'l-store-copy point.x#0 1'
debug: Replaced main_for_body@43.ops[23]: 'v-load point.x#0' with 'l-load point.x#0'
debug: Inserted main_if_body@44.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_if_body@44.ops[10]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_if_body@44.ops[3]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_if_body@44.ops[10]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_else_body@45.ops[7]: 'l-store-copy tmp%6#4 0'
debug: Replaced main_else_body@45.ops[10]: 'v-load tmp%6#4' with 'l-load tmp%6#4'
debug: Inserted main_else_body@45.ops[3]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_else_body@45.ops[10]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_after_if_else@46.ops[3]: 'l-store-copy tmp%8#5 0'
debug: Replaced main_after_if_else@46.ops[5]: 'v-load tmp%8#5' with 'l-load tmp%8#5'
debug: Inserted main_after_if_else@49.ops[1]: 'l-store-copy dx#0 0'
debug: Replaced main_after_if_else@49.ops[2]: 'v-load dx#0' with 'l-load dx#0'
debug: Inserted main_after_if_else@49.ops[6]: 'l-store-copy dy#0 0'
debug: Replaced main_after_if_else@49.ops[7]: 'v-load dy#0' with 'l-load dy#0'
debug: Inserted main_after_if_else@49.ops[13]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_after_if_else@49.ops[15]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_after_if_else@49.ops[9]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_after_if_else@49.ops[12]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_after_if_else@49.ops[18]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_after_if_else@49.ops[21]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_after_if_else@49.ops[4]: 'l-store-copy tmp%11#3 0'
debug: Replaced main_after_if_else@49.ops[12]: 'v-load tmp%11#3' with 'l-load tmp%11#3'
debug: Inserted main_after_for@50.ops[6]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_after_for@50.ops[8]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_after_for@50.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@50.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@50.ops[2]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_after_for@50.ops[5]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[10]: 'l-store-copy tmp%14#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[12]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[15]: 'l-store-copy reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[17]: 'v-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0' with 'l-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[26]: 'l-store-copy aggregate%head%28#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[28]: 'v-load aggregate%head%28#0' with 'l-load aggregate%head%28#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[32]: 'l-store-copy aggregate%bytes_len%2#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[34]: 'v-load aggregate%bytes_len%2#0' with 'l-load aggregate%bytes_len%2#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[37]: 'l-store-copy aggregate%array_len%2#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[39]: 'v-load aggregate%array_len%2#0' with 'l-load aggregate%array_len%2#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[42]: 'l-store-copy tmp%2#2 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[44]: 'v-load tmp%2#2' with 'l-load tmp%2#2'
debug: Inserted main_test_extend_from_tuple_route@9.ops[52]: 'l-store-copy last#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[54]: 'v-load last#0' with 'l-load last#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[57]: 'l-store-copy tmp%3#4 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[59]: 'v-load tmp%3#4' with 'l-load tmp%3#4'
debug: Inserted main_test_extend_from_tuple_route@9.ops[63]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[65]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[67]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[69]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[72]: 'l-store-copy result#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[74]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[77]: 'l-store-copy aggregate%array_length%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[79]: 'v-load aggregate%array_length%0#0' with 'l-load aggregate%array_length%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[94]: 'l-store-copy aggregate%encoded_element%6#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[96]: 'v-load aggregate%encoded_element%6#0' with 'l-load aggregate%encoded_element%6#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[99]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[101]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_test_extend_from_tuple_route@9.ops[106]: 'l-store-copy tmp%19#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[108]: 'v-load tmp%19#0' with 'l-load tmp%19#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[111]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[113]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[22]: 'l-store-copy some_more.1#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[25]: 'v-load some_more.1#0' with 'l-load some_more.1#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[30]: 'l-store-copy aggregate%head%28#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[32]: 'v-load aggregate%head%28#0' with 'l-load aggregate%head%28#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[49]: 'l-store-copy aggregate%bytes_offset%5#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[52]: 'v-load aggregate%bytes_offset%5#0' with 'l-load aggregate%bytes_offset%5#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[92]: 'l-store-copy aggregate%bytes_offset%6#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[95]: 'v-load aggregate%bytes_offset%6#0' with 'l-load aggregate%bytes_offset%6#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[18]: 'l-store-copy reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[21]: 'v-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0' with 'l-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[20]: 'l-store-copy some_more.0#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[26]: 'v-load some_more.0#0' with 'l-load some_more.0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[87]: 'l-store-copy tmp%6#4 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[92]: 'v-load tmp%6#4' with 'l-load tmp%6#4'
debug: Inserted main_test_extend_from_tuple_route@9.ops[91]: 'l-store-copy aggregate%array_trimmed%0#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[98]: 'v-load aggregate%array_trimmed%0#0' with 'l-load aggregate%array_trimmed%0#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[80]: 'l-store-copy result#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[90]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[35]: 'l-store-copy aggregate%head%28#0 0'
debug: Replaced main_test_extend_from_tuple_route@9.ops[54]: 'v-load aggregate%head%28#0' with 'l-load aggregate%head%28#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[55]: 'l-store-copy aggregate%head%28#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[77]: 'v-load aggregate%head%28#0' with 'l-load aggregate%head%28#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[45]: 'l-store-copy aggregate%array_len%2#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[69]: 'v-load aggregate%array_len%2#0' with 'l-load aggregate%array_len%2#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[94]: 'l-store-copy result#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[117]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[28]: 'l-store-copy some_more.1#0 1'
debug: Replaced main_test_extend_from_tuple_route@9.ops[64]: 'v-load some_more.1#0' with 'l-load some_more.1#0'
debug: Inserted main_test_extend_from_tuple_route@9.ops[64]: 'l-store-copy last#0 3'
debug: Replaced main_test_extend_from_tuple_route@9.ops[112]: 'v-load last#0' with 'l-load last#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[5]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[7]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[10]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[12]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[15]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[17]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[21]: 'l-store-copy aggregate%bytes_len%4#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[23]: 'v-load aggregate%bytes_len%4#0' with 'l-load aggregate%bytes_len%4#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[26]: 'l-store-copy aggregate%array_len%4#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[28]: 'v-load aggregate%array_len%4#0' with 'l-load aggregate%array_len%4#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[30]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[32]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[34]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[36]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[43]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[45]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[48]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[50]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[18]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[20]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[40]: 'l-store-copy converted_array%0#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[43]: 'v-load converted_array%0#0' with 'l-load converted_array%0#0'
debug: Inserted main_test_extend_from_arc4_tuple_route@10.ops[21]: 'l-store-copy some_more#0 0'
debug: Replaced main_test_extend_from_arc4_tuple_route@10.ops[39]: 'v-load some_more#0' with 'l-load some_more#0'
debug: Inserted main_test_bool_array_route@11.ops[1]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_test_bool_array_route@11.ops[3]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_test_bool_array_route@11.ops[5]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_test_bool_array_route@11.ops[7]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_test_bool_array_route@11.ops[10]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_bool_array_route@11.ops[12]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_bool_array_route@11.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%4#0 0'
debug: Replaced main_test_bool_array_route@11.ops[17]: 'v-load reinterpret_Encoded(uint64)%4#0' with 'l-load reinterpret_Encoded(uint64)%4#0'
debug: Inserted main_test_bool_array_route@11.ops[19]: 'l-store-copy length#0 0'
debug: Replaced main_test_bool_array_route@11.ops[23]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_for_header@12.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@12.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@13.ops[3]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@13.ops[5]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@13.ops[18]: 'l-store-copy concat%0#2 0'
debug: Replaced main_for_body@13.ops[20]: 'v-load concat%0#2' with 'l-load concat%0#2'
debug: Inserted main_for_body@13.ops[14]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced main_for_body@13.ops[17]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted main_for_body@13.ops[7]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_for_body@13.ops[13]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_for_body@13.ops[10]: 'l-store-copy slot_contents%0#2 1'
debug: Replaced main_for_body@13.ops[18]: 'v-load slot_contents%0#2' with 'l-load slot_contents%0#2'
debug: Inserted main_for_body@13.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@13.ops[26]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@14.ops[1]: 'l-store-copy aggregate%slot_contents%3#0 0'
debug: Replaced main_after_for@14.ops[3]: 'v-load aggregate%slot_contents%3#0' with 'l-load aggregate%slot_contents%3#0'
debug: Inserted main_after_for@14.ops[5]: 'l-store-copy aggregate%bytes_len%6#0 0'
debug: Replaced main_after_for@14.ops[7]: 'v-load aggregate%bytes_len%6#0' with 'l-load aggregate%bytes_len%6#0'
debug: Inserted main_after_for@14.ops[10]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_after_for@14.ops[12]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_after_for@14.ops[21]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@14.ops[23]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@14.ops[35]: 'l-store-copy tmp%10#2 0'
debug: Replaced main_after_for@14.ops[37]: 'v-load tmp%10#2' with 'l-load tmp%10#2'
debug: Inserted main_after_for@14.ops[42]: 'l-store-copy aggregate%slot_contents%5#0 0'
debug: Replaced main_after_for@14.ops[44]: 'v-load aggregate%slot_contents%5#0' with 'l-load aggregate%slot_contents%5#0'
debug: Inserted main_after_for@14.ops[17]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_after_for@14.ops[20]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_after_for@14.ops[25]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@14.ops[27]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@14.ops[33]: 'l-store-copy tmp%9#2 0'
debug: Replaced main_after_for@14.ops[36]: 'v-load tmp%9#2' with 'l-load tmp%9#2'
debug: Inserted main_after_for@14.ops[15]: 'l-store-copy aggregate%slot_contents%3#0 0'
debug: Replaced main_after_for@14.ops[20]: 'v-load aggregate%slot_contents%3#0' with 'l-load aggregate%slot_contents%3#0'
debug: Inserted main_after_for@14.ops[30]: 'l-store-copy aggregate%bytes_len%7#0 0'
debug: Replaced main_after_for@14.ops[37]: 'v-load aggregate%bytes_len%7#0' with 'l-load aggregate%bytes_len%7#0'
debug: Inserted main_after_for@14.ops[4]: 'l-store-copy aggregate%slot_contents%3#0 0'
debug: Replaced main_after_for@14.ops[15]: 'v-load aggregate%slot_contents%3#0' with 'l-load aggregate%slot_contents%3#0'
debug: Inserted main_after_for@14.ops[1]: 'l-store-copy slot%3 0'
debug: Replaced main_after_for@14.ops[19]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_after_for@14.ops[11]: 'l-store-copy length#0 3'
debug: Replaced main_after_for@14.ops[35]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_after_for@14.ops[21]: 'l-store-copy slot%3 2'
debug: Replaced main_after_for@14.ops[50]: 'v-load slot%3' with 'l-load slot%3'
debug: Inserted main_for_header@15.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@15.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@16.ops[1]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_for_body@16.ops[3]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_for_body@16.ops[7]: 'l-store-copy aggregate%encoded_element%7#0 0'
debug: Replaced main_for_body@16.ops[9]: 'v-load aggregate%encoded_element%7#0' with 'l-load aggregate%encoded_element%7#0'
debug: Inserted main_for_body@16.ops[12]: 'l-store-copy val#1 0'
debug: Replaced main_for_body@16.ops[16]: 'v-load val#1' with 'l-load val#1'
debug: Inserted main_if_body@17.ops[3]: 'l-store-copy count#0 0'
debug: Replaced main_if_body@17.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted main_after_for@19.ops[6]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_after_for@19.ops[8]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_after_for@19.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@19.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@19.ops[2]: 'l-store-copy aggregate%val_as_bytes%10#0 0'
debug: Replaced main_after_for@19.ops[5]: 'v-load aggregate%val_as_bytes%10#0' with 'l-load aggregate%val_as_bytes%10#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[1]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[3]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[5]: 'l-store-copy tmp%35#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[7]: 'v-load tmp%35#0' with 'l-load tmp%35#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[10]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[12]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%5#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[17]: 'v-load reinterpret_Encoded(uint64)%5#0' with 'l-load reinterpret_Encoded(uint64)%5#0'
debug: Inserted main_test_arc4_conversion_route@20.ops[19]: 'l-store-copy length#0 0'
debug: Replaced main_test_arc4_conversion_route@20.ops[23]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_for_header@21.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@21.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@22.ops[4]: 'l-store-copy slot_contents%0#2 0'
debug: Replaced main_for_body@22.ops[6]: 'v-load slot_contents%0#2' with 'l-load slot_contents%0#2'
debug: Inserted main_for_body@22.ops[9]: 'l-store-copy concat%0#2 0'
debug: Replaced main_for_body@22.ops[11]: 'v-load concat%0#2' with 'l-load concat%0#2'
debug: Inserted main_for_body@22.ops[2]: 'l-store-copy aggregate%val_as_bytes%11#0 0'
debug: Replaced main_for_body@22.ops[8]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_for_body@22.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@22.ops[15]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@23.ops[1]: 'l-store-copy aggregate%slot_contents%7#0 0'
debug: Replaced main_after_for@23.ops[3]: 'v-load aggregate%slot_contents%7#0' with 'l-load aggregate%slot_contents%7#0'
debug: Inserted main_after_for@23.ops[5]: 'l-store-copy aggregate%bytes_len%10#0 0'
debug: Replaced main_after_for@23.ops[7]: 'v-load aggregate%bytes_len%10#0' with 'l-load aggregate%bytes_len%10#0'
debug: Inserted main_after_for@23.ops[10]: 'l-store-copy aggregate%array_len%10#0 0'
debug: Replaced main_after_for@23.ops[12]: 'v-load aggregate%array_len%10#0' with 'l-load aggregate%array_len%10#0'
debug: Inserted main_after_for@23.ops[15]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_after_for@23.ops[17]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_header@24.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@24.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@25.ops[10]: 'l-store-copy val#0 0'
debug: Replaced main_for_body@25.ops[12]: 'v-load val#0' with 'l-load val#0'
debug: Inserted main_for_body@25.ops[5]: 'l-store-copy aggregate%bytes_offset%8#0 0'
debug: Replaced main_for_body@25.ops[8]: 'v-load aggregate%bytes_offset%8#0' with 'l-load aggregate%bytes_offset%8#0'
debug: Inserted main_for_body@25.ops[16]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_for_body@25.ops[20]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_for_body@25.ops[1]: 'l-store-copy slot_contents%1#1 0'
debug: Replaced main_for_body@25.ops[8]: 'v-load slot_contents%1#1' with 'l-load slot_contents%1#1'
debug: Inserted main_if_body@26.ops[3]: 'l-store-copy count#0 0'
debug: Replaced main_if_body@26.ops[5]: 'v-load count#0' with 'l-load count#0'
debug: Inserted main_after_for@28.ops[5]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@28.ops[7]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@28.ops[9]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_after_for@28.ops[11]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_after_for@28.ops[13]: 'l-store-copy len%0#0 0'
debug: Replaced main_after_for@28.ops[15]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_after_for@28.ops[18]: 'l-store-copy div_floor%0#0 0'
debug: Replaced main_after_for@28.ops[20]: 'v-load div_floor%0#0' with 'l-load div_floor%0#0'
debug: Inserted main_after_for@28.ops[22]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced main_after_for@28.ops[24]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted main_after_for@28.ops[34]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_after_for@28.ops[36]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_after_for@28.ops[39]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@28.ops[41]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@28.ops[1]: 'l-store-copy slot_contents%2#1 0'
debug: Replaced main_after_for@28.ops[4]: 'v-load slot_contents%2#1' with 'l-load slot_contents%2#1'
debug: Inserted main_after_for@28.ops[27]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced main_after_for@28.ops[30]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted main_after_for@28.ops[32]: 'l-store-copy arc4_arr#0 0'
debug: Replaced main_after_for@28.ops[35]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted main_after_for@28.ops[9]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@28.ops[30]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_sum_array_route@29.ops[1]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_sum_array_route@29.ops[3]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_sum_array_route@29.ops[5]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_sum_array_route@29.ops[7]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_sum_array_route@29.ops[10]: 'l-store-copy tmp%43#0 0'
debug: Replaced main_sum_array_route@29.ops[12]: 'v-load tmp%43#0' with 'l-load tmp%43#0'
debug: Inserted main_sum_array_route@29.ops[15]: 'l-store-copy arc4_arr#0 0'
debug: Replaced main_sum_array_route@29.ops[17]: 'v-load arc4_arr#0' with 'l-load arc4_arr#0'
debug: Inserted main_sum_array_route@29.ops[19]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_sum_array_route@29.ops[21]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_sum_array_route@29.ops[27]: 'l-store-copy aggregate%bytes_len%12#0 0'
debug: Replaced main_sum_array_route@29.ops[29]: 'v-load aggregate%bytes_len%12#0' with 'l-load aggregate%bytes_len%12#0'
debug: Inserted main_sum_array_route@29.ops[22]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_sum_array_route@29.ops[26]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_for_header@30.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@30.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@31.ops[5]: 'l-store-copy aggregate%bytes_offset%9#0 0'
debug: Replaced main_for_body@31.ops[8]: 'v-load aggregate%bytes_offset%9#0' with 'l-load aggregate%bytes_offset%9#0'
debug: Inserted main_for_body@31.ops[10]: 'l-store-copy tmp%0#2 0'
debug: Replaced main_for_body@31.ops[13]: 'v-load tmp%0#2' with 'l-load tmp%0#2'
debug: Inserted main_for_body@31.ops[1]: 'l-store-copy slot_contents%1#1 0'
debug: Replaced main_for_body@31.ops[8]: 'v-load slot_contents%1#1' with 'l-load slot_contents%1#1'
debug: Inserted main_for_body@31.ops[4]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@31.ops[18]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@32.ops[6]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_after_for@32.ops[8]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_after_for@32.ops[11]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@32.ops[13]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@32.ops[2]: 'l-store-copy aggregate%val_as_bytes%12#0 0'
debug: Replaced main_after_for@32.ops[5]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_test_arc4_bool_route@33.ops[1]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[3]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_test_arc4_bool_route@33.ops[5]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[7]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_test_arc4_bool_route@33.ops[10]: 'l-store-copy tmp%50#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[12]: 'v-load tmp%50#0' with 'l-load tmp%50#0'
debug: Inserted main_test_arc4_bool_route@33.ops[43]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[45]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[55]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[57]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[60]: 'l-store-copy aggregate%array_length%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[62]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[65]: 'l-store-copy tmp%12#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[67]: 'v-load tmp%12#1' with 'l-load tmp%12#1'
debug: Inserted main_test_arc4_bool_route@33.ops[71]: 'l-store-copy tmp%13#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[73]: 'v-load tmp%13#1' with 'l-load tmp%13#1'
debug: Inserted main_test_arc4_bool_route@33.ops[76]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[78]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_test_arc4_bool_route@33.ops[90]: 'l-store-copy aggregate%encoded_bool%3#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[92]: 'v-load aggregate%encoded_bool%3#0' with 'l-load aggregate%encoded_bool%3#0'
debug: Inserted main_test_arc4_bool_route@33.ops[107]: 'l-store-copy tmp%19#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[109]: 'v-load tmp%19#1' with 'l-load tmp%19#1'
debug: Inserted main_test_arc4_bool_route@33.ops[114]: 'l-store-copy aggregate%lt%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[116]: 'v-load aggregate%lt%1#0' with 'l-load aggregate%lt%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[126]: 'l-store-copy aggregate%encoded_bool%4#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[128]: 'v-load aggregate%encoded_bool%4#0' with 'l-load aggregate%encoded_bool%4#0'
debug: Inserted main_test_arc4_bool_route@33.ops[143]: 'l-store-copy tmp%24#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[145]: 'v-load tmp%24#1' with 'l-load tmp%24#1'
debug: Inserted main_test_arc4_bool_route@33.ops[148]: 'l-store-copy slot_contents%3#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[150]: 'v-load slot_contents%3#0' with 'l-load slot_contents%3#0'
debug: Inserted main_test_arc4_bool_route@33.ops[17]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[20]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_arc4_bool_route@33.ops[31]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[34]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_test_arc4_bool_route@33.ops[41]: 'l-store-copy aggregate%encoded_bool%2#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[44]: 'v-load aggregate%encoded_bool%2#0' with 'l-load aggregate%encoded_bool%2#0'
debug: Inserted main_test_arc4_bool_route@33.ops[49]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[51]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[103]: 'l-store-copy tmp%17#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[106]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted main_test_arc4_bool_route@33.ops[108]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[111]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_test_arc4_bool_route@33.ops[141]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[144]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_test_arc4_bool_route@33.ops[146]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[149]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_test_arc4_bool_route@33.ops[15]: 'l-store-copy tmp%0#3 0'
debug: Replaced main_test_arc4_bool_route@33.ops[20]: 'v-load tmp%0#3' with 'l-load tmp%0#3'
debug: Inserted main_test_arc4_bool_route@33.ops[23]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[27]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_arc4_bool_route@33.ops[31]: 'l-store-copy tmp%5#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[36]: 'v-load tmp%5#1' with 'l-load tmp%5#1'
debug: Inserted main_test_arc4_bool_route@33.ops[39]: 'l-store-copy tmp%7#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[43]: 'v-load tmp%7#1' with 'l-load tmp%7#1'
debug: Inserted main_test_arc4_bool_route@33.ops[57]: 'l-store-copy aggregate%bytes_len%13#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[61]: 'v-load aggregate%bytes_len%13#0' with 'l-load aggregate%bytes_len%13#0'
debug: Inserted main_test_arc4_bool_route@33.ops[94]: 'l-store-copy aggregate%get_bit%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[98]: 'v-load aggregate%get_bit%1#0' with 'l-load aggregate%get_bit%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[107]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[112]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_arc4_bool_route@33.ops[134]: 'l-store-copy aggregate%get_bit%3#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[138]: 'v-load aggregate%get_bit%3#0' with 'l-load aggregate%get_bit%3#0'
debug: Inserted main_test_arc4_bool_route@33.ops[147]: 'l-store-copy tmp%21#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[152]: 'v-load tmp%21#1' with 'l-load tmp%21#1'
debug: Inserted main_test_arc4_bool_route@33.ops[56]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[61]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[106]: 'l-store-copy aggregate%get_bit%2#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[119]: 'v-load aggregate%get_bit%2#0' with 'l-load aggregate%get_bit%2#0'
debug: Inserted main_test_arc4_bool_route@33.ops[147]: 'l-store-copy aggregate%get_bit%4#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[160]: 'v-load aggregate%get_bit%4#0' with 'l-load aggregate%get_bit%4#0'
debug: Inserted main_test_arc4_bool_route@33.ops[68]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[80]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[81]: 'l-store-copy dyn_arr#1 0'
debug: Replaced main_test_arc4_bool_route@33.ops[94]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[29]: 'l-store-copy aggregate%encoded_bool%1#0 0'
debug: Replaced main_test_arc4_bool_route@33.ops[48]: 'v-load aggregate%encoded_bool%1#0' with 'l-load aggregate%encoded_bool%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[75]: 'l-store-copy aggregate%array_length%1#0 1'
debug: Replaced main_test_arc4_bool_route@33.ops[94]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[95]: 'l-store-copy aggregate%array_length%1#0 1'
debug: Replaced main_test_arc4_bool_route@33.ops[132]: 'v-load aggregate%array_length%1#0' with 'l-load aggregate%array_length%1#0'
debug: Inserted main_test_arc4_bool_route@33.ops[98]: 'l-store-copy dyn_arr#1 1'
debug: Replaced main_test_arc4_bool_route@33.ops[139]: 'v-load dyn_arr#1' with 'l-load dyn_arr#1'
debug: Inserted main_test_arc4_bool_route@33.ops[55]: 'l-store-copy slot%7 1'
debug: Replaced main_test_arc4_bool_route@33.ops[174]: 'v-load slot%7' with 'l-load slot%7'
debug: Inserted main_for_header@34.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@34.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@35.ops[14]: 'l-store-copy slot_contents%4#0 0'
debug: Replaced main_for_body@35.ops[16]: 'v-load slot_contents%4#0' with 'l-load slot_contents%4#0'
debug: Inserted main_for_body@35.ops[19]: 'l-store-copy concat%2#0 0'
debug: Replaced main_for_body@35.ops[21]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_for_body@35.ops[3]: 'l-store-copy aggregate%add%2#0 0'
debug: Replaced main_for_body@35.ops[6]: 'v-load aggregate%add%2#0' with 'l-load aggregate%add%2#0'
debug: Inserted main_for_body@35.ops[8]: 'l-store-copy aggregate%get_bit%5#0 0'
debug: Replaced main_for_body@35.ops[12]: 'v-load aggregate%get_bit%5#0' with 'l-load aggregate%get_bit%5#0'
debug: Inserted main_for_body@35.ops[14]: 'l-store-copy b#0 0'
debug: Replaced main_for_body@35.ops[20]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_for_body@35.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@35.ops[27]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@36.ops[1]: 'l-store-copy aggregate%slot_contents%10#0 0'
debug: Replaced main_after_for@36.ops[3]: 'v-load aggregate%slot_contents%10#0' with 'l-load aggregate%slot_contents%10#0'
debug: Inserted main_after_for@36.ops[5]: 'l-store-copy aggregate%bytes_len%14#0 0'
debug: Replaced main_after_for@36.ops[7]: 'v-load aggregate%bytes_len%14#0' with 'l-load aggregate%bytes_len%14#0'
debug: Inserted main_after_for@36.ops[10]: 'l-store-copy tmp%27#0 0'
debug: Replaced main_after_for@36.ops[12]: 'v-load tmp%27#0' with 'l-load tmp%27#0'
debug: Inserted main_after_for@36.ops[16]: 'l-store-copy aggregate%encoded_element%10#0 0'
debug: Replaced main_after_for@36.ops[18]: 'v-load aggregate%encoded_element%10#0' with 'l-load aggregate%encoded_element%10#0'
debug: Inserted main_after_for@36.ops[33]: 'l-store-copy tmp%32#1 0'
debug: Replaced main_after_for@36.ops[35]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_after_for@36.ops[39]: 'l-store-copy aggregate%encoded_element%11#0 0'
debug: Replaced main_after_for@36.ops[41]: 'v-load aggregate%encoded_element%11#0' with 'l-load aggregate%encoded_element%11#0'
debug: Inserted main_after_for@36.ops[56]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_after_for@36.ops[58]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_after_for@36.ops[62]: 'l-store-copy aggregate%encoded_element%12#0 0'
debug: Replaced main_after_for@36.ops[64]: 'v-load aggregate%encoded_element%12#0' with 'l-load aggregate%encoded_element%12#0'
debug: Inserted main_after_for@36.ops[79]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_after_for@36.ops[81]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_after_for@36.ops[85]: 'l-store-copy aggregate%encoded_element%13#0 0'
debug: Replaced main_after_for@36.ops[87]: 'v-load aggregate%encoded_element%13#0' with 'l-load aggregate%encoded_element%13#0'
debug: Inserted main_after_for@36.ops[102]: 'l-store-copy tmp%47#1 0'
debug: Replaced main_after_for@36.ops[104]: 'v-load tmp%47#1' with 'l-load tmp%47#1'
debug: Inserted main_after_for@36.ops[107]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced main_after_for@36.ops[109]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted main_after_for@36.ops[121]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_after_for@36.ops[123]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_after_for@36.ops[126]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@36.ops[128]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@36.ops[25]: 'l-store-copy tmp%30#1 0'
debug: Replaced main_after_for@36.ops[28]: 'v-load tmp%30#1' with 'l-load tmp%30#1'
debug: Inserted main_after_for@36.ops[30]: 'l-store-copy tmp%31#1 0'
debug: Replaced main_after_for@36.ops[33]: 'v-load tmp%31#1' with 'l-load tmp%31#1'
debug: Inserted main_after_for@36.ops[50]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_after_for@36.ops[53]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_after_for@36.ops[55]: 'l-store-copy tmp%36#1 0'
debug: Replaced main_after_for@36.ops[58]: 'v-load tmp%36#1' with 'l-load tmp%36#1'
debug: Inserted main_after_for@36.ops[75]: 'l-store-copy tmp%40#1 0'
debug: Replaced main_after_for@36.ops[78]: 'v-load tmp%40#1' with 'l-load tmp%40#1'
debug: Inserted main_after_for@36.ops[80]: 'l-store-copy tmp%41#1 0'
debug: Replaced main_after_for@36.ops[83]: 'v-load tmp%41#1' with 'l-load tmp%41#1'
debug: Inserted main_after_for@36.ops[100]: 'l-store-copy tmp%45#1 0'
debug: Replaced main_after_for@36.ops[103]: 'v-load tmp%45#1' with 'l-load tmp%45#1'
debug: Inserted main_after_for@36.ops[105]: 'l-store-copy tmp%46#1 0'
debug: Replaced main_after_for@36.ops[108]: 'v-load tmp%46#1' with 'l-load tmp%46#1'
debug: Inserted main_after_for@36.ops[125]: 'l-store-copy bit_packed_source%0#0 0'
debug: Replaced main_after_for@36.ops[128]: 'v-load bit_packed_source%0#0' with 'l-load bit_packed_source%0#0'
debug: Inserted main_after_for@36.ops[23]: 'l-store-copy tmp%29#1 0'
debug: Replaced main_after_for@36.ops[28]: 'v-load tmp%29#1' with 'l-load tmp%29#1'
debug: Inserted main_after_for@36.ops[49]: 'l-store-copy tmp%34#1 0'
debug: Replaced main_after_for@36.ops[54]: 'v-load tmp%34#1' with 'l-load tmp%34#1'
debug: Inserted main_after_for@36.ops[75]: 'l-store-copy tmp%39#1 0'
debug: Replaced main_after_for@36.ops[80]: 'v-load tmp%39#1' with 'l-load tmp%39#1'
debug: Inserted main_after_for@36.ops[101]: 'l-store-copy tmp%44#1 0'
debug: Replaced main_after_for@36.ops[106]: 'v-load tmp%44#1' with 'l-load tmp%44#1'
debug: Inserted main_after_for@36.ops[123]: 'l-store-copy aggregate%bytes_len%15#0 0'
debug: Replaced main_after_for@36.ops[127]: 'v-load aggregate%bytes_len%15#0' with 'l-load aggregate%bytes_len%15#0'
debug: Inserted main_after_for@36.ops[122]: 'l-store-copy slot_contents%9#0 0'
debug: Replaced main_after_for@36.ops[127]: 'v-load slot_contents%9#0' with 'l-load slot_contents%9#0'
debug: Inserted main_after_for@36.ops[4]: 'l-store-copy aggregate%slot_contents%10#0 0'
debug: Replaced main_after_for@36.ops[15]: 'v-load aggregate%slot_contents%10#0' with 'l-load aggregate%slot_contents%10#0'
debug: Inserted main_after_for@36.ops[22]: 'l-store-copy aggregate%get_bit%6#0 0'
debug: Replaced main_after_for@36.ops[35]: 'v-load aggregate%get_bit%6#0' with 'l-load aggregate%get_bit%6#0'
debug: Inserted main_after_for@36.ops[49]: 'l-store-copy aggregate%get_bit%7#0 0'
debug: Replaced main_after_for@36.ops[62]: 'v-load aggregate%get_bit%7#0' with 'l-load aggregate%get_bit%7#0'
debug: Inserted main_after_for@36.ops[76]: 'l-store-copy aggregate%get_bit%8#0 0'
debug: Replaced main_after_for@36.ops[89]: 'v-load aggregate%get_bit%8#0' with 'l-load aggregate%get_bit%8#0'
debug: Inserted main_after_for@36.ops[103]: 'l-store-copy aggregate%get_bit%9#0 0'
debug: Replaced main_after_for@36.ops[116]: 'v-load aggregate%get_bit%9#0' with 'l-load aggregate%get_bit%9#0'
debug: Inserted main_after_for@36.ops[16]: 'l-store-copy aggregate%slot_contents%10#0 0'
debug: Replaced main_after_for@36.ops[43]: 'v-load aggregate%slot_contents%10#0' with 'l-load aggregate%slot_contents%10#0'
debug: Inserted main_after_for@36.ops[44]: 'l-store-copy aggregate%slot_contents%10#0 0'
debug: Replaced main_after_for@36.ops[71]: 'v-load aggregate%slot_contents%10#0' with 'l-load aggregate%slot_contents%10#0'
debug: Inserted main_after_for@36.ops[72]: 'l-store-copy aggregate%slot_contents%10#0 0'
debug: Replaced main_after_for@36.ops[99]: 'v-load aggregate%slot_contents%10#0' with 'l-load aggregate%slot_contents%10#0'
debug: Inserted main_bare_routing@37.ops[1]: 'l-store-copy tmp%54#0 0'
debug: Replaced main_bare_routing@37.ops[3]: 'v-load tmp%54#0' with 'l-load tmp%54#0'
debug: Inserted main___algopy_default_create@38.ops[1]: 'l-store-copy tmp%55#0 0'
debug: Replaced main___algopy_default_create@38.ops[3]: 'v-load tmp%55#0' with 'l-load tmp%55#0'
debug: Inserted main___algopy_default_create@38.ops[5]: 'l-store-copy tmp%56#0 0'
debug: Replaced main___algopy_default_create@38.ops[7]: 'v-load tmp%56#0' with 'l-load tmp%56#0'
debug: Inserted main___algopy_default_create@38.ops[10]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@38.ops[12]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@39.ops[1]: 'l-store-copy test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@39.ops[3]: 'v-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[33]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[35]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[44]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[48]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits_block@0.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits_block@0.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted xtra_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced xtra_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted xtra_block@0.ops[11]: 'l-store-copy tmp%0#0 0'
debug: Replaced xtra_block@0.ops[14]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted xtra_block@0.ops[25]: 'l-store-copy maybe_exists%2#0 1'
debug: Replaced xtra_block@0.ops[28]: 'v-load maybe_exists%2#0' with 'l-load maybe_exists%2#0'
debug: Inserted xtra_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced xtra_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted xtra_block@0.ops[28]: 'l-store-copy maybe_value%2#0 1'
debug: Replaced xtra_block@0.ops[32]: 'v-load maybe_value%2#0' with 'l-load maybe_value%2#0'
debug: Inserted xtra_block@0.ops[34]: 'l-store-copy tmp%4#0 0'
debug: Replaced xtra_block@0.ops[40]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted xtra_block@0.ops[22]: 'l-store-copy tmp%3#0 0'
debug: Replaced xtra_block@0.ops[40]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted xtra_block@0.ops[18]: 'l-store-copy tmp%1#0 0'
debug: Replaced xtra_block@0.ops[38]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted xtra_block@0.ops[21]: 'l-store-copy tmp%2#0 1'
debug: Replaced xtra_block@0.ops[41]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted xtra_block@0.ops[16]: 'l-store-copy tmp%0#0 1'
debug: Replaced xtra_block@0.ops[41]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted more_block@0.ops[10]: 'l-store-copy tmp%0#0 0'
debug: Replaced more_block@0.ops[12]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted more_block@0.ops[16]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced more_block@0.ops[17]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted more_block@0.ops[19]: 'l-store-copy tmp%2#0 0'
debug: Replaced more_block@0.ops[21]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted more_block@0.ops[27]: 'l-store-copy aggregate%head%1#0 0'
debug: Replaced more_block@0.ops[29]: 'v-load aggregate%head%1#0' with 'l-load aggregate%head%1#0'
debug: Inserted more_block@0.ops[3]: 'l-store-copy maybe_exists%0#0 1'
debug: Replaced more_block@0.ops[6]: 'v-load maybe_exists%0#0' with 'l-load maybe_exists%0#0'
debug: Inserted more_block@0.ops[24]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced more_block@0.ops[27]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted more_block@0.ops[5]: 'l-store-copy maybe_value%0#0 1'
debug: Replaced more_block@0.ops[9]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted more_block@0.ops[10]: 'l-store-copy maybe_value%0#0 0'
debug: Replaced more_block@0.ops[18]: 'v-load maybe_value%0#0' with 'l-load maybe_value%0#0'
debug: Inserted more_block@0.ops[17]: 'l-store-copy aggregate%val_as_bytes%0#0 1'
debug: Replaced more_block@0.ops[29]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Found 26 edge set/s for test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init
debug: Allocated 3 variable/s to x-stack: aggregate%encoded_element%4#0, dy#0, tmp%0#0
debug: shared x-stack for main_for_body@43 -> main_if_body@44: aggregate%encoded_element%4#0
debug: shared x-stack for main_for_body@43 -> main_else_body@45: aggregate%encoded_element%4#0
debug: shared x-stack for main_if_body@47 -> main_after_if_else@49: dy#0
debug: shared x-stack for main_else_body@48 -> main_after_if_else@49: dy#0
debug: shared x-stack for main_test_extend_from_tuple_route@9 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_test_extend_from_arc4_tuple_route@10 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_for@19 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_for@28 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_for@32 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_for@36 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main___algopy_default_create@38 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_if_else@39 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: shared x-stack for main_after_for@50 -> main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40: tmp%0#0
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init f-stack entry: ['aggregate%encoded_element%3#0', 'dyn_arr#1', 'last_point.x#0', 'slot%0', 'slot%3', 'slot%5', 'slot%6', 'slot%7', 'slot%8', 'aggregate%array_len%0#0', 'aggregate%array_len%10#0', 'aggregate%array_len%12#0', 'aggregate%array_length%1#0', 'aggregate%bytes_len%8#0', 'count#0', 'count#13', 'dx#0', 'i#0', 'item_index_internal%0#0', 'last_point.y#0', 'length#0', 'point.y#0', 'point_idx#0', 'tmp%2#2', 'total#0']
debug: test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init f-stack on first store: []
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
array/static_size.py:123 debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes, bytes:
array/static_size.py:134 debug: optimizing TEAL subroutine ops test_cases.array.static_size.StaticSizeContract.more() -> bytes:
debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: replacing `b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_call___init__@1 into main
debug: inlining single reference block main_abi_routing@4 into main_after_if_else@2
debug: inlining single reference block main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@40 into main_after_if_else@39
debug: inlining single reference block main_for_body@35 into main_for_header@34
debug: inlining single reference block main_for_body@31 into main_for_header@30
debug: inlining single reference block main_for_body@22 into main_for_header@21
debug: inlining single reference block main_for_body@25 into main_for_header@24
debug: inlining single reference block main_if_body@26 into main_for_header@24
debug: inlining single reference block main_for_body@13 into main_for_header@12
debug: inlining single reference block main_for_body@16 into main_for_header@15
debug: inlining single reference block main_if_body@17 into main_for_header@15
debug: inlining single reference block main_for_body@7 into main_for_header@6
debug: inlining single reference block main_for_body@43 into main_for_header@42
debug: inlining single reference block main_if_body@44 into main_for_header@42
debug: inlining single reference block main_if_body@47 into main_after_if_else@46
debug: inlining single reference block main___algopy_default_create@38 into main_bare_routing@37
debug: removing explicit jump to fall-through block main_after_if_else@2
debug: removing explicit jump to fall-through block main_after_if_else@39
debug: removing explicit jump to fall-through block main_for_header@34
debug: removing explicit jump to fall-through block main_for_header@30
debug: removing explicit jump to fall-through block main_for_header@21
debug: removing explicit jump to fall-through block main_for_header@24
debug: removing explicit jump to fall-through block main_after_if_else@27
debug: removing explicit jump to fall-through block main_for_header@12
debug: removing explicit jump to fall-through block main_for_header@15
debug: removing explicit jump to fall-through block main_after_if_else@18
debug: removing explicit jump to fall-through block main_for_header@6
debug: removing explicit jump to fall-through block main_for_header@42
debug: removing explicit jump to fall-through block main_after_if_else@46
debug: removing explicit jump to fall-through block main_after_if_else@49
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_bits_block@0 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_if_body@1 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_while_body@4 into dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
array/static_size.py:123 debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes, bytes:
debug: inlining single reference block xtra_block@0 into xtra
array/static_size.py:134 debug: optimizing TEAL subroutine blocks test_cases.array.static_size.StaticSizeContract.more() -> bytes:
debug: inlining single reference block more_block@0 into more
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: marking single-use function _puya_lib.arc4.dynamic_array_pop_bit for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_dynamic_element for inlining
debug: marking single-use function _puya_lib.arc4.static_array_replace_byte_length_head for inlining
debug: marking single-use function test_cases.array.immutable.pop_x for inlining
debug: marking single-use function test_cases.array.immutable.add_xb for inlining
debug: marking single-use function test_cases.array.immutable.sum_arr for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_biguint_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_nested_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4 for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (== tmp%24#0 NoOp) to (! tmp%24#0)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%47#0 NoOp) to (! tmp%47#0)
debug: Simplified (== tmp%51#0 NoOp) to (! tmp%51#0)
debug: Simplified (== tmp%61#0 NoOp) to (! tmp%61#0)
debug: Simplified (== tmp%68#0 NoOp) to (! tmp%68#0)
debug: Simplified (== tmp%75#0 NoOp) to (! tmp%75#0)
debug: Simplified (== tmp%82#0 NoOp) to (! tmp%82#0)
debug: Simplified (== tmp%89#0 NoOp) to (! tmp%89#0)
debug: Simplified (== tmp%96#0 NoOp) to (! tmp%96#0)
debug: Simplified (== tmp%102#0 NoOp) to (! tmp%102#0)
debug: Simplified (== tmp%110#0 NoOp) to (! tmp%110#0)
debug: Simplified (== tmp%116#0 NoOp) to (! tmp%116#0)
debug: Simplified (== tmp%124#0 NoOp) to (! tmp%124#0)
debug: Simplified (== tmp%130#0 NoOp) to (! tmp%130#0)
debug: Simplified (== tmp%136#0 NoOp) to (! tmp%136#0)
debug: Simplified (== tmp%143#0 0u) to (! tmp%143#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@29 from switch tmp%142#0 {0u => block@30, * => block@31} to goto_nth [block@30][tmp%142#0] else goto block@31
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@29 from goto_nth [block@30][tmp%142#0] else goto block@31 to goto tmp%142#0 ? block@31 : block@30
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@29
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@28 with block@27 in block@33
debug: Merged linear block@28 into block@27
debug: Replaced predecessor block@32 with block@31 in block@33
debug: Merged linear block@32 into block@31
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@27
debug: Removed empty block: block@31
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%5#0, popped_location#0
debug: selected popped_location#0 from equivalence set
debug: Found equivalence set: tmp%6#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%7#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%11#0, result#2
debug: selected result#2 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, item_location#0
debug: selected item_location#0 from equivalence set
debug: Found equivalence set: tmp%7#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%8#0, result#1
debug: selected result#1 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, length_minus_1#0
debug: selected length_minus_1#0 from equivalence set
debug: Found equivalence set: tmp%2#0, popped_header_offset#0
debug: selected popped_header_offset#0 from equivalence set
debug: Found equivalence set: tmp%3#0, head_and_tail#0
debug: selected head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%4#0, popped_offset#0
debug: selected popped_offset#0 from equivalence set
debug: Found equivalence set: tmp%6#0, popped#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: tmp%8#0, item_offset#0
debug: selected item_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, item_offset#1
debug: selected item_offset#1 from equivalence set
debug: Found equivalence set: tmp%12#0, new_head#2
debug: selected new_head#2 from equivalence set
debug: Found equivalence set: tmp%18#0, updated#0
debug: selected updated#0 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%7#0: uint64 = (* length_minus_1#0 2u) with copy of existing registers (Register(source_location=INTERNAL:103:4-24, ir_type=uint64, name='popped_header_offset', version=0),)
debug: Found equivalence set: popped_header_offset#0, tmp%7#0
debug: selected popped_header_offset#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_array_length#0
debug: selected new_array_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, new_array_length_b#0
debug: selected new_array_length_b#0 from equivalence set
debug: Found equivalence set: tmp%4#0, result#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: tmp%6#0, current_bytes#0
debug: selected current_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, required_bytes#0
debug: selected required_bytes#0 from equivalence set
debug: Found equivalence set: tmp%12#0, result#1
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%13#0, write_offset#0
debug: selected write_offset#0 from equivalence set
debug: Found equivalence set: tmp%14#0, write_end#0
debug: selected write_end#0 from equivalence set
debug: Found equivalence set: tmp%17#0, result#3
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%18#0, write_offset#2
debug: selected write_offset#2 from equivalence set
debug: Found equivalence set: tmp%19#0, read_offset#2
debug: selected read_offset#2 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%1#0, new_length#0
debug: selected new_length#0 from equivalence set
debug: Found equivalence set: tmp%3#0, header_end#0
debug: selected header_end#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, item_offset_adjustment#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%2#0, item_offset#0
debug: selected item_offset#0 from equivalence set
debug: Found equivalence set: tmp%6#0, new_head#2
debug: selected new_head#2 from equivalence set
debug: Found equivalence set: tmp%7#0, item_offset_adjustment#2
debug: selected item_offset_adjustment#2 from equivalence set
debug: Found equivalence set: tmp%9#0, item_offset#1
debug: selected item_offset#1 from equivalence set
debug: Found equivalence set: tmp%13#0, new_head#4
debug: selected new_head#4 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:202:4-26, ir_type=uint64, name='item_offset_adjustment', version=0),)
debug: Replacing redundant declaration let tmp%18#0: uint64 = (* array_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:203:33-64, ir_type=uint64, name='tmp%1', version=0),)
debug: Replacing redundant declaration let tmp%19#0: uint64 = (len array_head_and_tail#0) with copy of existing registers (Register(source_location=INTERNAL:207:4-26, ir_type=uint64, name='item_offset_adjustment', version=2),)
debug: Replacing redundant declaration let tmp%22#0: uint64 = (* new_items_count#0 2u) with copy of existing registers (Register(source_location=INTERNAL:208:33-62, ir_type=uint64, name='tmp%8', version=0),)
debug: Found equivalence set: item_offset_adjustment#0, tmp%8#0, tmp%22#0
debug: selected item_offset_adjustment#0 from equivalence set
debug: Found equivalence set: tmp%1#0, tmp%18#0
debug: selected tmp%1#0 from equivalence set
debug: Found equivalence set: item_offset_adjustment#2, tmp%19#0
debug: selected item_offset_adjustment#2 from equivalence set
debug: Copy propagation made 4 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_byte_length_head in _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%2#1, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#1, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%3#0
debug: selected tmp%11#0 from equivalence set
debug: Copy propagation made 13 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@2 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.static_array_replace_dynamic_element in _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, size_b#0
debug: selected size_b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, array_length#0, array_length#1
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: tmp%2#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_item#0, new_item#1
debug: selected new_item#0 from equivalence set
debug: Found equivalence set: index#0, index#1
debug: selected index#0 from equivalence set
debug: Found equivalence set: tmp%1#1, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#1, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Found equivalence set: new_head_and_tail#1, tmp%3#0
debug: selected new_head_and_tail#1 from equivalence set
debug: Copy propagation made 26 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@4 with block@3 in block@2
debug: Merged linear block@4 into block@3
debug: Merged linear block@6 into block@5
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=1),)
debug: Found equivalence set: tmp%2#1, tmp%16#0
debug: selected tmp%2#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#1 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=1),)
debug: Found equivalence set: tmp%3#1, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, original_offset#0
debug: selected original_offset#0 from equivalence set
debug: Found equivalence set: tmp%4#0, next_item_offset#0
debug: selected next_item_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, end_of_tail#0
debug: selected end_of_tail#0 from equivalence set
debug: Found equivalence set: tmp%7#0, is_before_end#0
debug: selected is_before_end#0 from equivalence set
debug: Found equivalence set: tmp%8#0, end_offset#0
debug: selected end_offset#0 from equivalence set
debug: Found equivalence set: tmp%9#0, original_item_length#0
debug: selected original_item_length#0 from equivalence set
debug: Found equivalence set: tmp%10#0, new_item_length#0
debug: selected new_item_length#0 from equivalence set
debug: Found equivalence set: tmp%14#0, new_head_and_tail#0
debug: selected new_head_and_tail#0 from equivalence set
debug: Found equivalence set: tmp%17#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%19#0, tail_offset#1
debug: selected tail_offset#1 from equivalence set
debug: Found equivalence set: tmp%20#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%22#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%23#0, new_head_and_tail#2
debug: selected new_head_and_tail#2 from equivalence set
debug: Copy propagation made 14 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%16#0: uint64 = (+ index#0 1u) with copy of existing registers (Register(source_location=INTERNAL:261:60-69, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, tmp%16#0
debug: selected tmp%2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let head_offset#0: uint64 = (* tmp%2#0 2u) with copy of existing registers (Register(source_location=INTERNAL:261:59-74, ir_type=uint64, name='tmp%3', version=0),)
debug: Found equivalence set: tmp%3#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%2#0, offset_for_index#0
debug: selected offset_for_index#0 from equivalence set
debug: Found equivalence set: tmp%3#0, old_item_length#0
debug: selected old_item_length#0 from equivalence set
debug: Found equivalence set: tmp%5#0, old_item_end#0
debug: selected old_item_end#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%3#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Found equivalence set: tmp%5#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Found equivalence set: tmp%7#0, tail_offset_bytes#0
debug: selected tail_offset_bytes#0 from equivalence set
debug: Found equivalence set: tmp%8#0, array_head_and_tail#2
debug: selected array_head_and_tail#2 from equivalence set
debug: Found equivalence set: tmp%11#0, tail_offset#2
debug: selected tail_offset#2 from equivalence set
debug: Found equivalence set: tmp%12#0, head_offset#2
debug: selected head_offset#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable head_offset#2
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%4#0: uint64 = (* length#0 2u) with copy of existing registers (Register(source_location=INTERNAL:326:8-28, ir_type=uint64, name='tmp%0', version=0),)
debug: Replacing redundant declaration let head_offset#0: uint64 = (* start_at_index#0 2u) with copy of existing registers (Register(source_location=INTERNAL:327:44-72, ir_type=uint64, name='tmp%1', version=0),)
debug: Found equivalence set: tmp%0#0, tmp%4#0
debug: selected tmp%0#0 from equivalence set
debug: Found equivalence set: tmp%1#0, head_offset#0
debug: selected head_offset#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, item#0
debug: selected item#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Found equivalence set: tmp%1#0, total#3
debug: selected total#3 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
array/immutable.py:483:18 debug: replacing extract_value(item#0, 0) with extract_value(arr#0, item_index_internal%0#1, 0)
array/immutable.py:484:18 debug: replacing extract_value(item#0, 1) with extract_value(arr#0, item_index_internal%0#1, 1)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, result#2
debug: selected result#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.pop_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%1#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_xb
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint512[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%0#0, total#2
debug: selected total#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:450:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:444:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4 in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:438:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:430:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:422:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:414:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:406:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:396:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:389:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:382:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_tuple_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:375:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:368:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_return in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:341:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:276:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:258:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_nested_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:254:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:250:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:231:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:212:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:197:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:179:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:155:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:130:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_biguint_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
array/immutable.py:94:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_array in test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#18, arr#49
debug: selected arr#49 from equivalence set
debug: Found equivalence set: replace%0#9, as_Encoded(len+uint64[])%0#4, arr#50
debug: selected arr#50 from equivalence set
debug: Found equivalence set: tmp%8#10, arr#51
debug: selected arr#51 from equivalence set
debug: Found equivalence set: replace%1#3, as_Encoded(len+uint64[])%1#1, arr#52
debug: selected arr#52 from equivalence set
debug: Found equivalence set: tmp%21#7, arr#53
debug: selected arr#53 from equivalence set
debug: Found equivalence set: tmp%27#4, arr#54
debug: selected arr#54 from equivalence set
debug: Found equivalence set: replace%2#2, as_Encoded(len+uint64[])%2#0, arr#55
debug: selected arr#55 from equivalence set
debug: Found equivalence set: updated_array%0#2, arr#56
debug: selected arr#56 from equivalence set
debug: Found equivalence set: encoded_array%0#17, arr#44
debug: selected arr#44 from equivalence set
debug: Found equivalence set: replace%0#8, as_Encoded(len+uint512[])%0#0, arr#45
debug: selected arr#45 from equivalence set
debug: Found equivalence set: tmp%11#7, arr#46
debug: selected arr#46 from equivalence set
debug: Found equivalence set: replace%1#2, as_Encoded(len+uint512[])%1#0, arr#47
debug: selected arr#47 from equivalence set
debug: Found equivalence set: replace%2#1, as_Encoded(len+uint512[])%2#0, arr#48
debug: selected arr#48 from equivalence set
debug: Found equivalence set: tmp%15#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: encoded_array%0#16, arr#36
debug: selected arr#36 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#1, arr#38
debug: selected arr#38 from equivalence set
debug: Found equivalence set: tmp%17#6, arr#43
debug: selected arr#43 from equivalence set
debug: Found equivalence set: encoded_array%0#15, arr#32
debug: selected arr#32 from equivalence set
debug: Found equivalence set: replace%0#7, as_Encoded(len+(uint64,uint64)[])%0#0, arr#34
debug: selected arr#34 from equivalence set
debug: Found equivalence set: tmp%16#5, arr#35
debug: selected arr#35 from equivalence set
debug: Found equivalence set: encoded_array%0#14, arr#29
debug: selected arr#29 from equivalence set
debug: Found equivalence set: replace%0#6, as_Encoded(len+(uint64,bool1,bool1)[])%0#1, arr#31
debug: selected arr#31 from equivalence set
debug: Found equivalence set: values%0#3, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: values%1#3, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: values%2#3, baz#0
debug: selected baz#0 from equivalence set
debug: Found equivalence set: encoded_array%0#13, arr#24
debug: selected arr#24 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+uint8[]))[])%0#0, arr#26
debug: selected arr#26 from equivalence set
debug: Found equivalence set: tmp%12#4, arr#28
debug: selected arr#28 from equivalence set
debug: Found equivalence set: encoded_array%0#12, arr#19
debug: selected arr#19 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#2, arr#21
debug: selected arr#21 from equivalence set
debug: Found equivalence set: tmp%12#3, arr#23
debug: selected arr#23 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%0#0, arr#18
debug: selected arr#18 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%1#0, arr#17
debug: selected arr#17 from equivalence set
debug: Found equivalence set: tmp%44#0, arr_to_add#0
debug: selected arr_to_add#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(len+uint64[])[])%0#0, arr#13
debug: selected arr#13 from equivalence set
debug: Found equivalence set: encoded_array%0#11, extra_arr#0
debug: selected extra_arr#0 from equivalence set
debug: Found equivalence set: replace%0#5, as_Encoded(len+uint64[])%0#3, extra_arr#2
debug: selected extra_arr#2 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint64[])[])%0#0, arr#16
debug: selected arr#16 from equivalence set
debug: Found equivalence set: encoded_array%1#2, totals#0
debug: selected totals#0 from equivalence set
debug: Found equivalence set: array_length%0#2, reverse_index_internal%0#2
debug: selected array_length%0#2 from equivalence set
debug: Found equivalence set: array_item%0#3, inner_arr#0
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: replace%1#1, as_Encoded(len+uint64[])%1#0, totals#2
debug: selected totals#2 from equivalence set
debug: Found equivalence set: totals#1, tmp%45#0
debug: selected totals#1 from equivalence set
debug: Found equivalence set: encoded_array%0#10, arr2#2
debug: selected arr2#2 from equivalence set
debug: Found equivalence set: encoded_array%1#1, arr7#0
debug: selected arr7#0 from equivalence set
debug: Found equivalence set: encoded_array%2#0, arr8#0
debug: selected arr8#0 from equivalence set
debug: Found equivalence set: encoded_array%3#0, arr9#0
debug: selected arr9#0 from equivalence set
debug: Found equivalence set: replace%0#4, as_Encoded(len+(bool1,bool1)[])%0#0, arr2#4
debug: selected arr2#4 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr7#2
debug: selected arr7#2 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr8#2
debug: selected arr8#2 from equivalence set
debug: Found equivalence set: replace%3#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr9#2
debug: selected arr9#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%2#0, arr1#3
debug: selected arr1#3 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+bool1[])%0#0, arr2#1
debug: selected arr2#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr3#1
debug: selected arr3#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0, arr4#0
debug: selected arr4#0 from equivalence set
debug: Found equivalence set: array_length%0#1, reverse_index_internal%0#1
debug: selected array_length%0#1 from equivalence set
debug: Found equivalence set: values%0#0, i#18
debug: selected i#18 from equivalence set
debug: Found equivalence set: tmp%0#12, sum1#2
debug: selected sum1#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%1#9, sum2#2
debug: selected sum2#2 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: values%2#0, tup.foo#0
debug: selected tup.foo#0 from equivalence set
debug: Found equivalence set: values%3#0, tup.bar#0
debug: selected tup.bar#0 from equivalence set
debug: Found equivalence set: values%4#0, tup.baz#0
debug: selected tup.baz#0 from equivalence set
debug: Found equivalence set: tmp%2#6, sum3#2
debug: selected sum3#2 from equivalence set
debug: Found equivalence set: tmp%3#5, sum3#3
debug: selected sum3#3 from equivalence set
debug: Found equivalence set: tmp%4#4, sum3#5
debug: selected sum3#5 from equivalence set
debug: Found equivalence set: array_length%3#0, reverse_index_internal%3#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: values%5#0, dyn_tup.foo#0
debug: selected dyn_tup.foo#0 from equivalence set
debug: Found equivalence set: values%6#0, dyn_tup.bar#0
debug: selected dyn_tup.bar#0 from equivalence set
debug: Found equivalence set: item_index_internal%3#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: tmp%5#3, sum4#2
debug: selected sum4#2 from equivalence set
debug: Found equivalence set: tmp%7#2, sum4#3
debug: selected sum4#3 from equivalence set
debug: Found equivalence set: sum1#1, tmp%55#0
debug: selected sum1#1 from equivalence set
debug: Found equivalence set: sum2#1, tmp%56#0
debug: selected sum2#1 from equivalence set
debug: Found equivalence set: sum3#1, tmp%57#0
debug: selected sum3#1 from equivalence set
debug: Found equivalence set: sum4#1, tmp%58#0
debug: selected sum4#1 from equivalence set
debug: Found equivalence set: tmp%65#0, append#4
debug: selected append#4 from equivalence set
debug: Found equivalence set: encoded_array%0#9, arr#10
debug: selected arr#10 from equivalence set
debug: Found equivalence set: replace%0#3, as_Encoded(len+uint64[])%0#2, arr#12
debug: selected arr#12 from equivalence set
debug: Found equivalence set: arr#11, tmp%66#0
debug: selected arr#11 from equivalence set
debug: Found equivalence set: tmp%72#0, append#3
debug: selected append#3 from equivalence set
debug: Found equivalence set: encoded_array%0#8, arr#7
debug: selected arr#7 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, arr#9
debug: selected arr#9 from equivalence set
debug: Found equivalence set: arr#8, tmp%73#0
debug: selected arr#8 from equivalence set
debug: Found equivalence set: tmp%79#0, append#2
debug: selected append#2 from equivalence set
debug: Found equivalence set: encoded_array%0#7, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: replace%0#2, as_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr#6
debug: selected arr#6 from equivalence set
debug: Found equivalence set: arr#5, tmp%80#0
debug: selected arr#5 from equivalence set
debug: Found equivalence set: tmp%86#0, append#1
debug: selected append#1 from equivalence set
debug: Found equivalence set: encoded_array%0#6, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#1, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: arr#2, tmp%87#0
debug: selected arr#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%93#0, append#0
debug: selected append#0 from equivalence set
debug: Found equivalence set: slot%0#0, mutable#0
debug: selected mutable#0 from equivalence set
debug: Found equivalence set: converted_array%0#0, tmp%94#0
debug: selected converted_array%0#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: encoded_array%0#4, prefix#3
debug: selected prefix#3 from equivalence set
debug: Found equivalence set: replace%0#1, as_Encoded(len+uint64[])%0#1, result#3, tmp%100#0
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%106#0, arg.0#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: tmp%107#0, arg.1#1
debug: selected arg.1#1 from equivalence set
debug: Found equivalence set: encoded_array%0#3, prefix#2
debug: selected prefix#2 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, result#2, tmp%108#0
debug: selected result#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: encoded_array%0#2, prefix#1
debug: selected prefix#1 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#1, result#1, tmp%114#0
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%120#0, arg.0#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: tmp%121#0, arg.1#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: encoded_array%0#1, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, result#0, tmp%122#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0, imm1#0
debug: selected imm1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%2#0, imm2#0
debug: selected imm2#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#0, tmp%128#0
debug: selected as_Encoded(len+(uint64,(len+utf8[]))[])%0#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,uint64)[])%0#0, imm#0
debug: selected imm#0 from equivalence set
debug: Found equivalence set: updated_array%0#1, imm#1, tmp%134#0
debug: selected imm#1 from equivalence set
debug: Found equivalence set: tmp%0#1, arr1#0
debug: selected arr1#0 from equivalence set
debug: Found equivalence set: tmp%5#1, struct12#0
debug: selected struct12#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arr3#0
debug: selected arr3#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, arr1#2
debug: selected arr1#2 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, struct_it#0
debug: selected struct_it#0 from equivalence set
debug: Found equivalence set: arr1#1, mut_arr#0
debug: selected arr1#1 from equivalence set
debug: Found equivalence set: updated_array%1#0, mut_arr#1
debug: selected mut_arr#1 from equivalence set
debug: Found equivalence set: maybe_value%1#0, tmp%140#0
debug: selected maybe_value%1#0 from equivalence set
debug: Copy propagation made 132 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%18#6
debug: Removing unused variable tmp%17#5
debug: Removing unused variable tmp%18#5
debug: Removing unused variable tmp%13#4
debug: Removing unused variable tmp%14#4
debug: Removing unused variable tmp%13#3
debug: Removing unused variable tmp%14#3
debug: Removing unused variable tmp%11#1
debug: Removing unused variable tmp%12#1
debug: Removing unused variable tmp%16#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%0#22 0u) to (! tmp%0#22)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%0#21 0u) to (! tmp%0#21)
debug: Simplified (== tmp%11#0 NoOp) to (! tmp%11#0)
debug: Simplified (== tmp%0#20 0u) to (! tmp%0#20)
debug: Simplified (== tmp%16#0 NoOp) to (! tmp%16#0)
debug: Simplified (== tmp%0#19 0u) to (! tmp%0#19)
debug: Simplified (== tmp%20#0 NoOp) to (! tmp%20#0)
debug: Simplified (== tmp%0#18 0u) to (! tmp%0#18)
debug: Simplified (== tmp%2#11 0u) to (! tmp%2#11)
debug: Simplified (== tmp%5#7 0u) to (! tmp%5#7)
debug: Simplified (== foo#0 0u) to (! foo#0)
debug: Simplified (== tmp%24#0 NoOp) to (! tmp%24#0)
debug: Simplified (== tmp%0#17 0u) to (! tmp%0#17)
debug: Simplified (== tmp%28#0 NoOp) to (! tmp%28#0)
debug: Simplified (== tmp%0#16 0u) to (! tmp%0#16)
debug: Simplified (== tmp%32#0 NoOp) to (! tmp%32#0)
debug: Simplified (== tmp%36#0 NoOp) to (! tmp%36#0)
debug: Simplified (== tmp%40#0 NoOp) to (! tmp%40#0)
debug: Simplified (== tmp%47#0 NoOp) to (! tmp%47#0)
debug: Simplified (== tmp%0#13 0u) to (! tmp%0#13)
debug: Simplified (== tmp%2#7 0u) to (! tmp%2#7)
debug: Simplified (== tmp%4#5 0u) to (! tmp%4#5)
debug: Simplified (== tmp%6#3 0u) to (! tmp%6#3)
debug: Simplified (== i#20 0u) to (! i#20)
debug: Simplified (== i#20 0u) to (! i#20)
debug: Simplified (== i#20 0u) to (! i#20)
debug: Simplified (== i#20 0u) to (! i#20)
debug: Simplified (== tmp%51#0 NoOp) to (! tmp%51#0)
debug: Simplified (== tmp%61#0 NoOp) to (! tmp%61#0)
debug: Simplified (== tmp%68#0 NoOp) to (! tmp%68#0)
debug: Simplified (== tmp%0#10 0u) to (! tmp%0#10)
debug: Simplified (== tmp%75#0 NoOp) to (! tmp%75#0)
debug: Simplified (== tmp%0#9 0u) to (! tmp%0#9)
debug: Simplified (== tmp%2#4 0u) to (! tmp%2#4)
debug: Simplified (== tmp%82#0 NoOp) to (! tmp%82#0)
debug: Simplified (== tmp%89#0 NoOp) to (! tmp%89#0)
debug: Simplified (== tmp%0#7 0u) to (! tmp%0#7)
debug: Simplified (== tmp%2#3 0u) to (! tmp%2#3)
debug: Simplified (== tmp%96#0 NoOp) to (! tmp%96#0)
debug: Simplified (== tmp%102#0 NoOp) to (! tmp%102#0)
debug: Simplified (== tmp%110#0 NoOp) to (! tmp%110#0)
debug: Simplified (* 2u 2u) to 4u
debug: Simplified (== tmp%116#0 NoOp) to (! tmp%116#0)
debug: Simplified (concat 0x arg.0#0) to arg.0#0
debug: Simplified (== tmp%124#0 NoOp) to (! tmp%124#0)
debug: Simplified (== tmp%130#0 NoOp) to (! tmp%130#0)
debug: Simplified (== tmp%136#0 NoOp) to (! tmp%136#0)
debug: Simplified (== tmp%143#0 0u) to (! tmp%143#0)
debug: Simplified (replace3 concat%0#11 0u as_u16_bytes%0#10) to ((replace2 0) concat%0#11 as_u16_bytes%0#10)
debug: Simplified (replace3 concat%1#5 0u as_u16_bytes%1#3) to ((replace2 0) concat%1#5 as_u16_bytes%1#3)
debug: Simplified (replace3 concat%2#2 0u as_u16_bytes%2#2) to ((replace2 0) concat%2#2 as_u16_bytes%2#2)
debug: Simplified (replace3 concat%0#10 0u as_u16_bytes%0#9) to ((replace2 0) concat%0#10 as_u16_bytes%0#9)
debug: Simplified (replace3 concat%1#4 0u as_u16_bytes%1#2) to ((replace2 0) concat%1#4 as_u16_bytes%1#2)
debug: Simplified (replace3 concat%2#1 0u as_u16_bytes%2#1) to ((replace2 0) concat%2#1 as_u16_bytes%2#1)
debug: Simplified (replace3 concat%0#9 0u as_u16_bytes%0#8) to ((replace2 0) concat%0#9 as_u16_bytes%0#8)
debug: Simplified (replace3 concat%0#8 0u as_u16_bytes%0#7) to ((replace2 0) concat%0#8 as_u16_bytes%0#7)
debug: Simplified (replace3 concat%0#7 0u as_u16_bytes%0#6) to ((replace2 0) concat%0#7 as_u16_bytes%0#6)
debug: Simplified (replace3 concat%1#3 0u as_u16_bytes%1#1) to ((replace2 0) concat%1#3 as_u16_bytes%1#1)
debug: Simplified (replace3 concat%0#6 0u as_u16_bytes%0#5) to ((replace2 0) concat%0#6 as_u16_bytes%0#5)
debug: Simplified (replace3 concat%1#2 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#2 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%3#0) to ((replace2 0) concat%3#0 as_u16_bytes%3#0)
debug: Simplified (replace3 concat%0#5 0u as_u16_bytes%0#4) to ((replace2 0) concat%0#5 as_u16_bytes%0#4)
debug: Simplified (replace3 concat%0#4 0u as_u16_bytes%0#3) to ((replace2 0) concat%0#4 as_u16_bytes%0#3)
debug: Simplified (replace3 concat%0#2 0u as_u16_bytes%0#1) to ((replace2 0) concat%0#2 as_u16_bytes%0#1)
debug: Simplified (replace3 concat%0#1 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#1 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@28 from switch tmp%142#0 {0u => block@29, * => block@30} to goto_nth [block@29][tmp%142#0] else goto block@30
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@28 from goto_nth [block@29][tmp%142#0] else goto block@30 to goto tmp%142#0 ? block@30 : block@29
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@185 with block@2 in block@186
debug: Merged linear block@185 into block@2
debug: Merged linear block@186 into block@2
debug: Replaced predecessor block@183 with block@3 in block@184
debug: Merged linear block@183 into block@3
debug: Merged linear block@184 into block@3
debug: Replaced predecessor block@167 with block@4 in block@168
debug: Merged linear block@167 into block@4
debug: Replaced predecessor block@170 with block@169 in block@168
debug: Merged linear block@170 into block@169
debug: Merged linear block@182 into block@181
debug: Replaced predecessor block@161 with block@5 in block@162
debug: Merged linear block@161 into block@5
debug: Replaced predecessor block@164 with block@163 in block@162
debug: Merged linear block@164 into block@163
debug: Merged linear block@166 into block@165
debug: Replaced predecessor block@155 with block@6 in block@156
debug: Merged linear block@155 into block@6
debug: Replaced predecessor block@158 with block@157 in block@156
debug: Merged linear block@158 into block@157
debug: Merged linear block@160 into block@159
debug: Replaced predecessor block@145 with block@7 in block@146
debug: Merged linear block@145 into block@7
debug: Replaced predecessor block@148 with block@147 in block@146
debug: Merged linear block@148 into block@147
debug: Replaced predecessor block@152 with block@151 in block@150
debug: Merged linear block@152 into block@151
debug: Merged linear block@154 into block@153
debug: Replaced predecessor block@135 with block@8 in block@136
debug: Merged linear block@135 into block@8
debug: Replaced predecessor block@138 with block@137 in block@136
debug: Merged linear block@138 into block@137
debug: Replaced predecessor block@142 with block@141 in block@140
debug: Merged linear block@142 into block@141
debug: Merged linear block@144 into block@143
debug: Replaced predecessor block@133 with block@9 in block@134
debug: Merged linear block@133 into block@9
debug: Merged linear block@134 into block@9
debug: Replaced predecessor block@131 with block@10 in block@132
debug: Merged linear block@131 into block@10
debug: Merged linear block@132 into block@10
debug: Replaced predecessor block@117 with block@11 in block@118
debug: Merged linear block@117 into block@11
debug: Replaced predecessor block@122 with block@121 in block@120
debug: Merged linear block@122 into block@121
debug: Replaced predecessor block@124 with block@123 in block@118
debug: Merged linear block@124 into block@123
debug: Replaced predecessor block@128 with block@127 in block@126
debug: Merged linear block@128 into block@127
debug: Merged linear block@130 into block@129
debug: Replaced predecessor block@111 with block@12 in block@112
debug: Merged linear block@111 into block@12
debug: Replaced predecessor block@114 with block@113 in block@112
debug: Merged linear block@114 into block@113
debug: Merged linear block@116 into block@115
debug: Replaced predecessor block@87 with block@13 in block@88
debug: Merged linear block@87 into block@13
debug: Replaced predecessor block@90 with block@89 in block@88
debug: Merged linear block@90 into block@89
debug: Replaced predecessor block@96 with block@95 in block@92
debug: Merged linear block@96 into block@95
debug: Replaced predecessor block@104 with block@103 in block@98
debug: Merged linear block@104 into block@103
debug: Replaced predecessor block@108 with block@107 in block@106
debug: Merged linear block@108 into block@107
debug: Merged linear block@110 into block@109
debug: Replaced predecessor block@81 with block@14 in block@82
debug: Merged linear block@81 into block@14
debug: Replaced predecessor block@84 with block@83 in block@82
debug: Merged linear block@84 into block@83
debug: Merged linear block@86 into block@85
debug: Replaced predecessor block@75 with block@15 in block@76
debug: Merged linear block@75 into block@15
debug: Replaced predecessor block@78 with block@77 in block@76
debug: Merged linear block@78 into block@77
debug: Merged linear block@80 into block@79
debug: Replaced predecessor block@69 with block@16 in block@70
debug: Merged linear block@69 into block@16
debug: Replaced predecessor block@72 with block@71 in block@70
debug: Merged linear block@72 into block@71
debug: Merged linear block@74 into block@73
debug: Replaced predecessor block@63 with block@17 in block@64
debug: Merged linear block@63 into block@17
debug: Replaced predecessor block@66 with block@65 in block@64
debug: Merged linear block@66 into block@65
debug: Merged linear block@68 into block@67
debug: Replaced predecessor block@57 with block@18 in block@58
debug: Merged linear block@57 into block@18
debug: Replaced predecessor block@60 with block@59 in block@58
debug: Merged linear block@60 into block@59
debug: Merged linear block@62 into block@61
debug: Replaced predecessor block@55 with block@19 in block@56
debug: Merged linear block@55 into block@19
debug: Merged linear block@56 into block@19
debug: Replaced predecessor block@53 with block@20 in block@54
debug: Merged linear block@53 into block@20
debug: Merged linear block@54 into block@20
debug: Replaced predecessor block@51 with block@21 in block@52
debug: Merged linear block@51 into block@21
debug: Merged linear block@52 into block@21
debug: Replaced predecessor block@49 with block@22 in block@50
debug: Merged linear block@49 into block@22
debug: Merged linear block@50 into block@22
debug: Replaced predecessor block@47 with block@23 in block@48
debug: Merged linear block@47 into block@23
debug: Merged linear block@48 into block@23
debug: Replaced predecessor block@45 with block@24 in block@46
debug: Merged linear block@45 into block@24
debug: Merged linear block@46 into block@24
debug: Replaced predecessor block@35 with block@25 in block@36
debug: Merged linear block@35 into block@25
debug: Replaced predecessor block@38 with block@37 in block@36
debug: Merged linear block@38 into block@37
debug: Replaced predecessor block@42 with block@41 in block@40
debug: Merged linear block@42 into block@41
debug: Merged linear block@44 into block@43
debug: Replaced predecessor block@27 with block@26 in block@32
debug: Merged linear block@27 into block@26
debug: Replaced predecessor block@33 with block@29 in block@34
debug: Merged linear block@33 into block@29
debug: Merged linear block@34 into block@29
debug: Replaced predecessor block@31 with block@30 in block@32
debug: Merged linear block@31 into block@30
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@26
debug: Removed empty block: block@30
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#42: uint64 = (+ i#41 1u) with copy of existing registers (Register(source_location=array/immutable.py:185:30-35, ir_type=uint64, name='tmp%2', version=12),)
debug: Replacing redundant declaration let i#33: uint64 = (+ i#32 1u) with copy of existing registers (Register(source_location=array/immutable.py:218:30-35, ir_type=uint64, name='tmp%2', version=10),)
debug: Replacing redundant declaration let array_item%1#2: Encoded(uint64,(len+uint8[])) = extract_value(arr#25, i#35) with copy of existing registers (Register(source_location=array/immutable.py:222:19-25, ir_type=Encoded(uint64,(len+uint8[])), name='array_item%0', version=5),)
debug: Replacing redundant declaration let i#36: uint64 = (+ i#35 1u) with copy of existing registers (Register(source_location=array/immutable.py:222:32-37, ir_type=uint64, name='tmp%7', version=5),)
debug: Replacing redundant declaration let i#27: uint64 = (+ i#26 1u) with copy of existing registers (Register(source_location=array/immutable.py:237:53-58, ir_type=uint64, name='tmp%2', version=9),)
debug: Replacing redundant declaration let array_item%1#1: Encoded(uint64,(len+utf8[])) = extract_value(arr#20, i#29) with copy of existing registers (Register(source_location=array/immutable.py:241:19-25, ir_type=Encoded(uint64,(len+utf8[])), name='array_item%0', version=4),)
debug: Replacing redundant declaration let i#30: uint64 = (+ i#29 1u) with copy of existing registers (Register(source_location=array/immutable.py:241:32-37, ir_type=uint64, name='tmp%7', version=4),)
debug: Replacing redundant declaration let tmp%11#2: bool = (! i#20) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=3),)
debug: Replacing redundant declaration let tmp%12#2: bool = (== i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=3),)
debug: Replacing redundant declaration let tmp%20#1: bool = (! i#20) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=3),)
debug: Replacing redundant declaration let tmp%21#1: bool = (== i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=3),)
debug: Replacing redundant declaration let tmp%22#1: bool = (== i#20 2u) with copy of existing registers (Register(source_location=array/immutable.py:295:22-28, ir_type=bool, name='tmp%13', version=2),)
debug: Replacing redundant declaration let tmp%23#1: bool = (== i#20 3u) with copy of existing registers (Register(source_location=array/immutable.py:296:22-28, ir_type=bool, name='tmp%14', version=2),)
debug: Replacing redundant declaration let tmp%24#1: bool = (== i#20 4u) with copy of existing registers (Register(source_location=array/immutable.py:297:22-28, ir_type=bool, name='tmp%15', version=2),)
debug: Replacing redundant declaration let tmp%25#1: bool = (== i#20 5u) with copy of existing registers (Register(source_location=array/immutable.py:298:22-28, ir_type=bool, name='tmp%16', version=2),)
debug: Replacing redundant declaration let tmp%26#1: bool = (== i#20 6u) with copy of existing registers (Register(source_location=array/immutable.py:299:22-28, ir_type=bool, name='tmp%17', version=2),)
debug: Replacing redundant declaration let tmp%28#1: uint64 = (+ i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=2),)
debug: Replacing redundant declaration let tmp%30#1: bool = (! i#20) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=3),)
debug: Replacing redundant declaration let tmp%31#1: bool = (== i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=3),)
debug: Replacing redundant declaration let tmp%32#1: bool = (== i#20 2u) with copy of existing registers (Register(source_location=array/immutable.py:295:22-28, ir_type=bool, name='tmp%13', version=2),)
debug: Replacing redundant declaration let tmp%33#1: bool = (== i#20 3u) with copy of existing registers (Register(source_location=array/immutable.py:296:22-28, ir_type=bool, name='tmp%14', version=2),)
debug: Replacing redundant declaration let tmp%34#1: bool = (== i#20 4u) with copy of existing registers (Register(source_location=array/immutable.py:297:22-28, ir_type=bool, name='tmp%15', version=2),)
debug: Replacing redundant declaration let tmp%35#1: bool = (== i#20 5u) with copy of existing registers (Register(source_location=array/immutable.py:298:22-28, ir_type=bool, name='tmp%16', version=2),)
debug: Replacing redundant declaration let tmp%36#1: bool = (== i#20 6u) with copy of existing registers (Register(source_location=array/immutable.py:299:22-28, ir_type=bool, name='tmp%17', version=2),)
debug: Replacing redundant declaration let tmp%37#1: bool = (== i#20 7u) with copy of existing registers (Register(source_location=array/immutable.py:313:22-28, ir_type=bool, name='tmp%27', version=1),)
debug: Replacing redundant declaration let tmp%39#1: uint64 = (+ i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=2),)
debug: Replacing redundant declaration let i#21: uint64 = (+ i#20 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=2),)
debug: Replacing redundant declaration let tmp%8#2: uint64 = (len dyn_tup.bar#0) with copy of existing registers (Register(source_location=array/immutable.py:363:20-44, ir_type=uint64, name='tmp%6', version=2),)
debug: Replacing redundant declaration let arr3#0: Encoded((uint64,uint64)[3]) = bytes_encode<(uint64,uint64)[3]>(struct12#0, struct12#0, struct12#0) with copy of existing registers (Register(source_location=array/immutable.py:454:8-12, ir_type=Encoded((uint64,uint64)[3]), name='arr2', version=0),)
debug: Found equivalence set: tmp%2#12, i#42
debug: selected i#42 from equivalence set
debug: Found equivalence set: tmp%2#10, i#33
debug: selected i#33 from equivalence set
debug: Found equivalence set: array_item%0#5, array_item%1#2
debug: selected array_item%0#5 from equivalence set
debug: Found equivalence set: tmp%7#5, i#36
debug: selected i#36 from equivalence set
debug: Found equivalence set: tmp%2#9, i#27
debug: selected i#27 from equivalence set
debug: Found equivalence set: array_item%0#4, array_item%1#1
debug: selected array_item%0#4 from equivalence set
debug: Found equivalence set: tmp%7#4, i#30
debug: selected i#30 from equivalence set
debug: Found equivalence set: tmp%8#3, tmp%11#2, tmp%20#1, tmp%30#1
debug: selected tmp%8#3 from equivalence set
debug: Found equivalence set: tmp%9#3, tmp%12#2, tmp%21#1, tmp%31#1
debug: selected tmp%9#3 from equivalence set
debug: Found equivalence set: tmp%13#2, tmp%22#1, tmp%32#1
debug: selected tmp%13#2 from equivalence set
debug: Found equivalence set: tmp%14#2, tmp%23#1, tmp%33#1
debug: selected tmp%14#2 from equivalence set
debug: Found equivalence set: tmp%15#2, tmp%24#1, tmp%34#1
debug: selected tmp%15#2 from equivalence set
debug: Found equivalence set: tmp%16#2, tmp%25#1, tmp%35#1
debug: selected tmp%16#2 from equivalence set
debug: Found equivalence set: tmp%17#2, tmp%26#1, tmp%36#1
debug: selected tmp%17#2 from equivalence set
debug: Found equivalence set: tmp%18#2, tmp%28#1, tmp%39#1, i#21
debug: selected i#21 from equivalence set
debug: Found equivalence set: tmp%27#1, tmp%37#1
debug: selected tmp%27#1 from equivalence set
debug: Found equivalence set: tmp%6#2, tmp%8#2
debug: selected tmp%6#2 from equivalence set
debug: Found equivalence set: arg.0#0, concat%0#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: arr2#0, arr3#0
debug: selected arr2#0 from equivalence set
debug: Copy propagation made 35 modifications
debug: Replacing redundant declaration let (values%2#2: uint64, values%3#2: bytes) = decode_bytes<(uint64,bytes,)>(array_item%0#5) with copy of existing registers (Register(source_location=array/immutable.py:222:19-25, ir_type=uint64, name='values%0', version=2), Register(source_location=array/immutable.py:222:19-25, ir_type=bytes, name='values%1', version=2))
debug: Replacing redundant declaration let (values%2#1: uint64, values%3#1: string) = decode_bytes<(uint64,string,)>(array_item%0#4) with copy of existing registers (Register(source_location=array/immutable.py:241:19-25, ir_type=uint64, name='values%0', version=1), Register(source_location=array/immutable.py:241:19-25, ir_type=string, name='values%1', version=1))
debug: Found equivalence set: values%0#2, values%2#2
debug: selected values%0#2 from equivalence set
debug: Found equivalence set: values%1#2, values%3#2
debug: selected values%1#2 from equivalence set
debug: Found equivalence set: values%0#1, values%2#1
debug: selected values%0#1 from equivalence set
debug: Found equivalence set: values%1#1, values%3#1
debug: selected values%1#1 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:112:15 debug: inlining call to test_cases.array.immutable.pop_x in test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: tmp%8#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, arr#3, arr#8
debug: selected arr#3 from equivalence set
debug: Found equivalence set: arr#9, tmp%21#0, arr#4
debug: selected arr#9 from equivalence set
debug: Found equivalence set: tmp%27#0, arr#5
debug: selected arr#5 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+uint64[])%2#0, arr#6
debug: selected arr#6 from equivalence set
debug: Found equivalence set: updated_array%0#0, arr#7
debug: selected arr#7 from equivalence set
debug: Copy propagation made 12 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:139:15 debug: inlining call to test_cases.array.immutable.add_xb in test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint512[])%0#0, arr#1, arr#5
debug: selected arr#1 from equivalence set
debug: Found equivalence set: arr#6, tmp%11#0, arr#2
debug: selected arr#6 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint512[])%1#0, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+uint512[])%2#0, arr#4
debug: selected arr#4 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable x#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:176:19 debug: inlining call to _puya_lib.arc4.dynamic_array_pop_bit in test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: arr#1, array#0
debug: selected arr#1 from equivalence set
debug: Found equivalence set: popped#0, tmp%16#0
debug: selected popped#0 from equivalence set
debug: Found equivalence set: result#2, tmp%17#0, arr#7
debug: selected result#2 from equivalence set
debug: Copy propagation made 6 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%18#0
debug: Removing unused variable popped#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@15 with block@13 in block@16
debug: Merged linear block@15 into block@13
debug: Replaced predecessor block@16 with block@13 in block@14
debug: Merged linear block@16 into block@13
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+(uint64,uint64)[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: tmp%16#0, arr#3
debug: selected arr#3 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%17#0
debug: Removing unused variable tmp%18#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:185:30-35, ir_type=uint64, name='tmp%2', version=0),)
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: values%0#0, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: values%1#0, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: values%2#0, baz#0
debug: selected baz#0 from equivalence set
debug: Copy propagation made 5 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Simplified (== tmp%5#0 0u) to (! tmp%5#0)
debug: Simplified (== foo#0 0u) to (! foo#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+uint8[]))[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: tmp%12#0, arr#4
debug: selected arr#4 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:218:30-35, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let array_item%1#0: Encoded(uint64,(len+uint8[])) = extract_value(arr#1, i#4) with copy of existing registers (Register(source_location=array/immutable.py:222:19-25, ir_type=Encoded(uint64,(len+uint8[])), name='array_item%0', version=0),)
debug: Replacing redundant declaration let i#5: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:222:32-37, ir_type=uint64, name='tmp%7', version=0),)
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: array_item%0#0, array_item%1#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: tmp%7#0, i#5
debug: selected i#5 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let (values%2#0: uint64, values%3#0: bytes) = decode_bytes<(uint64,bytes,)>(array_item%0#0) with copy of existing registers (Register(source_location=array/immutable.py:222:19-25, ir_type=uint64, name='values%0', version=0), Register(source_location=array/immutable.py:222:19-25, ir_type=bytes, name='values%1', version=0))
debug: Found equivalence set: values%0#0, values%2#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, values%3#0
debug: selected values%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Found equivalence set: tmp%12#0, arr#4
debug: selected arr#4 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%13#0
debug: Removing unused variable tmp%14#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:237:53-58, ir_type=uint64, name='tmp%2', version=0),)
debug: Replacing redundant declaration let array_item%1#0: Encoded(uint64,(len+utf8[])) = extract_value(arr#1, i#4) with copy of existing registers (Register(source_location=array/immutable.py:241:19-25, ir_type=Encoded(uint64,(len+utf8[])), name='array_item%0', version=0),)
debug: Replacing redundant declaration let i#5: uint64 = (+ i#4 1u) with copy of existing registers (Register(source_location=array/immutable.py:241:32-37, ir_type=uint64, name='tmp%7', version=0),)
debug: Found equivalence set: tmp%2#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: array_item%0#0, array_item%1#0
debug: selected array_item%0#0 from equivalence set
debug: Found equivalence set: tmp%7#0, i#5
debug: selected i#5 from equivalence set
debug: Copy propagation made 5 modifications
debug: Replacing redundant declaration let (values%2#0: uint64, values%3#0: string) = decode_bytes<(uint64,string,)>(array_item%0#0) with copy of existing registers (Register(source_location=array/immutable.py:241:19-25, ir_type=uint64, name='values%0', version=0), Register(source_location=array/immutable.py:241:19-25, ir_type=string, name='values%1', version=0))
debug: Found equivalence set: values%0#0, values%2#0
debug: selected values%0#0 from equivalence set
debug: Found equivalence set: values%1#0, values%3#0
debug: selected values%1#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
array/immutable.py:272:36 debug: inlining call to test_cases.array.immutable.sum_arr in test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, extra_arr#0
debug: selected extra_arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, extra_arr#2
debug: selected extra_arr#2 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+uint64[])[])%0#0, arr#3
debug: selected arr#3 from equivalence set
debug: Found equivalence set: encoded_array%1#0, totals#0
debug: selected totals#0 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, inner_arr#0, arr#4
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: total#1, tmp%2#0
debug: selected total#1 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+uint64[])%1#0, totals#2
debug: selected totals#2 from equivalence set
debug: Copy propagation made 9 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@4 in block@3
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@7 with block@6 in block@1
debug: Merged linear block@7 into block@6
debug: Replaced predecessor block@13 with block@10 in block@14
debug: Merged linear block@13 into block@10
debug: Replaced predecessor block@17 with block@16 in block@11
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@11 with block@16 in block@9
debug: Merged linear block@11 into block@16
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
array/immutable.py:520 debug: replacing extract_value(inner_arr#0, item_index_internal%0#4) with extract_value(arr#2, item_index_internal%0#1, item_index_internal%0#4)
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arr7#0
debug: selected arr7#0 from equivalence set
debug: Found equivalence set: encoded_array%2#0, arr8#0
debug: selected arr8#0 from equivalence set
debug: Found equivalence set: encoded_array%3#0, arr9#0
debug: selected arr9#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+(bool1,bool1)[])%0#0, arr2#2
debug: selected arr2#2 from equivalence set
debug: Found equivalence set: replace%1#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr7#2
debug: selected arr7#2 from equivalence set
debug: Found equivalence set: replace%2#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr8#2
debug: selected arr8#2 from equivalence set
debug: Found equivalence set: replace%3#0, as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr9#2
debug: selected arr9#2 from equivalence set
debug: Copy propagation made 8 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Simplified (== tmp%4#0 0u) to (! tmp%4#0)
debug: Simplified (== tmp%6#0 0u) to (! tmp%6#0)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (== i#1 0u) to (! i#1)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Simplified (replace3 concat%1#0 0u as_u16_bytes%1#0) to ((replace2 0) concat%1#0 as_u16_bytes%1#0)
debug: Simplified (replace3 concat%2#0 0u as_u16_bytes%2#0) to ((replace2 0) concat%2#0 as_u16_bytes%2#0)
debug: Simplified (replace3 concat%3#0 0u as_u16_bytes%3#0) to ((replace2 0) concat%3#0 as_u16_bytes%3#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%11#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%12#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%20#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%21#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%22#0: bool = (== i#1 2u) with copy of existing registers (Register(source_location=array/immutable.py:295:22-28, ir_type=bool, name='tmp%13', version=0),)
debug: Replacing redundant declaration let tmp%23#0: bool = (== i#1 3u) with copy of existing registers (Register(source_location=array/immutable.py:296:22-28, ir_type=bool, name='tmp%14', version=0),)
debug: Replacing redundant declaration let tmp%24#0: bool = (== i#1 4u) with copy of existing registers (Register(source_location=array/immutable.py:297:22-28, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%25#0: bool = (== i#1 5u) with copy of existing registers (Register(source_location=array/immutable.py:298:22-28, ir_type=bool, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%26#0: bool = (== i#1 6u) with copy of existing registers (Register(source_location=array/immutable.py:299:22-28, ir_type=bool, name='tmp%17', version=0),)
debug: Replacing redundant declaration let tmp%28#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let tmp%30#0: bool = (! i#1) with copy of existing registers (Register(source_location=array/immutable.py:288:46-52, ir_type=bool, name='tmp%8', version=0),)
debug: Replacing redundant declaration let tmp%31#0: bool = (== i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:288:56-62, ir_type=bool, name='tmp%9', version=0),)
debug: Replacing redundant declaration let tmp%32#0: bool = (== i#1 2u) with copy of existing registers (Register(source_location=array/immutable.py:295:22-28, ir_type=bool, name='tmp%13', version=0),)
debug: Replacing redundant declaration let tmp%33#0: bool = (== i#1 3u) with copy of existing registers (Register(source_location=array/immutable.py:296:22-28, ir_type=bool, name='tmp%14', version=0),)
debug: Replacing redundant declaration let tmp%34#0: bool = (== i#1 4u) with copy of existing registers (Register(source_location=array/immutable.py:297:22-28, ir_type=bool, name='tmp%15', version=0),)
debug: Replacing redundant declaration let tmp%35#0: bool = (== i#1 5u) with copy of existing registers (Register(source_location=array/immutable.py:298:22-28, ir_type=bool, name='tmp%16', version=0),)
debug: Replacing redundant declaration let tmp%36#0: bool = (== i#1 6u) with copy of existing registers (Register(source_location=array/immutable.py:299:22-28, ir_type=bool, name='tmp%17', version=0),)
debug: Replacing redundant declaration let tmp%37#0: bool = (== i#1 7u) with copy of existing registers (Register(source_location=array/immutable.py:313:22-28, ir_type=bool, name='tmp%27', version=0),)
debug: Replacing redundant declaration let tmp%39#0: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=0),)
debug: Replacing redundant declaration let i#2: uint64 = (+ i#1 1u) with copy of existing registers (Register(source_location=array/immutable.py:292:24-29, ir_type=uint64, name='tmp%18', version=0),)
debug: Found equivalence set: tmp%8#0, tmp%11#0, tmp%20#0, tmp%30#0
debug: selected tmp%8#0 from equivalence set
debug: Found equivalence set: tmp%9#0, tmp%12#0, tmp%21#0, tmp%31#0
debug: selected tmp%9#0 from equivalence set
debug: Found equivalence set: tmp%13#0, tmp%22#0, tmp%32#0
debug: selected tmp%13#0 from equivalence set
debug: Found equivalence set: tmp%14#0, tmp%23#0, tmp%33#0
debug: selected tmp%14#0 from equivalence set
debug: Found equivalence set: tmp%15#0, tmp%24#0, tmp%34#0
debug: selected tmp%15#0 from equivalence set
debug: Found equivalence set: tmp%16#0, tmp%25#0, tmp%35#0
debug: selected tmp%16#0 from equivalence set
debug: Found equivalence set: tmp%17#0, tmp%26#0, tmp%36#0
debug: selected tmp%17#0 from equivalence set
debug: Found equivalence set: tmp%18#0, tmp%28#0, tmp%39#0, i#2
debug: selected i#2 from equivalence set
debug: Found equivalence set: tmp%27#0, tmp%37#0
debug: selected tmp%27#0 from equivalence set
debug: Copy propagation made 21 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: values%0#0, i#0
debug: selected i#0 from equivalence set
debug: Found equivalence set: tmp%0#0, sum1#2
debug: selected sum1#2 from equivalence set
debug: Found equivalence set: array_length%1#0, reverse_index_internal%1#0
debug: selected array_length%1#0 from equivalence set
debug: Found equivalence set: values%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: tmp%1#0, sum2#2
debug: selected sum2#2 from equivalence set
debug: Found equivalence set: array_length%2#0, reverse_index_internal%2#0
debug: selected array_length%2#0 from equivalence set
debug: Found equivalence set: values%2#0, tup.foo#0
debug: selected tup.foo#0 from equivalence set
debug: Found equivalence set: values%3#0, tup.bar#0
debug: selected tup.bar#0 from equivalence set
debug: Found equivalence set: values%4#0, tup.baz#0
debug: selected tup.baz#0 from equivalence set
debug: Found equivalence set: tmp%2#0, sum3#2
debug: selected sum3#2 from equivalence set
debug: Found equivalence set: tmp%3#0, sum3#3
debug: selected sum3#3 from equivalence set
debug: Found equivalence set: tmp%4#0, sum3#5
debug: selected sum3#5 from equivalence set
debug: Found equivalence set: array_length%3#0, reverse_index_internal%3#0
debug: selected array_length%3#0 from equivalence set
debug: Found equivalence set: values%5#0, dyn_tup.foo#0
debug: selected dyn_tup.foo#0 from equivalence set
debug: Found equivalence set: values%6#0, dyn_tup.bar#0
debug: selected dyn_tup.bar#0 from equivalence set
debug: Found equivalence set: item_index_internal%3#1, idx#0
debug: selected idx#0 from equivalence set
debug: Found equivalence set: tmp%5#0, sum4#2
debug: selected sum4#2 from equivalence set
debug: Found equivalence set: tmp%7#0, sum4#3
debug: selected sum4#3 from equivalence set
debug: Copy propagation made 18 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@9 with block@8 in block@5
debug: Merged linear block@9 into block@8
debug: Replaced predecessor block@17 with block@16 in block@11
debug: Merged linear block@17 into block@16
debug: Replaced predecessor block@21 with block@20 in block@19
debug: Merged linear block@21 into block@20
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%8#0: uint64 = (len dyn_tup.bar#0) with copy of existing registers (Register(source_location=array/immutable.py:363:20-44, ir_type=uint64, name='tmp%6', version=0),)
debug: Found equivalence set: tmp%6#0, tmp%8#0
debug: selected tmp%6#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+bool1[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#0, arr#2
debug: selected arr#2 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: slot%0#0, mutable#0
debug: selected mutable#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%0#0 0u) to (! tmp%0#0)
debug: Simplified (== tmp%2#0 0u) to (! tmp%2#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: replace%0#0, as_Encoded(len+uint64[])%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (replace3 concat%0#0 0u as_u16_bytes%0#0) to ((replace2 0) concat%0#0 as_u16_bytes%0#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 2u 2u) to 4u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: encoded_array%0#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(len+utf8[])[])%0#0, result#0
debug: selected result#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x arg.0#0) to arg.0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: updated_array%0#0, imm#1
debug: selected imm#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, arr1#0
debug: selected arr1#0 from equivalence set
debug: Found equivalence set: tmp%5#0, struct12#0
debug: selected struct12#0 from equivalence set
debug: Found equivalence set: encoded_array%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: encoded_array%1#0, arr3#0
debug: selected arr3#0 from equivalence set
debug: Found equivalence set: updated_array%0#0, arr1#2
debug: selected arr1#2 from equivalence set
debug: Found equivalence set: array_length%0#0, reverse_index_internal%0#0
debug: selected array_length%0#0 from equivalence set
debug: Found equivalence set: array_item%0#0, struct_it#0
debug: selected struct_it#0 from equivalence set
debug: Found equivalence set: arr1#1, mut_arr#0
debug: selected arr1#1 from equivalence set
debug: Found equivalence set: updated_array%1#0, mut_arr#1
debug: selected mut_arr#1 from equivalence set
debug: Copy propagation made 10 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%11#0
debug: Removing unused variable tmp%12#0
debug: Removing unused variable tmp%16#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@3 with block@2 in block@1
debug: Merged linear block@3 into block@2
debug: Replaced predecessor block@7 with block@6 in block@5
debug: Merged linear block@7 into block@6
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let arr3#0: Encoded((uint64,uint64)[3]) = bytes_encode<(uint64,uint64)[3]>(struct12#0, struct12#0, struct12#0) with copy of existing registers (Register(source_location=array/immutable.py:454:8-12, ir_type=Encoded((uint64,uint64)[3]), name='arr2', version=0),)
debug: Found equivalence set: arr2#0, arr3#0
debug: selected arr2#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine test_cases.array.immutable.pop_x
debug: removing unused subroutine test_cases.array.immutable.add_xb
debug: removing unused subroutine test_cases.array.immutable.sum_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_biguint_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_nested_array for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_uint64_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_bool_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4 for inlining
debug: marking single-use function test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:450:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:444:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4 in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:438:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:430:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:422:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:414:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:406:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:396:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:389:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:382:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_tuple_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:375:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:368:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_return in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:341:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:276:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:258:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_nested_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:254:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:250:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:231:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:212:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:197:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:179:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:155:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_bool_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:130:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_biguint_array in algopy.arc4.ARC4Contract.approval_program
array/immutable.py:94:6 debug: inlining call to test_cases.array.immutable.ImmutableArrayContract.test_uint64_array in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%15#0, length#0
debug: selected length#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%0#0, arr#18
debug: selected arr#18 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%1#0, arr#17
debug: selected arr#17 from equivalence set
debug: Found equivalence set: tmp%44#0, arr_to_add#0
debug: selected arr_to_add#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(len+uint64[])[])%0#0, arr#13
debug: selected arr#13 from equivalence set
debug: Found equivalence set: totals#1, tmp%45#0
debug: selected totals#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+uint64[])%2#0, arr1#3
debug: selected arr1#3 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+bool1[])%0#0, arr2#1
debug: selected arr2#1 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr3#0
debug: selected arr3#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0, arr4#0
debug: selected arr4#0 from equivalence set
debug: Found equivalence set: sum1#1, tmp%55#0
debug: selected sum1#1 from equivalence set
debug: Found equivalence set: sum2#1, tmp%56#0
debug: selected sum2#1 from equivalence set
debug: Found equivalence set: sum3#1, tmp%57#0
debug: selected sum3#1 from equivalence set
debug: Found equivalence set: sum4#1, tmp%58#0
debug: selected sum4#1 from equivalence set
debug: Found equivalence set: tmp%65#0, append#4
debug: selected append#4 from equivalence set
debug: Found equivalence set: arr#11, tmp%66#0
debug: selected arr#11 from equivalence set
debug: Found equivalence set: tmp%72#0, append#3
debug: selected append#3 from equivalence set
debug: Found equivalence set: arr#8, tmp%73#0
debug: selected arr#8 from equivalence set
debug: Found equivalence set: tmp%79#0, append#2
debug: selected append#2 from equivalence set
debug: Found equivalence set: arr#5, tmp%80#0
debug: selected arr#5 from equivalence set
debug: Found equivalence set: tmp%86#0, append#1
debug: selected append#1 from equivalence set
debug: Found equivalence set: arr#2, tmp%87#0
debug: selected arr#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0, arr#0
debug: selected arr#0 from equivalence set
debug: Found equivalence set: tmp%93#0, append#0
debug: selected append#0 from equivalence set
debug: Found equivalence set: converted_array%0#0, tmp%94#0
debug: selected converted_array%0#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(uint64,uint64)%0#0, arg#1
debug: selected arg#1 from equivalence set
debug: Found equivalence set: result#3, tmp%100#0
debug: selected result#3 from equivalence set
debug: Found equivalence set: tmp%106#0, arg.0#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: tmp%107#0, arg.1#1
debug: selected arg.1#1 from equivalence set
debug: Found equivalence set: result#2, tmp%108#0
debug: selected result#2 from equivalence set
debug: Found equivalence set: reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0, arg#0
debug: selected arg#0 from equivalence set
debug: Found equivalence set: result#1, tmp%114#0
debug: selected result#1 from equivalence set
debug: Found equivalence set: tmp%120#0, arg.0#0, concat%0#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: tmp%121#0, arg.1#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: result#0, tmp%122#0
debug: selected result#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0, imm1#0
debug: selected imm1#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%2#0, imm2#0
debug: selected imm2#0 from equivalence set
debug: Found equivalence set: as_Encoded(len+(uint64,(len+utf8[]))[])%0#0, tmp%128#0
debug: selected as_Encoded(len+(uint64,(len+utf8[]))[])%0#0 from equivalence set
debug: Found equivalence set: reinterpret_Encoded(len+(uint64,uint64)[])%0#0, imm#0
debug: selected imm#0 from equivalence set
debug: Found equivalence set: imm#1, tmp%134#0
debug: selected imm#1 from equivalence set
debug: Found equivalence set: maybe_value%1#0, tmp%140#0
debug: selected maybe_value%1#0 from equivalence set
debug: Copy propagation made 41 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%14#0
debug: Removing unused variable tmp%7#5
debug: Removing unused variable tmp%15#6
debug: Removing unused variable tmp%19#0
debug: Removing unused variable tmp%23#0
debug: Removing unused variable tmp%27#0
debug: Removing unused variable tmp%31#0
debug: Removing unused variable tmp%35#0
debug: Removing unused variable tmp%39#0
debug: Removing unused variable tmp%43#0
debug: Removing unused variable tmp%50#0
debug: Removing unused variable tmp%54#0
debug: Removing unused variable tmp%64#0
debug: Removing unused variable tmp%71#0
debug: Removing unused variable tmp%78#0
debug: Removing unused variable tmp%85#0
debug: Removing unused variable tmp%92#0
debug: Removing unused variable tmp%99#0
debug: Removing unused variable tmp%105#0
debug: Removing unused variable tmp%113#0
debug: Removing unused variable start_of_tail%0#0
debug: Removing unused variable tmp%119#0
debug: Removing unused variable tmp%127#0
debug: Removing unused variable tmp%133#0
debug: Removing unused variable tmp%1#2
debug: Removing unused variable tmp%139#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== arr2#0 arr2#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@171 with block@3 in block@172
debug: Merged linear block@171 into block@3
debug: Replaced predecessor block@175 with block@174 in block@34
debug: Merged linear block@175 into block@174
debug: Replaced predecessor block@166 with block@4 in block@167
debug: Merged linear block@166 into block@4
debug: Replaced predecessor block@170 with block@169 in block@34
debug: Merged linear block@170 into block@169
debug: Replaced predecessor block@151 with block@5 in block@152
debug: Merged linear block@151 into block@5
debug: Replaced predecessor block@165 with block@164 in block@34
debug: Merged linear block@165 into block@164
debug: Replaced predecessor block@146 with block@6 in block@147
debug: Merged linear block@146 into block@6
debug: Replaced predecessor block@150 with block@149 in block@34
debug: Merged linear block@150 into block@149
debug: Replaced predecessor block@141 with block@7 in block@142
debug: Merged linear block@141 into block@7
debug: Replaced predecessor block@145 with block@144 in block@34
debug: Merged linear block@145 into block@144
debug: Replaced predecessor block@133 with block@8 in block@134
debug: Merged linear block@133 into block@8
debug: Replaced predecessor block@140 with block@139 in block@34
debug: Merged linear block@140 into block@139
debug: Replaced predecessor block@125 with block@9 in block@126
debug: Merged linear block@125 into block@9
debug: Replaced predecessor block@132 with block@131 in block@34
debug: Merged linear block@132 into block@131
debug: Replaced predecessor block@123 with block@10 in block@124
debug: Merged linear block@123 into block@10
debug: Replaced predecessor block@124 with block@10 in block@34
debug: Merged linear block@124 into block@10
debug: Replaced predecessor block@121 with block@11 in block@122
debug: Merged linear block@121 into block@11
debug: Replaced predecessor block@122 with block@11 in block@34
debug: Merged linear block@122 into block@11
debug: Replaced predecessor block@107 with block@12 in block@108
debug: Merged linear block@107 into block@12
debug: Replaced predecessor block@120 with block@119 in block@34
debug: Merged linear block@120 into block@119
debug: Replaced predecessor block@102 with block@13 in block@103
debug: Merged linear block@102 into block@13
debug: Replaced predecessor block@106 with block@105 in block@34
debug: Merged linear block@106 into block@105
debug: Replaced predecessor block@82 with block@14 in block@83
debug: Merged linear block@82 into block@14
debug: Replaced predecessor block@101 with block@100 in block@34
debug: Merged linear block@101 into block@100
debug: Replaced predecessor block@77 with block@15 in block@78
debug: Merged linear block@77 into block@15
debug: Replaced predecessor block@81 with block@80 in block@34
debug: Merged linear block@81 into block@80
debug: Replaced predecessor block@72 with block@16 in block@73
debug: Merged linear block@72 into block@16
debug: Replaced predecessor block@76 with block@75 in block@34
debug: Merged linear block@76 into block@75
debug: Replaced predecessor block@67 with block@17 in block@68
debug: Merged linear block@67 into block@17
debug: Replaced predecessor block@71 with block@70 in block@34
debug: Merged linear block@71 into block@70
debug: Replaced predecessor block@62 with block@18 in block@63
debug: Merged linear block@62 into block@18
debug: Replaced predecessor block@66 with block@65 in block@34
debug: Merged linear block@66 into block@65
debug: Replaced predecessor block@57 with block@19 in block@58
debug: Merged linear block@57 into block@19
debug: Replaced predecessor block@61 with block@60 in block@34
debug: Merged linear block@61 into block@60
debug: Replaced predecessor block@55 with block@20 in block@56
debug: Merged linear block@55 into block@20
debug: Replaced predecessor block@56 with block@20 in block@34
debug: Merged linear block@56 into block@20
debug: Replaced predecessor block@53 with block@21 in block@54
debug: Merged linear block@53 into block@21
debug: Replaced predecessor block@54 with block@21 in block@34
debug: Merged linear block@54 into block@21
debug: Replaced predecessor block@51 with block@22 in block@52
debug: Merged linear block@51 into block@22
debug: Replaced predecessor block@52 with block@22 in block@34
debug: Merged linear block@52 into block@22
debug: Replaced predecessor block@49 with block@23 in block@50
debug: Merged linear block@49 into block@23
debug: Replaced predecessor block@50 with block@23 in block@34
debug: Merged linear block@50 into block@23
debug: Replaced predecessor block@47 with block@24 in block@48
debug: Merged linear block@47 into block@24
debug: Replaced predecessor block@48 with block@24 in block@34
debug: Merged linear block@48 into block@24
debug: Replaced predecessor block@45 with block@25 in block@46
debug: Merged linear block@45 into block@25
debug: Replaced predecessor block@46 with block@25 in block@34
debug: Merged linear block@46 into block@25
debug: Replaced predecessor block@37 with block@26 in block@38
debug: Merged linear block@37 into block@26
debug: Replaced predecessor block@44 with block@43 in block@34
debug: Merged linear block@44 into block@43
debug: Replaced predecessor block@35 with block@30 in block@36
debug: Merged linear block@35 into block@30
debug: Replaced predecessor block@36 with block@30 in block@34
debug: Merged linear block@36 into block@30
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable item#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#0
debug: Removing unused variable tmp%15#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable start_of_tail%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arg.0#0, concat%0#0
debug: selected arg.0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== arr2#0 arr2#0) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_biguint_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_nested_array
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_uint64_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_bool_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr
debug: removing unused subroutine test_cases.array.immutable.ImmutableArrayContract.__algopy_default_create
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%7#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: lowering array IR nodes in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: optimizing approval program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%len_u16%0#0, aggregate%as_Encoded(len+uint64[])%0#0, arr#47
debug: selected arr#47 from equivalence set
debug: Found equivalence set: aggregate%array_length%0#0, tmp%0#22
debug: selected aggregate%array_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%2#11
debug: selected aggregate%head%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%1#0, tmp%3#14
debug: selected aggregate%array_length%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%2#0, tmp%5#9
debug: selected aggregate%array_length%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%0#0, array_item%0#10
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%3#0, tmp%9#11
debug: selected aggregate%array_length%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%4#0, tmp%11#5
debug: selected aggregate%array_length%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%1#0, array_item%1#4
debug: selected aggregate%encoded_element%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%as_Encoded(uint64)%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%1#0, aggregate%as_Encoded(uint64[])%1#0, tmp%14#6
debug: selected aggregate%head%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%5#0, tmp%15#8
debug: selected aggregate%array_length%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%6#0, tmp%17#6
debug: selected aggregate%array_length%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%2#0, array_item%2#6
debug: selected aggregate%encoded_element%2#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%3#0, array_item%3#6
debug: selected aggregate%encoded_element%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%7#0, tmp%22#5
debug: selected aggregate%array_length%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%8#0, tmp%24#5
debug: selected aggregate%array_length%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%4#0, array_item%4#1
debug: selected aggregate%encoded_element%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%9#0, tmp%28#3
debug: selected aggregate%array_length%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%10#0, tmp%30#2
debug: selected aggregate%array_length%10#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%5#0, array_item%5#1
debug: selected aggregate%encoded_element%5#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%as_Encoded(uint64)%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%2#0, aggregate%as_Encoded(uint64[])%2#0, tmp%33#2
debug: selected aggregate%head%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%11#0, tmp%34#1
debug: selected aggregate%array_length%11#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%12#0, tmp%36#1
debug: selected aggregate%array_length%12#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%6#0, array_item%6#0
debug: selected aggregate%encoded_element%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%3#0, aggregate%as_Encoded(uint64)%3#0, encoded_value%0#0
debug: selected aggregate%val_as_bytes%3#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%0#0, arr#54
debug: selected arr#54 from equivalence set
debug: Found equivalence set: aggregate%array_length%13#0, tmp%39#1
debug: selected aggregate%array_length%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%8#0, array_item%7#0
debug: selected aggregate%encoded_element%8#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%1#0, aggregate%as_Encoded(len+uint512[])%0#0, arr#39
debug: selected arr#39 from equivalence set
debug: Found equivalence set: aggregate%array_length%14#0, tmp%0#20
debug: selected aggregate%array_length%14#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%0#0, aggregate%as_Encoded(uint512)%0#0
debug: selected aggregate%arc4_encoded%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%3#0, aggregate%as_Encoded(uint512[])%0#0, tmp%5#8
debug: selected aggregate%head%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%15#0, tmp%6#9
debug: selected aggregate%array_length%15#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%16#0, tmp%8#9
debug: selected aggregate%array_length%16#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%9#0, array_item%0#9, values%0#4
debug: selected aggregate%encoded_element%9#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%1#0, aggregate%as_Encoded(uint512)%1#0
debug: selected aggregate%arc4_encoded%1#0 from equivalence set
debug: Found equivalence set: aggregate%head%4#0, aggregate%as_Encoded(uint512[])%1#0, tmp%1#17
debug: selected aggregate%head%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%17#0, tmp%12#3
debug: selected aggregate%array_length%17#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%18#0, tmp%14#5
debug: selected aggregate%array_length%18#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%10#0, array_item%1#3, values%1#4
debug: selected aggregate%encoded_element%10#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%2#0, aggregate%as_Encoded(uint512)%2#0
debug: selected aggregate%arc4_encoded%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%5#0, aggregate%as_Encoded(uint512[])%2#0, tmp%20#5
debug: selected aggregate%head%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%19#0, tmp%21#5
debug: selected aggregate%array_length%19#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%20#0, tmp%23#4
debug: selected aggregate%array_length%20#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%11#0, array_item%2#5, values%2#2
debug: selected aggregate%encoded_element%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%12#0, array_item%3#5, values%3#2
debug: selected aggregate%encoded_element%12#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%3#0, aggregate%as_Encoded(uint512)%3#0
debug: selected aggregate%arc4_encoded%3#0 from equivalence set
debug: Found equivalence set: aggregate%head%6#0, aggregate%as_Encoded(uint512[])%3#0, tmp%27#3
debug: selected aggregate%head%6#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%21#0, tmp%28#2
debug: selected aggregate%array_length%21#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%22#0, tmp%30#1
debug: selected aggregate%array_length%22#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%13#0, array_item%4#0, values%4#3
debug: selected aggregate%encoded_element%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%14#0, array_item%5#0, values%5#3
debug: selected aggregate%encoded_element%14#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%2#0, aggregate%as_Encoded(len+bool1[])%0#0, arr#36
debug: selected arr#36 from equivalence set
debug: Found equivalence set: aggregate%array_length%23#0, tmp%0#19
debug: selected aggregate%array_length%23#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%as_Encoded(bool8)%0#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%7#0, aggregate%as_Encoded(bool8[])%0#0, tmp%4#9
debug: selected aggregate%head%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%24#0, tmp%5#7
debug: selected aggregate%array_length%24#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%0#0, array_item%0#8, values%0#3
debug: selected aggregate%get_bit%0#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%1#0, array_item%1#2, values%1#3
debug: selected aggregate%get_bit%1#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%2#0, array_item%2#4, values%2#1
debug: selected aggregate%get_bit%2#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%3#0, array_item%3#4, values%3#1
debug: selected aggregate%get_bit%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%29#0, tmp%19#5
debug: selected aggregate%array_length%29#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%3#0, aggregate%as_Encoded(len+(uint64,uint64)[])%0#0, arr#32
debug: selected arr#32 from equivalence set
debug: Found equivalence set: aggregate%array_length%30#0, tmp%0#18
debug: selected aggregate%array_length%30#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%as_Encoded(uint64)%4#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%5#0, aggregate%as_Encoded(uint64)%5#0
debug: selected aggregate%val_as_bytes%5#0 from equivalence set
debug: Found equivalence set: aggregate%head%9#0, aggregate%as_Encoded(uint64,uint64)%0#0
debug: selected aggregate%head%9#0 from equivalence set
debug: Found equivalence set: aggregate%head%10#0, aggregate%as_Encoded((uint64,uint64)[])%0#0, tmp%4#8
debug: selected aggregate%head%10#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%31#0, tmp%5#6
debug: selected aggregate%array_length%31#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%15#0, array_item%0#7
debug: selected aggregate%encoded_element%15#0 from equivalence set
debug: Found equivalence set: aggregate%item0%0#0, values%0#2
debug: selected aggregate%item0%0#0 from equivalence set
debug: Found equivalence set: aggregate%item1%0#0, values%1#2
debug: selected aggregate%item1%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%32#0, tmp%10#6
debug: selected aggregate%array_length%32#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%16#0, array_item%1#1
debug: selected aggregate%encoded_element%16#0 from equivalence set
debug: Found equivalence set: aggregate%item0%1#0, values%2#0
debug: selected aggregate%item0%1#0 from equivalence set
debug: Found equivalence set: aggregate%item1%1#0, values%3#0
debug: selected aggregate%item1%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%33#0, tmp%19#4
debug: selected aggregate%array_length%33#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%17#0, array_item%2#3
debug: selected aggregate%encoded_element%17#0 from equivalence set
debug: Found equivalence set: aggregate%item0%2#0, values%4#2
debug: selected aggregate%item0%2#0 from equivalence set
debug: Found equivalence set: aggregate%item1%2#0, values%5#2
debug: selected aggregate%item1%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%34#0, tmp%24#3
debug: selected aggregate%array_length%34#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%18#0, array_item%3#3
debug: selected aggregate%encoded_element%18#0 from equivalence set
debug: Found equivalence set: aggregate%item0%3#0, values%6#2
debug: selected aggregate%item0%3#0 from equivalence set
debug: Found equivalence set: aggregate%item1%3#0, values%7#2
debug: selected aggregate%item1%3#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%4#0, aggregate%as_Encoded(len+(uint64,bool1,bool1)[])%0#0, arr#29
debug: selected arr#29 from equivalence set
debug: Found equivalence set: aggregate%array_length%35#0, tmp%0#17
debug: selected aggregate%array_length%35#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%as_Encoded(uint64)%6#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%as_Encoded(uint64,bool1,bool1)%0#0
debug: selected aggregate%head%12#0 from equivalence set
debug: Found equivalence set: aggregate%head%13#0, aggregate%as_Encoded((uint64,bool1,bool1)[])%0#0, tmp%7#3
debug: selected aggregate%head%13#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%36#0, tmp%8#5
debug: selected aggregate%array_length%36#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%19#0, array_item%0#6
debug: selected aggregate%encoded_element%19#0 from equivalence set
debug: Found equivalence set: aggregate%item0%4#0, foo#0
debug: selected foo#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%4#0, bar#0
debug: selected bar#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%5#0, baz#0
debug: selected baz#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%5#0, aggregate%as_Encoded(len+(uint64,(len+uint8[]))[])%0#0, arr#24
debug: selected arr#24 from equivalence set
debug: Found equivalence set: aggregate%array_length%37#0, tmp%0#16
debug: selected aggregate%array_length%37#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%as_Encoded(uint64)%7#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%0#0, aggregate%as_Encoded(len+uint8[])%0#0
debug: selected aggregate%encoded_value%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%0#0, aggregate%as_Encoded(uint64,(len+uint8[]))%0#0
debug: selected aggregate%concat%0#0 from equivalence set
debug: Found equivalence set: aggregate%concat%1#0, aggregate%as_Encoded((uint64,(len+uint8[]))[])%0#0, tmp%4#6
debug: selected aggregate%concat%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%38#0, tmp%5#4
debug: selected aggregate%array_length%38#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%0#0, array_item%0#5
debug: selected aggregate%substring3%0#0 from equivalence set
debug: Found equivalence set: aggregate%item0%5#0, values%0#1
debug: selected aggregate%item0%5#0 from equivalence set
debug: Found equivalence set: aggregate%item1%4#0, values%1#1
debug: selected aggregate%item1%4#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%40#0, tmp%15#4
debug: selected aggregate%array_length%40#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%2#0, array_item%2#2
debug: selected aggregate%substring3%2#0 from equivalence set
debug: Found equivalence set: aggregate%item0%6#0, values%4#1
debug: selected aggregate%item0%6#0 from equivalence set
debug: Found equivalence set: aggregate%item1%5#0, values%5#1
debug: selected aggregate%item1%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%42#0, tmp%21#2
debug: selected aggregate%array_length%42#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%4#0, array_item%3#2
debug: selected aggregate%substring3%4#0 from equivalence set
debug: Found equivalence set: aggregate%item0%7#0, values%6#1
debug: selected aggregate%item0%7#0 from equivalence set
debug: Found equivalence set: aggregate%item1%6#0, values%7#1
debug: selected aggregate%item1%6#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%6#0, aggregate%as_Encoded(len+(uint64,(len+utf8[]))[])%0#0, arr#19
debug: selected arr#19 from equivalence set
debug: Found equivalence set: aggregate%array_length%44#0, tmp%0#15
debug: selected aggregate%array_length%44#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, aggregate%as_Encoded(uint64)%8#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%1#0, aggregate%as_Encoded(len+utf8[])%0#0
debug: selected aggregate%encoded_value%1#0 from equivalence set
debug: Found equivalence set: aggregate%concat%2#0, aggregate%as_Encoded(uint64,(len+utf8[]))%0#0
debug: selected aggregate%concat%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%3#0, aggregate%as_Encoded((uint64,(len+utf8[]))[])%0#0, tmp%4#5
debug: selected aggregate%concat%3#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%45#0, tmp%5#3
debug: selected aggregate%array_length%45#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%6#0, array_item%0#4
debug: selected aggregate%substring3%6#0 from equivalence set
debug: Found equivalence set: aggregate%item0%8#0, values%0#0
debug: selected aggregate%item0%8#0 from equivalence set
debug: Found equivalence set: aggregate%item1%7#0, values%1#0
debug: selected aggregate%item1%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%47#0, tmp%15#3
debug: selected aggregate%array_length%47#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%8#0, array_item%2#1
debug: selected aggregate%substring3%8#0 from equivalence set
debug: Found equivalence set: aggregate%item0%9#0, values%4#0
debug: selected aggregate%item0%9#0 from equivalence set
debug: Found equivalence set: aggregate%item1%8#0, values%5#0
debug: selected aggregate%item1%8#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%49#0, tmp%20#1
debug: selected aggregate%array_length%49#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%10#0, array_item%3#1
debug: selected aggregate%substring3%10#0 from equivalence set
debug: Found equivalence set: aggregate%item0%10#0, values%6#0
debug: selected aggregate%item0%10#0 from equivalence set
debug: Found equivalence set: aggregate%item1%9#0, values%7#0
debug: selected aggregate%item1%9#0 from equivalence set
debug: Found equivalence set: aggregate%concat%4#0, aggregate%as_Encoded((len+uint64[]))%0#0, tmp%0#14
debug: selected aggregate%concat%4#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%7#0, aggregate%as_Encoded(len+uint64[])%1#0, extra_arr#0
debug: selected extra_arr#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%as_Encoded(uint64)%9#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%head%21#0, aggregate%as_Encoded(uint64[])%3#0, tmp%0#13
debug: selected aggregate%head%21#0 from equivalence set
debug: Found equivalence set: aggregate%concat%5#0, aggregate%as_Encoded((len+uint64[])[])%0#0, tmp%1#10
debug: selected aggregate%concat%5#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%8#0, aggregate%as_Encoded(len+uint64[])%2#0, totals#0
debug: selected totals#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%51#0, array_length%0#2
debug: selected aggregate%array_length%51#0 from equivalence set
debug: Found equivalence set: aggregate%item%0#0, inner_arr#0
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%52#0, array_length%0#3
debug: selected aggregate%array_length%52#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%20#0, array_item%0#3
debug: selected aggregate%encoded_element%20#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%as_Encoded(uint64)%10#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%head%23#0, aggregate%as_Encoded(uint64[])%4#0, tmp%3#6
debug: selected aggregate%head%23#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%9#0, aggregate%as_Encoded(len+(bool1,bool1)[])%0#0, arr2#2
debug: selected arr2#2 from equivalence set
debug: Found equivalence set: aggregate%len_u16%10#0, aggregate%as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr7#0
debug: selected arr7#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%11#0, aggregate%as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr8#0
debug: selected arr8#0 from equivalence set
debug: Found equivalence set: aggregate%len_u16%12#0, aggregate%as_Encoded(len+(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, arr9#0
debug: selected arr9#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%53#0, tmp%0#12
debug: selected aggregate%array_length%53#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%54#0, tmp%2#6
debug: selected aggregate%array_length%54#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%55#0, tmp%4#4
debug: selected aggregate%array_length%55#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%56#0, tmp%6#3
debug: selected aggregate%array_length%56#0 from equivalence set
debug: Found equivalence set: aggregate%head%24#0, aggregate%as_Encoded(bool1,bool1)%0#0
debug: selected aggregate%head%24#0 from equivalence set
debug: Found equivalence set: aggregate%head%25#0, aggregate%as_Encoded((bool1,bool1)[])%0#0, tmp%10#2
debug: selected aggregate%head%25#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%as_Encoded(uint64)%11#0
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%12#0, aggregate%as_Encoded(uint64)%12#0
debug: selected aggregate%val_as_bytes%12#0 from equivalence set
debug: Found equivalence set: aggregate%head%28#0, aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0
debug: selected aggregate%head%28#0 from equivalence set
debug: Found equivalence set: aggregate%head%29#0, aggregate%as_Encoded((uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, tmp%19#1
debug: selected aggregate%head%29#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%13#0, aggregate%as_Encoded(uint64)%13#0
debug: selected aggregate%val_as_bytes%13#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%14#0, aggregate%as_Encoded(uint64)%14#0
debug: selected aggregate%val_as_bytes%14#0 from equivalence set
debug: Found equivalence set: aggregate%head%32#0, aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0
debug: selected aggregate%head%32#0 from equivalence set
debug: Found equivalence set: aggregate%head%33#0, aggregate%as_Encoded((uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, tmp%29#1
debug: selected aggregate%head%33#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%15#0, aggregate%as_Encoded(uint64)%15#0
debug: selected aggregate%val_as_bytes%15#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%16#0, aggregate%as_Encoded(uint64)%16#0
debug: selected aggregate%val_as_bytes%16#0 from equivalence set
debug: Found equivalence set: aggregate%head%37#0, aggregate%as_Encoded(uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)%0#0
debug: selected aggregate%head%37#0 from equivalence set
debug: Found equivalence set: aggregate%head%38#0, aggregate%as_Encoded((uint64,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,bool1,uint64)[])%0#0, tmp%40#1
debug: selected aggregate%head%38#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%57#0, tmp%41#1
debug: selected aggregate%array_length%57#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%58#0, tmp%43#1
debug: selected aggregate%array_length%58#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%59#0, tmp%45#1
debug: selected aggregate%array_length%59#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%60#0, tmp%47#1
debug: selected aggregate%array_length%60#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%61#0, array_length%0#1
debug: selected aggregate%array_length%61#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%21#0, array_item%0#1
debug: selected aggregate%encoded_element%21#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%62#0, array_length%1#0
debug: selected aggregate%array_length%62#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%6#0, array_item%1#0, b#0
debug: selected b#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%63#0, array_length%2#0
debug: selected aggregate%array_length%63#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%22#0, array_item%2#0
debug: selected aggregate%encoded_element%22#0 from equivalence set
debug: Found equivalence set: aggregate%item0%11#0, tup.foo#0
debug: selected tup.foo#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%7#0, tup.bar#0
debug: selected tup.bar#0 from equivalence set
debug: Found equivalence set: aggregate%get_bit%8#0, tup.baz#0
debug: selected tup.baz#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%64#0, array_length%3#0
debug: selected aggregate%array_length%64#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%12#0, array_item%3#0
debug: selected aggregate%substring3%12#0 from equivalence set
debug: Found equivalence set: aggregate%item0%12#0, dyn_tup.foo#0
debug: selected dyn_tup.foo#0 from equivalence set
debug: Found equivalence set: aggregate%item1%10#0, dyn_tup.bar#0
debug: selected dyn_tup.bar#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, aggregate%as_Encoded(uint64)%17#0
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%18#0, aggregate%as_Encoded(uint64)%18#0
debug: selected aggregate%val_as_bytes%18#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%19#0, aggregate%as_Encoded(uint64)%19#0
debug: selected aggregate%val_as_bytes%19#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%20#0, aggregate%as_Encoded(uint64)%20#0
debug: selected aggregate%val_as_bytes%20#0 from equivalence set
debug: Found equivalence set: aggregate%head%42#0, aggregate%as_Encoded(uint64,uint64,uint64,uint64)%0#0, tmp%59#0
debug: selected aggregate%head%42#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%21#0, aggregate%as_Encoded(uint64)%21#0
debug: selected aggregate%val_as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%22#0, aggregate%as_Encoded(uint64)%22#0
debug: selected aggregate%val_as_bytes%22#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%23#0, aggregate%as_Encoded(uint64)%23#0
debug: selected aggregate%val_as_bytes%23#0 from equivalence set
debug: Found equivalence set: aggregate%head%45#0, aggregate%as_Encoded(len+uint64[])%3#0, arr#10
debug: selected arr#10 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%24#0, aggregate%as_Encoded(uint64)%24#0
debug: selected aggregate%val_as_bytes%24#0 from equivalence set
debug: Found equivalence set: aggregate%head%46#0, aggregate%as_Encoded(uint64[])%5#0, tmp%0#11
debug: selected aggregate%head%46#0 from equivalence set
debug: Found equivalence set: aggregate%head%47#0, aggregate%as_Encoded(len+bool1[])%1#0, arr#7
debug: selected arr#7 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%8#0, aggregate%as_Encoded(bool8)%1#0
debug: selected aggregate%encoded_bool%8#0 from equivalence set
debug: Found equivalence set: aggregate%head%48#0, aggregate%as_Encoded(bool8[])%1#0, tmp%2#5
debug: selected aggregate%head%48#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%25#0, aggregate%as_Encoded(uint64)%25#0
debug: selected aggregate%val_as_bytes%25#0 from equivalence set
debug: Found equivalence set: aggregate%head%50#0, aggregate%as_Encoded(uint64,bool1,bool1)%1#0
debug: selected aggregate%head%50#0 from equivalence set
debug: Found equivalence set: aggregate%head%51#0, aggregate%as_Encoded(len+(uint64,bool1,bool1)[])%1#0, arr#4
debug: selected arr#4 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%26#0, aggregate%as_Encoded(uint64)%26#0
debug: selected aggregate%val_as_bytes%26#0 from equivalence set
debug: Found equivalence set: aggregate%head%53#0, aggregate%as_Encoded(uint64,bool1,bool1)%2#0
debug: selected aggregate%head%53#0 from equivalence set
debug: Found equivalence set: aggregate%head%54#0, aggregate%as_Encoded((uint64,bool1,bool1)[])%1#0, tmp%4#3
debug: selected aggregate%head%54#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%27#0, aggregate%as_Encoded(uint64)%27#0
debug: selected aggregate%val_as_bytes%27#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%2#0, aggregate%as_Encoded(len+utf8[])%1#0
debug: selected aggregate%encoded_value%2#0 from equivalence set
debug: Found equivalence set: aggregate%concat%6#0, aggregate%as_Encoded(uint64,(len+utf8[]))%1#0
debug: selected aggregate%concat%6#0 from equivalence set
debug: Found equivalence set: aggregate%concat%7#0, aggregate%as_Encoded(len+(uint64,(len+utf8[]))[])%1#0, arr#1
debug: selected arr#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%28#0, aggregate%as_Encoded(uint64)%28#0
debug: selected aggregate%val_as_bytes%28#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%3#0, aggregate%as_Encoded(len+utf8[])%2#0
debug: selected aggregate%encoded_value%3#0 from equivalence set
debug: Found equivalence set: aggregate%concat%8#0, aggregate%as_Encoded(uint64,(len+utf8[]))%2#0
debug: selected aggregate%concat%8#0 from equivalence set
debug: Found equivalence set: aggregate%concat%9#0, aggregate%as_Encoded((uint64,(len+utf8[]))[])%1#0, tmp%1#6
debug: selected aggregate%concat%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%29#0, aggregate%as_Encoded(uint64)%29#0
debug: selected aggregate%val_as_bytes%29#0 from equivalence set
debug: Found equivalence set: aggregate%head%62#0, aggregate%as_Encoded(uint64,bool1,bool1)%3#0
debug: selected aggregate%head%62#0 from equivalence set
debug: Found equivalence set: aggregate%head%63#0, aggregate%as_Encoded((uint64,bool1,bool1)[])%3#0, tmp%4#2
debug: selected aggregate%head%63#0 from equivalence set
debug: Found equivalence set: aggregate%array_len%0#0, tmp%5#1
debug: selected aggregate%array_len%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%65#0, aggregate%as_Encoded(len+uint64[])%4#0, prefix#3
debug: selected prefix#3 from equivalence set
debug: Found equivalence set: aggregate%extract%17#0, arg.0#1
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: aggregate%extract%18#0, arg.1#1
debug: selected arg.1#1 from equivalence set
debug: Found equivalence set: aggregate%head%67#0, aggregate%as_Encoded(len+uint64[])%5#0, prefix#2
debug: selected prefix#2 from equivalence set
debug: Found equivalence set: aggregate%head%69#0, aggregate%as_Encoded(uint64[])%6#0, tmp%0#6
debug: selected aggregate%head%69#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%4#0, aggregate%as_Encoded(len+utf8[])%3#0, tmp%0#5
debug: selected aggregate%encoded_value%4#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%5#0, aggregate%as_Encoded(len+utf8[])%4#0, tmp%1#4
debug: selected aggregate%encoded_value%5#0 from equivalence set
debug: Found equivalence set: aggregate%concat%11#0, aggregate%as_Encoded(len+(len+utf8[])[])%0#0, prefix#1
debug: selected prefix#1 from equivalence set
debug: Found equivalence set: aggregate%substring3%14#0, arg.0#0
debug: selected arg.0#0 from equivalence set
debug: Found equivalence set: aggregate%substring3%15#0, arg.1#0
debug: selected arg.1#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%6#0, aggregate%as_Encoded(len+utf8[])%5#0, tmp%0#4
debug: selected aggregate%encoded_value%6#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_value%7#0, aggregate%as_Encoded(len+utf8[])%6#0, tmp%1#3
debug: selected aggregate%encoded_value%7#0 from equivalence set
debug: Found equivalence set: aggregate%concat%13#0, aggregate%as_Encoded(len+(len+utf8[])[])%1#0, prefix#0
debug: selected prefix#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%66#0, tmp%0#3
debug: selected aggregate%array_length%66#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%67#0, tmp%0#2
debug: selected aggregate%array_length%67#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%68#0, tmp%2#2
debug: selected aggregate%array_length%68#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%23#0, array_item%0#0
debug: selected aggregate%encoded_element%23#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%1#0, imm#1
debug: selected imm#1 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%30#0, aggregate%as_Encoded(uint64)%30#0
debug: selected aggregate%val_as_bytes%30#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%31#0, aggregate%as_Encoded(uint64)%31#0
debug: selected aggregate%val_as_bytes%31#0 from equivalence set
debug: Found equivalence set: aggregate%head%75#0, aggregate%as_Encoded(uint64,uint64)%1#0, struct12#0
debug: selected struct12#0 from equivalence set
debug: Found equivalence set: aggregate%head%78#0, aggregate%as_Encoded((uint64,uint64)[3])%0#0, arr2#0
debug: selected arr2#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%2#0, arr1#2
debug: selected arr1#2 from equivalence set
debug: Found equivalence set: aggregate%encoded_element%26#0, struct_it#0
debug: selected struct_it#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%32#0, aggregate%as_Encoded(uint64)%32#0
debug: selected aggregate%val_as_bytes%32#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%33#0, aggregate%as_Encoded(uint64)%33#0
debug: selected aggregate%val_as_bytes%33#0 from equivalence set
debug: Found equivalence set: aggregate%head%80#0, aggregate%as_Encoded(uint64,uint64)%2#0, tmp%15#1
debug: selected aggregate%head%80#0 from equivalence set
debug: Found equivalence set: aggregate%updated_array%3#0, mut_arr#1
debug: selected mut_arr#1 from equivalence set
debug: Copy propagation made 285 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%encoded_element%7#0
debug: Removing unused variable aggregate%current_tail_offset%0#0
debug: Removing unused variable aggregate%current_tail_offset%1#0
debug: Removing unused variable aggregate%current_tail_offset%2#0
debug: Removing unused variable aggregate%current_tail_offset%3#0
debug: Removing unused variable aggregate%current_tail_offset%4#0
debug: Removing unused variable aggregate%current_tail_offset%5#0
debug: Removing unused variable aggregate%current_tail_offset%6#0
debug: Removing unused variable aggregate%current_tail_offset%7#0
debug: Removing unused variable aggregate%current_tail_offset%8#0
debug: Removing unused variable aggregate%current_tail_offset%9#0
debug: Removing unused variable aggregate%as_Encoded((uint64,bool1,bool1)[])%2#0
debug: Removing unused variable encoded_array%0#0
debug: Removing unused variable aggregate%current_tail_offset%11#0
debug: Removing unused variable aggregate%current_tail_offset%13#0
debug: Removing unused variable aggregate%encoded_element%24#0
debug: Removing unused variable aggregate%encoded_element%25#0
debug: Removing unused variable array_length%0#0
debug: Removing unused variable aggregate%encoded_element%27#0
debug: Removing unused variable aggregate%array_trimmed%7#0
debug: Removing unused variable aggregate%bytes_offset%7#0
debug: Removing unused variable aggregate%data_length%0#0
debug: Removing unused variable aggregate%data_length%1#0
debug: Removing unused variable aggregate%data_length%2#0
debug: Removing unused variable aggregate%data_length%3#0
debug: Removing unused variable aggregate%data_length%4#0
debug: Removing unused variable aggregate%data_length%5#0
debug: Removing unused variable aggregate%data_length%6#0
debug: Removing unused variable aggregate%data_length%7#0
debug: Removing unused variable aggregate%data_length%8#0
debug: Removing unused variable aggregate%data_length%9#0
debug: Removing unused variable aggregate%data_length%11#0
debug: Removing unused variable aggregate%data_length%13#0
debug: Removing unused variable aggregate%array_trimmed%24#0
debug: Removing unused variable aggregate%bytes_offset%24#0
debug: Removing unused variable aggregate%bytes_offset%25#0
debug: Removing unused variable aggregate%bytes_offset%27#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified ((extract 6 2) aggregate%as_bytes%0#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Simplified (concat 0x0000 aggregate%val_as_bytes%0#0) // on error: max array length exceeded to 0x0000000000000000002a
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#11) to 0x0001
debug: Simplified ((replace2 0) 0x0000000000000000002a 0x0001) to 0x0001000000000000002a
debug: Simplified (extract_uint16 0x0001000000000000002a 0u) to 1u
debug: Simplified (== 1u 1u) to 1u
debug: Simplified (extract_uint16 0x0001000000000000002a 0u) to 1u
debug: Simplified (- 1u 1u) to 0u
debug: Simplified ((extract 2 0) 0x0001000000000000002a) to 0x000000000000002a
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 0x000000000000002a 0u 8u) // on error: index access is out of bounds to 0x000000000000002a
debug: Simplified (btoi 0x000000000000002a) to 42u
debug: Simplified (== 42u 42u) to 1u
debug: Simplified (btoi aggregate%encoded_element%1#0) to (extract_uint64 aggregate%array_trimmed%1#0 aggregate%bytes_offset%1#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%1#0) to aggregate%val_as_bytes%1#0
debug: Simplified (btoi aggregate%encoded_element%2#0) to (extract_uint64 aggregate%array_trimmed%2#0 aggregate%bytes_offset%2#0)
debug: Simplified (* 0u 8u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%3#0 0u 8u) // on error: index access is out of bounds to ((extract 2 8) arr#50)
debug: Simplified (btoi aggregate%encoded_element%3#0) to (extract_uint64 arr#50 2u)
debug: Simplified (btoi aggregate%encoded_element%4#0) to (extract_uint64 aggregate%array_trimmed%4#0 aggregate%bytes_offset%4#0)
debug: Simplified (btoi aggregate%encoded_element%5#0) to (extract_uint64 aggregate%array_trimmed%5#0 aggregate%bytes_offset%5#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%2#0) to aggregate%val_as_bytes%2#0
debug: Simplified (btoi aggregate%encoded_element%6#0) to (extract_uint64 aggregate%array_trimmed%6#0 aggregate%bytes_offset%6#0)
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (+ 16u 2u) to 18u
debug: Simplified (* 2u 8u) to 16u
debug: Simplified (extract3 aggregate%array_trimmed%8#0 16u 8u) // on error: index access is out of bounds to ((extract 18 8) arr#54)
debug: Simplified (btoi aggregate%encoded_element%8#0) to (extract_uint64 arr#54 18u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%1#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (len tmp%4#10) to 8u
debug: Simplified (<= 8u 64u) to 1u
debug: Simplified (concat 0x aggregate%arc4_encoded%0#0) to aggregate%arc4_encoded%0#0
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified ((extract 6 2) as_bytes%0#9) to 0x0001
debug: Simplified (len tmp%0#21) to 8u
debug: Simplified (<= 8u 64u) to 1u
debug: Simplified (concat 0x aggregate%arc4_encoded%1#0) to aggregate%arc4_encoded%1#0
debug: Simplified (concat 0x aggregate%arc4_encoded%2#0) to aggregate%arc4_encoded%2#0
debug: Simplified (* 0u 64u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%12#0 0u 64u) // on error: index access is out of bounds to ((extract 2 64) arr#42)
debug: Simplified (len 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095b) to 64u
debug: Simplified (<= 64u 64u) to 1u
debug: Simplified (b| 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095b aggregate%bzero%3#0) to 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
debug: Simplified (concat 0x 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) to 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
debug: Simplified (* 0u 64u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%14#0 0u 64u) // on error: index access is out of bounds to ((extract 2 64) arr#43)
debug: Simplified ((extract 6 2) aggregate%as_bytes%2#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%encoded_bool%0#0) to aggregate%encoded_bool%0#0
debug: Simplified (+ 0u 16u) to 16u
debug: Simplified (+ 1u 16u) to 17u
debug: Simplified (+ 2u 16u) to 18u
debug: Simplified ((extract 6 2) aggregate%as_bytes%3#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%4#0) to aggregate%val_as_bytes%4#0
debug: Simplified (concat 0x aggregate%head%9#0) to aggregate%head%9#0
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%15#0 0u 16u) // on error: index access is out of bounds to ((extract 2 16) arr#33)
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 aggregate%encoded_element%15#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 aggregate%encoded_element%15#0 8u)
debug: Simplified (btoi aggregate%extract%2#0) to (extract_uint64 aggregate%encoded_element%16#0 0u)
debug: Simplified (btoi aggregate%extract%3#0) to (extract_uint64 aggregate%encoded_element%16#0 8u)
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%17#0 0u 16u) // on error: index access is out of bounds to ((extract 2 16) arr#35)
debug: Simplified (btoi aggregate%extract%4#0) to (extract_uint64 aggregate%encoded_element%17#0 0u)
debug: Simplified (btoi aggregate%extract%5#0) to (extract_uint64 aggregate%encoded_element%17#0 8u)
debug: Simplified (btoi aggregate%extract%6#0) to (extract_uint64 aggregate%encoded_element%18#0 0u)
debug: Simplified (btoi aggregate%extract%7#0) to (extract_uint64 aggregate%encoded_element%18#0 8u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%4#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%6#0) to aggregate%val_as_bytes%6#0
debug: Simplified (concat 0x aggregate%head%12#0) to aggregate%head%12#0
debug: Simplified (* 0u 9u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%19#0 0u 9u) // on error: index access is out of bounds to ((extract 2 9) arr#30)
debug: Simplified (btoi aggregate%extract%8#0) to (extract_uint64 aggregate%encoded_element%19#0 0u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%5#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%7#0) to aggregate%val_as_bytes%7#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%7#0) to 0x000a
debug: Simplified ((extract 6 2) aggregate%as_bytes%8#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi aggregate%extract%9#0) to (extract_uint64 aggregate%substring3%0#0 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi aggregate%extract%10#0) to (extract_uint64 aggregate%substring3%2#0 0u)
debug: Simplified (btoi aggregate%extract%11#0) to (extract_uint64 aggregate%substring3%4#0 0u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%9#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%val_as_bytes%8#0) to aggregate%val_as_bytes%8#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%11#0) to 0x000a
debug: Simplified ((extract 6 2) aggregate%as_bytes%12#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (btoi aggregate%extract%12#0) to (extract_uint64 aggregate%substring3%6#0 0u)
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (+ 0u 1u) to 1u
debug: Simplified (* 1u 2u) to 2u
debug: Simplified (btoi aggregate%extract%13#0) to (extract_uint64 aggregate%substring3%8#0 0u)
debug: Simplified (btoi aggregate%extract%14#0) to (extract_uint64 aggregate%substring3%10#0 0u)
debug: Simplified ((extract 6 2) aggregate%as_bytes%13#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (concat method "emit_test(uint64[])" aggregate%concat%4#0) to (concat 0xfa40c0530002 arr#17)
debug: Simplified ((extract 6 2) aggregate%as_bytes%14#0) to 0x0000
debug: Simplified (concat 0x aggregate%val_as_bytes%9#0) to aggregate%val_as_bytes%9#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%15#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%16#0) to 0x0000
debug: Simplified (btoi aggregate%encoded_element%20#0) to (extract_uint64 aggregate%array_trimmed%20#0 aggregate%bytes_offset%20#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%10#0) to aggregate%val_as_bytes%10#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%17#0) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%18#0) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%19#0) to 0x0000
debug: Simplified ((extract 6 2) aggregate%as_bytes%20#0) to 0x0000
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (extract_uint16 0x0000 0u) to 0u
debug: Simplified (! 0u) to 1u
debug: Simplified (concat 0x aggregate%set_bit%1#0) to aggregate%set_bit%1#0
debug: Simplified (concat 0x aggregate%set_bit%1#0) to aggregate%set_bit%1#0
debug: Simplified (concat 0x aggregate%val_as_bytes%11#0) to aggregate%val_as_bytes%11#0
debug: Simplified (concat 0x aggregate%head%28#0) to aggregate%head%28#0
debug: Simplified (concat 0x aggregate%val_as_bytes%13#0) to aggregate%val_as_bytes%13#0
debug: Simplified (concat 0x aggregate%head%32#0) to aggregate%head%32#0
debug: Simplified (concat 0x aggregate%val_as_bytes%15#0) to aggregate%val_as_bytes%15#0
debug: Simplified (concat 0x aggregate%head%37#0) to aggregate%head%37#0
debug: Simplified (btoi aggregate%encoded_element%21#0) to (extract_uint64 aggregate%array_trimmed%21#0 aggregate%bytes_offset%21#0)
debug: Simplified (btoi aggregate%extract%15#0) to (extract_uint64 aggregate%encoded_element%22#0 0u)
debug: Simplified (btoi aggregate%extract%16#0) to (extract_uint64 aggregate%substring3%12#0 0u)
debug: Simplified (concat 0x aggregate%val_as_bytes%17#0) to aggregate%val_as_bytes%17#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%21#0) to 0x0003
debug: Simplified (concat 0x0003 aggregate%val_as_bytes%21#0) to 0x00030000000000000001
debug: Simplified (concat 0x00030000000000000001 aggregate%val_as_bytes%22#0) to 0x000300000000000000010000000000000002
debug: Simplified (concat 0x000300000000000000010000000000000002 aggregate%val_as_bytes%23#0) to 0x0003000000000000000100000000000000020000000000000003
debug: Simplified (concat 0x aggregate%val_as_bytes%24#0) to aggregate%val_as_bytes%24#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%22#0) to 0x0005
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (setbit 0x80 2u 1u) to 0xa0
debug: Simplified (setbit 0xa0 3u 0u) to 0xa0
debug: Simplified (setbit 0xa0 4u 1u) to 0xa8
debug: Simplified (concat 0x0005 0xa8) to 0x0005a8
debug: Simplified (concat 0x aggregate%encoded_bool%8#0) to aggregate%encoded_bool%8#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%23#0) to 0x0001
debug: Simplified (concat 0x aggregate%val_as_bytes%25#0) to aggregate%val_as_bytes%25#0
debug: Simplified (setbit 0x00 0u 1u) to 0x80
debug: Simplified (setbit 0x80 1u 0u) to 0x80
debug: Simplified (concat aggregate%val_as_bytes%25#0 0x80) to 0x000000000000000080
debug: Simplified (concat 0x0001 0x000000000000000080) to 0x0001000000000000000080
debug: Simplified (concat 0x aggregate%val_as_bytes%26#0) to aggregate%val_as_bytes%26#0
debug: Simplified (concat 0x aggregate%head%53#0) to aggregate%head%53#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%24#0) to 0x0001
debug: Simplified (concat 0x aggregate%val_as_bytes%27#0) to aggregate%val_as_bytes%27#0
debug: Simplified (len "Hello") to 5u
debug: Simplified ((extract 6 2) aggregate%as_bytes%25#0) to 0x0005
debug: Simplified (concat 0x0005 "Hello") to 0x000548656c6c6f
debug: Simplified ((extract 6 2) aggregate%as_bytes%26#0) to 0x000a
debug: Simplified (concat aggregate%val_as_bytes%27#0 0x000a) to 0x0000000000000000000a
debug: Simplified (concat 0x0000000000000000000a 0x000548656c6c6f) to 0x0000000000000000000a000548656c6c6f
debug: Simplified ((extract 6 2) aggregate%as_bytes%27#0) to 0x0002
debug: Simplified (concat 0x0001 0x0002) to 0x00010002
debug: Simplified (concat 0x00010002 0x0000000000000000000a000548656c6c6f) to 0x000100020000000000000000000a000548656c6c6f
debug: Simplified (concat 0x aggregate%val_as_bytes%28#0) to aggregate%val_as_bytes%28#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%29#0) to 0x000a
debug: Simplified ((extract 6 2) aggregate%as_bytes%30#0) to 0x0002
debug: Simplified (concat 0x 0x0002) to 0x0002
debug: Simplified (concat 0x aggregate%val_as_bytes%29#0) to aggregate%val_as_bytes%29#0
debug: Simplified (concat 0x aggregate%head%62#0) to aggregate%head%62#0
debug: Simplified ((extract 6 2) aggregate%as_bytes%31#0) to 0x0002
debug: Simplified (concat 0x0002 0x0000000000000001) to 0x00020000000000000001
debug: Simplified (concat 0x00020000000000000001 0x0000000000000002) to 0x000200000000000000010000000000000002
debug: Simplified ((extract 6 2) aggregate%as_bytes%32#0) to 0x0002
debug: Simplified (concat 0x0002 0x0000000000000001) to 0x00020000000000000001
debug: Simplified (concat 0x00020000000000000001 0x0000000000000002) to 0x000200000000000000010000000000000002
debug: Simplified (concat 0x arg.0#1) to arg.0#1
debug: Simplified (extract_uint16 0x000200000000000000010000000000000002 0u) to 2u
debug: Simplified (+ 2u 2u) to 4u
debug: Simplified ((extract 6 2) as_bytes%0#0) to 0x0004
debug: Simplified (len "a") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%33#0) to 0x0001
debug: Simplified (concat 0x0001 "a") to 0x000161
debug: Simplified (len "b") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%34#0) to 0x0001
debug: Simplified (concat 0x0001 "b") to 0x000162
debug: Simplified ((extract 6 2) aggregate%as_bytes%35#0) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%36#0) to 0x0004
debug: Simplified (concat 0x0002 0x0004) to 0x00020004
debug: Simplified (len 0x000161) to 3u
debug: Simplified (+ 4u 3u) to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%37#0) to 0x0007
debug: Simplified (concat 0x00020004 0x0007) to 0x000200040007
debug: Simplified (concat 0x000200040007 0x000161) to 0x000200040007000161
debug: Simplified (concat 0x000200040007000161 0x000162) to 0x000200040007000161000162
debug: Simplified (len "a") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%38#0) to 0x0001
debug: Simplified (concat 0x0001 "a") to 0x000161
debug: Simplified (len "b") to 1u
debug: Simplified ((extract 6 2) aggregate%as_bytes%39#0) to 0x0001
debug: Simplified (concat 0x0001 "b") to 0x000162
debug: Simplified ((extract 6 2) aggregate%as_bytes%40#0) to 0x0002
debug: Simplified ((extract 6 2) aggregate%as_bytes%41#0) to 0x0004
debug: Simplified (concat 0x0002 0x0004) to 0x00020004
debug: Simplified (len 0x000161) to 3u
debug: Simplified (+ 4u 3u) to 7u
debug: Simplified ((extract 6 2) aggregate%as_bytes%42#0) to 0x0007
debug: Simplified (concat 0x00020004 0x0007) to 0x000200040007
debug: Simplified (concat 0x000200040007 0x000161) to 0x000200040007000161
debug: Simplified (concat 0x000200040007000161 0x000162) to 0x000200040007000161000162
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (extract3 aggregate%array_trimmed%23#0 0u 16u) // on error: index access is out of bounds to ((extract 2 16) imm#0)
debug: Simplified (concat 0x aggregate%val_as_bytes%30#0) to aggregate%val_as_bytes%30#0
debug: Simplified (concat 0x struct12#0) to struct12#0
debug: Simplified (concat 0x aggregate%val_as_bytes%32#0) to aggregate%val_as_bytes%32#0
debug: Simplified (concat aggregate%val_as_bytes%32#0 aggregate%val_as_bytes%33#0) to 0x00000000000000000000000000000000
debug: Simplified (* 0u 16u) to 0u
debug: Simplified (replace3 arr#53 18u aggregate%val_as_bytes%3#0) to ((replace2 18) arr#53 aggregate%val_as_bytes%3#0)
debug: Simplified (extract3 aggregate%encoded_element%15#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%15#0)
debug: Simplified (extract3 aggregate%encoded_element%15#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%15#0)
debug: Simplified (extract3 aggregate%encoded_element%16#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%16#0)
debug: Simplified (extract3 aggregate%encoded_element%16#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%16#0)
debug: Simplified (extract3 aggregate%encoded_element%17#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%17#0)
debug: Simplified (extract3 aggregate%encoded_element%17#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%17#0)
debug: Simplified (extract3 aggregate%encoded_element%18#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%18#0)
debug: Simplified (extract3 aggregate%encoded_element%18#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%18#0)
debug: Simplified (extract3 aggregate%encoded_element%19#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%19#0)
debug: Simplified (extract3 aggregate%substring3%0#0 0u 8u) to ((extract 0 8) aggregate%substring3%0#0)
debug: Simplified (extract3 aggregate%substring3%2#0 0u 8u) to ((extract 0 8) aggregate%substring3%2#0)
debug: Simplified (extract3 aggregate%substring3%4#0 0u 8u) to ((extract 0 8) aggregate%substring3%4#0)
debug: Simplified (extract3 aggregate%substring3%6#0 0u 8u) to ((extract 0 8) aggregate%substring3%6#0)
debug: Simplified (extract3 aggregate%substring3%8#0 0u 8u) to ((extract 0 8) aggregate%substring3%8#0)
debug: Simplified (extract3 aggregate%substring3%10#0 0u 8u) to ((extract 0 8) aggregate%substring3%10#0)
debug: Simplified (extract3 aggregate%encoded_element%22#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%22#0)
debug: Simplified (extract3 aggregate%substring3%12#0 0u 8u) to ((extract 0 8) aggregate%substring3%12#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%1#0 0u 8u) to ((extract 0 8) reinterpret_Encoded(uint64,uint64)%1#0)
debug: Simplified (extract3 reinterpret_Encoded(uint64,uint64)%1#0 8u 8u) to ((extract 8 8) reinterpret_Encoded(uint64,uint64)%1#0)
debug: Simplified (replace3 arr1#1 0u 0x00000000000000000000000000000000) to ((replace2 0) arr1#1 0x00000000000000000000000000000000)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%array_length%4#0: uint64 = (extract_uint16 arr#49 0u) with copy of existing registers (Register(source_location=array/immutable.py:104:15-25, ir_type=uint64, name='aggregate%array_length%3', version=0),)
debug: Replacing redundant declaration let extract_uint16%1#3: uint64 = (extract_uint16 arr#49 0u) with copy of existing registers (Register(source_location=array/immutable.py:104:15-25, ir_type=uint64, name='aggregate%array_length%3', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%6#0: uint64 = (extract_uint16 arr#50 0u) with copy of existing registers (Register(source_location=array/immutable.py:108:15-25, ir_type=uint64, name='aggregate%array_length%5', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%3#0: bytes = ((extract 2 0) arr#50) with copy of existing registers (Register(source_location=array/immutable.py:109:15-22, ir_type=bytes, name='aggregate%array_trimmed%2', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%8#0: uint64 = (extract_uint16 arr#56 0u) with copy of existing registers (Register(source_location=array/immutable.py:113:15-25, ir_type=uint64, name='aggregate%array_length%7', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%10#0: uint64 = (extract_uint16 arr#52 0u) with copy of existing registers (Register(source_location=array/immutable.py:117:15-25, ir_type=uint64, name='aggregate%array_length%9', version=0),)
debug: Replacing redundant declaration let extract_uint16%2#3: uint64 = (extract_uint16 arr#52 0u) with copy of existing registers (Register(source_location=array/immutable.py:117:15-25, ir_type=uint64, name='aggregate%array_length%9', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%12#0: uint64 = (extract_uint16 arr#53 0u) with copy of existing registers (Register(source_location=array/immutable.py:121:15-25, ir_type=uint64, name='aggregate%array_length%11', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%16#0: uint64 = (extract_uint16 arr#40 0u) with copy of existing registers (Register(source_location=array/immutable.py:136:15-25, ir_type=uint64, name='aggregate%array_length%15', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%18#0: uint64 = (extract_uint16 arr#45 0u) with copy of existing registers (Register(source_location=array/immutable.py:140:15-25, ir_type=uint64, name='aggregate%array_length%17', version=0),)
debug: Replacing redundant declaration let extract_uint16%1#2: uint64 = (extract_uint16 arr#45 0u) with copy of existing registers (Register(source_location=array/immutable.py:140:15-25, ir_type=uint64, name='aggregate%array_length%17', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%20#0: uint64 = (extract_uint16 arr#42 0u) with copy of existing registers (Register(source_location=array/immutable.py:144:15-25, ir_type=uint64, name='aggregate%array_length%19', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%12#0: bytes = ((extract 2 0) arr#42) with copy of existing registers (Register(source_location=array/immutable.py:145:15-22, ir_type=bytes, name='aggregate%array_trimmed%11', version=0),)
debug: Replacing redundant declaration let aggregate%bzero%3#0: bytes = (bzero 64u) with copy of existing registers (Register(source_location=array/immutable.py:143:14-64, ir_type=bytes, name='aggregate%bzero%2', version=0),)
debug: Replacing redundant declaration let extract_uint16%2#2: uint64 = (extract_uint16 arr#42 0u) with copy of existing registers (Register(source_location=array/immutable.py:144:15-25, ir_type=uint64, name='aggregate%array_length%19', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%22#0: uint64 = (extract_uint16 arr#43 0u) with copy of existing registers (Register(source_location=array/immutable.py:149:15-25, ir_type=uint64, name='aggregate%array_length%21', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%14#0: bytes = ((extract 2 0) arr#43) with copy of existing registers (Register(source_location=array/immutable.py:150:15-22, ir_type=bytes, name='aggregate%array_trimmed%13', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%32#0: uint64 = (extract_uint16 arr#33 0u) with copy of existing registers (Register(source_location=array/immutable.py:187:15-25, ir_type=uint64, name='aggregate%array_length%31', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%16#0: bytes = ((extract 2 0) arr#33) with copy of existing registers (Register(source_location=array/immutable.py:188:15-21, ir_type=bytes, name='aggregate%array_trimmed%15', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%34#0: uint64 = (extract_uint16 arr#35 0u) with copy of existing registers (Register(source_location=array/immutable.py:192:15-25, ir_type=uint64, name='aggregate%array_length%33', version=0),)
debug: Replacing redundant declaration let aggregate%array_trimmed%18#0: bytes = ((extract 2 0) arr#35) with copy of existing registers (Register(source_location=array/immutable.py:193:15-21, ir_type=bytes, name='aggregate%array_trimmed%17', version=0),)
debug: Replacing redundant declaration let i#37: uint64 = (+ i#36 1u) with copy of existing registers (Register(source_location=array/immutable.py:222:19-25, ir_type=uint64, name='aggregate%next_index%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%41#0: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:226:15-25, ir_type=uint64, name='aggregate%array_length%40', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%42#0: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:226:15-25, ir_type=uint64, name='aggregate%array_length%40', version=0),)
debug: Replacing redundant declaration let aggregate%array_head_and_tail%2#0: bytes = ((extract 2 0) arr#28) with copy of existing registers (Register(source_location=array/immutable.py:227:15-21, ir_type=bytes, name='aggregate%array_head_and_tail%1', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%43#0: uint64 = (extract_uint16 arr#28 0u) with copy of existing registers (Register(source_location=array/immutable.py:226:15-25, ir_type=uint64, name='aggregate%array_length%40', version=0),)
debug: Replacing redundant declaration let i#31: uint64 = (+ i#30 1u) with copy of existing registers (Register(source_location=array/immutable.py:241:19-25, ir_type=uint64, name='aggregate%next_index%3', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%48#0: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:245:15-25, ir_type=uint64, name='aggregate%array_length%47', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%49#0: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:245:15-25, ir_type=uint64, name='aggregate%array_length%47', version=0),)
debug: Replacing redundant declaration let aggregate%array_head_and_tail%5#0: bytes = ((extract 2 0) arr#23) with copy of existing registers (Register(source_location=array/immutable.py:246:15-21, ir_type=bytes, name='aggregate%array_head_and_tail%4', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%50#0: uint64 = (extract_uint16 arr#23 0u) with copy of existing registers (Register(source_location=array/immutable.py:245:15-25, ir_type=uint64, name='aggregate%array_length%47', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%18#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=array/immutable.py:278:15-45, ir_type=bytes[8], name='aggregate%as_bytes%17', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%19#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=array/immutable.py:278:15-45, ir_type=bytes[8], name='aggregate%as_bytes%17', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%20#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=array/immutable.py:278:15-45, ir_type=bytes[8], name='aggregate%as_bytes%17', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_bool%3#0: bytes[1] = (setbit 0x00 0u tmp%8#2) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%encoded_bool%2', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%13#0: bytes[8] = (itob i#20) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[8], name='aggregate%val_as_bytes%11', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_bool%4#0: bytes[1] = (setbit 0x00 0u tmp%8#2) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%encoded_bool%2', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%14#0: bytes[8] = (itob i#21) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[8], name='aggregate%val_as_bytes%12', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%15#0: bytes[8] = (itob i#20) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[8], name='aggregate%val_as_bytes%11', version=0),)
debug: Replacing redundant declaration let aggregate%encoded_bool%5#0: bytes[1] = (setbit 0x00 0u tmp%8#2) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%encoded_bool%2', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%16#0: bytes[8] = (itob i#21) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[8], name='aggregate%val_as_bytes%12', version=0),)
debug: Replacing redundant declaration let item_index_internal%3#2: uint64 = (+ idx#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:361, ir_type=uint64, name='aggregate%next_index%6', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%23#0: bytes[8] = (itob 3u) with copy of existing registers (Register(source_location=array/immutable.py:370:14-61, ir_type=bytes[8], name='aggregate%as_bytes%21', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%34#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=array/immutable.py:426:32-48, ir_type=bytes[8], name='aggregate%as_bytes%33', version=0),)
debug: Replacing redundant declaration let aggregate%extract_uint16%9#0: uint64 = (extract_uint16 reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 2u) with copy of existing registers (Register(source_location=array/immutable.py:93, ir_type=uint64, name='aggregate%extract_uint16%8', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%39#0: bytes[8] = (itob 1u) with copy of existing registers (Register(source_location=array/immutable.py:434:32-48, ir_type=bytes[8], name='aggregate%as_bytes%38', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%68#0: uint64 = (extract_uint16 imm#0 0u) with copy of existing registers (Register(source_location=array/immutable.py:446:15-18, ir_type=uint64, name='aggregate%array_length%67', version=0),)
debug: Replacing redundant declaration let aggregate%val_as_bytes%33#0: bytes[8] = (itob 0u) with copy of existing registers (Register(source_location=array/immutable.py:473:21-53, ir_type=bytes[8], name='aggregate%val_as_bytes%32', version=0),)
debug: Replacing redundant declaration let aggregate%bzero%1#0: bytes = (bzero 64u) with copy of existing registers (Register(source_location=array/immutable.py:135:14-55, ir_type=bytes, name='aggregate%bzero%0', version=0),)
debug: Replacing redundant declaration let aggregate%bzero%2#0: bytes = (bzero 64u) with copy of existing registers (Register(source_location=array/immutable.py:135:14-55, ir_type=bytes, name='aggregate%bzero%0', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%25#0: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:163:15-25, ir_type=uint64, name='aggregate%array_length%24', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%26#0: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:163:15-25, ir_type=uint64, name='aggregate%array_length%24', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%27#0: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:163:15-25, ir_type=uint64, name='aggregate%array_length%24', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%28#0: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:163:15-25, ir_type=uint64, name='aggregate%array_length%24', version=0),)
debug: Replacing redundant declaration let array_length#0: uint64 = (extract_uint16 arr#37 0u) with copy of existing registers (Register(source_location=array/immutable.py:163:15-25, ir_type=uint64, name='aggregate%array_length%24', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%39#0: uint64 = (extract_uint16 arr#25 0u) with copy of existing registers (Register(source_location=array/immutable.py:220:15-25, ir_type=uint64, name='aggregate%array_length%38', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%46#0: uint64 = (extract_uint16 arr#20 0u) with copy of existing registers (Register(source_location=array/immutable.py:239:15-25, ir_type=uint64, name='aggregate%array_length%45', version=0),)
debug: Replacing redundant declaration let aggregate%array_head_and_tail%7#0: bytes = ((extract 2 0) arr#15) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=bytes, name='aggregate%array_head_and_tail%6', version=0),)
debug: Replacing redundant declaration let aggregate%item_offset_offset%7#0: uint64 = (* item_index_internal%0#7 2u) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=uint64, name='aggregate%item_offset_offset%6', version=0),)
debug: Replacing redundant declaration let aggregate%array_length%65#0: uint64 = (extract_uint16 arr4#0 0u) with copy of existing registers (Register(source_location=array/immutable.py:361, ir_type=uint64, name='aggregate%array_length%64', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%29#0: bytes[8] = (itob 10u) with copy of existing registers (Register(source_location=array/immutable.py:391:14-76, ir_type=bytes[8], name='aggregate%as_bytes%26', version=0),)
debug: Replacing redundant declaration let aggregate%as_bytes%30#0: bytes[8] = (itob 2u) with copy of existing registers (Register(source_location=array/immutable.py:391:14-76, ir_type=bytes[8], name='aggregate%as_bytes%27', version=0),)
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%3#0, aggregate%array_length%4#0, extract_uint16%1#3
debug: selected aggregate%array_length%3#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%1#0, aggregate%head%1#0
debug: selected aggregate%val_as_bytes%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%5#0, aggregate%array_length%6#0
debug: selected aggregate%array_length%5#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%2#0, aggregate%array_trimmed%3#0
debug: selected aggregate%array_trimmed%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%7#0, aggregate%array_length%8#0
debug: selected aggregate%array_length%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%9#0, aggregate%array_length%10#0, extract_uint16%2#3
debug: selected aggregate%array_length%9#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%2#0, aggregate%head%2#0
debug: selected aggregate%val_as_bytes%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%11#0, aggregate%array_length%12#0
debug: selected aggregate%array_length%11#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%0#0, aggregate%head%3#0
debug: selected aggregate%arc4_encoded%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%15#0, aggregate%array_length%16#0
debug: selected aggregate%array_length%15#0 from equivalence set
debug: Found equivalence set: aggregate%bzero%0#0, aggregate%bzero%1#0, aggregate%bzero%2#0, aggregate%bzero%3#0
debug: selected aggregate%bzero%0#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%1#0, aggregate%head%4#0
debug: selected aggregate%arc4_encoded%1#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%17#0, aggregate%array_length%18#0, extract_uint16%1#2
debug: selected aggregate%array_length%17#0 from equivalence set
debug: Found equivalence set: aggregate%arc4_encoded%2#0, aggregate%head%5#0
debug: selected aggregate%arc4_encoded%2#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%19#0, aggregate%array_length%20#0, extract_uint16%2#2
debug: selected aggregate%array_length%19#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%11#0, aggregate%array_trimmed%12#0
debug: selected aggregate%array_trimmed%11#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%21#0, aggregate%array_length%22#0
debug: selected aggregate%array_length%21#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%13#0, aggregate%array_trimmed%14#0
debug: selected aggregate%array_trimmed%13#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%0#0, aggregate%head%7#0
debug: selected aggregate%encoded_bool%0#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%24#0, aggregate%array_length%25#0, aggregate%array_length%26#0, aggregate%array_length%27#0, aggregate%array_length%28#0, array_length#0
debug: selected array_length#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%4#0, aggregate%head%8#0
debug: selected aggregate%val_as_bytes%4#0 from equivalence set
debug: Found equivalence set: aggregate%head%9#0, aggregate%head%10#0
debug: selected aggregate%head%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%31#0, aggregate%array_length%32#0
debug: selected aggregate%array_length%31#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%15#0, aggregate%array_trimmed%16#0
debug: selected aggregate%array_trimmed%15#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%33#0, aggregate%array_length%34#0
debug: selected aggregate%array_length%33#0 from equivalence set
debug: Found equivalence set: aggregate%array_trimmed%17#0, aggregate%array_trimmed%18#0
debug: selected aggregate%array_trimmed%17#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%6#0, aggregate%head%11#0
debug: selected aggregate%val_as_bytes%6#0 from equivalence set
debug: Found equivalence set: aggregate%head%12#0, aggregate%head%13#0
debug: selected aggregate%head%12#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%7#0, aggregate%head%14#0
debug: selected aggregate%val_as_bytes%7#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%38#0, aggregate%array_length%39#0
debug: selected aggregate%array_length%38#0 from equivalence set
debug: Found equivalence set: aggregate%next_index%0#0, i#37
debug: selected i#37 from equivalence set
debug: Found equivalence set: aggregate%array_length%40#0, aggregate%array_length%41#0, aggregate%array_length%42#0, aggregate%array_length%43#0
debug: selected aggregate%array_length%40#0 from equivalence set
debug: Found equivalence set: aggregate%array_head_and_tail%1#0, aggregate%array_head_and_tail%2#0
debug: selected aggregate%array_head_and_tail%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%8#0, aggregate%head%17#0
debug: selected aggregate%val_as_bytes%8#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%45#0, aggregate%array_length%46#0
debug: selected aggregate%array_length%45#0 from equivalence set
debug: Found equivalence set: aggregate%next_index%3#0, i#31
debug: selected i#31 from equivalence set
debug: Found equivalence set: aggregate%array_length%47#0, aggregate%array_length%48#0, aggregate%array_length%49#0, aggregate%array_length%50#0
debug: selected aggregate%array_length%47#0 from equivalence set
debug: Found equivalence set: aggregate%array_head_and_tail%4#0, aggregate%array_head_and_tail%5#0
debug: selected aggregate%array_head_and_tail%4#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%9#0, aggregate%head%21#0
debug: selected aggregate%val_as_bytes%9#0 from equivalence set
debug: Found equivalence set: aggregate%array_head_and_tail%6#0, aggregate%array_head_and_tail%7#0
debug: selected aggregate%array_head_and_tail%6#0 from equivalence set
debug: Found equivalence set: aggregate%item_offset_offset%6#0, aggregate%item_offset_offset%7#0
debug: selected aggregate%item_offset_offset%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%10#0, aggregate%head%23#0
debug: selected aggregate%val_as_bytes%10#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%17#0, aggregate%as_bytes%18#0, aggregate%as_bytes%19#0, aggregate%as_bytes%20#0
debug: selected aggregate%as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%1#0, aggregate%head%24#0, aggregate%head%25#0
debug: selected aggregate%set_bit%1#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%11#0, aggregate%head%26#0, aggregate%val_as_bytes%13#0, aggregate%head%30#0, aggregate%val_as_bytes%15#0, aggregate%head%34#0
debug: selected aggregate%val_as_bytes%11#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%2#0, aggregate%encoded_bool%3#0, aggregate%encoded_bool%4#0, aggregate%encoded_bool%5#0
debug: selected aggregate%encoded_bool%2#0 from equivalence set
debug: Found equivalence set: aggregate%head%28#0, aggregate%head%29#0
debug: selected aggregate%head%28#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%12#0, aggregate%val_as_bytes%14#0, aggregate%val_as_bytes%16#0
debug: selected aggregate%val_as_bytes%12#0 from equivalence set
debug: Found equivalence set: aggregate%head%32#0, aggregate%head%33#0
debug: selected aggregate%head%32#0 from equivalence set
debug: Found equivalence set: aggregate%head%37#0, aggregate%head%38#0
debug: selected aggregate%head%37#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%64#0, aggregate%array_length%65#0
debug: selected aggregate%array_length%64#0 from equivalence set
debug: Found equivalence set: aggregate%next_index%6#0, item_index_internal%3#2
debug: selected aggregate%next_index%6#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%17#0, aggregate%head%39#0
debug: selected aggregate%val_as_bytes%17#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%21#0, aggregate%val_as_bytes%23#0
debug: selected aggregate%as_bytes%21#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%24#0, aggregate%head%46#0
debug: selected aggregate%val_as_bytes%24#0 from equivalence set
debug: Found equivalence set: aggregate%encoded_bool%8#0, aggregate%head%48#0
debug: selected aggregate%encoded_bool%8#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%25#0, aggregate%head%49#0
debug: selected aggregate%val_as_bytes%25#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%26#0, aggregate%head%52#0
debug: selected aggregate%val_as_bytes%26#0 from equivalence set
debug: Found equivalence set: aggregate%head%53#0, aggregate%head%54#0
debug: selected aggregate%head%53#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%27#0, aggregate%head%55#0
debug: selected aggregate%val_as_bytes%27#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%28#0, aggregate%head%58#0
debug: selected aggregate%val_as_bytes%28#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%26#0, aggregate%as_bytes%29#0
debug: selected aggregate%as_bytes%26#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%27#0, aggregate%as_bytes%30#0
debug: selected aggregate%as_bytes%27#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%29#0, aggregate%head%61#0
debug: selected aggregate%val_as_bytes%29#0 from equivalence set
debug: Found equivalence set: aggregate%head%62#0, aggregate%head%63#0
debug: selected aggregate%head%62#0 from equivalence set
debug: Found equivalence set: arg.0#1, aggregate%head%68#0
debug: selected arg.0#1 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%33#0, aggregate%as_bytes%34#0
debug: selected aggregate%as_bytes%33#0 from equivalence set
debug: Found equivalence set: aggregate%extract_uint16%8#0, aggregate%extract_uint16%9#0
debug: selected aggregate%extract_uint16%8#0 from equivalence set
debug: Found equivalence set: aggregate%as_bytes%38#0, aggregate%as_bytes%39#0
debug: selected aggregate%as_bytes%38#0 from equivalence set
debug: Found equivalence set: aggregate%array_length%67#0, aggregate%array_length%68#0
debug: selected aggregate%array_length%67#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%30#0, aggregate%head%74#0
debug: selected aggregate%val_as_bytes%30#0 from equivalence set
debug: Found equivalence set: struct12#0, aggregate%head%76#0
debug: selected struct12#0 from equivalence set
debug: Found equivalence set: aggregate%val_as_bytes%32#0, aggregate%head%79#0, aggregate%val_as_bytes%33#0
debug: selected aggregate%val_as_bytes%32#0 from equivalence set
debug: Copy propagation made 63 modifications
debug: Replacing redundant declaration let tmp%22#2: uint64 = (- aggregate%array_length%40#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:227:15-21, ir_type=uint64, name='aggregate%has_next%1', version=0),)
debug: Replacing redundant declaration let aggregate%end_of_array%2#0: uint64 = (len aggregate%array_head_and_tail%1#0) with copy of existing registers (Register(source_location=array/immutable.py:227:15-21, ir_type=uint64, name='aggregate%end_of_array%1', version=0),)
debug: Replacing redundant declaration let tmp%21#1: uint64 = (- aggregate%array_length%47#0 1u) with copy of existing registers (Register(source_location=array/immutable.py:246:15-21, ir_type=uint64, name='aggregate%has_next%4', version=0),)
debug: Replacing redundant declaration let aggregate%end_of_array%5#0: uint64 = (len aggregate%array_head_and_tail%4#0) with copy of existing registers (Register(source_location=array/immutable.py:246:15-21, ir_type=uint64, name='aggregate%end_of_array%4', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%2#0: bytes[1] = (setbit aggregate%encoded_bool%2#0 1u tmp%9#3) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%set_bit%1', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%8#0: bytes[1] = (setbit aggregate%encoded_bool%2#0 1u tmp%9#3) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%set_bit%1', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%15#0: bytes[1] = (setbit aggregate%encoded_bool%2#0 1u tmp%9#3) with copy of existing registers (Register(source_location=array/immutable.py:288:19-64, ir_type=bytes[1], name='aggregate%set_bit%1', version=0),)
debug: Replacing redundant declaration let aggregate%item_offset%7#0: uint64 = (extract_uint16 aggregate%array_head_and_tail%6#0 aggregate%item_offset_offset%6#0) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=uint64, name='aggregate%item_offset%6', version=0),)
debug: Found equivalence set: aggregate%has_next%1#0, tmp%22#2
debug: selected aggregate%has_next%1#0 from equivalence set
debug: Found equivalence set: aggregate%end_of_array%1#0, aggregate%end_of_array%2#0
debug: selected aggregate%end_of_array%1#0 from equivalence set
debug: Found equivalence set: aggregate%has_next%4#0, tmp%21#1
debug: selected aggregate%has_next%4#0 from equivalence set
debug: Found equivalence set: aggregate%end_of_array%4#0, aggregate%end_of_array%5#0
debug: selected aggregate%end_of_array%4#0 from equivalence set
debug: Found equivalence set: aggregate%item_offset%6#0, aggregate%item_offset%7#0
debug: selected aggregate%item_offset%6#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%1#0, aggregate%set_bit%2#0, aggregate%set_bit%8#0, aggregate%set_bit%15#0
debug: selected aggregate%set_bit%1#0 from equivalence set
debug: Copy propagation made 11 modifications
debug: Replacing redundant declaration let aggregate%set_bit%9#0: bytes[1] = (setbit aggregate%set_bit%1#0 2u tmp%13#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%3', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%16#0: bytes[1] = (setbit aggregate%set_bit%1#0 2u tmp%13#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%3', version=0),)
debug: Replacing redundant declaration let aggregate%item_length%1#0: uint64 = (extract_uint16 aggregate%array_head_and_tail%6#0 aggregate%item_offset%6#0) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=uint64, name='aggregate%item_length%0', version=0),)
debug: Found equivalence set: aggregate%item_length%0#0, aggregate%item_length%1#0
debug: selected aggregate%item_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%3#0, aggregate%set_bit%9#0, aggregate%set_bit%16#0
debug: selected aggregate%set_bit%3#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%set_bit%10#0: bytes[1] = (setbit aggregate%set_bit%3#0 3u tmp%14#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%4', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%17#0: bytes[1] = (setbit aggregate%set_bit%3#0 3u tmp%14#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%4', version=0),)
debug: Replacing redundant declaration let aggregate%item_length_in_bytes%1#0: uint64 = (* aggregate%item_length%0#0 8u) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=uint64, name='aggregate%item_length_in_bytes%0', version=0),)
debug: Found equivalence set: aggregate%item_length_in_bytes%0#0, aggregate%item_length_in_bytes%1#0
debug: selected aggregate%item_length_in_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%4#0, aggregate%set_bit%10#0, aggregate%set_bit%17#0
debug: selected aggregate%set_bit%4#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%set_bit%11#0: bytes[1] = (setbit aggregate%set_bit%4#0 4u tmp%15#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%5', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%18#0: bytes[1] = (setbit aggregate%set_bit%4#0 4u tmp%15#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%5', version=0),)
debug: Replacing redundant declaration let aggregate%item_head_tail_length%1#0: uint64 = (+ aggregate%item_length_in_bytes%0#0 2u) with copy of existing registers (Register(source_location=array/immutable.py:271, ir_type=uint64, name='aggregate%item_head_tail_length%0', version=0),)
debug: Found equivalence set: aggregate%item_head_tail_length%0#0, aggregate%item_head_tail_length%1#0
debug: selected aggregate%item_head_tail_length%0#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%5#0, aggregate%set_bit%11#0, aggregate%set_bit%18#0
debug: selected aggregate%set_bit%5#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%set_bit%12#0: bytes[1] = (setbit aggregate%set_bit%5#0 5u tmp%16#1) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%6', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%19#0: bytes[1] = (setbit aggregate%set_bit%5#0 5u tmp%16#1) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%6', version=0),)
debug: Replacing redundant declaration let aggregate%item%1#0: bytes = (extract3 aggregate%array_head_and_tail%6#0 aggregate%item_offset%6#0 aggregate%item_head_tail_length%0#0) with copy of existing registers (Register(source_location=array/immutable.py:271:12-21, ir_type=Encoded(len+uint64[]), name='inner_arr', version=0),)
debug: Found equivalence set: inner_arr#0, aggregate%item%1#0
debug: selected inner_arr#0 from equivalence set
debug: Found equivalence set: aggregate%set_bit%6#0, aggregate%set_bit%12#0, aggregate%set_bit%19#0
debug: selected aggregate%set_bit%6#0 from equivalence set
debug: Copy propagation made 3 modifications
debug: Replacing redundant declaration let aggregate%set_bit%13#0: bytes[1] = (setbit aggregate%set_bit%6#0 6u tmp%17#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%7', version=0),)
debug: Replacing redundant declaration let aggregate%set_bit%20#0: bytes[1] = (setbit aggregate%set_bit%6#0 6u tmp%17#2) with copy of existing registers (Register(source_location=array/immutable.py:289-301:19-13, ir_type=bytes[1], name='aggregate%set_bit%7', version=0),)
debug: Found equivalence set: aggregate%set_bit%7#0, aggregate%set_bit%13#0, aggregate%set_bit%20#0
debug: selected aggregate%set_bit%7#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Replacing redundant declaration let aggregate%set_bit%21#0: bytes[1] = (setbit aggregate%set_bit%7#0 7u tmp%27#1) with copy of existing registers (Register(source_location=array/immutable.py:302-315:19-13, ir_type=bytes[1], name='aggregate%set_bit%14', version=0),)
debug: Found equivalence set: aggregate%set_bit%14#0, aggregate%set_bit%21#0
debug: selected aggregate%set_bit%14#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let aggregate%head%35#0: bytes = (concat aggregate%val_as_bytes%11#0 aggregate%set_bit%14#0) with copy of existing registers (Register(source_location=array/immutable.py:302-315:19-13, ir_type=bytes, name='aggregate%head%31', version=0),)
debug: Found equivalence set: aggregate%head%31#0, aggregate%head%35#0
debug: selected aggregate%head%31#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
array/immutable.py:401:9 debug: replacing slot read with cached value for key: mutable#0
array/immutable.py:400:19 debug: removing unobserved slot write to key: mutable#0
array/immutable.py:468:16 debug: replacing app_global read with cached value for key: "imm_fixed_arr"
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%extract%0#0, tuple_item%0#0
debug: selected aggregate%extract%0#0 from equivalence set
debug: Found equivalence set: aggregate%extract%1#0, tuple_item%1#0
debug: selected aggregate%extract%1#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable array_length%0#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (btoi aggregate%extract%0#0) to (extract_uint64 aggregate%encoded_element%0#0 0u)
debug: Simplified (btoi aggregate%extract%1#0) to (extract_uint64 aggregate%encoded_element%1#0 8u)
debug: Simplified (extract3 aggregate%encoded_element%0#0 0u 8u) to ((extract 0 8) aggregate%encoded_element%0#0)
debug: Simplified (extract3 aggregate%encoded_element%1#0 8u 8u) to ((extract 8 8) aggregate%encoded_element%1#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let aggregate%bytes_offset%1#0: uint64 = (* item_index_internal%0#1 16u) with copy of existing registers (Register(source_location=array/immutable.py:482-483, ir_type=uint64, name='aggregate%bytes_offset%0', version=0),)
debug: Found equivalence set: aggregate%bytes_offset%0#0, aggregate%bytes_offset%1#0
debug: selected aggregate%bytes_offset%0#0 from equivalence set
debug: Copy propagation made 1 modifications
debug: Replacing redundant declaration let aggregate%encoded_element%1#0: bytes = (extract3 arr#0 aggregate%bytes_offset%0#0 16u) // on error: index access is out of bounds with copy of existing registers (Register(source_location=array/immutable.py:482-483, ir_type=bytes, name='aggregate%encoded_element%0', version=0),)
debug: Found equivalence set: aggregate%encoded_element%0#0, aggregate%encoded_element%1#0
debug: selected aggregate%encoded_element%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%as_Encoded(uint64)%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Found equivalence set: aggregate%head%0#0, aggregate%as_Encoded(uint64[])%0#0, tmp%0#0
debug: selected aggregate%head%0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x aggregate%val_as_bytes%0#0) to aggregate%val_as_bytes%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 2/100
debug: marking single-use function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head for inlining
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: arr1#1, maybe_value%0#0
debug: selected arr1#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%as_bytes%0#0
debug: Removing unused variable arr#47
debug: Removing unused variable aggregate%array_length%0#0
debug: Removing unused variable tmp%1#18
debug: Removing unused variable aggregate%val_as_bytes%0#0
debug: Removing unused variable concat%0#12
debug: Removing unused variable extract_uint16%0#13
debug: Removing unused variable add%0#9
debug: Removing unused variable as_bytes%0#11
debug: Removing unused variable as_u16_bytes%0#11
debug: Removing unused variable arr#48
debug: Removing unused variable aggregate%array_length%1#0
debug: Removing unused variable tmp%4#11
debug: Removing unused variable aggregate%array_length%2#0
debug: Removing unused variable tmp%6#10
debug: Removing unused variable aggregate%array_trimmed%0#0
debug: Removing unused variable aggregate%bytes_offset%0#0
debug: Removing unused variable aggregate%encoded_element%0#0
debug: Removing unused variable values%0#5
debug: Removing unused variable tmp%7#7
debug: Removing unused variable aggregate%encoded_element%1#0
debug: Removing unused variable aggregate%encoded_element%2#0
debug: Removing unused variable aggregate%bytes_offset%3#0
debug: Removing unused variable aggregate%encoded_element%3#0
debug: Removing unused variable aggregate%encoded_element%4#0
debug: Removing unused variable aggregate%encoded_element%5#0
debug: Removing unused variable aggregate%encoded_element%6#0
debug: Removing unused variable aggregate%write_offset%0#0
debug: Removing unused variable aggregate%write_offset_with_length_header%0#0
debug: Removing unused variable aggregate%array_trimmed%8#0
debug: Removing unused variable aggregate%bytes_offset%8#0
debug: Removing unused variable aggregate%encoded_element%8#0
debug: Removing unused variable aggregate%as_bytes%1#0
debug: Removing unused variable arr#39
debug: Removing unused variable aggregate%array_length%14#0
debug: Removing unused variable tmp%1#16
debug: Removing unused variable aggregate%value_len%0#0
debug: Removing unused variable aggregate%len_ok%0#0
debug: Removing unused variable extract_uint16%0#11
debug: Removing unused variable add%0#7
debug: Removing unused variable as_bytes%0#9
debug: Removing unused variable as_u16_bytes%0#9
debug: Removing unused variable aggregate%value_len%1#0
debug: Removing unused variable aggregate%len_ok%1#0
debug: Removing unused variable aggregate%bytes_offset%12#0
debug: Removing unused variable aggregate%value_len%3#0
debug: Removing unused variable aggregate%len_ok%3#0
debug: Removing unused variable aggregate%arc4_encoded%3#0
debug: Removing unused variable aggregate%head%6#0
debug: Removing unused variable aggregate%bytes_offset%14#0
debug: Removing unused variable aggregate%as_bytes%2#0
debug: Removing unused variable aggregate%array_length%23#0
debug: Removing unused variable tmp%1#15
debug: Removing unused variable aggregate%lt%0#0
debug: Removing unused variable aggregate%add%0#0
debug: Removing unused variable aggregate%add%1#0
debug: Removing unused variable aggregate%add%2#0
debug: Removing unused variable aggregate%as_bytes%3#0
debug: Removing unused variable aggregate%array_length%30#0
debug: Removing unused variable tmp%1#14
debug: Removing unused variable aggregate%bytes_offset%15#0
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Removing unused variable aggregate%extract%2#0
debug: Removing unused variable aggregate%extract%3#0
debug: Removing unused variable aggregate%bytes_offset%17#0
debug: Removing unused variable aggregate%extract%4#0
debug: Removing unused variable aggregate%extract%5#0
debug: Removing unused variable aggregate%extract%6#0
debug: Removing unused variable aggregate%extract%7#0
debug: Removing unused variable aggregate%as_bytes%4#0
debug: Removing unused variable aggregate%array_length%35#0
debug: Removing unused variable tmp%1#13
debug: Removing unused variable aggregate%array_trimmed%19#0
debug: Removing unused variable aggregate%bytes_offset%19#0
debug: Removing unused variable aggregate%extract%8#0
debug: Removing unused variable aggregate%as_bytes%5#0
debug: Removing unused variable aggregate%array_length%37#0
debug: Removing unused variable tmp%1#12
debug: Removing unused variable aggregate%as_bytes%7#0
debug: Removing unused variable aggregate%offset_as_uint16%0#0
debug: Removing unused variable aggregate%as_bytes%8#0
debug: Removing unused variable aggregate%offset_as_uint16%1#0
debug: Removing unused variable aggregate%head%16#0
debug: Removing unused variable aggregate%extract%9#0
debug: Removing unused variable aggregate%item_offset_offset%1#0
debug: Removing unused variable aggregate%next_index%1#0
debug: Removing unused variable aggregate%next_item_offset_offset%1#0
debug: Removing unused variable aggregate%extract%10#0
debug: Removing unused variable aggregate%extract%11#0
debug: Removing unused variable aggregate%as_bytes%9#0
debug: Removing unused variable aggregate%array_length%44#0
debug: Removing unused variable tmp%1#11
debug: Removing unused variable aggregate%as_bytes%11#0
debug: Removing unused variable aggregate%offset_as_uint16%2#0
debug: Removing unused variable aggregate%as_bytes%12#0
debug: Removing unused variable aggregate%offset_as_uint16%3#0
debug: Removing unused variable aggregate%head%19#0
debug: Removing unused variable aggregate%extract%12#0
debug: Removing unused variable aggregate%item_offset_offset%4#0
debug: Removing unused variable aggregate%next_index%4#0
debug: Removing unused variable aggregate%next_item_offset_offset%4#0
debug: Removing unused variable aggregate%extract%13#0
debug: Removing unused variable aggregate%extract%14#0
debug: Removing unused variable aggregate%as_bytes%13#0
debug: Removing unused variable aggregate%offset_as_uint16%4#0
debug: Removing unused variable aggregate%head%20#0
debug: Removing unused variable aggregate%concat%4#0
debug: Removing unused variable aggregate%as_bytes%14#0
debug: Removing unused variable aggregate%as_bytes%15#0
debug: Removing unused variable aggregate%offset_as_uint16%5#0
debug: Removing unused variable aggregate%head%22#0
debug: Removing unused variable aggregate%as_bytes%16#0
debug: Removing unused variable aggregate%encoded_element%20#0
debug: Removing unused variable aggregate%as_bytes%17#0
debug: Removing unused variable aggregate%array_length%53#0
debug: Removing unused variable tmp%1#9
debug: Removing unused variable aggregate%array_length%54#0
debug: Removing unused variable tmp%3#5
debug: Removing unused variable aggregate%array_length%55#0
debug: Removing unused variable tmp%5#2
debug: Removing unused variable aggregate%array_length%56#0
debug: Removing unused variable tmp%7#2
debug: Removing unused variable aggregate%encoded_element%21#0
debug: Removing unused variable aggregate%extract%15#0
debug: Removing unused variable aggregate%extract%16#0
debug: Removing unused variable aggregate%as_bytes%21#0
debug: Removing unused variable aggregate%len_u16%13#0
debug: Removing unused variable aggregate%val_as_bytes%21#0
debug: Removing unused variable aggregate%head%43#0
debug: Removing unused variable aggregate%val_as_bytes%22#0
debug: Removing unused variable aggregate%head%44#0
debug: Removing unused variable aggregate%as_bytes%22#0
debug: Removing unused variable aggregate%len_u16%14#0
debug: Removing unused variable aggregate%encoded_bool%7#0
debug: Removing unused variable aggregate%set_bit%22#0
debug: Removing unused variable aggregate%set_bit%23#0
debug: Removing unused variable aggregate%set_bit%24#0
debug: Removing unused variable aggregate%set_bit%25#0
debug: Removing unused variable aggregate%as_bytes%23#0
debug: Removing unused variable aggregate%len_u16%15#0
debug: Removing unused variable aggregate%val_as_bytes%25#0
debug: Removing unused variable aggregate%encoded_bool%9#0
debug: Removing unused variable aggregate%set_bit%26#0
debug: Removing unused variable aggregate%head%50#0
debug: Removing unused variable aggregate%as_bytes%24#0
debug: Removing unused variable aggregate%len_u16%16#0
debug: Removing unused variable aggregate%val_as_bytes%27#0
debug: Removing unused variable aggregate%length%2#0
debug: Removing unused variable aggregate%as_bytes%25#0
debug: Removing unused variable aggregate%length_uint16%2#0
debug: Removing unused variable aggregate%encoded_value%2#0
debug: Removing unused variable aggregate%as_bytes%26#0
debug: Removing unused variable aggregate%offset_as_uint16%6#0
debug: Removing unused variable aggregate%head%56#0
debug: Removing unused variable aggregate%concat%6#0
debug: Removing unused variable aggregate%as_bytes%27#0
debug: Removing unused variable aggregate%offset_as_uint16%7#0
debug: Removing unused variable aggregate%head%57#0
debug: Removing unused variable aggregate%offset_as_uint16%8#0
debug: Removing unused variable aggregate%offset_as_uint16%9#0
debug: Removing unused variable aggregate%head%60#0
debug: Removing unused variable slot_contents%0#0
debug: Removing unused variable aggregate%as_bytes%31#0
debug: Removing unused variable aggregate%len_u16%17#0
debug: Removing unused variable aggregate%head%64#0
debug: Removing unused variable prefix#3
debug: Removing unused variable aggregate%as_bytes%32#0
debug: Removing unused variable aggregate%len_u16%18#0
debug: Removing unused variable aggregate%head%66#0
debug: Removing unused variable prefix#2
debug: Removing unused variable extract_uint16%0#1
debug: Removing unused variable add%0#0
debug: Removing unused variable as_bytes%0#0
debug: Removing unused variable as_u16_bytes%0#0
debug: Removing unused variable aggregate%length%4#0
debug: Removing unused variable aggregate%as_bytes%33#0
debug: Removing unused variable aggregate%length_uint16%4#0
debug: Removing unused variable aggregate%encoded_value%4#0
debug: Removing unused variable aggregate%length%5#0
debug: Removing unused variable aggregate%length_uint16%5#0
debug: Removing unused variable aggregate%encoded_value%5#0
debug: Removing unused variable aggregate%as_bytes%35#0
debug: Removing unused variable aggregate%len_u16%19#0
debug: Removing unused variable aggregate%as_bytes%36#0
debug: Removing unused variable aggregate%offset_as_uint16%10#0
debug: Removing unused variable aggregate%head%70#0
debug: Removing unused variable aggregate%data_length%10#0
debug: Removing unused variable aggregate%current_tail_offset%10#0
debug: Removing unused variable aggregate%as_bytes%37#0
debug: Removing unused variable aggregate%offset_as_uint16%11#0
debug: Removing unused variable aggregate%head%71#0
debug: Removing unused variable aggregate%concat%10#0
debug: Removing unused variable prefix#1
debug: Removing unused variable aggregate%length%6#0
debug: Removing unused variable aggregate%as_bytes%38#0
debug: Removing unused variable aggregate%length_uint16%6#0
debug: Removing unused variable aggregate%encoded_value%6#0
debug: Removing unused variable aggregate%length%7#0
debug: Removing unused variable aggregate%length_uint16%7#0
debug: Removing unused variable aggregate%encoded_value%7#0
debug: Removing unused variable aggregate%as_bytes%40#0
debug: Removing unused variable aggregate%len_u16%20#0
debug: Removing unused variable aggregate%as_bytes%41#0
debug: Removing unused variable aggregate%offset_as_uint16%12#0
debug: Removing unused variable aggregate%head%72#0
debug: Removing unused variable aggregate%data_length%12#0
debug: Removing unused variable aggregate%current_tail_offset%12#0
debug: Removing unused variable aggregate%as_bytes%42#0
debug: Removing unused variable aggregate%offset_as_uint16%13#0
debug: Removing unused variable aggregate%head%73#0
debug: Removing unused variable aggregate%concat%12#0
debug: Removing unused variable prefix#0
debug: Removing unused variable aggregate%array_trimmed%23#0
debug: Removing unused variable aggregate%bytes_offset%23#0
debug: Removing unused variable maybe_exists%0#0
debug: Removing unused variable aggregate%val_as_bytes%32#0
debug: Removing unused variable aggregate%head%80#0
debug: Removing unused variable aggregate%write_offset%3#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (concat 0x extract_to_end%0#2) // on error: max array length exceeded to extract_to_end%0#2
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%10#1: bool = (== arr1#1 arr2#0) with copy of existing registers (Register(source_location=array/immutable.py:462:15-27, ir_type=bool, name='tmp%8', version=1),)
debug: Found equivalence set: extract_to_end%0#2, concat%0#3
debug: selected extract_to_end%0#2 from equivalence set
debug: Found equivalence set: tmp%8#1, tmp%10#1
debug: selected tmp%8#1 from equivalence set
debug: Copy propagation made 1 modifications
debug: Removing redundant assert of tmp%8#1
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head in _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%13#0, array_head_and_tail#0
debug: selected array_head_and_tail#0 from equivalence set
debug: Found equivalence set: new_length#0, length#0
debug: selected new_length#0 from equivalence set
debug: Found equivalence set: array_head_and_tail#1, tmp%14#0
debug: selected array_head_and_tail#1 from equivalence set
debug: Copy propagation made 3 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable start_at_index#0
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (* 0u 2u) to 0u
debug: Simplified (select tmp%0#0 tmp%2#1 0u) to tmp%0#0
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Merged linear block@5 into block@4
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable aggregate%extract%0#0
debug: Removing unused variable aggregate%extract%1#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: aggregate%val_as_bytes%0#0, aggregate%head%0#0
debug: selected aggregate%val_as_bytes%0#0 from equivalence set
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Unused subroutines removed
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: tmp%0#0, tail_offset#0
debug: selected tail_offset#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%2#1
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.sum_imm_fixed
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.times
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.array.immutable.add_x
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.array.immutable.ImmutableArrayContract at level 2
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
array/immutable.py:400:9 debug: eliminating local static slot assigned to mutable#0
debug: Removing unused variable mutable#0
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_fixed_size, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_pop_dynamic_element, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_bits, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_byte_length_head, []
debug: auto reserving slots in _puya_lib.arc4.dynamic_array_concat_dynamic_element, []
array/immutable.py:479 debug: auto reserving slots in test_cases.array.immutable.sum_imm_fixed, []
array/immutable.py:488 debug: auto reserving slots in test_cases.array.immutable.times, []
array/immutable.py:496 debug: auto reserving slots in test_cases.array.immutable.add_x, []
debug: Slot allocation not required
debug: removing local static slots in clear program of test_cases.array.immutable.ImmutableArrayContract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing tmp%0#1 with [tmp%0#10, tmp%0#9, tmp%0#7]
debug: Coalescing tmp%2#0 with [tmp%2#9]
debug: Coalescing tmp%3#0 with [tmp%3#13, tmp%3#10, tmp%3#2, tmp%3#1]
debug: Coalescing tmp%5#0 with [tmp%5#5]
debug: Coalescing arr#0 with [arr#49, arr#50, arr#60, arr#56, arr#57, arr#52, arr#53, arr#54, arr#40, arr#63, arr#45, arr#46, arr#42, arr#43, arr#36, arr#66, arr#37, arr#38, arr#32, arr#69, arr#33, arr#34, arr#35, arr#29, arr#72, arr#30, arr#31, arr#24, arr#75, arr#25, arr#26, arr#28, arr#19, arr#78, arr#20, arr#21, arr#23, arr#18, arr#17, arr#13, arr#81, arr#15, arr#16, arr#10, arr#84, arr#11, arr#12, arr#7, arr#87, arr#8, arr#9, arr#4, arr#90, arr#5, arr#6, arr#1, arr#93, arr#2, arr#3, arr#0]
debug: Coalescing tmp%10#3 with [tmp%10#10, tmp%10#9, tmp%10#7, tmp%10#5, tmp%10#4]
debug: Coalescing tmp%13#2 with [tmp%13#6, tmp%13#5, tmp%13#3]
debug: Coalescing concat%1#0 with [concat%1#5, concat%1#4, concat%1#3, concat%1#2, concat%1#1]
debug: Coalescing add%1#0 with [add%1#3, add%1#2, add%1#1]
debug: Coalescing as_bytes%1#0 with [as_bytes%1#3, as_bytes%1#2, as_bytes%1#1]
debug: Coalescing as_u16_bytes%1#0 with [as_u16_bytes%1#3, as_u16_bytes%1#2, as_u16_bytes%1#1]
debug: Coalescing tmp%16#1 with [tmp%16#5, tmp%16#4, tmp%16#3, tmp%16#2]
debug: Coalescing tmp%18#0 with [tmp%18#5]
debug: Coalescing tmp%19#2 with [tmp%19#7, tmp%19#3]
debug: Coalescing tmp%20#2 with [tmp%20#6, tmp%20#3]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing continue_looping%0#0 with [continue_looping%0#16, continue_looping%0#15, continue_looping%0#14, continue_looping%0#13, continue_looping%0#12, continue_looping%0#11, continue_looping%0#10, continue_looping%0#8, continue_looping%0#9, continue_looping%0#7, continue_looping%0#6, continue_looping%0#5, continue_looping%0#4, continue_looping%0#3, continue_looping%0#2, continue_looping%0#1]
debug: Coalescing tmp%23#1 with [tmp%23#5, tmp%23#3, tmp%23#2]
debug: Coalescing tmp%25#2 with [tmp%25#4]
debug: Coalescing tmp%26#1 with [tmp%26#4, tmp%26#3, tmp%26#2]
debug: Coalescing tmp%29#0 with [tmp%29#3, tmp%29#2]
debug: Coalescing tmp%31#1 with [tmp%31#2]
debug: Coalescing tmp%32#1 with [tmp%32#2]
debug: Coalescing concat%2#0 with [concat%2#2, concat%2#1, concat%2#0]
debug: Coalescing add%2#0 with [add%2#2, add%2#1]
debug: Coalescing as_bytes%2#0 with [as_bytes%2#2, as_bytes%2#1]
debug: Coalescing as_u16_bytes%2#0 with [as_u16_bytes%2#2, as_u16_bytes%2#1]
debug: Coalescing tmp%38#1 with [tmp%38#2]
debug: Coalescing tmp%41#0 with [tmp%41#2]
debug: Coalescing test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 with [test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#1, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#2, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#3, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#4, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#5, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#6, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#7, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#8, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#9, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#10, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#11, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#12, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#13, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#14, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#15, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#16, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#17, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#18, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#19, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#20, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#21, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#22, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#23, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#24, test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#25]
debug: Coalescing tmp%0#0 with [tmp%0#24]
debug: Coalescing tmp%8#0 with [tmp%8#7, tmp%8#6, tmp%8#4, tmp%8#3, tmp%8#2, tmp%8#1]
debug: Coalescing tmp%9#0 with [tmp%9#10, tmp%9#9, tmp%9#5]
debug: Coalescing tmp%2#1 with [tmp%2#10, tmp%2#8, tmp%2#7, tmp%2#4, tmp%2#3]
debug: Coalescing concat%0#1 with [concat%0#10, concat%0#11, concat%0#9, concat%0#8, concat%0#7, concat%0#6, concat%0#5, concat%0#4, concat%0#2, concat%0#1]
debug: Coalescing tmp%7#4 with [tmp%7#6]
debug: Coalescing i#0 with [i#47, i#52, i#48, i#49, i#44, i#55, i#45, i#46, i#41, i#58, i#42, i#38, i#61, i#39, i#40, i#32, i#64, i#33, i#35, i#67, i#36, i#26, i#70, i#27, i#29, i#73, i#30, i#22, i#76, i#23, i#24, i#25, i#19, i#79, i#20, i#18, i#15, i#82, i#16, i#17, i#12, i#85, i#13, i#14, i#9, i#88, i#10, i#11, i#6, i#91, i#7, i#8, i#3, i#94, i#4, i#5, i#97, i#1, i#2]
debug: Coalescing i#21 with [i#43, i#34, i#37, i#28, i#31]
debug: Coalescing extract_uint16%0#0 with [extract_uint16%0#12, extract_uint16%0#10, extract_uint16%0#9, extract_uint16%0#8, extract_uint16%0#7, extract_uint16%0#6, extract_uint16%0#5, extract_uint16%0#4, extract_uint16%0#3, extract_uint16%0#2]
debug: Coalescing add%0#1 with [add%0#8, add%0#6, add%0#5, add%0#4, add%0#3, add%0#2]
debug: Coalescing as_bytes%0#1 with [as_bytes%0#10, as_bytes%0#8, as_bytes%0#7, as_bytes%0#6, as_bytes%0#5, as_bytes%0#4, as_bytes%0#3, as_bytes%0#2]
debug: Coalescing as_u16_bytes%0#1 with [as_u16_bytes%0#10, as_u16_bytes%0#8, as_u16_bytes%0#7, as_u16_bytes%0#6, as_u16_bytes%0#5, as_u16_bytes%0#4, as_u16_bytes%0#3, as_u16_bytes%0#2]
debug: Coalescing tmp%17#1 with [tmp%17#5]
debug: Coalescing tmp%22#1 with [tmp%22#4, tmp%22#3]
debug: Coalescing tmp%24#0 with [tmp%24#4]
debug: Coalescing tmp%25#0 with [tmp%25#3, tmp%25#1]
debug: Coalescing tmp%33#0 with [tmp%33#1]
debug: Coalescing tmp%11#0 with [tmp%11#3]
debug: Coalescing tmp%12#0 with [tmp%12#2, tmp%12#1]
debug: Coalescing tmp%13#0 with [tmp%13#4, tmp%13#1]
debug: Coalescing tmp%3#3 with [tmp%3#11, tmp%3#9, tmp%3#4]
debug: Coalescing tmp%6#1 with [tmp%6#8, tmp%6#7, tmp%6#6, tmp%6#5, tmp%6#4]
debug: Coalescing tmp%9#1 with [tmp%9#8, tmp%9#7, tmp%9#6, tmp%9#3, tmp%9#2]
debug: Coalescing tmp%14#1 with [tmp%14#4, tmp%14#3, tmp%14#2]
debug: Coalescing tmp%3#8 with [tmp%3#12]
debug: Coalescing result#0 with [result#4, result#5, result#6, result#3, result#2, result#1, result#0]
debug: Coalescing tmp%20#0 with [tmp%20#4]
debug: Coalescing tmp%21#0 with [tmp%21#4, tmp%21#3]
debug: Coalescing tmp%17#0 with [tmp%17#4, tmp%17#3, tmp%17#2]
debug: Coalescing tmp%27#1 with [tmp%27#2]
debug: Coalescing tmp%4#1 with [tmp%4#7]
debug: Coalescing extract_to_end%0#0 with [extract_to_end%0#6, extract_to_end%0#5, extract_to_end%0#4, extract_to_end%0#3, extract_to_end%0#2, extract_to_end%0#1]
debug: Coalescing continue_looping%1#0 with [continue_looping%1#4, continue_looping%1#3, continue_looping%1#2, continue_looping%1#1]
debug: Coalescing tmp%11#1 with [tmp%11#2]
debug: Coalescing tmp%18#1 with [tmp%18#2]
debug: Coalescing extra_arr#0 with [extra_arr#5, extra_arr#1, extra_arr#2]
debug: Coalescing j#0 with [j#5, j#1, j#2]
debug: Coalescing extract_uint16%1#0 with [extract_uint16%1#1]
debug: Coalescing totals#0 with [totals#5, totals#1, totals#2]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#6, item_index_internal%0#14, item_index_internal%0#7, item_index_internal%0#8, item_index_internal%0#3, item_index_internal%0#20, item_index_internal%0#4, item_index_internal%0#5, item_index_internal%0#23, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing item_index_internal%0#9 with [item_index_internal%0#17, item_index_internal%0#10, item_index_internal%0#11]
debug: Coalescing continue_looping%2#0 with [continue_looping%2#1]
debug: Coalescing total#0 with [total#5, total#1, total#2]
debug: Coalescing extract_uint16%2#0 with [extract_uint16%2#1]
debug: Coalescing tmp%48#0 with [tmp%48#1]
debug: Coalescing arr2#0 with [arr2#2, arr2#7, arr2#3, arr2#4, arr2#1, arr2#0]
debug: Coalescing arr7#0 with [arr7#5, arr7#1, arr7#2]
debug: Coalescing arr8#0 with [arr8#5, arr8#1, arr8#2]
debug: Coalescing arr9#0 with [arr9#5, arr9#1, arr9#2]
debug: Coalescing arr1#0 with [arr1#3, arr1#0, arr1#6, arr1#1, arr1#2]
debug: Coalescing sum4#0 with [sum4#6, sum4#1, sum4#2, sum4#3]
debug: Coalescing sum3#0 with [sum3#12, sum3#1, sum3#2, sum3#3, sum3#4, sum3#5, sum3#9]
debug: Coalescing sum3#15 with [sum3#18]
debug: Coalescing sum2#0 with [sum2#7, sum2#1, sum2#2, sum2#4]
debug: Coalescing sum1#0 with [sum1#5, sum1#1, sum1#2]
debug: Coalescing item_index_internal%1#0 with [item_index_internal%1#5, item_index_internal%1#1, item_index_internal%1#2]
debug: Coalescing item_index_internal%2#0 with [item_index_internal%2#5, item_index_internal%2#1, item_index_internal%2#2]
debug: Coalescing idx#0 with [idx#1]
debug: Coalescing append#0 with [append#4, append#3, append#2, append#1]
debug: Coalescing tmp%1#5 with [tmp%1#8, tmp%1#7]
debug: Coalescing arg#0 with [arg#1, arg#0]
debug: Coalescing arg.0#0 with [arg.0#1, arg.0#0]
debug: Coalescing arg.1#0 with [arg.1#1, arg.1#0]
debug: Coalescing imm#0 with [imm#1]
debug: Coalescing resulted in 1117 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, arr#0=arr#0}
debug: pred: {_i#0=_i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: _i#0, arr#0
debug: * to_do arr#0
debug: * to_do _i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=None, arr#0=arr#0, i#21=i#21}
debug: pred: {i#0=i#21, arr#0=arr#0}
debug: ready: i#0
debug: to_do: i#0, arr#0
debug: * avail i#0
debug: * avail i#21
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=None, arr#0=arr#0, i#21=i#21}
debug: pred: {i#0=i#21, arr#0=arr#0}
debug: ready: i#0
debug: to_do: i#0, arr#0
debug: * avail i#0
debug: * avail i#21
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=None, arr#0=arr#0, i#21=i#21}
debug: pred: {i#0=i#21, arr#0=arr#0}
debug: ready: i#0
debug: to_do: i#0, arr#0
debug: * avail i#0
debug: * avail i#21
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: pred: {j#0=j#0, extra_arr#0=extra_arr#0}
debug: ready: 
debug: to_do: j#0, extra_arr#0
debug: * to_do extra_arr#0
debug: * to_do j#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: pred: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#9, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#9
debug: loc: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: pred: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#9, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#9
debug: loc: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: pred: {item_index_internal%0#9=item_index_internal%0#9, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#9, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#9
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, totals#0=totals#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, totals#0
debug: * to_do totals#0
debug: * to_do item_index_internal%0#0
debug: loc: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: pred: {i#0=i#0, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: 
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: loc: {i#0=None, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0, i#21=i#21}
debug: pred: {i#0=i#21, arr2#0=arr2#0, arr7#0=arr7#0, arr8#0=arr8#0, arr9#0=arr9#0}
debug: ready: i#0
debug: to_do: i#0, arr2#0, arr7#0, arr8#0, arr9#0
debug: * avail i#0
debug: * avail i#21
debug: * to_do arr9#0
debug: * to_do arr8#0
debug: * to_do arr7#0
debug: * to_do arr2#0
debug: * to_do i#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, sum1#0=sum1#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, sum1#0
debug: * to_do sum1#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: pred: {item_index_internal%1#0=item_index_internal%1#0, sum2#0=sum2#0}
debug: ready: 
debug: to_do: item_index_internal%1#0, sum2#0
debug: * to_do sum2#0
debug: * to_do item_index_internal%1#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: pred: {item_index_internal%2#0=item_index_internal%2#0, sum3#0=sum3#0}
debug: ready: 
debug: to_do: item_index_internal%2#0, sum3#0
debug: * to_do sum3#0
debug: * to_do item_index_internal%2#0
debug: loc: {idx#0=None, sum4#0=sum4#0, item_index_internal%3#0=item_index_internal%3#0}
debug: pred: {idx#0=item_index_internal%3#0, sum4#0=sum4#0}
debug: ready: idx#0
debug: to_do: idx#0, sum4#0
debug: * avail idx#0
debug: * avail item_index_internal%3#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {idx#0=idx#0, sum4#0=sum4#0}
debug: pred: {idx#0=idx#0, sum4#0=sum4#0}
debug: ready: 
debug: to_do: idx#0, sum4#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {idx#0=None, sum4#0=sum4#0, aggregate%next_index%6#0=aggregate%next_index%6#0}
debug: pred: {idx#0=aggregate%next_index%6#0, sum4#0=sum4#0}
debug: ready: idx#0
debug: to_do: idx#0, sum4#0
debug: * avail idx#0
debug: * avail aggregate%next_index%6#0
debug: * to_do sum4#0
debug: * to_do idx#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr1#0=arr1#0}
debug: pred: {i#0=i#0, arr1#0=arr1#0}
debug: ready: 
debug: to_do: i#0, arr1#0
debug: * to_do arr1#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr1#0=arr1#0}
debug: pred: {i#0=i#0, arr1#0=arr1#0}
debug: ready: 
debug: to_do: i#0, arr1#0
debug: * to_do arr1#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr1#0=arr1#0}
debug: pred: {i#0=i#0, arr1#0=arr1#0}
debug: ready: 
debug: to_do: i#0, arr1#0
debug: * to_do arr1#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_fixed_size using strategy 'root_operand'
debug: Coalescing result#0 with [result#1]
debug: Coalescing resulted in 2 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_pop_dynamic_element using strategy 'root_operand'
debug: Coalescing new_head#0 with [new_head#5, new_head#1, new_head#2]
debug: Coalescing head_offset#0 with [head_offset#5, head_offset#1, head_offset#2]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_bits
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_bits using strategy 'root_operand'
debug: Coalescing result#0 with [result#1, result#4, result#10, result#2, result#3]
debug: Coalescing read_offset#0 with [read_offset#5, read_offset#1, read_offset#2]
debug: Coalescing write_offset#0 with [write_offset#5, write_offset#1, write_offset#2]
debug: Coalescing resulted in 29 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_bits
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: loc: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: pred: {write_offset#0=write_offset#0, result#0=result#0, read_offset#0=read_offset#0}
debug: ready: 
debug: to_do: write_offset#0, result#0, read_offset#0
debug: * to_do read_offset#0
debug: * to_do result#0
debug: * to_do write_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_byte_length_head using strategy 'root_operand'
debug: Coalescing tmp%6#0 with [tmp%6#1]
debug: Coalescing tmp%10#0 with [tmp%10#1]
debug: Coalescing array_head_and_tail#0 with [array_head_and_tail#5, array_head_and_tail#1, array_head_and_tail#2]
debug: Coalescing tail_offset#1 with [tail_offset#5, tail_offset#2]
debug: Coalescing head_offset#0 with [head_offset#6, head_offset#1, head_offset#3]
debug: Coalescing resulted in 27 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=None, array_head_and_tail#0=array_head_and_tail#0, tail_offset#0=tail_offset#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#0, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: tail_offset#1
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * avail tail_offset#1
debug: * avail tail_offset#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: pred: {head_offset#0=head_offset#0, tail_offset#1=tail_offset#1, array_head_and_tail#0=array_head_and_tail#0}
debug: ready: 
debug: to_do: head_offset#0, tail_offset#1, array_head_and_tail#0
debug: * to_do array_head_and_tail#0
debug: * to_do tail_offset#1
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in _puya_lib.arc4.dynamic_array_concat_dynamic_element using strategy 'root_operand'
debug: Coalescing new_head#0 with [new_head#7, new_head#1, new_head#2, new_head#10, new_head#3, new_head#4]
debug: Coalescing head_offset#0 with [head_offset#8, head_offset#1, head_offset#2, head_offset#3, head_offset#11, head_offset#4, head_offset#5]
debug: Coalescing item_offset#0 with [item_offset#1]
debug: Coalescing resulted in 38 replacement/s
debug: Sequentializing parallel copies in _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: loc: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: pred: {head_offset#0=head_offset#0, new_head#0=new_head#0}
debug: ready: 
debug: to_do: head_offset#0, new_head#0
debug: * to_do new_head#0
debug: * to_do head_offset#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.immutable.sum_imm_fixed
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.sum_imm_fixed using strategy 'root_operand'
debug: Coalescing total#0 with [total#6, total#1, total#2, total#3]
debug: Coalescing item_index_internal%0#0 with [item_index_internal%0#5, item_index_internal%0#1, item_index_internal%0#2]
debug: Coalescing resulted in 19 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.sum_imm_fixed
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: loc: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: pred: {item_index_internal%0#0=item_index_internal%0#0, total#0=total#0}
debug: ready: 
debug: to_do: item_index_internal%0#0, total#0
debug: * to_do total#0
debug: * to_do item_index_internal%0#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.immutable.times
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.times using strategy 'root_operand'
debug: Coalescing result#0 with [result#5, result#1, result#2]
debug: Coalescing _i#0 with [_i#5, _i#1, _i#2]
debug: Coalescing resulted in 16 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.times
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: loc: {_i#0=_i#0, result#0=result#0}
debug: pred: {_i#0=_i#0, result#0=result#0}
debug: ready: 
debug: to_do: _i#0, result#0
debug: * to_do result#0
debug: * to_do _i#0
debug: Performing post-SSA optimizations at level 2
debug: Performing SSA IR destructuring for test_cases.array.immutable.add_x
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.array.immutable.add_x using strategy 'root_operand'
debug: Coalescing arr#0 with [arr#5, arr#1, arr#2]
debug: Coalescing i#0 with [i#5, i#1, i#2]
debug: Coalescing resulted in 18 replacement/s
debug: Sequentializing parallel copies in test_cases.array.immutable.add_x
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: loc: {i#0=i#0, arr#0=arr#0}
debug: pred: {i#0=i#0, arr#0=arr#0}
debug: ready: 
debug: to_do: i#0, arr#0
debug: * to_do arr#0
debug: * to_do i#0
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/ImmutableArrayContract.ir/ImmutableArrayContract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 2
debug: Output IR to array/out_O2/ImmutableArrayContract.ir/ImmutableArrayContract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[27]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_uint64_array_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_uint64_array_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_uint64_array_route@3.ops[17]: 'l-store-copy arr#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[19]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[22]: 'l-store-copy aggregate%array_length%3#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[24]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted main_test_uint64_array_route@3.ops[27]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_test_uint64_array_route@3.ops[29]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_test_uint64_array_route@3.ops[45]: 'l-store-copy values%1#5 0'
debug: Replaced main_test_uint64_array_route@3.ops[47]: 'v-load values%1#5' with 'l-load values%1#5'
debug: Inserted main_test_uint64_array_route@3.ops[50]: 'l-store-copy tmp%13#2 0'
debug: Replaced main_test_uint64_array_route@3.ops[52]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_test_uint64_array_route@3.ops[64]: 'l-store-copy add%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[66]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[68]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[70]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[76]: 'l-store-copy arr#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[78]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[81]: 'l-store-copy aggregate%array_length%5#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[83]: 'v-load aggregate%array_length%5#0' with 'l-load aggregate%array_length%5#0'
debug: Inserted main_test_uint64_array_route@3.ops[86]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_test_uint64_array_route@3.ops[88]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_test_uint64_array_route@3.ops[104]: 'l-store-copy values%2#3 0'
debug: Replaced main_test_uint64_array_route@3.ops[106]: 'v-load values%2#3' with 'l-load values%2#3'
debug: Inserted main_test_uint64_array_route@3.ops[109]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_test_uint64_array_route@3.ops[111]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_test_uint64_array_route@3.ops[116]: 'l-store-copy values%3#3 0'
debug: Replaced main_test_uint64_array_route@3.ops[118]: 'v-load values%3#3' with 'l-load values%3#3'
debug: Inserted main_test_uint64_array_route@3.ops[121]: 'l-store-copy tmp%20#2 0'
debug: Replaced main_test_uint64_array_route@3.ops[123]: 'v-load tmp%20#2' with 'l-load tmp%20#2'
debug: Inserted main_test_uint64_array_route@3.ops[41]: 'l-store-copy aggregate%bytes_offset%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[44]: 'v-load aggregate%bytes_offset%1#0' with 'l-load aggregate%bytes_offset%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[57]: 'l-store-copy aggregate%val_as_bytes%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[60]: 'v-load aggregate%val_as_bytes%1#0' with 'l-load aggregate%val_as_bytes%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[74]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[77]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[103]: 'l-store-copy aggregate%bytes_offset%2#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[106]: 'v-load aggregate%bytes_offset%2#0' with 'l-load aggregate%bytes_offset%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[34]: 'l-store-copy tmp%12#4 0'
debug: Replaced main_test_uint64_array_route@3.ops[39]: 'v-load tmp%12#4' with 'l-load tmp%12#4'
debug: Inserted main_test_uint64_array_route@3.ops[97]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[102]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_test_uint64_array_route@3.ops[38]: 'l-store-copy aggregate%array_trimmed%1#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[45]: 'v-load aggregate%array_trimmed%1#0' with 'l-load aggregate%array_trimmed%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[102]: 'l-store-copy aggregate%array_trimmed%2#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[109]: 'v-load aggregate%array_trimmed%2#0' with 'l-load aggregate%array_trimmed%2#0'
debug: Inserted main_test_uint64_array_route@3.ops[25]: 'l-store-copy aggregate%array_length%3#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[32]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted main_test_uint64_array_route@3.ops[90]: 'l-store-copy aggregate%array_length%5#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[97]: 'v-load aggregate%array_length%5#0' with 'l-load aggregate%array_length%5#0'
debug: Inserted main_test_uint64_array_route@3.ops[65]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[80]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_uint64_array_route@3.ops[20]: 'l-store-copy arr#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[38]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[87]: 'l-store-copy arr#0 0'
debug: Replaced main_test_uint64_array_route@3.ops[105]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[106]: 'l-store-copy arr#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[127]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[39]: 'l-store-copy arr#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[64]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_uint64_array_route@3.ops[34]: 'l-store-copy aggregate%array_length%3#0 1'
debug: Replaced main_test_uint64_array_route@3.ops[70]: 'v-load aggregate%array_length%3#0' with 'l-load aggregate%array_length%3#0'
debug: Inserted main_for_header@172.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@172.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_after_for@174.ops[3]: 'l-store-copy aggregate%array_length%7#0 0'
debug: Replaced main_after_for@174.ops[5]: 'v-load aggregate%array_length%7#0' with 'l-load aggregate%array_length%7#0'
debug: Inserted main_after_for@174.ops[8]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@174.ops[10]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@174.ops[26]: 'l-store-copy values%4#4 0'
debug: Replaced main_after_for@174.ops[28]: 'v-load values%4#4' with 'l-load values%4#4'
debug: Inserted main_after_for@174.ops[31]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_after_for@174.ops[33]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_after_for@174.ops[38]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[40]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[43]: 'l-store-copy aggregate%array_length%9#0 0'
debug: Replaced main_after_for@174.ops[45]: 'v-load aggregate%array_length%9#0' with 'l-load aggregate%array_length%9#0'
debug: Inserted main_after_for@174.ops[48]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_after_for@174.ops[50]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_after_for@174.ops[66]: 'l-store-copy values%5#4 0'
debug: Replaced main_after_for@174.ops[68]: 'v-load values%5#4' with 'l-load values%5#4'
debug: Inserted main_after_for@174.ops[71]: 'l-store-copy tmp%32#1 0'
debug: Replaced main_after_for@174.ops[73]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_after_for@174.ops[85]: 'l-store-copy add%2#0 0'
debug: Replaced main_after_for@174.ops[87]: 'v-load add%2#0' with 'l-load add%2#0'
debug: Inserted main_after_for@174.ops[89]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced main_after_for@174.ops[91]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted main_after_for@174.ops[97]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[99]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[102]: 'l-store-copy aggregate%array_length%11#0 0'
debug: Replaced main_after_for@174.ops[104]: 'v-load aggregate%array_length%11#0' with 'l-load aggregate%array_length%11#0'
debug: Inserted main_after_for@174.ops[107]: 'l-store-copy tmp%35#1 0'
debug: Replaced main_after_for@174.ops[109]: 'v-load tmp%35#1' with 'l-load tmp%35#1'
debug: Inserted main_after_for@174.ops[125]: 'l-store-copy values%6#3 0'
debug: Replaced main_after_for@174.ops[127]: 'v-load values%6#3' with 'l-load values%6#3'
debug: Inserted main_after_for@174.ops[130]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_after_for@174.ops[132]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_after_for@174.ops[140]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[142]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[145]: 'l-store-copy aggregate%array_length%13#0 0'
debug: Replaced main_after_for@174.ops[147]: 'v-load aggregate%array_length%13#0' with 'l-load aggregate%array_length%13#0'
debug: Inserted main_after_for@174.ops[150]: 'l-store-copy tmp%40#2 0'
debug: Replaced main_after_for@174.ops[152]: 'v-load tmp%40#2' with 'l-load tmp%40#2'
debug: Inserted main_after_for@174.ops[157]: 'l-store-copy values%7#3 0'
debug: Replaced main_after_for@174.ops[159]: 'v-load values%7#3' with 'l-load values%7#3'
debug: Inserted main_after_for@174.ops[162]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_after_for@174.ops[164]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_after_for@174.ops[170]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@174.ops[172]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@174.ops[22]: 'l-store-copy aggregate%bytes_offset%4#0 0'
debug: Replaced main_after_for@174.ops[25]: 'v-load aggregate%bytes_offset%4#0' with 'l-load aggregate%bytes_offset%4#0'
debug: Inserted main_after_for@174.ops[63]: 'l-store-copy aggregate%bytes_offset%5#0 0'
debug: Replaced main_after_for@174.ops[66]: 'v-load aggregate%bytes_offset%5#0' with 'l-load aggregate%bytes_offset%5#0'
debug: Inserted main_after_for@174.ops[79]: 'l-store-copy aggregate%val_as_bytes%2#0 0'
debug: Replaced main_after_for@174.ops[82]: 'v-load aggregate%val_as_bytes%2#0' with 'l-load aggregate%val_as_bytes%2#0'
debug: Inserted main_after_for@174.ops[96]: 'l-store-copy as_u16_bytes%2#0 0'
debug: Replaced main_after_for@174.ops[99]: 'v-load as_u16_bytes%2#0' with 'l-load as_u16_bytes%2#0'
debug: Inserted main_after_for@174.ops[125]: 'l-store-copy aggregate%bytes_offset%6#0 0'
debug: Replaced main_after_for@174.ops[128]: 'v-load aggregate%bytes_offset%6#0' with 'l-load aggregate%bytes_offset%6#0'
debug: Inserted main_after_for@174.ops[141]: 'l-store-copy aggregate%val_as_bytes%3#0 0'
debug: Replaced main_after_for@174.ops[144]: 'v-load aggregate%val_as_bytes%3#0' with 'l-load aggregate%val_as_bytes%3#0'
debug: Inserted main_after_for@174.ops[15]: 'l-store-copy tmp%25#2 0'
debug: Replaced main_after_for@174.ops[20]: 'v-load tmp%25#2' with 'l-load tmp%25#2'
debug: Inserted main_after_for@174.ops[57]: 'l-store-copy tmp%31#1 0'
debug: Replaced main_after_for@174.ops[62]: 'v-load tmp%31#1' with 'l-load tmp%31#1'
debug: Inserted main_after_for@174.ops[120]: 'l-store-copy tmp%37#1 0'
debug: Replaced main_after_for@174.ops[125]: 'v-load tmp%37#1' with 'l-load tmp%37#1'
debug: Inserted main_after_for@174.ops[19]: 'l-store-copy aggregate%array_trimmed%4#0 1'
debug: Replaced main_after_for@174.ops[26]: 'v-load aggregate%array_trimmed%4#0' with 'l-load aggregate%array_trimmed%4#0'
debug: Inserted main_after_for@174.ops[62]: 'l-store-copy aggregate%array_trimmed%5#0 1'
debug: Replaced main_after_for@174.ops[69]: 'v-load aggregate%array_trimmed%5#0' with 'l-load aggregate%array_trimmed%5#0'
debug: Inserted main_after_for@174.ops[126]: 'l-store-copy aggregate%array_trimmed%6#0 1'
debug: Replaced main_after_for@174.ops[133]: 'v-load aggregate%array_trimmed%6#0' with 'l-load aggregate%array_trimmed%6#0'
debug: Inserted main_after_for@174.ops[6]: 'l-store-copy aggregate%array_length%7#0 0'
debug: Replaced main_after_for@174.ops[13]: 'v-load aggregate%array_length%7#0' with 'l-load aggregate%array_length%7#0'
debug: Inserted main_after_for@174.ops[50]: 'l-store-copy aggregate%array_length%9#0 0'
debug: Replaced main_after_for@174.ops[57]: 'v-load aggregate%array_length%9#0' with 'l-load aggregate%array_length%9#0'
debug: Inserted main_after_for@174.ops[115]: 'l-store-copy aggregate%array_length%11#0 0'
debug: Replaced main_after_for@174.ops[122]: 'v-load aggregate%array_length%11#0' with 'l-load aggregate%array_length%11#0'
debug: Inserted main_after_for@174.ops[158]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[170]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[90]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@174.ops[105]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@174.ops[172]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[185]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[19]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[46]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[64]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[113]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@174.ops[131]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[20]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@174.ops[41]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[66]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@174.ops[91]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[134]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@174.ops[159]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@174.ops[61]: 'l-store-copy aggregate%array_length%9#0 1'
debug: Replaced main_after_for@174.ops[97]: 'v-load aggregate%array_length%9#0' with 'l-load aggregate%array_length%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_biguint_array_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_biguint_array_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[15]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_biguint_array_route@4.ops[17]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_biguint_array_route@4.ops[20]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[22]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_biguint_array_route@4.ops[35]: 'l-store-copy concat%0#1 0'
debug: Replaced main_test_biguint_array_route@4.ops[37]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_test_biguint_array_route@4.ops[40]: 'l-store-copy arr#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[42]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_biguint_array_route@4.ops[45]: 'l-store-copy aggregate%array_length%15#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[47]: 'v-load aggregate%array_length%15#0' with 'l-load aggregate%array_length%15#0'
debug: Inserted main_test_biguint_array_route@4.ops[50]: 'l-store-copy tmp%7#4 0'
debug: Replaced main_test_biguint_array_route@4.ops[52]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_test_biguint_array_route@4.ops[69]: 'l-store-copy aggregate%encoded_element%9#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[71]: 'v-load aggregate%encoded_element%9#0' with 'l-load aggregate%encoded_element%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[74]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_test_biguint_array_route@4.ops[76]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_test_biguint_array_route@4.ops[27]: 'l-store-copy aggregate%bzero%0#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[30]: 'v-load aggregate%bzero%0#0' with 'l-load aggregate%bzero%0#0'
debug: Inserted main_test_biguint_array_route@4.ops[32]: 'l-store-copy aggregate%arc4_encoded%0#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[35]: 'v-load aggregate%arc4_encoded%0#0' with 'l-load aggregate%arc4_encoded%0#0'
debug: Inserted main_test_biguint_array_route@4.ops[66]: 'l-store-copy aggregate%bytes_offset%9#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[69]: 'v-load aggregate%bytes_offset%9#0' with 'l-load aggregate%bytes_offset%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[24]: 'l-store-copy tmp%4#10 0'
debug: Replaced main_test_biguint_array_route@4.ops[30]: 'v-load tmp%4#10' with 'l-load tmp%4#10'
debug: Inserted main_test_biguint_array_route@4.ops[60]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[65]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[64]: 'l-store-copy aggregate%array_trimmed%9#0 1'
debug: Replaced main_test_biguint_array_route@4.ops[71]: 'v-load aggregate%array_trimmed%9#0' with 'l-load aggregate%array_trimmed%9#0'
debug: Inserted main_test_biguint_array_route@4.ops[51]: 'l-store-copy aggregate%array_length%15#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[58]: 'v-load aggregate%array_length%15#0' with 'l-load aggregate%array_length%15#0'
debug: Inserted main_test_biguint_array_route@4.ops[46]: 'l-store-copy arr#0 0'
debug: Replaced main_test_biguint_array_route@4.ops[64]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_header@167.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@167.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@168.ops[2]: 'l-store-copy tmp%0#21 0'
debug: Replaced main_for_body@168.ops[4]: 'v-load tmp%0#21' with 'l-load tmp%0#21'
debug: Inserted main_for_body@168.ops[15]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@168.ops[17]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@168.ops[20]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@168.ops[22]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@168.ops[24]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@168.ops[26]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@168.ops[7]: 'l-store-copy aggregate%arc4_encoded%1#0 0'
debug: Replaced main_for_body@168.ops[10]: 'v-load aggregate%arc4_encoded%1#0' with 'l-load aggregate%arc4_encoded%1#0'
debug: Inserted main_for_body@168.ops[29]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@168.ops[32]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@168.ops[10]: 'l-store-copy arr#0 1'
debug: Replaced main_for_body@168.ops[14]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@168.ops[13]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@168.ops[33]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@168.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@168.ops[38]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@169.ops[3]: 'l-store-copy aggregate%array_length%17#0 0'
debug: Replaced main_after_for@169.ops[5]: 'v-load aggregate%array_length%17#0' with 'l-load aggregate%array_length%17#0'
debug: Inserted main_after_for@169.ops[8]: 'l-store-copy tmp%13#2 0'
debug: Replaced main_after_for@169.ops[10]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_after_for@169.ops[27]: 'l-store-copy aggregate%encoded_element%10#0 0'
debug: Replaced main_after_for@169.ops[29]: 'v-load aggregate%encoded_element%10#0' with 'l-load aggregate%encoded_element%10#0'
debug: Inserted main_after_for@169.ops[32]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_after_for@169.ops[34]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_after_for@169.ops[37]: 'l-store-copy tmp%17#1 0'
debug: Replaced main_after_for@169.ops[39]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted main_after_for@169.ops[45]: 'l-store-copy tmp%19#6 0'
debug: Replaced main_after_for@169.ops[47]: 'v-load tmp%19#6' with 'l-load tmp%19#6'
debug: Inserted main_after_for@169.ops[49]: 'l-store-copy aggregate%value_len%2#0 0'
debug: Replaced main_after_for@169.ops[51]: 'v-load aggregate%value_len%2#0' with 'l-load aggregate%value_len%2#0'
debug: Inserted main_after_for@169.ops[54]: 'l-store-copy aggregate%len_ok%2#0 0'
debug: Replaced main_after_for@169.ops[56]: 'v-load aggregate%len_ok%2#0' with 'l-load aggregate%len_ok%2#0'
debug: Inserted main_after_for@169.ops[69]: 'l-store-copy add%1#0 0'
debug: Replaced main_after_for@169.ops[71]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted main_after_for@169.ops[73]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_after_for@169.ops[75]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_after_for@169.ops[81]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[83]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[86]: 'l-store-copy aggregate%array_length%19#0 0'
debug: Replaced main_after_for@169.ops[88]: 'v-load aggregate%array_length%19#0' with 'l-load aggregate%array_length%19#0'
debug: Inserted main_after_for@169.ops[91]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_after_for@169.ops[93]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_after_for@169.ops[110]: 'l-store-copy aggregate%encoded_element%11#0 0'
debug: Replaced main_after_for@169.ops[112]: 'v-load aggregate%encoded_element%11#0' with 'l-load aggregate%encoded_element%11#0'
debug: Inserted main_after_for@169.ops[115]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_after_for@169.ops[117]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_after_for@169.ops[121]: 'l-store-copy aggregate%encoded_element%12#0 0'
debug: Replaced main_after_for@169.ops[123]: 'v-load aggregate%encoded_element%12#0' with 'l-load aggregate%encoded_element%12#0'
debug: Inserted main_after_for@169.ops[126]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_after_for@169.ops[128]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_after_for@169.ops[137]: 'l-store-copy add%2#0 0'
debug: Replaced main_after_for@169.ops[139]: 'v-load add%2#0' with 'l-load add%2#0'
debug: Inserted main_after_for@169.ops[141]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced main_after_for@169.ops[143]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted main_after_for@169.ops[149]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[151]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[154]: 'l-store-copy aggregate%array_length%21#0 0'
debug: Replaced main_after_for@169.ops[156]: 'v-load aggregate%array_length%21#0' with 'l-load aggregate%array_length%21#0'
debug: Inserted main_after_for@169.ops[159]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_after_for@169.ops[161]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_after_for@169.ops[178]: 'l-store-copy aggregate%encoded_element%13#0 0'
debug: Replaced main_after_for@169.ops[180]: 'v-load aggregate%encoded_element%13#0' with 'l-load aggregate%encoded_element%13#0'
debug: Inserted main_after_for@169.ops[183]: 'l-store-copy tmp%32#1 0'
debug: Replaced main_after_for@169.ops[185]: 'v-load tmp%32#1' with 'l-load tmp%32#1'
debug: Inserted main_after_for@169.ops[189]: 'l-store-copy aggregate%encoded_element%14#0 0'
debug: Replaced main_after_for@169.ops[191]: 'v-load aggregate%encoded_element%14#0' with 'l-load aggregate%encoded_element%14#0'
debug: Inserted main_after_for@169.ops[194]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_after_for@169.ops[196]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_after_for@169.ops[205]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@169.ops[207]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@169.ops[22]: 'l-store-copy aggregate%bytes_offset%10#0 0'
debug: Replaced main_after_for@169.ops[25]: 'v-load aggregate%bytes_offset%10#0' with 'l-load aggregate%bytes_offset%10#0'
debug: Inserted main_after_for@169.ops[42]: 'l-store-copy tmp%18#4 0'
debug: Replaced main_after_for@169.ops[45]: 'v-load tmp%18#4' with 'l-load tmp%18#4'
debug: Inserted main_after_for@169.ops[63]: 'l-store-copy aggregate%arc4_encoded%2#0 0'
debug: Replaced main_after_for@169.ops[66]: 'v-load aggregate%arc4_encoded%2#0' with 'l-load aggregate%arc4_encoded%2#0'
debug: Inserted main_after_for@169.ops[80]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced main_after_for@169.ops[83]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted main_after_for@169.ops[109]: 'l-store-copy aggregate%bytes_offset%11#0 0'
debug: Replaced main_after_for@169.ops[112]: 'v-load aggregate%bytes_offset%11#0' with 'l-load aggregate%bytes_offset%11#0'
debug: Inserted main_after_for@169.ops[150]: 'l-store-copy as_u16_bytes%2#0 0'
debug: Replaced main_after_for@169.ops[153]: 'v-load as_u16_bytes%2#0' with 'l-load as_u16_bytes%2#0'
debug: Inserted main_after_for@169.ops[179]: 'l-store-copy aggregate%bytes_offset%13#0 0'
debug: Replaced main_after_for@169.ops[182]: 'v-load aggregate%bytes_offset%13#0' with 'l-load aggregate%bytes_offset%13#0'
debug: Inserted main_after_for@169.ops[15]: 'l-store-copy tmp%15#7 0'
debug: Replaced main_after_for@169.ops[20]: 'v-load tmp%15#7' with 'l-load tmp%15#7'
debug: Inserted main_after_for@169.ops[103]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_after_for@169.ops[108]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_after_for@169.ops[174]: 'l-store-copy tmp%31#1 0'
debug: Replaced main_after_for@169.ops[179]: 'v-load tmp%31#1' with 'l-load tmp%31#1'
debug: Inserted main_after_for@169.ops[19]: 'l-store-copy aggregate%array_trimmed%10#0 1'
debug: Replaced main_after_for@169.ops[26]: 'v-load aggregate%array_trimmed%10#0' with 'l-load aggregate%array_trimmed%10#0'
debug: Inserted main_after_for@169.ops[108]: 'l-store-copy aggregate%array_trimmed%11#0 1'
debug: Replaced main_after_for@169.ops[115]: 'v-load aggregate%array_trimmed%11#0' with 'l-load aggregate%array_trimmed%11#0'
debug: Inserted main_after_for@169.ops[180]: 'l-store-copy aggregate%array_trimmed%13#0 1'
debug: Replaced main_after_for@169.ops[187]: 'v-load aggregate%array_trimmed%13#0' with 'l-load aggregate%array_trimmed%13#0'
debug: Inserted main_after_for@169.ops[6]: 'l-store-copy aggregate%array_length%17#0 0'
debug: Replaced main_after_for@169.ops[13]: 'v-load aggregate%array_length%17#0' with 'l-load aggregate%array_length%17#0'
debug: Inserted main_after_for@169.ops[96]: 'l-store-copy aggregate%array_length%19#0 0'
debug: Replaced main_after_for@169.ops[103]: 'v-load aggregate%array_length%19#0' with 'l-load aggregate%array_length%19#0'
debug: Inserted main_after_for@169.ops[169]: 'l-store-copy aggregate%array_length%21#0 0'
debug: Replaced main_after_for@169.ops[176]: 'v-load aggregate%array_length%21#0' with 'l-load aggregate%array_length%21#0'
debug: Inserted main_after_for@169.ops[53]: 'l-store-copy tmp%19#6 0'
debug: Replaced main_after_for@169.ops[64]: 'v-load tmp%19#6' with 'l-load tmp%19#6'
debug: Inserted main_after_for@169.ops[132]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[143]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[72]: 'l-store-copy concat%1#0 0'
debug: Replaced main_after_for@169.ops[87]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@169.ops[147]: 'l-store-copy concat%2#0 0'
debug: Replaced main_after_for@169.ops[162]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_after_for@169.ops[208]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[223]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[19]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[94]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[112]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[170]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@169.ops[188]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[113]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@169.ops[135]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[190]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@169.ops[212]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[108]: 'l-store-copy aggregate%array_length%19#0 1'
debug: Replaced main_after_for@169.ops[153]: 'v-load aggregate%array_length%19#0' with 'l-load aggregate%array_length%19#0'
debug: Inserted main_after_for@169.ops[20]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@169.ops[71]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@169.ops[15]: 'l-store-copy aggregate%array_length%17#0 1'
debug: Replaced main_after_for@169.ops[77]: 'v-load aggregate%array_length%17#0' with 'l-load aggregate%array_length%17#0'
debug: Inserted main_test_bool_array_route@5.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_test_bool_array_route@5.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_test_bool_array_route@5.ops[5]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_test_bool_array_route@5.ops[7]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_test_bool_array_route@5.ops[10]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_test_bool_array_route@5.ops[12]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_test_bool_array_route@5.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%0#0 0'
debug: Replaced main_test_bool_array_route@5.ops[17]: 'v-load reinterpret_Encoded(uint64)%0#0' with 'l-load reinterpret_Encoded(uint64)%0#0'
debug: Inserted main_for_header@152.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@152.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@153.ops[1]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@153.ops[4]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@153.ops[11]: 'l-store-copy aggregate%encoded_bool%0#0 0'
debug: Replaced main_for_body@153.ops[14]: 'v-load aggregate%encoded_bool%0#0' with 'l-load aggregate%encoded_bool%0#0'
debug: Inserted main_for_body@153.ops[6]: 'l-store-copy tmp%3#3 0'
debug: Replaced main_for_body@153.ops[10]: 'v-load tmp%3#3' with 'l-load tmp%3#3'
debug: Inserted main_for_body@153.ops[4]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@153.ops[21]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@154.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced main_after_for@154.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted main_after_for@154.ops[8]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@154.ops[10]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_after_for@154.ops[7]: 'l-store-copy length#0 1'
debug: Replaced main_after_for@154.ops[13]: 'v-load length#0' with 'l-load length#0'
debug: Inserted main_if_body@155.ops[5]: 'l-store-copy aggregate%get_bit%0#0 0'
debug: Replaced main_if_body@155.ops[7]: 'v-load aggregate%get_bit%0#0' with 'l-load aggregate%get_bit%0#0'
debug: Inserted main_if_body@155.ops[9]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_if_body@155.ops[11]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_if_else@156.ops[3]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_if_else@156.ops[5]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_if_body@157.ops[3]: 'l-store-copy aggregate%lt%1#0 0'
debug: Replaced main_if_body@157.ops[5]: 'v-load aggregate%lt%1#0' with 'l-load aggregate%lt%1#0'
debug: Inserted main_if_body@157.ops[10]: 'l-store-copy aggregate%get_bit%1#0 0'
debug: Replaced main_if_body@157.ops[12]: 'v-load aggregate%get_bit%1#0' with 'l-load aggregate%get_bit%1#0'
debug: Inserted main_if_body@157.ops[14]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_if_body@157.ops[16]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_after_if_else@158.ops[3]: 'l-store-copy tmp%11#4 0'
debug: Replaced main_after_if_else@158.ops[5]: 'v-load tmp%11#4' with 'l-load tmp%11#4'
debug: Inserted main_if_body@159.ops[3]: 'l-store-copy aggregate%lt%2#0 0'
debug: Replaced main_if_body@159.ops[5]: 'v-load aggregate%lt%2#0' with 'l-load aggregate%lt%2#0'
debug: Inserted main_if_body@159.ops[10]: 'l-store-copy aggregate%get_bit%2#0 0'
debug: Replaced main_if_body@159.ops[12]: 'v-load aggregate%get_bit%2#0' with 'l-load aggregate%get_bit%2#0'
debug: Inserted main_after_if_else@160.ops[3]: 'l-store-copy tmp%12#0 0'
debug: Replaced main_after_if_else@160.ops[5]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_if_body@161.ops[3]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_if_body@161.ops[5]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_if_body@161.ops[8]: 'l-store-copy aggregate%lt%3#0 0'
debug: Replaced main_if_body@161.ops[10]: 'v-load aggregate%lt%3#0' with 'l-load aggregate%lt%3#0'
debug: Inserted main_if_body@161.ops[19]: 'l-store-copy aggregate%get_bit%3#0 0'
debug: Replaced main_if_body@161.ops[21]: 'v-load aggregate%get_bit%3#0' with 'l-load aggregate%get_bit%3#0'
debug: Inserted main_if_body@161.ops[23]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_if_body@161.ops[25]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_if_body@161.ops[15]: 'l-store-copy aggregate%add%3#0 0'
debug: Replaced main_if_body@161.ops[18]: 'v-load aggregate%add%3#0' with 'l-load aggregate%add%3#0'
debug: Inserted main_if_body@161.ops[6]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_if_body@161.ops[13]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_if_body@163.ops[3]: 'l-store-copy length_minus_1#0 0'
debug: Replaced main_if_body@163.ops[5]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@163.ops[7]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_if_body@163.ops[9]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_if_body@163.ops[28]: 'l-store-copy tmp%8#8 0'
debug: Replaced main_if_body@163.ops[30]: 'v-load tmp%8#8' with 'l-load tmp%8#8'
debug: Inserted main_if_body@163.ops[42]: 'l-store-copy result#0 0'
debug: Replaced main_if_body@163.ops[44]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@163.ops[55]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_if_body@163.ops[57]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_if_body@163.ops[11]: 'l-store-copy tmp%3#8 0'
debug: Replaced main_if_body@163.ops[14]: 'v-load tmp%3#8' with 'l-load tmp%3#8'
debug: Inserted main_if_body@163.ops[20]: 'l-store-copy popped_location#0 0'
debug: Replaced main_if_body@163.ops[23]: 'v-load popped_location#0' with 'l-load popped_location#0'
debug: Inserted main_if_body@163.ops[35]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_if_body@163.ops[38]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_if_body@163.ops[54]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_if_body@163.ops[57]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_if_body@163.ops[40]: 'l-store-copy tmp%10#8 0'
debug: Replaced main_if_body@163.ops[44]: 'v-load tmp%10#8' with 'l-load tmp%10#8'
debug: Inserted main_if_body@163.ops[16]: 'l-store-copy result#0 0'
debug: Replaced main_if_body@163.ops[23]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_if_body@163.ops[52]: 'l-store-copy aggregate%array_length%29#0 0'
debug: Replaced main_if_body@163.ops[59]: 'v-load aggregate%array_length%29#0' with 'l-load aggregate%array_length%29#0'
debug: Inserted main_if_body@163.ops[19]: 'l-store-copy length_minus_1#0 1'
debug: Replaced main_if_body@163.ops[29]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@163.ops[6]: 'l-store-copy length_minus_1#0 0'
debug: Replaced main_if_body@163.ops[19]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted main_if_body@163.ops[29]: 'l-store-copy result#0 1'
debug: Replaced main_if_body@163.ops[46]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_after_if_else@164.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@164.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_fixed_size_tuple_array_route@6.ops[1]: 'l-store-copy tmp%16#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@6.ops[3]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted main_test_fixed_size_tuple_array_route@6.ops[5]: 'l-store-copy tmp%17#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@6.ops[7]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_test_fixed_size_tuple_array_route@6.ops[10]: 'l-store-copy tmp%18#0 0'
debug: Replaced main_test_fixed_size_tuple_array_route@6.ops[12]: 'v-load tmp%18#0' with 'l-load tmp%18#0'
debug: Inserted main_for_header@147.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@147.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@148.ops[25]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@148.ops[27]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@148.ops[30]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@148.ops[32]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@148.ops[34]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@148.ops[36]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@148.ops[13]: 'l-store-copy aggregate%val_as_bytes%5#0 0'
debug: Replaced main_for_body@148.ops[16]: 'v-load aggregate%val_as_bytes%5#0' with 'l-load aggregate%val_as_bytes%5#0'
debug: Inserted main_for_body@148.ops[18]: 'l-store-copy aggregate%head%9#0 0'
debug: Replaced main_for_body@148.ops[21]: 'v-load aggregate%head%9#0' with 'l-load aggregate%head%9#0'
debug: Inserted main_for_body@148.ops[40]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@148.ops[43]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@148.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@148.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@148.ops[8]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_for_body@148.ops[13]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_for_body@148.ops[12]: 'l-store-copy aggregate%val_as_bytes%4#0 1'
debug: Replaced main_for_body@148.ops[18]: 'v-load aggregate%val_as_bytes%4#0' with 'l-load aggregate%val_as_bytes%4#0'
debug: Inserted main_for_body@148.ops[24]: 'l-store-copy arr#0 1'
debug: Replaced main_for_body@148.ops[28]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@148.ops[4]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@148.ops[11]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@148.ops[28]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@148.ops[48]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@148.ops[12]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@148.ops[53]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_after_for@149.ops[3]: 'l-store-copy aggregate%array_length%31#0 0'
debug: Replaced main_after_for@149.ops[5]: 'v-load aggregate%array_length%31#0' with 'l-load aggregate%array_length%31#0'
debug: Inserted main_after_for@149.ops[8]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@149.ops[10]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_after_for@149.ops[17]: 'l-store-copy aggregate%encoded_element%15#0 0'
debug: Replaced main_after_for@149.ops[19]: 'v-load aggregate%encoded_element%15#0' with 'l-load aggregate%encoded_element%15#0'
debug: Inserted main_after_for@149.ops[38]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_for@149.ops[40]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_after_for@149.ops[45]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_after_for@149.ops[47]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main_after_for@149.ops[55]: 'l-store-copy aggregate%encoded_element%16#0 0'
debug: Replaced main_after_for@149.ops[57]: 'v-load aggregate%encoded_element%16#0' with 'l-load aggregate%encoded_element%16#0'
debug: Inserted main_after_for@149.ops[76]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@149.ops[78]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@149.ops[88]: 'l-store-copy aggregate%array_length%33#0 0'
debug: Replaced main_after_for@149.ops[90]: 'v-load aggregate%array_length%33#0' with 'l-load aggregate%array_length%33#0'
debug: Inserted main_after_for@149.ops[93]: 'l-store-copy tmp%20#2 0'
debug: Replaced main_after_for@149.ops[95]: 'v-load tmp%20#2' with 'l-load tmp%20#2'
debug: Inserted main_after_for@149.ops[102]: 'l-store-copy aggregate%encoded_element%17#0 0'
debug: Replaced main_after_for@149.ops[104]: 'v-load aggregate%encoded_element%17#0' with 'l-load aggregate%encoded_element%17#0'
debug: Inserted main_after_for@149.ops[123]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@149.ops[125]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@149.ops[130]: 'l-store-copy tmp%25#2 0'
debug: Replaced main_after_for@149.ops[132]: 'v-load tmp%25#2' with 'l-load tmp%25#2'
debug: Inserted main_after_for@149.ops[140]: 'l-store-copy aggregate%encoded_element%18#0 0'
debug: Replaced main_after_for@149.ops[142]: 'v-load aggregate%encoded_element%18#0' with 'l-load aggregate%encoded_element%18#0'
debug: Inserted main_after_for@149.ops[161]: 'l-store-copy tmp%28#1 0'
debug: Replaced main_after_for@149.ops[163]: 'v-load tmp%28#1' with 'l-load tmp%28#1'
debug: Inserted main_after_for@149.ops[169]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@149.ops[171]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@149.ops[34]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@149.ops[37]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_after_for@149.ops[51]: 'l-store-copy aggregate%bytes_offset%16#0 0'
debug: Replaced main_after_for@149.ops[54]: 'v-load aggregate%bytes_offset%16#0' with 'l-load aggregate%bytes_offset%16#0'
debug: Inserted main_after_for@149.ops[74]: 'l-store-copy tmp%13#2 0'
debug: Replaced main_after_for@149.ops[77]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_after_for@149.ops[86]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@149.ops[89]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[123]: 'l-store-copy tmp%22#1 0'
debug: Replaced main_after_for@149.ops[126]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_after_for@149.ops[140]: 'l-store-copy aggregate%bytes_offset%18#0 0'
debug: Replaced main_after_for@149.ops[143]: 'v-load aggregate%bytes_offset%18#0' with 'l-load aggregate%bytes_offset%18#0'
debug: Inserted main_after_for@149.ops[163]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_after_for@149.ops[166]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_after_for@149.ops[13]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@149.ops[16]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[103]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@149.ops[106]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[21]: 'l-store-copy aggregate%encoded_element%15#0 0'
debug: Replaced main_after_for@149.ops[25]: 'v-load aggregate%encoded_element%15#0' with 'l-load aggregate%encoded_element%15#0'
debug: Inserted main_after_for@149.ops[62]: 'l-store-copy aggregate%encoded_element%16#0 0'
debug: Replaced main_after_for@149.ops[66]: 'v-load aggregate%encoded_element%16#0' with 'l-load aggregate%encoded_element%16#0'
debug: Inserted main_after_for@149.ops[113]: 'l-store-copy aggregate%encoded_element%17#0 0'
debug: Replaced main_after_for@149.ops[117]: 'v-load aggregate%encoded_element%17#0' with 'l-load aggregate%encoded_element%17#0'
debug: Inserted main_after_for@149.ops[154]: 'l-store-copy aggregate%encoded_element%18#0 0'
debug: Replaced main_after_for@149.ops[158]: 'v-load aggregate%encoded_element%18#0' with 'l-load aggregate%encoded_element%18#0'
debug: Inserted main_after_for@149.ops[24]: 'l-store-copy aggregate%item0%0#0 1'
debug: Replaced main_after_for@149.ops[30]: 'v-load aggregate%item0%0#0' with 'l-load aggregate%item0%0#0'
debug: Inserted main_after_for@149.ops[29]: 'l-store-copy aggregate%item1%0#0 1'
debug: Replaced main_after_for@149.ops[35]: 'v-load aggregate%item1%0#0' with 'l-load aggregate%item1%0#0'
debug: Inserted main_after_for@149.ops[34]: 'l-store-copy tmp%7#4 1'
debug: Replaced main_after_for@149.ops[41]: 'v-load tmp%7#4' with 'l-load tmp%7#4'
debug: Inserted main_after_for@149.ops[68]: 'l-store-copy aggregate%item0%1#0 1'
debug: Replaced main_after_for@149.ops[74]: 'v-load aggregate%item0%1#0' with 'l-load aggregate%item0%1#0'
debug: Inserted main_after_for@149.ops[73]: 'l-store-copy aggregate%item1%1#0 1'
debug: Replaced main_after_for@149.ops[79]: 'v-load aggregate%item1%1#0' with 'l-load aggregate%item1%1#0'
debug: Inserted main_after_for@149.ops[78]: 'l-store-copy tmp%12#0 1'
debug: Replaced main_after_for@149.ops[85]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main_after_for@149.ops[122]: 'l-store-copy aggregate%item0%2#0 1'
debug: Replaced main_after_for@149.ops[128]: 'v-load aggregate%item0%2#0' with 'l-load aggregate%item0%2#0'
debug: Inserted main_after_for@149.ops[127]: 'l-store-copy aggregate%item1%2#0 1'
debug: Replaced main_after_for@149.ops[133]: 'v-load aggregate%item1%2#0' with 'l-load aggregate%item1%2#0'
debug: Inserted main_after_for@149.ops[132]: 'l-store-copy tmp%21#0 1'
debug: Replaced main_after_for@149.ops[139]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_after_for@149.ops[166]: 'l-store-copy aggregate%item0%3#0 1'
debug: Replaced main_after_for@149.ops[172]: 'v-load aggregate%item0%3#0' with 'l-load aggregate%item0%3#0'
debug: Inserted main_after_for@149.ops[171]: 'l-store-copy aggregate%item1%3#0 1'
debug: Replaced main_after_for@149.ops[177]: 'v-load aggregate%item1%3#0' with 'l-load aggregate%item1%3#0'
debug: Inserted main_after_for@149.ops[176]: 'l-store-copy tmp%26#1 1'
debug: Replaced main_after_for@149.ops[183]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_after_for@149.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@149.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[100]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@149.ops[112]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[7]: 'l-store-copy aggregate%array_length%31#0 1'
debug: Replaced main_after_for@149.ops[50]: 'v-load aggregate%array_length%31#0' with 'l-load aggregate%array_length%31#0'
debug: Inserted main_after_for@149.ops[17]: 'l-store-copy aggregate%array_trimmed%15#0 2'
debug: Replaced main_after_for@149.ops[61]: 'v-load aggregate%array_trimmed%15#0' with 'l-load aggregate%array_trimmed%15#0'
debug: Inserted main_after_for@149.ops[108]: 'l-store-copy aggregate%array_length%33#0 1'
debug: Replaced main_after_for@149.ops[151]: 'v-load aggregate%array_length%33#0' with 'l-load aggregate%array_length%33#0'
debug: Inserted main_after_for@149.ops[118]: 'l-store-copy aggregate%array_trimmed%17#0 2'
debug: Replaced main_after_for@149.ops[162]: 'v-load aggregate%array_trimmed%17#0' with 'l-load aggregate%array_trimmed%17#0'
debug: Inserted main_after_for@149.ops[20]: 'l-store-copy arr#0 2'
debug: Replaced main_after_for@149.ops[96]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@149.ops[122]: 'l-store-copy arr#0 2'
debug: Replaced main_after_for@149.ops[199]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@7.ops[1]: 'l-store-copy tmp%20#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@7.ops[3]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@7.ops[5]: 'l-store-copy tmp%21#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@7.ops[7]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted main_test_fixed_size_named_tuple_array_route@7.ops[10]: 'l-store-copy tmp%22#0 0'
debug: Replaced main_test_fixed_size_named_tuple_array_route@7.ops[12]: 'v-load tmp%22#0' with 'l-load tmp%22#0'
debug: Inserted main_for_header@142.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@142.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@143.ops[3]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@143.ops[5]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@143.ops[11]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_for_body@143.ops[13]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_for_body@143.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_for_body@143.ops[18]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_for_body@143.ops[28]: 'l-store-copy aggregate%encoded_bool%1#0 0'
debug: Replaced main_for_body@143.ops[30]: 'v-load aggregate%encoded_bool%1#0' with 'l-load aggregate%encoded_bool%1#0'
debug: Inserted main_for_body@143.ops[46]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@143.ops[48]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@143.ops[51]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@143.ops[53]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@143.ops[55]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@143.ops[57]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@143.ops[34]: 'l-store-copy aggregate%set_bit%0#0 0'
debug: Replaced main_for_body@143.ops[37]: 'v-load aggregate%set_bit%0#0' with 'l-load aggregate%set_bit%0#0'
debug: Inserted main_for_body@143.ops[39]: 'l-store-copy aggregate%head%12#0 0'
debug: Replaced main_for_body@143.ops[42]: 'v-load aggregate%head%12#0' with 'l-load aggregate%head%12#0'
debug: Inserted main_for_body@143.ops[61]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@143.ops[64]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@143.ops[42]: 'l-store-copy arr#0 1'
debug: Replaced main_for_body@143.ops[46]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@143.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@143.ops[9]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@143.ops[10]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@143.ops[23]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@143.ops[22]: 'l-store-copy tmp%6#1 1'
debug: Replaced main_for_body@143.ops[35]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_for_body@143.ops[26]: 'l-store-copy aggregate%val_as_bytes%6#0 1'
debug: Replaced main_for_body@143.ops[40]: 'v-load aggregate%val_as_bytes%6#0' with 'l-load aggregate%val_as_bytes%6#0'
debug: Inserted main_for_body@143.ops[49]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@143.ops[69]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@143.ops[8]: 'l-store-copy tmp%3#3 1'
debug: Replaced main_for_body@143.ops[31]: 'v-load tmp%3#3' with 'l-load tmp%3#3'
debug: Inserted main_for_body@143.ops[26]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@143.ops[75]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@144.ops[3]: 'l-store-copy aggregate%array_length%36#0 0'
debug: Replaced main_after_for@144.ops[5]: 'v-load aggregate%array_length%36#0' with 'l-load aggregate%array_length%36#0'
debug: Inserted main_after_for@144.ops[8]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_after_for@144.ops[10]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_after_for@144.ops[14]: 'l-store-copy aggregate%encoded_element%19#0 0'
debug: Replaced main_after_for@144.ops[16]: 'v-load aggregate%encoded_element%19#0' with 'l-load aggregate%encoded_element%19#0'
debug: Inserted main_after_for@144.ops[30]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_after_for@144.ops[32]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_after_for@144.ops[42]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@144.ops[44]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@144.ops[17]: 'l-store-copy aggregate%encoded_element%19#0 0'
debug: Replaced main_after_for@144.ops[21]: 'v-load aggregate%encoded_element%19#0' with 'l-load aggregate%encoded_element%19#0'
debug: Inserted main_after_for@144.ops[22]: 'l-store-copy aggregate%encoded_element%19#0 0'
debug: Replaced main_after_for@144.ops[26]: 'v-load aggregate%encoded_element%19#0' with 'l-load aggregate%encoded_element%19#0'
debug: Inserted main_after_for@144.ops[29]: 'l-store-copy baz#0 0'
debug: Replaced main_after_for@144.ops[39]: 'v-load baz#0' with 'l-load baz#0'
debug: Inserted main_after_for@144.ops[20]: 'l-store-copy foo#0 1'
debug: Replaced main_after_for@144.ops[32]: 'v-load foo#0' with 'l-load foo#0'
debug: Inserted main_after_for@144.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@144.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@144.ops[27]: 'l-store-copy bar#0 2'
debug: Replaced main_after_for@144.ops[40]: 'v-load bar#0' with 'l-load bar#0'
debug: Inserted main_after_for@144.ops[14]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@144.ops[46]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@8.ops[1]: 'l-store-copy tmp%24#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@8.ops[3]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@8.ops[5]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@8.ops[7]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_test_dynamic_sized_tuple_array_route@8.ops[10]: 'l-store-copy tmp%26#0 0'
debug: Replaced main_test_dynamic_sized_tuple_array_route@8.ops[12]: 'v-load tmp%26#0' with 'l-load tmp%26#0'
debug: Inserted main_for_header@134.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@134.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@135.ops[19]: 'l-store-copy aggregate%length%0#0 0'
debug: Replaced main_for_body@135.ops[21]: 'v-load aggregate%length%0#0' with 'l-load aggregate%length%0#0'
debug: Inserted main_for_body@135.ops[23]: 'l-store-copy aggregate%as_bytes%6#0 0'
debug: Replaced main_for_body@135.ops[25]: 'v-load aggregate%as_bytes%6#0' with 'l-load aggregate%as_bytes%6#0'
debug: Inserted main_for_body@135.ops[27]: 'l-store-copy aggregate%length_uint16%0#0 0'
debug: Replaced main_for_body@135.ops[29]: 'v-load aggregate%length_uint16%0#0' with 'l-load aggregate%length_uint16%0#0'
debug: Inserted main_for_body@135.ops[36]: 'l-store-copy aggregate%head%15#0 0'
debug: Replaced main_for_body@135.ops[38]: 'v-load aggregate%head%15#0' with 'l-load aggregate%head%15#0'
debug: Inserted main_for_body@135.ops[41]: 'l-store-copy aggregate%concat%0#0 0'
debug: Replaced main_for_body@135.ops[44]: 'v-load aggregate%concat%0#0' with 'l-load aggregate%concat%0#0'
debug: Inserted main_for_body@135.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@135.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@135.ops[9]: 'l-store-copy arr#0 0'
debug: Replaced main_for_body@135.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@135.ops[48]: 'l-store-copy aggregate%concat%1#0 0'
debug: Replaced main_for_body@135.ops[53]: 'v-load aggregate%concat%1#0' with 'l-load aggregate%concat%1#0'
debug: Inserted main_for_body@135.ops[34]: 'l-store-copy aggregate%encoded_value%0#0 0'
debug: Replaced main_for_body@135.ops[42]: 'v-load aggregate%encoded_value%0#0' with 'l-load aggregate%encoded_value%0#0'
debug: Inserted main_for_body@135.ops[20]: 'l-store-copy tmp%3#8 0'
debug: Replaced main_for_body@135.ops[33]: 'v-load tmp%3#8' with 'l-load tmp%3#8'
debug: Inserted main_for_body@135.ops[4]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@135.ops[17]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@135.ops[8]: 'l-store-copy tmp%3#8 1'
debug: Replaced main_for_body@135.ops[21]: 'v-load tmp%3#8' with 'l-load tmp%3#8'
debug: Inserted main_for_body@135.ops[20]: 'l-store-copy aggregate%val_as_bytes%7#0 1'
debug: Replaced main_for_body@135.ops[40]: 'v-load aggregate%val_as_bytes%7#0' with 'l-load aggregate%val_as_bytes%7#0'
debug: Inserted main_for_body@135.ops[17]: 'l-store-copy extract_to_end%0#0 2'
debug: Replaced main_for_body@135.ops[57]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_for_body@135.ops[14]: 'l-store-copy extract_uint16%0#0 3'
debug: Replaced main_for_body@135.ops[57]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@135.ops[21]: 'l-store-copy i#21 3'
debug: Replaced main_for_body@135.ops[64]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_after_for@136.ops[3]: 'l-store-copy aggregate%array_length%38#0 0'
debug: Replaced main_after_for@136.ops[5]: 'v-load aggregate%array_length%38#0' with 'l-load aggregate%array_length%38#0'
debug: Inserted main_after_for@136.ops[8]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@136.ops[10]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_for_header@137.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@137.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@138.ops[39]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_for_body@138.ops[41]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_for_body@138.ops[56]: 'l-store-copy aggregate%substring3%1#0 0'
debug: Replaced main_for_body@138.ops[58]: 'v-load aggregate%substring3%1#0' with 'l-load aggregate%substring3%1#0'
debug: Inserted main_for_body@138.ops[64]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_for_body@138.ops[66]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_for_body@138.ops[70]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_for_body@138.ops[72]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_for_body@138.ops[75]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_for_body@138.ops[77]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_for_body@138.ops[6]: 'l-store-copy aggregate%item_offset_offset%0#0 0'
debug: Replaced main_for_body@138.ops[9]: 'v-load aggregate%item_offset_offset%0#0' with 'l-load aggregate%item_offset_offset%0#0'
debug: Inserted main_for_body@138.ops[15]: 'l-store-copy i#21 0'
debug: Replaced main_for_body@138.ops[18]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@138.ops[27]: 'l-store-copy aggregate%next_item_offset_offset%0#0 0'
debug: Replaced main_for_body@138.ops[30]: 'v-load aggregate%next_item_offset_offset%0#0' with 'l-load aggregate%next_item_offset_offset%0#0'
debug: Inserted main_for_body@138.ops[32]: 'l-store-copy aggregate%next_item_offset%0#0 0'
debug: Replaced main_for_body@138.ops[35]: 'v-load aggregate%next_item_offset%0#0' with 'l-load aggregate%next_item_offset%0#0'
debug: Inserted main_for_body@138.ops[38]: 'l-store-copy aggregate%end_offset%0#0 0'
debug: Replaced main_for_body@138.ops[42]: 'v-load aggregate%end_offset%0#0' with 'l-load aggregate%end_offset%0#0'
debug: Inserted main_for_body@138.ops[55]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_for_body@138.ops[58]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_for_body@138.ops[57]: 'l-store-copy aggregate%len%0#0 1'
debug: Replaced main_for_body@138.ops[61]: 'v-load aggregate%len%0#0' with 'l-load aggregate%len%0#0'
debug: Inserted main_for_body@138.ops[47]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_for_body@138.ops[51]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_for_body@138.ops[52]: 'l-store-copy aggregate%substring3%0#0 0'
debug: Replaced main_for_body@138.ops[56]: 'v-load aggregate%substring3%0#0' with 'l-load aggregate%substring3%0#0'
debug: Inserted main_for_body@138.ops[2]: 'l-store-copy aggregate%array_head_and_tail%0#0 0'
debug: Replaced main_for_body@138.ops[9]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted main_for_body@138.ops[56]: 'l-store-copy aggregate%extract_uint16%0#0 1'
debug: Replaced main_for_body@138.ops[64]: 'v-load aggregate%extract_uint16%0#0' with 'l-load aggregate%extract_uint16%0#0'
debug: Inserted main_for_body@138.ops[20]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@138.ops[26]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@138.ops[24]: 'l-store-copy aggregate%array_head_and_tail%0#0 1'
debug: Replaced main_for_body@138.ops[32]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted main_for_body@138.ops[73]: 'l-store-copy aggregate%item1%4#0 0'
debug: Replaced main_for_body@138.ops[82]: 'v-load aggregate%item1%4#0' with 'l-load aggregate%item1%4#0'
debug: Inserted main_for_body@138.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@138.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@138.ops[27]: 'l-store-copy aggregate%end_of_array%0#0 2'
debug: Replaced main_for_body@138.ops[39]: 'v-load aggregate%end_of_array%0#0' with 'l-load aggregate%end_of_array%0#0'
debug: Inserted main_for_body@138.ops[35]: 'l-store-copy aggregate%array_head_and_tail%0#0 2'
debug: Replaced main_for_body@138.ops[46]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted main_for_body@138.ops[11]: 'l-store-copy aggregate%array_head_and_tail%0#0 2'
debug: Replaced main_for_body@138.ops[25]: 'v-load aggregate%array_head_and_tail%0#0' with 'l-load aggregate%array_head_and_tail%0#0'
debug: Inserted main_for_body@138.ops[24]: 'l-store-copy aggregate%has_next%0#0 2'
debug: Replaced main_for_body@138.ops[44]: 'v-load aggregate%has_next%0#0' with 'l-load aggregate%has_next%0#0'
debug: Inserted main_for_body@138.ops[82]: 'l-store-copy i#21 2'
debug: Replaced main_for_body@138.ops[99]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@138.ops[58]: 'l-store-copy aggregate%item0%5#0 1'
debug: Replaced main_for_body@138.ops[81]: 'v-load aggregate%item0%5#0' with 'l-load aggregate%item0%5#0'
debug: Inserted main_for_body@138.ops[14]: 'l-store-copy aggregate%item_offset%0#0 2'
debug: Replaced main_for_body@138.ops[50]: 'v-load aggregate%item_offset%0#0' with 'l-load aggregate%item_offset%0#0'
debug: Inserted main_for_body@138.ops[33]: 'l-store-copy i#21 4'
debug: Replaced main_for_body@138.ops[84]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@138.ops[17]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@138.ops[97]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@139.ops[7]: 'l-store-copy aggregate%array_length%40#0 0'
debug: Replaced main_after_for@139.ops[9]: 'v-load aggregate%array_length%40#0' with 'l-load aggregate%array_length%40#0'
debug: Inserted main_after_for@139.ops[12]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_after_for@139.ops[14]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_after_for@139.ops[18]: 'l-store-copy aggregate%array_head_and_tail%1#0 0'
debug: Replaced main_after_for@139.ops[20]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[44]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_after_for@139.ops[46]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_after_for@139.ops[61]: 'l-store-copy aggregate%substring3%3#0 0'
debug: Replaced main_after_for@139.ops[63]: 'v-load aggregate%substring3%3#0' with 'l-load aggregate%substring3%3#0'
debug: Inserted main_after_for@139.ops[80]: 'l-store-copy tmp%20#2 0'
debug: Replaced main_after_for@139.ops[82]: 'v-load tmp%20#2' with 'l-load tmp%20#2'
debug: Inserted main_after_for@139.ops[117]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced main_after_for@139.ops[119]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted main_after_for@139.ops[134]: 'l-store-copy aggregate%substring3%5#0 0'
debug: Replaced main_after_for@139.ops[136]: 'v-load aggregate%substring3%5#0' with 'l-load aggregate%substring3%5#0'
debug: Inserted main_after_for@139.ops[153]: 'l-store-copy tmp%26#1 0'
debug: Replaced main_after_for@139.ops[155]: 'v-load tmp%26#1' with 'l-load tmp%26#1'
debug: Inserted main_after_for@139.ops[161]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@139.ops[163]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@139.ops[2]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@139.ops[5]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@139.ops[35]: 'l-store-copy aggregate%next_item_offset%1#0 0'
debug: Replaced main_after_for@139.ops[38]: 'v-load aggregate%next_item_offset%1#0' with 'l-load aggregate%next_item_offset%1#0'
debug: Inserted main_after_for@139.ops[74]: 'l-store-copy tmp%18#3 0'
debug: Replaced main_after_for@139.ops[77]: 'v-load tmp%18#3' with 'l-load tmp%18#3'
debug: Inserted main_after_for@139.ops[79]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_after_for@139.ops[82]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_after_for@139.ops[91]: 'l-store-copy aggregate%item_offset_offset%2#0 0'
debug: Replaced main_after_for@139.ops[94]: 'v-load aggregate%item_offset_offset%2#0' with 'l-load aggregate%item_offset_offset%2#0'
debug: Inserted main_after_for@139.ops[100]: 'l-store-copy aggregate%next_index%2#0 0'
debug: Replaced main_after_for@139.ops[103]: 'v-load aggregate%next_index%2#0' with 'l-load aggregate%next_index%2#0'
debug: Inserted main_after_for@139.ops[109]: 'l-store-copy aggregate%next_item_offset_offset%2#0 0'
debug: Replaced main_after_for@139.ops[112]: 'v-load aggregate%next_item_offset_offset%2#0' with 'l-load aggregate%next_item_offset_offset%2#0'
debug: Inserted main_after_for@139.ops[114]: 'l-store-copy aggregate%next_item_offset%2#0 0'
debug: Replaced main_after_for@139.ops[117]: 'v-load aggregate%next_item_offset%2#0' with 'l-load aggregate%next_item_offset%2#0'
debug: Inserted main_after_for@139.ops[153]: 'l-store-copy tmp%24#2 0'
debug: Replaced main_after_for@139.ops[156]: 'v-load tmp%24#2' with 'l-load tmp%24#2'
debug: Inserted main_after_for@139.ops[158]: 'l-store-copy tmp%25#0 0'
debug: Replaced main_after_for@139.ops[161]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted main_after_for@139.ops[30]: 'l-store-copy aggregate%array_head_and_tail%1#0 0'
debug: Replaced main_after_for@139.ops[33]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[42]: 'l-store-copy aggregate%end_offset%1#0 0'
debug: Replaced main_after_for@139.ops[46]: 'v-load aggregate%end_offset%1#0' with 'l-load aggregate%end_offset%1#0'
debug: Inserted main_after_for@139.ops[59]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_after_for@139.ops[62]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_after_for@139.ops[61]: 'l-store-copy aggregate%len%1#0 1'
debug: Replaced main_after_for@139.ops[65]: 'v-load aggregate%len%1#0' with 'l-load aggregate%len%1#0'
debug: Inserted main_after_for@139.ops[108]: 'l-store-copy aggregate%next_index%2#0 1'
debug: Replaced main_after_for@139.ops[111]: 'v-load aggregate%next_index%2#0' with 'l-load aggregate%next_index%2#0'
debug: Inserted main_after_for@139.ops[125]: 'l-store-copy aggregate%end_offset%2#0 0'
debug: Replaced main_after_for@139.ops[129]: 'v-load aggregate%end_offset%2#0' with 'l-load aggregate%end_offset%2#0'
debug: Inserted main_after_for@139.ops[142]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced main_after_for@139.ops[145]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted main_after_for@139.ops[144]: 'l-store-copy aggregate%len%2#0 1'
debug: Replaced main_after_for@139.ops[148]: 'v-load aggregate%len%2#0' with 'l-load aggregate%len%2#0'
debug: Inserted main_after_for@139.ops[51]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_after_for@139.ops[55]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_after_for@139.ops[56]: 'l-store-copy aggregate%substring3%2#0 0'
debug: Replaced main_after_for@139.ops[60]: 'v-load aggregate%substring3%2#0' with 'l-load aggregate%substring3%2#0'
debug: Inserted main_after_for@139.ops[136]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced main_after_for@139.ops[140]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted main_after_for@139.ops[141]: 'l-store-copy aggregate%substring3%4#0 0'
debug: Replaced main_after_for@139.ops[145]: 'v-load aggregate%substring3%4#0' with 'l-load aggregate%substring3%4#0'
debug: Inserted main_after_for@139.ops[32]: 'l-store-copy aggregate%end_of_array%1#0 1'
debug: Replaced main_after_for@139.ops[39]: 'v-load aggregate%end_of_array%1#0' with 'l-load aggregate%end_of_array%1#0'
debug: Inserted main_after_for@139.ops[60]: 'l-store-copy aggregate%extract_uint16%1#0 1'
debug: Replaced main_after_for@139.ops[68]: 'v-load aggregate%extract_uint16%1#0' with 'l-load aggregate%extract_uint16%1#0'
debug: Inserted main_after_for@139.ops[146]: 'l-store-copy aggregate%extract_uint16%2#0 1'
debug: Replaced main_after_for@139.ops[154]: 'v-load aggregate%extract_uint16%2#0' with 'l-load aggregate%extract_uint16%2#0'
debug: Inserted main_after_for@139.ops[22]: 'l-store-copy aggregate%array_head_and_tail%1#0 0'
debug: Replaced main_after_for@139.ops[30]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[76]: 'l-store-copy aggregate%item1%5#0 0'
debug: Replaced main_after_for@139.ops[86]: 'v-load aggregate%item1%5#0' with 'l-load aggregate%item1%5#0'
debug: Inserted main_after_for@139.ops[81]: 'l-store-copy tmp%17#0 1'
debug: Replaced main_after_for@139.ops[92]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@139.ops[100]: 'l-store-copy aggregate%has_next%1#0 0'
debug: Replaced main_after_for@139.ops[109]: 'v-load aggregate%has_next%1#0' with 'l-load aggregate%has_next%1#0'
debug: Inserted main_after_for@139.ops[165]: 'l-store-copy aggregate%item1%6#0 0'
debug: Replaced main_after_for@139.ops[175]: 'v-load aggregate%item1%6#0' with 'l-load aggregate%item1%6#0'
debug: Inserted main_after_for@139.ops[170]: 'l-store-copy tmp%23#1 1'
debug: Replaced main_after_for@139.ops[181]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@139.ops[36]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced main_after_for@139.ops[47]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[126]: 'l-store-copy aggregate%array_head_and_tail%1#0 1'
debug: Replaced main_after_for@139.ops[137]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@139.ops[18]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@139.ops[30]: 'l-store-copy aggregate%has_next%1#0 1'
debug: Replaced main_after_for@139.ops[45]: 'v-load aggregate%has_next%1#0' with 'l-load aggregate%has_next%1#0'
debug: Inserted main_after_for@139.ops[121]: 'l-store-copy aggregate%has_next%2#0 1'
debug: Replaced main_after_for@139.ops[136]: 'v-load aggregate%has_next%2#0' with 'l-load aggregate%has_next%2#0'
debug: Inserted main_after_for@139.ops[12]: 'l-store-copy aggregate%array_length%40#0 1'
debug: Replaced main_after_for@139.ops[28]: 'v-load aggregate%array_length%40#0' with 'l-load aggregate%array_length%40#0'
debug: Inserted main_after_for@139.ops[60]: 'l-store-copy aggregate%item0%6#0 1'
debug: Replaced main_after_for@139.ops[83]: 'v-load aggregate%item0%6#0' with 'l-load aggregate%item0%6#0'
debug: Inserted main_after_for@139.ops[111]: 'l-store-copy aggregate%array_head_and_tail%1#0 2'
debug: Replaced main_after_for@139.ops[131]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[153]: 'l-store-copy aggregate%item0%7#0 1'
debug: Replaced main_after_for@139.ops[176]: 'v-load aggregate%item0%7#0' with 'l-load aggregate%item0%7#0'
debug: Inserted main_after_for@139.ops[27]: 'l-store-copy aggregate%item_offset%1#0 2'
debug: Replaced main_after_for@139.ops[52]: 'v-load aggregate%item_offset%1#0' with 'l-load aggregate%item_offset%1#0'
debug: Inserted main_after_for@139.ops[115]: 'l-store-copy aggregate%item_offset%2#0 2'
debug: Replaced main_after_for@139.ops[146]: 'v-load aggregate%item_offset%2#0' with 'l-load aggregate%item_offset%2#0'
debug: Inserted main_after_for@139.ops[48]: 'l-store-copy aggregate%has_next%1#0 4'
debug: Replaced main_after_for@139.ops[106]: 'v-load aggregate%has_next%1#0' with 'l-load aggregate%has_next%1#0'
debug: Inserted main_after_for@139.ops[53]: 'l-store-copy aggregate%array_head_and_tail%1#0 3'
debug: Replaced main_after_for@139.ops[113]: 'v-load aggregate%array_head_and_tail%1#0' with 'l-load aggregate%array_head_and_tail%1#0'
debug: Inserted main_after_for@139.ops[30]: 'l-store-copy aggregate%array_length%40#0 2'
debug: Replaced main_after_for@139.ops[125]: 'v-load aggregate%array_length%40#0' with 'l-load aggregate%array_length%40#0'
debug: Inserted main_after_for@139.ops[47]: 'l-store-copy aggregate%end_of_array%1#0 5'
debug: Replaced main_after_for@139.ops[143]: 'v-load aggregate%end_of_array%1#0' with 'l-load aggregate%end_of_array%1#0'
debug: Inserted main_after_for@139.ops[20]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@139.ops[205]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@9.ops[1]: 'l-store-copy tmp%28#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@9.ops[3]: 'v-load tmp%28#0' with 'l-load tmp%28#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@9.ops[5]: 'l-store-copy tmp%29#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@9.ops[7]: 'v-load tmp%29#0' with 'l-load tmp%29#0'
debug: Inserted main_test_dynamic_sized_named_tuple_array_route@9.ops[10]: 'l-store-copy tmp%30#0 0'
debug: Replaced main_test_dynamic_sized_named_tuple_array_route@9.ops[12]: 'v-load tmp%30#0' with 'l-load tmp%30#0'
debug: Inserted main_for_header@126.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@126.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@127.ops[19]: 'l-store-copy aggregate%length%1#0 0'
debug: Replaced main_for_body@127.ops[21]: 'v-load aggregate%length%1#0' with 'l-load aggregate%length%1#0'
debug: Inserted main_for_body@127.ops[23]: 'l-store-copy aggregate%as_bytes%10#0 0'
debug: Replaced main_for_body@127.ops[25]: 'v-load aggregate%as_bytes%10#0' with 'l-load aggregate%as_bytes%10#0'
debug: Inserted main_for_body@127.ops[27]: 'l-store-copy aggregate%length_uint16%1#0 0'
debug: Replaced main_for_body@127.ops[29]: 'v-load aggregate%length_uint16%1#0' with 'l-load aggregate%length_uint16%1#0'
debug: Inserted main_for_body@127.ops[36]: 'l-store-copy aggregate%head%18#0 0'
debug: Replaced main_for_body@127.ops[38]: 'v-load aggregate%head%18#0' with 'l-load aggregate%head%18#0'
debug: Inserted main_for_body@127.ops[41]: 'l-store-copy aggregate%concat%2#0 0'
debug: Replaced main_for_body@127.ops[44]: 'v-load aggregate%concat%2#0' with 'l-load aggregate%concat%2#0'
debug: Inserted main_for_body@127.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@127.ops[5]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@127.ops[9]: 'l-store-copy arr#0 0'
debug: Replaced main_for_body@127.ops[13]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@127.ops[48]: 'l-store-copy aggregate%concat%3#0 0'
debug: Replaced main_for_body@127.ops[53]: 'v-load aggregate%concat%3#0' with 'l-load aggregate%concat%3#0'
debug: Inserted main_for_body@127.ops[34]: 'l-store-copy aggregate%encoded_value%1#0 0'
debug: Replaced main_for_body@127.ops[42]: 'v-load aggregate%encoded_value%1#0' with 'l-load aggregate%encoded_value%1#0'
debug: Inserted main_for_body@127.ops[20]: 'l-store-copy tmp%3#7 0'
debug: Replaced main_for_body@127.ops[33]: 'v-load tmp%3#7' with 'l-load tmp%3#7'
debug: Inserted main_for_body@127.ops[4]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@127.ops[17]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@127.ops[8]: 'l-store-copy tmp%3#7 1'
debug: Replaced main_for_body@127.ops[21]: 'v-load tmp%3#7' with 'l-load tmp%3#7'
debug: Inserted main_for_body@127.ops[20]: 'l-store-copy aggregate%val_as_bytes%8#0 1'
debug: Replaced main_for_body@127.ops[40]: 'v-load aggregate%val_as_bytes%8#0' with 'l-load aggregate%val_as_bytes%8#0'
debug: Inserted main_for_body@127.ops[17]: 'l-store-copy extract_to_end%0#0 2'
debug: Replaced main_for_body@127.ops[57]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_for_body@127.ops[14]: 'l-store-copy extract_uint16%0#0 3'
debug: Replaced main_for_body@127.ops[57]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@127.ops[21]: 'l-store-copy i#21 3'
debug: Replaced main_for_body@127.ops[64]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_after_for@128.ops[3]: 'l-store-copy aggregate%array_length%45#0 0'
debug: Replaced main_after_for@128.ops[5]: 'v-load aggregate%array_length%45#0' with 'l-load aggregate%array_length%45#0'
debug: Inserted main_after_for@128.ops[8]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_after_for@128.ops[10]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_for_header@129.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@129.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@130.ops[39]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced main_for_body@130.ops[41]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted main_for_body@130.ops[56]: 'l-store-copy aggregate%substring3%7#0 0'
debug: Replaced main_for_body@130.ops[58]: 'v-load aggregate%substring3%7#0' with 'l-load aggregate%substring3%7#0'
debug: Inserted main_for_body@130.ops[64]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_for_body@130.ops[66]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_for_body@130.ops[74]: 'l-store-copy tmp%10#3 0'
debug: Replaced main_for_body@130.ops[76]: 'v-load tmp%10#3' with 'l-load tmp%10#3'
debug: Inserted main_for_body@130.ops[6]: 'l-store-copy aggregate%item_offset_offset%3#0 0'
debug: Replaced main_for_body@130.ops[9]: 'v-load aggregate%item_offset_offset%3#0' with 'l-load aggregate%item_offset_offset%3#0'
debug: Inserted main_for_body@130.ops[15]: 'l-store-copy i#21 0'
debug: Replaced main_for_body@130.ops[18]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@130.ops[27]: 'l-store-copy aggregate%next_item_offset_offset%3#0 0'
debug: Replaced main_for_body@130.ops[30]: 'v-load aggregate%next_item_offset_offset%3#0' with 'l-load aggregate%next_item_offset_offset%3#0'
debug: Inserted main_for_body@130.ops[32]: 'l-store-copy aggregate%next_item_offset%3#0 0'
debug: Replaced main_for_body@130.ops[35]: 'v-load aggregate%next_item_offset%3#0' with 'l-load aggregate%next_item_offset%3#0'
debug: Inserted main_for_body@130.ops[74]: 'l-store-copy tmp%9#4 0'
debug: Replaced main_for_body@130.ops[77]: 'v-load tmp%9#4' with 'l-load tmp%9#4'
debug: Inserted main_for_body@130.ops[38]: 'l-store-copy aggregate%end_offset%3#0 0'
debug: Replaced main_for_body@130.ops[42]: 'v-load aggregate%end_offset%3#0' with 'l-load aggregate%end_offset%3#0'
debug: Inserted main_for_body@130.ops[55]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced main_for_body@130.ops[58]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted main_for_body@130.ops[57]: 'l-store-copy aggregate%len%3#0 1'
debug: Replaced main_for_body@130.ops[61]: 'v-load aggregate%len%3#0' with 'l-load aggregate%len%3#0'
debug: Inserted main_for_body@130.ops[47]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced main_for_body@130.ops[51]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted main_for_body@130.ops[52]: 'l-store-copy aggregate%substring3%6#0 0'
debug: Replaced main_for_body@130.ops[56]: 'v-load aggregate%substring3%6#0' with 'l-load aggregate%substring3%6#0'
debug: Inserted main_for_body@130.ops[2]: 'l-store-copy aggregate%array_head_and_tail%3#0 0'
debug: Replaced main_for_body@130.ops[9]: 'v-load aggregate%array_head_and_tail%3#0' with 'l-load aggregate%array_head_and_tail%3#0'
debug: Inserted main_for_body@130.ops[56]: 'l-store-copy aggregate%extract_uint16%3#0 1'
debug: Replaced main_for_body@130.ops[64]: 'v-load aggregate%extract_uint16%3#0' with 'l-load aggregate%extract_uint16%3#0'
debug: Inserted main_for_body@130.ops[20]: 'l-store-copy i#21 1'
debug: Replaced main_for_body@130.ops[26]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@130.ops[24]: 'l-store-copy aggregate%array_head_and_tail%3#0 1'
debug: Replaced main_for_body@130.ops[32]: 'v-load aggregate%array_head_and_tail%3#0' with 'l-load aggregate%array_head_and_tail%3#0'
debug: Inserted main_for_body@130.ops[5]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@130.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@130.ops[27]: 'l-store-copy aggregate%end_of_array%3#0 2'
debug: Replaced main_for_body@130.ops[39]: 'v-load aggregate%end_of_array%3#0' with 'l-load aggregate%end_of_array%3#0'
debug: Inserted main_for_body@130.ops[35]: 'l-store-copy aggregate%array_head_and_tail%3#0 2'
debug: Replaced main_for_body@130.ops[46]: 'v-load aggregate%array_head_and_tail%3#0' with 'l-load aggregate%array_head_and_tail%3#0'
debug: Inserted main_for_body@130.ops[76]: 'l-store-copy aggregate%item1%7#0 0'
debug: Replaced main_for_body@130.ops[89]: 'v-load aggregate%item1%7#0' with 'l-load aggregate%item1%7#0'
debug: Inserted main_for_body@130.ops[11]: 'l-store-copy aggregate%array_head_and_tail%3#0 2'
debug: Replaced main_for_body@130.ops[25]: 'v-load aggregate%array_head_and_tail%3#0' with 'l-load aggregate%array_head_and_tail%3#0'
debug: Inserted main_for_body@130.ops[24]: 'l-store-copy aggregate%has_next%3#0 2'
debug: Replaced main_for_body@130.ops[44]: 'v-load aggregate%has_next%3#0' with 'l-load aggregate%has_next%3#0'
debug: Inserted main_for_body@130.ops[82]: 'l-store-copy i#21 2'
debug: Replaced main_for_body@130.ops[99]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@130.ops[58]: 'l-store-copy aggregate%item0%8#0 1'
debug: Replaced main_for_body@130.ops[81]: 'v-load aggregate%item0%8#0' with 'l-load aggregate%item0%8#0'
debug: Inserted main_for_body@130.ops[14]: 'l-store-copy aggregate%item_offset%3#0 2'
debug: Replaced main_for_body@130.ops[50]: 'v-load aggregate%item_offset%3#0' with 'l-load aggregate%item_offset%3#0'
debug: Inserted main_for_body@130.ops[33]: 'l-store-copy i#21 4'
debug: Replaced main_for_body@130.ops[84]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@130.ops[17]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@130.ops[92]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@131.ops[7]: 'l-store-copy aggregate%array_length%47#0 0'
debug: Replaced main_after_for@131.ops[9]: 'v-load aggregate%array_length%47#0' with 'l-load aggregate%array_length%47#0'
debug: Inserted main_after_for@131.ops[12]: 'l-store-copy tmp%16#1 0'
debug: Replaced main_after_for@131.ops[14]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_after_for@131.ops[18]: 'l-store-copy aggregate%array_head_and_tail%4#0 0'
debug: Replaced main_after_for@131.ops[20]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[44]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced main_after_for@131.ops[46]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted main_after_for@131.ops[61]: 'l-store-copy aggregate%substring3%9#0 0'
debug: Replaced main_after_for@131.ops[63]: 'v-load aggregate%substring3%9#0' with 'l-load aggregate%substring3%9#0'
debug: Inserted main_after_for@131.ops[77]: 'l-store-copy tmp%19#2 0'
debug: Replaced main_after_for@131.ops[79]: 'v-load tmp%19#2' with 'l-load tmp%19#2'
debug: Inserted main_after_for@131.ops[114]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_after_for@131.ops[116]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_after_for@131.ops[131]: 'l-store-copy aggregate%substring3%11#0 0'
debug: Replaced main_after_for@131.ops[133]: 'v-load aggregate%substring3%11#0' with 'l-load aggregate%substring3%11#0'
debug: Inserted main_after_for@131.ops[147]: 'l-store-copy tmp%24#1 0'
debug: Replaced main_after_for@131.ops[149]: 'v-load tmp%24#1' with 'l-load tmp%24#1'
debug: Inserted main_after_for@131.ops[155]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@131.ops[157]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@131.ops[2]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@131.ops[5]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@131.ops[35]: 'l-store-copy aggregate%next_item_offset%4#0 0'
debug: Replaced main_after_for@131.ops[38]: 'v-load aggregate%next_item_offset%4#0' with 'l-load aggregate%next_item_offset%4#0'
debug: Inserted main_after_for@131.ops[75]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_after_for@131.ops[78]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@131.ops[87]: 'l-store-copy aggregate%item_offset_offset%5#0 0'
debug: Replaced main_after_for@131.ops[90]: 'v-load aggregate%item_offset_offset%5#0' with 'l-load aggregate%item_offset_offset%5#0'
debug: Inserted main_after_for@131.ops[96]: 'l-store-copy aggregate%next_index%5#0 0'
debug: Replaced main_after_for@131.ops[99]: 'v-load aggregate%next_index%5#0' with 'l-load aggregate%next_index%5#0'
debug: Inserted main_after_for@131.ops[105]: 'l-store-copy aggregate%next_item_offset_offset%5#0 0'
debug: Replaced main_after_for@131.ops[108]: 'v-load aggregate%next_item_offset_offset%5#0' with 'l-load aggregate%next_item_offset_offset%5#0'
debug: Inserted main_after_for@131.ops[110]: 'l-store-copy aggregate%next_item_offset%5#0 0'
debug: Replaced main_after_for@131.ops[113]: 'v-load aggregate%next_item_offset%5#0' with 'l-load aggregate%next_item_offset%5#0'
debug: Inserted main_after_for@131.ops[150]: 'l-store-copy tmp%23#1 0'
debug: Replaced main_after_for@131.ops[153]: 'v-load tmp%23#1' with 'l-load tmp%23#1'
debug: Inserted main_after_for@131.ops[30]: 'l-store-copy aggregate%array_head_and_tail%4#0 0'
debug: Replaced main_after_for@131.ops[33]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[42]: 'l-store-copy aggregate%end_offset%4#0 0'
debug: Replaced main_after_for@131.ops[46]: 'v-load aggregate%end_offset%4#0' with 'l-load aggregate%end_offset%4#0'
debug: Inserted main_after_for@131.ops[59]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced main_after_for@131.ops[62]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted main_after_for@131.ops[61]: 'l-store-copy aggregate%len%4#0 1'
debug: Replaced main_after_for@131.ops[65]: 'v-load aggregate%len%4#0' with 'l-load aggregate%len%4#0'
debug: Inserted main_after_for@131.ops[104]: 'l-store-copy aggregate%next_index%5#0 1'
debug: Replaced main_after_for@131.ops[107]: 'v-load aggregate%next_index%5#0' with 'l-load aggregate%next_index%5#0'
debug: Inserted main_after_for@131.ops[121]: 'l-store-copy aggregate%end_offset%5#0 0'
debug: Replaced main_after_for@131.ops[125]: 'v-load aggregate%end_offset%5#0' with 'l-load aggregate%end_offset%5#0'
debug: Inserted main_after_for@131.ops[138]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_after_for@131.ops[141]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_after_for@131.ops[140]: 'l-store-copy aggregate%len%5#0 1'
debug: Replaced main_after_for@131.ops[144]: 'v-load aggregate%len%5#0' with 'l-load aggregate%len%5#0'
debug: Inserted main_after_for@131.ops[51]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced main_after_for@131.ops[55]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted main_after_for@131.ops[56]: 'l-store-copy aggregate%substring3%8#0 0'
debug: Replaced main_after_for@131.ops[60]: 'v-load aggregate%substring3%8#0' with 'l-load aggregate%substring3%8#0'
debug: Inserted main_after_for@131.ops[132]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_after_for@131.ops[136]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_after_for@131.ops[137]: 'l-store-copy aggregate%substring3%10#0 0'
debug: Replaced main_after_for@131.ops[141]: 'v-load aggregate%substring3%10#0' with 'l-load aggregate%substring3%10#0'
debug: Inserted main_after_for@131.ops[32]: 'l-store-copy aggregate%end_of_array%4#0 1'
debug: Replaced main_after_for@131.ops[39]: 'v-load aggregate%end_of_array%4#0' with 'l-load aggregate%end_of_array%4#0'
debug: Inserted main_after_for@131.ops[60]: 'l-store-copy aggregate%extract_uint16%4#0 1'
debug: Replaced main_after_for@131.ops[68]: 'v-load aggregate%extract_uint16%4#0' with 'l-load aggregate%extract_uint16%4#0'
debug: Inserted main_after_for@131.ops[75]: 'l-store-copy aggregate%item1%8#0 0'
debug: Replaced main_after_for@131.ops[81]: 'v-load aggregate%item1%8#0' with 'l-load aggregate%item1%8#0'
debug: Inserted main_after_for@131.ops[80]: 'l-store-copy tmp%17#0 1'
debug: Replaced main_after_for@131.ops[87]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_after_for@131.ops[144]: 'l-store-copy aggregate%extract_uint16%5#0 1'
debug: Replaced main_after_for@131.ops[152]: 'v-load aggregate%extract_uint16%5#0' with 'l-load aggregate%extract_uint16%5#0'
debug: Inserted main_after_for@131.ops[159]: 'l-store-copy aggregate%item1%9#0 0'
debug: Replaced main_after_for@131.ops[165]: 'v-load aggregate%item1%9#0' with 'l-load aggregate%item1%9#0'
debug: Inserted main_after_for@131.ops[164]: 'l-store-copy tmp%22#1 1'
debug: Replaced main_after_for@131.ops[171]: 'v-load tmp%22#1' with 'l-load tmp%22#1'
debug: Inserted main_after_for@131.ops[22]: 'l-store-copy aggregate%array_head_and_tail%4#0 0'
debug: Replaced main_after_for@131.ops[30]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[96]: 'l-store-copy aggregate%has_next%4#0 0'
debug: Replaced main_after_for@131.ops[105]: 'v-load aggregate%has_next%4#0' with 'l-load aggregate%has_next%4#0'
debug: Inserted main_after_for@131.ops[36]: 'l-store-copy aggregate%array_head_and_tail%4#0 1'
debug: Replaced main_after_for@131.ops[47]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[122]: 'l-store-copy aggregate%array_head_and_tail%4#0 1'
debug: Replaced main_after_for@131.ops[133]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[6]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@131.ops[18]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@131.ops[30]: 'l-store-copy aggregate%has_next%4#0 1'
debug: Replaced main_after_for@131.ops[45]: 'v-load aggregate%has_next%4#0' with 'l-load aggregate%has_next%4#0'
debug: Inserted main_after_for@131.ops[117]: 'l-store-copy aggregate%has_next%5#0 1'
debug: Replaced main_after_for@131.ops[132]: 'v-load aggregate%has_next%5#0' with 'l-load aggregate%has_next%5#0'
debug: Inserted main_after_for@131.ops[12]: 'l-store-copy aggregate%array_length%47#0 1'
debug: Replaced main_after_for@131.ops[28]: 'v-load aggregate%array_length%47#0' with 'l-load aggregate%array_length%47#0'
debug: Inserted main_after_for@131.ops[60]: 'l-store-copy aggregate%item0%9#0 1'
debug: Replaced main_after_for@131.ops[83]: 'v-load aggregate%item0%9#0' with 'l-load aggregate%item0%9#0'
debug: Inserted main_after_for@131.ops[107]: 'l-store-copy aggregate%array_head_and_tail%4#0 2'
debug: Replaced main_after_for@131.ops[127]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[149]: 'l-store-copy aggregate%item0%10#0 1'
debug: Replaced main_after_for@131.ops[172]: 'v-load aggregate%item0%10#0' with 'l-load aggregate%item0%10#0'
debug: Inserted main_after_for@131.ops[27]: 'l-store-copy aggregate%item_offset%4#0 2'
debug: Replaced main_after_for@131.ops[52]: 'v-load aggregate%item_offset%4#0' with 'l-load aggregate%item_offset%4#0'
debug: Inserted main_after_for@131.ops[111]: 'l-store-copy aggregate%item_offset%5#0 2'
debug: Replaced main_after_for@131.ops[142]: 'v-load aggregate%item_offset%5#0' with 'l-load aggregate%item_offset%5#0'
debug: Inserted main_after_for@131.ops[48]: 'l-store-copy aggregate%has_next%4#0 4'
debug: Replaced main_after_for@131.ops[102]: 'v-load aggregate%has_next%4#0' with 'l-load aggregate%has_next%4#0'
debug: Inserted main_after_for@131.ops[53]: 'l-store-copy aggregate%array_head_and_tail%4#0 3'
debug: Replaced main_after_for@131.ops[109]: 'v-load aggregate%array_head_and_tail%4#0' with 'l-load aggregate%array_head_and_tail%4#0'
debug: Inserted main_after_for@131.ops[30]: 'l-store-copy aggregate%array_length%47#0 2'
debug: Replaced main_after_for@131.ops[121]: 'v-load aggregate%array_length%47#0' with 'l-load aggregate%array_length%47#0'
debug: Inserted main_after_for@131.ops[47]: 'l-store-copy aggregate%end_of_array%4#0 5'
debug: Replaced main_after_for@131.ops[139]: 'v-load aggregate%end_of_array%4#0' with 'l-load aggregate%end_of_array%4#0'
debug: Inserted main_after_for@131.ops[20]: 'l-store-copy arr#0 1'
debug: Replaced main_after_for@131.ops[197]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_log_route@10.ops[1]: 'l-store-copy tmp%32#0 0'
debug: Replaced main_test_implicit_conversion_log_route@10.ops[3]: 'v-load tmp%32#0' with 'l-load tmp%32#0'
debug: Inserted main_test_implicit_conversion_log_route@10.ops[5]: 'l-store-copy tmp%33#0 0'
debug: Replaced main_test_implicit_conversion_log_route@10.ops[7]: 'v-load tmp%33#0' with 'l-load tmp%33#0'
debug: Inserted main_test_implicit_conversion_log_route@10.ops[10]: 'l-store-copy tmp%34#0 0'
debug: Replaced main_test_implicit_conversion_log_route@10.ops[12]: 'v-load tmp%34#0' with 'l-load tmp%34#0'
debug: Inserted main_test_implicit_conversion_log_route@10.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_log_route@10.ops[17]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_implicit_conversion_log_route@10.ops[20]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_log_route@10.ops[22]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[1]: 'l-store-copy tmp%36#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[3]: 'v-load tmp%36#0' with 'l-load tmp%36#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[5]: 'l-store-copy tmp%37#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[7]: 'v-load tmp%37#0' with 'l-load tmp%37#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[10]: 'l-store-copy tmp%38#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[12]: 'v-load tmp%38#0' with 'l-load tmp%38#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[19]: 'l-store-copy event%0#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[21]: 'v-load event%0#0' with 'l-load event%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[24]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[26]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_implicit_conversion_emit_route@11.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_implicit_conversion_emit_route@11.ops[18]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_test_nested_array_route@12.ops[1]: 'l-store-copy tmp%40#0 0'
debug: Replaced main_test_nested_array_route@12.ops[3]: 'v-load tmp%40#0' with 'l-load tmp%40#0'
debug: Inserted main_test_nested_array_route@12.ops[5]: 'l-store-copy tmp%41#0 0'
debug: Replaced main_test_nested_array_route@12.ops[7]: 'v-load tmp%41#0' with 'l-load tmp%41#0'
debug: Inserted main_test_nested_array_route@12.ops[10]: 'l-store-copy tmp%42#0 0'
debug: Replaced main_test_nested_array_route@12.ops[12]: 'v-load tmp%42#0' with 'l-load tmp%42#0'
debug: Inserted main_test_nested_array_route@12.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%1#0 0'
debug: Replaced main_test_nested_array_route@12.ops[17]: 'v-load reinterpret_Encoded(uint64)%1#0' with 'l-load reinterpret_Encoded(uint64)%1#0'
debug: Inserted main_for_header@108.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@108.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_header@110.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@110.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@111.ops[10]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@111.ops[12]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@111.ops[15]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@111.ops[17]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@111.ops[19]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@111.ops[21]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@111.ops[2]: 'l-store-copy aggregate%val_as_bytes%9#0 0'
debug: Replaced main_for_body@111.ops[5]: 'v-load aggregate%val_as_bytes%9#0' with 'l-load aggregate%val_as_bytes%9#0'
debug: Inserted main_for_body@111.ops[24]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@111.ops[27]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@111.ops[5]: 'l-store-copy extra_arr#0 1'
debug: Replaced main_for_body@111.ops[9]: 'v-load extra_arr#0' with 'l-load extra_arr#0'
debug: Inserted main_for_body@111.ops[8]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@111.ops[28]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@111.ops[1]: 'l-store-copy j#0 0'
debug: Replaced main_for_body@111.ops[33]: 'v-load j#0' with 'l-load j#0'
debug: Inserted main_after_for@112.ops[1]: 'l-store-copy arr#0 0'
debug: Replaced main_after_for@112.ops[5]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_after_for@112.ops[11]: 'l-store-copy aggregate%concat%5#0 0'
debug: Replaced main_after_for@112.ops[16]: 'v-load aggregate%concat%5#0' with 'l-load aggregate%concat%5#0'
debug: Inserted main_after_for@112.ops[7]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_after_for@112.ops[15]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_after_for@112.ops[4]: 'l-store-copy extract_uint16%1#0 1'
debug: Replaced main_after_for@112.ops[15]: 'v-load extract_uint16%1#0' with 'l-load extract_uint16%1#0'
debug: Inserted main_for_header@114.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@114.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@115.ops[14]: 'l-store-copy aggregate%item_length%0#0 0'
debug: Replaced main_for_body@115.ops[16]: 'v-load aggregate%item_length%0#0' with 'l-load aggregate%item_length%0#0'
debug: Inserted main_for_body@115.ops[19]: 'l-store-copy aggregate%item_length_in_bytes%0#0 0'
debug: Replaced main_for_body@115.ops[21]: 'v-load aggregate%item_length_in_bytes%0#0' with 'l-load aggregate%item_length_in_bytes%0#0'
debug: Inserted main_for_body@115.ops[6]: 'l-store-copy aggregate%item_offset_offset%6#0 0'
debug: Replaced main_for_body@115.ops[9]: 'v-load aggregate%item_offset_offset%6#0' with 'l-load aggregate%item_offset_offset%6#0'
debug: Inserted main_for_body@115.ops[11]: 'l-store-copy aggregate%item_offset%6#0 0'
debug: Replaced main_for_body@115.ops[14]: 'v-load aggregate%item_offset%6#0' with 'l-load aggregate%item_offset%6#0'
debug: Inserted main_for_body@115.ops[26]: 'l-store-copy aggregate%item_head_tail_length%0#0 0'
debug: Replaced main_for_body@115.ops[30]: 'v-load aggregate%item_head_tail_length%0#0' with 'l-load aggregate%item_head_tail_length%0#0'
debug: Inserted main_for_body@115.ops[32]: 'l-store-copy inner_arr#0 0'
debug: Replaced main_for_body@115.ops[36]: 'v-load inner_arr#0' with 'l-load inner_arr#0'
debug: Inserted main_for_body@115.ops[9]: 'l-store-copy aggregate%array_head_and_tail%6#0 1'
debug: Replaced main_for_body@115.ops[14]: 'v-load aggregate%array_head_and_tail%6#0' with 'l-load aggregate%array_head_and_tail%6#0'
debug: Inserted main_for_body@115.ops[2]: 'l-store-copy aggregate%array_head_and_tail%6#0 0'
debug: Replaced main_for_body@115.ops[9]: 'v-load aggregate%array_head_and_tail%6#0' with 'l-load aggregate%array_head_and_tail%6#0'
debug: Inserted main_for_body@115.ops[16]: 'l-store-copy aggregate%array_head_and_tail%6#0 1'
debug: Replaced main_for_body@115.ops[31]: 'v-load aggregate%array_head_and_tail%6#0' with 'l-load aggregate%array_head_and_tail%6#0'
debug: Inserted main_for_body@115.ops[18]: 'l-store-copy aggregate%item_offset%6#0 2'
debug: Replaced main_for_body@115.ops[33]: 'v-load aggregate%item_offset%6#0' with 'l-load aggregate%item_offset%6#0'
debug: Inserted main_for_header@116.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@116.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@117.ops[6]: 'l-store-copy aggregate%bytes_offset%20#0 0'
debug: Replaced main_for_body@117.ops[9]: 'v-load aggregate%bytes_offset%20#0' with 'l-load aggregate%bytes_offset%20#0'
debug: Inserted main_for_body@117.ops[11]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@117.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@117.ops[2]: 'l-store-copy aggregate%array_trimmed%20#0 0'
debug: Replaced main_for_body@117.ops[9]: 'v-load aggregate%array_trimmed%20#0' with 'l-load aggregate%array_trimmed%20#0'
debug: Inserted main_for_body@117.ops[5]: 'l-store-copy item_index_internal%0#9 1'
debug: Replaced main_for_body@117.ops[19]: 'v-load item_index_internal%0#9' with 'l-load item_index_internal%0#9'
debug: Inserted main_after_for@118.ops[10]: 'l-store-copy extract_uint16%2#0 0'
debug: Replaced main_after_for@118.ops[12]: 'v-load extract_uint16%2#0' with 'l-load extract_uint16%2#0'
debug: Inserted main_after_for@118.ops[15]: 'l-store-copy add%1#0 0'
debug: Replaced main_after_for@118.ops[17]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted main_after_for@118.ops[19]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_after_for@118.ops[21]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_after_for@118.ops[2]: 'l-store-copy aggregate%val_as_bytes%10#0 0'
debug: Replaced main_after_for@118.ops[5]: 'v-load aggregate%val_as_bytes%10#0' with 'l-load aggregate%val_as_bytes%10#0'
debug: Inserted main_after_for@118.ops[24]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced main_after_for@118.ops[27]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted main_after_for@118.ops[5]: 'l-store-copy totals#0 1'
debug: Replaced main_after_for@118.ops[9]: 'v-load totals#0' with 'l-load totals#0'
debug: Inserted main_after_for@118.ops[8]: 'l-store-copy concat%1#0 1'
debug: Replaced main_after_for@118.ops[28]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_after_for@119.ops[3]: 'l-store-copy tmp%46#0 0'
debug: Replaced main_after_for@119.ops[5]: 'v-load tmp%46#0' with 'l-load tmp%46#0'
debug: Inserted main_after_for@119.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@119.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bit_packed_tuples_route@13.ops[1]: 'l-store-copy tmp%47#0 0'
debug: Replaced main_test_bit_packed_tuples_route@13.ops[3]: 'v-load tmp%47#0' with 'l-load tmp%47#0'
debug: Inserted main_test_bit_packed_tuples_route@13.ops[5]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_test_bit_packed_tuples_route@13.ops[7]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_test_bit_packed_tuples_route@13.ops[10]: 'l-store-copy tmp%49#0 0'
debug: Replaced main_test_bit_packed_tuples_route@13.ops[12]: 'v-load tmp%49#0' with 'l-load tmp%49#0'
debug: Inserted main_for_header@103.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@103.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@104.ops[11]: 'l-store-copy aggregate%encoded_bool%2#0 0'
debug: Replaced main_for_body@104.ops[13]: 'v-load aggregate%encoded_bool%2#0' with 'l-load aggregate%encoded_bool%2#0'
debug: Inserted main_for_body@104.ops[25]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@104.ops[27]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@104.ops[30]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@104.ops[32]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@104.ops[34]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@104.ops[36]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@104.ops[74]: 'l-store-copy aggregate%set_bit%3#0 0'
debug: Replaced main_for_body@104.ops[76]: 'v-load aggregate%set_bit%3#0' with 'l-load aggregate%set_bit%3#0'
debug: Inserted main_for_body@104.ops[80]: 'l-store-copy aggregate%set_bit%4#0 0'
debug: Replaced main_for_body@104.ops[82]: 'v-load aggregate%set_bit%4#0' with 'l-load aggregate%set_bit%4#0'
debug: Inserted main_for_body@104.ops[86]: 'l-store-copy aggregate%set_bit%5#0 0'
debug: Replaced main_for_body@104.ops[88]: 'v-load aggregate%set_bit%5#0' with 'l-load aggregate%set_bit%5#0'
debug: Inserted main_for_body@104.ops[92]: 'l-store-copy aggregate%set_bit%6#0 0'
debug: Replaced main_for_body@104.ops[94]: 'v-load aggregate%set_bit%6#0' with 'l-load aggregate%set_bit%6#0'
debug: Inserted main_for_body@104.ops[117]: 'l-store-copy extract_uint16%1#0 0'
debug: Replaced main_for_body@104.ops[119]: 'v-load extract_uint16%1#0' with 'l-load extract_uint16%1#0'
debug: Inserted main_for_body@104.ops[122]: 'l-store-copy add%1#0 0'
debug: Replaced main_for_body@104.ops[124]: 'v-load add%1#0' with 'l-load add%1#0'
debug: Inserted main_for_body@104.ops[126]: 'l-store-copy as_bytes%1#0 0'
debug: Replaced main_for_body@104.ops[128]: 'v-load as_bytes%1#0' with 'l-load as_bytes%1#0'
debug: Inserted main_for_body@104.ops[147]: 'l-store-copy aggregate%head%31#0 0'
debug: Replaced main_for_body@104.ops[149]: 'v-load aggregate%head%31#0' with 'l-load aggregate%head%31#0'
debug: Inserted main_for_body@104.ops[160]: 'l-store-copy extract_uint16%2#0 0'
debug: Replaced main_for_body@104.ops[162]: 'v-load extract_uint16%2#0' with 'l-load extract_uint16%2#0'
debug: Inserted main_for_body@104.ops[165]: 'l-store-copy add%2#0 0'
debug: Replaced main_for_body@104.ops[167]: 'v-load add%2#0' with 'l-load add%2#0'
debug: Inserted main_for_body@104.ops[169]: 'l-store-copy as_bytes%2#0 0'
debug: Replaced main_for_body@104.ops[171]: 'v-load as_bytes%2#0' with 'l-load as_bytes%2#0'
debug: Inserted main_for_body@104.ops[190]: 'l-store-copy aggregate%head%36#0 0'
debug: Replaced main_for_body@104.ops[192]: 'v-load aggregate%head%36#0' with 'l-load aggregate%head%36#0'
debug: Inserted main_for_body@104.ops[203]: 'l-store-copy extract_uint16%3#0 0'
debug: Replaced main_for_body@104.ops[205]: 'v-load extract_uint16%3#0' with 'l-load extract_uint16%3#0'
debug: Inserted main_for_body@104.ops[208]: 'l-store-copy add%3#0 0'
debug: Replaced main_for_body@104.ops[210]: 'v-load add%3#0' with 'l-load add%3#0'
debug: Inserted main_for_body@104.ops[212]: 'l-store-copy as_bytes%3#0 0'
debug: Replaced main_for_body@104.ops[214]: 'v-load as_bytes%3#0' with 'l-load as_bytes%3#0'
debug: Inserted main_for_body@104.ops[17]: 'l-store-copy aggregate%set_bit%1#0 0'
debug: Replaced main_for_body@104.ops[20]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted main_for_body@104.ops[39]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@104.ops[42]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@104.ops[100]: 'l-store-copy aggregate%set_bit%7#0 0'
debug: Replaced main_for_body@104.ops[103]: 'v-load aggregate%set_bit%7#0' with 'l-load aggregate%set_bit%7#0'
debug: Inserted main_for_body@104.ops[108]: 'l-store-copy aggregate%val_as_bytes%12#0 0'
debug: Replaced main_for_body@104.ops[111]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_for_body@104.ops[113]: 'l-store-copy aggregate%head%28#0 0'
debug: Replaced main_for_body@104.ops[116]: 'v-load aggregate%head%28#0' with 'l-load aggregate%head%28#0'
debug: Inserted main_for_body@104.ops[135]: 'l-store-copy as_u16_bytes%1#0 0'
debug: Replaced main_for_body@104.ops[138]: 'v-load as_u16_bytes%1#0' with 'l-load as_u16_bytes%1#0'
debug: Inserted main_for_body@104.ops[149]: 'l-store-copy aggregate%set_bit%14#0 0'
debug: Replaced main_for_body@104.ops[152]: 'v-load aggregate%set_bit%14#0' with 'l-load aggregate%set_bit%14#0'
debug: Inserted main_for_body@104.ops[159]: 'l-store-copy aggregate%head%32#0 0'
debug: Replaced main_for_body@104.ops[162]: 'v-load aggregate%head%32#0' with 'l-load aggregate%head%32#0'
debug: Inserted main_for_body@104.ops[181]: 'l-store-copy as_u16_bytes%2#0 0'
debug: Replaced main_for_body@104.ops[184]: 'v-load as_u16_bytes%2#0' with 'l-load as_u16_bytes%2#0'
debug: Inserted main_for_body@104.ops[195]: 'l-store-copy aggregate%encoded_bool%6#0 0'
debug: Replaced main_for_body@104.ops[198]: 'v-load aggregate%encoded_bool%6#0' with 'l-load aggregate%encoded_bool%6#0'
debug: Inserted main_for_body@104.ops[205]: 'l-store-copy aggregate%head%37#0 0'
debug: Replaced main_for_body@104.ops[208]: 'v-load aggregate%head%37#0' with 'l-load aggregate%head%37#0'
debug: Inserted main_for_body@104.ops[227]: 'l-store-copy as_u16_bytes%3#0 0'
debug: Replaced main_for_body@104.ops[230]: 'v-load as_u16_bytes%3#0' with 'l-load as_u16_bytes%3#0'
debug: Inserted main_for_body@104.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[4]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[145]: 'l-store-copy tmp%27#1 0'
debug: Replaced main_for_body@104.ops[149]: 'v-load tmp%27#1' with 'l-load tmp%27#1'
debug: Inserted main_for_body@104.ops[192]: 'l-store-copy tmp%38#1 0'
debug: Replaced main_for_body@104.ops[196]: 'v-load tmp%38#1' with 'l-load tmp%38#1'
debug: Inserted main_for_body@104.ops[21]: 'l-store-copy arr2#0 1'
debug: Replaced main_for_body@104.ops[25]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted main_for_body@104.ops[48]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[53]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[57]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[58]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[62]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[63]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[67]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[68]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[72]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[73]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@104.ops[77]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[113]: 'l-store-copy aggregate%head%27#0 0'
debug: Replaced main_for_body@104.ops[119]: 'v-load aggregate%head%27#0' with 'l-load aggregate%head%27#0'
debug: Inserted main_for_body@104.ops[125]: 'l-store-copy arr7#0 1'
debug: Replaced main_for_body@104.ops[129]: 'v-load arr7#0' with 'l-load arr7#0'
debug: Inserted main_for_body@104.ops[173]: 'l-store-copy arr8#0 1'
debug: Replaced main_for_body@104.ops[177]: 'v-load arr8#0' with 'l-load arr8#0'
debug: Inserted main_for_body@104.ops[221]: 'l-store-copy arr9#0 1'
debug: Replaced main_for_body@104.ops[225]: 'v-load arr9#0' with 'l-load arr9#0'
debug: Inserted main_for_body@104.ops[3]: 'l-store-copy tmp%8#0 1'
debug: Replaced main_for_body@104.ops[11]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_for_body@104.ops[8]: 'l-store-copy tmp%9#1 1'
debug: Replaced main_for_body@104.ops[18]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@104.ops[26]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@104.ops[46]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@104.ops[131]: 'l-store-copy concat%1#0 1'
debug: Replaced main_for_body@104.ops[151]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_for_body@104.ops[180]: 'l-store-copy concat%2#0 1'
debug: Replaced main_for_body@104.ops[200]: 'v-load concat%2#0' with 'l-load concat%2#0'
debug: Inserted main_for_body@104.ops[229]: 'l-store-copy concat%3#0 1'
debug: Replaced main_for_body@104.ops[249]: 'v-load concat%3#0' with 'l-load concat%3#0'
debug: Inserted main_for_body@104.ops[54]: 'l-store-copy tmp%13#2 1'
debug: Replaced main_for_body@104.ops[86]: 'v-load tmp%13#2' with 'l-load tmp%13#2'
debug: Inserted main_for_body@104.ops[83]: 'l-store-copy aggregate%val_as_bytes%11#0 1'
debug: Replaced main_for_body@104.ops[115]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_for_body@104.ops[60]: 'l-store-copy tmp%14#1 2'
debug: Replaced main_for_body@104.ops[94]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_for_body@104.ops[66]: 'l-store-copy tmp%15#2 3'
debug: Replaced main_for_body@104.ops[101]: 'v-load tmp%15#2' with 'l-load tmp%15#2'
debug: Inserted main_for_body@104.ops[72]: 'l-store-copy tmp%16#1 4'
debug: Replaced main_for_body@104.ops[108]: 'v-load tmp%16#1' with 'l-load tmp%16#1'
debug: Inserted main_for_body@104.ops[78]: 'l-store-copy tmp%17#0 5'
debug: Replaced main_for_body@104.ops[115]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted main_for_body@104.ops[84]: 'l-store-copy i#21 6'
debug: Replaced main_for_body@104.ops[125]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_for_body@104.ops[179]: 'l-store-copy aggregate%head%31#0 0'
debug: Replaced main_for_body@104.ops[223]: 'v-load aggregate%head%31#0' with 'l-load aggregate%head%31#0'
debug: Inserted main_for_body@104.ops[6]: 'l-store-copy i#0 1'
debug: Replaced main_for_body@104.ops[51]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[123]: 'l-store-copy aggregate%set_bit%7#0 2'
debug: Replaced main_for_body@104.ops[169]: 'v-load aggregate%set_bit%7#0' with 'l-load aggregate%set_bit%7#0'
debug: Inserted main_for_body@104.ops[133]: 'l-store-copy aggregate%val_as_bytes%12#0 2'
debug: Replaced main_for_body@104.ops[183]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_for_body@104.ops[166]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@104.ops[216]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[185]: 'l-store-copy aggregate%val_as_bytes%12#0 3'
debug: Replaced main_for_body@104.ops[234]: 'v-load aggregate%val_as_bytes%12#0' with 'l-load aggregate%val_as_bytes%12#0'
debug: Inserted main_for_body@104.ops[122]: 'l-store-copy aggregate%val_as_bytes%11#0 2'
debug: Replaced main_for_body@104.ops[178]: 'v-load aggregate%val_as_bytes%11#0' with 'l-load aggregate%val_as_bytes%11#0'
debug: Inserted main_for_body@104.ops[26]: 'l-store-copy aggregate%set_bit%1#0 3'
debug: Replaced main_for_body@104.ops[92]: 'v-load aggregate%set_bit%1#0' with 'l-load aggregate%set_bit%1#0'
debug: Inserted main_for_body@104.ops[89]: 'l-store-copy i#0 7'
debug: Replaced main_for_body@104.ops[168]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@104.ops[131]: 'l-store-copy i#21 4'
debug: Replaced main_for_body@104.ops[270]: 'v-load i#21' with 'l-load i#21'
debug: Inserted main_after_for@105.ops[3]: 'l-store-copy aggregate%array_length%57#0 0'
debug: Replaced main_after_for@105.ops[5]: 'v-load aggregate%array_length%57#0' with 'l-load aggregate%array_length%57#0'
debug: Inserted main_after_for@105.ops[8]: 'l-store-copy tmp%42#1 0'
debug: Replaced main_after_for@105.ops[10]: 'v-load tmp%42#1' with 'l-load tmp%42#1'
debug: Inserted main_after_for@105.ops[15]: 'l-store-copy aggregate%array_length%58#0 0'
debug: Replaced main_after_for@105.ops[17]: 'v-load aggregate%array_length%58#0' with 'l-load aggregate%array_length%58#0'
debug: Inserted main_after_for@105.ops[20]: 'l-store-copy tmp%44#1 0'
debug: Replaced main_after_for@105.ops[22]: 'v-load tmp%44#1' with 'l-load tmp%44#1'
debug: Inserted main_after_for@105.ops[27]: 'l-store-copy aggregate%array_length%59#0 0'
debug: Replaced main_after_for@105.ops[29]: 'v-load aggregate%array_length%59#0' with 'l-load aggregate%array_length%59#0'
debug: Inserted main_after_for@105.ops[32]: 'l-store-copy tmp%46#1 0'
debug: Replaced main_after_for@105.ops[34]: 'v-load tmp%46#1' with 'l-load tmp%46#1'
debug: Inserted main_after_for@105.ops[39]: 'l-store-copy aggregate%array_length%60#0 0'
debug: Replaced main_after_for@105.ops[41]: 'v-load aggregate%array_length%60#0' with 'l-load aggregate%array_length%60#0'
debug: Inserted main_after_for@105.ops[44]: 'l-store-copy tmp%48#0 0'
debug: Replaced main_after_for@105.ops[46]: 'v-load tmp%48#0' with 'l-load tmp%48#0'
debug: Inserted main_after_for@105.ops[61]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@105.ops[63]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@105.ops[37]: 'l-store-copy arr9#0 0'
debug: Replaced main_after_for@105.ops[59]: 'v-load arr9#0' with 'l-load arr9#0'
debug: Inserted main_after_for@105.ops[25]: 'l-store-copy arr8#0 0'
debug: Replaced main_after_for@105.ops[57]: 'v-load arr8#0' with 'l-load arr8#0'
debug: Inserted main_after_for@105.ops[13]: 'l-store-copy arr7#0 0'
debug: Replaced main_after_for@105.ops[55]: 'v-load arr7#0' with 'l-load arr7#0'
debug: Inserted main_after_for@105.ops[1]: 'l-store-copy arr2#0 0'
debug: Replaced main_after_for@105.ops[53]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@14.ops[1]: 'l-store-copy tmp%51#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@14.ops[3]: 'v-load tmp%51#0' with 'l-load tmp%51#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@14.ops[5]: 'l-store-copy tmp%52#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@14.ops[7]: 'v-load tmp%52#0' with 'l-load tmp%52#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@14.ops[10]: 'l-store-copy tmp%53#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@14.ops[12]: 'v-load tmp%53#0' with 'l-load tmp%53#0'
debug: Inserted main_sum_uints_and_lengths_and_trues_route@14.ops[15]: 'l-store-copy arr1#0 0'
debug: Replaced main_sum_uints_and_lengths_and_trues_route@14.ops[31]: 'v-load arr1#0' with 'l-load arr1#0'
debug: Inserted main_for_header@83.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@83.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@84.ops[6]: 'l-store-copy aggregate%bytes_offset%21#0 0'
debug: Replaced main_for_body@84.ops[9]: 'v-load aggregate%bytes_offset%21#0' with 'l-load aggregate%bytes_offset%21#0'
debug: Inserted main_for_body@84.ops[11]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@84.ops[14]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@84.ops[2]: 'l-store-copy aggregate%array_trimmed%21#0 0'
debug: Replaced main_for_body@84.ops[9]: 'v-load aggregate%array_trimmed%21#0' with 'l-load aggregate%array_trimmed%21#0'
debug: Inserted main_for_body@84.ops[5]: 'l-store-copy item_index_internal%0#0 1'
debug: Replaced main_for_body@84.ops[19]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_for_header@86.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@86.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@87.ops[3]: 'l-store-copy aggregate%add%4#0 0'
debug: Replaced main_for_body@87.ops[6]: 'v-load aggregate%add%4#0' with 'l-load aggregate%add%4#0'
debug: Inserted main_for_body@87.ops[8]: 'l-store-copy b#0 0'
debug: Replaced main_for_body@87.ops[12]: 'v-load b#0' with 'l-load b#0'
debug: Inserted main_if_body@88.ops[3]: 'l-store-copy sum2#0 0'
debug: Replaced main_if_body@88.ops[5]: 'v-load sum2#0' with 'l-load sum2#0'
debug: Inserted main_for_header@91.ops[3]: 'l-store-copy continue_looping%2#0 0'
debug: Replaced main_for_header@91.ops[5]: 'v-load continue_looping%2#0' with 'l-load continue_looping%2#0'
debug: Inserted main_for_body@92.ops[11]: 'l-store-copy aggregate%encoded_element%22#0 0'
debug: Replaced main_for_body@92.ops[13]: 'v-load aggregate%encoded_element%22#0' with 'l-load aggregate%encoded_element%22#0'
debug: Inserted main_for_body@92.ops[28]: 'l-store-copy sum3#0 0'
debug: Replaced main_for_body@92.ops[30]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_for_body@92.ops[6]: 'l-store-copy aggregate%bytes_offset%22#0 0'
debug: Replaced main_for_body@92.ops[9]: 'v-load aggregate%bytes_offset%22#0' with 'l-load aggregate%bytes_offset%22#0'
debug: Inserted main_for_body@92.ops[15]: 'l-store-copy aggregate%encoded_element%22#0 0'
debug: Replaced main_for_body@92.ops[19]: 'v-load aggregate%encoded_element%22#0' with 'l-load aggregate%encoded_element%22#0'
debug: Inserted main_for_body@92.ops[20]: 'l-store-copy aggregate%encoded_element%22#0 0'
debug: Replaced main_for_body@92.ops[24]: 'v-load aggregate%encoded_element%22#0' with 'l-load aggregate%encoded_element%22#0'
debug: Inserted main_for_body@92.ops[2]: 'l-store-copy aggregate%array_trimmed%22#0 0'
debug: Replaced main_for_body@92.ops[9]: 'v-load aggregate%array_trimmed%22#0' with 'l-load aggregate%array_trimmed%22#0'
debug: Inserted main_for_body@92.ops[19]: 'l-store-copy tup.foo#0 1'
debug: Replaced main_for_body@92.ops[31]: 'v-load tup.foo#0' with 'l-load tup.foo#0'
debug: Inserted main_for_body@92.ops[25]: 'l-store-copy tup.bar#0 2'
debug: Replaced main_for_body@92.ops[38]: 'v-load tup.bar#0' with 'l-load tup.bar#0'
debug: Inserted main_if_body@93.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced main_if_body@93.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_after_if_else@94.ops[1]: 'l-store-copy sum3#0 0'
debug: Replaced main_after_if_else@94.ops[3]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_if_body@95.ops[3]: 'l-store-copy sum3#0 0'
debug: Replaced main_if_body@95.ops[5]: 'v-load sum3#0' with 'l-load sum3#0'
debug: Inserted main_after_for@97.ops[5]: 'l-store-copy item_index_internal%3#0 0'
debug: Replaced main_after_for@97.ops[7]: 'v-load item_index_internal%3#0' with 'l-load item_index_internal%3#0'
debug: Inserted main_for_header@98.ops[3]: 'l-store-copy continue_looping%3#0 0'
debug: Replaced main_for_header@98.ops[5]: 'v-load continue_looping%3#0' with 'l-load continue_looping%3#0'
debug: Inserted main_for_body@99.ops[39]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced main_for_body@99.ops[41]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted main_for_body@99.ops[56]: 'l-store-copy aggregate%substring3%13#0 0'
debug: Replaced main_for_body@99.ops[58]: 'v-load aggregate%substring3%13#0' with 'l-load aggregate%substring3%13#0'
debug: Inserted main_for_body@99.ops[75]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_for_body@99.ops[77]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@99.ops[6]: 'l-store-copy aggregate%item_offset_offset%8#0 0'
debug: Replaced main_for_body@99.ops[9]: 'v-load aggregate%item_offset_offset%8#0' with 'l-load aggregate%item_offset_offset%8#0'
debug: Inserted main_for_body@99.ops[15]: 'l-store-copy aggregate%next_index%6#0 0'
debug: Replaced main_for_body@99.ops[18]: 'v-load aggregate%next_index%6#0' with 'l-load aggregate%next_index%6#0'
debug: Inserted main_for_body@99.ops[27]: 'l-store-copy aggregate%next_item_offset_offset%6#0 0'
debug: Replaced main_for_body@99.ops[30]: 'v-load aggregate%next_item_offset_offset%6#0' with 'l-load aggregate%next_item_offset_offset%6#0'
debug: Inserted main_for_body@99.ops[32]: 'l-store-copy aggregate%next_item_offset%6#0 0'
debug: Replaced main_for_body@99.ops[35]: 'v-load aggregate%next_item_offset%6#0' with 'l-load aggregate%next_item_offset%6#0'
debug: Inserted main_for_body@99.ops[71]: 'l-store-copy tmp%6#2 0'
debug: Replaced main_for_body@99.ops[74]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_body@99.ops[38]: 'l-store-copy aggregate%end_offset%6#0 0'
debug: Replaced main_for_body@99.ops[42]: 'v-load aggregate%end_offset%6#0' with 'l-load aggregate%end_offset%6#0'
debug: Inserted main_for_body@99.ops[55]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced main_for_body@99.ops[58]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted main_for_body@99.ops[57]: 'l-store-copy aggregate%len%6#0 1'
debug: Replaced main_for_body@99.ops[61]: 'v-load aggregate%len%6#0' with 'l-load aggregate%len%6#0'
debug: Inserted main_for_body@99.ops[78]: 'l-store-copy tmp%6#2 1'
debug: Replaced main_for_body@99.ops[81]: 'v-load tmp%6#2' with 'l-load tmp%6#2'
debug: Inserted main_for_body@99.ops[47]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced main_for_body@99.ops[51]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted main_for_body@99.ops[52]: 'l-store-copy aggregate%substring3%12#0 0'
debug: Replaced main_for_body@99.ops[56]: 'v-load aggregate%substring3%12#0' with 'l-load aggregate%substring3%12#0'
debug: Inserted main_for_body@99.ops[73]: 'l-store-copy sum4#0 0'
debug: Replaced main_for_body@99.ops[79]: 'v-load sum4#0' with 'l-load sum4#0'
debug: Inserted main_for_body@99.ops[2]: 'l-store-copy aggregate%array_head_and_tail%8#0 0'
debug: Replaced main_for_body@99.ops[9]: 'v-load aggregate%array_head_and_tail%8#0' with 'l-load aggregate%array_head_and_tail%8#0'
debug: Inserted main_for_body@99.ops[56]: 'l-store-copy aggregate%extract_uint16%6#0 1'
debug: Replaced main_for_body@99.ops[64]: 'v-load aggregate%extract_uint16%6#0' with 'l-load aggregate%extract_uint16%6#0'
debug: Inserted main_for_body@99.ops[71]: 'l-store-copy dyn_tup.bar#0 0'
debug: Replaced main_for_body@99.ops[78]: 'v-load dyn_tup.bar#0' with 'l-load dyn_tup.bar#0'
debug: Inserted main_for_body@99.ops[20]: 'l-store-copy aggregate%next_index%6#0 1'
debug: Replaced main_for_body@99.ops[26]: 'v-load aggregate%next_index%6#0' with 'l-load aggregate%next_index%6#0'
debug: Inserted main_for_body@99.ops[24]: 'l-store-copy aggregate%array_head_and_tail%8#0 1'
debug: Replaced main_for_body@99.ops[32]: 'v-load aggregate%array_head_and_tail%8#0' with 'l-load aggregate%array_head_and_tail%8#0'
debug: Inserted main_for_body@99.ops[5]: 'l-store-copy idx#0 1'
debug: Replaced main_for_body@99.ops[14]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_for_body@99.ops[27]: 'l-store-copy aggregate%end_of_array%6#0 2'
debug: Replaced main_for_body@99.ops[39]: 'v-load aggregate%end_of_array%6#0' with 'l-load aggregate%end_of_array%6#0'
debug: Inserted main_for_body@99.ops[35]: 'l-store-copy aggregate%array_head_and_tail%8#0 2'
debug: Replaced main_for_body@99.ops[46]: 'v-load aggregate%array_head_and_tail%8#0' with 'l-load aggregate%array_head_and_tail%8#0'
debug: Inserted main_for_body@99.ops[11]: 'l-store-copy aggregate%array_head_and_tail%8#0 2'
debug: Replaced main_for_body@99.ops[25]: 'v-load aggregate%array_head_and_tail%8#0' with 'l-load aggregate%array_head_and_tail%8#0'
debug: Inserted main_for_body@99.ops[24]: 'l-store-copy aggregate%has_next%6#0 2'
debug: Replaced main_for_body@99.ops[44]: 'v-load aggregate%has_next%6#0' with 'l-load aggregate%has_next%6#0'
debug: Inserted main_for_body@99.ops[58]: 'l-store-copy dyn_tup.foo#0 1'
debug: Replaced main_for_body@99.ops[82]: 'v-load dyn_tup.foo#0' with 'l-load dyn_tup.foo#0'
debug: Inserted main_for_body@99.ops[14]: 'l-store-copy aggregate%item_offset%8#0 2'
debug: Replaced main_for_body@99.ops[50]: 'v-load aggregate%item_offset%8#0' with 'l-load aggregate%item_offset%8#0'
debug: Inserted main_for_body@99.ops[33]: 'l-store-copy aggregate%next_index%6#0 4'
debug: Replaced main_for_body@99.ops[104]: 'v-load aggregate%next_index%6#0' with 'l-load aggregate%next_index%6#0'
debug: Inserted main_for_body@99.ops[17]: 'l-store-copy idx#0 2'
debug: Replaced main_for_body@99.ops[99]: 'v-load idx#0' with 'l-load idx#0'
debug: Inserted main_after_for@100.ops[27]: 'l-store-copy tmp%60#0 0'
debug: Replaced main_after_for@100.ops[29]: 'v-load tmp%60#0' with 'l-load tmp%60#0'
debug: Inserted main_after_for@100.ops[32]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@100.ops[34]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@100.ops[5]: 'l-store-copy aggregate%val_as_bytes%18#0 0'
debug: Replaced main_after_for@100.ops[8]: 'v-load aggregate%val_as_bytes%18#0' with 'l-load aggregate%val_as_bytes%18#0'
debug: Inserted main_after_for@100.ops[13]: 'l-store-copy aggregate%val_as_bytes%19#0 0'
debug: Replaced main_after_for@100.ops[16]: 'v-load aggregate%val_as_bytes%19#0' with 'l-load aggregate%val_as_bytes%19#0'
debug: Inserted main_after_for@100.ops[21]: 'l-store-copy aggregate%val_as_bytes%20#0 0'
debug: Replaced main_after_for@100.ops[24]: 'v-load aggregate%val_as_bytes%20#0' with 'l-load aggregate%val_as_bytes%20#0'
debug: Inserted main_after_for@100.ops[26]: 'l-store-copy aggregate%head%42#0 0'
debug: Replaced main_after_for@100.ops[29]: 'v-load aggregate%head%42#0' with 'l-load aggregate%head%42#0'
debug: Inserted main_after_for@100.ops[2]: 'l-store-copy aggregate%val_as_bytes%17#0 0'
debug: Replaced main_after_for@100.ops[8]: 'v-load aggregate%val_as_bytes%17#0' with 'l-load aggregate%val_as_bytes%17#0'
debug: Inserted main_after_for@100.ops[11]: 'l-store-copy aggregate%head%40#0 0'
debug: Replaced main_after_for@100.ops[17]: 'v-load aggregate%head%40#0' with 'l-load aggregate%head%40#0'
debug: Inserted main_after_for@100.ops[20]: 'l-store-copy aggregate%head%41#0 0'
debug: Replaced main_after_for@100.ops[26]: 'v-load aggregate%head%41#0' with 'l-load aggregate%head%41#0'
debug: Inserted main_test_uint64_return_route@15.ops[1]: 'l-store-copy tmp%61#0 0'
debug: Replaced main_test_uint64_return_route@15.ops[3]: 'v-load tmp%61#0' with 'l-load tmp%61#0'
debug: Inserted main_test_uint64_return_route@15.ops[5]: 'l-store-copy tmp%62#0 0'
debug: Replaced main_test_uint64_return_route@15.ops[7]: 'v-load tmp%62#0' with 'l-load tmp%62#0'
debug: Inserted main_test_uint64_return_route@15.ops[10]: 'l-store-copy tmp%63#0 0'
debug: Replaced main_test_uint64_return_route@15.ops[12]: 'v-load tmp%63#0' with 'l-load tmp%63#0'
debug: Inserted main_test_uint64_return_route@15.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%2#0 0'
debug: Replaced main_test_uint64_return_route@15.ops[17]: 'v-load reinterpret_Encoded(uint64)%2#0' with 'l-load reinterpret_Encoded(uint64)%2#0'
debug: Inserted main_for_header@78.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@78.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@79.ops[10]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@79.ops[12]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@79.ops[15]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@79.ops[17]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@79.ops[19]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@79.ops[21]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@79.ops[2]: 'l-store-copy aggregate%val_as_bytes%24#0 0'
debug: Replaced main_for_body@79.ops[5]: 'v-load aggregate%val_as_bytes%24#0' with 'l-load aggregate%val_as_bytes%24#0'
debug: Inserted main_for_body@79.ops[24]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@79.ops[27]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@79.ops[5]: 'l-store-copy arr#0 1'
debug: Replaced main_for_body@79.ops[9]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@79.ops[8]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@79.ops[28]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@79.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@79.ops[33]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@80.ops[3]: 'l-store-copy tmp%67#0 0'
debug: Replaced main_after_for@80.ops[5]: 'v-load tmp%67#0' with 'l-load tmp%67#0'
debug: Inserted main_after_for@80.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@80.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_bool_return_route@16.ops[1]: 'l-store-copy tmp%68#0 0'
debug: Replaced main_test_bool_return_route@16.ops[3]: 'v-load tmp%68#0' with 'l-load tmp%68#0'
debug: Inserted main_test_bool_return_route@16.ops[5]: 'l-store-copy tmp%69#0 0'
debug: Replaced main_test_bool_return_route@16.ops[7]: 'v-load tmp%69#0' with 'l-load tmp%69#0'
debug: Inserted main_test_bool_return_route@16.ops[10]: 'l-store-copy tmp%70#0 0'
debug: Replaced main_test_bool_return_route@16.ops[12]: 'v-load tmp%70#0' with 'l-load tmp%70#0'
debug: Inserted main_test_bool_return_route@16.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%3#0 0'
debug: Replaced main_test_bool_return_route@16.ops[17]: 'v-load reinterpret_Encoded(uint64)%3#0' with 'l-load reinterpret_Encoded(uint64)%3#0'
debug: Inserted main_for_header@73.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@73.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@74.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@74.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@74.ops[12]: 'l-store-copy aggregate%encoded_bool%8#0 0'
debug: Replaced main_for_body@74.ops[15]: 'v-load aggregate%encoded_bool%8#0' with 'l-load aggregate%encoded_bool%8#0'
debug: Inserted main_for_body@74.ops[7]: 'l-store-copy tmp%1#5 0'
debug: Replaced main_for_body@74.ops[11]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_for_body@74.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@74.ops[22]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@75.ops[3]: 'l-store-copy tmp%74#0 0'
debug: Replaced main_after_for@75.ops[5]: 'v-load tmp%74#0' with 'l-load tmp%74#0'
debug: Inserted main_after_for@75.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@75.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_tuple_return_route@17.ops[1]: 'l-store-copy tmp%75#0 0'
debug: Replaced main_test_tuple_return_route@17.ops[3]: 'v-load tmp%75#0' with 'l-load tmp%75#0'
debug: Inserted main_test_tuple_return_route@17.ops[5]: 'l-store-copy tmp%76#0 0'
debug: Replaced main_test_tuple_return_route@17.ops[7]: 'v-load tmp%76#0' with 'l-load tmp%76#0'
debug: Inserted main_test_tuple_return_route@17.ops[10]: 'l-store-copy tmp%77#0 0'
debug: Replaced main_test_tuple_return_route@17.ops[12]: 'v-load tmp%77#0' with 'l-load tmp%77#0'
debug: Inserted main_test_tuple_return_route@17.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%4#0 0'
debug: Replaced main_test_tuple_return_route@17.ops[17]: 'v-load reinterpret_Encoded(uint64)%4#0' with 'l-load reinterpret_Encoded(uint64)%4#0'
debug: Inserted main_for_header@68.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@68.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@69.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@69.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@69.ops[11]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@69.ops[13]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@69.ops[23]: 'l-store-copy aggregate%encoded_bool%10#0 0'
debug: Replaced main_for_body@69.ops[25]: 'v-load aggregate%encoded_bool%10#0' with 'l-load aggregate%encoded_bool%10#0'
debug: Inserted main_for_body@69.ops[41]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced main_for_body@69.ops[43]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@69.ops[46]: 'l-store-copy add%0#1 0'
debug: Replaced main_for_body@69.ops[48]: 'v-load add%0#1' with 'l-load add%0#1'
debug: Inserted main_for_body@69.ops[50]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_for_body@69.ops[52]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_for_body@69.ops[29]: 'l-store-copy aggregate%set_bit%27#0 0'
debug: Replaced main_for_body@69.ops[32]: 'v-load aggregate%set_bit%27#0' with 'l-load aggregate%set_bit%27#0'
debug: Inserted main_for_body@69.ops[34]: 'l-store-copy aggregate%head%53#0 0'
debug: Replaced main_for_body@69.ops[37]: 'v-load aggregate%head%53#0' with 'l-load aggregate%head%53#0'
debug: Inserted main_for_body@69.ops[56]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_for_body@69.ops[59]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_for_body@69.ops[37]: 'l-store-copy arr#0 1'
debug: Replaced main_for_body@69.ops[41]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@69.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@69.ops[9]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@69.ops[10]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@69.ops[18]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@69.ops[17]: 'l-store-copy tmp%3#3 1'
debug: Replaced main_for_body@69.ops[30]: 'v-load tmp%3#3' with 'l-load tmp%3#3'
debug: Inserted main_for_body@69.ops[21]: 'l-store-copy aggregate%val_as_bytes%26#0 1'
debug: Replaced main_for_body@69.ops[35]: 'v-load aggregate%val_as_bytes%26#0' with 'l-load aggregate%val_as_bytes%26#0'
debug: Inserted main_for_body@69.ops[8]: 'l-store-copy tmp%1#5 1'
debug: Replaced main_for_body@69.ops[26]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_for_body@69.ops[45]: 'l-store-copy concat%0#1 1'
debug: Replaced main_for_body@69.ops[65]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_for_body@69.ops[21]: 'l-store-copy i#0 2'
debug: Replaced main_for_body@69.ops[70]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@70.ops[3]: 'l-store-copy tmp%81#0 0'
debug: Replaced main_after_for@70.ops[5]: 'v-load tmp%81#0' with 'l-load tmp%81#0'
debug: Inserted main_after_for@70.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@70.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_tuple_return_route@18.ops[1]: 'l-store-copy tmp%82#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@18.ops[3]: 'v-load tmp%82#0' with 'l-load tmp%82#0'
debug: Inserted main_test_dynamic_tuple_return_route@18.ops[5]: 'l-store-copy tmp%83#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@18.ops[7]: 'v-load tmp%83#0' with 'l-load tmp%83#0'
debug: Inserted main_test_dynamic_tuple_return_route@18.ops[10]: 'l-store-copy tmp%84#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@18.ops[12]: 'v-load tmp%84#0' with 'l-load tmp%84#0'
debug: Inserted main_test_dynamic_tuple_return_route@18.ops[15]: 'l-store-copy reinterpret_Encoded(uint64)%5#0 0'
debug: Replaced main_test_dynamic_tuple_return_route@18.ops[17]: 'v-load reinterpret_Encoded(uint64)%5#0' with 'l-load reinterpret_Encoded(uint64)%5#0'
debug: Inserted main_for_header@63.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@63.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@64.ops[15]: 'l-store-copy aggregate%length%3#0 0'
debug: Replaced main_for_body@64.ops[17]: 'v-load aggregate%length%3#0' with 'l-load aggregate%length%3#0'
debug: Inserted main_for_body@64.ops[19]: 'l-store-copy aggregate%as_bytes%28#0 0'
debug: Replaced main_for_body@64.ops[21]: 'v-load aggregate%as_bytes%28#0' with 'l-load aggregate%as_bytes%28#0'
debug: Inserted main_for_body@64.ops[23]: 'l-store-copy aggregate%length_uint16%3#0 0'
debug: Replaced main_for_body@64.ops[25]: 'v-load aggregate%length_uint16%3#0' with 'l-load aggregate%length_uint16%3#0'
debug: Inserted main_for_body@64.ops[32]: 'l-store-copy aggregate%head%59#0 0'
debug: Replaced main_for_body@64.ops[34]: 'v-load aggregate%head%59#0' with 'l-load aggregate%head%59#0'
debug: Inserted main_for_body@64.ops[37]: 'l-store-copy aggregate%concat%8#0 0'
debug: Replaced main_for_body@64.ops[40]: 'v-load aggregate%concat%8#0' with 'l-load aggregate%concat%8#0'
debug: Inserted main_for_body@64.ops[4]: 'l-store-copy arr#0 0'
debug: Replaced main_for_body@64.ops[8]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_body@64.ops[43]: 'l-store-copy aggregate%concat%9#0 0'
debug: Replaced main_for_body@64.ops[48]: 'v-load aggregate%concat%9#0' with 'l-load aggregate%concat%9#0'
debug: Inserted main_for_body@64.ops[29]: 'l-store-copy aggregate%encoded_value%3#0 0'
debug: Replaced main_for_body@64.ops[37]: 'v-load aggregate%encoded_value%3#0' with 'l-load aggregate%encoded_value%3#0'
debug: Inserted main_for_body@64.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@64.ops[12]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@64.ops[16]: 'l-store-copy tmp%0#8 0'
debug: Replaced main_for_body@64.ops[29]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_for_body@64.ops[3]: 'l-store-copy tmp%0#8 1'
debug: Replaced main_for_body@64.ops[16]: 'v-load tmp%0#8' with 'l-load tmp%0#8'
debug: Inserted main_for_body@64.ops[15]: 'l-store-copy aggregate%val_as_bytes%28#0 1'
debug: Replaced main_for_body@64.ops[35]: 'v-load aggregate%val_as_bytes%28#0' with 'l-load aggregate%val_as_bytes%28#0'
debug: Inserted main_for_body@64.ops[12]: 'l-store-copy extract_to_end%0#0 2'
debug: Replaced main_for_body@64.ops[52]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_for_body@64.ops[9]: 'l-store-copy extract_uint16%0#0 3'
debug: Replaced main_for_body@64.ops[52]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_for_body@64.ops[16]: 'l-store-copy i#0 3'
debug: Replaced main_for_body@64.ops[59]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@65.ops[3]: 'l-store-copy tmp%88#0 0'
debug: Replaced main_after_for@65.ops[5]: 'v-load tmp%88#0' with 'l-load tmp%88#0'
debug: Inserted main_after_for@65.ops[8]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@65.ops[10]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[1]: 'l-store-copy tmp%89#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[3]: 'v-load tmp%89#0' with 'l-load tmp%89#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[5]: 'l-store-copy tmp%90#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[7]: 'v-load tmp%90#0' with 'l-load tmp%90#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[10]: 'l-store-copy tmp%91#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[12]: 'v-load tmp%91#0' with 'l-load tmp%91#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[17]: 'l-store-copy reinterpret_Encoded(uint64)%6#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[19]: 'v-load reinterpret_Encoded(uint64)%6#0' with 'l-load reinterpret_Encoded(uint64)%6#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[24]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[26]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_test_convert_to_array_and_back_route@19.ops[15]: 'l-store-copy arr#0 0'
debug: Replaced main_test_convert_to_array_and_back_route@19.ops[23]: 'v-load arr#0' with 'l-load arr#0'
debug: Inserted main_for_header@58.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@58.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@59.ops[3]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_for_body@59.ops[5]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_for_body@59.ops[11]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_for_body@59.ops[13]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_for_body@59.ops[25]: 'l-store-copy aggregate%encoded_bool%11#0 0'
debug: Replaced main_for_body@59.ops[27]: 'v-load aggregate%encoded_bool%11#0' with 'l-load aggregate%encoded_bool%11#0'
debug: Inserted main_for_body@59.ops[39]: 'l-store-copy concat%1#0 0'
debug: Replaced main_for_body@59.ops[41]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_for_body@59.ops[31]: 'l-store-copy aggregate%set_bit%28#0 0'
debug: Replaced main_for_body@59.ops[34]: 'v-load aggregate%set_bit%28#0' with 'l-load aggregate%set_bit%28#0'
debug: Inserted main_for_body@59.ops[36]: 'l-store-copy aggregate%head%62#0 0'
debug: Replaced main_for_body@59.ops[39]: 'v-load aggregate%head%62#0' with 'l-load aggregate%head%62#0'
debug: Inserted main_for_body@59.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@59.ops[9]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@59.ops[10]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@59.ops[20]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_for_body@59.ops[22]: 'l-store-copy aggregate%val_as_bytes%29#0 0'
debug: Replaced main_for_body@59.ops[36]: 'v-load aggregate%val_as_bytes%29#0' with 'l-load aggregate%val_as_bytes%29#0'
debug: Inserted main_for_body@59.ops[17]: 'l-store-copy tmp%3#3 1'
debug: Replaced main_for_body@59.ops[33]: 'v-load tmp%3#3' with 'l-load tmp%3#3'
debug: Inserted main_for_body@59.ops[8]: 'l-store-copy tmp%1#5 1'
debug: Replaced main_for_body@59.ops[28]: 'v-load tmp%1#5' with 'l-load tmp%1#5'
debug: Inserted main_for_body@59.ops[21]: 'l-store-copy slot_contents%1#0 3'
debug: Replaced main_for_body@59.ops[44]: 'v-load slot_contents%1#0' with 'l-load slot_contents%1#0'
debug: Inserted main_for_body@59.ops[24]: 'l-store-copy i#0 3'
debug: Replaced main_for_body@59.ops[52]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@60.ops[1]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced main_after_for@60.ops[3]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted main_after_for@60.ops[5]: 'l-store-copy aggregate%bytes_len%0#0 0'
debug: Replaced main_after_for@60.ops[7]: 'v-load aggregate%bytes_len%0#0' with 'l-load aggregate%bytes_len%0#0'
debug: Inserted main_after_for@60.ops[10]: 'l-store-copy aggregate%array_len%0#0 0'
debug: Replaced main_after_for@60.ops[12]: 'v-load aggregate%array_len%0#0' with 'l-load aggregate%array_len%0#0'
debug: Inserted main_after_for@60.ops[14]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_after_for@60.ops[16]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_after_for@60.ops[18]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_after_for@60.ops[20]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_after_for@60.ops[27]: 'l-store-copy tmp%95#0 0'
debug: Replaced main_after_for@60.ops[29]: 'v-load tmp%95#0' with 'l-load tmp%95#0'
debug: Inserted main_after_for@60.ops[32]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@60.ops[34]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@60.ops[23]: 'l-store-copy converted_array%0#0 0'
debug: Replaced main_after_for@60.ops[26]: 'v-load converted_array%0#0' with 'l-load converted_array%0#0'
debug: Inserted main_after_for@60.ops[4]: 'l-store-copy slot_contents%2#0 0'
debug: Replaced main_after_for@60.ops[22]: 'v-load slot_contents%2#0' with 'l-load slot_contents%2#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[1]: 'l-store-copy tmp%96#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[3]: 'v-load tmp%96#0' with 'l-load tmp%96#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[5]: 'l-store-copy tmp%97#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[7]: 'v-load tmp%97#0' with 'l-load tmp%97#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[10]: 'l-store-copy tmp%98#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[12]: 'v-load tmp%98#0' with 'l-load tmp%98#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[19]: 'l-store-copy concat%0#1 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[21]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[23]: 'l-store-copy extract_to_end%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[25]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[27]: 'l-store-copy len%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[29]: 'v-load len%0#0' with 'l-load len%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[32]: 'l-store-copy div_floor%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[34]: 'v-load div_floor%0#0' with 'l-load div_floor%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[36]: 'l-store-copy as_bytes%0#1 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[38]: 'v-load as_bytes%0#1' with 'l-load as_bytes%0#1'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[48]: 'l-store-copy tmp%101#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[50]: 'v-load tmp%101#0' with 'l-load tmp%101#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[53]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[55]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[15]: 'l-store-copy arg#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[18]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[41]: 'l-store-copy as_u16_bytes%0#1 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[44]: 'v-load as_u16_bytes%0#1' with 'l-load as_u16_bytes%0#1'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[46]: 'l-store-copy result#0 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[49]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_concat_with_arc4_tuple_route@20.ops[23]: 'l-store-copy concat%0#1 0'
debug: Replaced main_test_concat_with_arc4_tuple_route@20.ops[44]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[1]: 'l-store-copy tmp%102#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[3]: 'v-load tmp%102#0' with 'l-load tmp%102#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[5]: 'l-store-copy tmp%103#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[7]: 'v-load tmp%103#0' with 'l-load tmp%103#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[10]: 'l-store-copy tmp%104#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[12]: 'v-load tmp%104#0' with 'l-load tmp%104#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[15]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[17]: 'v-load reinterpret_Encoded(uint64,uint64)%1#0' with 'l-load reinterpret_Encoded(uint64,uint64)%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[30]: 'l-store-copy concat%0#1 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[32]: 'v-load concat%0#1' with 'l-load concat%0#1'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[39]: 'l-store-copy tmp%109#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[41]: 'v-load tmp%109#0' with 'l-load tmp%109#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[44]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[46]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[22]: 'l-store-copy arg.1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[25]: 'v-load arg.1#0' with 'l-load arg.1#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[27]: 'l-store-copy aggregate%head%69#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[30]: 'v-load aggregate%head%69#0' with 'l-load aggregate%head%69#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[37]: 'l-store-copy result#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[40]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[18]: 'l-store-copy reinterpret_Encoded(uint64,uint64)%1#0 0'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[21]: 'v-load reinterpret_Encoded(uint64,uint64)%1#0' with 'l-load reinterpret_Encoded(uint64,uint64)%1#0'
debug: Inserted main_test_concat_with_native_tuple_route@21.ops[20]: 'l-store-copy arg.0#0 1'
debug: Replaced main_test_concat_with_native_tuple_route@21.ops[26]: 'v-load arg.0#0' with 'l-load arg.0#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[1]: 'l-store-copy tmp%110#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[3]: 'v-load tmp%110#0' with 'l-load tmp%110#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[5]: 'l-store-copy tmp%111#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[7]: 'v-load tmp%111#0' with 'l-load tmp%111#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[10]: 'l-store-copy tmp%112#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[12]: 'v-load tmp%112#0' with 'l-load tmp%112#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[15]: 'l-store-copy arg#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[17]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[33]: 'l-store-copy tmp%115#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[35]: 'v-load tmp%115#0' with 'l-load tmp%115#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[38]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[40]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[24]: 'l-store-copy data%0#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[27]: 'v-load data%0#0' with 'l-load data%0#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[30]: 'l-store-copy result#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[33]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[18]: 'l-store-copy arg#0 0'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[21]: 'v-load arg#0' with 'l-load arg#0'
debug: Inserted main_test_dynamic_concat_with_arc4_tuple_route@22.ops[20]: 'l-store-copy total_length%0#0 1'
debug: Replaced main_test_dynamic_concat_with_arc4_tuple_route@22.ops[24]: 'v-load total_length%0#0' with 'l-load total_length%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[1]: 'l-store-copy tmp%116#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[3]: 'v-load tmp%116#0' with 'l-load tmp%116#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[5]: 'l-store-copy tmp%117#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[7]: 'v-load tmp%117#0' with 'l-load tmp%117#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[10]: 'l-store-copy tmp%118#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[12]: 'v-load tmp%118#0' with 'l-load tmp%118#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[15]: 'l-store-copy reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[17]: 'v-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0' with 'l-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[50]: 'l-store-copy tmp%123#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[52]: 'v-load tmp%123#0' with 'l-load tmp%123#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[55]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[57]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[37]: 'l-store-copy arg.1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[40]: 'v-load arg.1#0' with 'l-load arg.1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[42]: 'l-store-copy concat%1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[45]: 'v-load concat%1#0' with 'l-load concat%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[48]: 'l-store-copy result#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[51]: 'v-load result#0' with 'l-load result#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[24]: 'l-store-copy aggregate%extract_uint16%8#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[28]: 'v-load aggregate%extract_uint16%8#0' with 'l-load aggregate%extract_uint16%8#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[32]: 'l-store-copy reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[35]: 'v-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0' with 'l-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[34]: 'l-store-copy aggregate%len%7#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[38]: 'v-load aggregate%len%7#0' with 'l-load aggregate%len%7#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[18]: 'l-store-copy reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[22]: 'v-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0' with 'l-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[23]: 'l-store-copy reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 0'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[28]: 'v-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0' with 'l-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[29]: 'l-store-copy reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[34]: 'v-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0' with 'l-load reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[21]: 'l-store-copy aggregate%extract_uint16%7#0 1'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[31]: 'v-load aggregate%extract_uint16%7#0' with 'l-load aggregate%extract_uint16%7#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[33]: 'l-store-copy aggregate%extract_uint16%8#0 3'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[42]: 'v-load aggregate%extract_uint16%8#0' with 'l-load aggregate%extract_uint16%8#0'
debug: Inserted main_test_dynamic_concat_with_native_tuple_route@23.ops[35]: 'l-store-copy arg.0#0 2'
debug: Replaced main_test_dynamic_concat_with_native_tuple_route@23.ops[48]: 'v-load arg.0#0' with 'l-load arg.0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[1]: 'l-store-copy tmp%124#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[3]: 'v-load tmp%124#0' with 'l-load tmp%124#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[5]: 'l-store-copy tmp%125#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[7]: 'v-load tmp%125#0' with 'l-load tmp%125#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[10]: 'l-store-copy tmp%126#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[12]: 'v-load tmp%126#0' with 'l-load tmp%126#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[41]: 'l-store-copy tmp%129#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[43]: 'v-load tmp%129#0' with 'l-load tmp%129#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[46]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[48]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[37]: 'l-store-copy as_Encoded(len+(uint64,(len+utf8[]))[])%0#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[40]: 'v-load as_Encoded(len+(uint64,(len+utf8[]))[])%0#0' with 'l-load as_Encoded(len+(uint64,(len+utf8[]))[])%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[15]: 'l-store-copy imm1#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[19]: 'v-load imm1#0' with 'l-load imm1#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[27]: 'l-store-copy imm2#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[30]: 'v-load imm2#0' with 'l-load imm2#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[33]: 'l-store-copy aggregate%array_length%66#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[37]: 'v-load aggregate%array_length%66#0' with 'l-load aggregate%array_length%66#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[20]: 'l-store-copy imm1#0 0'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[24]: 'v-load imm1#0' with 'l-load imm1#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[18]: 'l-store-copy imm2#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[28]: 'v-load imm2#0' with 'l-load imm2#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[31]: 'l-store-copy extract_to_end%1#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[41]: 'v-load extract_to_end%1#0' with 'l-load extract_to_end%1#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[27]: 'l-store-copy extract_to_end%0#0 1'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[40]: 'v-load extract_to_end%0#0' with 'l-load extract_to_end%0#0'
debug: Inserted main_test_concat_immutable_dynamic_route@24.ops[24]: 'l-store-copy extract_uint16%0#0 2'
debug: Replaced main_test_concat_immutable_dynamic_route@24.ops[40]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[1]: 'l-store-copy tmp%130#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[3]: 'v-load tmp%130#0' with 'l-load tmp%130#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[5]: 'l-store-copy tmp%131#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[7]: 'v-load tmp%131#0' with 'l-load tmp%131#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[10]: 'l-store-copy tmp%132#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[12]: 'v-load tmp%132#0' with 'l-load tmp%132#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[15]: 'l-store-copy imm#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[17]: 'v-load imm#0' with 'l-load imm#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[20]: 'l-store-copy aggregate%array_length%67#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[22]: 'v-load aggregate%array_length%67#0' with 'l-load aggregate%array_length%67#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[34]: 'l-store-copy aggregate%write_offset%1#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[36]: 'v-load aggregate%write_offset%1#0' with 'l-load aggregate%write_offset%1#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[48]: 'l-store-copy tmp%135#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[50]: 'v-load tmp%135#0' with 'l-load tmp%135#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[53]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[55]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[23]: 'l-store-copy aggregate%array_length%67#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[25]: 'v-load aggregate%array_length%67#0' with 'l-load aggregate%array_length%67#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[40]: 'l-store-copy aggregate%write_offset_with_length_header%1#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[43]: 'v-load aggregate%write_offset_with_length_header%1#0' with 'l-load aggregate%write_offset_with_length_header%1#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[46]: 'l-store-copy imm#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[49]: 'v-load imm#0' with 'l-load imm#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[28]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[33]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[18]: 'l-store-copy imm#0 0'
debug: Replaced main_test_immutable_arc4_route@25.ops[31]: 'v-load imm#0' with 'l-load imm#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[32]: 'l-store-copy imm#0 1'
debug: Replaced main_test_immutable_arc4_route@25.ops[45]: 'v-load imm#0' with 'l-load imm#0'
debug: Inserted main_test_immutable_arc4_route@25.ops[34]: 'l-store-copy aggregate%encoded_element%23#0 2'
debug: Replaced main_test_immutable_arc4_route@25.ops[48]: 'v-load aggregate%encoded_element%23#0' with 'l-load aggregate%encoded_element%23#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[1]: 'l-store-copy tmp%136#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[3]: 'v-load tmp%136#0' with 'l-load tmp%136#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[5]: 'l-store-copy tmp%137#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[7]: 'v-load tmp%137#0' with 'l-load tmp%137#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[10]: 'l-store-copy tmp%138#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[12]: 'v-load tmp%138#0' with 'l-load tmp%138#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[18]: 'l-store-copy tmp%1#1 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[20]: 'v-load tmp%1#1' with 'l-load tmp%1#1'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[25]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[27]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[40]: 'l-store-copy struct12#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[42]: 'v-load struct12#0' with 'l-load struct12#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[43]: 'l-store-copy struct12#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[44]: 'v-load struct12#0' with 'l-load struct12#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[46]: 'l-store-copy aggregate%head%77#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[48]: 'v-load aggregate%head%77#0' with 'l-load aggregate%head%77#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[55]: 'l-store-copy tmp%6#1 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[57]: 'v-load tmp%6#1' with 'l-load tmp%6#1'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[36]: 'l-store-copy aggregate%val_as_bytes%31#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[39]: 'v-load aggregate%val_as_bytes%31#0' with 'l-load aggregate%val_as_bytes%31#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[52]: 'l-store-copy arr2#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[55]: 'v-load arr2#0' with 'l-load arr2#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[30]: 'l-store-copy tmp%4#1 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[35]: 'v-load tmp%4#1' with 'l-load tmp%4#1'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[34]: 'l-store-copy aggregate%val_as_bytes%30#0 1'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[40]: 'v-load aggregate%val_as_bytes%30#0' with 'l-load aggregate%val_as_bytes%30#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[48]: 'l-store-copy struct12#0 1'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[53]: 'v-load struct12#0' with 'l-load struct12#0'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[23]: 'l-store-copy tmp%2#1 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[33]: 'v-load tmp%2#1' with 'l-load tmp%2#1'
debug: Inserted main_test_imm_fixed_arr_route@26.ops[16]: 'l-store-copy arr1#0 0'
debug: Replaced main_test_imm_fixed_arr_route@26.ops[59]: 'v-load arr1#0' with 'l-load arr1#0'
debug: Inserted main_for_header@38.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced main_for_header@38.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted main_for_body@39.ops[3]: 'l-store-copy aggregate%write_offset%2#0 0'
debug: Replaced main_for_body@39.ops[6]: 'v-load aggregate%write_offset%2#0' with 'l-load aggregate%write_offset%2#0'
debug: Inserted main_for_body@39.ops[1]: 'l-store-copy i#0 0'
debug: Replaced main_for_body@39.ops[11]: 'v-load i#0' with 'l-load i#0'
debug: Inserted main_after_for@40.ops[3]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_after_for@40.ops[5]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_for_header@41.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced main_for_header@41.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted main_for_body@42.ops[8]: 'l-store-copy struct_it#0 0'
debug: Replaced main_for_body@42.ops[10]: 'v-load struct_it#0' with 'l-load struct_it#0'
debug: Inserted main_for_body@42.ops[13]: 'l-store-copy tmp%9#1 0'
debug: Replaced main_for_body@42.ops[15]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted main_for_body@42.ops[3]: 'l-store-copy aggregate%bytes_offset%26#0 0'
debug: Replaced main_for_body@42.ops[6]: 'v-load aggregate%bytes_offset%26#0' with 'l-load aggregate%bytes_offset%26#0'
debug: Inserted main_for_body@42.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced main_for_body@42.ops[19]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted main_after_for@43.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main_after_for@43.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main_after_for@43.ops[10]: 'l-store-copy tmp%14#1 0'
debug: Replaced main_after_for@43.ops[12]: 'v-load tmp%14#1' with 'l-load tmp%14#1'
debug: Inserted main_after_for@43.ops[17]: 'l-store-copy mut_arr#1 0'
debug: Replaced main_after_for@43.ops[19]: 'v-load mut_arr#1' with 'l-load mut_arr#1'
debug: Inserted main_after_for@43.ops[21]: 'l-store-copy tmp%17#1 0'
debug: Replaced main_after_for@43.ops[23]: 'v-load tmp%17#1' with 'l-load tmp%17#1'
debug: Inserted main_after_for@43.ops[26]: 'l-store-copy tmp%18#1 0'
debug: Replaced main_after_for@43.ops[28]: 'v-load tmp%18#1' with 'l-load tmp%18#1'
debug: Inserted main_after_for@43.ops[40]: 'l-store-copy tmp%141#0 0'
debug: Replaced main_after_for@43.ops[42]: 'v-load tmp%141#0' with 'l-load tmp%141#0'
debug: Inserted main_after_for@43.ops[45]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_for@43.ops[47]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_for@43.ops[2]: 'l-store-copy arr1#0 1'
debug: Replaced main_after_for@43.ops[4]: 'v-load arr1#0' with 'l-load arr1#0'
debug: Inserted main_after_for@43.ops[34]: 'l-store-copy maybe_exists%1#0 1'
debug: Replaced main_after_for@43.ops[37]: 'v-load maybe_exists%1#0' with 'l-load maybe_exists%1#0'
debug: Inserted main_after_for@43.ops[36]: 'l-store-copy maybe_value%1#0 1'
debug: Replaced main_after_for@43.ops[41]: 'v-load maybe_value%1#0' with 'l-load maybe_value%1#0'
debug: Inserted main_after_for@43.ops[5]: 'l-store-copy arr1#0 0'
debug: Replaced main_after_for@43.ops[16]: 'v-load arr1#0' with 'l-load arr1#0'
debug: Inserted main_bare_routing@29.ops[1]: 'l-store-copy tmp%142#0 0'
debug: Replaced main_bare_routing@29.ops[3]: 'v-load tmp%142#0' with 'l-load tmp%142#0'
debug: Inserted main___algopy_default_create@30.ops[1]: 'l-store-copy tmp%143#0 0'
debug: Replaced main___algopy_default_create@30.ops[3]: 'v-load tmp%143#0' with 'l-load tmp%143#0'
debug: Inserted main___algopy_default_create@30.ops[5]: 'l-store-copy tmp%144#0 0'
debug: Replaced main___algopy_default_create@30.ops[7]: 'v-load tmp%144#0' with 'l-load tmp%144#0'
debug: Inserted main___algopy_default_create@30.ops[10]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@30.ops[12]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@33.ops[1]: 'l-store-copy test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@33.ops[3]: 'v-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0' with 'l-load test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[20]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[22]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[16]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[19]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[30]: 'l-store-copy item_location#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[33]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[41]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[44]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[33]: 'l-store-copy result#0 1'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[38]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[35]: 'l-store-copy item_location#0 2'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[41]: 'v-load item_location#0' with 'l-load item_location#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[38]: 'l-store-copy popped#0 2'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[46]: 'v-load popped#0' with 'l-load popped#0'
debug: Inserted dynamic_array_pop_fixed_size_block@0.ops[24]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_pop_fixed_size_block@0.ops[33]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[8]: 'l-store-copy length_minus_1#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[10]: 'v-load length_minus_1#0' with 'l-load length_minus_1#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[16]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[18]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[23]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[26]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[25]: 'l-store-copy tmp%5#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[29]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[19]: 'l-store-copy head_and_tail#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[23]: 'v-load head_and_tail#0' with 'l-load head_and_tail#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[13]: 'l-store-copy popped_header_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[21]: 'v-load popped_header_offset#0' with 'l-load popped_header_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_block@0.ops[23]: 'l-store-copy popped_offset#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_block@0.ops[31]: 'v-load popped_offset#0' with 'l-load popped_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[5]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[8]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[10]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[12]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[14]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[19]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_pop_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_pop_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[2]: 'l-store-copy tmp%13#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[4]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[6]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[8]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[15]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[18]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[21]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[26]: 'l-store-copy updated#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[29]: 'v-load updated#0' with 'l-load updated#0'
debug: Inserted dynamic_array_pop_dynamic_element_after_for@4.ops[11]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_pop_dynamic_element_after_for@4.ops[24]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[8]: 'l-store-copy new_array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[10]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[24]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[26]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[33]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[35]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[16]: 'l-store-copy new_array_length_b#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[19]: 'v-load new_array_length_b#0' with 'l-load new_array_length_b#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[39]: 'l-store-copy required_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load required_bytes#0' with 'l-load required_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[44]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[48]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[30]: 'l-store-copy current_bytes#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[42]: 'v-load current_bytes#0' with 'l-load current_bytes#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_bits_block@0.ops[23]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[12]: 'l-store-copy new_array_length#0 1'
debug: Replaced dynamic_array_concat_bits_block@0.ops[34]: 'v-load new_array_length#0' with 'l-load new_array_length#0'
debug: Inserted dynamic_array_concat_bits_block@0.ops[23]: 'l-store-copy result#0 2'
debug: Replaced dynamic_array_concat_bits_block@0.ops[50]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[3]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[5]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[11]: 'l-store-copy result#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[13]: 'v-load result#0' with 'l-load result#0'
debug: Inserted dynamic_array_concat_bits_if_body@1.ops[7]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_bits_if_body@1.ops[10]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_bits_after_if_else@2.ops[7]: 'l-store-copy write_offset#0 0'
debug: Replaced dynamic_array_concat_bits_after_if_else@2.ops[9]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_top@3.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_bits_while_top@3.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[3]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[7]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[7]: 'l-store-copy write_offset#0 2'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[11]: 'v-load write_offset#0' with 'l-load write_offset#0'
debug: Inserted dynamic_array_concat_bits_while_body@4.ops[2]: 'l-store-copy read_offset#0 1'
debug: Replaced dynamic_array_concat_bits_while_body@4.ops[16]: 'v-load read_offset#0' with 'l-load read_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[3]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[5]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[12]: 'l-store-copy tmp%2#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[14]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[20]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[22]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[33]: 'l-store-copy tmp%7#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[35]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[53]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[55]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[37]: 'l-store-copy tmp%8#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[40]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[50]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[53]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[45]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[49]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[65]: 'l-store-copy tail_offset#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[69]: 'v-load tail_offset#0' with 'l-load tail_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[6]: 'l-store-copy array_length#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[10]: 'v-load array_length#0' with 'l-load array_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[30]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[41]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[9]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[20]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[19]: 'l-store-copy header_end#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[30]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[46]: 'l-store-copy tmp%9#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[58]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[31]: 'l-store-copy header_end#0 2'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[54]: 'v-load header_end#0' with 'l-load header_end#0'
debug: Inserted dynamic_array_concat_byte_length_head_block@0.ops[22]: 'l-store-copy new_length#0 1'
debug: Replaced dynamic_array_concat_byte_length_head_block@0.ops[69]: 'v-load new_length#0' with 'l-load new_length#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_header@2.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_header@2.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[2]: 'l-store-copy tmp%6#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[4]: 'v-load tmp%6#0' with 'l-load tmp%6#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[11]: 'l-store-copy array_head_and_tail#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[13]: 'v-load array_head_and_tail#0' with 'l-load array_head_and_tail#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'l-store-copy tmp%9#1 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[18]: 'v-load tmp%9#1' with 'l-load tmp%9#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[21]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[24]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[6]: 'l-store-copy tail_offset_bytes#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[10]: 'v-load tail_offset_bytes#0' with 'l-load tail_offset_bytes#0'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'l-store-copy tail_offset#1 1'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[25]: 'v-load tail_offset#1' with 'l-load tail_offset#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[1]: 'l-store-copy tail_offset#1 0'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[16]: 'v-load tail_offset#1' with 'l-load tail_offset#1'
debug: Inserted dynamic_array_concat_byte_length_head_for_body@3.ops[11]: 'l-store-copy head_offset#0 3'
debug: Replaced dynamic_array_concat_byte_length_head_for_body@3.ops[31]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_byte_length_head_after_for@4.ops[3]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_byte_length_head_after_for@4.ops[5]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[7]: 'l-store-copy tmp%3#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[9]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[11]: 'l-store-copy tmp%4#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[13]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[16]: 'l-store-copy tmp%5#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[19]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@2.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@2.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_header@5.ops[3]: 'l-store-copy continue_looping%1#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_header@5.ops[5]: 'v-load continue_looping%1#0' with 'l-load continue_looping%1#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[7]: 'l-store-copy tmp%10#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[9]: 'v-load tmp%10#0' with 'l-load tmp%10#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[11]: 'l-store-copy tmp%11#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[13]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[3]: 'l-store-copy item_offset#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[6]: 'v-load item_offset#0' with 'l-load item_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[16]: 'l-store-copy tmp%12#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[19]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted dynamic_array_concat_dynamic_element_for_body@6.ops[2]: 'l-store-copy head_offset#0 1'
debug: Replaced dynamic_array_concat_dynamic_element_for_body@6.ops[23]: 'v-load head_offset#0' with 'l-load head_offset#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[3]: 'l-store-copy tmp%14#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[5]: 'v-load tmp%14#0' with 'l-load tmp%14#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[7]: 'l-store-copy tmp%15#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[9]: 'v-load tmp%15#0' with 'l-load tmp%15#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[11]: 'l-store-copy tmp%16#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[13]: 'v-load tmp%16#0' with 'l-load tmp%16#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'l-store-copy tmp%25#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%25#0' with 'l-load tmp%25#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[21]: 'l-store-copy tmp%20#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%20#0' with 'l-load tmp%20#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[34]: 'l-store-copy tmp%24#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[37]: 'v-load tmp%24#0' with 'l-load tmp%24#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[29]: 'l-store-copy tmp%23#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[33]: 'v-load tmp%23#0' with 'l-load tmp%23#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[16]: 'l-store-copy tmp%17#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[24]: 'v-load tmp%17#0' with 'l-load tmp%17#0'
debug: Inserted dynamic_array_concat_dynamic_element_after_for@8.ops[27]: 'l-store-copy tmp%21#0 0'
debug: Replaced dynamic_array_concat_dynamic_element_after_for@8.ops[39]: 'v-load tmp%21#0' with 'l-load tmp%21#0'
debug: Inserted sum_imm_fixed_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced sum_imm_fixed_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[8]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[10]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[3]: 'l-store-copy aggregate%bytes_offset%0#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[6]: 'v-load aggregate%bytes_offset%0#0' with 'l-load aggregate%bytes_offset%0#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[14]: 'l-store-copy values%0#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[17]: 'v-load values%0#0' with 'l-load values%0#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[23]: 'l-store-copy values%1#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[26]: 'v-load values%1#0' with 'l-load values%1#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[19]: 'l-store-copy total#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[26]: 'v-load total#0' with 'l-load total#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[12]: 'l-store-copy aggregate%encoded_element%0#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[22]: 'v-load aggregate%encoded_element%0#0' with 'l-load aggregate%encoded_element%0#0'
debug: Inserted sum_imm_fixed_for_body@2.ops[1]: 'l-store-copy item_index_internal%0#0 0'
debug: Replaced sum_imm_fixed_for_body@2.ops[32]: 'v-load item_index_internal%0#0' with 'l-load item_index_internal%0#0'
debug: Inserted times_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced times_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_header@1.ops[3]: 'l-store-copy continue_looping%0#0 0'
debug: Replaced add_x_for_header@1.ops[5]: 'v-load continue_looping%0#0' with 'l-load continue_looping%0#0'
debug: Inserted add_x_for_body@2.ops[10]: 'l-store-copy extract_uint16%0#0 0'
debug: Replaced add_x_for_body@2.ops[12]: 'v-load extract_uint16%0#0' with 'l-load extract_uint16%0#0'
debug: Inserted add_x_for_body@2.ops[15]: 'l-store-copy add%0#0 0'
debug: Replaced add_x_for_body@2.ops[17]: 'v-load add%0#0' with 'l-load add%0#0'
debug: Inserted add_x_for_body@2.ops[19]: 'l-store-copy as_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[21]: 'v-load as_bytes%0#0' with 'l-load as_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[2]: 'l-store-copy aggregate%val_as_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[5]: 'v-load aggregate%val_as_bytes%0#0' with 'l-load aggregate%val_as_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[24]: 'l-store-copy as_u16_bytes%0#0 0'
debug: Replaced add_x_for_body@2.ops[27]: 'v-load as_u16_bytes%0#0' with 'l-load as_u16_bytes%0#0'
debug: Inserted add_x_for_body@2.ops[7]: 'l-store-copy concat%0#0 0'
debug: Replaced add_x_for_body@2.ops[27]: 'v-load concat%0#0' with 'l-load concat%0#0'
debug: Inserted add_x_for_body@2.ops[1]: 'l-store-copy i#0 0'
debug: Replaced add_x_for_body@2.ops[32]: 'v-load i#0' with 'l-load i#0'
debug: Found 61 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_log_route@10 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_implicit_conversion_emit_route@11 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_concat_with_arc4_tuple_route@20 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_concat_with_native_tuple_route@21 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_dynamic_concat_with_arc4_tuple_route@22 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_dynamic_concat_with_native_tuple_route@23 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_concat_immutable_dynamic_route@24 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_test_immutable_arc4_route@25 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main___algopy_default_create@30 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_if_else@33 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@43 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@60 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@65 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@70 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@75 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@80 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@100 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@105 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@119 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@131 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@139 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@144 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@149 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_if_else@164 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@169 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: shared x-stack for main_after_for@174 -> main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34: tmp%0#0
debug: Found 2 edge set/s for _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Found 3 edge set/s for _puya_lib.arc4.dynamic_array_concat_bits
debug: Found 2 edge set/s for _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Found 4 edge set/s for _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Found 2 edge set/s for test_cases.array.immutable.sum_imm_fixed
debug: Found 2 edge set/s for test_cases.array.immutable.times
debug: Found 2 edge set/s for test_cases.array.immutable.add_x
debug: algopy.arc4.ARC4Contract.approval_program f-stack entry: ['aggregate%bzero%0#0', 'arr#0', 'arr1#0', 'arr2#0', 'arr3#0', 'arr4#0', 'arr7#0', 'arr8#0', 'arr9#0', 'extra_arr#0', 'inner_arr#0', 'slot%0', 'struct12#0', 'totals#0', '_i#0', 'aggregate%array_length%38#0', 'aggregate%array_length%45#0', 'aggregate%array_length%51#0', 'aggregate%array_length%52#0', 'aggregate%array_length%61#0', 'aggregate%array_length%62#0', 'aggregate%array_length%63#0', 'aggregate%array_length%64#0', 'append#0', 'arr_to_add#0', 'array_length#0', 'i#0', 'idx#0', 'item_index_internal%0#0', 'item_index_internal%0#9', 'item_index_internal%1#0', 'item_index_internal%2#0', 'j#0', 'length#0', 'sum1#0', 'sum2#0', 'sum2#10', 'sum3#0', 'sum3#15', 'sum4#0', 'total#0', 'tup.baz#0']
debug: algopy.arc4.ARC4Contract.approval_program f-stack on first store: []
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_pop_dynamic_element f-stack on first store: ['length_minus_1#0', 'popped_header_offset#0', 'head_and_tail#0', 'popped_offset#0', 'popped#0', 'new_head#0', 'head_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack entry: ['read_offset#0', 'write_end#0', 'write_offset#0']
debug: _puya_lib.arc4.dynamic_array_concat_bits f-stack on first store: ['array_length#0', 'result#0', 'current_bytes#0', 'required_bytes#0', 'result#7']
debug: _puya_lib.arc4.dynamic_array_concat_byte_length_head f-stack entry: []
debug: _puya_lib.arc4.dynamic_array_concat_byte_length_head f-stack on first store: ['tmp%5#0', 'array_head_and_tail#0', 'tail_offset#0', 'head_offset#0', 'tail_offset#1']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack entry: ['item_offset_adjustment#2']
debug: _puya_lib.arc4.dynamic_array_concat_dynamic_element f-stack on first store: ['new_head#0', 'item_offset_adjustment#0', 'tmp%1#0', 'head_offset#0']
debug: test_cases.array.immutable.sum_imm_fixed f-stack entry: []
debug: test_cases.array.immutable.sum_imm_fixed f-stack on first store: ['total#0', 'item_index_internal%0#0']
debug: test_cases.array.immutable.times f-stack entry: []
debug: test_cases.array.immutable.times f-stack on first store: ['result#0', '_i#0']
debug: test_cases.array.immutable.add_x f-stack entry: []
debug: test_cases.array.immutable.add_x f-stack on first store: ['i#0']
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: Replaced 'Uncover(source_location=array/immutable.py:442:15-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('extract_uint16%0#0',)), StackDefine(local_ids=('extract_uint16%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:442:15-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('extract_to_end%0#0',)), StackDefine(local_ids=('extract_to_end%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:442:15-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('aggregate%array_length%66#0',)), StackDefine(local_ids=('aggregate%array_length%66#0',))), n=2, op_code='uncover', consumes=3, produces=3); Uncover(source_location=array/immutable.py:442:15-26, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('extract_to_end%1#0',)), StackDefine(local_ids=('extract_to_end%1#0',))), n=3, op_code='uncover', consumes=4, produces=4)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2)', reducing by 3 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:93, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0',)), StackDefine(local_ids=('reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:93, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%extract_uint16%8#0',)), StackDefine(local_ids=('aggregate%extract_uint16%8#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:93, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('aggregate%len%7#0',)), StackDefine(local_ids=('aggregate%len%7#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:361, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%array_head_and_tail%8#0',)), StackDefine(local_ids=('aggregate%array_head_and_tail%8#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:361, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%item_offset%8#0',)), StackDefine(local_ids=('aggregate%item_offset%8#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:361, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('aggregate%end_offset%6#0',)), StackDefine(local_ids=('aggregate%end_offset%6#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:241:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%array_head_and_tail%3#0',)), StackDefine(local_ids=('aggregate%array_head_and_tail%3#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:241:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%item_offset%3#0',)), StackDefine(local_ids=('aggregate%item_offset%3#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:241:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('aggregate%end_offset%3#0',)), StackDefine(local_ids=('aggregate%end_offset%3#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: Replaced 'Uncover(source_location=array/immutable.py:222:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%array_head_and_tail%0#0',)), StackDefine(local_ids=('aggregate%array_head_and_tail%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:222:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=3), StackExtend(local_ids=('aggregate%item_offset%0#0',)), StackDefine(local_ids=('aggregate%item_offset%0#0',))), n=3, op_code='uncover', consumes=4, produces=4); Uncover(source_location=array/immutable.py:222:19-25, comment=None, error_message=None, stack_manipulations=(StackPop(depth=2), StackExtend(local_ids=('aggregate%end_offset%0#0',)), StackDefine(local_ids=('aggregate%end_offset%0#0',))), n=2, op_code='uncover', consumes=3, produces=3)' with 'Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=1, op_code='cover', consumes=2, produces=2); Cover(source_location=None, comment=None, error_message=None, stack_manipulations=(), n=3, op_code='cover', consumes=4, produces=4)', reducing by 1 ops by search
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: optimizing TEAL subroutine ops _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
array/immutable.py:479 debug: optimizing TEAL subroutine ops test_cases.array.immutable.sum_imm_fixed(arr: bytes) -> uint64:
array/immutable.py:488 debug: optimizing TEAL subroutine ops test_cases.array.immutable.times(n: uint64) -> bytes:
array/immutable.py:496 debug: optimizing TEAL subroutine ops test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: replacing `b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@34 into main_after_if_else@33
debug: inlining single reference block main_for_body@39 into main_for_header@38
debug: inlining single reference block main_for_body@42 into main_for_header@41
debug: inlining single reference block main_for_body@59 into main_for_header@58
debug: inlining single reference block main_for_body@64 into main_for_header@63
debug: inlining single reference block main_for_body@69 into main_for_header@68
debug: inlining single reference block main_for_body@74 into main_for_header@73
debug: inlining single reference block main_for_body@79 into main_for_header@78
debug: inlining single reference block main_for_body@84 into main_for_header@83
debug: inlining single reference block main_for_body@87 into main_for_header@86
debug: inlining single reference block main_if_body@88 into main_for_header@86
debug: inlining single reference block main_for_body@92 into main_for_header@91
debug: inlining single reference block main_if_body@93 into main_for_header@91
debug: inlining single reference block main_if_body@95 into main_after_if_else@94
debug: inlining single reference block main_for_body@99 into main_for_header@98
debug: inlining single reference block main_for_body@104 into main_for_header@103
debug: inlining single reference block main_for_body@109 into main_for_header@108
debug: inlining single reference block main_for_body@111 into main_for_header@110
debug: inlining single reference block main_for_body@115 into main_for_header@114
debug: inlining single reference block main_for_body@117 into main_for_header@116
debug: inlining single reference block main_for_body@127 into main_for_header@126
debug: inlining single reference block main_for_body@130 into main_for_header@129
debug: inlining single reference block main_for_body@135 into main_for_header@134
debug: inlining single reference block main_for_body@138 into main_for_header@137
debug: inlining single reference block main_for_body@143 into main_for_header@142
debug: inlining single reference block main_for_body@148 into main_for_header@147
debug: inlining single reference block main_for_body@153 into main_for_header@152
debug: inlining single reference block main_if_body@155 into main_after_for@154
debug: inlining single reference block main_if_body@157 into main_after_if_else@156
debug: inlining single reference block main_if_body@159 into main_after_if_else@158
debug: inlining single reference block main_if_body@161 into main_after_if_else@160
debug: inlining single reference block main_if_body@163 into main_after_if_else@162
debug: inlining single reference block main_for_body@168 into main_for_header@167
debug: inlining single reference block main_for_body@173 into main_for_header@172
debug: inlining single reference block main___algopy_default_create@30 into main_bare_routing@29
debug: removing explicit jump to fall-through block main_after_if_else@33
debug: removing explicit jump to fall-through block main_for_header@38
debug: removing explicit jump to fall-through block main_for_header@41
debug: removing explicit jump to fall-through block main_for_header@58
debug: removing explicit jump to fall-through block main_for_header@63
debug: removing explicit jump to fall-through block main_for_header@68
debug: removing explicit jump to fall-through block main_for_header@73
debug: removing explicit jump to fall-through block main_for_header@78
debug: removing explicit jump to fall-through block main_for_header@83
debug: removing explicit jump to fall-through block main_for_header@86
debug: removing explicit jump to fall-through block main_after_if_else@89
debug: removing explicit jump to fall-through block main_for_header@91
debug: removing explicit jump to fall-through block main_after_if_else@94
debug: removing explicit jump to fall-through block main_after_if_else@96
debug: removing explicit jump to fall-through block main_for_header@98
debug: removing explicit jump to fall-through block main_for_header@103
debug: removing explicit jump to fall-through block main_for_header@108
debug: removing explicit jump to fall-through block main_for_header@110
debug: removing explicit jump to fall-through block main_for_header@114
debug: removing explicit jump to fall-through block main_for_header@116
debug: removing explicit jump to fall-through block main_for_header@126
debug: removing explicit jump to fall-through block main_for_header@129
debug: removing explicit jump to fall-through block main_for_header@134
debug: removing explicit jump to fall-through block main_for_header@137
debug: removing explicit jump to fall-through block main_for_header@142
debug: removing explicit jump to fall-through block main_for_header@147
debug: removing explicit jump to fall-through block main_for_header@152
debug: removing explicit jump to fall-through block main_after_if_else@156
debug: removing explicit jump to fall-through block main_after_if_else@158
debug: removing explicit jump to fall-through block main_after_if_else@160
debug: removing explicit jump to fall-through block main_after_if_else@162
debug: removing explicit jump to fall-through block main_after_if_else@164
debug: removing explicit jump to fall-through block main_for_header@167
debug: removing explicit jump to fall-through block main_for_header@172
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
debug: inlining single reference block dynamic_array_pop_fixed_size_block@0 into dynamic_array_pop_fixed_size
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
debug: inlining single reference block dynamic_array_pop_dynamic_element_block@0 into dynamic_array_pop_dynamic_element
debug: inlining single reference block dynamic_array_pop_dynamic_element_for_body@2 into dynamic_array_pop_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_pop_dynamic_element_for_header@1
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_bits_block@0 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_if_body@1 into dynamic_array_concat_bits
debug: inlining single reference block dynamic_array_concat_bits_while_body@4 into dynamic_array_concat_bits_while_top@3
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_after_if_else@2
debug: removing explicit jump to fall-through block dynamic_array_concat_bits_while_top@3
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
debug: inlining single reference block dynamic_array_concat_byte_length_head_block@0 into dynamic_array_concat_byte_length_head
debug: inlining single reference block dynamic_array_concat_byte_length_head_for_body@3 into dynamic_array_concat_byte_length_head_for_header@2
debug: removing explicit jump to fall-through block dynamic_array_concat_byte_length_head_for_header@2
debug: optimizing TEAL subroutine blocks _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
debug: inlining single reference block dynamic_array_concat_dynamic_element_block@0 into dynamic_array_concat_dynamic_element
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@2 into dynamic_array_concat_dynamic_element_for_header@1
debug: inlining single reference block dynamic_array_concat_dynamic_element_for_body@6 into dynamic_array_concat_dynamic_element_for_header@5
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@1
debug: removing explicit jump to fall-through block dynamic_array_concat_dynamic_element_for_header@5
array/immutable.py:479 debug: optimizing TEAL subroutine blocks test_cases.array.immutable.sum_imm_fixed(arr: bytes) -> uint64:
debug: inlining single reference block sum_imm_fixed_block@0 into sum_imm_fixed
debug: inlining single reference block sum_imm_fixed_for_body@2 into sum_imm_fixed_for_header@1
debug: removing explicit jump to fall-through block sum_imm_fixed_for_header@1
array/immutable.py:488 debug: optimizing TEAL subroutine blocks test_cases.array.immutable.times(n: uint64) -> bytes:
debug: inlining single reference block times_block@0 into times
debug: inlining single reference block times_for_body@2 into times_for_header@1
debug: removing explicit jump to fall-through block times_for_header@1
array/immutable.py:496 debug: optimizing TEAL subroutine blocks test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
debug: inlining single reference block add_x_block@0 into add_x
debug: inlining single reference block add_x_for_body@2 into add_x_for_header@1
debug: removing explicit jump to fall-through block add_x_for_header@1
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing array/out_O2/AbiCallContract.approval.teal
info: Writing array/out_O2/AbiCallContract.clear.teal
info: Writing array/out_O2/AbiCallContract.approval.bin
info: Writing array/out_O2/AbiCallContract.clear.bin
info: Writing array/out_O2/AbiCallContract.approval.stats.txt
info: Writing array/out_O2/AbiCallContract.clear.stats.txt
info: Writing array/out_O2/AbiCallContract.approval.puya.map
info: Writing array/out_O2/AbiCallContract.clear.puya.map
info: Writing array/out_O2/Contract.approval.teal
info: Writing array/out_O2/Contract.clear.teal
info: Writing array/out_O2/Contract.approval.bin
info: Writing array/out_O2/Contract.clear.bin
info: Writing array/out_O2/Contract.approval.stats.txt
info: Writing array/out_O2/Contract.clear.stats.txt
info: Writing array/out_O2/Contract.approval.puya.map
info: Writing array/out_O2/Contract.clear.puya.map
info: Writing array/out_O2/StaticSizeContract.approval.teal
info: Writing array/out_O2/StaticSizeContract.clear.teal
info: Writing array/out_O2/StaticSizeContract.approval.bin
info: Writing array/out_O2/StaticSizeContract.clear.bin
info: Writing array/out_O2/StaticSizeContract.approval.stats.txt
info: Writing array/out_O2/StaticSizeContract.clear.stats.txt
info: Writing array/out_O2/StaticSizeContract.approval.puya.map
info: Writing array/out_O2/StaticSizeContract.clear.puya.map
info: Writing array/out_O2/ImmutableArrayContract.approval.teal
info: Writing array/out_O2/ImmutableArrayContract.clear.teal
info: Writing array/out_O2/ImmutableArrayContract.approval.bin
info: Writing array/out_O2/ImmutableArrayContract.clear.bin
info: Writing array/out_O2/ImmutableArrayContract.approval.stats.txt
info: Writing array/out_O2/ImmutableArrayContract.clear.stats.txt
info: Writing array/out_O2/ImmutableArrayContract.approval.puya.map
info: Writing array/out_O2/ImmutableArrayContract.clear.puya.map