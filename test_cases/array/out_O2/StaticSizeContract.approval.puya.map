{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": "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",
  "op_pc_offset": 0,
  "pc_events": {
    "50": {
      "error": "OnCompletion must be NoOp"
    },
    "131": {
      "error": "max array length exceeded"
    },
    "160": {
      "error": "expected correct length"
    },
    "167": {
      "error": "expected 3 bytes"
    },
    "169": {
      "error": "index access is out of bounds"
    },
    "187": {
      "error": "expected correct value at 0"
    },
    "190": {
      "error": "index access is out of bounds"
    },
    "207": {
      "error": "expected correct value at 1"
    },
    "238": {
      "error": "max array length exceeded"
    },
    "255": {
      "error": "expected correct length"
    },
    "257": {
      "error": "index access is out of bounds"
    },
    "268": {
      "error": "expected correct value at 0"
    },
    "270": {
      "error": "index access is out of bounds"
    },
    "281": {
      "error": "expected correct value at 1"
    },
    "283": {
      "error": "index access is out of bounds"
    },
    "294": {
      "error": "expected correct value at 2"
    },
    "295": {
      "error": "index access is out of bounds"
    },
    "306": {
      "error": "expected correct value at 3"
    },
    "340": {
      "error": "invalid number of bytes for (len+uint64[])"
    },
    "403": {
      "error": "invalid number of bytes for uint64"
    },
    "433": {
      "error": "max array length exceeded"
    },
    "454": {
      "error": "expected correct length"
    },
    "476": {
      "error": "index access is out of bounds"
    },
    "501": {
      "error": "max array length exceeded"
    },
    "528": {
      "error": "invalid number of bytes for uint64"
    },
    "566": {
      "error": "max array length exceeded"
    },
    "587": {
      "error": "expected correct length"
    },
    "590": {
      "error": "max array length exceeded"
    },
    "598": {
      "error": "expected correct length"
    },
    "621": {
      "error": "index access is out of bounds"
    },
    "660": {
      "error": "invalid number of bytes for ((uint64,uint64),(uint64,uint64))"
    },
    "686": {
      "error": "invalid number of bytes for ((uint64,uint64),(uint64,uint64))"
    },
    "712": {
      "error": "index access is out of bounds"
    },
    "740": {
      "error": "index access is out of bounds"
    },
    "758": {
      "error": "invalid number of bytes for uint64"
    },
    "766": {
      "error": "invalid number of bytes for uint64"
    },
    "775": {
      "error": "invalid number of bytes for uint64"
    },
    "783": {
      "error": "invalid number of bytes for uint64"
    },
    "816": {
      "error": "overflow"
    },
    "875": {
      "error": "overflow"
    },
    "910": {
      "error": "overflow"
    },
    "944": {
      "error": "index access is out of bounds"
    },
    "1019": {
      "error": "index access is out of bounds"
    },
    "1058": {
      "error": "index access is out of bounds"
    },
    "1157": {
      "error": "OnCompletion must be NoOp && can only call when creating"
    },
    "1281": {
      "error": "check self.count exists"
    },
    "1298": {
      "error": "check self.count exists"
    },
    "1308": {
      "error": "check self.count exists"
    }
  }
}