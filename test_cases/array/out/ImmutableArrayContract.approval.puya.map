{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAqWK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA/VL;;;AA+VK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAzVL;;;AAAA;;;AAyVK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAjVL;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAiVK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAzUL;;;AAyUK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAjUL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAiUK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AAzTL;;;AAyTK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AA/SL;;;AAAA;;;AAAA;AA+SK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAxSL;;;AAAA;AAwSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAjSL;;;AAAA;AAiSK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AA1RL;;;AAAA;AA0RK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAPA;;AAAA;AAAA;AAAA;;AAAA;AAnRL;;;AAAA;AAmRK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAxPL;;;AAAA;;;AAAA;;;AAAA;;;AAwPK;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjEA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AArKL;;;AAAA;AAAA;;;AAqKK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAjKL;;;AAiKK;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AA7JL;;;AA6JK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AA9DL;;;AAAA;AA8DK;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AApkYA;;;AAEY;;AACZ;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACiB;AAAA;AAAA;AAAT;;AAAA;AACS;AAAA;AAAA;AAAT;AAAA;;;;;;;;;AACJ;AAGJ;;;AAEa;AACC;AAAA;;AAAA;;AAAA;AAAd;;;AACQ;;AAAU;;;AAAV;AAAA;;AADM;;AAAA;AAAA;AAAA;;;;;AAEV;AAGJ;;;AAEa;AAAA;;AAAA;;AAAA;AAAb;;;AACc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;AAAA;;;;;AAET;;AAAA;AAAA;AAtZJ;;;AAKc;;;;;;;;;;;;AAIW;;AAAX;;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;;AACO;AAAU;;AAAV;AAAP;AA2YM;AAAA;;AAzYW;;AAyYX;AAAd;;;AACc;;AAAA;AAAA;;;AAAA;;AAAA;AADA;;AAAA;AAAA;AAAA;;;;;AAxYC;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AAEA;;;AAAA;AAAA;;AAER;;;AAKiC;;AAAmB;AAAnB;AAAR;AAAX;;AAAA;AAAA;AAAA;;AAAA;AAHA;AAGA;AAAA;AAAA;;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAX;AAAP;AAuXK;AAAA;;AArXa;;AAqXb;AAAb;;;AACyB;;AAAA;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;AAAA;;;;;AApXE;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;AAAX;AAAP;AAEuC;;AAAtB;AAAA;;AAAA;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAX;AAAP;AACO;;AAAA;;;AAAU;AAAV;AAAP;AAEM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;;;AAAU;AAAV;AAAP;AAEiC;;AAAjC;;AAAiC;;AAAjC;AAAA;;AAER;;;;AAEc;AAGG;AAAA;;AAAA;;AAAA;AAAjB;;;AACkC;;AAAL;;AAAA;AAAA;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AADD;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AAER;;AAAA;;;AACuB;;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AAC2B;AAAJ;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACuB;AAAJ;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACD;;AAAS;;AAAT;AAAX;;;AAC2B;;AAAS;AAAT;AAAJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAJ;AAAP;AAEJ;;;AAAA;;AAAA;AACR;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEmB;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;;AAEZ;;;AAEc;AAGG;AAAA;;AAAO;;AAAP;AAAjB;;;AAC8B;;AAAA;AAAI;AAAJ;AAAO;AAAI;AAAJ;AAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEc;AAGG;AAAA;;AAAO;;AAAP;AAAjB;;;AACgD;;AAAA;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAQ;AAAR;AAAA;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;AAAA;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAP;AACA;AAAA;AACA;AACA;;;AAAA;AAAA;;AAER;;;;AAEc;AAGG;AAAA;;AAAO;;AAAP;AAAjB;;;AAC8B;;AAAA;AAAI;AAAJ;AAAO;AAAA;AAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;;AAAc;;AAAd;AAAP;AACS;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;;AAAA;AAAP;;;;;;AAEE;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAW;AAAX;AAA+B;AAAT;AAAtB;;AAAA;AAAA;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAY;;AAAZ;AAAgC;;AAAT;AAAvB;;AAAA;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;;AAEc;AAGG;AAAA;;AAAO;;AAAP;AAAjB;;;AACqD;;AAAA;AAAI;AAAJ;AAAW;AAAA;;;AAA9C;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;;AAAc;;AAAd;AAAP;AACS;AAAL;;AAAK;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAP;AACoB;;AAAA;;;AAAb;AAAP;;;;;;AAEE;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA8B;AAA9B;AAAA;AAAyC;AAAzC;AAAA;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA+B;;AAA/B;AAAA;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;AAAA;;AAER;;;AAEQ;;AAAA;;AAER;;;AAEQ;;;;;;;;AAAA;;AAAA;AAAA;;AAER;;;;;;;;;AAKiB;AAAA;;AAAA;;AAAA;AAAjB;;;AACwB;AAAA;;AACH;AAAL;;AAAK;;AAAA;;AAAA;AAArB;;;AAC4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADP;AAAA;AAAA;;;;;AAEH;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AAJD;;AAAA;AAAA;AAAA;;;;;AAOA;AAAA;;AACjB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwPY;AAAR;;AACJ;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACQ;;AAAA;AAAA;;;;;;;;;AAzPa;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;;;AAEb;;AAAA;;AAAA;AAER;;;AAEe;AACA;;AAQE;AAAA;;AAAO;;AAAP;AAAjB;;;AAC8C;;AAAA;AAAA;AAAU;;AAAK;AAAL;AAArC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAOG;;AAAK;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AAPE;;AAAI;AAAJ;AAHL;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAwBG;;AAAK;;AAAL;AAXH;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AA0BG;;AAAK;AAAL;AAZH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;AAgBJ;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;AAAA;;AAER;;;;;;AAQoC;AAAA;;AACpC;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACY;;AAAA;AAAA;;;;;;;;;AACZ;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACY;;AAAA;;AAAA;AAAA;AAAA;;;;AACZ;;;AACgB;;AAAQ;AAAR;;;;;;;;;;AAChB;;AAAA;;;AACgB;;AAAQ;AAAR;;;;;;;;;;;;;;;;AAChB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AACY;;AAAA;;AAAA;AACQ;AAAA;AAAR;AAAA;;AAAA;AAAA;;AACO;;AAAA;AAAP;;;;;;AAEJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAER;;;AAEc;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACG;AAAA;;AAAA;;AAAA;AAAjB;;;AACkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;;;;;AACG;AAAA;;AAAA;;AAAA;AAAjB;;;AAC6B;;AAAA;AAAI;AAAJ;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AADD;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;;;;;;;;;;;;;AACG;AAAA;;AAAA;;AAAA;AAAjB;;;AACgD;;AAAA;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAA;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;AAAA;;;;;AAET;AAER;;;AAEc;;;;;;;;;;;;;;;;;;;;;;;AACG;AAAA;;AAAA;;AAAA;AAAjB;;;AACoD;;AAAA;AAAA;;;AAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AADD;AAAA;AAAA;;;;;AAET;AAER;;;AAKQ;;AAAA;;;AACS;AAAA;;AAAA;;AAAA;AAAjB;;;AAC8C;;AAAA;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAA;;;AAAlD;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;;AAAA;AAER;;;AAIiB;;AACA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACT;AAER;;;AAKiB;;AAAA;;AAAA;AADA;;AACA;AAAA;AAAA;;;;AAAA;;AACT;AAER;;;AAKiB;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AADA;;AACA;AAAA;AAAA;;;AACT;AAER;;;AAKiB;;AAAA;;AAAA;AADA;;AACA;AAAA;AAAA;;;AACT;AAER;;;AAIe;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAP;AAER;;;AAEe;;AAAA;AAAA;AAAP;AAAA;AAC+B;AAAb;AAAgB;;AAAA;;;AAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AACN;AAER;;;;AAEe;;AAAA;AAAA;AACiB;;AAAmB;AAAnB;AAAsB;;AAAmB;AAAnB;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAP;AAGS;AAAA;;AAAO;;AAAP;AAAjB;;;AACmB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AADF;AAAA;AAAA;;;;;AAGF;;AAAA;;AAAA;AAAP;;;;AAER;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACmB;;AAAA;AAAP;;;;;;;;AAEJ;;AAAA;;AAAA;AAAA;;AAAA;AAIO;AAAA;;;AAAmC;;AAAnC;AAAP;AAEa;;;;;;;;;;;;;;;;;;AAAb;;AACO;;;AAAmC;;AAAnC;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAP;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x 0x0000 0x00 0x0002 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x000a 0x62696775696e74 0x000200000000000000010000000000000002 0x000200040007000161000162 \"imm_fixed_arr\""
    },
    "145": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "147": {
      "op": "bz main_bare_routing@29",
      "stack_out": []
    },
    "150": {
      "op": "pushbytess 0x44d42f99 0xb7eaa60b 0x743d70ed 0x1c7e0494 0xa2d5860b 0xe05fc564 0x1e092b83 0x01310262 0xc8654a98 0x89d196f8 0x6cb7c991 0x9898bf02 0xf6b61ee8 0x60b86a7b 0x73ad283f 0x529dfae9 0x206d514f 0xe06465e2 0xec0300a2 0xecdf14af 0x511aca64 0x29852e4f 0x6d4aa358 0xb7cb96bd // method \"test_uint64_array()void\", method \"test_biguint_array()void\", method \"test_bool_array(uint64)void\", method \"test_fixed_size_tuple_array()void\", method \"test_fixed_size_named_tuple_array()void\", method \"test_dynamic_sized_tuple_array()void\", method \"test_dynamic_sized_named_tuple_array()void\", method \"test_implicit_conversion_log(uint64[])void\", method \"test_implicit_conversion_emit(uint64[])void\", method \"test_nested_array(uint64,uint64[][])uint64[]\", method \"test_bit_packed_tuples()void\", method \"sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)\", method \"test_uint64_return(uint64)uint64[]\", method \"test_bool_return(uint64)bool[]\", method \"test_tuple_return(uint64)(uint64,bool,bool)[]\", method \"test_dynamic_tuple_return(uint64)(uint64,string)[]\", method \"test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]\", method \"test_concat_with_arc4_tuple((uint64,uint64))uint64[]\", method \"test_concat_with_native_tuple((uint64,uint64))uint64[]\", method \"test_dynamic_concat_with_arc4_tuple((string,string))string[]\", method \"test_dynamic_concat_with_native_tuple((string,string))string[]\", method \"test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]\", method \"test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]\", method \"test_imm_fixed_arr()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])"
      ],
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])"
      ]
    },
    "272": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "tmp%2#0"
      ]
    },
    "275": {
      "op": "match main_test_uint64_array_route@3 main_test_biguint_array_route@4 main_test_bool_array_route@5 main_test_fixed_size_tuple_array_route@6 main_test_fixed_size_named_tuple_array_route@7 main_test_dynamic_sized_tuple_array_route@8 main_test_dynamic_sized_named_tuple_array_route@9 main_test_implicit_conversion_log_route@10 main_test_implicit_conversion_emit_route@11 main_test_nested_array_route@12 main_test_bit_packed_tuples_route@13 main_sum_uints_and_lengths_and_trues_route@14 main_test_uint64_return_route@15 main_test_bool_return_route@16 main_test_tuple_return_route@17 main_test_dynamic_tuple_return_route@18 main_test_convert_to_array_and_back_route@19 main_test_concat_with_arc4_tuple_route@20 main_test_concat_with_native_tuple_route@21 main_test_dynamic_concat_with_arc4_tuple_route@22 main_test_dynamic_concat_with_native_tuple_route@23 main_test_concat_immutable_dynamic_route@24 main_test_immutable_arc4_route@25 main_test_imm_fixed_arr_route@26",
      "stack_out": []
    },
    "325": {
      "block": "main_after_if_else@33",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "326": {
      "op": "return",
      "stack_out": []
    },
    "327": {
      "block": "main_test_imm_fixed_arr_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "329": {
      "op": "!",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "330": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "331": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "333": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "334": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "op": "callsub test_imm_fixed_arr",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "337": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0",
        "0x151f7c75"
      ]
    },
    "338": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%140#0"
      ]
    },
    "339": {
      "op": "concat",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "340": {
      "op": "log",
      "stack_out": []
    },
    "341": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "342": {
      "op": "return",
      "stack_out": []
    },
    "343": {
      "block": "main_test_immutable_arc4_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "345": {
      "op": "!",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "346": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "347": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%132#0"
      ],
      "stack_out": [
        "tmp%132#0"
      ]
    },
    "349": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "350": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,uint64)[])%0#0"
      ]
    },
    "353": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "op": "callsub test_immutable_arc4",
      "defined_out": [
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0"
      ]
    },
    "356": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%134#0",
        "0x151f7c75"
      ]
    },
    "357": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%134#0"
      ]
    },
    "358": {
      "op": "concat",
      "defined_out": [
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%135#0"
      ]
    },
    "359": {
      "op": "log",
      "stack_out": []
    },
    "360": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "361": {
      "op": "return",
      "stack_out": []
    },
    "362": {
      "block": "main_test_concat_immutable_dynamic_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "364": {
      "op": "!",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "365": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "366": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "368": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "369": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0"
      ]
    },
    "372": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%1#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%2#0"
      ]
    },
    "375": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "op": "callsub test_concat_immutable_dynamic",
      "defined_out": [
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0"
      ]
    },
    "378": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%128#0",
        "0x151f7c75"
      ]
    },
    "379": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%128#0"
      ]
    },
    "380": {
      "op": "concat",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "381": {
      "op": "log",
      "stack_out": []
    },
    "382": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "383": {
      "op": "return",
      "stack_out": []
    },
    "384": {
      "block": "main_test_dynamic_concat_with_native_tuple_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%116#0"
      ]
    },
    "386": {
      "op": "!",
      "defined_out": [
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%117#0"
      ]
    },
    "387": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "388": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%118#0"
      ]
    },
    "390": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "391": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ]
    },
    "394": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ]
    },
    "395": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)",
        "0"
      ]
    },
    "396": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "397": {
      "op": "dig 1",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ]
    },
    "399": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)",
        "2"
      ]
    },
    "400": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "401": {
      "op": "dig 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ]
    },
    "403": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "405": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "407": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "408": {
      "op": "dig 2",
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0 (copy)"
      ]
    },
    "410": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0"
      ]
    },
    "411": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0"
      ]
    },
    "413": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%len%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "415": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%substring3%0#0",
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0"
      ]
    },
    "417": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0"
      ],
      "stack_out": [
        "aggregate%substring3%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "418": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "op": "callsub test_dynamic_concat_with_native_tuple",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "421": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0",
        "0x151f7c75"
      ]
    },
    "422": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%122#0"
      ]
    },
    "423": {
      "op": "concat",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "424": {
      "op": "log",
      "stack_out": []
    },
    "425": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "426": {
      "op": "return",
      "stack_out": []
    },
    "427": {
      "block": "main_test_dynamic_concat_with_arc4_tuple_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%110#0"
      ],
      "stack_out": [
        "tmp%110#0"
      ]
    },
    "429": {
      "op": "!",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "430": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "431": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "433": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "434": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((len+utf8[]),(len+utf8[]))%0#0"
      ]
    },
    "437": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "op": "callsub test_dynamic_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "440": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0",
        "0x151f7c75"
      ]
    },
    "441": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%114#0"
      ]
    },
    "442": {
      "op": "concat",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "443": {
      "op": "log",
      "stack_out": []
    },
    "444": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "445": {
      "op": "return",
      "stack_out": []
    },
    "446": {
      "block": "main_test_concat_with_native_tuple_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "448": {
      "op": "!",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "449": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "450": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%104#0"
      ]
    },
    "452": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "453": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ]
    },
    "456": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64)%1#0 (copy)"
      ]
    },
    "457": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%1#0",
        "aggregate%extract%0#0"
      ]
    },
    "460": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded(uint64,uint64)%1#0"
      ]
    },
    "461": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ],
      "stack_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "464": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "op": "callsub test_concat_with_native_tuple",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "467": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0",
        "0x151f7c75"
      ]
    },
    "468": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%108#0"
      ]
    },
    "469": {
      "op": "concat",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "470": {
      "op": "log",
      "stack_out": []
    },
    "471": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "472": {
      "op": "return",
      "stack_out": []
    },
    "473": {
      "block": "main_test_concat_with_arc4_tuple_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "475": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "476": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "480": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64)%0#0"
      ]
    },
    "483": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "op": "callsub test_concat_with_arc4_tuple",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "486": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0",
        "0x151f7c75"
      ]
    },
    "487": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%100#0"
      ]
    },
    "488": {
      "op": "concat",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "489": {
      "op": "log",
      "stack_out": []
    },
    "490": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "491": {
      "op": "return",
      "stack_out": []
    },
    "492": {
      "block": "main_test_convert_to_array_and_back_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "494": {
      "op": "!",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "495": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "496": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%91#0"
      ],
      "stack_out": [
        "tmp%91#0"
      ]
    },
    "498": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "499": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0"
      ]
    },
    "502": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0",
        "reinterpret_Encoded(uint64)%6#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "505": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0",
        "tmp%93#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0",
        "tmp%93#0"
      ]
    },
    "506": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "op": "callsub test_convert_to_array_and_back",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "509": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0",
        "0x151f7c75"
      ]
    },
    "510": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%94#0"
      ]
    },
    "511": {
      "op": "concat",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "512": {
      "op": "log",
      "stack_out": []
    },
    "513": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "514": {
      "op": "return",
      "stack_out": []
    },
    "515": {
      "block": "main_test_dynamic_tuple_return_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "517": {
      "op": "!",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "518": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "519": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "521": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "522": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "525": {
      "op": "btoi",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "526": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "op": "callsub test_dynamic_tuple_return",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "529": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0",
        "0x151f7c75"
      ]
    },
    "530": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%87#0"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "532": {
      "op": "log",
      "stack_out": []
    },
    "533": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "534": {
      "op": "return",
      "stack_out": []
    },
    "535": {
      "block": "main_test_tuple_return_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "537": {
      "op": "!",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "538": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "539": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "541": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "542": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "545": {
      "op": "btoi",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "546": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "op": "callsub test_tuple_return",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "549": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "0x151f7c75"
      ]
    },
    "550": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%80#0"
      ]
    },
    "551": {
      "op": "concat",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "552": {
      "op": "log",
      "stack_out": []
    },
    "553": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "554": {
      "op": "return",
      "stack_out": []
    },
    "555": {
      "block": "main_test_bool_return_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "557": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "558": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "559": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "561": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "562": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "565": {
      "op": "btoi",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "566": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "op": "callsub test_bool_return",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "569": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0",
        "0x151f7c75"
      ]
    },
    "570": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%73#0"
      ]
    },
    "571": {
      "op": "concat",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "572": {
      "op": "log",
      "stack_out": []
    },
    "573": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "574": {
      "op": "return",
      "stack_out": []
    },
    "575": {
      "block": "main_test_uint64_return_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "577": {
      "op": "!",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "578": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "579": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "581": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "582": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "585": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "586": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "op": "callsub test_uint64_return",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "589": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0",
        "0x151f7c75"
      ]
    },
    "590": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%66#0"
      ]
    },
    "591": {
      "op": "concat",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "592": {
      "op": "log",
      "stack_out": []
    },
    "593": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "594": {
      "op": "return",
      "stack_out": []
    },
    "595": {
      "block": "main_sum_uints_and_lengths_and_trues_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "597": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "598": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "599": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "601": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "602": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%2#0"
      ]
    },
    "605": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%2#0",
        "reinterpret_Encoded(len+bool1[])%0#0"
      ]
    },
    "608": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%2#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0"
      ]
    },
    "611": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+uint64[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%2#0",
        "reinterpret_Encoded(len+bool1[])%0#0",
        "reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0",
        "reinterpret_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "614": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "op": "callsub sum_uints_and_lengths_and_trues",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ]
    },
    "617": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0",
        "tmp%55#0"
      ]
    },
    "619": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "tmp%57#0",
        "tmp%58#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "620": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%57#0",
        "tmp%58#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%56#0"
      ]
    },
    "622": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "tmp%58#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "623": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "tmp%57#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "tmp%58#0",
        "aggregate%head%1#0"
      ]
    },
    "624": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%58#0",
        "aggregate%head%1#0",
        "tmp%57#0"
      ]
    },
    "626": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "627": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0",
        "aggregate%head%2#0"
      ]
    },
    "628": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%2#0",
        "tmp%58#0"
      ]
    },
    "629": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "630": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "631": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0",
        "0x151f7c75"
      ]
    },
    "632": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%head%3#0"
      ]
    },
    "633": {
      "op": "concat",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "634": {
      "op": "log",
      "stack_out": []
    },
    "635": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "636": {
      "op": "return",
      "stack_out": []
    },
    "637": {
      "block": "main_test_bit_packed_tuples_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "639": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "640": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "641": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "643": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "644": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "op": "callsub test_bit_packed_tuples"
    },
    "647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "648": {
      "op": "return",
      "stack_out": []
    },
    "649": {
      "block": "main_test_nested_array_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "651": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "652": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "653": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "655": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "656": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "659": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "660": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "reinterpret_Encoded(len+(len+uint64[])[])%0#0"
      ]
    },
    "663": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "op": "callsub test_nested_array",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "666": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "0x151f7c75"
      ]
    },
    "667": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%45#0"
      ]
    },
    "668": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "669": {
      "op": "log",
      "stack_out": []
    },
    "670": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "671": {
      "op": "return",
      "stack_out": []
    },
    "672": {
      "block": "main_test_implicit_conversion_emit_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "674": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "675": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "676": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "678": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "679": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%1#0"
      ]
    },
    "682": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "op": "callsub test_implicit_conversion_emit",
      "stack_out": []
    },
    "685": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "686": {
      "op": "return",
      "stack_out": []
    },
    "687": {
      "block": "main_test_implicit_conversion_log_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "689": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "690": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "691": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "693": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "694": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "697": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "op": "callsub test_implicit_conversion_log",
      "stack_out": []
    },
    "700": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "701": {
      "op": "return",
      "stack_out": []
    },
    "702": {
      "block": "main_test_dynamic_sized_named_tuple_array_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "704": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "705": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "706": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "708": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "709": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "op": "callsub test_dynamic_sized_named_tuple_array"
    },
    "712": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "713": {
      "op": "return",
      "stack_out": []
    },
    "714": {
      "block": "main_test_dynamic_sized_tuple_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "716": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "717": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "718": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "720": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "721": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "op": "callsub test_dynamic_sized_tuple_array"
    },
    "724": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "725": {
      "op": "return",
      "stack_out": []
    },
    "726": {
      "block": "main_test_fixed_size_named_tuple_array_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "728": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "729": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "730": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "732": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "733": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "op": "callsub test_fixed_size_named_tuple_array"
    },
    "736": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "737": {
      "op": "return",
      "stack_out": []
    },
    "738": {
      "block": "main_test_fixed_size_tuple_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "740": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "741": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "742": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "744": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "745": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "op": "callsub test_fixed_size_tuple_array"
    },
    "748": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "749": {
      "op": "return",
      "stack_out": []
    },
    "750": {
      "block": "main_test_bool_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "752": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "753": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "754": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "756": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "757": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "760": {
      "op": "btoi",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "761": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "op": "callsub test_bool_array",
      "stack_out": []
    },
    "764": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "765": {
      "op": "return",
      "stack_out": []
    },
    "766": {
      "block": "main_test_biguint_array_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "768": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "769": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "770": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "772": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "773": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "op": "callsub test_biguint_array"
    },
    "776": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "777": {
      "op": "return",
      "stack_out": []
    },
    "778": {
      "block": "main_test_uint64_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "780": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "781": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "782": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "784": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "785": {
      "callsub": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "op": "callsub test_uint64_array"
    },
    "788": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "789": {
      "op": "return",
      "stack_out": []
    },
    "790": {
      "block": "main_bare_routing@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "792": {
      "op": "bnz main_after_if_else@33",
      "stack_out": []
    },
    "795": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "797": {
      "op": "!",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "798": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "799": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "800": {
      "op": "return",
      "stack_out": []
    },
    "801": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "804": {
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "806": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "807": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "808": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "809": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "810": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "811": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "814": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "816": {
      "op": "swap",
      "stack_out": [
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "817": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "819": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "820": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "821": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "823": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "824": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "825": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "827": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "popped#0"
      ]
    },
    "828": {
      "op": "uncover 2",
      "stack_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ]
    },
    "830": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_location#0",
        "popped#0",
        "result#0",
        "0"
      ]
    },
    "831": {
      "op": "uncover 3",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "833": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "834": {
      "retsub": true,
      "op": "retsub"
    },
    "835": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "838": {
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "840": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "841": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "842": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "843": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "844": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0"
      ]
    },
    "845": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "846": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "847": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0"
      ]
    },
    "848": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "850": {
      "op": "extract 2 0",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "853": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0"
      ]
    },
    "854": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "856": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "857": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "859": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "860": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "861": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "863": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "864": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0",
        "tmp%5#0"
      ]
    },
    "865": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "tmp%5#0",
        "head_and_tail#0"
      ]
    },
    "866": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "868": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0"
      ]
    },
    "869": {
      "op": "bytec_1 // 0x"
    },
    "870": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "871": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "873": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "popped_header_offset#0"
      ]
    },
    "875": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "876": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "879": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "881": {
      "op": "frame_dig 6",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "883": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "884": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "886": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "887": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "888": {
      "op": "-",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "889": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "890": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "893": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0",
        "new_head#0"
      ]
    },
    "895": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ]
    },
    "896": {
      "op": "concat",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "897": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "899": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "900": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "901": {
      "op": "frame_bury 6",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "903": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "906": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "908": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "909": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "912": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%14#0",
        "new_head#0"
      ]
    },
    "914": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "915": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0"
      ]
    },
    "917": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "918": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "919": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "head_and_tail#0"
      ]
    },
    "921": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0"
      ]
    },
    "922": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0",
        "popped_offset#0"
      ]
    },
    "924": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "925": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "926": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "928": {
      "op": "frame_bury 0"
    },
    "930": {
      "op": "frame_bury 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "932": {
      "retsub": true,
      "op": "retsub"
    },
    "933": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "936": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "937": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "939": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "941": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "942": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "943": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "945": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "947": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "948": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "949": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "950": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "953": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "955": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "956": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "958": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "959": {
      "op": "uncover 2"
    },
    "961": {
      "op": "uncover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "963": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "965": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "966": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "967": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "968": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "969": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "971": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "972": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "974": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "975": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "976": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "977": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "978": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "980": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%9#0"
      ]
    },
    "981": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "984": {
      "op": "frame_dig 6",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "986": {
      "op": "frame_dig 5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "988": {
      "op": "-",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%10#0"
      ]
    },
    "989": {
      "op": "bzero",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0"
      ]
    },
    "990": {
      "op": "frame_dig 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0",
        "result#0"
      ]
    },
    "992": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%11#0"
      ]
    },
    "993": {
      "op": "concat",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "994": {
      "op": "frame_bury 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "996": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "998": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1000": {
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1001": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1003": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "1005": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "1007": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1008": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "1009": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1011": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1013": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_end#0"
      ]
    },
    "1014": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1016": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "1018": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "1020": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%15#0"
      ]
    },
    "1021": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1024": {
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "1026": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "1028": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "1029": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "1031": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "1032": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "1034": {
      "op": "frame_dig 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "1036": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "1037": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "1039": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "1041": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "1042": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "1044": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "1045": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "1046": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1048": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "1050": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "1051": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "1053": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "1056": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "1058": {
      "op": "frame_bury 0"
    },
    "1060": {
      "retsub": true,
      "op": "retsub"
    },
    "1061": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "1064": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "1066": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "1067": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "1068": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "1069": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1071": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "1072": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "1073": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "1074": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%2#0"
      ]
    },
    "1075": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%2#0",
        "2"
      ]
    },
    "1076": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "1077": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "1079": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%4#0"
      ]
    },
    "1080": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%5#0"
      ]
    },
    "1083": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "1085": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "1087": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "1088": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "1090": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "1091": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)"
      ]
    },
    "1093": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1094": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1095": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1096": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0"
      ]
    },
    "1097": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "array#0 (copy)"
      ]
    },
    "1099": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1100": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)"
      ]
    },
    "1102": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "1104": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%10#0"
      ]
    },
    "1106": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "1107": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%12#0"
      ]
    },
    "1108": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%12#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "1110": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "1111": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "1112": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "1113": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "1114": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "1115": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0",
        "head_offset#0"
      ]
    },
    "1116": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1117": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "1119": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "1121": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "continue_looping%0#0"
      ]
    },
    "1122": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1125": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1"
      ]
    },
    "1127": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "1128": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tmp%6#0"
      ]
    },
    "1129": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "1132": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "1134": {
      "op": "frame_dig 3",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "1136": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1137": {
      "op": "cover 4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "1139": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "1141": {
      "op": "replace3",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "1142": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "1143": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "1145": {
      "op": "dig 1",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "1147": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ]
    },
    "1148": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%9#1",
        "2"
      ]
    },
    "1149": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%10#0"
      ]
    },
    "1150": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1151": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "1153": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "2"
      ]
    },
    "1154": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "1155": {
      "op": "frame_bury 3",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "1157": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "1160": {
      "block": "dynamic_array_concat_byte_length_head_after_for@4",
      "stack_in": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ]
    },
    "1162": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%5#0",
        "array_head_and_tail#0"
      ]
    },
    "1164": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%15#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%15#0"
      ]
    },
    "1165": {
      "op": "frame_bury 0"
    },
    "1167": {
      "retsub": true,
      "op": "retsub"
    },
    "1168": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "1171": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "1172": {
      "op": "dup"
    },
    "1173": {
      "op": "frame_dig -2"
    },
    "1175": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "1176": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "1177": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1179": {
      "op": "intc_2 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "1180": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "1181": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1182": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1184": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "1186": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "1187": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1190": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1192": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1194": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1195": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1197": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1198": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1200": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "1201": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "1202": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "1205": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "1207": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "1208": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1209": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1211": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1212": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1213": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1215": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "1218": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1220": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "1221": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1223": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1224": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1226": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1228": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "1230": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "1231": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1234": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1236": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "1238": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1239": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "1241": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "1242": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "1244": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "1245": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "1246": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "1249": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "1251": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "1252": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "1253": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1255": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "1256": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "1257": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "1259": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "1262": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "1264": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "1266": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "1267": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "1268": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "1271": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "1273": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "1274": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "1276": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "1278": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0",
        "item_offset_adjustment#2"
      ]
    },
    "1280": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%20#0"
      ]
    },
    "1281": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0"
      ]
    },
    "1282": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1284": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0"
      ]
    },
    "1285": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "1287": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%23#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "1289": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%23#0"
      ]
    },
    "1291": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%21#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%21#0",
        "tmp%24#0"
      ]
    },
    "1292": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%1#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%25#0"
      ]
    },
    "1293": {
      "op": "frame_bury 0"
    },
    "1295": {
      "retsub": true,
      "op": "retsub"
    },
    "1296": {
      "subroutine": "test_cases.array.immutable.sum_imm_fixed",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_imm_fixed",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1299": {
      "op": "intc_0 // 0"
    },
    "1300": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1301": {
      "block": "sum_imm_fixed_for_header@1",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1303": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "1305": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1306": {
      "op": "bz sum_imm_fixed_after_for@4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1309": {
      "op": "frame_dig 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1311": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1312": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "1314": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1315": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "1317": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1318": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "1320": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0"
      ]
    },
    "1321": {
      "op": "dup",
      "defined_out": [
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)"
      ]
    },
    "1322": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item#0",
        "item#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0",
        "item#0 (copy)",
        "0"
      ]
    },
    "1323": {
      "op": "extract_uint64",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0",
        "values%1#0"
      ]
    },
    "1324": {
      "op": "frame_dig 0",
      "defined_out": [
        "item#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0",
        "values%1#0",
        "total#0"
      ]
    },
    "1326": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item#0",
        "total#0"
      ]
    },
    "1327": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0"
      ]
    },
    "1328": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "item#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "item#0",
        "8"
      ]
    },
    "1329": {
      "op": "extract_uint64",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "values%2#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%2#0"
      ]
    },
    "1330": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1331": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1333": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1334": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1335": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "1337": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "1340": {
      "block": "sum_imm_fixed_after_for@4",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1341": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1344": {
      "op": "bytec_1 // \"\""
    },
    "1345": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1346": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1348": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "n#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "n#0 (copy)"
      ]
    },
    "1350": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1351": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1354": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1356": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0",
        "\" \""
      ]
    },
    "1359": {
      "op": "concat",
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1360": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1362": {
      "op": "frame_dig 1",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1364": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1365": {
      "op": "+",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "1366": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "1368": {
      "op": "b times_for_header@1"
    },
    "1371": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "1372": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1375": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1376": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1378": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "1380": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1381": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "1384": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1386": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1387": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1388": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0 (copy)"
      ]
    },
    "1390": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "i#0",
        "arr#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1391": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0"
      ]
    },
    "1392": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "1394": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1395": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1396": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1397": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1398": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1399": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1402": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "1404": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1406": {
      "op": "intc_1 // 1",
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1407": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "1408": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "1410": {
      "op": "b add_x_for_header@1"
    },
    "1413": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "1415": {
      "op": "swap"
    },
    "1416": {
      "retsub": true,
      "op": "retsub"
    },
    "1417": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array",
      "params": {},
      "block": "test_uint64_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1420": {
      "op": "pushbytes 0x0001000000000000002a",
      "defined_out": [
        "0x0001000000000000002a"
      ],
      "stack_out": [
        "0x0001000000000000002a"
      ]
    },
    "1432": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0x0001000000000000002a",
        "5"
      ],
      "stack_out": [
        "0x0001000000000000002a",
        "5"
      ]
    },
    "1434": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#2"
      ],
      "stack_out": [
        "arr#2"
      ]
    },
    "1437": {
      "op": "dup",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1438": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1439": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "1440": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1441": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "6"
      ]
    },
    "1443": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%10#0"
      ]
    },
    "1444": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "1445": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1446": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "1447": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0"
      ]
    },
    "1448": {
      "op": "dig 2",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0",
        "arr#2 (copy)"
      ]
    },
    "1450": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "1453": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0"
      ]
    },
    "1454": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0",
        "8"
      ]
    },
    "1455": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1456": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "values%1#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "values%1#0"
      ]
    },
    "1457": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "arr#2",
        "values%1#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "values%1#0",
        "4"
      ]
    },
    "1459": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%13#0"
      ]
    },
    "1460": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "1461": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "aggregate%array_length%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "43"
      ]
    },
    "1463": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1464": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0",
        "arr#2"
      ]
    },
    "1466": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1467": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%3#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%3#0",
        "concat%1#0"
      ]
    },
    "1468": {
      "op": "swap",
      "stack_out": [
        "concat%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1469": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "1470": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "1471": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "1472": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "1475": {
      "op": "replace2 0",
      "stack_out": [
        "arr#2"
      ]
    },
    "1477": {
      "op": "dupn 2",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1479": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1480": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0"
      ]
    },
    "1481": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1482": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "7"
      ]
    },
    "1484": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#2",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "tmp%16#0"
      ]
    },
    "1485": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0"
      ]
    },
    "1486": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "1"
      ]
    },
    "1487": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0"
      ]
    },
    "1488": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0",
        "arr#2 (copy)"
      ]
    },
    "1490": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1493": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0"
      ]
    },
    "1494": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0",
        "8"
      ]
    },
    "1495": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1496": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%2#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "values%2#0"
      ]
    },
    "1497": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#2",
        "arr#2",
        "values%2#0",
        "43"
      ]
    },
    "1499": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%19#0"
      ]
    },
    "1500": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "arr#2"
      ]
    },
    "1501": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#2",
        "arr#2",
        "2"
      ]
    },
    "1502": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%3#0"
      ],
      "stack_out": [
        "arr#2",
        "values%3#0"
      ]
    },
    "1503": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#2",
        "values%3#0"
      ],
      "stack_out": [
        "arr#2",
        "values%3#0",
        "42"
      ]
    },
    "1505": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#2",
        "tmp%20#0"
      ]
    },
    "1506": {
      "op": "assert",
      "stack_out": [
        "arr#2"
      ]
    },
    "1507": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1508": {
      "block": "test_uint64_array_for_header@2",
      "stack_in": [
        "arr#2",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1510": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "_i#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0",
        "3"
      ]
    },
    "1512": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1513": {
      "op": "bz test_uint64_array_after_for@4",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1516": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1518": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "8"
      ]
    },
    "1519": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "_i#0",
        "arr#2",
        "tmp%0#1"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "tmp%0#1",
        "arr#2"
      ]
    },
    "1522": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0",
        "arr#2",
        "tmp%0#1"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "tmp%0#1"
      ]
    },
    "1524": {
      "op": "pop",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1525": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1527": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1528": {
      "op": "+",
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1529": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1531": {
      "op": "b test_uint64_array_for_header@2"
    },
    "1534": {
      "block": "test_uint64_array_after_for@4",
      "stack_in": [
        "arr#2",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1536": {
      "op": "dup",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1537": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1538": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0"
      ]
    },
    "1539": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)"
      ]
    },
    "1540": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "4"
      ]
    },
    "1542": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr#2",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "tmp%23#0"
      ]
    },
    "1543": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0"
      ]
    },
    "1544": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%7#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "1"
      ]
    },
    "1545": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0"
      ]
    },
    "1546": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0",
        "arr#2 (copy)"
      ]
    },
    "1548": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "1551": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0"
      ]
    },
    "1552": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%4#0",
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "1553": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1554": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%4#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%4#0"
      ]
    },
    "1555": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#2",
        "values%4#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%4#0",
        "2"
      ]
    },
    "1556": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%26#0"
      ]
    },
    "1557": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1558": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "10"
      ]
    },
    "1560": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1563": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1564": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1565": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1566": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)"
      ]
    },
    "1567": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "14"
      ]
    },
    "1569": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%29#0"
      ]
    },
    "1570": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1571": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)"
      ]
    },
    "1572": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "1"
      ]
    },
    "1573": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0"
      ]
    },
    "1574": {
      "op": "dig 2",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0",
        "arr#2 (copy)"
      ]
    },
    "1576": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "arr#2",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "1579": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0"
      ]
    },
    "1580": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "1581": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "1582": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "values%5#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "values%5#0"
      ]
    },
    "1583": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%9#0",
        "arr#2",
        "values%5#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "values%5#0",
        "9"
      ]
    },
    "1585": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%32#0"
      ]
    },
    "1586": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1587": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "aggregate%array_length%9#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "44"
      ]
    },
    "1589": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1590": {
      "op": "uncover 2",
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0",
        "arr#2"
      ]
    },
    "1592": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "arr#2",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1593": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "concat%2#0"
      ]
    },
    "1594": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "aggregate%array_length%9#0"
      ]
    },
    "1595": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "aggregate%array_length%9#0",
        "1"
      ]
    },
    "1596": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "arr#2",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "1597": {
      "op": "itob",
      "defined_out": [
        "arr#2",
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "1598": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#2",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "1601": {
      "op": "replace2 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1603": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1604": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1605": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%11#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0"
      ]
    },
    "1606": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)"
      ]
    },
    "1607": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "15"
      ]
    },
    "1609": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%11#0",
        "arr#2",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "tmp%35#0"
      ]
    },
    "1610": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0"
      ]
    },
    "1611": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "1"
      ]
    },
    "1612": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0"
      ]
    },
    "1613": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0",
        "arr#2 (copy)"
      ]
    },
    "1615": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "arr#2",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "1618": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0"
      ]
    },
    "1619": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "1620": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "1621": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%6#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%6#0"
      ]
    },
    "1622": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%6#0",
        "44"
      ]
    },
    "1624": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%38#0"
      ]
    },
    "1625": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1626": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "23"
      ]
    },
    "1628": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "1629": {
      "op": "replace2 18",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1631": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1632": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1633": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%13#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%13#0"
      ]
    },
    "1634": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%13#0",
        "15"
      ]
    },
    "1636": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%40#0"
      ]
    },
    "1637": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1638": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1639": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "18"
      ]
    },
    "1641": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%7#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%7#0"
      ]
    },
    "1642": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%7#0",
        "23"
      ]
    },
    "1644": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%41#0"
      ]
    },
    "1645": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1646": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "\"a\""
      ]
    },
    "1649": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "\"a\"",
        "arr#2"
      ]
    },
    "1650": {
      "op": "app_global_put",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1651": {
      "retsub": true,
      "op": "retsub"
    },
    "1652": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array",
      "params": {},
      "block": "test_biguint_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1655": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1657": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "1"
      ]
    },
    "1658": {
      "op": "-",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1659": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1660": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "64"
      ]
    },
    "1662": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1663": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "aggregate%bzero%0#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1664": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1666": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "1667": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0",
        "0x0000"
      ]
    },
    "1668": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "0x0000",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "1669": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%bzero%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "concat%0#0"
      ]
    },
    "1670": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%bzero%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "concat%0#0",
        "0x0001"
      ]
    },
    "1674": {
      "op": "replace2 0",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ]
    },
    "1676": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1678": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1679": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0"
      ]
    },
    "1680": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)"
      ]
    },
    "1681": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "1"
      ]
    },
    "1682": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "tmp%7#0"
      ]
    },
    "1683": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0"
      ]
    },
    "1684": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "1685": {
      "op": "-",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "tmp%9#0"
      ]
    },
    "1686": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0",
        "arr#1"
      ]
    },
    "1687": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1690": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "1691": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0",
        "64"
      ]
    },
    "1693": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1694": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "64"
      ]
    },
    "1696": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1697": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%encoded_element%0#0",
        "0x"
      ]
    },
    "1698": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%10#0"
      ]
    },
    "1699": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ]
    },
    "1700": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1701": {
      "block": "test_biguint_array_for_header@2",
      "stack_in": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1703": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1705": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1706": {
      "op": "bz test_biguint_array_after_for@4",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1709": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1711": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1712": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "1713": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%bzero%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "tmp%0#1",
        "aggregate%bzero%0#0"
      ]
    },
    "1715": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "1716": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "aggregate%arc4_encoded%1#0",
        "arr#1"
      ]
    },
    "1718": {
      "op": "dup"
    },
    "1719": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "1721": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1",
        "concat%0#0"
      ]
    },
    "1722": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#1"
      ]
    },
    "1723": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#1",
        "0"
      ]
    },
    "1724": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "extract_uint16%0#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#1"
      ]
    },
    "1725": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "extract_uint16%0#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#1",
        "1"
      ]
    },
    "1726": {
      "op": "+",
      "defined_out": [
        "add%0#1",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#1"
      ]
    },
    "1727": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%0#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#1"
      ]
    },
    "1728": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%0#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#1"
      ]
    },
    "1731": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1"
      ]
    },
    "1733": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1735": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1736": {
      "op": "+",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1737": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1739": {
      "op": "b test_biguint_array_for_header@2"
    },
    "1742": {
      "block": "test_biguint_array_after_for@4",
      "stack_in": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1744": {
      "op": "dup",
      "defined_out": [
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1745": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1746": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1747": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1748": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "6"
      ]
    },
    "1750": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%13#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%13#0"
      ]
    },
    "1751": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1752": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1753": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "1754": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0"
      ]
    },
    "1755": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0",
        "arr#1 (copy)"
      ]
    },
    "1757": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "1760": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0"
      ]
    },
    "1761": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0",
        "64"
      ]
    },
    "1763": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1764": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "64"
      ]
    },
    "1766": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1767": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "0x04"
      ]
    },
    "1770": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "1771": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1772": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%17#0"
      ]
    },
    "1774": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%18#0"
      ]
    },
    "1775": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%18#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1777": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "tmp%18#0"
      ]
    },
    "1778": {
      "op": "b-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0"
      ]
    },
    "1779": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "1780": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%value_len%2#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%value_len%2#0"
      ]
    },
    "1781": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "1783": {
      "op": "<=",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%len_ok%2#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "1784": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0"
      ]
    },
    "1785": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1787": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%2#0",
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "1788": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%arc4_encoded%2#0",
        "arr#1"
      ]
    },
    "1790": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "arr#1",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "1791": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "concat%1#0"
      ]
    },
    "1792": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1793": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "1794": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "1795": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "1796": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "1799": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1801": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1802": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1803": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1804": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1805": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "7"
      ]
    },
    "1807": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%22#0"
      ]
    },
    "1808": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1809": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1810": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "1"
      ]
    },
    "1811": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0"
      ]
    },
    "1812": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0",
        "arr#1 (copy)"
      ]
    },
    "1814": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1817": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0"
      ]
    },
    "1818": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0",
        "64"
      ]
    },
    "1820": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1821": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "64"
      ]
    },
    "1823": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%2#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1824": {
      "op": "pushbytes 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
      "defined_out": [
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%2#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%2#0",
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
      ]
    },
    "1890": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%25#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%25#0"
      ]
    },
    "1891": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1892": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "arr#1 (copy)"
      ]
    },
    "1894": {
      "op": "extract 2 64",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1897": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x",
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%3#0",
        "0x"
      ]
    },
    "1898": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%26#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%26#0"
      ]
    },
    "1899": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1900": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "arr#1"
      ]
    },
    "1901": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "arr#1",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1903": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "concat%2#0"
      ]
    },
    "1904": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "1905": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "aggregate%array_length%5#0",
        "1"
      ]
    },
    "1906": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "1907": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "1908": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "1911": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1913": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1914": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1915": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0"
      ]
    },
    "1916": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)"
      ]
    },
    "1917": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "8"
      ]
    },
    "1918": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "tmp%29#0"
      ]
    },
    "1919": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0"
      ]
    },
    "1920": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "1"
      ]
    },
    "1921": {
      "op": "-",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0"
      ]
    },
    "1922": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0",
        "arr#1 (copy)"
      ]
    },
    "1924": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "1927": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0"
      ]
    },
    "1928": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0",
        "64"
      ]
    },
    "1930": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1931": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "64"
      ]
    },
    "1933": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%4#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%4#0"
      ]
    },
    "1934": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%4#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1936": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%32#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%32#0"
      ]
    },
    "1937": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1938": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1939": {
      "op": "extract 2 64",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%5#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%5#0"
      ]
    },
    "1942": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%5#0",
        "0x"
      ]
    },
    "1943": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%33#0"
      ]
    },
    "1944": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1945": {
      "op": "bytec 7 // 0x62696775696e74",
      "defined_out": [
        "0x62696775696e74",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "0x62696775696e74"
      ]
    },
    "1947": {
      "op": "box_del",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "{box_del}"
      ]
    },
    "1948": {
      "op": "pop",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1949": {
      "op": "bytec 7 // 0x62696775696e74",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "0x62696775696e74"
      ]
    },
    "1951": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "0x62696775696e74",
        "arr#1"
      ]
    },
    "1952": {
      "op": "box_put",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1953": {
      "retsub": true,
      "op": "retsub"
    },
    "1954": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1957": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "array_length#0"
      ]
    },
    "1958": {
      "op": "bytec_2 // 0x0000"
    },
    "1959": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1960": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1962": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "1964": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1965": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1968": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1970": {
      "op": "frame_dig 2",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1972": {
      "op": "dup"
    },
    "1973": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ]
    },
    "1975": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1976": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "1977": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "1978": {
      "op": "uncover 2",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "1980": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1981": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "arr#0"
      ]
    },
    "1983": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1984": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "1985": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "8"
      ]
    },
    "1986": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "1989": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1991": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1992": {
      "op": "+",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1993": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1995": {
      "op": "b test_bool_array_for_header@1"
    },
    "1998": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2000": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2001": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "2002": {
      "op": "dup",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "array_length#0"
      ]
    },
    "2003": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "2005": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "length#0 (copy)"
      ]
    },
    "2007": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2008": {
      "op": "assert",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2009": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2011": {
      "op": "bz test_bool_array_after_if_else@6",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2014": {
      "op": "frame_dig 0",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "2016": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2017": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2019": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "2021": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "2022": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2023": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2024": {
      "block": "test_bool_array_after_if_else@6",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2026": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2027": {
      "op": ">",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "2028": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2031": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "2032": {
      "op": "frame_dig 0",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "1",
        "array_length#0"
      ]
    },
    "2034": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%1#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%lt%1#0"
      ]
    },
    "2035": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2036": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2038": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "17"
      ]
    },
    "2040": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "2041": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "2042": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2043": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2045": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "2046": {
      "op": ">",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "2047": {
      "op": "bz test_bool_array_after_if_else@10",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2050": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "2"
      ]
    },
    "2051": {
      "op": "frame_dig 0",
      "defined_out": [
        "2",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "2",
        "array_length#0"
      ]
    },
    "2053": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%2#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%lt%2#0"
      ]
    },
    "2054": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2055": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2057": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "18"
      ]
    },
    "2059": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "2060": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2061": {
      "block": "test_bool_array_after_if_else@10",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2063": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "3"
      ]
    },
    "2065": {
      "op": ">",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "2066": {
      "op": "bz test_bool_array_after_if_else@12",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2069": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2071": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2072": {
      "op": "-",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "2073": {
      "op": "dup",
      "defined_out": [
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "2074": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "array_length#0"
      ]
    },
    "2076": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%3#0",
        "array_length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "aggregate%lt%3#0"
      ]
    },
    "2077": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "2078": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "16"
      ]
    },
    "2080": {
      "op": "+",
      "defined_out": [
        "aggregate%add%3#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%add%3#0"
      ]
    },
    "2081": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%add%3#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%add%3#0",
        "arr#0"
      ]
    },
    "2083": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%3#0"
      ]
    },
    "2084": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%3#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%3#0"
      ]
    },
    "2085": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "2086": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2087": {
      "block": "test_bool_array_after_if_else@12",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "\"g\""
      ]
    },
    "2090": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "2092": {
      "op": "app_global_put",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2093": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length#0 (copy)"
      ]
    },
    "2095": {
      "op": "bz test_bool_array_after_if_else@14",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2098": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "2100": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "1"
      ]
    },
    "2101": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0"
      ]
    },
    "2102": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "2103": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%2#1"
      ]
    },
    "2104": {
      "op": "extract 6 0",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%3#1"
      ]
    },
    "2107": {
      "op": "frame_dig 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%3#1",
        "arr#0"
      ]
    },
    "2109": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "arr#0",
        "tmp%3#1"
      ]
    },
    "2110": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "2112": {
      "op": "dig 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "2114": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "2116": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "2117": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "2118": {
      "op": "setbit",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "2119": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "2120": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "array_length#0",
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "2122": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "result#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%8#1"
      ]
    },
    "2123": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array_length#0",
        "result#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%8#1",
        "8"
      ]
    },
    "2124": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "result#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%9#1"
      ]
    },
    "2125": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_length#0",
        "result#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%9#1",
        "2"
      ]
    },
    "2126": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "result#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%10#1"
      ]
    },
    "2127": {
      "op": "intc_0 // 0"
    },
    "2128": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "0",
        "tmp%10#1"
      ]
    },
    "2129": {
      "op": "substring3",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0"
      ]
    },
    "2130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "result#0",
        "0"
      ]
    },
    "2131": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0"
      ]
    },
    "2132": {
      "op": "frame_dig -1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "length#0 (copy)"
      ]
    },
    "2134": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "length#0 (copy)",
        "1"
      ]
    },
    "2135": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr#0",
        "array_length#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "tmp%20#0"
      ]
    },
    "2136": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "2137": {
      "op": "assert",
      "stack_out": [
        "array_length#0",
        "arr#0",
        "i#0"
      ]
    },
    "2138": {
      "block": "test_bool_array_after_if_else@14",
      "stack_in": [
        "array_length#0",
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "2139": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2142": {
      "op": "bytec_2 // 0x0000"
    },
    "2143": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2144": {
      "block": "test_fixed_size_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2146": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2148": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2149": {
      "op": "bz test_fixed_size_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2152": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2154": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2155": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2156": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#2"
      ]
    },
    "2157": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "i#0"
      ]
    },
    "2158": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "i#0",
        "2"
      ]
    },
    "2159": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ]
    },
    "2160": {
      "op": "dig 1",
      "defined_out": [
        "i#0",
        "i#2",
        "i#2 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "i#2 (copy)"
      ]
    },
    "2162": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2163": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "2164": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2165": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%head%1#0"
      ]
    },
    "2166": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%head%1#0",
        "arr#0"
      ]
    },
    "2168": {
      "op": "dup"
    },
    "2169": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%1#0"
      ]
    },
    "2171": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "arr#0",
        "concat%0#0"
      ]
    },
    "2172": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "arr#0"
      ]
    },
    "2173": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2174": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2175": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2176": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2177": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2178": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2181": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#2",
        "arr#0"
      ]
    },
    "2183": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2185": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2187": {
      "op": "b test_fixed_size_tuple_array_for_header@1"
    },
    "2190": {
      "block": "test_fixed_size_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2192": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2193": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2194": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2195": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)"
      ]
    },
    "2196": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "5"
      ]
    },
    "2198": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "tmp%6#0"
      ]
    },
    "2199": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2200": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "arr#0 (copy)"
      ]
    },
    "2202": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2205": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0 (copy)"
      ]
    },
    "2207": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "2210": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "2211": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "2212": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2213": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "2214": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%encoded_element%0#0",
        "8"
      ]
    },
    "2215": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2216": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2217": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "1"
      ]
    },
    "2218": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "tmp%7#0"
      ]
    },
    "2219": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "aggregate%item1%0#0"
      ]
    },
    "2220": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "aggregate%item1%0#0",
        "2"
      ]
    },
    "2221": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2222": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "2223": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2224": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2225": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "2226": {
      "op": "-",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%11#0"
      ]
    },
    "2227": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%11#0",
        "16"
      ]
    },
    "2229": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "2230": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "2232": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "2233": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "2234": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "0"
      ]
    },
    "2235": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%item0%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "2236": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "2237": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%encoded_element%1#0",
        "8"
      ]
    },
    "2238": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0"
      ]
    },
    "2239": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "2240": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0",
        "5"
      ]
    },
    "2242": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "tmp%12#0"
      ]
    },
    "2243": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "aggregate%item1%1#0"
      ]
    },
    "2244": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "aggregate%item1%1#0",
        "6"
      ]
    },
    "2246": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "2247": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "2248": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2249": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "2251": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0",
        "arr#0"
      ]
    },
    "2254": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2256": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2257": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2258": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2259": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2260": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "2262": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%20#0"
      ]
    },
    "2263": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2264": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "2266": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2269": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0 (copy)"
      ]
    },
    "2271": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "2274": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)"
      ]
    },
    "2275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)",
        "0"
      ]
    },
    "2276": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%item0%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%item0%3#0"
      ]
    },
    "2277": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%3#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "2278": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%3#0",
        "aggregate%encoded_element%2#0",
        "8"
      ]
    },
    "2279": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0"
      ]
    },
    "2280": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "2281": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0",
        "1"
      ]
    },
    "2282": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%3#0",
        "tmp%21#0"
      ]
    },
    "2283": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "aggregate%item1%3#0"
      ]
    },
    "2284": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "aggregate%item1%3#0",
        "2"
      ]
    },
    "2285": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "2286": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%23#0"
      ]
    },
    "2287": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "2288": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2289": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "2290": {
      "op": "-",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%25#0"
      ]
    },
    "2291": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%25#0",
        "16"
      ]
    },
    "2293": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "2294": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0",
        "16"
      ]
    },
    "2296": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "2297": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ]
    },
    "2298": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)",
        "0"
      ]
    },
    "2299": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "aggregate%item0%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%item0%4#0"
      ]
    },
    "2300": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%4#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "2301": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%4#0",
        "aggregate%encoded_element%3#0",
        "8"
      ]
    },
    "2302": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%4#0",
        "aggregate%item1%4#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%4#0",
        "aggregate%item1%4#0"
      ]
    },
    "2303": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%4#0",
        "aggregate%item0%4#0"
      ]
    },
    "2304": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%4#0",
        "aggregate%item0%4#0",
        "4"
      ]
    },
    "2306": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%4#0",
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%4#0",
        "tmp%26#0"
      ]
    },
    "2307": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "aggregate%item1%4#0"
      ]
    },
    "2308": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "aggregate%item1%4#0",
        "5"
      ]
    },
    "2310": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "2311": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%28#0"
      ]
    },
    "2312": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2313": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"c\""
      ]
    },
    "2316": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "2317": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2318": {
      "retsub": true,
      "op": "retsub"
    },
    "2319": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2322": {
      "op": "bytec_2 // 0x0000"
    },
    "2323": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2324": {
      "block": "test_fixed_size_named_tuple_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2326": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2328": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2329": {
      "op": "bz test_fixed_size_named_tuple_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2332": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2334": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2335": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2336": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2337": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "2338": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "2340": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2342": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "2343": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "2"
      ]
    },
    "2344": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "2345": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "2346": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0 (copy)"
      ]
    },
    "2348": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2349": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00"
      ]
    },
    "2350": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0"
      ]
    },
    "2351": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "2353": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "2354": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "2355": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%6#0"
      ]
    },
    "2357": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "2358": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%1#0"
      ]
    },
    "2359": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%1#0",
        "arr#0"
      ]
    },
    "2361": {
      "op": "dup"
    },
    "2362": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%1#0"
      ]
    },
    "2364": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "2365": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "2366": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "2367": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2368": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2369": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2370": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2371": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2374": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "2376": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2378": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "2379": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2380": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2382": {
      "op": "b test_fixed_size_named_tuple_array_for_header@1"
    },
    "2385": {
      "block": "test_fixed_size_named_tuple_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2387": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2388": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2389": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2390": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "2392": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "2393": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2394": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2395": {
      "op": "extract 2 9",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "2398": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "2399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "2400": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0"
      ]
    },
    "2401": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "2403": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "aggregate%encoded_element%0#0 (copy)",
        "64"
      ]
    },
    "2405": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "bar#0"
      ]
    },
    "2406": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "2408": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%encoded_element%0#0",
        "arr#0",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "aggregate%encoded_element%0#0",
        "65"
      ]
    },
    "2410": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "baz#0"
      ]
    },
    "2411": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ]
    },
    "2413": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ]
    },
    "2414": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0"
      ]
    },
    "2415": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "2416": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0"
      ]
    },
    "2417": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2418": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"d\""
      ]
    },
    "2421": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "2422": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "2423": {
      "retsub": true,
      "op": "retsub"
    },
    "2424": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2427": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "aggregate%array_length%1#0"
      ]
    },
    "2428": {
      "op": "bytec_2 // 0x0000"
    },
    "2429": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2430": {
      "block": "test_dynamic_sized_tuple_array_for_header@1",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2432": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2434": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2435": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2438": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2440": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2441": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2442": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2"
      ]
    },
    "2443": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "i#0"
      ]
    },
    "2444": {
      "op": "bzero",
      "defined_out": [
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ]
    },
    "2445": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "2447": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2448": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2449": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "2450": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "2451": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2454": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "i#2 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "i#2 (copy)"
      ]
    },
    "2456": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2457": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2459": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length%0#0"
      ]
    },
    "2460": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2461": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2464": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "2466": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2467": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2468": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "0x000a"
      ]
    },
    "2470": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "2471": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2472": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2473": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0",
        "0x0002"
      ]
    },
    "2475": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%0#0"
      ]
    },
    "2476": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "2477": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2479": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "2480": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%1#0"
      ]
    },
    "2482": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "arr#0"
      ]
    },
    "2485": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2487": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2489": {
      "op": "b test_dynamic_sized_tuple_array_for_header@1"
    },
    "2492": {
      "block": "test_dynamic_sized_tuple_array_after_for@4",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2495": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2496": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2497": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2499": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "2501": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2502": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2503": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2504": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2506": {
      "block": "test_dynamic_sized_tuple_array_for_header@5",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2508": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2510": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "2511": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2514": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2516": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2519": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2521": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2522": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2524": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2525": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2526": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2528": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2529": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2530": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)"
      ]
    },
    "2532": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2533": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2"
      ]
    },
    "2534": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%array_length%1#0"
      ]
    },
    "2536": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2",
        "i#2 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%array_length%1#0",
        "i#2 (copy)"
      ]
    },
    "2538": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0"
      ]
    },
    "2539": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2541": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "2542": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#2 (copy)"
      ]
    },
    "2544": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#2 (copy)",
        "2"
      ]
    },
    "2545": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2546": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2548": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2549": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "2550": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2552": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_offset%0#0"
      ]
    },
    "2553": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2555": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2557": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2559": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0"
      ]
    },
    "2560": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2561": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "2562": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2563": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2565": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "2566": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2567": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2569": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2570": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2572": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2574": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2575": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2578": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2579": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "i#2 (copy)"
      ]
    },
    "2581": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "tmp%8#0"
      ]
    },
    "2582": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0"
      ]
    },
    "2583": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "tmp%9#0"
      ]
    },
    "2584": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%9#0",
        "i#0"
      ]
    },
    "2586": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%10#0"
      ]
    },
    "2587": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2588": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2590": {
      "op": "b test_dynamic_sized_tuple_array_for_header@5"
    },
    "2593": {
      "block": "test_dynamic_sized_tuple_array_after_for@8",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2595": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "arr#0"
      ]
    },
    "2598": {
      "op": "bury 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2600": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2601": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2602": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2603": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2604": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "2606": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "2607": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2608": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "2610": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2613": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2614": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "0"
      ]
    },
    "2615": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2616": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2618": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "2619": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2620": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2622": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2623": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2625": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "2"
      ]
    },
    "2626": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2627": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0 (copy)"
      ]
    },
    "2629": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2630": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%has_next%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2632": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2633": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2635": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0"
      ]
    },
    "2637": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2639": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2640": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2641": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "0"
      ]
    },
    "2642": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0"
      ]
    },
    "2643": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2645": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "2646": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2647": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2649": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2650": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2652": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2654": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2655": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ]
    },
    "2658": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "2659": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0",
        "1"
      ]
    },
    "2660": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "tmp%17#0"
      ]
    },
    "2661": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "tmp%17#0",
        "0"
      ]
    },
    "2662": {
      "op": "bzero",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2663": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%item1%2#0"
      ]
    },
    "2665": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "2666": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%20#0"
      ]
    },
    "2667": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2668": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2670": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)",
        "2"
      ]
    },
    "2671": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2672": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2674": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2675": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2676": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2678": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "1"
      ]
    },
    "2679": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2680": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2682": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "2684": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2685": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2686": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "2687": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2688": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2690": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2691": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2692": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2694": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2695": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2697": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "2698": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2699": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2700": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "0"
      ]
    },
    "2701": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0"
      ]
    },
    "2702": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2704": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0 (copy)",
        "8"
      ]
    },
    "2705": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "2706": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "2708": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "2709": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2711": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "2713": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%6#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%6#0"
      ]
    },
    "2714": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0"
      ]
    },
    "2717": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "2718": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0",
        "4"
      ]
    },
    "2720": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "tmp%23#0"
      ]
    },
    "2721": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "tmp%23#0",
        "3"
      ]
    },
    "2723": {
      "op": "bzero",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2724": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "tmp%24#0",
        "aggregate%item1%3#0"
      ]
    },
    "2726": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "2727": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2728": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2729": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"e\""
      ]
    },
    "2732": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "2733": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2734": {
      "retsub": true,
      "op": "retsub"
    },
    "2735": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2738": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "aggregate%array_length%1#0"
      ]
    },
    "2739": {
      "op": "bytec_2 // 0x0000"
    },
    "2740": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2741": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@1",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2743": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2745": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2746": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2749": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2751": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2752": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2753": {
      "op": "+",
      "defined_out": [
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2"
      ]
    },
    "2754": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "i#0"
      ]
    },
    "2755": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ]
    },
    "2758": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "2760": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2761": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2762": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "2763": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "2764": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2767": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "i#2 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "i#2 (copy)"
      ]
    },
    "2769": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2770": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2772": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length%0#0"
      ]
    },
    "2773": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2774": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2777": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "2779": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2780": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2781": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "0x000a"
      ]
    },
    "2783": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "2784": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2785": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2786": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0",
        "0x0002"
      ]
    },
    "2788": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%0#0"
      ]
    },
    "2789": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "2790": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2792": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "2793": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%1#0"
      ]
    },
    "2795": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "arr#0"
      ]
    },
    "2798": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2800": {
      "op": "frame_bury 2",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2802": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@1"
    },
    "2805": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@4",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2807": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2808": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2809": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2810": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2812": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "2814": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2815": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2816": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2817": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2819": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@5",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2821": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2823": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "2824": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2827": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2829": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2832": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2834": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2835": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2837": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2838": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2839": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2841": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2842": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2843": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)"
      ]
    },
    "2845": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2846": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2"
      ]
    },
    "2847": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%array_length%1#0"
      ]
    },
    "2849": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2",
        "i#2 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%array_length%1#0",
        "i#2 (copy)"
      ]
    },
    "2851": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0"
      ]
    },
    "2852": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2854": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "2855": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#2 (copy)"
      ]
    },
    "2857": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "i#2 (copy)",
        "2"
      ]
    },
    "2858": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2859": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2861": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2862": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "2863": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2865": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_offset%0#0"
      ]
    },
    "2866": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "i#2",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2868": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2870": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2872": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0"
      ]
    },
    "2873": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2874": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%1#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "2875": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2876": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2878": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "2879": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2880": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2882": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2883": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2885": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2887": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2888": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2891": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2892": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "i#2 (copy)"
      ]
    },
    "2894": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "tmp%8#0"
      ]
    },
    "2895": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0"
      ]
    },
    "2896": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "i#0"
      ]
    },
    "2898": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "aggregate%item1%0#0",
        "tmp%9#0"
      ]
    },
    "2901": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#2",
        "tmp%10#0"
      ]
    },
    "2902": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2903": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2905": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@5"
    },
    "2908": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@8",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2910": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "arr#0"
      ]
    },
    "2913": {
      "op": "bury 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2915": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2916": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2917": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2918": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2919": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "2921": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "2922": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2923": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "2925": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2928": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2929": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "0"
      ]
    },
    "2930": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2931": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2933": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "2934": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2935": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2937": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2938": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2940": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "2"
      ]
    },
    "2941": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2942": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0 (copy)"
      ]
    },
    "2944": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2945": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%has_next%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2947": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2948": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2950": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0"
      ]
    },
    "2952": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2954": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2955": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2956": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "0"
      ]
    },
    "2957": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0"
      ]
    },
    "2958": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2960": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "2961": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2962": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "2964": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%3#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2965": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2967": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2969": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2970": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ]
    },
    "2973": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "2974": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0",
        "1"
      ]
    },
    "2975": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%2#0",
        "tmp%17#0"
      ]
    },
    "2976": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "aggregate%item1%2#0"
      ]
    },
    "2977": {
      "op": "bytec_1 // \"\"",
      "defined_out": [
        "\"\"",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "aggregate%item1%2#0",
        "\"\""
      ]
    },
    "2978": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2979": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%19#0"
      ]
    },
    "2980": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2981": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2983": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)",
        "2"
      ]
    },
    "2984": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2985": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2987": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2988": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2989": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2991": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "1"
      ]
    },
    "2992": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2993": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2995": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "2997": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2998": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2999": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "3000": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3001": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "3003": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3004": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3005": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "3007": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3008": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3010": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3011": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3012": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%substring3%5#0 (copy)",
        "0"
      ]
    },
    "3014": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0"
      ]
    },
    "3015": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3017": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0 (copy)",
        "8"
      ]
    },
    "3018": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0"
      ]
    },
    "3019": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%substring3%5#0 (copy)"
      ]
    },
    "3021": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%3#0",
        "aggregate%item0%3#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%5#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "3022": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0",
        "aggregate%substring3%5#0"
      ]
    },
    "3024": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%5#0",
        "aggregate%extract_uint16%3#0",
        "aggregate%len%3#0"
      ]
    },
    "3026": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%substring3%6#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%substring3%6#0"
      ]
    },
    "3027": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0"
      ]
    },
    "3030": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "3031": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0",
        "4"
      ]
    },
    "3033": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "tmp%22#0"
      ]
    },
    "3034": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "aggregate%item1%3#0"
      ]
    },
    "3035": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "aggregate%item1%3#0",
        "\"   \""
      ]
    },
    "3040": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "3041": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "3042": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3043": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"f\""
      ]
    },
    "3046": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "3047": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "3048": {
      "retsub": true,
      "op": "retsub"
    },
    "3049": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_implicit_conversion_log",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3052": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "3054": {
      "op": "log",
      "stack_out": []
    },
    "3055": {
      "retsub": true,
      "op": "retsub"
    },
    "3056": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit",
      "params": {
        "arr#0": "bytes"
      },
      "block": "test_implicit_conversion_emit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "3059": {
      "op": "pushbytes 0xfa40c0530002",
      "defined_out": [
        "0xfa40c0530002"
      ],
      "stack_out": [
        "0xfa40c0530002"
      ]
    },
    "3067": {
      "op": "frame_dig -1",
      "defined_out": [
        "0xfa40c0530002",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "0xfa40c0530002",
        "arr#0 (copy)"
      ]
    },
    "3069": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "3070": {
      "op": "log",
      "stack_out": []
    },
    "3071": {
      "retsub": true,
      "op": "retsub"
    },
    "3072": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array",
      "params": {
        "arr_to_add#0": "uint64",
        "arr#0": "bytes"
      },
      "block": "test_nested_array",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "3075": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0"
      ]
    },
    "3076": {
      "op": "dupn 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0"
      ]
    },
    "3078": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3079": {
      "op": "dupn 5",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0"
      ]
    },
    "3081": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3082": {
      "block": "test_nested_array_for_header@1",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "i#0"
      ]
    },
    "3084": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr_to_add#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "i#0",
        "arr_to_add#0 (copy)"
      ]
    },
    "3086": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3087": {
      "op": "bz test_nested_array_after_for@8",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3090": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extra_arr#0"
      ]
    },
    "3091": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3093": {
      "op": "intc_0 // 0",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0"
      ]
    },
    "3094": {
      "op": "frame_bury 7",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3096": {
      "block": "test_nested_array_for_header@3",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0"
      ]
    },
    "3098": {
      "op": "frame_dig 9",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "i#0"
      ]
    },
    "3100": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "3101": {
      "op": "bz test_nested_array_after_for@6",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3104": {
      "op": "frame_dig 7",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0"
      ]
    },
    "3106": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "j#0",
        "j#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "j#0 (copy)"
      ]
    },
    "3107": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3108": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0"
      ]
    },
    "3110": {
      "op": "dup"
    },
    "3111": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3113": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "extra_arr#0",
        "concat%0#0"
      ]
    },
    "3114": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "extra_arr#0"
      ]
    },
    "3115": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "extra_arr#0",
        "0"
      ]
    },
    "3116": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3117": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3118": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3119": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3120": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3123": {
      "op": "replace2 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "extra_arr#0"
      ]
    },
    "3125": {
      "op": "frame_bury 0",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0"
      ]
    },
    "3127": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0",
        "1"
      ]
    },
    "3128": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "j#0"
      ]
    },
    "3129": {
      "op": "frame_bury 7",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3131": {
      "op": "b test_nested_array_for_header@3"
    },
    "3134": {
      "block": "test_nested_array_after_for@6",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "3136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3137": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0"
      ]
    },
    "3138": {
      "op": "frame_dig -1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "arr#0 (copy)"
      ]
    },
    "3140": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "3143": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x0002"
      ]
    },
    "3145": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x0002",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x0002",
        "extra_arr#0"
      ]
    },
    "3147": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "3148": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%concat%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "3150": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%0#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%concat%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "3151": {
      "op": "uncover 3",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%0#0"
      ]
    },
    "3153": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "arr#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0"
      ]
    },
    "3156": {
      "op": "frame_bury -1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3158": {
      "op": "frame_dig 9",
      "defined_out": [
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "i#0"
      ]
    },
    "3160": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3161": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "i#0"
      ]
    },
    "3162": {
      "op": "frame_bury 9",
      "defined_out": [
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3164": {
      "op": "b test_nested_array_for_header@1"
    },
    "3167": {
      "block": "test_nested_array_after_for@8",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "totals#0"
      ]
    },
    "3168": {
      "op": "frame_bury 2",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3170": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "3172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3173": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3174": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3176": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "3177": {
      "op": "frame_bury 5",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3179": {
      "block": "test_nested_array_for_header@9",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "3181": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3183": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "continue_looping%2#0"
      ]
    },
    "3184": {
      "op": "bz test_nested_array_after_for@12",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3187": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "3189": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3192": {
      "op": "frame_dig 5",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3194": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "3195": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3196": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%0#0",
        "aggregate%item_offset_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3198": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3199": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3200": {
      "op": "dup2",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_offset%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset%0#0 (copy)"
      ]
    },
    "3201": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0"
      ]
    },
    "3202": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "3203": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "3204": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "3205": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%0#0",
        "aggregate%item_head_tail_length%0#0",
        "aggregate%item_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "3206": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "3207": {
      "op": "dup",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0",
        "inner_arr#0"
      ]
    },
    "3208": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "3210": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0",
        "total#0"
      ]
    },
    "3211": {
      "op": "frame_bury 8",
      "defined_out": [
        "aggregate%array_length%0#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "3213": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0",
        "0"
      ]
    },
    "3214": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3215": {
      "op": "frame_bury 4",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3"
      ]
    },
    "3218": {
      "op": "frame_bury 6",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3220": {
      "block": "test_nested_array_for_header@14",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3"
      ]
    },
    "3222": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "aggregate%array_length%1#0"
      ]
    },
    "3224": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%1#0",
        "continue_looping%0#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3225": {
      "op": "bz test_nested_array_after_for@16",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3228": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_length%1#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "inner_arr#0"
      ]
    },
    "3230": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3233": {
      "op": "frame_dig 6",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3"
      ]
    },
    "3235": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "item_index_internal%0#3 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)",
        "item_index_internal%0#3 (copy)"
      ]
    },
    "3236": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)"
      ]
    },
    "3238": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "item_index_internal%0#3 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)",
        "8"
      ]
    },
    "3239": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3240": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "i#0"
      ]
    },
    "3241": {
      "op": "frame_dig 8",
      "defined_out": [
        "aggregate%array_length%1#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "i#0",
        "total#0"
      ]
    },
    "3243": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "total#0"
      ]
    },
    "3244": {
      "op": "frame_bury 8",
      "defined_out": [
        "aggregate%array_length%1#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3"
      ]
    },
    "3246": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3",
        "1"
      ]
    },
    "3247": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#3"
      ]
    },
    "3248": {
      "op": "frame_bury 6",
      "defined_out": [
        "aggregate%array_length%1#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3250": {
      "op": "b test_nested_array_for_header@14"
    },
    "3253": {
      "block": "test_nested_array_after_for@16",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "total#0"
      ]
    },
    "3255": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3256": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "totals#0"
      ]
    },
    "3258": {
      "op": "dup"
    },
    "3259": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0",
        "totals#0",
        "totals#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "totals#0",
        "totals#0 (copy)",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3261": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "totals#0",
        "concat%1#0"
      ]
    },
    "3262": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "totals#0"
      ]
    },
    "3263": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "totals#0",
        "0"
      ]
    },
    "3264": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%2#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%2#0"
      ]
    },
    "3265": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%1#0",
        "extract_uint16%2#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "3266": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "3267": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "3268": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "3271": {
      "op": "replace2 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "totals#0"
      ]
    },
    "3273": {
      "op": "frame_bury 2",
      "defined_out": [
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3275": {
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "3277": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "3278": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "3279": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ]
    },
    "3281": {
      "op": "b test_nested_array_for_header@9"
    },
    "3284": {
      "block": "test_nested_array_after_for@12",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "i#0",
        "totals#0"
      ]
    },
    "3286": {
      "op": "frame_bury 0"
    },
    "3288": {
      "retsub": true,
      "op": "retsub"
    },
    "3289": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "3292": {
      "op": "bytec_2 // 0x0000"
    },
    "3293": {
      "op": "dupn 3"
    },
    "3295": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3296": {
      "block": "test_bit_packed_tuples_for_header@1",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3298": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "3300": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3301": {
      "op": "bz test_bit_packed_tuples_after_for@4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3304": {
      "op": "frame_dig 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3306": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3307": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "3308": {
      "op": "dig 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "i#0 (copy)"
      ]
    },
    "3310": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3311": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "3312": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "0x00"
      ]
    },
    "3313": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "0x00",
        "0"
      ]
    },
    "3314": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "0x00",
        "0",
        "tmp%8#0"
      ]
    },
    "3316": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "3317": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "3318": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%9#0"
      ]
    },
    "3320": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3321": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0"
      ]
    },
    "3323": {
      "op": "dup",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "arr2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "3324": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)"
      ]
    },
    "3326": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%set_bit%0#0 (copy)",
        "arr2#0",
        "arr2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)",
        "aggregate%set_bit%0#0 (copy)"
      ]
    },
    "3328": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "concat%0#0"
      ]
    },
    "3329": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "arr2#0"
      ]
    },
    "3331": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "3332": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3333": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3334": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3335": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3336": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3339": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0"
      ]
    },
    "3341": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3343": {
      "op": "dig 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "i#0 (copy)"
      ]
    },
    "3345": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3346": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0"
      ]
    },
    "3347": {
      "op": "dig 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "i#0 (copy)"
      ]
    },
    "3349": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "3351": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "3352": {
      "op": "dig 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "i#0 (copy)"
      ]
    },
    "3354": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "3356": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "3357": {
      "op": "dig 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "i#0 (copy)"
      ]
    },
    "3359": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "3361": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "3362": {
      "op": "dig 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "i#0 (copy)"
      ]
    },
    "3364": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "3366": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "3367": {
      "op": "dig 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0 (copy)"
      ]
    },
    "3369": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "3370": {
      "op": "+",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2"
      ]
    },
    "3371": {
      "op": "dig 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "i#0 (copy)"
      ]
    },
    "3373": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3374": {
      "op": "uncover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "3376": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0",
        "2"
      ]
    },
    "3377": {
      "op": "uncover 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0",
        "2",
        "tmp%13#0"
      ]
    },
    "3379": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%2#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "3380": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0",
        "3"
      ]
    },
    "3382": {
      "op": "uncover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0",
        "3",
        "tmp%14#0"
      ]
    },
    "3384": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%3#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "3385": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0",
        "4"
      ]
    },
    "3387": {
      "op": "uncover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0",
        "4",
        "tmp%15#0"
      ]
    },
    "3389": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%4#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0"
      ]
    },
    "3390": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0",
        "5"
      ]
    },
    "3392": {
      "op": "uncover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0",
        "5",
        "tmp%16#0"
      ]
    },
    "3394": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%5#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0"
      ]
    },
    "3395": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%17#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0",
        "6"
      ]
    },
    "3397": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0",
        "6",
        "tmp%17#0"
      ]
    },
    "3399": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "3400": {
      "op": "dup2",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%set_bit%6#0 (copy)",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "aggregate%set_bit%6#0 (copy)"
      ]
    },
    "3401": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0"
      ]
    },
    "3402": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "i#2",
        "i#2 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0",
        "i#2 (copy)"
      ]
    },
    "3404": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3405": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%3#0"
      ]
    },
    "3406": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "3408": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%4#0"
      ]
    },
    "3409": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%4#0",
        "arr7#0"
      ]
    },
    "3411": {
      "op": "dup"
    },
    "3412": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0",
        "arr7#0 (copy)",
        "aggregate%head%4#0"
      ]
    },
    "3414": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0",
        "concat%1#0"
      ]
    },
    "3415": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "arr7#0"
      ]
    },
    "3416": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "arr7#0",
        "0"
      ]
    },
    "3417": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "3418": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "3419": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "3420": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "3421": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "3424": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0"
      ]
    },
    "3426": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3428": {
      "op": "dig 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "i#0 (copy)"
      ]
    },
    "3430": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "3432": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%27#0"
      ]
    },
    "3433": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%27#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "3435": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%27#0",
        "aggregate%set_bit%6#0",
        "7"
      ]
    },
    "3437": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%6#0",
        "7",
        "tmp%27#0"
      ]
    },
    "3439": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%13#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "3440": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%13#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3442": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "3443": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0"
      ]
    },
    "3444": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)"
      ]
    },
    "3445": {
      "op": "dig 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "3447": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%8#0"
      ]
    },
    "3448": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "arr8#0"
      ]
    },
    "3450": {
      "op": "dup"
    },
    "3451": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "aggregate%head%8#0"
      ]
    },
    "3453": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0",
        "concat%2#0"
      ]
    },
    "3454": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "arr8#0"
      ]
    },
    "3455": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "arr8#0",
        "0"
      ]
    },
    "3456": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "3457": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "3458": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "3459": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concat%2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "3460": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "3463": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0"
      ]
    },
    "3465": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0"
      ]
    },
    "3467": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "i#0"
      ]
    },
    "3469": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "i#0",
        "8"
      ]
    },
    "3470": {
      "op": "==",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%38#0"
      ]
    },
    "3471": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%38#0",
        "0x00"
      ]
    },
    "3472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%38#0",
        "0x00",
        "0"
      ]
    },
    "3473": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "0x00",
        "0",
        "tmp%38#0"
      ]
    },
    "3475": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%4#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%encoded_bool%4#0"
      ]
    },
    "3476": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%12#0"
      ]
    },
    "3477": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3478": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%head%13#0"
      ]
    },
    "3479": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "aggregate%head%13#0",
        "arr9#0"
      ]
    },
    "3481": {
      "op": "dup"
    },
    "3482": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "arr9#0",
        "arr9#0 (copy)",
        "aggregate%head%13#0"
      ]
    },
    "3484": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "arr9#0",
        "concat%3#0"
      ]
    },
    "3485": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "arr9#0"
      ]
    },
    "3486": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "arr9#0",
        "0"
      ]
    },
    "3487": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "3488": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "3489": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "3490": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concat%3#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "3491": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "3494": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#2",
        "arr9#0"
      ]
    },
    "3496": {
      "op": "frame_bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3498": {
      "op": "frame_bury 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3500": {
      "op": "b test_bit_packed_tuples_for_header@1"
    },
    "3503": {
      "block": "test_bit_packed_tuples_after_for@4",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3505": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "3506": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "3507": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "3508": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%4#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "aggregate%array_length%4#0",
        "5"
      ]
    },
    "3510": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%42#0"
      ]
    },
    "3511": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3512": {
      "op": "frame_dig 1",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3514": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "3515": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "3516": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3517": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "aggregate%array_length%5#0",
        "5"
      ]
    },
    "3519": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ]
    },
    "3520": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3521": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3523": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "3524": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "3525": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "aggregate%array_length%6#0"
      ]
    },
    "3526": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "aggregate%array_length%6#0",
        "5"
      ]
    },
    "3528": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ]
    },
    "3529": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3530": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3532": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "3533": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "3534": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "aggregate%array_length%7#0"
      ]
    },
    "3535": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "aggregate%array_length%7#0",
        "5"
      ]
    },
    "3537": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ]
    },
    "3538": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3539": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "3546": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "3548": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3549": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "3556": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "3558": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3559": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "3566": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "3568": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "3569": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "3576": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "3577": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3578": {
      "retsub": true,
      "op": "retsub"
    },
    "3579": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues",
      "params": {
        "arr1#0": "bytes",
        "arr2#0": "bytes",
        "arr3#0": "bytes",
        "arr4#0": "bytes"
      },
      "block": "sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "proto 4 4"
    },
    "3582": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "aggregate%array_length%1#0"
      ]
    },
    "3583": {
      "op": "dupn 8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0"
      ]
    },
    "3585": {
      "op": "intc_0 // 0"
    },
    "3586": {
      "op": "dupn 3"
    },
    "3588": {
      "op": "frame_dig -4"
    },
    "3590": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0 (copy)",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "arr1#0 (copy)",
        "0"
      ]
    },
    "3591": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3592": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3593": {
      "block": "sum_uints_and_lengths_and_trues_for_header@1",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 14",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3595": {
      "op": "frame_dig 13",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3597": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "3598": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3601": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr1#0 (copy)"
      ]
    },
    "3603": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3606": {
      "op": "frame_dig 14",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3608": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "3609": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "3611": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "3612": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3613": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%0#0",
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "3614": {
      "op": "frame_dig 12",
      "defined_out": [
        "aggregate%array_length%0#0",
        "i#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "i#0",
        "sum1#0"
      ]
    },
    "3616": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "3617": {
      "op": "frame_bury 12",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3619": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "3620": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3621": {
      "op": "frame_bury 14",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3623": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@1"
    },
    "3626": {
      "block": "sum_uints_and_lengths_and_trues_after_for@4",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)"
      ]
    },
    "3628": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "3629": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3630": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_length%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3632": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3633": {
      "op": "frame_bury 4",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3635": {
      "block": "sum_uints_and_lengths_and_trues_for_header@5",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3637": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3639": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "3640": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@10",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3643": {
      "op": "frame_dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3645": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "16"
      ]
    },
    "3647": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0"
      ]
    },
    "3648": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%add%0#0",
        "aggregate%array_length%1#0",
        "arr2#0 (copy)",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%add%0#0",
        "arr2#0 (copy)"
      ]
    },
    "3650": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr2#0 (copy)",
        "aggregate%add%0#0"
      ]
    },
    "3651": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%1#0",
        "b#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "3652": {
      "op": "frame_dig 11",
      "defined_out": [
        "aggregate%array_length%1#0",
        "b#0",
        "item_index_internal%1#0",
        "sum2#10"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "b#0",
        "sum2#10"
      ]
    },
    "3654": {
      "op": "frame_bury 6",
      "defined_out": [
        "aggregate%array_length%1#0",
        "b#0",
        "item_index_internal%1#0",
        "sum2#10"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "3656": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3659": {
      "op": "frame_dig 11",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "sum2#0",
        "sum2#10"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "3661": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0",
        "1"
      ]
    },
    "3662": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum2#10"
      ]
    },
    "3663": {
      "op": "frame_bury 6",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3665": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@8",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum2#0"
      ]
    },
    "3667": {
      "op": "frame_bury 11",
      "defined_out": [
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3669": {
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3671": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "3672": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3673": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3675": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@5"
    },
    "3678": {
      "block": "sum_uints_and_lengths_and_trues_after_for@10",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "3680": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)",
        "0"
      ]
    },
    "3681": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3682": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%array_length%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3684": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3685": {
      "op": "frame_bury 5",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3687": {
      "block": "sum_uints_and_lengths_and_trues_for_header@11",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3689": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3691": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%2#0"
      ]
    },
    "3692": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@18",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3695": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr3#0 (copy)"
      ]
    },
    "3697": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "3700": {
      "op": "frame_dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ]
    },
    "3702": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0",
        "9"
      ]
    },
    "3704": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "3705": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "9"
      ]
    },
    "3707": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "3708": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "3709": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "0"
      ]
    },
    "3710": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "item_index_internal%2#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0"
      ]
    },
    "3711": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "3713": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "item_index_internal%2#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "aggregate%encoded_element%1#0 (copy)",
        "64"
      ]
    },
    "3715": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "tup.bar#0"
      ]
    },
    "3716": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "3718": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "aggregate%encoded_element%1#0",
        "65"
      ]
    },
    "3720": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "tup.baz#0"
      ]
    },
    "3721": {
      "op": "frame_bury 8",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "tup.bar#0"
      ]
    },
    "3723": {
      "op": "frame_dig 10",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "3725": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0",
        "tup.foo#0"
      ]
    },
    "3727": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "3728": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#0",
        "sum3#0"
      ]
    },
    "3729": {
      "op": "frame_bury 10",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#15",
        "tup.bar#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0",
        "sum3#15"
      ]
    },
    "3731": {
      "op": "frame_bury 7",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0",
        "sum3#0",
        "sum3#15",
        "tup.bar#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.bar#0"
      ]
    },
    "3733": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3736": {
      "op": "frame_dig 10",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "3738": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "3739": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "3740": {
      "op": "frame_bury 7",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3742": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@14",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "3744": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "sum3#0"
      ]
    },
    "3745": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "3747": {
      "op": "frame_bury 7",
      "defined_out": [
        "sum3#0",
        "sum3#15"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3749": {
      "op": "frame_dig 8",
      "defined_out": [
        "sum3#0",
        "sum3#15",
        "tup.baz#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "tup.baz#0"
      ]
    },
    "3751": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3754": {
      "op": "frame_dig 10",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "3756": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0",
        "1"
      ]
    },
    "3757": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#15"
      ]
    },
    "3758": {
      "op": "frame_bury 7",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3760": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@16",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum3#0"
      ]
    },
    "3762": {
      "op": "frame_bury 10",
      "defined_out": [
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3764": {
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3766": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%2#0",
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0",
        "1"
      ]
    },
    "3767": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3768": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%2#0",
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3770": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@11"
    },
    "3773": {
      "block": "sum_uints_and_lengths_and_trues_after_for@18",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "3775": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "3776": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3777": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_length%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3779": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0"
      ]
    },
    "3780": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3782": {
      "block": "sum_uints_and_lengths_and_trues_for_header@19",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0"
      ]
    },
    "3784": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3786": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%3#0",
        "continue_looping%3#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%3#0"
      ]
    },
    "3787": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@22",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3790": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr4#0 (copy)",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "arr4#0 (copy)"
      ]
    },
    "3792": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3795": {
      "op": "frame_dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "idx#0"
      ]
    },
    "3797": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%array_head_and_tail%0#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "3798": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "idx#0 (copy)"
      ]
    },
    "3800": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "3801": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3802": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3804": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "3805": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3806": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "idx#0 (copy)"
      ]
    },
    "3808": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%0#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "idx#0 (copy)",
        "1"
      ]
    },
    "3809": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3810": {
      "op": "frame_dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3812": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3814": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3815": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3817": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3818": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3820": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)",
        "2"
      ]
    },
    "3821": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3822": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "3824": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3825": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3826": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3828": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3829": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "3831": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "3833": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3835": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3836": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "3837": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "3838": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0"
      ]
    },
    "3839": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "3841": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "3842": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "3843": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "3845": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3846": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3848": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3850": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%1#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%1#0"
      ]
    },
    "3851": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.foo#0",
        "dyn_tup.bar#0"
      ]
    },
    "3854": {
      "op": "frame_dig 9",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.foo#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "3856": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "dyn_tup.foo#0"
      ]
    },
    "3858": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "3859": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "sum4#0",
        "dyn_tup.bar#0"
      ]
    },
    "3860": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "sum4#0",
        "tmp%6#0"
      ]
    },
    "3861": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "tmp%6#0",
        "sum4#0"
      ]
    },
    "3862": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "tmp%6#0",
        "sum4#0",
        "tmp%6#0 (copy)"
      ]
    },
    "3864": {
      "op": "+",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "tmp%6#0",
        "sum4#0"
      ]
    },
    "3865": {
      "op": "frame_bury 9",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0",
        "aggregate%next_index%0#0",
        "tmp%6#0"
      ]
    },
    "3867": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%next_index%0#0",
        "tmp%6#0",
        "idx#0"
      ]
    },
    "3869": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "idx#0",
        "sum4#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "aggregate%next_index%0#0",
        "tmp%9#0"
      ]
    },
    "3870": {
      "error": "expected string length to match index",
      "op": "assert // expected string length to match index",
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "idx#0"
      ]
    },
    "3871": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3873": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@19"
    },
    "3876": {
      "block": "sum_uints_and_lengths_and_trues_after_for@22",
      "stack_in": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "sum1#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "3878": {
      "op": "frame_dig 11",
      "defined_out": [
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0"
      ]
    },
    "3880": {
      "op": "frame_dig 10",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ]
    },
    "3882": {
      "op": "frame_dig 9",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "idx#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum2#10",
        "sum3#15",
        "tup.baz#0",
        "sum4#0",
        "sum3#0",
        "sum2#0",
        "sum1#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ]
    },
    "3884": {
      "op": "frame_bury 3"
    },
    "3886": {
      "op": "frame_bury 2"
    },
    "3888": {
      "op": "frame_bury 1"
    },
    "3890": {
      "op": "frame_bury 0"
    },
    "3892": {
      "retsub": true,
      "op": "retsub"
    },
    "3893": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_uint64_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3896": {
      "op": "pushbytes 0x0003000000000000000100000000000000020000000000000003"
    },
    "3924": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3925": {
      "block": "test_uint64_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3927": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "3929": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3930": {
      "op": "bz test_uint64_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3933": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3935": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3936": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3937": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%3#0",
        "arr#0"
      ]
    },
    "3939": {
      "op": "dup"
    },
    "3940": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3942": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3943": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3944": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3945": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3946": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3947": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3948": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3949": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3952": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3954": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3956": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3957": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3958": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3960": {
      "op": "b test_uint64_return_for_header@1"
    },
    "3963": {
      "block": "test_uint64_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "3964": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_bool_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3967": {
      "op": "pushbytes 0x0005a8"
    },
    "3972": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3973": {
      "block": "test_bool_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3975": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "3977": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3978": {
      "op": "bz test_bool_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "3981": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3983": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3984": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3985": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "3986": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "3987": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "0x00"
      ]
    },
    "3988": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "0x00",
        "0"
      ]
    },
    "3989": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "3991": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3992": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%1#0",
        "arr#0"
      ]
    },
    "3994": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3995": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "3996": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "aggregate%encoded_bool%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "8"
      ]
    },
    "3997": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "4000": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4002": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4003": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4004": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4006": {
      "op": "b test_bool_return_for_header@1"
    },
    "4009": {
      "block": "test_bool_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4010": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4013": {
      "op": "pushbytes 0x0001000000000000000080"
    },
    "4026": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4027": {
      "block": "test_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4029": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "4031": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4032": {
      "op": "bz test_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4035": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4037": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4038": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4039": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "4040": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "4041": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "i#0 (copy)"
      ]
    },
    "4043": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "4045": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "4046": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "4047": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "4049": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4050": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0",
        "0x00"
      ]
    },
    "4051": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0",
        "0x00",
        "0"
      ]
    },
    "4052": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "4054": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "4055": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "4056": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%3#0"
      ]
    },
    "4058": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%1#0",
        "aggregate%val_as_bytes%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "4059": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%4#0"
      ]
    },
    "4060": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%head%4#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%4#0",
        "arr#0"
      ]
    },
    "4062": {
      "op": "dup"
    },
    "4063": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%4#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%4#0"
      ]
    },
    "4065": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "4066": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "4067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "4068": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4069": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "4070": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "4071": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "4072": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4075": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "4077": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4079": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4080": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4081": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4083": {
      "op": "b test_tuple_return_for_header@1"
    },
    "4086": {
      "block": "test_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4087": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return",
      "params": {
        "append#0": "uint64"
      },
      "block": "test_dynamic_tuple_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4090": {
      "op": "pushbytes 0x000100020000000000000000000a000548656c6c6f"
    },
    "4113": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4114": {
      "block": "test_dynamic_tuple_return_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4116": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "4118": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4119": {
      "op": "bz test_dynamic_tuple_return_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4122": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4124": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4125": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "4128": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "arr#0"
      ]
    },
    "4130": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "4131": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "4132": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "4133": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "4134": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4137": {
      "op": "dig 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "i#0 (copy)"
      ]
    },
    "4139": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4140": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4142": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length%1#0"
      ]
    },
    "4143": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "4144": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "4147": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#0"
      ]
    },
    "4149": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "4150": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4151": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "0x000a"
      ]
    },
    "4153": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "4154": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "4155": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%2#0"
      ]
    },
    "4156": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%2#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%2#0",
        "0x0002"
      ]
    },
    "4158": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%2#0"
      ]
    },
    "4159": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%3#0"
      ]
    },
    "4160": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%concat%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4162": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%3#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%concat%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "4163": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%3#0"
      ]
    },
    "4165": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "4168": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4170": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4171": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "4172": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "4174": {
      "op": "b test_dynamic_tuple_return_for_header@1"
    },
    "4177": {
      "block": "test_dynamic_tuple_return_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "4178": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back",
      "params": {
        "arr#0": "bytes",
        "append#0": "uint64"
      },
      "block": "test_convert_to_array_and_back",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4181": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "4183": {
      "op": "extract 2 0",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "slot%0"
      ]
    },
    "4186": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "4187": {
      "block": "test_convert_to_array_and_back_for_header@1",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4189": {
      "op": "frame_dig -1",
      "defined_out": [
        "append#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "append#0 (copy)"
      ]
    },
    "4191": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4192": {
      "op": "bz test_convert_to_array_and_back_after_for@4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "4195": {
      "op": "frame_dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4197": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4198": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4199": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "4200": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "4201": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "i#0 (copy)"
      ]
    },
    "4203": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "4205": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "4206": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "4207": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "slot_contents%1#0"
      ]
    },
    "4209": {
      "op": "cover 3",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "4211": {
      "op": "dig 2",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "4213": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4214": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0",
        "0x00"
      ]
    },
    "4215": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0"
      ]
    },
    "4216": {
      "op": "uncover 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0",
        "tmp%1#0"
      ]
    },
    "4218": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "4219": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "4220": {
      "op": "uncover 3",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%3#0"
      ]
    },
    "4222": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "4223": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%head%1#0"
      ]
    },
    "4224": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%head%1#0",
        "slot_contents%1#0"
      ]
    },
    "4226": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%head%1#0"
      ]
    },
    "4227": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "4228": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4230": {
      "op": "intc_1 // 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4231": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4232": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "4234": {
      "op": "b test_convert_to_array_and_back_for_header@1"
    },
    "4237": {
      "block": "test_convert_to_array_and_back_after_for@4",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "4239": {
      "op": "dup",
      "defined_out": [
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "4240": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "4241": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%bytes_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0",
        "9"
      ]
    },
    "4243": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%array_len%0#0"
      ]
    },
    "4244": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "as_bytes%0#0"
      ]
    },
    "4245": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4248": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ]
    },
    "4249": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "converted_array%0#0"
      ]
    },
    "4250": {
      "op": "frame_bury 0"
    },
    "4252": {
      "retsub": true,
      "op": "retsub"
    },
    "4253": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4256": {
      "op": "bytec 8 // 0x000200000000000000010000000000000002",
      "defined_out": [
        "0x000200000000000000010000000000000002"
      ],
      "stack_out": [
        "0x000200000000000000010000000000000002"
      ]
    },
    "4258": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x000200000000000000010000000000000002",
        "arg#0 (copy)"
      ],
      "stack_out": [
        "0x000200000000000000010000000000000002",
        "arg#0 (copy)"
      ]
    },
    "4260": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "4261": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ],
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "4262": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4265": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0"
      ]
    },
    "4266": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0",
        "8"
      ]
    },
    "4267": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "4268": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "4269": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4272": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4274": {
      "retsub": true,
      "op": "retsub"
    },
    "4275": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4278": {
      "op": "frame_dig -2",
      "defined_out": [
        "arg.0#0 (copy)"
      ],
      "stack_out": [
        "arg.0#0 (copy)"
      ]
    },
    "4280": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg.0#0 (copy)",
        "arg.1#0 (copy)"
      ],
      "stack_out": [
        "arg.0#0 (copy)",
        "arg.1#0 (copy)"
      ]
    },
    "4282": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "4283": {
      "op": "bytec 8 // 0x000200000000000000010000000000000002",
      "defined_out": [
        "0x000200000000000000010000000000000002",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0",
        "0x000200000000000000010000000000000002"
      ]
    },
    "4285": {
      "op": "swap",
      "stack_out": [
        "0x000200000000000000010000000000000002",
        "aggregate%head%3#0"
      ]
    },
    "4286": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "4287": {
      "op": "pushbytes 0x0004",
      "defined_out": [
        "0x0004",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "0x0004"
      ]
    },
    "4291": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4293": {
      "retsub": true,
      "op": "retsub"
    },
    "4294": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple",
      "params": {
        "arg#0": "bytes"
      },
      "block": "test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4297": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg#0 (copy)"
      ],
      "stack_out": [
        "arg#0 (copy)"
      ]
    },
    "4299": {
      "op": "len",
      "defined_out": [
        "total_length%0#0"
      ],
      "stack_out": [
        "total_length%0#0"
      ]
    },
    "4300": {
      "op": "frame_dig -1",
      "stack_out": [
        "total_length%0#0",
        "arg#0 (copy)"
      ]
    },
    "4302": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arg#0 (copy)",
        "total_length%0#0"
      ],
      "stack_out": [
        "total_length%0#0",
        "arg#0 (copy)",
        "4"
      ]
    },
    "4304": {
      "op": "uncover 2",
      "stack_out": [
        "arg#0 (copy)",
        "4",
        "total_length%0#0"
      ]
    },
    "4306": {
      "op": "substring3",
      "defined_out": [
        "data%0#0"
      ],
      "stack_out": [
        "data%0#0"
      ]
    },
    "4307": {
      "op": "bytec 9 // 0x000200040007000161000162",
      "defined_out": [
        "0x000200040007000161000162",
        "data%0#0"
      ],
      "stack_out": [
        "data%0#0",
        "0x000200040007000161000162"
      ]
    },
    "4309": {
      "op": "swap",
      "stack_out": [
        "0x000200040007000161000162",
        "data%0#0"
      ]
    },
    "4310": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0x000200040007000161000162",
        "2",
        "data%0#0"
      ],
      "stack_out": [
        "0x000200040007000161000162",
        "data%0#0",
        "2"
      ]
    },
    "4311": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4314": {
      "retsub": true,
      "op": "retsub"
    },
    "4315": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple",
      "params": {
        "arg.0#0": "bytes",
        "arg.1#0": "bytes"
      },
      "block": "test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4318": {
      "op": "frame_dig -2",
      "defined_out": [
        "arg.0#0 (copy)"
      ],
      "stack_out": [
        "arg.0#0 (copy)"
      ]
    },
    "4320": {
      "op": "frame_dig -1",
      "defined_out": [
        "arg.0#0 (copy)",
        "arg.1#0 (copy)"
      ],
      "stack_out": [
        "arg.0#0 (copy)",
        "arg.1#0 (copy)"
      ]
    },
    "4322": {
      "op": "concat",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0"
      ]
    },
    "4323": {
      "op": "bytec 9 // 0x000200040007000161000162",
      "defined_out": [
        "0x000200040007000161000162",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "0x000200040007000161000162"
      ]
    },
    "4325": {
      "op": "swap",
      "stack_out": [
        "0x000200040007000161000162",
        "concat%1#0"
      ]
    },
    "4326": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0x000200040007000161000162",
        "2",
        "concat%1#0"
      ],
      "stack_out": [
        "0x000200040007000161000162",
        "concat%1#0",
        "2"
      ]
    },
    "4327": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4330": {
      "retsub": true,
      "op": "retsub"
    },
    "4331": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic",
      "params": {
        "imm1#0": "bytes",
        "imm2#0": "bytes"
      },
      "block": "test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "4334": {
      "op": "frame_dig -2",
      "defined_out": [
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)"
      ]
    },
    "4336": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "imm1#0 (copy)",
        "0"
      ]
    },
    "4337": {
      "op": "extract_uint16",
      "defined_out": [
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0"
      ]
    },
    "4338": {
      "op": "frame_dig -2",
      "stack_out": [
        "extract_uint16%0#0",
        "imm1#0 (copy)"
      ]
    },
    "4340": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4343": {
      "op": "frame_dig -1",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "imm2#0 (copy)"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "imm2#0 (copy)"
      ]
    },
    "4345": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0"
      ]
    },
    "4348": {
      "op": "frame_dig -1",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)"
      ]
    },
    "4350": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "imm2#0 (copy)",
        "0"
      ]
    },
    "4351": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4352": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%0#0",
        "extract_to_end%1#0",
        "aggregate%array_length%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4354": {
      "op": "uncover 3",
      "stack_out": [
        "extract_to_end%1#0",
        "aggregate%array_length%0#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4356": {
      "op": "uncover 2",
      "stack_out": [
        "extract_to_end%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4358": {
      "op": "uncover 3",
      "stack_out": [
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%array_length%0#0",
        "extract_to_end%1#0"
      ]
    },
    "4360": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ],
      "stack_out": [
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#0"
      ]
    },
    "4363": {
      "retsub": true,
      "op": "retsub"
    },
    "4364": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4",
      "params": {
        "imm#0": "bytes"
      },
      "block": "test_immutable_arc4",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "4367": {
      "op": "frame_dig -1",
      "defined_out": [
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "4369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0 (copy)",
        "0"
      ]
    },
    "4370": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%0#0"
      ]
    },
    "4371": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "4372": {
      "error": "expected non empty array",
      "op": "assert // expected non empty array",
      "stack_out": [
        "aggregate%array_length%0#0"
      ]
    },
    "4373": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0"
      ],
      "stack_out": [
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "4374": {
      "op": "-",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "4375": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "imm#0 (copy)"
      ]
    },
    "4377": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "4380": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "tmp%3#0"
      ]
    },
    "4381": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%encoded_element%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "tmp%3#0",
        "16"
      ]
    },
    "4383": {
      "op": "*",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4384": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "4385": {
      "op": "+",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4386": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "imm#0 (copy)"
      ]
    },
    "4388": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%0#0",
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4389": {
      "op": "uncover 2",
      "stack_out": [
        "imm#0 (copy)",
        "aggregate%write_offset_with_length_header%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "4391": {
      "op": "replace3",
      "defined_out": [
        "imm#0"
      ],
      "stack_out": [
        "imm#0"
      ]
    },
    "4392": {
      "op": "dup"
    },
    "4393": {
      "op": "frame_bury -1",
      "stack_out": [
        "imm#0 (copy)"
      ]
    },
    "4395": {
      "retsub": true,
      "op": "retsub"
    },
    "4396": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr",
      "params": {},
      "block": "test_imm_fixed_arr",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "4399": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "item_index_internal%0#0"
      ]
    },
    "4400": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "48"
      ]
    },
    "4402": {
      "op": "bzero",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0"
      ]
    },
    "4403": {
      "op": "dup",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0"
      ]
    },
    "4404": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0"
      ]
    },
    "4406": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#0",
        "1"
      ]
    },
    "4407": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0"
      ]
    },
    "4408": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4410": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "4411": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "4412": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "tmp%2#0"
      ]
    },
    "4413": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4414": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%4#0"
      ]
    },
    "4415": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4416": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "4417": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0",
        "struct12#0"
      ]
    },
    "4418": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "4420": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ]
    },
    "4421": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)",
        "struct12#0 (copy)"
      ]
    },
    "4423": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0"
      ]
    },
    "4424": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "aggregate%head%3#0",
        "struct12#0"
      ]
    },
    "4425": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4426": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0",
        "arr2#0"
      ]
    },
    "4427": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4429": {
      "op": "!=",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "tmp%6#0"
      ]
    },
    "4430": {
      "error": "expected arrays to be different",
      "op": "assert // expected arrays to be different",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "4431": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4432": {
      "block": "test_imm_fixed_arr_for_header@1",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4434": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "4436": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4437": {
      "op": "bz test_imm_fixed_arr_after_for@4",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4440": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4442": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4443": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "16"
      ]
    },
    "4445": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4446": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "aggregate%write_offset%0#0",
        "arr1#0"
      ]
    },
    "4448": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4449": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0",
        "struct12#0"
      ]
    },
    "4451": {
      "op": "replace3",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4452": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4454": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4455": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4456": {
      "op": "frame_bury 4",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4458": {
      "op": "b test_imm_fixed_arr_for_header@1"
    },
    "4461": {
      "block": "test_imm_fixed_arr_after_for@4",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4463": {
      "op": "frame_dig 3",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4465": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "4466": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4467": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4468": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4470": {
      "block": "test_imm_fixed_arr_for_header@5",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4472": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "4474": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "4475": {
      "op": "bz test_imm_fixed_arr_after_for@8",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4478": {
      "op": "frame_dig 0",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4480": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "4481": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "4483": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4484": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%1#0",
        "arr1#0"
      ]
    },
    "4486": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4487": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "4489": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ]
    },
    "4490": {
      "op": "frame_dig 2",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "struct_it#0",
        "struct12#0"
      ]
    },
    "4492": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%9#0"
      ]
    },
    "4493": {
      "error": "expected items on iteration to be the same",
      "op": "assert // expected items on iteration to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4494": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4495": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4496": {
      "op": "frame_bury 0",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4498": {
      "op": "b test_imm_fixed_arr_for_header@5"
    },
    "4501": {
      "block": "test_imm_fixed_arr_after_for@8",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "bytec 10 // \"imm_fixed_arr\"",
      "defined_out": [
        "\"imm_fixed_arr\""
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\""
      ]
    },
    "4503": {
      "op": "frame_dig 1",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0"
      ]
    },
    "4505": {
      "op": "dup",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)",
        "arr1#0 (copy)"
      ]
    },
    "4506": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)"
      ]
    },
    "4508": {
      "op": "app_global_put",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4509": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "arr1#0 (copy)"
      ]
    },
    "4510": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%13#0"
      ]
    },
    "4513": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%13#0",
        "15"
      ]
    },
    "4515": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%14#0"
      ]
    },
    "4516": {
      "error": "expected sum to be 15",
      "op": "assert // expected sum to be 15",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4517": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "4535": {
      "op": "replace2 0",
      "defined_out": [
        "arr1#0",
        "mut_arr#1"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#1"
      ]
    },
    "4537": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "4540": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0",
        "10"
      ]
    },
    "4542": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "4543": {
      "error": "expected sum to be 10",
      "op": "assert // expected sum to be 10",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4544": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0"
      ]
    },
    "4545": {
      "op": "bytec 10 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "4547": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4548": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "4549": {
      "op": "frame_bury 0"
    },
    "4551": {
      "retsub": true,
      "op": "retsub"
    }
  }
}