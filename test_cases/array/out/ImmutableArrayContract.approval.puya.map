{
  "version": 3,
  "sources": [
    "../immutable.py"
  ],
  "mappingskYC;;;AAEW;;AACZ;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACiB;AADjB;AACiB;AAAT;;AAAA;AACS;AAAA;AAAA;AAAT;AAAA;;;;;;;;;AACJ;AAGH;;;AAEY;AACC;AAAd;;AAAA;;AAAA;AAAA;;;AACQ;;AAAU;;;AAAV;AAAA;;AADM;;AAAA;AAAA;;;;;;AAEV;AAGH;;;AAEY;AAAb;;AAAA;;AAAA;AAAA;;;AACc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;;;;;;AAET;;AAAA;AAAA;AAjZU;;;;;;;;;;;;AAIW;;AAAX;;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;;AACO;AAAU;;AAAV;AAAP;AA2YM;AAAd;AAzYyB;;AAyYzB;AAAA;;;AACc;;AAAA;AAAA;;;AAAA;;AAAA;AADA;AAAA;AAAA;;;;;;AAxYC;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAP;AAEiB;;AAAX;;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiB;;AAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEqB;;AAAf;AAAA;;AACC;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AAEA;;;AAAA;AAAA;AAlCH;AAAA;AAyC4B;;AAAmB;AAAnB;AAAR;AAAX;;AAAA;AAAA;AAAA;;AAAA;AAHA;AAGA;AAAA;AAAA;;;;AAAA;;AAAA;;AACC;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;AAAX;AAAP;AAuXK;AAAb;AArX0B;;AAqX1B;AAAA;;;AACyB;;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;;;;;;AApXE;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;AAAX;AAAP;AAEuC;;AAAtB;AAAA;;AAAA;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAX;AAAP;AACO;;AAAA;;;AAAU;AAAV;AAAP;AAEM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;;;AAAU;AAAV;AAAP;AAEiC;;AAAjC;;AAAiC;;AAAjC;AAAA;AAvBH;AAAA;;AAyBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES;AAGG;AAAjB;AAAA;;AAAA;AAAA;;;AACkC;;AAAL;;AAAA;AAAA;;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AADD;AAAA;;;;;;AAGF;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAER;;;AACuB;;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AAC2B;AAAJ;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAJ;AAAP;AACD;;AAAS;AAAT;AAAX;;;AACuB;AAAJ;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACD;;AAAS;;AAAT;AAAX;;;AAC2B;;AAAS;AAAT;AAAJ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAJ;AAAP;AAEJ;;;AAAA;;AAAA;AACR;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEmB;AAAA;AAAc;;AAAS;AAAT;AAAd;AAAP;AAtBP;AAAA;AA0BS;AAGG;AAAjB;AAAwB;;AAAxB;AAAA;;;AAC8B;;AAAI;AAAJ;AAAO;AAAI;AAAJ;AAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AAEM;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAW;AAAX;AAAA;AAAsB;AAAtB;AAAA;AAAP;AACO;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAY;;AAAZ;AAAA;AAAuB;;AAAvB;AAAA;AAAP;AACA;;;AAAA;AAAA;AAhBH;AAAA;AAoBS;AAGG;AAAjB;AAAwB;;AAAxB;AAAA;;;AACgD;;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAQ;AAAR;AAAA;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;;;;;;AAGF;;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACgB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AACT;;AAAA;AAAP;AACA;AAAA;AACA;AACA;;;AAAA;AAAA;AAbH;AAAA;;AAiBS;AAGG;AAAjB;AAAwB;;AAAxB;AAAA;;;AAC8B;;AAAI;AAAJ;AAAO;AAAA;AAAnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;;AAAc;;AAAd;AAAP;AACS;;;AAAjB;AAAwB;;AAAxB;AAAA;;;AACmB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAP;AACO;AAAA;;AAAA;AAAP;;;;;;AAEE;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAW;AAAX;AAA+B;AAAT;AAAtB;;AAAA;AAAA;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAY;;AAAZ;AAAgC;;AAAT;AAAvB;;AAAA;AAAA;AAAP;AACA;;;AAAA;AAAA;AAjBH;AAAA;;AAqBS;AAGG;AAAjB;AAAwB;;AAAxB;AAAA;;;AACqD;;AAAI;AAAJ;AAAW;AAAA;;;AAA9C;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;;AAAc;;AAAd;AAAP;AACS;;;AAAjB;AAAwB;;AAAxB;AAAA;;;AACmB;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAP;AACoB;;AAAA;;;AAAb;AAAP;;;;;;AAEE;;AAAA;;;AAAA;;AACC;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA8B;AAA9B;AAAA;AAAyC;AAAzC;AAAA;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;AAA+B;;AAA/B;AAAA;AAA0C;;;;;AAA1C;AAAA;AAAP;AACA;;;AAAA;AAAA;AAjBH;AAAA;AAmBA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEG;AAFH;AAAA;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEG;;;;;;;;AAAA;AAAA;AAAA;AAFH;AAAA;;;;;;;AAIA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKY;;;AAAjB;;AAAA;;AAAA;AAAA;;;AACwB;AAAA;;AACH;;;AAArB;;AAAA;;AAAA;AAAA;;;AAC4B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADP;AAAA;;;;;;AAEH;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AAJD;;AAAA;AAAA;;;;;;AAOA;AAAA;;AACjB;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwPY;AAAR;;AACJ;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACQ;;AAAA;AAAA;;;;;;;;;AAzPa;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;;;AAdhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAoBU;AACA;;AAQE;AAAjB;AAAwB;;AAAxB;AAAA;;;AAC8C;;AAAA;AAAU;;AAAK;AAAL;AAArC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAIK;;AAAI;AAAJ;AAGF;;AAAK;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AACA;;AAAK;;AAAL;AAVH;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAwBG;;AAAK;;AAAL;AAXH;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AA0BG;;AAAK;AAAL;AAZH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;AAgBJ;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACO;;AAAA;AAAA;AAAA;AAAe;;AAAf;AAAP;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;;AAAA;AACA;;;;;;;AAAA;AAAA;AA/DH;AAAA;;;;AAigB;;AAAQ;AAAR;AAAA;;;;;;;;;;;;;;AAChB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACY;;AAAA;;AAAA;AAAA;;AACZ;;;AACgB;;AAAQ;AAAR;AAAA;;AAChB;;AAAA;;;AACgB;;AAAQ;AAAR;AAAA;;;;;;;;;;;;;;AAChB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AACY;;AAAA;;AAAA;AACQ;AAAA;AAAR;AAAA;;AAAA;AAAA;;AACO;;AAAA;AAAP;;;;;;AAvBP;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACG;AAAjB;AAAA;;AAAA;AAAA;;;AACkB;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;;;;;;AAHZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES;;;;;AACG;AAAjB;AAAA;;AAAA;AAAA;;;AAC6B;;AAAI;AAAJ;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AADD;AAAA;;;;;;AAHZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES;;;;;;;;;;;;;AACG;AAAjB;AAAA;;AAAA;AAAA;;;AACgD;;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAA;AAA9C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADD;AAAA;;;;;;AAHZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAES;;;;;;;;;;;;;;;;;;;;;;;AACG;AAAjB;AAAA;;AAAA;AAAA;;;AACoD;;AAAA;;;AAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;;AADD;AAAA;;;;;;AAHZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKG;;;AACS;AAAjB;AAAA;;AAAA;AAAA;;;AAC8C;;AAAI;AAAJ;AAAA;AAAgB;;AAAI;;AAAJ;AAAA;;;AAAlD;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;;;;;;;;AAEF;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIY;;AACA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAKY;AADA;;AACA;AAAA;AAAA;;;;AAAA;;AALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKY;;;AADA;;AACA;AAAA;AAAA;;;AALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAKY;AADA;;AACA;AAAA;AAAA;;;AALZ;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAQA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAIU;;AAAA;;AAAA;;AAAA;;AAAA;;;AAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEG;AAAA;AAC+B;AAAb;AAAgB;;AAAA;;;AAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAHT;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQU;;AAAA;AAAA;AACiB;;AAAmB;AAAnB;AAAsB;;AAAmB;AAAnB;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAP;AAGS;AAAjB;AAAwB;;AAAxB;AAAA;;;AACmB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AADF;AAAA;;;;;;AAGF;;AAAA;;AAAA;AAAP;;;;AAER;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACmB;;AAAA;AAAP;;;;;;;;AAEJ;;AAAA;;AAAA;AAAA;;AAAA;AAIO;AAAA;;;AAAmC;;AAAnC;AAAP;AAEa;;;;;;;;;;;;;;;;;;AAAb;;AACO;;;AAAmC;;AAAnC;AAAP;AAEO;AAAA;;AAAA;AAAA;AA1BV;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 8"
    },
    "7": {
      "op": "bytecblock 0x 0x151f7c75 0x0000 0x00 0x0002 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff 0x000a 0x62696775696e74 0x000200000000000000010000000000000002 0x000200040007000161000162 \"imm_fixed_arr\""
    },
    "145": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "147": {
      "op": "bz main___algopy_default_create@31",
      "stack_out": []
    },
    "150": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "152": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "153": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "154": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "156": {
      "op": "assert",
      "stack_out": []
    },
    "157": {
      "op": "pushbytess 0x44d42f99 0xb7eaa60b 0x743d70ed 0x1c7e0494 0xa2d5860b 0xe05fc564 0x1e092b83 0x01310262 0xc8654a98 0x89d196f8 0x6cb7c991 0x9898bf02 0xf6b61ee8 0x60b86a7b 0x73ad283f 0x529dfae9 0x206d514f 0xe06465e2 0xec0300a2 0xecdf14af 0x511aca64 0x29852e4f 0x6d4aa358 0xb7cb96bd // method \"test_uint64_array()void\", method \"test_biguint_array()void\", method \"test_bool_array(uint64)void\", method \"test_fixed_size_tuple_array()void\", method \"test_fixed_size_named_tuple_array()void\", method \"test_dynamic_sized_tuple_array()void\", method \"test_dynamic_sized_named_tuple_array()void\", method \"test_implicit_conversion_log(uint64[])void\", method \"test_implicit_conversion_emit(uint64[])void\", method \"test_nested_array(uint64,uint64[][])uint64[]\", method \"test_bit_packed_tuples()void\", method \"sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)\", method \"test_uint64_return(uint64)uint64[]\", method \"test_bool_return(uint64)bool[]\", method \"test_tuple_return(uint64)(uint64,bool,bool)[]\", method \"test_dynamic_tuple_return(uint64)(uint64,string)[]\", method \"test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]\", method \"test_concat_with_arc4_tuple((uint64,uint64))uint64[]\", method \"test_concat_with_native_tuple((uint64,uint64))uint64[]\", method \"test_dynamic_concat_with_arc4_tuple((string,string))string[]\", method \"test_dynamic_concat_with_native_tuple((string,string))string[]\", method \"test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]\", method \"test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]\", method \"test_imm_fixed_arr()(uint64,uint64)[3]\"",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])"
      ],
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])"
      ]
    },
    "279": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_biguint_array()void)",
        "Method(test_bit_packed_tuples()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_uint64_array()void)",
        "Method(test_uint64_return(uint64)uint64[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(test_uint64_array()void)",
        "Method(test_biguint_array()void)",
        "Method(test_bool_array(uint64)void)",
        "Method(test_fixed_size_tuple_array()void)",
        "Method(test_fixed_size_named_tuple_array()void)",
        "Method(test_dynamic_sized_tuple_array()void)",
        "Method(test_dynamic_sized_named_tuple_array()void)",
        "Method(test_implicit_conversion_log(uint64[])void)",
        "Method(test_implicit_conversion_emit(uint64[])void)",
        "Method(test_nested_array(uint64,uint64[][])uint64[])",
        "Method(test_bit_packed_tuples()void)",
        "Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))",
        "Method(test_uint64_return(uint64)uint64[])",
        "Method(test_bool_return(uint64)bool[])",
        "Method(test_tuple_return(uint64)(uint64,bool,bool)[])",
        "Method(test_dynamic_tuple_return(uint64)(uint64,string)[])",
        "Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])",
        "Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])",
        "Method(test_concat_with_native_tuple((uint64,uint64))uint64[])",
        "Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])",
        "Method(test_dynamic_concat_with_native_tuple((string,string))string[])",
        "Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])",
        "Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])",
        "Method(test_imm_fixed_arr()(uint64,uint64)[3])",
        "tmp%6#0"
      ]
    },
    "282": {
      "op": "match test_uint64_array test_biguint_array test_bool_array test_fixed_size_tuple_array test_fixed_size_named_tuple_array test_dynamic_sized_tuple_array test_dynamic_sized_named_tuple_array test_implicit_conversion_log test_implicit_conversion_emit test_nested_array test_bit_packed_tuples sum_uints_and_lengths_and_trues test_uint64_return test_bool_return test_tuple_return test_dynamic_tuple_return test_convert_to_array_and_back test_concat_with_arc4_tuple test_concat_with_native_tuple test_dynamic_concat_with_arc4_tuple test_dynamic_concat_with_native_tuple test_concat_immutable_dynamic test_immutable_arc4 test_imm_fixed_arr",
      "stack_out": []
    },
    "332": {
      "op": "err"
    },
    "333": {
      "block": "main___algopy_default_create@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "335": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "336": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "338": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "339": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "340": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": []
    },
    "341": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "342": {
      "op": "return",
      "stack_out": []
    },
    "343": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "params": {
        "array#0": "bytes",
        "fixed_byte_size#0": "uint64"
      },
      "block": "dynamic_array_pop_fixed_size",
      "stack_in": [],
      "op": "proto 2 2"
    },
    "346": {
      "op": "frame_dig -2",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "348": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "349": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "350": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "351": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "352": {
      "op": "itob",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "353": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "356": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%3#0",
        "array#0 (copy)"
      ]
    },
    "358": {
      "op": "swap",
      "stack_out": [
        "array#0 (copy)",
        "tmp%3#0"
      ]
    },
    "359": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "361": {
      "op": "dup",
      "defined_out": [
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "result#0 (copy)"
      ]
    },
    "362": {
      "op": "len",
      "defined_out": [
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0"
      ]
    },
    "363": {
      "op": "frame_dig -1",
      "defined_out": [
        "fixed_byte_size#0 (copy)",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%5#0",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "365": {
      "op": "-",
      "defined_out": [
        "item_location#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0"
      ]
    },
    "366": {
      "op": "dup2",
      "defined_out": [
        "item_location#0",
        "item_location#0 (copy)",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)"
      ]
    },
    "367": {
      "op": "frame_dig -1",
      "stack_out": [
        "result#0",
        "item_location#0",
        "result#0 (copy)",
        "item_location#0 (copy)",
        "fixed_byte_size#0 (copy)"
      ]
    },
    "369": {
      "op": "extract3",
      "defined_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "item_location#0",
        "popped#0"
      ]
    },
    "370": {
      "op": "uncover 2",
      "stack_out": [
        "item_location#0",
        "popped#0",
        "result#0"
      ]
    },
    "372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "item_location#0",
        "popped#0",
        "result#0",
        "0"
      ]
    },
    "373": {
      "op": "uncover 3",
      "stack_out": [
        "popped#0",
        "result#0",
        "0",
        "item_location#0"
      ]
    },
    "375": {
      "op": "substring3",
      "stack_out": [
        "popped#0",
        "result#0"
      ]
    },
    "376": {
      "retsub": true,
      "op": "retsub"
    },
    "377": {
      "subroutine": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "params": {
        "array#0": "bytes"
      },
      "block": "dynamic_array_pop_dynamic_element",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "380": {
      "op": "frame_dig -1",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "382": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "383": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "384": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "1"
      ]
    },
    "385": {
      "op": "-",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0"
      ]
    },
    "387": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "length_minus_1#0",
        "2"
      ]
    },
    "388": {
      "op": "*",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ]
    },
    "389": {
      "op": "dup",
      "defined_out": [
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0"
      ]
    },
    "390": {
      "op": "frame_dig -1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "array#0 (copy)"
      ]
    },
    "392": {
      "op": "extract 2 0",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "395": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0"
      ]
    },
    "396": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_header_offset#0",
        "head_and_tail#0"
      ]
    },
    "398": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "length_minus_1#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "399": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)",
        "popped_header_offset#0"
      ]
    },
    "401": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "popped_offset#0"
      ]
    },
    "402": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0 (copy)"
      ]
    },
    "403": {
      "op": "uncover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0"
      ]
    },
    "405": {
      "op": "dup",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0",
        "head_and_tail#0 (copy)"
      ]
    },
    "406": {
      "op": "len",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "head_and_tail#0",
        "tmp%5#0"
      ]
    },
    "407": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped_offset#0",
        "tmp%5#0",
        "head_and_tail#0"
      ]
    },
    "408": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "tmp%5#0"
      ]
    },
    "410": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0"
      ]
    },
    "411": {
      "op": "bytec_0 // 0x"
    },
    "412": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "413": {
      "block": "dynamic_array_pop_dynamic_element_for_header@1",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "415": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "popped_header_offset#0"
      ]
    },
    "417": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "418": {
      "op": "bz dynamic_array_pop_dynamic_element_after_for@4",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "421": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0"
      ]
    },
    "423": {
      "op": "frame_dig 6",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0"
      ]
    },
    "425": {
      "op": "dup",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "426": {
      "op": "cover 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "428": {
      "op": "extract_uint16",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "429": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail#0",
        "head_offset#0",
        "item_offset#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "2"
      ]
    },
    "430": {
      "op": "-",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "431": {
      "op": "itob",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "432": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "popped_header_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "435": {
      "op": "frame_dig 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0",
        "new_head#0"
      ]
    },
    "437": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%11#0"
      ]
    },
    "438": {
      "op": "concat",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "439": {
      "op": "frame_bury 5",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "441": {
      "op": "intc_2 // 2",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "442": {
      "op": "+",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "443": {
      "op": "frame_bury 6",
      "defined_out": [
        "head_and_tail#0",
        "head_offset#0",
        "new_head#0",
        "popped_header_offset#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ]
    },
    "445": {
      "op": "b dynamic_array_pop_dynamic_element_for_header@1"
    },
    "448": {
      "block": "dynamic_array_pop_dynamic_element_after_for@4",
      "stack_in": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "length_minus_1#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "length_minus_1#0"
      ]
    },
    "450": {
      "op": "itob",
      "defined_out": [
        "length_minus_1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%13#0"
      ]
    },
    "451": {
      "op": "extract 6 2",
      "defined_out": [
        "length_minus_1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "454": {
      "op": "frame_dig 5",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%14#0",
        "new_head#0"
      ]
    },
    "456": {
      "op": "concat",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "457": {
      "op": "frame_dig 1",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0"
      ]
    },
    "459": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "popped_header_offset#0",
        "2"
      ]
    },
    "460": {
      "op": "+",
      "defined_out": [
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "461": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%16#0",
        "head_and_tail#0"
      ]
    },
    "463": {
      "op": "swap",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0"
      ]
    },
    "464": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "head_and_tail#0",
        "tmp%16#0",
        "popped_offset#0"
      ]
    },
    "466": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "updated#0"
      ]
    },
    "468": {
      "op": "frame_dig 4",
      "defined_out": [
        "head_and_tail#0",
        "length_minus_1#0",
        "new_head#0",
        "popped#0",
        "popped_header_offset#0",
        "popped_offset#0",
        "updated#0"
      ],
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "updated#0",
        "popped#0"
      ]
    },
    "470": {
      "op": "frame_bury 0"
    },
    "472": {
      "op": "frame_bury 1",
      "stack_out": [
        "length_minus_1#0",
        "popped_header_offset#0",
        "head_and_tail#0",
        "popped_offset#0",
        "popped#0",
        "new_head#0",
        "head_offset#0",
        "popped#0",
        "updated#0"
      ]
    },
    "474": {
      "retsub": true,
      "op": "retsub"
    },
    "475": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "478": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "479": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "481": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "483": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "484": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "485": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "487": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "489": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "490": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "491": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "492": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "495": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "497": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "498": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "500": {
      "op": "cover 2",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "503": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "505": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "506": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "507": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "508": {
      "op": "dup"
    },
    "509": {
      "op": "uncover 2",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "511": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "513": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "514": {
      "op": "intc_3 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "515": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "516": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "517": {
      "op": "cover 2",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "519": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%9#0"
      ]
    },
    "520": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "523": {
      "op": "frame_dig 6",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "525": {
      "op": "frame_dig 5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "527": {
      "op": "-",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ]
    },
    "528": {
      "op": "bzero",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ]
    },
    "529": {
      "op": "frame_dig 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0",
        "result#0"
      ]
    },
    "531": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ]
    },
    "532": {
      "op": "concat",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ]
    },
    "533": {
      "op": "frame_bury 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "535": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "536": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "538": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "array_length#0"
      ]
    },
    "540": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "array_length#0",
        "16"
      ]
    },
    "542": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "543": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "544": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "546": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "548": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_end#0"
      ]
    },
    "549": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "551": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "553": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "555": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%15#0"
      ]
    },
    "556": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "559": {
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "561": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "563": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "564": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "566": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "567": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "569": {
      "op": "frame_dig 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "571": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "572": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "574": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "576": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "577": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "579": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "580": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "581": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "583": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "585": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "586": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "588": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "591": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ]
    },
    "593": {
      "op": "frame_bury 0"
    },
    "595": {
      "retsub": true,
      "op": "retsub"
    },
    "596": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64"
      },
      "block": "dynamic_array_concat_byte_length_head",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "599": {
      "op": "frame_dig -3",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)"
      ]
    },
    "601": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "array#0 (copy)",
        "0"
      ]
    },
    "602": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0"
      ]
    },
    "603": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "604": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "606": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "new_length#0"
      ]
    },
    "607": {
      "op": "swap",
      "stack_out": [
        "new_length#0",
        "array_length#0"
      ]
    },
    "608": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_length#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "array_length#0",
        "2"
      ]
    },
    "609": {
      "op": "*",
      "defined_out": [
        "new_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_length#0",
        "tmp%2#0"
      ]
    },
    "610": {
      "op": "intc_2 // 2",
      "stack_out": [
        "new_length#0",
        "tmp%2#0",
        "2"
      ]
    },
    "611": {
      "op": "+",
      "defined_out": [
        "header_end#0",
        "new_length#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0"
      ]
    },
    "612": {
      "op": "dig 1",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "new_length#0 (copy)"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "new_length#0 (copy)"
      ]
    },
    "614": {
      "op": "itob",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%4#0"
      ]
    },
    "615": {
      "op": "extract 6 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_length#0",
        "header_end#0",
        "tmp%5#0"
      ]
    },
    "618": {
      "op": "cover 2",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0"
      ]
    },
    "620": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)"
      ]
    },
    "622": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2"
      ]
    },
    "623": {
      "op": "dig 2",
      "defined_out": [
        "2",
        "array#0 (copy)",
        "header_end#0",
        "header_end#0 (copy)",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "array#0 (copy)",
        "2",
        "header_end#0 (copy)"
      ]
    },
    "625": {
      "op": "substring3",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0"
      ]
    },
    "626": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)"
      ]
    },
    "628": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "629": {
      "op": "*",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "630": {
      "op": "bzero",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0"
      ]
    },
    "632": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "array#0 (copy)"
      ]
    },
    "634": {
      "op": "len",
      "defined_out": [
        "header_end#0",
        "new_length#0",
        "tmp%10#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "635": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "header_end#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)"
      ]
    },
    "637": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "tmp%10#0",
        "array#0 (copy)",
        "header_end#0"
      ]
    },
    "639": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "array#0 (copy)",
        "header_end#0",
        "tmp%10#0"
      ]
    },
    "641": {
      "op": "substring3",
      "defined_out": [
        "new_length#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "642": {
      "op": "concat",
      "defined_out": [
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%12#0"
      ]
    },
    "643": {
      "op": "frame_dig -2",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "new_length#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "tmp%12#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "645": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "new_length#0",
        "array_head_and_tail#0"
      ]
    },
    "646": {
      "op": "swap",
      "defined_out": [
        "array_head_and_tail#0",
        "new_length#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "new_length#0"
      ]
    },
    "647": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "new_length#0",
        "2"
      ]
    },
    "648": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0"
      ]
    },
    "649": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "tail_offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#0"
      ]
    },
    "650": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "651": {
      "block": "dynamic_array_concat_byte_length_head_for_header@2",
      "stack_in": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "653": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#0"
      ]
    },
    "655": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tail_offset#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "656": {
      "op": "bz dynamic_array_concat_byte_length_head_after_for@4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "659": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "661": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset#1 (copy)"
      ]
    },
    "662": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tmp%6#0"
      ]
    },
    "663": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ]
    },
    "666": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0"
      ]
    },
    "668": {
      "op": "frame_dig 4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0"
      ]
    },
    "670": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tail_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "671": {
      "op": "cover 4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tail_offset_bytes#0",
        "array_head_and_tail#0",
        "head_offset#0 (copy)"
      ]
    },
    "673": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "head_offset#0 (copy)",
        "tail_offset_bytes#0"
      ]
    },
    "675": {
      "op": "replace3",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "676": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "array_head_and_tail#0"
      ]
    },
    "677": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0"
      ]
    },
    "679": {
      "op": "dig 1",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "array_head_and_tail#0",
        "tail_offset#1 (copy)"
      ]
    },
    "681": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ]
    },
    "682": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%9#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%9#1",
        "2"
      ]
    },
    "683": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1",
        "tmp%10#0"
      ]
    },
    "684": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "tail_offset#1"
      ]
    },
    "685": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_head_and_tail#0",
        "head_offset#0",
        "tail_offset#0",
        "tail_offset#1"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "687": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "688": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "689": {
      "op": "frame_bury 4",
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ]
    },
    "691": {
      "op": "b dynamic_array_concat_byte_length_head_for_header@2"
    },
    "694": {
      "block": "dynamic_array_concat_byte_length_head_after_for@4",
      "stack_in": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "696": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tmp%5#0",
        "array_head_and_tail#0"
      ]
    },
    "698": {
      "op": "concat",
      "defined_out": [
        "array_head_and_tail#0",
        "tmp%15#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "array_head_and_tail#0",
        "tail_offset#0",
        "tail_offset#1",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "699": {
      "op": "frame_bury 0"
    },
    "701": {
      "retsub": true,
      "op": "retsub"
    },
    "702": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "705": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "head_and_tail_length#0"
      ]
    },
    "706": {
      "op": "dup"
    },
    "707": {
      "op": "frame_dig -2"
    },
    "709": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "710": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "711": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "713": {
      "op": "intc_2 // 2",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "714": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ]
    },
    "715": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "716": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "718": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "720": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "721": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "724": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "726": {
      "op": "frame_dig 4",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "728": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "729": {
      "op": "cover 2",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "731": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "732": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "734": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "735": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%4#0"
      ]
    },
    "736": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "739": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0",
        "new_head#0"
      ]
    },
    "741": {
      "op": "swap",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%5#0"
      ]
    },
    "742": {
      "op": "concat",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "743": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "745": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "746": {
      "op": "+",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "747": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "749": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "752": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "754": {
      "op": "len",
      "defined_out": [
        "head_and_tail_length#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_and_tail_length#0"
      ]
    },
    "755": {
      "op": "frame_bury 0",
      "defined_out": [
        "head_and_tail_length#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "757": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "758": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "760": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "762": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "764": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "765": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "768": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "770": {
      "op": "frame_dig 4",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "772": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "773": {
      "op": "cover 2",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "775": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "776": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "head_and_tail_length#0"
      ]
    },
    "778": {
      "op": "+",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "779": {
      "op": "itob",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "780": {
      "op": "extract 6 2",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0"
      ]
    },
    "783": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%12#0",
        "new_head#0"
      ]
    },
    "785": {
      "op": "swap",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%12#0"
      ]
    },
    "786": {
      "op": "concat",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "787": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "789": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "790": {
      "op": "+",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "791": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_and_tail_length#0",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ]
    },
    "793": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "796": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "798": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "800": {
      "op": "+",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%14#0"
      ]
    },
    "801": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "802": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0"
      ]
    },
    "805": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%16#0",
        "new_head#0"
      ]
    },
    "807": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0"
      ]
    },
    "808": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "810": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0"
      ]
    },
    "812": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "array_head_and_tail#0 (copy)",
        "tmp%1#0",
        "head_and_tail_length#0"
      ]
    },
    "814": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "815": {
      "op": "concat",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0"
      ]
    },
    "816": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "818": {
      "op": "len",
      "defined_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "tmp%22#0"
      ]
    },
    "819": {
      "op": "frame_dig -1",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "821": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_and_tail_length#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%1#0",
        "tmp%20#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "tmp%22#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "823": {
      "op": "uncover 2",
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%22#0"
      ]
    },
    "825": {
      "op": "substring3",
      "defined_out": [
        "head_and_tail_length#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%20#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%20#0",
        "tmp%23#0"
      ]
    },
    "826": {
      "op": "concat",
      "defined_out": [
        "head_and_tail_length#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%1#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "head_and_tail_length#0",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%1#0",
        "head_offset#0",
        "tmp%24#0"
      ]
    },
    "827": {
      "op": "frame_bury 0"
    },
    "829": {
      "retsub": true,
      "op": "retsub"
    },
    "830": {
      "subroutine": "test_cases.array.immutable.sum_imm_fixed",
      "params": {
        "arr#0": "bytes"
      },
      "block": "sum_imm_fixed",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "833": {
      "op": "intc_0 // 0"
    },
    "834": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "835": {
      "block": "sum_imm_fixed_for_header@1",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "837": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "839": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "840": {
      "op": "bz sum_imm_fixed_after_for@4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "843": {
      "op": "frame_dig 1",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "845": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "846": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "848": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "849": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "851": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "852": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "arr#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "854": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "855": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "856": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "857": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "values%0#0"
      ]
    },
    "858": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "values%0#0",
        "total#0"
      ]
    },
    "860": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "total#0"
      ]
    },
    "861": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "862": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "aggregate%encoded_element%0#0",
        "8"
      ]
    },
    "863": {
      "op": "extract_uint64",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0",
        "values%1#0"
      ]
    },
    "864": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "865": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "867": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "868": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "869": {
      "op": "frame_bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "871": {
      "op": "b sum_imm_fixed_for_header@1"
    },
    "874": {
      "block": "sum_imm_fixed_after_for@4",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "875": {
      "subroutine": "test_cases.array.immutable.times",
      "params": {
        "n#0": "uint64"
      },
      "block": "times",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "878": {
      "op": "bytec_0 // \"\""
    },
    "879": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "880": {
      "block": "times_for_header@1",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "882": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "n#0 (copy)"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "n#0 (copy)"
      ]
    },
    "884": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "885": {
      "op": "bz times_after_for@4",
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "888": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "890": {
      "op": "pushbytes \" \"",
      "defined_out": [
        "\" \"",
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0",
        "\" \""
      ]
    },
    "893": {
      "op": "concat",
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "894": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "896": {
      "op": "frame_dig 1",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "898": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "899": {
      "op": "+",
      "stack_out": [
        "result#0",
        "_i#0",
        "_i#0"
      ]
    },
    "900": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0"
      ]
    },
    "902": {
      "op": "b times_for_header@1"
    },
    "905": {
      "block": "times_after_for@4",
      "stack_in": [
        "result#0",
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "_i#0",
        "result#0"
      ]
    },
    "906": {
      "subroutine": "test_cases.array.immutable.add_x",
      "params": {
        "arr#0": "bytes",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "909": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "910": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "912": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "914": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "915": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "918": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "920": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "921": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "922": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0 (copy)"
      ]
    },
    "924": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "i#0",
        "arr#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "925": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0"
      ]
    },
    "926": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "928": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0 (copy)",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "929": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "930": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "931": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "932": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "933": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "936": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "938": {
      "op": "frame_bury -2",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "940": {
      "op": "intc_1 // 1",
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "941": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "942": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "944": {
      "op": "b add_x_for_header@1"
    },
    "947": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "949": {
      "op": "swap"
    },
    "950": {
      "retsub": true,
      "op": "retsub"
    },
    "951": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_array[routing]",
      "params": {},
      "block": "test_uint64_array",
      "stack_in": [],
      "op": "pushbytes 0x0001000000000000002a",
      "defined_out": [
        "0x0001000000000000002a"
      ],
      "stack_out": [
        "0x0001000000000000002a"
      ]
    },
    "963": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "0x0001000000000000002a",
        "5"
      ],
      "stack_out": [
        "0x0001000000000000002a",
        "5"
      ]
    },
    "965": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "defined_out": [
        "arr#2"
      ],
      "stack_out": [
        "arr#2"
      ]
    },
    "968": {
      "op": "dup",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "969": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "970": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "971": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "972": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "6"
      ]
    },
    "974": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%10#0"
      ]
    },
    "975": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "976": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "977": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "978": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0"
      ]
    },
    "979": {
      "op": "dig 2",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0",
        "arr#2 (copy)"
      ]
    },
    "981": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%12#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "984": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0"
      ]
    },
    "985": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#2",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%12#0",
        "8"
      ]
    },
    "986": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "987": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "values%1#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "values%1#0"
      ]
    },
    "988": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "arr#2",
        "values%1#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "values%1#0",
        "4"
      ]
    },
    "990": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "tmp%13#0"
      ]
    },
    "991": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0"
      ]
    },
    "992": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "aggregate%array_length%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "43"
      ]
    },
    "994": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "995": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%3#0",
        "aggregate%val_as_bytes%1#0",
        "arr#2"
      ]
    },
    "997": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%3#0",
        "arr#2",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "998": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%3#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_length%3#0",
        "concat%1#0"
      ]
    },
    "999": {
      "op": "swap",
      "stack_out": [
        "concat%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1000": {
      "op": "intc_1 // 1",
      "stack_out": [
        "concat%1#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "1001": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "add%1#0"
      ]
    },
    "1002": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "1003": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "1006": {
      "op": "replace2 0",
      "stack_out": [
        "arr#2"
      ]
    },
    "1008": {
      "op": "dupn 2",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1010": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1011": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0"
      ]
    },
    "1012": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1013": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "7"
      ]
    },
    "1015": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr#2",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "tmp%16#0"
      ]
    },
    "1016": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0"
      ]
    },
    "1017": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_length%5#0",
        "1"
      ]
    },
    "1018": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0"
      ]
    },
    "1019": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0",
        "arr#2 (copy)"
      ]
    },
    "1021": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%18#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1024": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0"
      ]
    },
    "1025": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "tmp%18#0",
        "8"
      ]
    },
    "1026": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1027": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%2#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "values%2#0"
      ]
    },
    "1028": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#2",
        "arr#2",
        "values%2#0",
        "43"
      ]
    },
    "1030": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#2",
        "arr#2",
        "tmp%19#0"
      ]
    },
    "1031": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "arr#2"
      ]
    },
    "1032": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#2",
        "arr#2",
        "2"
      ]
    },
    "1033": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%3#0"
      ],
      "stack_out": [
        "arr#2",
        "values%3#0"
      ]
    },
    "1034": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#2",
        "values%3#0"
      ],
      "stack_out": [
        "arr#2",
        "values%3#0",
        "42"
      ]
    },
    "1036": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#2",
        "tmp%20#0"
      ]
    },
    "1037": {
      "op": "assert",
      "stack_out": [
        "arr#2"
      ]
    },
    "1038": {
      "op": "intc_0 // 0",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1039": {
      "block": "test_uint64_array_for_header@2",
      "stack_in": [
        "arr#2",
        "_i#0"
      ],
      "op": "dup",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1040": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "_i#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0",
        "3"
      ]
    },
    "1042": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1043": {
      "op": "bz test_uint64_array_after_for@4",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1046": {
      "op": "dig 1",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1048": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "8"
      ]
    },
    "1049": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "_i#0",
        "arr#2",
        "tmp%0#1"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "tmp%0#1",
        "arr#2"
      ]
    },
    "1052": {
      "op": "bury 3",
      "defined_out": [
        "_i#0",
        "arr#2",
        "tmp%0#1"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "tmp%0#1"
      ]
    },
    "1054": {
      "op": "pop",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1055": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1056": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1057": {
      "op": "+",
      "stack_out": [
        "arr#2",
        "_i#0",
        "_i#0"
      ]
    },
    "1058": {
      "op": "bury 1",
      "defined_out": [
        "_i#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1060": {
      "op": "b test_uint64_array_for_header@2"
    },
    "1063": {
      "block": "test_uint64_array_after_for@4",
      "stack_in": [
        "arr#2",
        "_i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1065": {
      "op": "dup",
      "defined_out": [
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1066": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1067": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0"
      ]
    },
    "1068": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)"
      ]
    },
    "1069": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "4"
      ]
    },
    "1071": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr#2",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "tmp%23#0"
      ]
    },
    "1072": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0"
      ]
    },
    "1073": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%7#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%7#0",
        "1"
      ]
    },
    "1074": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0"
      ]
    },
    "1075": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0",
        "arr#2 (copy)"
      ]
    },
    "1077": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%25#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "1080": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0"
      ]
    },
    "1081": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_trimmed%4#0",
        "arr#2",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "tmp%25#0",
        "8"
      ]
    },
    "1082": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1083": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%4#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%4#0"
      ]
    },
    "1084": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#2",
        "values%4#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%4#0",
        "2"
      ]
    },
    "1085": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%26#0"
      ]
    },
    "1086": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1087": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "10"
      ]
    },
    "1089": {
      "callsub": "test_cases.array.immutable.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1092": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1093": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1094": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1095": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)"
      ]
    },
    "1096": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "14"
      ]
    },
    "1098": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%29#0"
      ]
    },
    "1099": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1100": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)"
      ]
    },
    "1101": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_length%9#0 (copy)",
        "1"
      ]
    },
    "1102": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0"
      ]
    },
    "1103": {
      "op": "dig 2",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0",
        "arr#2 (copy)"
      ]
    },
    "1105": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "arr#2",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%31#0",
        "aggregate%array_trimmed%5#0"
      ]
    },
    "1108": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0"
      ]
    },
    "1109": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "tmp%31#0",
        "8"
      ]
    },
    "1110": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%array_trimmed%5#0",
        "aggregate%bytes_offset%5#0"
      ]
    },
    "1111": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "values%5#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "values%5#0"
      ]
    },
    "1112": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%9#0",
        "arr#2",
        "values%5#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "values%5#0",
        "9"
      ]
    },
    "1114": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "tmp%32#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "tmp%32#0"
      ]
    },
    "1115": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0"
      ]
    },
    "1116": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "aggregate%array_length%9#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "44"
      ]
    },
    "1118": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1119": {
      "op": "uncover 2",
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "aggregate%val_as_bytes%2#0",
        "arr#2"
      ]
    },
    "1121": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "arr#2",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1122": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%9#0",
        "arr#2",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "aggregate%array_length%9#0",
        "concat%2#0"
      ]
    },
    "1123": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "aggregate%array_length%9#0"
      ]
    },
    "1124": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "aggregate%array_length%9#0",
        "1"
      ]
    },
    "1125": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "arr#2",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "1126": {
      "op": "itob",
      "defined_out": [
        "arr#2",
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "1127": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#2",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "1130": {
      "op": "replace2 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1132": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1134": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%11#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0"
      ]
    },
    "1135": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)"
      ]
    },
    "1136": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "aggregate%array_length%11#0 (copy)",
        "15"
      ]
    },
    "1138": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%11#0",
        "arr#2",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "tmp%35#0"
      ]
    },
    "1139": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0"
      ]
    },
    "1140": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%11#0",
        "1"
      ]
    },
    "1141": {
      "op": "-",
      "defined_out": [
        "arr#2",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0"
      ]
    },
    "1142": {
      "op": "dig 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0",
        "arr#2 (copy)"
      ]
    },
    "1144": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "arr#2",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%37#0",
        "aggregate%array_trimmed%6#0"
      ]
    },
    "1147": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0"
      ]
    },
    "1148": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "tmp%37#0",
        "8"
      ]
    },
    "1149": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_trimmed%6#0",
        "aggregate%bytes_offset%6#0"
      ]
    },
    "1150": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%6#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%6#0"
      ]
    },
    "1151": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%6#0",
        "44"
      ]
    },
    "1153": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%38#0"
      ]
    },
    "1154": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1155": {
      "op": "pushint 23 // 23",
      "defined_out": [
        "23",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "23"
      ]
    },
    "1157": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "1158": {
      "error": "index access is out of bounds",
      "op": "replace2 18 // on error: index access is out of bounds",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1160": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1161": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "0"
      ]
    },
    "1162": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%13#0",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%13#0"
      ]
    },
    "1163": {
      "op": "pushint 15 // 15",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "aggregate%array_length%13#0",
        "15"
      ]
    },
    "1165": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%40#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%40#0"
      ]
    },
    "1166": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1167": {
      "op": "dup",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)"
      ]
    },
    "1168": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#2",
        "arr#2 (copy)"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "arr#2 (copy)",
        "18"
      ]
    },
    "1170": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#2",
        "values%7#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%7#0"
      ]
    },
    "1171": {
      "op": "pushint 23 // 23",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "values%7#0",
        "23"
      ]
    },
    "1173": {
      "op": "==",
      "defined_out": [
        "arr#2",
        "tmp%41#0"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "tmp%41#0"
      ]
    },
    "1174": {
      "op": "assert",
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2"
      ]
    },
    "1175": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "arr#2"
      ],
      "stack_out": [
        "arr#2",
        "_i#0",
        "arr#2",
        "\"a\""
      ]
    },
    "1178": {
      "op": "swap",
      "stack_out": [
        "arr#2",
        "_i#0",
        "\"a\"",
        "arr#2"
      ]
    },
    "1179": {
      "op": "app_global_put",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1180": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#2",
        "_i#0",
        "1"
      ]
    },
    "1181": {
      "op": "return",
      "stack_out": [
        "arr#2",
        "_i#0"
      ]
    },
    "1182": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_biguint_array[routing]",
      "params": {},
      "block": "test_biguint_array",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1184": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "1"
      ]
    },
    "1185": {
      "op": "-",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1186": {
      "op": "itob",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1187": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "64"
      ]
    },
    "1189": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1190": {
      "op": "dup",
      "stack_out": [
        "tmp%4#0",
        "aggregate%bzero%0#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1191": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "tmp%4#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1193": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "1194": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0",
        "0x0000"
      ]
    },
    "1195": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "0x0000",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "1196": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%bzero%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "concat%0#0"
      ]
    },
    "1197": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%bzero%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "concat%0#0",
        "0x0001"
      ]
    },
    "1201": {
      "op": "replace2 0",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ]
    },
    "1203": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1205": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1206": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0"
      ]
    },
    "1207": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)"
      ]
    },
    "1208": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "1"
      ]
    },
    "1209": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "tmp%7#0"
      ]
    },
    "1210": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0"
      ]
    },
    "1211": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "1212": {
      "op": "-",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1",
        "tmp%9#0"
      ]
    },
    "1213": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0",
        "arr#1"
      ]
    },
    "1214": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%9#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1217": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "1218": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0",
        "64"
      ]
    },
    "1220": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1221": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "64"
      ]
    },
    "1223": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1224": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "aggregate%encoded_element%0#0",
        "0x"
      ]
    },
    "1225": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%10#0"
      ]
    },
    "1226": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1"
      ]
    },
    "1227": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1228": {
      "block": "test_biguint_array_for_header@2",
      "stack_in": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1229": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1231": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1232": {
      "op": "bz test_biguint_array_after_for@4",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1235": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1237": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "1238": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%bzero%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "tmp%0#1",
        "aggregate%bzero%0#0"
      ]
    },
    "1240": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "1241": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "aggregate%arc4_encoded%1#0",
        "arr#1"
      ]
    },
    "1243": {
      "op": "dup"
    },
    "1244": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "arr#1 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "1246": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1",
        "concat%0#0"
      ]
    },
    "1247": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#1"
      ]
    },
    "1248": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#1",
        "0"
      ]
    },
    "1249": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "extract_uint16%0#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#1"
      ]
    },
    "1250": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "extract_uint16%0#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#1",
        "1"
      ]
    },
    "1251": {
      "op": "+",
      "defined_out": [
        "add%0#1",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#1"
      ]
    },
    "1252": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%0#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#1"
      ]
    },
    "1253": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%0#1",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#1"
      ]
    },
    "1256": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "arr#1"
      ]
    },
    "1258": {
      "op": "bury 3",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1260": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1261": {
      "op": "+",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "i#0"
      ]
    },
    "1262": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1264": {
      "op": "b test_biguint_array_for_header@2"
    },
    "1267": {
      "block": "test_biguint_array_after_for@4",
      "stack_in": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1269": {
      "op": "dup",
      "defined_out": [
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1270": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#1",
        "arr#1 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1271": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1272": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1273": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "6"
      ]
    },
    "1275": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%13#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%13#0"
      ]
    },
    "1276": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1277": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1278": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "1279": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0"
      ]
    },
    "1280": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0",
        "arr#1 (copy)"
      ]
    },
    "1282": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%15#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "1285": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0"
      ]
    },
    "1286": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "arr#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "tmp%15#0",
        "64"
      ]
    },
    "1288": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1289": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "64"
      ]
    },
    "1291": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1292": {
      "op": "pushbytes 0x04",
      "defined_out": [
        "0x04",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%encoded_element%1#0",
        "0x04"
      ]
    },
    "1295": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "1296": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0"
      ]
    },
    "1297": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%17#0"
      ]
    },
    "1299": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%18#0"
      ]
    },
    "1300": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%18#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1302": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "tmp%18#0"
      ]
    },
    "1303": {
      "op": "b-",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0"
      ]
    },
    "1304": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#1",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "tmp%19#0 (copy)"
      ]
    },
    "1305": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%value_len%2#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%value_len%2#0"
      ]
    },
    "1306": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "1308": {
      "op": "<=",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%len_ok%2#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "1309": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0"
      ]
    },
    "1310": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "tmp%19#0",
        "aggregate%bzero%0#0"
      ]
    },
    "1312": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%2#0",
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%3#0",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "1313": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "aggregate%arc4_encoded%2#0",
        "arr#1"
      ]
    },
    "1315": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "arr#1",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "1316": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%3#0",
        "concat%1#0"
      ]
    },
    "1317": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1318": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "1319": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "1320": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "1321": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%1#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "1324": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1326": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1327": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1328": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1329": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1330": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "7"
      ]
    },
    "1332": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%22#0"
      ]
    },
    "1333": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1334": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)"
      ]
    },
    "1335": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_length%5#0 (copy)",
        "1"
      ]
    },
    "1336": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0"
      ]
    },
    "1337": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0",
        "arr#1 (copy)"
      ]
    },
    "1339": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%24#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1342": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0"
      ]
    },
    "1343": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "tmp%24#0",
        "64"
      ]
    },
    "1345": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0"
      ]
    },
    "1346": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%2#0",
        "64"
      ]
    },
    "1348": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%2#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1349": {
      "op": "pushbytes 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
      "defined_out": [
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe",
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%2#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%2#0",
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe"
      ]
    },
    "1415": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%25#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%25#0"
      ]
    },
    "1416": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1417": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "arr#1 (copy)"
      ]
    },
    "1419": {
      "op": "extract 2 64",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1422": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%3#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "aggregate%encoded_element%3#0",
        "0x"
      ]
    },
    "1423": {
      "op": "b==",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%26#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0",
        "tmp%26#0"
      ]
    },
    "1424": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%5#0"
      ]
    },
    "1425": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "arr#1"
      ]
    },
    "1426": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "arr#1",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1428": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%5#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "aggregate%array_length%5#0",
        "concat%2#0"
      ]
    },
    "1429": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "aggregate%array_length%5#0"
      ]
    },
    "1430": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "aggregate%array_length%5#0",
        "1"
      ]
    },
    "1431": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "1432": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "1433": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "as_u16_bytes%2#0",
        "concat%2#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "1436": {
      "op": "replace2 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1438": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1439": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)",
        "0"
      ]
    },
    "1440": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0"
      ]
    },
    "1441": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)"
      ]
    },
    "1442": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "aggregate%array_length%7#0 (copy)",
        "8"
      ]
    },
    "1443": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%7#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "tmp%29#0"
      ]
    },
    "1444": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0"
      ]
    },
    "1445": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_length%7#0",
        "1"
      ]
    },
    "1446": {
      "op": "-",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0"
      ]
    },
    "1447": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0",
        "arr#1 (copy)"
      ]
    },
    "1449": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%31#0",
        "aggregate%array_trimmed%4#0"
      ]
    },
    "1452": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0"
      ]
    },
    "1453": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "tmp%31#0",
        "64"
      ]
    },
    "1455": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "1456": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%array_trimmed%4#0",
        "aggregate%bytes_offset%4#0",
        "64"
      ]
    },
    "1458": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%4#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%4#0"
      ]
    },
    "1459": {
      "op": "bytec 5 // 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%4#0",
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "1461": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%32#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%32#0"
      ]
    },
    "1462": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1463": {
      "op": "dup",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "arr#1 (copy)"
      ]
    },
    "1464": {
      "op": "extract 2 64",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%encoded_element%5#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%5#0"
      ]
    },
    "1467": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "aggregate%encoded_element%5#0",
        "0x"
      ]
    },
    "1468": {
      "op": "b==",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "tmp%33#0"
      ]
    },
    "1469": {
      "op": "assert",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1470": {
      "op": "bytec 7 // 0x62696775696e74",
      "defined_out": [
        "0x62696775696e74",
        "aggregate%bzero%0#0",
        "arr#1"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "0x62696775696e74"
      ]
    },
    "1472": {
      "op": "box_del",
      "defined_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "{box_del}"
      ]
    },
    "1473": {
      "op": "pop",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1"
      ]
    },
    "1474": {
      "op": "bytec 7 // 0x62696775696e74",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "arr#1",
        "0x62696775696e74"
      ]
    },
    "1476": {
      "op": "swap",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "0x62696775696e74",
        "arr#1"
      ]
    },
    "1477": {
      "op": "box_put",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1478": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0",
        "1"
      ]
    },
    "1479": {
      "op": "return",
      "stack_out": [
        "aggregate%bzero%0#0",
        "arr#1",
        "i#0"
      ]
    },
    "1480": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_array[routing]",
      "params": {},
      "block": "test_bool_array",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_length#0"
      ]
    },
    "1481": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%0#0"
      ]
    },
    "1484": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1485": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "1486": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "1487": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array_length#0",
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "1488": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "array_length#0",
        "tmp%0#0"
      ]
    },
    "1489": {
      "op": "btoi",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0"
      ]
    },
    "1490": {
      "op": "bytec_2 // 0x0000"
    },
    "1491": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1492": {
      "block": "test_bool_array_for_header@2",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1493": {
      "op": "dig 3",
      "defined_out": [
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "length#0"
      ]
    },
    "1495": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1496": {
      "op": "bz test_bool_array_after_for@5",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1499": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "i#0",
        "length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1501": {
      "op": "dig 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1503": {
      "op": "dup"
    },
    "1504": {
      "op": "uncover 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ]
    },
    "1506": {
      "op": "==",
      "defined_out": [
        "i#0",
        "length#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1507": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "length#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "0x00"
      ]
    },
    "1508": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "length#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "0x00",
        "0"
      ]
    },
    "1509": {
      "op": "uncover 2",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "1511": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1512": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "arr#0"
      ]
    },
    "1514": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1515": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "1516": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "aggregate%encoded_bool%0#0",
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "8"
      ]
    },
    "1517": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "1520": {
      "op": "bury 3",
      "defined_out": [
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1522": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1523": {
      "op": "+",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1524": {
      "op": "bury 1",
      "defined_out": [
        "arr#0",
        "i#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1526": {
      "op": "b test_bool_array_for_header@2"
    },
    "1529": {
      "block": "test_bool_array_after_for@5",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1531": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "1532": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "1533": {
      "op": "dup",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "array_length#0"
      ]
    },
    "1534": {
      "op": "bury 5",
      "defined_out": [
        "arr#0",
        "array_length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "1536": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "length#0"
      ]
    },
    "1538": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "length#0 (copy)",
        "length#0 (copy)"
      ]
    },
    "1539": {
      "op": "cover 2",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "array_length#0",
        "length#0 (copy)"
      ]
    },
    "1541": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "tmp%6#0"
      ]
    },
    "1542": {
      "op": "assert",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1543": {
      "op": "bz test_bool_array_after_if_else@7",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1546": {
      "op": "dig 3",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "1548": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1549": {
      "op": "dig 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1551": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "1553": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%0#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1554": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "1555": {
      "error": "expected element 0 to be False",
      "op": "assert // expected element 0 to be False",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1556": {
      "block": "test_bool_array_after_if_else@7",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1558": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "1"
      ]
    },
    "1559": {
      "op": ">",
      "defined_out": [
        "length#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "1560": {
      "op": "bz test_bool_array_after_if_else@9",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1563": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "1564": {
      "op": "dig 4",
      "defined_out": [
        "1",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "1",
        "array_length#0"
      ]
    },
    "1566": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%1#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%lt%1#0"
      ]
    },
    "1567": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1568": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1570": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "17"
      ]
    },
    "1572": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%1#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "1573": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ]
    },
    "1574": {
      "error": "expected element 1 to be False",
      "op": "assert // expected element 1 to be False",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1575": {
      "block": "test_bool_array_after_if_else@9",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1577": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "2"
      ]
    },
    "1578": {
      "op": ">",
      "defined_out": [
        "length#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "1579": {
      "op": "bz test_bool_array_after_if_else@11",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1582": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "2"
      ]
    },
    "1583": {
      "op": "dig 4",
      "defined_out": [
        "2",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "2",
        "array_length#0"
      ]
    },
    "1585": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%2#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%lt%2#0"
      ]
    },
    "1586": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1587": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1589": {
      "op": "pushint 18 // 18",
      "defined_out": [
        "18",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "18"
      ]
    },
    "1591": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%2#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "1592": {
      "error": "expected element 2 to be True",
      "op": "assert // expected element 2 to be True",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1593": {
      "block": "test_bool_array_after_if_else@11",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1595": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "3"
      ]
    },
    "1597": {
      "op": ">",
      "defined_out": [
        "length#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "1598": {
      "op": "bz test_bool_array_after_if_else@13",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1601": {
      "op": "dig 2",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1603": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0",
        "1"
      ]
    },
    "1604": {
      "op": "-",
      "defined_out": [
        "length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "1605": {
      "op": "dup",
      "defined_out": [
        "length#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1606": {
      "op": "dig 5",
      "defined_out": [
        "array_length#0",
        "length#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "tmp%13#0 (copy)",
        "array_length#0"
      ]
    },
    "1608": {
      "op": "<",
      "defined_out": [
        "aggregate%lt%3#0",
        "array_length#0",
        "length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "aggregate%lt%3#0"
      ]
    },
    "1609": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "1610": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "length#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%13#0",
        "16"
      ]
    },
    "1612": {
      "op": "+",
      "defined_out": [
        "aggregate%add%3#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%add%3#0"
      ]
    },
    "1613": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%add%3#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%add%3#0",
        "arr#0"
      ]
    },
    "1615": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%add%3#0"
      ]
    },
    "1616": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%3#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%get_bit%3#0"
      ]
    },
    "1617": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "1618": {
      "error": "expected last element to be False",
      "op": "assert // expected last element to be False",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1619": {
      "block": "test_bool_array_after_if_else@13",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "pushbytes \"g\"",
      "defined_out": [
        "\"g\""
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "\"g\""
      ]
    },
    "1622": {
      "op": "dig 2",
      "defined_out": [
        "\"g\"",
        "arr#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "\"g\"",
        "arr#0"
      ]
    },
    "1624": {
      "op": "app_global_put",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1625": {
      "op": "dig 2",
      "defined_out": [
        "arr#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length#0"
      ]
    },
    "1627": {
      "op": "bz test_bool_array_after_if_else@15",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1630": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0"
      ]
    },
    "1632": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "array_length#0",
        "1"
      ]
    },
    "1633": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0"
      ]
    },
    "1634": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "1635": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%2#1"
      ]
    },
    "1636": {
      "op": "extract 6 0",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%3#1"
      ]
    },
    "1639": {
      "op": "dig 3",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "tmp%3#1",
        "arr#0"
      ]
    },
    "1641": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "arr#0",
        "tmp%3#1"
      ]
    },
    "1642": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "1644": {
      "op": "dig 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)"
      ]
    },
    "1646": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "length_minus_1#0 (copy)",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "length_minus_1#0 (copy)",
        "16"
      ]
    },
    "1648": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0"
      ]
    },
    "1649": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "popped_location#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0",
        "popped_location#0",
        "0"
      ]
    },
    "1650": {
      "op": "setbit",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "length_minus_1#0",
        "result#0"
      ]
    },
    "1651": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "length_minus_1#0"
      ]
    },
    "1652": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "array_length#0",
        "length#0",
        "length_minus_1#0",
        "result#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "length_minus_1#0",
        "7"
      ]
    },
    "1654": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "result#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%8#1"
      ]
    },
    "1655": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array_length#0",
        "length#0",
        "result#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%8#1",
        "8"
      ]
    },
    "1656": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "result#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%9#1"
      ]
    },
    "1657": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array_length#0",
        "length#0",
        "result#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%9#1",
        "2"
      ]
    },
    "1658": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "result#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "tmp%10#1"
      ]
    },
    "1659": {
      "op": "intc_0 // 0"
    },
    "1660": {
      "op": "swap",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "0",
        "tmp%10#1"
      ]
    },
    "1661": {
      "op": "substring3",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0"
      ]
    },
    "1662": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "result#0",
        "0"
      ]
    },
    "1663": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr#0",
        "array_length#0",
        "length#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0"
      ]
    },
    "1664": {
      "op": "dig 3",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "length#0"
      ]
    },
    "1666": {
      "op": "intc_1 // 1",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "length#0",
        "1"
      ]
    },
    "1667": {
      "op": "-",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%6#0",
        "tmp%20#0"
      ]
    },
    "1668": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array_length#0",
        "length#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "tmp%21#0"
      ]
    },
    "1669": {
      "op": "assert",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1670": {
      "block": "test_bool_array_after_if_else@15",
      "stack_in": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "1671": {
      "op": "return",
      "stack_out": [
        "array_length#0",
        "length#0",
        "arr#0",
        "i#0"
      ]
    },
    "1672": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_tuple_array",
      "stack_in": [],
      "op": "bytec_2 // 0x0000"
    },
    "1673": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1674": {
      "block": "test_fixed_size_tuple_array_for_header@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1675": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1677": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1678": {
      "op": "bz test_fixed_size_tuple_array_after_for@5",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1681": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1683": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1684": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1685": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1686": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0",
        "2"
      ]
    },
    "1687": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1688": {
      "op": "dig 1",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1690": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1691": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0"
      ]
    },
    "1692": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1693": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%head%1#0"
      ]
    },
    "1694": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%head%1#0",
        "arr#0"
      ]
    },
    "1696": {
      "op": "dup"
    },
    "1697": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%1#0"
      ]
    },
    "1699": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1700": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "1701": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "1702": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1703": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1704": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1705": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1706": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1709": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "1711": {
      "op": "bury 3",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1713": {
      "op": "bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1715": {
      "op": "b test_fixed_size_tuple_array_for_header@2"
    },
    "1718": {
      "block": "test_fixed_size_tuple_array_after_for@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1720": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1721": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1722": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1723": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)"
      ]
    },
    "1724": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0 (copy)",
        "5"
      ]
    },
    "1726": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "tmp%6#0"
      ]
    },
    "1727": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1728": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "arr#0 (copy)"
      ]
    },
    "1730": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1733": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0 (copy)"
      ]
    },
    "1735": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1738": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "1739": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "1740": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1741": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1742": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%encoded_element%0#0",
        "aggregate%item0%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%encoded_element%0#0",
        "8"
      ]
    },
    "1743": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "1744": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "1745": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "1"
      ]
    },
    "1746": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "tmp%7#0"
      ]
    },
    "1747": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "aggregate%item1%0#0"
      ]
    },
    "1748": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%item1%0#0",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "aggregate%item1%0#0",
        "2"
      ]
    },
    "1749": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1750": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0",
        "tmp%9#0"
      ]
    },
    "1751": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "1752": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1753": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%array_length%1#0",
        "1"
      ]
    },
    "1754": {
      "op": "-",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%11#0"
      ]
    },
    "1755": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%array_trimmed%0#0",
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "tmp%11#0",
        "16"
      ]
    },
    "1757": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "1758": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "1760": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1761": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "1762": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "0"
      ]
    },
    "1763": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%item0%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "1764": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1765": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%encoded_element%1#0",
        "8"
      ]
    },
    "1766": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0"
      ]
    },
    "1767": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "1768": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0",
        "5"
      ]
    },
    "1770": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%1#0",
        "tmp%12#0"
      ]
    },
    "1771": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "aggregate%item1%1#0"
      ]
    },
    "1772": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "aggregate%item1%1#0",
        "6"
      ]
    },
    "1774": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "1775": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1776": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1777": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "16"
      ]
    },
    "1779": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_fixed_size",
      "op": "callsub dynamic_array_pop_fixed_size",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "tmp%15#0",
        "arr#0"
      ]
    },
    "1782": {
      "op": "bury 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1784": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1785": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1786": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1787": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "1788": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "1790": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%20#0"
      ]
    },
    "1791": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1792": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "1794": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1797": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0 (copy)"
      ]
    },
    "1799": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1802": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)"
      ]
    },
    "1803": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%encoded_element%2#0 (copy)",
        "0"
      ]
    },
    "1804": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%item0%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%encoded_element%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "1805": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%2#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1806": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%2#0",
        "aggregate%encoded_element%2#0",
        "8"
      ]
    },
    "1807": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ]
    },
    "1808": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "1809": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0",
        "1"
      ]
    },
    "1810": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%item1%2#0",
        "tmp%21#0"
      ]
    },
    "1811": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "aggregate%item1%2#0"
      ]
    },
    "1812": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "aggregate%item1%2#0",
        "2"
      ]
    },
    "1813": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1814": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0",
        "tmp%23#0"
      ]
    },
    "1815": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%2#0"
      ]
    },
    "1816": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "1817": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%array_length%3#0",
        "1"
      ]
    },
    "1818": {
      "op": "-",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "arr#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%25#0"
      ]
    },
    "1819": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "tmp%25#0",
        "16"
      ]
    },
    "1821": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0"
      ]
    },
    "1822": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_trimmed%2#0",
        "aggregate%bytes_offset%3#0",
        "16"
      ]
    },
    "1824": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1825": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ]
    },
    "1826": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)",
        "0"
      ]
    },
    "1827": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "aggregate%item0%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "1828": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1829": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%encoded_element%3#0",
        "8"
      ]
    },
    "1830": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%3#0",
        "aggregate%item1%3#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%3#0",
        "aggregate%item1%3#0"
      ]
    },
    "1831": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0"
      ]
    },
    "1832": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "aggregate%item0%3#0",
        "4"
      ]
    },
    "1834": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%3#0",
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%3#0",
        "tmp%26#0"
      ]
    },
    "1835": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "aggregate%item1%3#0"
      ]
    },
    "1836": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "aggregate%item1%3#0",
        "5"
      ]
    },
    "1838": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "1839": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%28#0"
      ]
    },
    "1840": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1841": {
      "op": "pushbytes \"c\"",
      "defined_out": [
        "\"c\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"c\""
      ]
    },
    "1844": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"c\"",
        "arr#0"
      ]
    },
    "1845": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1846": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "1847": {
      "op": "return",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1848": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array[routing]",
      "params": {},
      "block": "test_fixed_size_named_tuple_array",
      "stack_in": [],
      "op": "bytec_2 // 0x0000"
    },
    "1849": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1850": {
      "block": "test_fixed_size_named_tuple_array_for_header@2",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1851": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1853": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1854": {
      "op": "bz test_fixed_size_named_tuple_array_after_for@5",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1857": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1859": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "1860": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1861": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1862": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "i#0 (copy)"
      ]
    },
    "1864": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0",
        "i#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "1866": {
      "op": "*",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1867": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%4#0",
        "2"
      ]
    },
    "1868": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1869": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ]
    },
    "1870": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "i#0 (copy)"
      ]
    },
    "1872": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1873": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00"
      ]
    },
    "1874": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0"
      ]
    },
    "1875": {
      "op": "uncover 4",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0",
        "tmp%3#0"
      ]
    },
    "1877": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1878": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "tmp%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "1879": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%6#0"
      ]
    },
    "1881": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "1882": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%1#0"
      ]
    },
    "1883": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%1#0",
        "arr#0"
      ]
    },
    "1885": {
      "op": "dup"
    },
    "1886": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%1#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%1#0"
      ]
    },
    "1888": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "1889": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "1890": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "1891": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "1892": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "1893": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "1894": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "1895": {
      "op": "extract 6 2",
      "defined_out": [
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1898": {
      "op": "replace2 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "1900": {
      "op": "bury 3",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1902": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1903": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1904": {
      "op": "bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1906": {
      "op": "b test_fixed_size_named_tuple_array_for_header@2"
    },
    "1909": {
      "block": "test_fixed_size_named_tuple_array_after_for@5",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1911": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1912": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1913": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0"
      ]
    },
    "1914": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "1916": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%9#0"
      ]
    },
    "1917": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1918": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1919": {
      "op": "extract 2 9",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1922": {
      "op": "dup",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "1923": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "0"
      ]
    },
    "1924": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0"
      ]
    },
    "1925": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "aggregate%encoded_element%0#0 (copy)"
      ]
    },
    "1927": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%encoded_element%0#0",
        "aggregate%encoded_element%0#0 (copy)",
        "arr#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "aggregate%encoded_element%0#0 (copy)",
        "64"
      ]
    },
    "1929": {
      "op": "getbit",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "arr#0",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_element%0#0",
        "foo#0",
        "bar#0"
      ]
    },
    "1930": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1932": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%encoded_element%0#0",
        "arr#0",
        "bar#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "aggregate%encoded_element%0#0",
        "65"
      ]
    },
    "1934": {
      "op": "getbit",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "foo#0",
        "bar#0",
        "baz#0"
      ]
    },
    "1935": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0",
        "foo#0"
      ]
    },
    "1937": {
      "op": "!",
      "defined_out": [
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0",
        "tmp%10#0"
      ]
    },
    "1938": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "bar#0",
        "baz#0"
      ]
    },
    "1939": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0",
        "bar#0"
      ]
    },
    "1940": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "baz#0"
      ]
    },
    "1941": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "1942": {
      "op": "pushbytes \"d\"",
      "defined_out": [
        "\"d\"",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "\"d\""
      ]
    },
    "1945": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "i#0",
        "\"d\"",
        "arr#0"
      ]
    },
    "1946": {
      "op": "app_global_put",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1947": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "1948": {
      "op": "return",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "1949": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_tuple_array",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%array_length%1#0"
      ]
    },
    "1950": {
      "op": "bytec_2 // 0x0000"
    },
    "1951": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "1952": {
      "block": "test_dynamic_sized_tuple_array_for_header@2",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "1953": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1955": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1956": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "1959": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1961": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "1962": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1963": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1964": {
      "op": "bzero",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1965": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "1967": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1968": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "1969": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "1970": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "1971": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1974": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1976": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1977": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1979": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length%0#0"
      ]
    },
    "1980": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "1981": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "1984": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "1986": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "1987": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1988": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "0x000a"
      ]
    },
    "1990": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "1991": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "1992": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "1993": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0",
        "0x0002"
      ]
    },
    "1995": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%0#0"
      ]
    },
    "1996": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "1997": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "1999": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "2000": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%1#0"
      ]
    },
    "2002": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "2005": {
      "op": "bury 3",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2007": {
      "op": "bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2009": {
      "op": "b test_dynamic_sized_tuple_array_for_header@2"
    },
    "2012": {
      "block": "test_dynamic_sized_tuple_array_after_for@5",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2014": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2015": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2016": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2017": {
      "op": "bury 4",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2019": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "2021": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2022": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2023": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2024": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2026": {
      "block": "test_dynamic_sized_tuple_array_for_header@6",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2027": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2029": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "2030": {
      "op": "bz test_dynamic_sized_tuple_array_after_for@9",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2033": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2035": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2038": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2040": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2041": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2043": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2044": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2045": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2047": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2048": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2049": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)"
      ]
    },
    "2051": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2052": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "2053": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2055": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2057": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2058": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2060": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "2061": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2063": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)",
        "2"
      ]
    },
    "2064": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2065": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2067": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2068": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "2069": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2071": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2072": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2074": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2076": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2078": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2079": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2080": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "2081": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2082": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2084": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "2085": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2086": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2088": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2089": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2091": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2093": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2094": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2097": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2098": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2100": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "tmp%8#0"
      ]
    },
    "2101": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2102": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "tmp%9#0"
      ]
    },
    "2103": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "tmp%9#0",
        "i#0"
      ]
    },
    "2105": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "tmp%10#0"
      ]
    },
    "2106": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2107": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2109": {
      "op": "b test_dynamic_sized_tuple_array_for_header@6"
    },
    "2112": {
      "block": "test_dynamic_sized_tuple_array_after_for@9",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2114": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "arr#0"
      ]
    },
    "2117": {
      "op": "bury 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2119": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2120": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2121": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2122": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2123": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "2125": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "2126": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2127": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "2129": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2132": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2133": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "0"
      ]
    },
    "2134": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2135": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2137": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "2138": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2139": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2141": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2142": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2144": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "2"
      ]
    },
    "2145": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2146": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0 (copy)"
      ]
    },
    "2148": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2149": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%has_next%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2151": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2152": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2154": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0"
      ]
    },
    "2156": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2158": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2159": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "0"
      ]
    },
    "2161": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0"
      ]
    },
    "2162": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2164": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "2165": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2166": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2168": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%len%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2169": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2171": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2173": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2174": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0"
      ]
    },
    "2177": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "2178": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0",
        "1"
      ]
    },
    "2179": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0"
      ]
    },
    "2180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "0"
      ]
    },
    "2181": {
      "op": "bzero",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2182": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%item1%1#0"
      ]
    },
    "2184": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "2185": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%20#0"
      ]
    },
    "2186": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2187": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2189": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)",
        "2"
      ]
    },
    "2190": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2191": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2193": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2194": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2195": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2197": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "1"
      ]
    },
    "2198": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2199": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2201": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "2203": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2204": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2205": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "2206": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2207": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2209": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2210": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2211": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2213": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2214": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2216": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "2217": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2218": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "0"
      ]
    },
    "2220": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0"
      ]
    },
    "2221": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2223": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0 (copy)",
        "8"
      ]
    },
    "2224": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2225": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2227": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2228": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2230": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2232": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2233": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ]
    },
    "2236": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "2237": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0",
        "4"
      ]
    },
    "2239": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "tmp%23#0"
      ]
    },
    "2240": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "tmp%23#0",
        "3"
      ]
    },
    "2242": {
      "op": "bzero",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "2243": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "tmp%24#0",
        "aggregate%item1%2#0"
      ]
    },
    "2245": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%23#0",
        "tmp%25#0"
      ]
    },
    "2246": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%26#0"
      ]
    },
    "2247": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2248": {
      "op": "pushbytes \"e\"",
      "defined_out": [
        "\"e\"",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"e\""
      ]
    },
    "2251": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "\"e\"",
        "arr#0"
      ]
    },
    "2252": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2253": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "2254": {
      "op": "return",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2255": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array[routing]",
      "params": {},
      "block": "test_dynamic_sized_named_tuple_array",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%array_length%1#0"
      ]
    },
    "2256": {
      "op": "bytec_2 // 0x0000"
    },
    "2257": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2258": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@2",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2259": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2261": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2262": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2265": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2267": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2268": {
      "op": "+",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "2269": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "2270": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "2273": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0"
      ]
    },
    "2275": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2276": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2277": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "2278": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "2279": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2282": {
      "op": "dig 3",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "2284": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2285": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "2287": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length%0#0"
      ]
    },
    "2288": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%as_bytes%1#0"
      ]
    },
    "2289": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "2292": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%length_uint16%0#0",
        "tmp%3#0"
      ]
    },
    "2294": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2295": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2296": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "0x000a"
      ]
    },
    "2298": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "2299": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "2300": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2301": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%0#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0",
        "0x0002"
      ]
    },
    "2303": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%0#0"
      ]
    },
    "2304": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%1#0"
      ]
    },
    "2305": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "2307": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "aggregate%concat%1#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "2308": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%1#0"
      ]
    },
    "2310": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%2#0",
        "arr#0"
      ]
    },
    "2313": {
      "op": "bury 3",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2315": {
      "op": "bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2317": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@2"
    },
    "2320": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@5",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2322": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "0"
      ]
    },
    "2323": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2324": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2325": {
      "op": "bury 4",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2327": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_length%1#0",
        "5"
      ]
    },
    "2329": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "2330": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2331": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2332": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2334": {
      "block": "test_dynamic_sized_named_tuple_array_for_header@6",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2335": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2337": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "2338": {
      "op": "bz test_dynamic_sized_named_tuple_array_after_for@9",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2341": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2343": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2346": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "2348": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "2349": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "2351": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2352": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2353": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2355": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%item_offset_offset%0#0"
      ]
    },
    "2356": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2357": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)"
      ]
    },
    "2359": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "arr#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2360": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "2361": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2363": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2365": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2366": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2368": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "2369": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2371": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)",
        "2"
      ]
    },
    "2372": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2373": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)"
      ]
    },
    "2375": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%array_head_and_tail%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "2376": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "2377": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "2379": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%0#0",
        "aggregate%array_length%1#0",
        "aggregate%end_offset%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2380": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0"
      ]
    },
    "2382": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0"
      ]
    },
    "2384": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%array_head_and_tail%0#0",
        "aggregate%item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "2386": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2387": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2388": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "0"
      ]
    },
    "2389": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2390": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2392": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "2393": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "2394": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "2396": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%item0%0#0",
        "aggregate%len%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2397": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "2399": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%0#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "2401": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "2402": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item0%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2405": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0"
      ]
    },
    "2406": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "aggregate%item0%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "2408": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "tmp%8#0"
      ]
    },
    "2409": {
      "error": "expected 1st element to be correct",
      "op": "assert // expected 1st element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0"
      ]
    },
    "2410": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "i#0"
      ]
    },
    "2412": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%item1%0#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "aggregate%item1%0#0",
        "tmp%9#0"
      ]
    },
    "2415": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%next_index%0#0",
        "arr#0",
        "i#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "aggregate%next_index%0#0",
        "tmp%10#0"
      ]
    },
    "2416": {
      "error": "expected 2nd element to be correct",
      "op": "assert // expected 2nd element to be correct",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "2417": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2419": {
      "op": "b test_dynamic_sized_named_tuple_array_for_header@6"
    },
    "2422": {
      "block": "test_dynamic_sized_named_tuple_array_after_for@9",
      "stack_in": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2424": {
      "callsub": "_puya_lib.arc4.dynamic_array_pop_dynamic_element",
      "op": "callsub dynamic_array_pop_dynamic_element",
      "defined_out": [
        "arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "tmp%11#0",
        "arr#0"
      ]
    },
    "2427": {
      "op": "bury 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2429": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2430": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2431": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2432": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2433": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "4"
      ]
    },
    "2435": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "arr#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "tmp%16#0"
      ]
    },
    "2436": {
      "op": "assert",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2437": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "arr#0 (copy)"
      ]
    },
    "2439": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2442": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2443": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "0"
      ]
    },
    "2444": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2445": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)"
      ]
    },
    "2447": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0 (copy)",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_length%3#0 (copy)",
        "1"
      ]
    },
    "2448": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2449": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2451": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2452": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2454": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "2"
      ]
    },
    "2455": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2456": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%1#0",
        "aggregate%end_of_array%1#0 (copy)"
      ]
    },
    "2458": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0"
      ]
    },
    "2459": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%has_next%1#0",
        "aggregate%has_next%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%next_item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_of_array%1#0 (copy)",
        "aggregate%next_item_offset%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2461": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2462": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2464": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%end_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0"
      ]
    },
    "2466": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0",
        "aggregate%end_offset%1#0"
      ]
    },
    "2468": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2469": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2470": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "0"
      ]
    },
    "2471": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0"
      ]
    },
    "2472": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2474": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%substring3%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0 (copy)",
        "8"
      ]
    },
    "2475": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "2476": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%2#0 (copy)"
      ]
    },
    "2478": {
      "op": "len",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%len%1#0",
        "aggregate%substring3%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%substring3%2#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2479": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "aggregate%substring3%2#0"
      ]
    },
    "2481": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%2#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "2483": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "2484": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item0%1#0",
        "aggregate%item1%1#0"
      ]
    },
    "2487": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0"
      ]
    },
    "2488": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "aggregate%item0%1#0",
        "1"
      ]
    },
    "2489": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item1%1#0",
        "tmp%17#0"
      ]
    },
    "2490": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "aggregate%item1%1#0"
      ]
    },
    "2491": {
      "op": "bytec_0 // \"\"",
      "defined_out": [
        "\"\"",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item1%1#0",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "aggregate%item1%1#0",
        "\"\""
      ]
    },
    "2492": {
      "op": "==",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2493": {
      "op": "&&",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "arr#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "tmp%19#0"
      ]
    },
    "2494": {
      "error": "expected 1, 0",
      "op": "assert // expected 1, 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2495": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)"
      ]
    },
    "2497": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0 (copy)",
        "2"
      ]
    },
    "2498": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2499": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2501": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "2502": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%1#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%has_next%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "2503": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0"
      ]
    },
    "2505": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%1#0",
        "1"
      ]
    },
    "2506": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_length%3#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2507": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2509": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "2511": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2512": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "2513": {
      "op": "intc_2 // 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "2"
      ]
    },
    "2514": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2515": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2517": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "2518": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_of_array%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2519": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%end_of_array%1#0"
      ]
    },
    "2521": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "2522": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_of_array%1#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "2524": {
      "op": "select",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "2525": {
      "op": "substring3",
      "defined_out": [
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2526": {
      "op": "dup",
      "defined_out": [
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%substring3%4#0 (copy)",
        "0"
      ]
    },
    "2528": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0"
      ]
    },
    "2529": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2531": {
      "op": "intc_3 // 8",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0 (copy)",
        "8"
      ]
    },
    "2532": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "2533": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%substring3%4#0 (copy)"
      ]
    },
    "2535": {
      "op": "len",
      "defined_out": [
        "aggregate%extract_uint16%2#0",
        "aggregate%item0%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%4#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%substring3%4#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2536": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0",
        "aggregate%substring3%4#0"
      ]
    },
    "2538": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%4#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%2#0"
      ]
    },
    "2540": {
      "op": "substring3",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "2541": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%item0%2#0",
        "aggregate%item1%2#0",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item0%2#0",
        "aggregate%item1%2#0"
      ]
    },
    "2544": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0"
      ]
    },
    "2545": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "aggregate%item0%2#0",
        "4"
      ]
    },
    "2547": {
      "op": "==",
      "defined_out": [
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "aggregate%item1%2#0",
        "tmp%22#0"
      ]
    },
    "2548": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "aggregate%item1%2#0"
      ]
    },
    "2549": {
      "op": "pushbytes \"   \"",
      "defined_out": [
        "\"   \"",
        "aggregate%item1%2#0",
        "arr#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "aggregate%item1%2#0",
        "\"   \""
      ]
    },
    "2554": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "2555": {
      "op": "&&",
      "defined_out": [
        "arr#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "tmp%24#0"
      ]
    },
    "2556": {
      "error": "expected 4, 3",
      "op": "assert // expected 4, 3",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "2557": {
      "op": "pushbytes \"f\"",
      "defined_out": [
        "\"f\"",
        "arr#0"
      ],
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "arr#0",
        "\"f\""
      ]
    },
    "2560": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "\"f\"",
        "arr#0"
      ]
    },
    "2561": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2562": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "2563": {
      "op": "return",
      "stack_out": [
        "aggregate%array_length%1#0",
        "arr#0",
        "i#0"
      ]
    },
    "2564": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log[routing]",
      "params": {},
      "block": "test_implicit_conversion_log",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2567": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2568": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2569": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2570": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0",
        "8"
      ]
    },
    "2571": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0"
      ]
    },
    "2572": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0",
        "2"
      ]
    },
    "2573": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0"
      ]
    },
    "2574": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "add%0#0",
        "arr#0 (copy)"
      ]
    },
    "2576": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2577": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "eq%0#0"
      ],
      "stack_out": [
        "arr#0",
        "eq%0#0"
      ]
    },
    "2578": {
      "error": "invalid number of bytes for arc4.dynamic_array<uint64>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<uint64>",
      "stack_out": [
        "arr#0"
      ]
    },
    "2579": {
      "op": "log",
      "stack_out": []
    },
    "2580": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2581": {
      "op": "return",
      "stack_out": []
    },
    "2582": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit[routing]",
      "params": {},
      "block": "test_implicit_conversion_emit",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "2585": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2586": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2587": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2588": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0",
        "8"
      ]
    },
    "2589": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0"
      ]
    },
    "2590": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0",
        "2"
      ]
    },
    "2591": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0"
      ]
    },
    "2592": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "add%0#0",
        "arr#0 (copy)"
      ]
    },
    "2594": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "2595": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "eq%0#0"
      ],
      "stack_out": [
        "arr#0",
        "eq%0#0"
      ]
    },
    "2596": {
      "error": "invalid number of bytes for arc4.dynamic_array<uint64>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<uint64>",
      "stack_out": [
        "arr#0"
      ]
    },
    "2597": {
      "op": "pushbytes 0xfa40c0530002",
      "defined_out": [
        "0xfa40c0530002",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0xfa40c0530002"
      ]
    },
    "2605": {
      "op": "swap",
      "stack_out": [
        "0xfa40c0530002",
        "arr#0"
      ]
    },
    "2606": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "2607": {
      "op": "log",
      "stack_out": []
    },
    "2608": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "2609": {
      "op": "return",
      "stack_out": []
    },
    "2610": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_nested_array[routing]",
      "params": {},
      "block": "test_nested_array",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0"
      ]
    },
    "2611": {
      "op": "dupn 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0"
      ]
    },
    "2613": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2614": {
      "op": "dupn 6",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0"
      ]
    },
    "2616": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "2619": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "2620": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "2621": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "2622": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "2623": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "tmp%0#0"
      ]
    },
    "2624": {
      "op": "btoi",
      "defined_out": [
        "arr_to_add#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0"
      ]
    },
    "2625": {
      "op": "txna ApplicationArgs 2"
    },
    "2628": {
      "op": "dupn 2",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "arr_to_add#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2630": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2631": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2632": {
      "op": "dup",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2633": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2635": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "2636": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "arr#0",
        "num_bytes%0#0"
      ]
    },
    "2637": {
      "op": "swap",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "arr#0"
      ]
    },
    "2638": {
      "op": "dup",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2639": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "arr#0",
        "total_length%0#0"
      ]
    },
    "2640": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "arr#0"
      ]
    },
    "2641": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0",
        "array_data%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0"
      ]
    },
    "2644": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0",
        "arr_to_add#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2645": {
      "block": "test_nested_array_for_header@1",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "2646": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "2648": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "2649": {
      "op": "bz test_nested_array_after_for@4",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2652": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ]
    },
    "2654": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)",
        "2"
      ]
    },
    "2655": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0"
      ]
    },
    "2656": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0"
      ]
    },
    "2658": {
      "op": "dup"
    },
    "2659": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0"
      ]
    },
    "2661": {
      "error": "invalid array encoding",
      "op": "extract_uint16 // on error: invalid array encoding",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "array_data%0#0",
        "item_offset%0#0"
      ]
    },
    "2662": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ]
    },
    "2663": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ]
    },
    "2665": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0",
        "num_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "2666": {
      "op": "cover 4",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "2668": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0",
        "offset_is_correct%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "offset_is_correct%0#0"
      ]
    },
    "2669": {
      "error": "invalid tail pointer for (len+(len+uint64[])[])",
      "op": "assert // invalid tail pointer for (len+(len+uint64[])[])",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0"
      ]
    },
    "2670": {
      "op": "dup2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "array_data%0#0 (copy)",
        "item_offset%0#0 (copy)"
      ]
    },
    "2671": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%item_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%item_length%0#0"
      ]
    },
    "2672": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%item_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%item_length%0#0",
        "8"
      ]
    },
    "2673": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0"
      ]
    },
    "2674": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%item_length_in_bytes%0#0",
        "2"
      ]
    },
    "2675": {
      "op": "+",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%item_head_tail_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%item_head_tail_length%0#0"
      ]
    },
    "2676": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%item%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%item%0#0"
      ]
    },
    "2677": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%0#0",
        "aggregate%item%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%item%0#0",
        "0"
      ]
    },
    "2678": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "2679": {
      "op": "intc_3 // 8",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%array_length%1#0",
        "8"
      ]
    },
    "2680": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "mul%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "mul%0#0"
      ]
    },
    "2681": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "mul%0#0",
        "2"
      ]
    },
    "2682": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "add%0#0"
      ]
    },
    "2683": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ]
    },
    "2684": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "2686": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "1"
      ]
    },
    "2687": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "2688": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2690": {
      "op": "b test_nested_array_for_header@1"
    },
    "2693": {
      "block": "test_nested_array_after_for@4",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ]
    },
    "2695": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "2"
      ]
    },
    "2696": {
      "op": "+",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0"
      ]
    },
    "2697": {
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ]
    },
    "2699": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "eq%1#0"
      ]
    },
    "2700": {
      "error": "invalid number of bytes for arc4.dynamic_array<arc4.dynamic_array<uint64>>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<arc4.dynamic_array<uint64>>",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2701": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0"
      ]
    },
    "2702": {
      "op": "bury 12",
      "defined_out": [
        "i#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2704": {
      "block": "test_nested_array_for_header@6",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 11",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0"
      ]
    },
    "2706": {
      "op": "dig 7",
      "defined_out": [
        "arr_to_add#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0",
        "arr_to_add#0"
      ]
    },
    "2708": {
      "op": "<",
      "defined_out": [
        "arr_to_add#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "2709": {
      "op": "bz test_nested_array_after_for@13",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2712": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "arr_to_add#0",
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extra_arr#0"
      ]
    },
    "2713": {
      "op": "bury 17",
      "defined_out": [
        "arr_to_add#0",
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2715": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr_to_add#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0"
      ]
    },
    "2716": {
      "op": "bury 9",
      "defined_out": [
        "arr_to_add#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2718": {
      "block": "test_nested_array_for_header@8",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 8",
      "defined_out": [
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0"
      ]
    },
    "2720": {
      "op": "dig 12",
      "defined_out": [
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "i#0"
      ]
    },
    "2722": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%1#0"
      ]
    },
    "2723": {
      "op": "bz test_nested_array_after_for@11",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2726": {
      "op": "dig 8",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0"
      ]
    },
    "2728": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "j#0",
        "j#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "j#0 (copy)"
      ]
    },
    "2729": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2730": {
      "op": "dig 18",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0"
      ]
    },
    "2732": {
      "op": "dup"
    },
    "2733": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "extra_arr#0",
        "extra_arr#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2735": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "extra_arr#0",
        "concat%0#0"
      ]
    },
    "2736": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "extra_arr#0"
      ]
    },
    "2737": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "extra_arr#0",
        "0"
      ]
    },
    "2738": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2739": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%0#0",
        "extra_arr#0",
        "extract_uint16%0#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2740": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2741": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2742": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2745": {
      "op": "replace2 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "extra_arr#0"
      ]
    },
    "2747": {
      "op": "bury 18",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0"
      ]
    },
    "2749": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0",
        "1"
      ]
    },
    "2750": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "j#0"
      ]
    },
    "2751": {
      "op": "bury 9",
      "defined_out": [
        "extra_arr#0",
        "i#0",
        "j#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2753": {
      "op": "b test_nested_array_for_header@8"
    },
    "2756": {
      "block": "test_nested_array_after_for@11",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0"
      ]
    },
    "2758": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "2759": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "2760": {
      "op": "extract_uint16",
      "defined_out": [
        "arr#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0",
        "extract_uint16%1#0"
      ]
    },
    "2761": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "arr#0"
      ]
    },
    "2762": {
      "op": "extract 2 0",
      "defined_out": [
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "2765": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x0002"
      ]
    },
    "2767": {
      "op": "dig 19",
      "defined_out": [
        "0x0002",
        "arr#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "0x0002",
        "extra_arr#0"
      ]
    },
    "2769": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%0#0",
        "arr#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "aggregate%concat%0#0"
      ]
    },
    "2770": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%concat%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0"
      ]
    },
    "2772": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%0#0",
        "arr#0",
        "extra_arr#0",
        "extract_to_end%0#0",
        "extract_uint16%1#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%concat%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "2773": {
      "op": "uncover 3",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "extract_uint16%1#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%0#0"
      ]
    },
    "2775": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0"
      ]
    },
    "2778": {
      "op": "bury 6",
      "defined_out": [
        "arr#0",
        "extra_arr#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2780": {
      "op": "dig 11",
      "defined_out": [
        "arr#0",
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0"
      ]
    },
    "2782": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0",
        "1"
      ]
    },
    "2783": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "i#0"
      ]
    },
    "2784": {
      "op": "bury 12",
      "defined_out": [
        "arr#0",
        "extra_arr#0",
        "i#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2786": {
      "op": "b test_nested_array_for_header@6"
    },
    "2789": {
      "block": "test_nested_array_after_for@13",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "totals#0"
      ]
    },
    "2790": {
      "op": "bury 15",
      "defined_out": [
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2792": {
      "op": "dig 5",
      "defined_out": [
        "arr#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0"
      ]
    },
    "2794": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0",
        "0"
      ]
    },
    "2795": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2796": {
      "op": "bury 14",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2798": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2799": {
      "op": "bury 11",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "item_index_internal%0#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2801": {
      "block": "test_nested_array_for_header@14",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 10",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2803": {
      "op": "dig 14",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%2#0"
      ]
    },
    "2805": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%2#0"
      ]
    },
    "2806": {
      "op": "bz test_nested_array_after_for@17",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2809": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr#0"
      ]
    },
    "2811": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0"
      ]
    },
    "2814": {
      "op": "dig 11",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "item_index_internal%0#0"
      ]
    },
    "2816": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "item_index_internal%0#0",
        "2"
      ]
    },
    "2817": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "2818": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)"
      ]
    },
    "2820": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset_offset%1#0"
      ]
    },
    "2821": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0"
      ]
    },
    "2822": {
      "op": "dup2",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%array_length%2#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_offset%1#0 (copy)",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%array_head_and_tail%1#0 (copy)",
        "aggregate%item_offset%1#0 (copy)"
      ]
    },
    "2823": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_length%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_length%1#0"
      ]
    },
    "2824": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_length%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_length%1#0",
        "8"
      ]
    },
    "2825": {
      "op": "*",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_length_in_bytes%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_length_in_bytes%1#0"
      ]
    },
    "2826": {
      "op": "intc_2 // 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_length_in_bytes%1#0",
        "2"
      ]
    },
    "2827": {
      "op": "+",
      "defined_out": [
        "aggregate%array_head_and_tail%1#0",
        "aggregate%array_length%2#0",
        "aggregate%item_head_tail_length%1#0",
        "aggregate%item_offset%1#0",
        "arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_head_and_tail%1#0",
        "aggregate%item_offset%1#0",
        "aggregate%item_head_tail_length%1#0"
      ]
    },
    "2828": {
      "op": "extract3",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0"
      ]
    },
    "2829": {
      "op": "dup",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0",
        "inner_arr#0"
      ]
    },
    "2830": {
      "op": "bury 17",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0"
      ]
    },
    "2832": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0",
        "total#0"
      ]
    },
    "2833": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0"
      ]
    },
    "2835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0",
        "0"
      ]
    },
    "2836": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "2837": {
      "op": "bury 13",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2839": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3"
      ]
    },
    "2840": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr#0",
        "inner_arr#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2842": {
      "block": "test_nested_array_for_header@19",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 9",
      "defined_out": [
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3"
      ]
    },
    "2844": {
      "op": "dig 13",
      "defined_out": [
        "aggregate%array_length%3#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "aggregate%array_length%3#0"
      ]
    },
    "2846": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%3#0",
        "continue_looping%0#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "2847": {
      "op": "bz test_nested_array_after_for@21",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2850": {
      "op": "dig 15",
      "defined_out": [
        "aggregate%array_length%3#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "inner_arr#0"
      ]
    },
    "2852": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "2855": {
      "op": "dig 10",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3"
      ]
    },
    "2857": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "item_index_internal%0#3 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)",
        "item_index_internal%0#3 (copy)"
      ]
    },
    "2858": {
      "op": "cover 2",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)"
      ]
    },
    "2860": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%0#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "item_index_internal%0#3 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#3 (copy)",
        "8"
      ]
    },
    "2861": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "2862": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "i#0"
      ]
    },
    "2863": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%array_length%3#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "i#0",
        "total#0"
      ]
    },
    "2865": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "total#0"
      ]
    },
    "2866": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%array_length%3#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3"
      ]
    },
    "2868": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3",
        "1"
      ]
    },
    "2869": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#3"
      ]
    },
    "2870": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_length%3#0",
        "i#0",
        "inner_arr#0",
        "item_index_internal%0#3",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2872": {
      "op": "b test_nested_array_for_header@19"
    },
    "2875": {
      "block": "test_nested_array_after_for@21",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "total#0"
      ]
    },
    "2877": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2878": {
      "op": "dig 15",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%val_as_bytes%1#0",
        "totals#0"
      ]
    },
    "2880": {
      "op": "dup"
    },
    "2881": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "total#0",
        "totals#0",
        "totals#0 (copy)"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "totals#0",
        "totals#0 (copy)",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "2883": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "totals#0",
        "concat%1#0"
      ]
    },
    "2884": {
      "op": "swap",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "totals#0"
      ]
    },
    "2885": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "totals#0",
        "0"
      ]
    },
    "2886": {
      "op": "extract_uint16",
      "defined_out": [
        "concat%1#0",
        "extract_uint16%2#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "extract_uint16%2#0"
      ]
    },
    "2887": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "concat%1#0",
        "extract_uint16%2#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "2888": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "2889": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "2890": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%1#0",
        "concat%1#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "2893": {
      "op": "replace2 0",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "totals#0"
      ]
    },
    "2895": {
      "op": "bury 15",
      "defined_out": [
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2897": {
      "op": "dig 10",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2899": {
      "op": "intc_1 // 1",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "2900": {
      "op": "+",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "2901": {
      "op": "bury 11",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2903": {
      "op": "b test_nested_array_for_header@14"
    },
    "2906": {
      "block": "test_nested_array_after_for@17",
      "stack_in": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "0x151f7c75"
      ]
    },
    "2907": {
      "op": "dig 15",
      "defined_out": [
        "0x151f7c75",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "0x151f7c75",
        "totals#0"
      ]
    },
    "2909": {
      "op": "concat",
      "defined_out": [
        "tmp%5#0",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tmp%5#0"
      ]
    },
    "2910": {
      "op": "log",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2911": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "totals#0"
      ],
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "1"
      ]
    },
    "2912": {
      "op": "return",
      "stack_out": [
        "extra_arr#0",
        "inner_arr#0",
        "totals#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#3",
        "j#0",
        "total#0",
        "arr_to_add#0",
        "arr#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "2913": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples[routing]",
      "params": {},
      "block": "test_bit_packed_tuples",
      "stack_in": [],
      "op": "bytec_2 // 0x0000"
    },
    "2914": {
      "op": "dupn 3"
    },
    "2916": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "2917": {
      "block": "test_bit_packed_tuples_for_header@2",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "2918": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "2920": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "2921": {
      "op": "bz test_bit_packed_tuples_after_for@5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "2924": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "2926": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "2927": {
      "op": "dig 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "i#0 (copy)"
      ]
    },
    "2929": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "i#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2930": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2931": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "0x00"
      ]
    },
    "2932": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%8#0",
        "tmp%9#0",
        "0x00",
        "0"
      ]
    },
    "2933": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "0x00",
        "0",
        "tmp%8#0"
      ]
    },
    "2935": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "2936": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%9#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "2937": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%9#0"
      ]
    },
    "2939": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "2940": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0"
      ]
    },
    "2942": {
      "op": "dup",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "arr2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)",
        "arr2#0 (copy)"
      ]
    },
    "2943": {
      "op": "cover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)"
      ]
    },
    "2945": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%set_bit%0#0 (copy)",
        "arr2#0",
        "arr2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "arr2#0 (copy)",
        "aggregate%set_bit%0#0 (copy)"
      ]
    },
    "2947": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "arr2#0",
        "aggregate%set_bit%0#0",
        "concat%0#0"
      ]
    },
    "2948": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "arr2#0"
      ]
    },
    "2950": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "arr2#0",
        "0"
      ]
    },
    "2951": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "2952": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "2953": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "2954": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "2955": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "2958": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "arr2#0"
      ]
    },
    "2960": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "2962": {
      "op": "dig 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "i#0 (copy)"
      ]
    },
    "2964": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "2965": {
      "op": "+",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0"
      ]
    },
    "2966": {
      "op": "dig 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "i#0 (copy)"
      ]
    },
    "2968": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "2969": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "2970": {
      "op": "dig 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "i#0 (copy)"
      ]
    },
    "2972": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "i#0 (copy)",
        "3"
      ]
    },
    "2974": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "2975": {
      "op": "dig 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "i#0 (copy)"
      ]
    },
    "2977": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "i#0 (copy)",
        "4"
      ]
    },
    "2979": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "2980": {
      "op": "dig 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "i#0 (copy)"
      ]
    },
    "2982": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "i#0 (copy)",
        "5"
      ]
    },
    "2984": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "2985": {
      "op": "dig 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0 (copy)"
      ]
    },
    "2987": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "i#0 (copy)",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "i#0 (copy)",
        "6"
      ]
    },
    "2989": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2990": {
      "op": "dig 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "i#0 (copy)"
      ]
    },
    "2992": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "aggregate%set_bit%0#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "2993": {
      "op": "uncover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "2995": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0",
        "2"
      ]
    },
    "2996": {
      "op": "uncover 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0",
        "2",
        "tmp%14#0"
      ]
    },
    "2998": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%2#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0"
      ]
    },
    "2999": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0",
        "3"
      ]
    },
    "3001": {
      "op": "uncover 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%2#0",
        "3",
        "tmp%15#0"
      ]
    },
    "3003": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%3#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0"
      ]
    },
    "3004": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0",
        "4"
      ]
    },
    "3006": {
      "op": "uncover 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%3#0",
        "4",
        "tmp%16#0"
      ]
    },
    "3008": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%4#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0"
      ]
    },
    "3009": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%17#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0",
        "5"
      ]
    },
    "3011": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%4#0",
        "5",
        "tmp%17#0"
      ]
    },
    "3013": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%5#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0"
      ]
    },
    "3014": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "tmp%18#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0",
        "6"
      ]
    },
    "3016": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%5#0",
        "6",
        "tmp%18#0"
      ]
    },
    "3018": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "3019": {
      "op": "dup2",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%set_bit%6#0 (copy)",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0 (copy)",
        "aggregate%set_bit%6#0 (copy)"
      ]
    },
    "3020": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0"
      ]
    },
    "3021": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "arr2#0",
        "i#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0",
        "tmp%11#0 (copy)"
      ]
    },
    "3023": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3024": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%3#0"
      ]
    },
    "3025": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%3#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%3#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "3027": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%4#0"
      ]
    },
    "3028": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%4#0",
        "arr7#0"
      ]
    },
    "3030": {
      "op": "dup"
    },
    "3031": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0",
        "arr7#0 (copy)",
        "aggregate%head%4#0"
      ]
    },
    "3033": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0",
        "concat%1#0"
      ]
    },
    "3034": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "arr7#0"
      ]
    },
    "3035": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "arr7#0",
        "0"
      ]
    },
    "3036": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "extract_uint16%1#0"
      ]
    },
    "3037": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "extract_uint16%1#0",
        "1"
      ]
    },
    "3038": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "concat%1#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "add%1#0"
      ]
    },
    "3039": {
      "op": "itob",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "3040": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "3043": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "arr7#0"
      ]
    },
    "3045": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3047": {
      "op": "dig 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "i#0 (copy)"
      ]
    },
    "3049": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "i#0 (copy)",
        "7"
      ]
    },
    "3051": {
      "op": "==",
      "defined_out": [
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%6#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%28#0"
      ]
    },
    "3052": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%28#0",
        "aggregate%set_bit%6#0"
      ]
    },
    "3054": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%28#0",
        "aggregate%set_bit%6#0",
        "7"
      ]
    },
    "3056": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%6#0",
        "7",
        "tmp%28#0"
      ]
    },
    "3058": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%13#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "3059": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%13#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3061": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%13#0"
      ]
    },
    "3062": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0"
      ]
    },
    "3063": {
      "op": "dup",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)"
      ]
    },
    "3064": {
      "op": "dig 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%7#0 (copy)",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "3066": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%8#0"
      ]
    },
    "3067": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "arr8#0"
      ]
    },
    "3069": {
      "op": "dup"
    },
    "3070": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%head%8#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "aggregate%head%8#0"
      ]
    },
    "3072": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0",
        "concat%2#0"
      ]
    },
    "3073": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "arr8#0"
      ]
    },
    "3074": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "arr8#0",
        "0"
      ]
    },
    "3075": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "extract_uint16%2#0"
      ]
    },
    "3076": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "extract_uint16%2#0",
        "1"
      ]
    },
    "3077": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "concat%2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "add%2#0"
      ]
    },
    "3078": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_bytes%2#0",
        "concat%2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "as_bytes%2#0"
      ]
    },
    "3079": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "as_u16_bytes%2#0",
        "concat%2#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "concat%2#0",
        "as_u16_bytes%2#0"
      ]
    },
    "3082": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "arr8#0"
      ]
    },
    "3084": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0"
      ]
    },
    "3086": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "i#0"
      ]
    },
    "3088": {
      "op": "intc_3 // 8",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "i#0",
        "8"
      ]
    },
    "3089": {
      "op": "==",
      "defined_out": [
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%39#0"
      ]
    },
    "3090": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%39#0",
        "0x00"
      ]
    },
    "3091": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "tmp%39#0",
        "0x00",
        "0"
      ]
    },
    "3092": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "0x00",
        "0",
        "tmp%39#0"
      ]
    },
    "3094": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%4#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%7#0",
        "aggregate%encoded_bool%4#0"
      ]
    },
    "3095": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%1#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%head%12#0"
      ]
    },
    "3096": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%head%12#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3097": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%head%13#0"
      ]
    },
    "3098": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "aggregate%head%13#0",
        "arr9#0"
      ]
    },
    "3100": {
      "op": "dup"
    },
    "3101": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%13#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "arr9#0",
        "arr9#0 (copy)",
        "aggregate%head%13#0"
      ]
    },
    "3103": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "arr9#0",
        "concat%3#0"
      ]
    },
    "3104": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "arr9#0"
      ]
    },
    "3105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "arr9#0",
        "0"
      ]
    },
    "3106": {
      "op": "extract_uint16",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "extract_uint16%3#0"
      ]
    },
    "3107": {
      "op": "intc_1 // 1",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "extract_uint16%3#0",
        "1"
      ]
    },
    "3108": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "concat%3#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "add%3#0"
      ]
    },
    "3109": {
      "op": "itob",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_bytes%3#0",
        "concat%3#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "as_bytes%3#0"
      ]
    },
    "3110": {
      "op": "extract 6 2",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "as_u16_bytes%3#0",
        "concat%3#0",
        "i#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "concat%3#0",
        "as_u16_bytes%3#0"
      ]
    },
    "3113": {
      "op": "replace2 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "tmp%11#0",
        "arr9#0"
      ]
    },
    "3115": {
      "op": "bury 3",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "i#0"
      ]
    },
    "3117": {
      "op": "bury 1",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3119": {
      "op": "b test_bit_packed_tuples_for_header@2"
    },
    "3122": {
      "block": "test_bit_packed_tuples_after_for@5",
      "stack_in": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3124": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "3125": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "3126": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%4#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "3127": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "aggregate%array_length%4#0",
        "arr2#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "aggregate%array_length%4#0",
        "5"
      ]
    },
    "3129": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "tmp%42#0"
      ]
    },
    "3130": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0"
      ]
    },
    "3131": {
      "op": "dig 4",
      "defined_out": [
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3133": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)"
      ]
    },
    "3134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr7#0 (copy)",
        "0"
      ]
    },
    "3135": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%5#0",
        "arr2#0",
        "arr7#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "aggregate%array_length%5#0"
      ]
    },
    "3136": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "aggregate%array_length%5#0",
        "5"
      ]
    },
    "3138": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "tmp%44#0"
      ]
    },
    "3139": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0"
      ]
    },
    "3140": {
      "op": "dig 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3142": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)"
      ]
    },
    "3143": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr8#0 (copy)",
        "0"
      ]
    },
    "3144": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%6#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "aggregate%array_length%6#0"
      ]
    },
    "3145": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "aggregate%array_length%6#0",
        "5"
      ]
    },
    "3147": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "tmp%46#0"
      ]
    },
    "3148": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0"
      ]
    },
    "3149": {
      "op": "dig 4",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3151": {
      "op": "dup",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)"
      ]
    },
    "3152": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "arr9#0 (copy)",
        "0"
      ]
    },
    "3153": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%7#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "aggregate%array_length%7#0"
      ]
    },
    "3154": {
      "op": "pushint 5 // 5",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "aggregate%array_length%7#0",
        "5"
      ]
    },
    "3156": {
      "op": "==",
      "defined_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "tmp%48#0"
      ]
    },
    "3157": {
      "op": "assert",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3158": {
      "op": "pushbytes \"bool2\"",
      "defined_out": [
        "\"bool2\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\""
      ]
    },
    "3165": {
      "op": "uncover 4",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool2\"",
        "arr2#0"
      ]
    },
    "3167": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3168": {
      "op": "pushbytes \"bool7\"",
      "defined_out": [
        "\"bool7\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\""
      ]
    },
    "3175": {
      "op": "uncover 3",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool7\"",
        "arr7#0"
      ]
    },
    "3177": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0"
      ]
    },
    "3178": {
      "op": "pushbytes \"bool8\"",
      "defined_out": [
        "\"bool8\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr8#0",
        "arr9#0",
        "\"bool8\""
      ]
    },
    "3185": {
      "op": "uncover 2",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool8\"",
        "arr8#0"
      ]
    },
    "3187": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0"
      ]
    },
    "3188": {
      "op": "pushbytes \"bool9\"",
      "defined_out": [
        "\"bool9\"",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "arr9#0",
        "\"bool9\""
      ]
    },
    "3195": {
      "op": "swap",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "\"bool9\"",
        "arr9#0"
      ]
    },
    "3196": {
      "op": "app_global_put",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3197": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0"
      ],
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0",
        "1"
      ]
    },
    "3198": {
      "op": "return",
      "stack_out": [
        "arr2#0",
        "arr7#0",
        "arr8#0",
        "arr9#0",
        "i#0"
      ]
    },
    "3199": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues[routing]",
      "params": {},
      "block": "sum_uints_and_lengths_and_trues",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "idx#0"
      ]
    },
    "3200": {
      "op": "dupn 8",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0"
      ]
    },
    "3202": {
      "op": "txna ApplicationArgs 1"
    },
    "3205": {
      "op": "dupn 2",
      "defined_out": [
        "arr1#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "arr1#0",
        "arr1#0 (copy)"
      ]
    },
    "3207": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "arr1#0",
        "arr1#0 (copy)",
        "0"
      ]
    },
    "3208": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "arr1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3209": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3210": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3212": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "8"
      ]
    },
    "3213": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "mul%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "mul%0#0"
      ]
    },
    "3214": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "arr1#0",
        "mul%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "mul%0#0",
        "2"
      ]
    },
    "3215": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%array_length%0#0",
        "arr1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "add%0#0"
      ]
    },
    "3216": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "add%0#0",
        "arr1#0"
      ]
    },
    "3217": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "aggregate%array_length%0#0",
        "arr1#0",
        "len%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "3218": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "eq%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "eq%0#0"
      ]
    },
    "3219": {
      "error": "invalid number of bytes for arc4.dynamic_array<uint64>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<uint64>",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3220": {
      "op": "txna ApplicationArgs 2"
    },
    "3223": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "arr2#0",
        "arr2#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "arr2#0",
        "arr2#0 (copy)"
      ]
    },
    "3225": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "arr2#0",
        "arr2#0 (copy)",
        "0"
      ]
    },
    "3226": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "arr2#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3227": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3228": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3230": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "7"
      ]
    },
    "3232": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "add%1#0"
      ]
    },
    "3233": {
      "op": "intc_3 // 8",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "add%1#0",
        "8"
      ]
    },
    "3234": {
      "op": "/",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "div_floor%0#0"
      ]
    },
    "3235": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "div_floor%0#0",
        "2"
      ]
    },
    "3236": {
      "op": "+",
      "defined_out": [
        "add%2#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "add%2#0"
      ]
    },
    "3237": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "add%2#0",
        "arr2#0"
      ]
    },
    "3238": {
      "op": "len",
      "defined_out": [
        "add%2#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0",
        "len%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "add%2#0",
        "len%1#0"
      ]
    },
    "3239": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0",
        "eq%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "eq%1#0"
      ]
    },
    "3240": {
      "error": "invalid number of bytes for arc4.dynamic_array<bool>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<bool>",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3241": {
      "op": "txna ApplicationArgs 3"
    },
    "3244": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr3#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "arr3#0",
        "arr3#0 (copy)"
      ]
    },
    "3246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "arr3#0",
        "arr3#0 (copy)",
        "0"
      ]
    },
    "3247": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "arr3#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3248": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3249": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr3#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3251": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "9"
      ]
    },
    "3253": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "mul%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr3#0",
        "mul%2#0"
      ]
    },
    "3254": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr3#0",
        "mul%2#0",
        "2"
      ]
    },
    "3255": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr3#0",
        "add%3#0"
      ]
    },
    "3256": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "add%3#0",
        "arr3#0"
      ]
    },
    "3257": {
      "op": "len",
      "defined_out": [
        "add%3#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "len%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "add%3#0",
        "len%2#0"
      ]
    },
    "3258": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "eq%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "eq%2#0"
      ]
    },
    "3259": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyTuple>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyTuple>",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3260": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr4#0"
      ]
    },
    "3263": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0",
        "arr4#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr4#0",
        "arr4#0 (copy)"
      ]
    },
    "3264": {
      "op": "intc_0 // 0",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr4#0",
        "arr4#0 (copy)",
        "0"
      ]
    },
    "3265": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr4#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3266": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "arr4#0",
        "aggregate%array_length%3#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3267": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr4#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3269": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr4#0",
        "aggregate%array_length%3#0",
        "2"
      ]
    },
    "3270": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr4#0",
        "num_bytes%0#0"
      ]
    },
    "3271": {
      "op": "swap",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "arr4#0"
      ]
    },
    "3272": {
      "op": "dup",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "arr4#0",
        "arr4#0 (copy)"
      ]
    },
    "3273": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "arr4#0",
        "total_length%0#0"
      ]
    },
    "3274": {
      "op": "swap",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "arr4#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "arr4#0"
      ]
    },
    "3275": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "array_data%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0"
      ]
    },
    "3278": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "arr1#0",
        "arr2#0",
        "arr3#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3279": {
      "block": "sum_uints_and_lengths_and_trues_for_header@1",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "3280": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%3#0",
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3282": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%3#0",
        "continue_looping%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "3283": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@4",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3286": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%3#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ]
    },
    "3288": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%3#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)",
        "2"
      ]
    },
    "3289": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0"
      ]
    },
    "3290": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0"
      ]
    },
    "3292": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0 (copy)",
        "array_data%0#0 (copy)"
      ]
    },
    "3293": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3295": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0"
      ]
    },
    "3296": {
      "error": "invalid array encoding",
      "op": "extract_uint16 // on error: invalid array encoding",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ]
    },
    "3297": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ]
    },
    "3298": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ]
    },
    "3300": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0",
        "num_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "3301": {
      "op": "cover 5",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "3303": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0",
        "offset_is_correct%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "offset_is_correct%0#0"
      ]
    },
    "3304": {
      "error": "invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "op": "assert // invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ]
    },
    "3305": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "index%0#0"
      ]
    },
    "3306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "index%0#0",
        "1"
      ]
    },
    "3307": {
      "op": "+",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "3308": {
      "op": "dig 8",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3310": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3312": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3313": {
      "op": "dig 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3315": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "3316": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "3318": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)",
        "2"
      ]
    },
    "3319": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3320": {
      "op": "dig 5",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3322": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "array_data%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "3323": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "3324": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "3326": {
      "op": "select",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_offset%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3327": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "array_data%0#0"
      ]
    },
    "3329": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "array_data%0#0",
        "item_offset%0#0"
      ]
    },
    "3331": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "3333": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "3334": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "3335": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "3336": {
      "error": "invalid tuple encoding",
      "op": "extract_uint16 // on error: invalid tuple encoding",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3337": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ]
    },
    "3338": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "10"
      ]
    },
    "3340": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "eq%3#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "eq%3#0"
      ]
    },
    "3341": {
      "error": "invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3342": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "3344": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%len%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "3345": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "3346": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "0"
      ]
    },
    "3347": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%array_length%6#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%6#0"
      ]
    },
    "3348": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%array_length%3#0",
        "aggregate%array_length%6#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%6#0",
        "12"
      ]
    },
    "3350": {
      "op": "+",
      "defined_out": [
        "add%5#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "add%5#0"
      ]
    },
    "3351": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%0#0",
        "add%5#0",
        "num_bytes%0#0"
      ]
    },
    "3353": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%0#0",
        "num_bytes%0#0"
      ]
    },
    "3354": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "3356": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3358": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@1"
    },
    "3361": {
      "block": "sum_uints_and_lengths_and_trues_after_for@4",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ]
    },
    "3363": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "2"
      ]
    },
    "3364": {
      "op": "+",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0"
      ]
    },
    "3365": {
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ]
    },
    "3367": {
      "op": "==",
      "defined_out": [
        "eq%4#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "eq%4#0"
      ]
    },
    "3368": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3369": {
      "op": "intc_0 // 0",
      "defined_out": [
        "num_bytes%0#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum4#0"
      ]
    },
    "3370": {
      "op": "bury 13",
      "defined_out": [
        "num_bytes%0#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3372": {
      "op": "intc_0 // 0",
      "defined_out": [
        "num_bytes%0#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0"
      ]
    },
    "3373": {
      "op": "bury 14",
      "defined_out": [
        "num_bytes%0#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3375": {
      "op": "intc_0 // 0",
      "defined_out": [
        "num_bytes%0#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum2#0"
      ]
    },
    "3376": {
      "op": "bury 15",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3378": {
      "op": "intc_0 // 0",
      "defined_out": [
        "num_bytes%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum1#0"
      ]
    },
    "3379": {
      "op": "bury 16",
      "defined_out": [
        "num_bytes%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3381": {
      "op": "intc_0 // 0",
      "defined_out": [
        "item_index_internal%0#0",
        "num_bytes%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3382": {
      "op": "bury 19",
      "defined_out": [
        "item_index_internal%0#0",
        "num_bytes%0#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3384": {
      "block": "sum_uints_and_lengths_and_trues_for_header@6",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 18",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3386": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3388": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "3389": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@9",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3392": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr1#0"
      ]
    },
    "3394": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "3397": {
      "op": "dig 19",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3399": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "arr1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "3400": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "3402": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "arr1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "3403": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "3404": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "i#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "i#0"
      ]
    },
    "3405": {
      "op": "dig 17",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "i#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "i#0",
        "sum1#0"
      ]
    },
    "3407": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "sum1#0"
      ]
    },
    "3408": {
      "op": "bury 17",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3410": {
      "op": "intc_1 // 1",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "3411": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%0#0"
      ]
    },
    "3412": {
      "op": "bury 19",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr1#0",
        "item_index_internal%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3414": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@6"
    },
    "3417": {
      "block": "sum_uints_and_lengths_and_trues_after_for@9",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3418": {
      "op": "bury 18",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3420": {
      "block": "sum_uints_and_lengths_and_trues_for_header@10",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 17",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3422": {
      "op": "dig 8",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "3424": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%1#0"
      ]
    },
    "3425": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@15",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3428": {
      "op": "dig 17",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3430": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0",
        "16"
      ]
    },
    "3432": {
      "op": "+",
      "defined_out": [
        "aggregate%add%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%add%0#0"
      ]
    },
    "3433": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%add%0#0",
        "aggregate%array_length%1#0",
        "arr2#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%add%0#0",
        "arr2#0"
      ]
    },
    "3435": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr2#0",
        "aggregate%add%0#0"
      ]
    },
    "3436": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr2#0",
        "b#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "b#0"
      ]
    },
    "3437": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@13",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3440": {
      "op": "dig 14",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr2#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum2#0"
      ]
    },
    "3442": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "arr2#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum2#0",
        "1"
      ]
    },
    "3443": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum2#0"
      ]
    },
    "3444": {
      "op": "bury 15",
      "defined_out": [
        "aggregate%array_length%1#0",
        "arr2#0",
        "item_index_internal%1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3446": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@13",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 17",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3448": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "3449": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%1#0"
      ]
    },
    "3450": {
      "op": "bury 18",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3452": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@10"
    },
    "3455": {
      "block": "sum_uints_and_lengths_and_trues_after_for@15",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3456": {
      "op": "bury 17",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3458": {
      "block": "sum_uints_and_lengths_and_trues_for_header@16",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 16",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3460": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%array_length%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0",
        "aggregate%array_length%2#0"
      ]
    },
    "3462": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%2#0",
        "continue_looping%2#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%2#0"
      ]
    },
    "3463": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@23",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3466": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "arr3#0"
      ]
    },
    "3468": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "3471": {
      "op": "dig 17",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0"
      ]
    },
    "3473": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%2#0",
        "9"
      ]
    },
    "3475": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "3476": {
      "op": "pushint 9 // 9",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "9"
      ]
    },
    "3478": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "3479": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "3480": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "arr3#0",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "0"
      ]
    },
    "3481": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0"
      ]
    },
    "3482": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "aggregate%encoded_element%1#0 (copy)"
      ]
    },
    "3484": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "aggregate%encoded_element%1#0 (copy)",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "aggregate%encoded_element%1#0 (copy)",
        "64"
      ]
    },
    "3486": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%encoded_element%1#0",
        "tup.foo#0",
        "tup.bar#0"
      ]
    },
    "3487": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "3489": {
      "op": "pushint 65 // 65",
      "defined_out": [
        "65",
        "aggregate%array_length%2#0",
        "aggregate%encoded_element%1#0",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "aggregate%encoded_element%1#0",
        "65"
      ]
    },
    "3491": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "tup.baz#0"
      ]
    },
    "3492": {
      "op": "bury 14",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.foo#0",
        "tup.bar#0"
      ]
    },
    "3494": {
      "op": "dig 15",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.baz#0",
        "tup.foo#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.foo#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "3496": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.bar#0",
        "sum3#0",
        "tup.foo#0"
      ]
    },
    "3498": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.bar#0",
        "sum3#0"
      ]
    },
    "3499": {
      "op": "bury 15",
      "defined_out": [
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0",
        "sum3#0",
        "tup.bar#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.bar#0"
      ]
    },
    "3501": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@19",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3504": {
      "op": "dig 13",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0"
      ]
    },
    "3506": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%2#0",
        "arr3#0",
        "item_index_internal%2#0",
        "sum3#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0",
        "1"
      ]
    },
    "3507": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0"
      ]
    },
    "3508": {
      "op": "bury 14",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3510": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@19",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 11",
      "defined_out": [
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tup.baz#0"
      ]
    },
    "3512": {
      "op": "bz sum_uints_and_lengths_and_trues_after_if_else@21",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3515": {
      "op": "dig 13",
      "defined_out": [
        "sum3#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0"
      ]
    },
    "3517": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum3#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0",
        "1"
      ]
    },
    "3518": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum3#0"
      ]
    },
    "3519": {
      "op": "bury 14",
      "defined_out": [
        "sum3#0",
        "tup.baz#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3521": {
      "block": "sum_uints_and_lengths_and_trues_after_if_else@21",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 16",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3523": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0",
        "1"
      ]
    },
    "3524": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_index_internal%2#0"
      ]
    },
    "3525": {
      "op": "bury 17",
      "defined_out": [
        "item_index_internal%2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3527": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@16"
    },
    "3530": {
      "block": "sum_uints_and_lengths_and_trues_after_for@23",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0"
      ]
    },
    "3531": {
      "op": "bury 20",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3533": {
      "block": "sum_uints_and_lengths_and_trues_for_header@24",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 19",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0"
      ]
    },
    "3535": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3537": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%3#0",
        "continue_looping%3#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%3#0"
      ]
    },
    "3538": {
      "op": "bz sum_uints_and_lengths_and_trues_after_for@27",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3541": {
      "op": "dig 19",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0"
      ]
    },
    "3543": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "idx#0 (copy)"
      ]
    },
    "3544": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%3#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "idx#0 (copy)",
        "2"
      ]
    },
    "3545": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3546": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%item_offset_offset%2#0",
        "array_data%0#0"
      ]
    },
    "3548": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset_offset%2#0",
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%item_offset_offset%2#0",
        "array_data%0#0 (copy)",
        "array_data%0#0 (copy)"
      ]
    },
    "3549": {
      "op": "cover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset_offset%2#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3551": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "array_data%0#0 (copy)",
        "aggregate%item_offset_offset%2#0"
      ]
    },
    "3552": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3553": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "idx#0 (copy)"
      ]
    },
    "3555": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "array_data%0#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "idx#0 (copy)",
        "1"
      ]
    },
    "3556": {
      "op": "+",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0"
      ]
    },
    "3557": {
      "op": "dig 8",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0"
      ]
    },
    "3559": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "3561": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3562": {
      "op": "dig 4",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3564": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "3565": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "3567": {
      "op": "intc_2 // 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_index%2#0 (copy)",
        "2"
      ]
    },
    "3568": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3569": {
      "op": "dig 6",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array_data%0#0 (copy)"
      ]
    },
    "3571": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array_data%0#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "3572": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_item_offset%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "3573": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "3575": {
      "op": "select",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%end_offset%2#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3576": {
      "op": "uncover 4",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%item_offset%2#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0",
        "array_data%0#0"
      ]
    },
    "3578": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0",
        "array_data%0#0",
        "aggregate%item_offset%2#0"
      ]
    },
    "3580": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "aggregate%item_offset%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "3582": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3583": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "3584": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "array_data%0#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "0"
      ]
    },
    "3585": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0"
      ]
    },
    "3586": {
      "op": "dig 1",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "3588": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "array_data%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "3589": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "3590": {
      "op": "dig 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "3592": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3593": {
      "op": "uncover 3",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.foo#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0",
        "aggregate%substring3%3#0"
      ]
    },
    "3595": {
      "op": "cover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%3#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "3597": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%4#0",
        "array_data%0#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.foo#0",
        "aggregate%substring3%4#0"
      ]
    },
    "3598": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.foo#0",
        "dyn_tup.bar#0"
      ]
    },
    "3601": {
      "op": "dig 16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "dyn_tup.bar#0",
        "dyn_tup.foo#0",
        "idx#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.foo#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "3603": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.bar#0",
        "sum4#0",
        "dyn_tup.foo#0"
      ]
    },
    "3605": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "dyn_tup.bar#0",
        "sum4#0"
      ]
    },
    "3606": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "sum4#0",
        "dyn_tup.bar#0"
      ]
    },
    "3607": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "sum4#0",
        "tmp%6#1"
      ]
    },
    "3608": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "tmp%6#1",
        "sum4#0"
      ]
    },
    "3609": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#1",
        "tmp%6#1 (copy)"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "tmp%6#1",
        "sum4#0",
        "tmp%6#1 (copy)"
      ]
    },
    "3611": {
      "op": "+",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "tmp%6#1",
        "sum4#0"
      ]
    },
    "3612": {
      "op": "bury 16",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0",
        "sum4#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0",
        "aggregate%next_index%2#0",
        "tmp%6#1"
      ]
    },
    "3614": {
      "op": "uncover 2",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%2#0",
        "tmp%6#1",
        "idx#0"
      ]
    },
    "3616": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%3#0",
        "aggregate%next_index%2#0",
        "array_data%0#0",
        "idx#0",
        "sum4#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%2#0",
        "tmp%9#1"
      ]
    },
    "3617": {
      "error": "expected string length to match index",
      "op": "assert // expected string length to match index",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "idx#0"
      ]
    },
    "3618": {
      "op": "bury 20",
      "defined_out": [
        "aggregate%array_length%3#0",
        "array_data%0#0",
        "idx#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3620": {
      "op": "b sum_uints_and_lengths_and_trues_for_header@24"
    },
    "3623": {
      "block": "sum_uints_and_lengths_and_trues_after_for@27",
      "stack_in": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 15",
      "defined_out": [
        "sum1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "sum1#0"
      ]
    },
    "3625": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "sum1#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "3626": {
      "op": "dig 15",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%val_as_bytes%0#0",
        "sum2#0"
      ]
    },
    "3628": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3629": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "sum1#0",
        "sum2#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%1#0"
      ]
    },
    "3630": {
      "op": "dig 14",
      "defined_out": [
        "aggregate%head%1#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%1#0",
        "sum3#0"
      ]
    },
    "3632": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "3633": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%2#0"
      ]
    },
    "3634": {
      "op": "dig 13",
      "defined_out": [
        "aggregate%head%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%2#0",
        "sum4#0"
      ]
    },
    "3636": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%3#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3637": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%3#0"
      ]
    },
    "3638": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%3#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%head%3#0",
        "0x151f7c75"
      ]
    },
    "3639": {
      "op": "swap",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "0x151f7c75",
        "aggregate%head%3#0"
      ]
    },
    "3640": {
      "op": "concat",
      "defined_out": [
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tmp%11#0"
      ]
    },
    "3641": {
      "op": "log",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3642": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0"
      ],
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "1"
      ]
    },
    "3643": {
      "op": "return",
      "stack_out": [
        "idx#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "item_index_internal%2#0",
        "sum1#0",
        "sum2#0",
        "sum3#0",
        "sum4#0",
        "tup.baz#0",
        "arr1#0",
        "aggregate%array_length%0#0",
        "arr2#0",
        "aggregate%array_length%1#0",
        "arr3#0",
        "aggregate%array_length%2#0",
        "aggregate%array_length%3#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "3644": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_uint64_return[routing]",
      "params": {},
      "block": "test_uint64_return",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3647": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3648": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "3649": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "3650": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "3651": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3652": {
      "op": "btoi",
      "defined_out": [
        "append#0"
      ],
      "stack_out": [
        "append#0"
      ]
    },
    "3653": {
      "op": "pushbytes 0x0003000000000000000100000000000000020000000000000003"
    },
    "3681": {
      "op": "intc_0 // 0",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3682": {
      "block": "test_uint64_return_for_header@2",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3683": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "append#0"
      ]
    },
    "3685": {
      "op": "<",
      "defined_out": [
        "append#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3686": {
      "op": "bz test_uint64_return_after_for@5",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3689": {
      "op": "dupn 2",
      "defined_out": [
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3691": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3692": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%3#0",
        "arr#0"
      ]
    },
    "3694": {
      "op": "dup"
    },
    "3695": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%val_as_bytes%3#0",
        "append#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "3697": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "append#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3698": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3699": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "append#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3700": {
      "op": "extract_uint16",
      "defined_out": [
        "append#0",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3701": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "append#0",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3702": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "append#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3703": {
      "op": "itob",
      "defined_out": [
        "append#0",
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3704": {
      "op": "extract 6 2",
      "defined_out": [
        "append#0",
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3707": {
      "op": "replace2 0",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3709": {
      "op": "bury 3",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3711": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3712": {
      "op": "+",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3713": {
      "op": "bury 1",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3715": {
      "op": "b test_uint64_return_for_header@2"
    },
    "3718": {
      "block": "test_uint64_return_after_for@5",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75"
      ]
    },
    "3719": {
      "op": "dig 2",
      "defined_out": [
        "0x151f7c75",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75",
        "arr#0"
      ]
    },
    "3721": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3722": {
      "op": "log",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3723": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3724": {
      "op": "return",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3725": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_bool_return[routing]",
      "params": {},
      "block": "test_bool_return",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3728": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3729": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "3730": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "3731": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "3732": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3733": {
      "op": "btoi",
      "defined_out": [
        "append#0"
      ],
      "stack_out": [
        "append#0"
      ]
    },
    "3734": {
      "op": "pushbytes 0x0005a8"
    },
    "3739": {
      "op": "intc_0 // 0",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3740": {
      "block": "test_bool_return_for_header@2",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3741": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "append#0"
      ]
    },
    "3743": {
      "op": "<",
      "defined_out": [
        "append#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3744": {
      "op": "bz test_bool_return_after_for@5",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3747": {
      "op": "dupn 2",
      "defined_out": [
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3749": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3750": {
      "op": "%",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "3751": {
      "op": "!",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1"
      ]
    },
    "3752": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "append#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "0x00"
      ]
    },
    "3753": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "append#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "0x00",
        "0"
      ]
    },
    "3754": {
      "op": "uncover 2",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "0x00",
        "0",
        "tmp%1#1"
      ]
    },
    "3756": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3757": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%encoded_bool%1#0",
        "arr#0"
      ]
    },
    "3759": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3760": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "3761": {
      "op": "intc_3 // 8",
      "defined_out": [
        "1",
        "8",
        "aggregate%encoded_bool%1#0",
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "8"
      ]
    },
    "3762": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3765": {
      "op": "bury 3",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3767": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3768": {
      "op": "+",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3769": {
      "op": "bury 1",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3771": {
      "op": "b test_bool_return_for_header@2"
    },
    "3774": {
      "block": "test_bool_return_after_for@5",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75"
      ]
    },
    "3775": {
      "op": "dig 2",
      "defined_out": [
        "0x151f7c75",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75",
        "arr#0"
      ]
    },
    "3777": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3778": {
      "op": "log",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3779": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3780": {
      "op": "return",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3781": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_tuple_return[routing]",
      "params": {},
      "block": "test_tuple_return",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3784": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3785": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "3786": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "3787": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "3788": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3789": {
      "op": "btoi",
      "defined_out": [
        "append#0"
      ],
      "stack_out": [
        "append#0"
      ]
    },
    "3790": {
      "op": "pushbytes 0x0001000000000000000080"
    },
    "3803": {
      "op": "intc_0 // 0",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3804": {
      "block": "test_tuple_return_for_header@2",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3805": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "append#0"
      ]
    },
    "3807": {
      "op": "<",
      "defined_out": [
        "append#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3808": {
      "op": "bz test_tuple_return_after_for@5",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3811": {
      "op": "dupn 2",
      "defined_out": [
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3813": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "3814": {
      "op": "%",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "3815": {
      "op": "!",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1"
      ]
    },
    "3816": {
      "op": "dig 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "i#0 (copy)"
      ]
    },
    "3818": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "append#0",
        "i#0",
        "i#0 (copy)",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "i#0 (copy)",
        "3"
      ]
    },
    "3820": {
      "op": "%",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%2#1"
      ]
    },
    "3821": {
      "op": "!",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ]
    },
    "3822": {
      "op": "dig 2",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "i#0 (copy)"
      ]
    },
    "3824": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3825": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0",
        "0x00"
      ]
    },
    "3826": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0",
        "0x00",
        "0"
      ]
    },
    "3827": {
      "op": "uncover 4",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0",
        "0x00",
        "0",
        "tmp%1#1"
      ]
    },
    "3829": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "3830": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0",
        "1"
      ]
    },
    "3831": {
      "op": "uncover 3",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_bool%1#0",
        "1",
        "tmp%3#1"
      ]
    },
    "3833": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%set_bit%1#0"
      ]
    },
    "3834": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%4#0"
      ]
    },
    "3835": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%4#0",
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%head%4#0",
        "arr#0"
      ]
    },
    "3837": {
      "op": "dup"
    },
    "3838": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%head%4#0",
        "append#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)",
        "aggregate%head%4#0"
      ]
    },
    "3840": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "append#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "3841": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0"
      ]
    },
    "3842": {
      "op": "intc_0 // 0",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0",
        "0"
      ]
    },
    "3843": {
      "op": "extract_uint16",
      "defined_out": [
        "append#0",
        "arr#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "3844": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "3845": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "append#0",
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "3846": {
      "op": "itob",
      "defined_out": [
        "append#0",
        "arr#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "3847": {
      "op": "extract 6 2",
      "defined_out": [
        "append#0",
        "arr#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "3850": {
      "op": "replace2 0",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3852": {
      "op": "bury 3",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3854": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3855": {
      "op": "+",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3856": {
      "op": "bury 1",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3858": {
      "op": "b test_tuple_return_for_header@2"
    },
    "3861": {
      "block": "test_tuple_return_after_for@5",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75"
      ]
    },
    "3862": {
      "op": "dig 2",
      "defined_out": [
        "0x151f7c75",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75",
        "arr#0"
      ]
    },
    "3864": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3865": {
      "op": "log",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3866": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3867": {
      "op": "return",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3868": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return[routing]",
      "params": {},
      "block": "test_dynamic_tuple_return",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3871": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3872": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "3873": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "3874": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "3875": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3876": {
      "op": "btoi",
      "defined_out": [
        "append#0"
      ],
      "stack_out": [
        "append#0"
      ]
    },
    "3877": {
      "op": "pushbytes 0x000100020000000000000000000a000548656c6c6f"
    },
    "3900": {
      "op": "intc_0 // 0",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3901": {
      "block": "test_dynamic_tuple_return_for_header@2",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3902": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "append#0"
      ]
    },
    "3904": {
      "op": "<",
      "defined_out": [
        "append#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "3905": {
      "op": "bz test_dynamic_tuple_return_after_for@5",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3908": {
      "op": "dupn 2",
      "defined_out": [
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "3910": {
      "callsub": "test_cases.array.immutable.times",
      "op": "callsub times",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "3913": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "arr#0"
      ]
    },
    "3915": {
      "op": "dup",
      "defined_out": [
        "append#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3916": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "append#0",
        "arr#0",
        "arr#0 (copy)",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3917": {
      "op": "extract_uint16",
      "defined_out": [
        "append#0",
        "arr#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "arr#0",
        "extract_uint16%0#0"
      ]
    },
    "3918": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "arr#0"
      ]
    },
    "3919": {
      "op": "extract 2 0",
      "defined_out": [
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "3922": {
      "op": "dig 3",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "i#0 (copy)"
      ]
    },
    "3924": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3925": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1",
        "tmp%0#1 (copy)"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%0#1 (copy)"
      ]
    },
    "3927": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length%1#0"
      ]
    },
    "3928": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%4#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%as_bytes%4#0"
      ]
    },
    "3929": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "tmp%0#1",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "3932": {
      "op": "uncover 4",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%length_uint16%1#0",
        "tmp%0#1"
      ]
    },
    "3934": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "3935": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "3936": {
      "op": "bytec 6 // 0x000a",
      "defined_out": [
        "0x000a",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%val_as_bytes%1#0",
        "0x000a"
      ]
    },
    "3938": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "3939": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "3940": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%2#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%2#0"
      ]
    },
    "3941": {
      "op": "bytec 4 // 0x0002",
      "defined_out": [
        "0x0002",
        "aggregate%concat%2#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%2#0",
        "0x0002"
      ]
    },
    "3943": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "0x0002",
        "aggregate%concat%2#0"
      ]
    },
    "3944": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%3#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "aggregate%concat%3#0"
      ]
    },
    "3945": {
      "op": "cover 2",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%concat%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0"
      ]
    },
    "3947": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%3#0",
        "append#0",
        "arr#0",
        "extract_to_end%0#0",
        "extract_uint16%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "aggregate%concat%3#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1"
      ]
    },
    "3948": {
      "op": "uncover 3",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "extract_uint16%0#0",
        "extract_to_end%0#0",
        "1",
        "aggregate%concat%3#0"
      ]
    },
    "3950": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "arr#0"
      ]
    },
    "3953": {
      "op": "bury 3",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3955": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "3956": {
      "op": "+",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "3957": {
      "op": "bury 1",
      "defined_out": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3959": {
      "op": "b test_dynamic_tuple_return_for_header@2"
    },
    "3962": {
      "block": "test_dynamic_tuple_return_after_for@5",
      "stack_in": [
        "append#0",
        "arr#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75"
      ]
    },
    "3963": {
      "op": "dig 2",
      "defined_out": [
        "0x151f7c75",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "0x151f7c75",
        "arr#0"
      ]
    },
    "3965": {
      "op": "concat",
      "defined_out": [
        "arr#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "3966": {
      "op": "log",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3967": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0",
        "1"
      ]
    },
    "3968": {
      "op": "return",
      "stack_out": [
        "append#0",
        "arr#0",
        "i#0"
      ]
    },
    "3969": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back[routing]",
      "params": {},
      "block": "test_convert_to_array_and_back",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "3972": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "3973": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0"
      ]
    },
    "3974": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0"
      ]
    },
    "3975": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%array_length%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "aggregate%array_length%0#0",
        "9"
      ]
    },
    "3977": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0"
      ]
    },
    "3978": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "mul%0#0"
      ],
      "stack_out": [
        "arr#0",
        "mul%0#0",
        "2"
      ]
    },
    "3979": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0"
      ]
    },
    "3980": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "add%0#0",
        "arr#0 (copy)"
      ]
    },
    "3982": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "arr#0",
        "len%0#0"
      ],
      "stack_out": [
        "arr#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "3983": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "eq%0#0"
      ],
      "stack_out": [
        "arr#0",
        "eq%0#0"
      ]
    },
    "3984": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyTuple>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyTuple>",
      "stack_out": [
        "arr#0"
      ]
    },
    "3985": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "arr#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3988": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3989": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "len%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "len%1#0"
      ]
    },
    "3990": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "len%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "len%1#0",
        "8"
      ]
    },
    "3991": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "eq%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%1#0",
        "eq%1#0"
      ]
    },
    "3992": {
      "error": "invalid number of bytes for arc4.uint64",
      "op": "assert // invalid number of bytes for arc4.uint64",
      "stack_out": [
        "arr#0",
        "tmp%1#0"
      ]
    },
    "3993": {
      "op": "btoi",
      "defined_out": [
        "append#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "append#0"
      ]
    },
    "3994": {
      "op": "swap",
      "defined_out": [
        "append#0",
        "arr#0"
      ],
      "stack_out": [
        "append#0",
        "arr#0"
      ]
    },
    "3995": {
      "op": "extract 2 0",
      "defined_out": [
        "append#0",
        "slot%0"
      ],
      "stack_out": [
        "append#0",
        "slot%0"
      ]
    },
    "3998": {
      "op": "intc_0 // 0",
      "defined_out": [
        "append#0",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0"
      ]
    },
    "3999": {
      "block": "test_convert_to_array_and_back_for_header@2",
      "stack_in": [
        "append#0",
        "slot%0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4000": {
      "op": "dig 3",
      "defined_out": [
        "append#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "append#0"
      ]
    },
    "4002": {
      "op": "<",
      "defined_out": [
        "append#0",
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4003": {
      "op": "bz test_convert_to_array_and_back_after_for@5",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0"
      ]
    },
    "4006": {
      "op": "dupn 2",
      "defined_out": [
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4008": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "append#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "4009": {
      "op": "%",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "4010": {
      "op": "!",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1"
      ]
    },
    "4011": {
      "op": "dig 1",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "i#0 (copy)"
      ]
    },
    "4013": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "append#0",
        "i#0",
        "i#0 (copy)",
        "tmp%1#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "i#0 (copy)",
        "3"
      ]
    },
    "4015": {
      "op": "%",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%2#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%2#1"
      ]
    },
    "4016": {
      "op": "!",
      "defined_out": [
        "append#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ]
    },
    "4017": {
      "op": "dig 4",
      "defined_out": [
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "slot_contents%1#0"
      ]
    },
    "4019": {
      "op": "cover 3",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1"
      ]
    },
    "4021": {
      "op": "dig 2",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "i#0 (copy)"
      ]
    },
    "4023": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4024": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0",
        "0x00"
      ]
    },
    "4025": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%1#1",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0"
      ]
    },
    "4026": {
      "op": "uncover 4",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0",
        "tmp%1#1"
      ]
    },
    "4028": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "4029": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "tmp%3#1",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1"
      ]
    },
    "4030": {
      "op": "uncover 3",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0",
        "1",
        "tmp%3#1"
      ]
    },
    "4032": {
      "op": "setbit",
      "defined_out": [
        "aggregate%set_bit%0#0",
        "aggregate%val_as_bytes%0#0",
        "append#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%set_bit%0#0"
      ]
    },
    "4033": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "append#0",
        "i#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "i#0",
        "aggregate%head%1#0"
      ]
    },
    "4034": {
      "op": "uncover 2",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%head%1#0",
        "slot_contents%1#0"
      ]
    },
    "4036": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%head%1#0"
      ]
    },
    "4037": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "append#0",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "4038": {
      "op": "bury 3",
      "defined_out": [
        "append#0",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4040": {
      "op": "intc_1 // 1",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4041": {
      "op": "+",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "4042": {
      "op": "bury 1",
      "defined_out": [
        "append#0",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0"
      ]
    },
    "4044": {
      "op": "b test_convert_to_array_and_back_for_header@2"
    },
    "4047": {
      "block": "test_convert_to_array_and_back_after_for@5",
      "stack_in": [
        "append#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "4049": {
      "op": "dup",
      "defined_out": [
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "slot_contents%2#0 (copy)"
      ]
    },
    "4050": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "4051": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "aggregate%bytes_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%bytes_len%0#0",
        "9"
      ]
    },
    "4053": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "aggregate%array_len%0#0"
      ]
    },
    "4054": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "as_bytes%0#0"
      ]
    },
    "4055": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "slot_contents%2#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4058": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "as_u16_bytes%0#0",
        "slot_contents%2#0"
      ]
    },
    "4059": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "converted_array%0#0"
      ]
    },
    "4060": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "converted_array%0#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "converted_array%0#0",
        "0x151f7c75"
      ]
    },
    "4061": {
      "op": "swap",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "0x151f7c75",
        "converted_array%0#0"
      ]
    },
    "4062": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "4063": {
      "op": "log",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0"
      ]
    },
    "4064": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0",
        "1"
      ]
    },
    "4065": {
      "op": "return",
      "stack_out": [
        "append#0",
        "slot%0",
        "i#0"
      ]
    },
    "4066": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arg#0"
      ],
      "stack_out": [
        "arg#0"
      ]
    },
    "4069": {
      "op": "dup",
      "defined_out": [
        "arg#0",
        "arg#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "arg#0 (copy)"
      ]
    },
    "4070": {
      "op": "len",
      "defined_out": [
        "arg#0",
        "len%0#0"
      ],
      "stack_out": [
        "arg#0",
        "len%0#0"
      ]
    },
    "4071": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arg#0",
        "len%0#0"
      ],
      "stack_out": [
        "arg#0",
        "len%0#0",
        "16"
      ]
    },
    "4073": {
      "op": "==",
      "defined_out": [
        "arg#0",
        "eq%0#0"
      ],
      "stack_out": [
        "arg#0",
        "eq%0#0"
      ]
    },
    "4074": {
      "error": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint64>",
      "op": "assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint64>",
      "stack_out": [
        "arg#0"
      ]
    },
    "4075": {
      "op": "bytec 8 // 0x000200000000000000010000000000000002",
      "defined_out": [
        "0x000200000000000000010000000000000002",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "0x000200000000000000010000000000000002"
      ]
    },
    "4077": {
      "op": "swap",
      "stack_out": [
        "0x000200000000000000010000000000000002",
        "arg#0"
      ]
    },
    "4078": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "4079": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ],
      "stack_out": [
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "4080": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "extract_to_end%0#0"
      ]
    },
    "4083": {
      "op": "len",
      "stack_out": [
        "concat%0#0",
        "len%0#0"
      ]
    },
    "4084": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "len%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "len%0#0",
        "8"
      ]
    },
    "4085": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "4086": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "4087": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "4090": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4092": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x151f7c75"
      ]
    },
    "4093": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "result#0"
      ]
    },
    "4094": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4095": {
      "op": "log",
      "stack_out": []
    },
    "4096": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "4097": {
      "op": "return",
      "stack_out": []
    },
    "4098": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_concat_with_native_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4101": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4102": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "4103": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "16"
      ]
    },
    "4105": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "4106": {
      "error": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint64>",
      "op": "assert // invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint64>",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4107": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4108": {
      "op": "extract 0 8",
      "defined_out": [
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "arg.0#0"
      ]
    },
    "4111": {
      "op": "swap",
      "stack_out": [
        "arg.0#0",
        "tmp%0#0"
      ]
    },
    "4112": {
      "op": "extract 8 8",
      "defined_out": [
        "arg.0#0",
        "arg.1#0"
      ],
      "stack_out": [
        "arg.0#0",
        "arg.1#0"
      ]
    },
    "4115": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0"
      ]
    },
    "4116": {
      "op": "bytec 8 // 0x000200000000000000010000000000000002",
      "defined_out": [
        "0x000200000000000000010000000000000002",
        "aggregate%head%3#0"
      ],
      "stack_out": [
        "aggregate%head%3#0",
        "0x000200000000000000010000000000000002"
      ]
    },
    "4118": {
      "op": "swap",
      "stack_out": [
        "0x000200000000000000010000000000000002",
        "aggregate%head%3#0"
      ]
    },
    "4119": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "4120": {
      "op": "pushbytes 0x0004",
      "defined_out": [
        "0x0004",
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0",
        "0x0004"
      ]
    },
    "4124": {
      "op": "replace2 0",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4126": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x151f7c75"
      ]
    },
    "4127": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "result#0"
      ]
    },
    "4128": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4129": {
      "op": "log",
      "stack_out": []
    },
    "4130": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "4131": {
      "op": "return",
      "stack_out": []
    },
    "4132": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_arc4_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arg#0"
      ],
      "stack_out": [
        "arg#0"
      ]
    },
    "4135": {
      "op": "dup",
      "defined_out": [
        "arg#0",
        "arg#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "arg#0 (copy)"
      ]
    },
    "4136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arg#0",
        "arg#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "arg#0 (copy)",
        "0"
      ]
    },
    "4137": {
      "error": "invalid tuple encoding",
      "op": "extract_uint16 // on error: invalid tuple encoding",
      "defined_out": [
        "arg#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0"
      ]
    },
    "4138": {
      "op": "dup",
      "defined_out": [
        "arg#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ]
    },
    "4139": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arg#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "4"
      ]
    },
    "4141": {
      "op": "==",
      "defined_out": [
        "arg#0",
        "eq%0#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "eq%0#0"
      ]
    },
    "4142": {
      "error": "invalid tail pointer at index 0 of ((len+utf8[]),(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 0 of ((len+utf8[]),(len+utf8[]))",
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0"
      ]
    },
    "4143": {
      "op": "dig 1",
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "arg#0 (copy)"
      ]
    },
    "4145": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arg#0",
        "arg#0 (copy)",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "arg#0 (copy)",
        "2"
      ]
    },
    "4146": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arg#0",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4147": {
      "op": "dig 2",
      "stack_out": [
        "arg#0",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "arg#0 (copy)"
      ]
    },
    "4149": {
      "op": "uncover 2",
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "arg#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "4151": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "arg#0",
        "arg#0 (copy)",
        "extract_uint16%0#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "arg#0 (copy)",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "4153": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4154": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%substring3%0#0",
        "0"
      ]
    },
    "4155": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%extract_uint16%1#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4156": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%0#0",
        "aggregate%extract_uint16%1#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%array_length%0#0",
        "6"
      ]
    },
    "4158": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0"
      ]
    },
    "4159": {
      "op": "dup2",
      "defined_out": [
        "add%1#0",
        "add%1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "add%1#0 (copy)"
      ]
    },
    "4160": {
      "op": "==",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "arg#0",
        "eq%1#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0",
        "eq%1#0"
      ]
    },
    "4161": {
      "error": "invalid tail pointer at index 1 of ((len+utf8[]),(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 1 of ((len+utf8[]),(len+utf8[]))",
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0"
      ]
    },
    "4162": {
      "op": "dig 2",
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0",
        "arg#0 (copy)"
      ]
    },
    "4164": {
      "op": "len",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0",
        "aggregate%len%0#0"
      ]
    },
    "4165": {
      "op": "dig 3",
      "stack_out": [
        "arg#0",
        "aggregate%extract_uint16%1#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg#0 (copy)"
      ]
    },
    "4167": {
      "op": "uncover 3",
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg#0 (copy)",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4169": {
      "op": "dig 2",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "aggregate%len%0#0 (copy)",
        "arg#0",
        "arg#0 (copy)"
      ],
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0 (copy)"
      ]
    },
    "4171": {
      "op": "substring3",
      "defined_out": [
        "add%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%1#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%1#0"
      ]
    },
    "4172": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "aggregate%substring3%1#0",
        "0"
      ]
    },
    "4173": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "add%1#0",
        "aggregate%array_length%1#0",
        "aggregate%len%0#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "aggregate%array_length%1#0"
      ]
    },
    "4174": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "aggregate%array_length%1#0",
        "2"
      ]
    },
    "4175": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "add%2#0",
        "aggregate%len%0#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "add%1#0",
        "aggregate%len%0#0",
        "add%2#0"
      ]
    },
    "4176": {
      "op": "uncover 2",
      "stack_out": [
        "arg#0",
        "aggregate%len%0#0",
        "add%2#0",
        "add%1#0"
      ]
    },
    "4178": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "aggregate%len%0#0",
        "arg#0"
      ],
      "stack_out": [
        "arg#0",
        "aggregate%len%0#0",
        "add%3#0"
      ]
    },
    "4179": {
      "op": "==",
      "defined_out": [
        "arg#0",
        "eq%2#0"
      ],
      "stack_out": [
        "arg#0",
        "eq%2#0"
      ]
    },
    "4180": {
      "error": "invalid number of bytes for arc4.tuple<arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>>",
      "op": "assert // invalid number of bytes for arc4.tuple<arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>>",
      "stack_out": [
        "arg#0"
      ]
    },
    "4181": {
      "op": "extract 4 0",
      "defined_out": [
        "data%0#0"
      ],
      "stack_out": [
        "data%0#0"
      ]
    },
    "4184": {
      "op": "bytec 9 // 0x000200040007000161000162",
      "defined_out": [
        "0x000200040007000161000162",
        "data%0#0"
      ],
      "stack_out": [
        "data%0#0",
        "0x000200040007000161000162"
      ]
    },
    "4186": {
      "op": "swap",
      "stack_out": [
        "0x000200040007000161000162",
        "data%0#0"
      ]
    },
    "4187": {
      "op": "intc_2 // 2",
      "stack_out": [
        "0x000200040007000161000162",
        "data%0#0",
        "2"
      ]
    },
    "4188": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4191": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x151f7c75"
      ]
    },
    "4192": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "result#0"
      ]
    },
    "4193": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "4194": {
      "op": "log",
      "stack_out": []
    },
    "4195": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "4196": {
      "op": "return",
      "stack_out": []
    },
    "4197": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple[routing]",
      "params": {},
      "block": "test_dynamic_concat_with_native_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4200": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4201": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "0"
      ]
    },
    "4202": {
      "error": "invalid tuple encoding",
      "op": "extract_uint16 // on error: invalid tuple encoding",
      "defined_out": [
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4203": {
      "op": "dup",
      "defined_out": [
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ]
    },
    "4204": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "4"
      ]
    },
    "4206": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "eq%0#0"
      ]
    },
    "4207": {
      "error": "invalid tail pointer at index 0 of ((len+utf8[]),(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 0 of ((len+utf8[]),(len+utf8[]))",
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4208": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4210": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "extract_uint16%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "tmp%0#0 (copy)",
        "2"
      ]
    },
    "4211": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "extract_uint16%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4212": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4214": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%0#0 (copy)",
        "extract_uint16%0#0"
      ]
    },
    "4216": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "extract_uint16%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "tmp%0#0 (copy)",
        "extract_uint16%0#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "4218": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0"
      ]
    },
    "4219": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "arg.0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "arg.0#0 (copy)"
      ]
    },
    "4220": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "arg.0#0 (copy)",
        "0"
      ]
    },
    "4221": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4222": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "aggregate%array_length%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "aggregate%array_length%0#0",
        "6"
      ]
    },
    "4224": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0"
      ]
    },
    "4225": {
      "op": "dig 2",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "aggregate%extract_uint16%1#0 (copy)"
      ]
    },
    "4227": {
      "op": "dig 1",
      "defined_out": [
        "add%1#0",
        "add%1#0 (copy)",
        "aggregate%extract_uint16%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "aggregate%extract_uint16%1#0 (copy)",
        "add%1#0 (copy)"
      ]
    },
    "4229": {
      "op": "==",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "eq%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "eq%1#0"
      ]
    },
    "4230": {
      "error": "invalid tail pointer at index 1 of ((len+utf8[]),(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 1 of ((len+utf8[]),(len+utf8[]))",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0"
      ]
    },
    "4231": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "4233": {
      "op": "len",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0"
      ]
    },
    "4234": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%extract_uint16%1#0",
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "tmp%0#0"
      ]
    },
    "4236": {
      "op": "uncover 4",
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "tmp%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "4238": {
      "op": "dig 2",
      "defined_out": [
        "add%1#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0",
        "aggregate%len%0#0 (copy)",
        "arg.0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "tmp%0#0",
        "aggregate%extract_uint16%1#0",
        "aggregate%len%0#0 (copy)"
      ]
    },
    "4240": {
      "op": "substring3",
      "defined_out": [
        "add%1#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "arg.1#0"
      ],
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0"
      ]
    },
    "4241": {
      "op": "dup",
      "defined_out": [
        "add%1#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "arg.1#0",
        "arg.1#0 (copy)"
      ],
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "arg.1#0 (copy)"
      ]
    },
    "4242": {
      "op": "intc_0 // 0",
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "arg.1#0 (copy)",
        "0"
      ]
    },
    "4243": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "add%1#0",
        "aggregate%array_length%1#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "arg.1#0"
      ],
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "4244": {
      "op": "intc_2 // 2",
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "aggregate%array_length%1#0",
        "2"
      ]
    },
    "4245": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "add%2#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "arg.1#0"
      ],
      "stack_out": [
        "arg.0#0",
        "add%1#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "add%2#0"
      ]
    },
    "4246": {
      "op": "uncover 3",
      "stack_out": [
        "arg.0#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "add%2#0",
        "add%1#0"
      ]
    },
    "4248": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "aggregate%len%0#0",
        "arg.0#0",
        "arg.1#0"
      ],
      "stack_out": [
        "arg.0#0",
        "aggregate%len%0#0",
        "arg.1#0",
        "add%3#0"
      ]
    },
    "4249": {
      "op": "uncover 2",
      "stack_out": [
        "arg.0#0",
        "arg.1#0",
        "add%3#0",
        "aggregate%len%0#0"
      ]
    },
    "4251": {
      "op": "==",
      "defined_out": [
        "arg.0#0",
        "arg.1#0",
        "eq%2#0"
      ],
      "stack_out": [
        "arg.0#0",
        "arg.1#0",
        "eq%2#0"
      ]
    },
    "4252": {
      "error": "invalid number of bytes for arc4.tuple<arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>>",
      "op": "assert // invalid number of bytes for arc4.tuple<arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>>",
      "stack_out": [
        "arg.0#0",
        "arg.1#0"
      ]
    },
    "4253": {
      "op": "concat",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0"
      ]
    },
    "4254": {
      "op": "bytec 9 // 0x000200040007000161000162",
      "defined_out": [
        "0x000200040007000161000162",
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0",
        "0x000200040007000161000162"
      ]
    },
    "4256": {
      "op": "swap",
      "stack_out": [
        "0x000200040007000161000162",
        "concat%1#0"
      ]
    },
    "4257": {
      "op": "intc_2 // 2",
      "stack_out": [
        "0x000200040007000161000162",
        "concat%1#0",
        "2"
      ]
    },
    "4258": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_byte_length_head",
      "op": "callsub dynamic_array_concat_byte_length_head",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "4261": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x151f7c75"
      ]
    },
    "4262": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "result#0"
      ]
    },
    "4263": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "4264": {
      "op": "log",
      "stack_out": []
    },
    "4265": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "4266": {
      "op": "return",
      "stack_out": []
    },
    "4267": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic[routing]",
      "params": {},
      "block": "test_concat_immutable_dynamic",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "array_data%1#0"
      ]
    },
    "4268": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4269": {
      "op": "dupn 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ]
    },
    "4271": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "imm1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "imm1#0"
      ]
    },
    "4274": {
      "op": "dup",
      "defined_out": [
        "imm1#0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "imm1#0",
        "imm1#0 (copy)"
      ]
    },
    "4275": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm1#0",
        "imm1#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "imm1#0",
        "imm1#0 (copy)",
        "0"
      ]
    },
    "4276": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "imm1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4277": {
      "op": "dup",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "imm1#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4278": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "imm1#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4280": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "imm1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "imm1#0",
        "aggregate%array_length%0#0",
        "2"
      ]
    },
    "4281": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "imm1#0",
        "num_bytes%0#0"
      ]
    },
    "4282": {
      "op": "swap",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "imm1#0"
      ]
    },
    "4283": {
      "op": "dup",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "imm1#0",
        "imm1#0 (copy)"
      ]
    },
    "4284": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "imm1#0",
        "total_length%0#0"
      ]
    },
    "4285": {
      "op": "swap",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm1#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "imm1#0"
      ]
    },
    "4286": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0"
      ]
    },
    "4289": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4290": {
      "block": "test_concat_immutable_dynamic_for_header@1",
      "stack_in": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "4291": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4293": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%0#0"
      ]
    },
    "4294": {
      "op": "bz test_concat_immutable_dynamic_after_for@4",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4297": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ]
    },
    "4299": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "index%0#0",
        "index%0#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "index%0#0 (copy)",
        "2"
      ]
    },
    "4300": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0"
      ]
    },
    "4301": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0"
      ]
    },
    "4303": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0",
        "index%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0 (copy)",
        "array_data%0#0 (copy)"
      ]
    },
    "4304": {
      "op": "cover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "head_offset_bytes%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "4306": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0 (copy)",
        "head_offset_bytes%0#0"
      ]
    },
    "4307": {
      "error": "invalid array encoding",
      "op": "extract_uint16 // on error: invalid array encoding",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ]
    },
    "4308": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)"
      ]
    },
    "4309": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0"
      ]
    },
    "4311": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0",
        "num_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "4312": {
      "op": "cover 5",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "num_bytes%0#0 (copy)"
      ]
    },
    "4314": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0",
        "offset_is_correct%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "offset_is_correct%0#0"
      ]
    },
    "4315": {
      "error": "invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "op": "assert // invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0"
      ]
    },
    "4316": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "index%0#0"
      ]
    },
    "4317": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "index%0#0",
        "1"
      ]
    },
    "4318": {
      "op": "+",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0"
      ]
    },
    "4319": {
      "op": "dig 8",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4321": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_index%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "4323": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4324": {
      "op": "dig 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "4326": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0"
      ]
    },
    "4327": {
      "op": "dig 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)"
      ]
    },
    "4329": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_index%0#0 (copy)",
        "2"
      ]
    },
    "4330": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4331": {
      "op": "dig 5",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset_offset%0#0",
        "array_data%0#0 (copy)"
      ]
    },
    "4333": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "array_data%0#0 (copy)",
        "aggregate%next_item_offset_offset%0#0"
      ]
    },
    "4334": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%has_next%0#0",
        "aggregate%next_index%0#0",
        "aggregate%next_item_offset%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%has_next%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0"
      ]
    },
    "4335": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_of_array%0#0",
        "aggregate%next_item_offset%0#0",
        "aggregate%has_next%0#0"
      ]
    },
    "4337": {
      "op": "select",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%end_offset%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "item_offset%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4338": {
      "op": "uncover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "item_offset%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "array_data%0#0"
      ]
    },
    "4340": {
      "op": "uncover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%end_offset%0#0",
        "array_data%0#0",
        "item_offset%0#0"
      ]
    },
    "4342": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "item_offset%0#0",
        "aggregate%end_offset%0#0"
      ]
    },
    "4344": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0"
      ]
    },
    "4345": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4346": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "aggregate%substring3%0#0 (copy)",
        "8"
      ]
    },
    "4347": {
      "error": "invalid tuple encoding",
      "op": "extract_uint16 // on error: invalid tuple encoding",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4348": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)"
      ]
    },
    "4349": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "extract_uint16%0#0 (copy)",
        "10"
      ]
    },
    "4351": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "eq%0#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "eq%0#0"
      ]
    },
    "4352": {
      "error": "invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0"
      ]
    },
    "4353": {
      "op": "dig 1",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "aggregate%substring3%0#0 (copy)"
      ]
    },
    "4355": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%len%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "array_data%0#0",
        "extract_uint16%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%0#0",
        "extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "4356": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0"
      ]
    },
    "4357": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%substring3%2#0",
        "0"
      ]
    },
    "4358": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0"
      ]
    },
    "4359": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%array_length%0#0",
        "aggregate%array_length%3#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "aggregate%array_length%3#0",
        "12"
      ]
    },
    "4361": {
      "op": "+",
      "defined_out": [
        "add%1#0",
        "aggregate%array_length%0#0",
        "aggregate%next_index%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "aggregate%next_index%0#0",
        "add%1#0"
      ]
    },
    "4362": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%0#0",
        "add%1#0",
        "num_bytes%0#0"
      ]
    },
    "4364": {
      "op": "+",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%0#0",
        "num_bytes%0#0"
      ]
    },
    "4365": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%0#0"
      ]
    },
    "4367": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4369": {
      "op": "b test_concat_immutable_dynamic_for_header@1"
    },
    "4372": {
      "block": "test_concat_immutable_dynamic_after_for@4",
      "stack_in": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0"
      ]
    },
    "4374": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "num_bytes%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%0#0",
        "2"
      ]
    },
    "4375": {
      "op": "+",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0"
      ]
    },
    "4376": {
      "op": "dig 3",
      "defined_out": [
        "num_bytes%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%1#0",
        "total_length%0#0"
      ]
    },
    "4378": {
      "op": "==",
      "defined_out": [
        "eq%1#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "eq%1#0"
      ]
    },
    "4379": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4380": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "imm2#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0"
      ]
    },
    "4383": {
      "op": "dup",
      "defined_out": [
        "imm2#0",
        "imm2#0 (copy)",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "imm2#0 (copy)"
      ]
    },
    "4384": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm2#0",
        "imm2#0 (copy)",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "imm2#0 (copy)",
        "0"
      ]
    },
    "4385": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4386": {
      "op": "dup",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "aggregate%array_length%4#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4387": {
      "op": "bury 11",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4389": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "aggregate%array_length%4#0",
        "2"
      ]
    },
    "4390": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "num_bytes%2#0"
      ]
    },
    "4391": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0"
      ]
    },
    "4393": {
      "op": "dup",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "imm2#0 (copy)"
      ]
    },
    "4394": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0",
        "total_length%1#0"
      ]
    },
    "4395": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%array_length%4#0",
        "imm2#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "imm2#0"
      ]
    },
    "4397": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0"
      ]
    },
    "4400": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4402": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0"
      ]
    },
    "4403": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%0#0",
        "num_bytes%2#0",
        "total_length%0#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4405": {
      "block": "test_concat_immutable_dynamic_for_header@5",
      "stack_in": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0"
      ]
    },
    "4407": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%array_length%4#0",
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4409": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%4#0",
        "continue_looping%1#0",
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "continue_looping%1#0"
      ]
    },
    "4410": {
      "op": "bz test_concat_immutable_dynamic_after_for@8",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4413": {
      "op": "dig 7",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0"
      ]
    },
    "4415": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "index%1#0",
        "index%1#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "index%1#0 (copy)"
      ]
    },
    "4416": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%4#0",
        "index%1#0",
        "index%1#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "index%1#0 (copy)",
        "2"
      ]
    },
    "4417": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%4#0",
        "head_offset_bytes%1#0",
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "head_offset_bytes%1#0"
      ]
    },
    "4418": {
      "op": "dig 11",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "head_offset_bytes%1#0",
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "head_offset_bytes%1#0",
        "array_data%1#0"
      ]
    },
    "4420": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "array_data%1#0 (copy)",
        "head_offset_bytes%1#0",
        "index%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0",
        "head_offset_bytes%1#0",
        "array_data%1#0 (copy)",
        "array_data%1#0 (copy)"
      ]
    },
    "4421": {
      "op": "cover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "head_offset_bytes%1#0",
        "array_data%1#0 (copy)"
      ]
    },
    "4423": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "array_data%1#0 (copy)",
        "head_offset_bytes%1#0"
      ]
    },
    "4424": {
      "error": "invalid array encoding",
      "op": "extract_uint16 // on error: invalid array encoding",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0"
      ]
    },
    "4425": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)"
      ]
    },
    "4426": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "num_bytes%2#0"
      ]
    },
    "4428": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "num_bytes%2#0",
        "num_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "num_bytes%2#0 (copy)",
        "num_bytes%2#0 (copy)"
      ]
    },
    "4429": {
      "op": "cover 5",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "item_offset%1#0 (copy)",
        "num_bytes%2#0 (copy)"
      ]
    },
    "4431": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0",
        "offset_is_correct%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "offset_is_correct%1#0"
      ]
    },
    "4432": {
      "error": "invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "op": "assert // invalid tail pointer for (len+(uint64,(len+utf8[]))[])",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0"
      ]
    },
    "4433": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "index%1#0"
      ]
    },
    "4434": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "index%1#0",
        "1"
      ]
    },
    "4435": {
      "op": "+",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0"
      ]
    },
    "4436": {
      "op": "dig 12",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4438": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%next_index%2#0 (copy)",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "4440": {
      "error": "index access is out of bounds",
      "op": "- // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4441": {
      "op": "dig 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "array_data%1#0 (copy)"
      ]
    },
    "4443": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0"
      ]
    },
    "4444": {
      "op": "dig 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_index%2#0 (copy)"
      ]
    },
    "4446": {
      "op": "intc_2 // 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_index%2#0 (copy)",
        "2"
      ]
    },
    "4447": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4448": {
      "op": "dig 5",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset_offset%2#0",
        "array_data%1#0 (copy)"
      ]
    },
    "4450": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "array_data%1#0 (copy)",
        "aggregate%next_item_offset_offset%2#0"
      ]
    },
    "4451": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%end_of_array%2#0",
        "aggregate%has_next%2#0",
        "aggregate%next_index%2#0",
        "aggregate%next_item_offset%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%has_next%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0"
      ]
    },
    "4452": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%end_of_array%2#0",
        "aggregate%next_item_offset%2#0",
        "aggregate%has_next%2#0"
      ]
    },
    "4454": {
      "op": "select",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%end_offset%2#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "item_offset%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4455": {
      "op": "uncover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "item_offset%1#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0",
        "array_data%1#0"
      ]
    },
    "4457": {
      "op": "uncover 3",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%end_offset%2#0",
        "array_data%1#0",
        "item_offset%1#0"
      ]
    },
    "4459": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "item_offset%1#0",
        "aggregate%end_offset%2#0"
      ]
    },
    "4461": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0"
      ]
    },
    "4462": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4463": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "aggregate%substring3%3#0 (copy)",
        "8"
      ]
    },
    "4464": {
      "error": "invalid tuple encoding",
      "op": "extract_uint16 // on error: invalid tuple encoding",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "extract_uint16%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0"
      ]
    },
    "4465": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)"
      ]
    },
    "4466": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0",
        "extract_uint16%1#0 (copy)",
        "10"
      ]
    },
    "4468": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "eq%2#0",
        "extract_uint16%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0",
        "eq%2#0"
      ]
    },
    "4469": {
      "error": "invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "op": "assert // invalid tail pointer at index 1 of (uint64,(len+utf8[]))",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0"
      ]
    },
    "4470": {
      "op": "dig 1",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0",
        "aggregate%substring3%3#0 (copy)"
      ]
    },
    "4472": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%len%1#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "array_data%1#0",
        "extract_uint16%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%3#0",
        "extract_uint16%1#0",
        "aggregate%len%1#0"
      ]
    },
    "4473": {
      "op": "substring3",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%5#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%5#0"
      ]
    },
    "4474": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%5#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%substring3%5#0",
        "0"
      ]
    },
    "4475": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%4#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%7#0"
      ]
    },
    "4476": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "aggregate%array_length%4#0",
        "aggregate%array_length%7#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "aggregate%array_length%7#0",
        "12"
      ]
    },
    "4478": {
      "op": "+",
      "defined_out": [
        "add%3#0",
        "aggregate%array_length%4#0",
        "aggregate%next_index%2#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "aggregate%next_index%2#0",
        "add%3#0"
      ]
    },
    "4479": {
      "op": "uncover 2",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%2#0",
        "add%3#0",
        "num_bytes%2#0"
      ]
    },
    "4481": {
      "op": "+",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%next_index%2#0",
        "num_bytes%2#0"
      ]
    },
    "4482": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "index%1#0"
      ]
    },
    "4484": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_length%4#0",
        "array_data%1#0",
        "index%1#0",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4486": {
      "op": "b test_concat_immutable_dynamic_for_header@5"
    },
    "4489": {
      "block": "test_concat_immutable_dynamic_after_for@8",
      "stack_in": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ],
      "op": "dig 6",
      "defined_out": [
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0"
      ]
    },
    "4491": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "num_bytes%2#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%2#0",
        "2"
      ]
    },
    "4492": {
      "op": "+",
      "defined_out": [
        "num_bytes%2#0",
        "num_bytes%3#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%3#0"
      ]
    },
    "4493": {
      "op": "dig 6",
      "defined_out": [
        "num_bytes%2#0",
        "num_bytes%3#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "num_bytes%3#0",
        "total_length%1#0"
      ]
    },
    "4495": {
      "op": "==",
      "defined_out": [
        "eq%3#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "eq%3#0"
      ]
    },
    "4496": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyDynamicSizedTuple>",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4497": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%array_length%0#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4499": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%0#0",
        "array_data%0#0"
      ]
    },
    "4501": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "aggregate%array_length%4#0"
      ]
    },
    "4503": {
      "op": "dig 12",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "array_data%1#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "aggregate%array_length%0#0",
        "array_data%0#0",
        "aggregate%array_length%4#0",
        "array_data%1#0"
      ]
    },
    "4505": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "array_data%1#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#1",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#1"
      ]
    },
    "4508": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "array_data%1#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#1",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#1",
        "0x151f7c75"
      ]
    },
    "4509": {
      "op": "swap",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "0x151f7c75",
        "as_Encoded(len+(uint64,(len+utf8[]))[])%0#1"
      ]
    },
    "4510": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "array_data%1#0",
        "num_bytes%2#0",
        "tmp%7#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "tmp%7#0"
      ]
    },
    "4511": {
      "op": "log",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4512": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%4#0",
        "array_data%0#0",
        "array_data%1#0",
        "num_bytes%2#0",
        "total_length%1#0"
      ],
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0",
        "1"
      ]
    },
    "4513": {
      "op": "return",
      "stack_out": [
        "array_data%1#0",
        "aggregate%array_length%4#0",
        "index%1#0",
        "num_bytes%2#0",
        "total_length%1#0",
        "aggregate%array_length%0#0",
        "num_bytes%0#0",
        "total_length%0#0",
        "array_data%0#0",
        "index%0#0"
      ]
    },
    "4514": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4[routing]",
      "params": {},
      "block": "test_immutable_arc4",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "imm#0"
      ],
      "stack_out": [
        "imm#0"
      ]
    },
    "4517": {
      "op": "dup",
      "defined_out": [
        "imm#0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0",
        "imm#0 (copy)"
      ]
    },
    "4518": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "imm#0",
        "imm#0 (copy)"
      ],
      "stack_out": [
        "imm#0",
        "imm#0 (copy)",
        "0"
      ]
    },
    "4519": {
      "error": "invalid array length header",
      "op": "extract_uint16 // on error: invalid array length header",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4520": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "4521": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "16"
      ]
    },
    "4523": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "imm#0",
        "mul%0#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "mul%0#0"
      ]
    },
    "4524": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "imm#0",
        "mul%0#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "mul%0#0",
        "2"
      ]
    },
    "4525": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%array_length%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "add%0#0"
      ]
    },
    "4526": {
      "op": "dig 2",
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "add%0#0",
        "imm#0 (copy)"
      ]
    },
    "4528": {
      "op": "len",
      "defined_out": [
        "add%0#0",
        "aggregate%array_length%0#0",
        "imm#0",
        "len%0#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "add%0#0",
        "len%0#0"
      ]
    },
    "4529": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "eq%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "eq%0#0"
      ]
    },
    "4530": {
      "error": "invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyStruct>",
      "op": "assert // invalid number of bytes for arc4.dynamic_array<test_cases.array.immutable.MyStruct>",
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4531": {
      "op": "dup",
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "4532": {
      "error": "expected non empty array",
      "op": "assert // expected non empty array",
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0"
      ]
    },
    "4533": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "4534": {
      "op": "-",
      "defined_out": [
        "imm#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "imm#0",
        "tmp%3#0"
      ]
    },
    "4535": {
      "op": "dig 1",
      "stack_out": [
        "imm#0",
        "tmp%3#0",
        "imm#0 (copy)"
      ]
    },
    "4537": {
      "op": "extract 2 16",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "imm#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "imm#0",
        "tmp%3#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "4540": {
      "op": "swap",
      "stack_out": [
        "imm#0",
        "aggregate%encoded_element%0#0",
        "tmp%3#0"
      ]
    },
    "4541": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "imm#0",
        "aggregate%encoded_element%0#0",
        "tmp%3#0",
        "16"
      ]
    },
    "4543": {
      "op": "*",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4544": {
      "op": "intc_2 // 2",
      "stack_out": [
        "imm#0",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset%0#0",
        "2"
      ]
    },
    "4545": {
      "op": "+",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset_with_length_header%0#0",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "aggregate%encoded_element%0#0",
        "aggregate%write_offset_with_length_header%0#0"
      ]
    },
    "4546": {
      "op": "swap",
      "stack_out": [
        "imm#0",
        "aggregate%write_offset_with_length_header%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "4547": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "stack_out": [
        "imm#0"
      ]
    },
    "4548": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "imm#0"
      ],
      "stack_out": [
        "imm#0",
        "0x151f7c75"
      ]
    },
    "4549": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "imm#0"
      ]
    },
    "4550": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4551": {
      "op": "log",
      "stack_out": []
    },
    "4552": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "4553": {
      "op": "return",
      "stack_out": []
    },
    "4554": {
      "subroutine": "test_cases.array.immutable.ImmutableArrayContract.test_imm_fixed_arr[routing]",
      "params": {},
      "block": "test_imm_fixed_arr",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "item_index_internal%0#0"
      ]
    },
    "4555": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "48"
      ]
    },
    "4557": {
      "op": "bzero",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0"
      ]
    },
    "4558": {
      "op": "dup",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0"
      ]
    },
    "4559": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#1"
      ]
    },
    "4561": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%1#1",
        "1"
      ]
    },
    "4562": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0"
      ]
    },
    "4563": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "4565": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%3#0",
        "2"
      ]
    },
    "4566": {
      "op": "+",
      "defined_out": [
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%2#0",
        "tmp%4#0"
      ]
    },
    "4567": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "tmp%2#0"
      ]
    },
    "4568": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "arr1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "tmp%4#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "4569": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%val_as_bytes%0#0",
        "tmp%4#0"
      ]
    },
    "4570": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "4571": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "4572": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "arr1#0",
        "struct12#0",
        "struct12#0"
      ]
    },
    "4573": {
      "op": "cover 2",
      "defined_out": [
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0"
      ]
    },
    "4575": {
      "op": "dup",
      "defined_out": [
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)"
      ]
    },
    "4576": {
      "op": "dig 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "struct12#0 (copy)",
        "struct12#0 (copy)"
      ]
    },
    "4578": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "arr1#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "struct12#0",
        "aggregate%head%3#0"
      ]
    },
    "4579": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "aggregate%head%3#0",
        "struct12#0"
      ]
    },
    "4580": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4581": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr1#0",
        "arr2#0",
        "arr2#0"
      ]
    },
    "4582": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4584": {
      "op": "!=",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "struct12#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "tmp%6#0"
      ]
    },
    "4585": {
      "error": "expected arrays to be different",
      "op": "assert // expected arrays to be different",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0"
      ]
    },
    "4586": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4587": {
      "block": "test_imm_fixed_arr_for_header@2",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4588": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "4590": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "4591": {
      "op": "bz test_imm_fixed_arr_after_for@5",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4594": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "4596": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "16"
      ]
    },
    "4598": {
      "op": "*",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4599": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "aggregate%write_offset%0#0",
        "arr1#0"
      ]
    },
    "4601": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0"
      ]
    },
    "4602": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%write_offset%0#0",
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0",
        "aggregate%write_offset%0#0",
        "struct12#0"
      ]
    },
    "4604": {
      "error": "index access is out of bounds",
      "op": "replace3 // on error: index access is out of bounds",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4605": {
      "op": "bury 5",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4607": {
      "op": "intc_1 // 1",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "4608": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "i#0"
      ]
    },
    "4609": {
      "op": "bury 1",
      "defined_out": [
        "arr1#0",
        "i#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4611": {
      "op": "b test_imm_fixed_arr_for_header@2"
    },
    "4614": {
      "block": "test_imm_fixed_arr_after_for@5",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4616": {
      "op": "dig 2",
      "defined_out": [
        "arr1#0",
        "arr2#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "arr2#0"
      ]
    },
    "4618": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "4619": {
      "error": "expected arrays to be the same",
      "op": "assert // expected arrays to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4620": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4621": {
      "op": "bury 5",
      "defined_out": [
        "arr1#0",
        "arr2#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4623": {
      "block": "test_imm_fixed_arr_for_header@6",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4625": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "3"
      ]
    },
    "4627": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "4628": {
      "op": "bz test_imm_fixed_arr_after_for@9",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4631": {
      "op": "dig 4",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4633": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "4634": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "4636": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4637": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%bytes_offset%1#0",
        "arr1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%1#0",
        "arr1#0"
      ]
    },
    "4639": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "4640": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "arr1#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "4642": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "struct_it#0"
      ]
    },
    "4643": {
      "op": "dig 4",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "struct_it#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "struct_it#0",
        "struct12#0"
      ]
    },
    "4645": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "tmp%9#0"
      ]
    },
    "4646": {
      "error": "expected items on iteration to be the same",
      "op": "assert // expected items on iteration to be the same",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "4648": {
      "op": "+",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "4649": {
      "op": "bury 5",
      "defined_out": [
        "arr1#0",
        "item_index_internal%0#0",
        "struct12#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4651": {
      "op": "b test_imm_fixed_arr_for_header@6"
    },
    "4654": {
      "block": "test_imm_fixed_arr_after_for@9",
      "stack_in": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ],
      "op": "bytec 10 // \"imm_fixed_arr\"",
      "defined_out": [
        "\"imm_fixed_arr\""
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\""
      ]
    },
    "4656": {
      "op": "dig 4",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0"
      ]
    },
    "4658": {
      "op": "dup",
      "defined_out": [
        "\"imm_fixed_arr\"",
        "arr1#0",
        "arr1#0 (copy)"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)",
        "arr1#0 (copy)"
      ]
    },
    "4659": {
      "op": "cover 2",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "\"imm_fixed_arr\"",
        "arr1#0 (copy)"
      ]
    },
    "4661": {
      "op": "app_global_put",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4662": {
      "op": "dup",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "arr1#0 (copy)"
      ]
    },
    "4663": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%13#0"
      ]
    },
    "4666": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%13#0",
        "15"
      ]
    },
    "4668": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "tmp%14#0"
      ]
    },
    "4669": {
      "error": "expected sum to be 15",
      "op": "assert // expected sum to be 15",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0"
      ]
    },
    "4670": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "arr1#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "4688": {
      "error": "index access is out of bounds",
      "op": "replace2 0 // on error: index access is out of bounds",
      "defined_out": [
        "arr1#0",
        "mut_arr#1"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "mut_arr#1"
      ]
    },
    "4690": {
      "callsub": "test_cases.array.immutable.sum_imm_fixed",
      "op": "callsub sum_imm_fixed",
      "defined_out": [
        "arr1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "4693": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr1#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%17#0",
        "10"
      ]
    },
    "4695": {
      "op": "==",
      "defined_out": [
        "arr1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "4696": {
      "error": "expected sum to be 10",
      "op": "assert // expected sum to be 10",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4697": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0"
      ]
    },
    "4698": {
      "op": "bytec 10 // \"imm_fixed_arr\"",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0",
        "\"imm_fixed_arr\""
      ]
    },
    "4700": {
      "op": "app_global_get_ex",
      "defined_out": [
        "arr1#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4701": {
      "error": "check self.imm_fixed_arr exists",
      "op": "assert // check self.imm_fixed_arr exists",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "4702": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "arr1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "maybe_value%1#0",
        "0x151f7c75"
      ]
    },
    "4703": {
      "op": "swap",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "0x151f7c75",
        "maybe_value%1#0"
      ]
    },
    "4704": {
      "op": "concat",
      "defined_out": [
        "arr1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "tmp%1#0"
      ]
    },
    "4705": {
      "op": "log",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    },
    "4706": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "arr1#0"
      ],
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0",
        "1"
      ]
    },
    "4707": {
      "op": "return",
      "stack_out": [
        "item_index_internal%0#0",
        "arr1#0",
        "struct12#0",
        "arr2#0",
        "i#0"
      ]
    }
  }
}