{
  "version": 3,
  "sources": [
    "../fixed_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAmDK;;AAAA;AAAA;AAAA;;AAAA;AAnDL;;;AAmDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAjCL;;;AAAA;AAiCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAnBL;;;AAAA;AAmBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJL;;AAAA;;;;;;;;;AAIA;;;;;;;;AAEQ;AAAa;AAAb;AAE6C;;;AACjB;;;AACA;;;AAFhB;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFL;AAGK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHL;AAKE;AAAA;;AAAO;;AAAP;AAAjB;;;;;AACmB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAA;;AAAA;AAAP;AACO;;AAAA;;;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;AAAA;;;AAAuB;;AAAA;;AAAA;AAAvB;AAAA;AAAP;;;;;;;;AA4DK;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AACJ;AAAT;;AAC2B;AAAA;AAAA;AAAA;;AAAH;AAApB;;AAAa;;AAAA;;AAAA;AAArB;;;;;AACgB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACL;;AAAA;AAAX;;;AACiB;;;AAAA;AAAsB;AAAA;;AAAA;AAAtB;AAAL;;AAGD;;AAAA;;AAAA;AAAX;;;AACY;;AAAA;;AAAK;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AAST;;AAAA;;AAAK;;;;AAJA;;AAAA;AAAiB;;;AAAA;AAAjB;AAAL;;;;;AAjEJ;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAI;;AAAJ;AAAA;AAAA;AAAA;;;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;;;;;;;;;;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;;;AAGR;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAEA;;AAAA;AAER;;;AAGmB;;AAAA;;;AAAX;AAEQ;AAAR;AACY;AAAA;AAAA;;AAApB;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACqB;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAJN",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8 80"
    },
    "7": {
      "op": "bytecblock \"count\" 0x151f7c75 \"\""
    },
    "21": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "23": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "26": {
      "op": "bytec_0 // \"count\""
    },
    "27": {
      "op": "intc_1 // 0"
    },
    "28": {
      "op": "app_global_put"
    },
    "29": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "31": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "34": {
      "op": "pushbytess 0x28d7c1b8 0xf8fd68a7 0x1f028db1 0x096b3a59 // method \"test_array(uint64,uint64,uint64,uint64)uint64\", method \"test_bool_array(uint64)uint64\", method \"test_arc4_conversion(uint64)uint64[]\", method \"sum_array(uint64[])uint64\""
    },
    "56": {
      "op": "txna ApplicationArgs 0"
    },
    "59": {
      "op": "match main_test_array_route@5 main_test_bool_array_route@6 main_test_arc4_conversion_route@7 main_sum_array_route@8"
    },
    "69": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "70": {
      "op": "return"
    },
    "71": {
      "block": "main_sum_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "73": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "74": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "75": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "77": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "78": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "81": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "84": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "85": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "86": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "87": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "88": {
      "op": "log",
      "stack_out": []
    },
    "89": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "90": {
      "op": "return"
    },
    "91": {
      "block": "main_test_arc4_conversion_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "93": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "94": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "95": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "97": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "98": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "101": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "102": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "105": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "106": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%21#0"
      ]
    },
    "107": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "108": {
      "op": "log",
      "stack_out": []
    },
    "109": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "110": {
      "op": "return"
    },
    "111": {
      "block": "main_test_bool_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "113": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "114": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "115": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "117": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "118": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "121": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "122": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "125": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "126": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "127": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "129": {
      "op": "log",
      "stack_out": []
    },
    "130": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "131": {
      "op": "return"
    },
    "132": {
      "block": "main_test_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "134": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "135": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "136": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "138": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "139": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "142": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "145": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ]
    },
    "146": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "149": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "152": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0"
      ]
    },
    "153": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "156": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "157": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "158": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "159": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "160": {
      "op": "log",
      "stack_out": []
    },
    "161": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "162": {
      "op": "return"
    },
    "163": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "165": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "168": {
      "op": "txn ApplicationID"
    },
    "170": {
      "op": "!"
    },
    "171": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "172": {
      "op": "intc_0 // 1"
    },
    "173": {
      "op": "return"
    },
    "174": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "177": {
      "op": "intc_1 // 0",
      "stack_out": [
        "last_point.x#0"
      ]
    },
    "178": {
      "op": "dup",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0"
      ]
    },
    "179": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1"
      ]
    },
    "180": {
      "op": "dupn 6",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "182": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\""
      ]
    },
    "183": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\"",
        "0"
      ]
    },
    "184": {
      "op": "app_global_put",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "185": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "188": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "191": {
      "callsub": "test_cases.array.fixed_size.FixedSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "194": {
      "op": "uncover 11",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%0#0"
      ]
    },
    "196": {
      "op": "itob",
      "defined_out": [
        "sub_item%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "sub_item%1#0"
      ]
    },
    "197": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "sub_item%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "sub_item%1#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "215": {
      "op": "swap",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "0x00000000000000000000000000000000",
        "sub_item%1#0"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "encoded%2#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%2#0"
      ]
    },
    "217": {
      "op": "uncover 11",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%2#0",
        "tmp%1#0"
      ]
    },
    "219": {
      "op": "itob",
      "defined_out": [
        "encoded%2#0",
        "sub_item%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%2#0",
        "sub_item%2#0"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "encoded%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%3#0"
      ]
    },
    "221": {
      "op": "uncover 10",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%3#0",
        "tmp%2#0"
      ]
    },
    "223": {
      "op": "concat",
      "defined_out": [
        "encoded%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%4#0"
      ]
    },
    "224": {
      "op": "uncover 9",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%4#0",
        "tmp%3#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0"
      ]
    },
    "227": {
      "op": "frame_dig -3",
      "defined_out": [
        "encoded%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "y1#0 (copy)"
      ]
    },
    "229": {
      "op": "itob",
      "defined_out": [
        "encoded%5#0",
        "sub_item%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "sub_item%3#0"
      ]
    },
    "230": {
      "op": "frame_dig -4",
      "defined_out": [
        "encoded%5#0",
        "sub_item%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "sub_item%3#0",
        "x1#0 (copy)"
      ]
    },
    "232": {
      "op": "swap",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "x1#0 (copy)",
        "sub_item%3#0"
      ]
    },
    "233": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "encoded%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%7#0"
      ]
    },
    "234": {
      "op": "uncover 9",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%7#0",
        "tmp%4#0"
      ]
    },
    "236": {
      "op": "itob",
      "defined_out": [
        "encoded%5#0",
        "encoded%7#0",
        "sub_item%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%7#0",
        "sub_item%4#0"
      ]
    },
    "237": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "encoded%8#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%8#0"
      ]
    },
    "238": {
      "op": "uncover 8",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%8#0",
        "tmp%5#0"
      ]
    },
    "240": {
      "op": "itob",
      "defined_out": [
        "encoded%5#0",
        "encoded%8#0",
        "sub_item%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%8#0",
        "sub_item%5#0"
      ]
    },
    "241": {
      "op": "concat",
      "defined_out": [
        "encoded%5#0",
        "encoded%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%9#0"
      ]
    },
    "242": {
      "op": "uncover 7",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%9#0",
        "tmp%6#0"
      ]
    },
    "244": {
      "op": "concat",
      "defined_out": [
        "encoded%10#0",
        "encoded%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%10#0"
      ]
    },
    "245": {
      "op": "uncover 6",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%10#0",
        "tmp%7#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "encoded%11#0",
        "encoded%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "encoded%5#0",
        "encoded%11#0"
      ]
    },
    "248": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0"
      ]
    },
    "249": {
      "op": "frame_dig -1",
      "defined_out": [
        "data%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "y2#0 (copy)"
      ]
    },
    "251": {
      "op": "itob",
      "defined_out": [
        "data%1#0",
        "sub_item%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "sub_item%6#0"
      ]
    },
    "252": {
      "op": "frame_dig -2",
      "defined_out": [
        "data%1#0",
        "sub_item%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "sub_item%6#0",
        "x2#0 (copy)"
      ]
    },
    "254": {
      "op": "swap",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "x2#0 (copy)",
        "sub_item%6#0"
      ]
    },
    "255": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "encoded%13#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%13#0"
      ]
    },
    "256": {
      "op": "uncover 5",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%13#0",
        "tmp%8#0"
      ]
    },
    "258": {
      "op": "itob",
      "defined_out": [
        "data%1#0",
        "encoded%13#0",
        "sub_item%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%13#0",
        "sub_item%7#0"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "encoded%14#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%14#0"
      ]
    },
    "260": {
      "op": "uncover 4",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%14#0",
        "tmp%9#0"
      ]
    },
    "262": {
      "op": "itob",
      "defined_out": [
        "data%1#0",
        "encoded%14#0",
        "sub_item%8#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%14#0",
        "sub_item%8#0"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "encoded%15#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%15#0"
      ]
    },
    "264": {
      "op": "uncover 3",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%15#0",
        "tmp%10#0"
      ]
    },
    "266": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "encoded%16#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "data%1#0",
        "encoded%16#0"
      ]
    },
    "267": {
      "op": "uncover 2",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "data%1#0",
        "encoded%16#0",
        "tmp%11#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "data%1#0",
        "encoded%17#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "data%1#0",
        "encoded%17#0"
      ]
    },
    "270": {
      "op": "concat",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0"
      ]
    },
    "271": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "272": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "274": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "276": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "277": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "280": {
      "op": "frame_dig 9"
    },
    "282": {
      "op": "frame_dig 10"
    },
    "284": {
      "op": "dup"
    },
    "285": {
      "op": "cover 2"
    },
    "287": {
      "op": "intc_3 // 80"
    },
    "288": {
      "op": "*"
    },
    "289": {
      "op": "intc_3 // 80"
    },
    "290": {
      "op": "extract3"
    },
    "291": {
      "op": "dup"
    },
    "292": {
      "op": "pushint 24 // 24"
    },
    "294": {
      "op": "extract_uint64"
    },
    "295": {
      "op": "dig 2"
    },
    "297": {
      "op": "intc_0 // 1"
    },
    "298": {
      "op": "+"
    },
    "299": {
      "op": "swap"
    },
    "300": {
      "op": "dig 1"
    },
    "302": {
      "op": "=="
    },
    "303": {
      "op": "assert"
    },
    "304": {
      "op": "dig 1"
    },
    "306": {
      "op": "extract 64 8"
    },
    "309": {
      "op": "uncover 3"
    },
    "311": {
      "op": "pushint 2 // 2"
    },
    "313": {
      "op": "+"
    },
    "314": {
      "op": "itob"
    },
    "315": {
      "op": "b=="
    },
    "316": {
      "op": "assert"
    },
    "317": {
      "op": "swap"
    },
    "318": {
      "op": "extract 72 8"
    },
    "321": {
      "op": "dig 1"
    },
    "323": {
      "op": "dig 2"
    },
    "325": {
      "op": "*"
    },
    "326": {
      "op": "itob"
    },
    "327": {
      "op": "b=="
    },
    "328": {
      "op": "assert"
    },
    "329": {
      "op": "frame_bury 10"
    },
    "331": {
      "op": "b test_array_for_header@1"
    },
    "334": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "336": {
      "op": "dup",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "slot_contents%0#0"
      ]
    },
    "337": {
      "op": "frame_bury 1",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "339": {
      "op": "dup",
      "defined_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "340": {
      "op": "extract 0 8",
      "defined_out": [
        "last_point.x#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "last_point.x#0"
      ]
    },
    "343": {
      "op": "frame_bury 0",
      "defined_out": [
        "last_point.x#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "345": {
      "op": "dup",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "346": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "last_point.x#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)",
        "8"
      ]
    },
    "347": {
      "op": "extract_uint64",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "last_point.y#0"
      ]
    },
    "348": {
      "op": "frame_bury 5",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "350": {
      "op": "intc_1 // 0",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "length#0"
      ]
    },
    "351": {
      "op": "frame_bury 6",
      "defined_out": [
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "353": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%bytes_len%0#1"
      ]
    },
    "354": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "array%bytes_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%bytes_len%0#1",
        "80"
      ]
    },
    "355": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%array_len%0#1"
      ]
    },
    "356": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%array_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "358": {
      "op": "intc_0 // 1",
      "defined_out": [
        "array%array_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "359": {
      "op": "frame_bury 8",
      "defined_out": [
        "array%array_len%0#1",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "361": {
      "block": "test_array_for_header@6",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "363": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "array%array_len%0#1"
      ]
    },
    "365": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "366": {
      "op": "bz test_array_after_for@14",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "369": {
      "op": "frame_dig 9"
    },
    "371": {
      "op": "dup"
    },
    "372": {
      "op": "frame_dig 8"
    },
    "374": {
      "op": "intc_3 // 80"
    },
    "375": {
      "op": "*"
    },
    "376": {
      "op": "dup"
    },
    "377": {
      "op": "frame_bury 3"
    },
    "379": {
      "op": "dup2"
    },
    "380": {
      "op": "intc_3 // 80"
    },
    "381": {
      "op": "extract3"
    },
    "382": {
      "op": "cover 2"
    },
    "384": {
      "op": "intc_2 // 8"
    },
    "385": {
      "op": "extract3"
    },
    "386": {
      "op": "swap"
    },
    "387": {
      "op": "intc_2 // 8"
    },
    "388": {
      "op": "extract_uint64"
    },
    "389": {
      "op": "frame_bury 7"
    },
    "391": {
      "op": "frame_dig 0"
    },
    "393": {
      "op": "b<"
    },
    "394": {
      "op": "bz test_array_else_body@9"
    },
    "397": {
      "op": "frame_dig 1"
    },
    "399": {
      "op": "intc_1 // 0"
    },
    "400": {
      "op": "extract_uint64"
    },
    "401": {
      "op": "swap"
    },
    "402": {
      "op": "frame_dig 3"
    },
    "404": {
      "op": "extract_uint64"
    },
    "405": {
      "op": "-"
    },
    "406": {
      "op": "frame_bury 4"
    },
    "408": {
      "block": "test_array_after_if_else@10",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "410": {
      "op": "frame_dig 5",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "412": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%6#1"
      ]
    },
    "413": {
      "op": "bz test_array_else_body@12",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "416": {
      "op": "frame_dig 5"
    },
    "418": {
      "op": "frame_dig 7"
    },
    "420": {
      "op": "-"
    },
    "421": {
      "block": "test_array_after_if_else@13",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0"
      ]
    },
    "423": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "424": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "tmp%7#1"
      ]
    },
    "425": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0"
      ]
    },
    "426": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%7#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "427": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "tmp%8#0"
      ]
    },
    "428": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "429": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1"
      ]
    },
    "430": {
      "op": "frame_dig 6",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1",
        "length#0"
      ]
    },
    "432": {
      "op": "+",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "433": {
      "op": "frame_bury 6",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "435": {
      "op": "frame_dig 8",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "437": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "1"
      ]
    },
    "438": {
      "op": "+",
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "439": {
      "op": "frame_bury 8",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "441": {
      "op": "b test_array_for_header@6"
    },
    "444": {
      "block": "test_array_else_body@12",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "446": {
      "op": "frame_dig 5",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "448": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "449": {
      "op": "b test_array_after_if_else@13"
    },
    "452": {
      "block": "test_array_else_body@9",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%2#1"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "array%bytes_index%4#1",
        "slot_contents%2#1"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%2#1",
        "array%bytes_index%4#1"
      ]
    },
    "454": {
      "op": "extract_uint64",
      "defined_out": [
        "array%bytes_index%4#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "455": {
      "op": "frame_dig 1",
      "defined_out": [
        "array%bytes_index%4#1",
        "slot_contents%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "slot_contents%0#0"
      ]
    },
    "457": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%bytes_index%4#1",
        "slot_contents%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "slot_contents%0#0",
        "0"
      ]
    },
    "458": {
      "op": "extract_uint64",
      "defined_out": [
        "array%bytes_index%4#1",
        "slot_contents%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "459": {
      "op": "-",
      "defined_out": [
        "array%bytes_index%4#1",
        "dx#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "460": {
      "op": "frame_bury 4",
      "defined_out": [
        "array%bytes_index%4#1",
        "dx#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "462": {
      "op": "b test_array_after_if_else@10"
    },
    "465": {
      "block": "test_array_after_for@14",
      "stack_in": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "last_point.x#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "array%bytes_index%4#1",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "467": {
      "op": "frame_bury 0"
    },
    "469": {
      "retsub": true,
      "op": "retsub"
    },
    "470": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "473": {
      "op": "bytec_2 // \"\""
    },
    "474": {
      "op": "dupn 4"
    },
    "476": {
      "op": "frame_dig -1"
    },
    "478": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "479": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "480": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "481": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "483": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "485": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "486": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "489": {
      "op": "frame_dig 6"
    },
    "491": {
      "op": "dup"
    },
    "492": {
      "op": "pushint 2 // 2"
    },
    "494": {
      "op": "%"
    },
    "495": {
      "op": "!"
    },
    "496": {
      "op": "itob"
    },
    "497": {
      "op": "extract 7 1"
    },
    "500": {
      "op": "frame_dig 4"
    },
    "502": {
      "op": "swap"
    },
    "503": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "504": {
      "op": "frame_bury 4"
    },
    "506": {
      "op": "intc_0 // 1"
    },
    "507": {
      "op": "+"
    },
    "508": {
      "op": "frame_bury 6"
    },
    "510": {
      "op": "b test_bool_array_for_header@1"
    },
    "513": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "515": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "516": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "1"
      ]
    },
    "517": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "518": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "519": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "521": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "523": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "524": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "525": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "526": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "528": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "529": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "531": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "533": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "535": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "536": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "539": {
      "op": "frame_dig 4"
    },
    "541": {
      "op": "frame_dig 3"
    },
    "543": {
      "op": "getbyte"
    },
    "544": {
      "op": "frame_dig 1"
    },
    "546": {
      "op": "frame_bury 2"
    },
    "548": {
      "op": "bz test_bool_array_after_if_else@8"
    },
    "551": {
      "op": "frame_dig 1"
    },
    "553": {
      "op": "intc_0 // 1"
    },
    "554": {
      "op": "+"
    },
    "555": {
      "op": "frame_bury 2"
    },
    "557": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "559": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "561": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "563": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "564": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "565": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "567": {
      "op": "b test_bool_array_for_header@5"
    },
    "570": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "572": {
      "op": "frame_bury 0"
    },
    "574": {
      "retsub": true,
      "op": "retsub"
    },
    "575": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "578": {
      "op": "bytec_2 // \"\""
    },
    "579": {
      "op": "dupn 4"
    },
    "581": {
      "op": "frame_dig -1"
    },
    "583": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "584": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "585": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "586": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "588": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "590": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "591": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "594": {
      "op": "frame_dig 6"
    },
    "596": {
      "op": "dup"
    },
    "597": {
      "op": "itob"
    },
    "598": {
      "op": "frame_dig 4"
    },
    "600": {
      "op": "swap"
    },
    "601": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "602": {
      "op": "frame_bury 4"
    },
    "604": {
      "op": "intc_0 // 1"
    },
    "605": {
      "op": "+"
    },
    "606": {
      "op": "frame_bury 6"
    },
    "608": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "611": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "613": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "614": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "615": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "616": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "617": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "619": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "621": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "622": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "623": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "624": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "626": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "627": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "629": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "631": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "633": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "634": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "637": {
      "op": "frame_dig 4"
    },
    "639": {
      "op": "frame_dig 3"
    },
    "641": {
      "op": "intc_2 // 8"
    },
    "642": {
      "op": "*"
    },
    "643": {
      "op": "intc_2 // 8"
    },
    "644": {
      "op": "extract3"
    },
    "645": {
      "op": "pushbytes 0x0000000000000000"
    },
    "655": {
      "op": "!="
    },
    "656": {
      "op": "frame_dig 1"
    },
    "658": {
      "op": "frame_bury 2"
    },
    "660": {
      "op": "bz test_arc4_conversion_after_if_else@8"
    },
    "663": {
      "op": "frame_dig 1"
    },
    "665": {
      "op": "intc_0 // 1"
    },
    "666": {
      "op": "+"
    },
    "667": {
      "op": "frame_bury 2"
    },
    "669": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "671": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "673": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "675": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "676": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "677": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "679": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "682": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0"
      ]
    },
    "684": {
      "op": "dup",
      "defined_out": [
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ]
    },
    "685": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0"
      ]
    },
    "686": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "687": {
      "op": "/",
      "defined_out": [
        "len_%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_%0#0"
      ]
    },
    "688": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "as_bytes%0#0"
      ]
    },
    "689": {
      "op": "extract 6 2",
      "defined_out": [
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_16_bit%0#0"
      ]
    },
    "692": {
      "op": "swap",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#1"
      ]
    },
    "694": {
      "op": "frame_bury 0"
    },
    "696": {
      "retsub": true,
      "op": "retsub"
    },
    "697": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "700": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0 (copy)"
      ]
    },
    "702": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "705": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0"
      ]
    },
    "706": {
      "op": "intc_1 // 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0",
        "total#0"
      ]
    },
    "707": {
      "op": "swap",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "708": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1"
      ]
    },
    "709": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "710": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1"
      ]
    },
    "711": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "712": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "714": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array%array_len%0#1"
      ]
    },
    "716": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "717": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "720": {
      "op": "frame_dig 0"
    },
    "722": {
      "op": "frame_dig 3"
    },
    "724": {
      "op": "dup"
    },
    "725": {
      "op": "cover 2"
    },
    "727": {
      "op": "intc_2 // 8"
    },
    "728": {
      "op": "*"
    },
    "729": {
      "op": "extract_uint64"
    },
    "730": {
      "op": "frame_dig 1"
    },
    "732": {
      "op": "+"
    },
    "733": {
      "op": "frame_bury 1"
    },
    "735": {
      "op": "intc_0 // 1"
    },
    "736": {
      "op": "+"
    },
    "737": {
      "op": "frame_bury 3"
    },
    "739": {
      "op": "b sum_array_for_header@1"
    },
    "742": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "744": {
      "op": "frame_bury 0"
    },
    "746": {
      "retsub": true,
      "op": "retsub"
    },
    "747": {
      "subroutine": "test_cases.array.fixed_size.FixedSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "748": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "749": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "750": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "751": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "752": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "753": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"count\""
      ]
    },
    "754": {
      "op": "swap",
      "stack_out": [
        "\"count\"",
        "new_state_value%0#0"
      ]
    },
    "755": {
      "op": "app_global_put",
      "stack_out": []
    },
    "756": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "758": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "759": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"count\""
      ]
    },
    "760": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "761": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "762": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "764": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "0"
      ]
    },
    "765": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "766": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "767": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0"
      ]
    },
    "768": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "769": {
      "op": "+",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "770": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "771": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "772": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "0",
        "\"count\""
      ]
    },
    "773": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "774": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0"
      ]
    },
    "775": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "776": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "0",
        "\"count\""
      ]
    },
    "777": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "778": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "779": {
      "op": "*",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "to_encode%1#0"
      ]
    },
    "780": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "781": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "782": {
      "retsub": true,
      "op": "retsub"
    }
  }
}