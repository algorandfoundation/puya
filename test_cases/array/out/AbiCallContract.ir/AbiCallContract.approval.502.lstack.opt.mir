// Op                                                                                             Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // array/unused_opt_allowed.py:12
        // class AbiCallContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                            tmp%0#1
        bz main___algopy_default_create@5 ; b main_abi_routing@2

    main_abi_routing@2:
        // array/unused_opt_allowed.py:12
        // class AbiCallContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%2#0
        method test_implicit_conversion_abi_call(uint64[],uint64)void                             tmp%2#0,Method(test_implicit_conversion_abi_call(uint64[],uint64)void)
        l-load tmp%2#0 1                                                                          Method(test_implicit_conversion_abi_call(uint64[],uint64)void),tmp%2#0
        match main_test_implicit_conversion_abi_call_route@3 ; b main_switch_case_next@4

    main_test_implicit_conversion_abi_call_route@3:
        // array/unused_opt_allowed.py:13
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%3#0
        !                                                                                         tmp%4#0
        txn ApplicationID                                                                         tmp%4#0,tmp%5#0
        l-load tmp%4#0 1                                                                          tmp%5#0,tmp%4#0
        l-load tmp%5#0 1                                                                          tmp%4#0,tmp%5#0
        &&                                                                                        tmp%7#0
        assert // OnCompletion must be NoOp && can only call when not creating
        callsub test_implicit_conversion_abi_call
        b main_switch_case_next@4

    main_switch_case_next@4:
        // array/unused_opt_allowed.py:12
        // class AbiCallContract(arc4.ARC4Contract):
        err

    main___algopy_default_create@5:
        txn OnCompletion                                                                          tmp%8#0
        !                                                                                         tmp%9#0
        txn ApplicationID                                                                         tmp%9#0,tmp%10#0
        !                                                                                         tmp%9#0,tmp%11#0
        l-load tmp%9#0 1                                                                          tmp%11#0,tmp%9#0
        l-load tmp%11#0 1                                                                         tmp%9#0,tmp%11#0
        &&                                                                                        tmp%12#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                                     1
        return


// test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call[routing]() -> void:
subroutine test_implicit_conversion_abi_call:
    test_implicit_conversion_abi_call_block@0:
        // array/unused_opt_allowed.py:13
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    arr#0
        txna ApplicationArgs 2                                                                    arr#0,reinterpret_Encoded(uint64)%0#0
        btoi                                                                                      arr#0,app#0
        l-store-copy app#0 0                                                                      arr#0,app#0,app#0 (copy)
        v-store app#0                                                                             arr#0,app#0
        // array/unused_opt_allowed.py:18
        // arc4.abi_call("dont_call(uint64[])uint64", arr, app_id=app)
        itxn_begin                                                                                arr#0,app#0
        l-load app#0 0                                                                            arr#0,app#0
        itxn_field ApplicationID                                                                  arr#0
        method dont_call(uint64[])uint64                                                          arr#0,Method(dont_call(uint64[])uint64)
        itxn_field ApplicationArgs                                                                arr#0
        l-load-copy arr#0 0                                                                       arr#0,arr#0 (copy)
        itxn_field ApplicationArgs                                                                arr#0
        int appl                                                                                  arr#0,appl
        itxn_field TypeEnum                                                                       arr#0
        int 0                                                                                     arr#0,0
        itxn_field Fee                                                                            arr#0
        itxn_submit                                                                               arr#0
        // array/unused_opt_allowed.py:21
        // nested_arr = nested_arr.append(arr)
        byte 0x0002                                                                               arr#0,0x0002
        l-load arr#0 1                                                                            0x0002,arr#0
        concat                                                                                    new_head_and_tail#0
        v-store new_head_and_tail#0
        byte 0x                                                                                   0x
        v-store new_head#0
        int 0                                                                                     value_internal%0#0
        v-store head_offset#0
        b test_implicit_conversion_abi_call_for_header@2

    test_implicit_conversion_abi_call_for_header@2:
        v-load head_offset#0                                                                      head_offset#0
        int 0                                                                                     head_offset#0,0
        <                                                                                         continue_looping%0#0
        bz test_implicit_conversion_abi_call_after_for@4 ; b test_implicit_conversion_abi_call_for_body@3 

    test_implicit_conversion_abi_call_for_body@3:
        // array/unused_opt_allowed.py:21
        // nested_arr = nested_arr.append(arr)
        byte 0x                                                                                   0x
        v-load head_offset#0                                                                      0x,head_offset#0
        l-store-copy head_offset#0 1                                                              head_offset#0,0x,head_offset#0 (copy)
        extract_uint16                                                                            head_offset#0,item_offset#0
        int 2                                                                                     head_offset#0,item_offset#0,2
        l-load item_offset#0 1                                                                    head_offset#0,2,item_offset#0
        +                                                                                         head_offset#0,tmp%3#0
        itob                                                                                      head_offset#0,tmp%4#0
        extract 6 2                                                                               head_offset#0,tmp%5#0
        v-load new_head#0                                                                         head_offset#0,tmp%5#0,new_head#0
        l-load tmp%5#0 1                                                                          head_offset#0,new_head#0,tmp%5#0
        concat                                                                                    head_offset#0,new_head#0
        v-store new_head#0                                                                        head_offset#0
        l-load head_offset#0 0                                                                    head_offset#0
        int 2                                                                                     head_offset#0,2
        +                                                                                         value_internal%0#0
        v-store head_offset#0
        b test_implicit_conversion_abi_call_for_header@2

    test_implicit_conversion_abi_call_after_for@4:
        int 0                                                                                     value_internal%1#0
        v-store head_offset#0
        b test_implicit_conversion_abi_call_for_header@5

    test_implicit_conversion_abi_call_for_header@5:
        v-load head_offset#0                                                                      head_offset#0
        int 2                                                                                     head_offset#0,2
        <                                                                                         continue_looping%1#0
        bz test_implicit_conversion_abi_call_after_for@7 ; b test_implicit_conversion_abi_call_for_body@6 

    test_implicit_conversion_abi_call_for_body@6:
        v-load new_head_and_tail#0                                                                new_head_and_tail#0
        v-load head_offset#0                                                                      new_head_and_tail#0,head_offset#0
        l-store-copy head_offset#0 1                                                              head_offset#0,new_head_and_tail#0,head_offset#0 (copy)
        extract_uint16                                                                            head_offset#0,item_offset#0
        itob                                                                                      head_offset#0,tmp%11#0
        extract 6 2                                                                               head_offset#0,tmp%12#0
        v-load new_head#0                                                                         head_offset#0,tmp%12#0,new_head#0
        l-load tmp%12#0 1                                                                         head_offset#0,new_head#0,tmp%12#0
        concat                                                                                    head_offset#0,new_head#0
        v-store new_head#0                                                                        head_offset#0
        l-load head_offset#0 0                                                                    head_offset#0
        int 2                                                                                     head_offset#0,2
        +                                                                                         value_internal%1#0
        v-store head_offset#0
        b test_implicit_conversion_abi_call_for_header@5

    test_implicit_conversion_abi_call_after_for@7:
        byte 0x0001                                                                               0x0001
        v-load new_head#0                                                                         0x0001,new_head#0
        concat                                                                                    tmp%17#0
        v-load new_head_and_tail#0                                                                tmp%17#0,new_head_and_tail#0
        extract 2 0                                                                               tmp%17#0,tmp%23#0
        l-load tmp%17#0 1                                                                         tmp%23#0,tmp%17#0
        l-load tmp%23#0 1                                                                         tmp%17#0,tmp%23#0
        concat                                                                                    nested_arr#1
        // array/unused_opt_allowed.py:22
        // arc4.abi_call("dont_call(uint64[][])uint64", nested_arr, app_id=app)
        itxn_begin                                                                                nested_arr#1
        v-load app#0                                                                              nested_arr#1,app#0
        l-store-copy app#0 1                                                                      app#0,nested_arr#1,app#0 (copy)
        itxn_field ApplicationID                                                                  app#0,nested_arr#1
        method dont_call(uint64[][])uint64                                                        app#0,nested_arr#1,Method(dont_call(uint64[][])uint64)
        itxn_field ApplicationArgs                                                                app#0,nested_arr#1
        l-load nested_arr#1 0                                                                     app#0,nested_arr#1
        itxn_field ApplicationArgs                                                                app#0
        int appl                                                                                  app#0,appl
        itxn_field TypeEnum                                                                       app#0
        int 0                                                                                     app#0,0
        itxn_field Fee                                                                            app#0
        itxn_submit                                                                               app#0
        // array/unused_opt_allowed.py:26
        // arc4.abi_call("dont_call((uint64[],uint64)[])uint64", indirect_nested_arr, app_id=app)
        itxn_begin                                                                                app#0
        l-load app#0 0                                                                            app#0
        itxn_field ApplicationID
        method dont_call((uint64[],uint64)[])uint64                                               Method(dont_call((uint64[],uint64)[])uint64)
        itxn_field ApplicationArgs
        // array/unused_opt_allowed.py:24
        // indirect_nested_arr = ImmutableArray[MyTuple]()
        byte 0x0000                                                                               0x0000
        itxn_field ApplicationArgs
        // array/unused_opt_allowed.py:26
        // arc4.abi_call("dont_call((uint64[],uint64)[])uint64", indirect_nested_arr, app_id=app)
        int appl                                                                                  appl
        itxn_field TypeEnum
        int 0                                                                                     0
        itxn_field Fee
        itxn_submit
        // array/unused_opt_allowed.py:13
        // @arc4.abimethod()
        int 1                                                                                     1
        return


