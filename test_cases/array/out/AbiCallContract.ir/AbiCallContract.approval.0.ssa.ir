main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__()
        return tmp%0#0

subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
    block@0: // L193
        let new_head#0: bytes = 0x
        let item_offset_adjustment#0: uint64 = (* new_items_count#0 2u)
        let tmp%0#0: uint64 = (* array_items_count#0 2u)
        (assert 2u) // Step cannot be zero
        let head_offset#0: uint64 = 0u
        goto block@1
    block@1: // for_header_L203
        let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3)
        let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3)
        let continue_looping%0#0: bool = (< head_offset#1 tmp%0#0)
        goto continue_looping%0#0 ? block@2 : block@4
    block@2: // for_body_L204
        let item_offset#0: uint64 = (extract_uint16 array_head_and_tail#0 head_offset#1)
        let tmp%1#0: uint64 = (+ item_offset_adjustment#0 item_offset#0)
        let tmp%2#0: bytes = (itob tmp%1#0)
        let tmp%3#0: bytes = ((extract 6 2) tmp%2#0)
        let new_head#2: bytes = (concat new_head#1 tmp%3#0)
        goto block@3
    block@3: // for_footer_L203
        let head_offset#2: uint64 = (+ head_offset#1 2u)
        goto block@1
    block@4: // after_for_L203
        let item_offset_adjustment#2: uint64 = (len array_head_and_tail#0)
        let tmp%4#0: uint64 = (* new_items_count#0 2u)
        (assert 2u) // Step cannot be zero
        let head_offset#3: uint64 = 0u
        goto block@5
    block@5: // for_header_L208
        let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7)
        let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7)
        let continue_looping%1#0: bool = (< head_offset#4 tmp%4#0)
        goto continue_looping%1#0 ? block@6 : block@8
    block@6: // for_body_L209
        let item_offset#1: uint64 = (extract_uint16 new_head_and_tail#0 head_offset#4)
        let tmp%5#0: uint64 = (+ item_offset_adjustment#2 item_offset#1)
        let tmp%6#0: bytes = (itob tmp%5#0)
        let tmp%7#0: bytes = ((extract 6 2) tmp%6#0)
        let new_head#4: bytes = (concat new_head#3 tmp%7#0)
        goto block@7
    block@7: // for_footer_L208
        let head_offset#5: uint64 = (+ head_offset#4 2u)
        goto block@5
    block@8: // after_for_L208
        let tmp%8#0: uint64 = (+ array_items_count#0 new_items_count#0)
        let tmp%9#0: bytes = (itob tmp%8#0)
        let tmp%10#0: bytes = ((extract 6 2) tmp%9#0)
        let tmp%11#0: bytes = (concat tmp%10#0 new_head#3)
        let tmp%12#0: uint64 = (* array_items_count#0 2u)
        let tmp%13#0: uint64 = (len array_head_and_tail#0)
        let tmp%14#0: bytes = (substring3 array_head_and_tail#0 tmp%12#0 tmp%13#0)
        let tmp%15#0: bytes = (concat tmp%11#0 tmp%14#0)
        let tmp%16#0: uint64 = (* new_items_count#0 2u)
        let tmp%17#0: uint64 = (len new_head_and_tail#0)
        let tmp%18#0: bytes = (substring3 new_head_and_tail#0 tmp%16#0 tmp%17#0)
        let tmp%19#0: bytes = (concat tmp%15#0 tmp%18#0)
        return tmp%19#0

subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__puya_arc4_router__() -> bool:
    block@0: // L12
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@5
    block@1: // abi_routing_L12
        let tmp%2#0: bytes = (txna ApplicationArgs 0)
        switch tmp%2#0 {method "test_implicit_conversion_abi_call(uint64[],application)void" => block@2, * => block@3}
    block@2: // test_implicit_conversion_abi_call_route_L13
        let tmp%3#0: uint64 = (txn OnCompletion)
        let tmp%4#0: bool = (== tmp%3#0 NoOp)
        (assert tmp%4#0) // OnCompletion is not NoOp
        let tmp%5#0: uint64 = (txn ApplicationID)
        let tmp%6#0: bool = (!= tmp%5#0 0u)
        (assert tmp%6#0) // can only call when not creating
        let reinterpret_encoded_uint64[]%0#0: encoded_uint64[] = (txna ApplicationArgs 1)
        let reinterpret_bytes[1]%0#0: bytes[1] = (txna ApplicationArgs 2)
        let tmp%7#0: uint64 = (btoi reinterpret_bytes[1]%0#0)
        let tmp%8#0: uint64 = ((txnas Applications) tmp%7#0)
        test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call(reinterpret_encoded_uint64[]%0#0, tmp%8#0)
        return 1u
    block@3: // switch_case_default_L12
        goto block@4
    block@4: // switch_case_next_L12
        goto block@9
    block@5: // bare_routing_L12
        let tmp%9#0: uint64 = (txn OnCompletion)
        switch tmp%9#0 {0u => block@6, * => block@7}
    block@6: // __algopy_default_create_L1
        let tmp%10#0: uint64 = (txn ApplicationID)
        let tmp%11#0: bool = (== tmp%10#0 0u)
        (assert tmp%11#0) // can only call when creating
        test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create()
        return 1u
    block@7: // switch_case_default_L12
        goto block@8
    block@8: // switch_case_next_L12
        goto block@9
    block@9: // after_if_else_L12
        return 0u

subroutine test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call(arr: encoded_uint64[], app: uint64) -> void:
    block@0: // L13
        itxn_begin
        let inner_txn_params%0#0: itxn_field_set = itxn_field_set(0)
        let inner_txn_params%0%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%0%%Fee_length#0: uint64 = 1u
        let inner_txn_params%0%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%0%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%0%%param_ApplicationArgs_idx_0#0: bytes[4] = method "dont_call(uint64[])uint64"
        let inner_txn_params%0%%param_ApplicationArgs_idx_1#0: encoded_uint64[] = arr#0
        let inner_txn_params%0%%ApplicationArgs_length#0: uint64 = 2u
        let inner_txn_params%0%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%0%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%0%%Sender_length#0: uint64 = 0u
        let inner_txn_params%0%%Note_length#0: uint64 = 0u
        let inner_txn_params%0%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%0%%Amount_length#0: uint64 = 0u
        let inner_txn_params%0%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%0%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%0%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%0%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%0%%Type_length#0: uint64 = 0u
        let inner_txn_params%0%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%0%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%0%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%0%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%0%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%0%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%0%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%0%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%0%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%0%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%0%%Assets_length#0: uint64 = 0u
        let inner_txn_params%0%%Applications_length#0: uint64 = 0u
        let inner_txn_params%0%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%0%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%0%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%0%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) inner_txn_params%0%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%0%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L18
        itxn_submit
        let array_data%0#0: bytes = (concat 0x0000 0x)
        let nested_arr#0: encoded_uint64[][] = array_data%0#0
        let as_bytes%0#0: bytes[8] = (itob 2u)
        let next_item_head%0#0: bytes = ((extract 6 2) as_bytes%0#0)
        let result%0#0: bytes = (concat 0x next_item_head%0#0)
        let next_item_len%0#0: uint64 = (len arr#0)
        let tail_offset%0#0: uint64 = (+ 2u next_item_len%0#0)
        let result%1#0: bytes = (concat result%0#0 arr#0)
        let l_count%0#0: uint64 = (extract_uint16 nested_arr#0 0u)
        let l_head_and_tail%0#0: bytes = ((extract 2 0) nested_arr#0)
        let r_count%0#0: uint64 = 1u
        let r_head_and_tail%0#0: bytes = result%1#0
        let concat_result%0#0: bytes = _puya_lib.arc4.dynamic_array_concat_dynamic_element(l_count%0#0, l_head_and_tail%0#0, r_count%0#0, r_head_and_tail%0#0)
        let nested_arr#1: encoded_uint64[][] = concat_result%0#0
        itxn_begin
        let inner_txn_params%1#0: itxn_field_set = itxn_field_set(1)
        let inner_txn_params%1%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%1%%Fee_length#0: uint64 = 1u
        let inner_txn_params%1%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%1%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%1%%param_ApplicationArgs_idx_0#0: bytes[4] = method "dont_call(uint64[][])uint64"
        let inner_txn_params%1%%param_ApplicationArgs_idx_1#0: encoded_uint64[][] = nested_arr#1
        let inner_txn_params%1%%ApplicationArgs_length#0: uint64 = 2u
        let inner_txn_params%1%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%1%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%1%%Sender_length#0: uint64 = 0u
        let inner_txn_params%1%%Note_length#0: uint64 = 0u
        let inner_txn_params%1%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%1%%Amount_length#0: uint64 = 0u
        let inner_txn_params%1%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%1%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%1%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%1%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%1%%Type_length#0: uint64 = 0u
        let inner_txn_params%1%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%1%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%1%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%1%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%1%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%1%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%1%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%1%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%1%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%1%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%1%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%1%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%1%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%1%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%1%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%1%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%1%%Assets_length#0: uint64 = 0u
        let inner_txn_params%1%%Applications_length#0: uint64 = 0u
        let inner_txn_params%1%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%1%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%1%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%1%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) inner_txn_params%1%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%1%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L22
        itxn_submit
        let array_data%1#0: bytes = (concat 0x0000 0x)
        let indirect_nested_arr#0: (encoded_uint64[],encoded_uint64)[] = array_data%1#0
        let tmp%0#0: uint64 = (extract_uint16 arr#0 0u)
        let val_as_bytes%0#0: bytes[8] = (itob tmp%0#0)
        let current_tail_offset%0#0: uint64 = 10u
        let encoded_tuple_buffer%0#0: bytes[0] = 0x
        let as_bytes%1#0: bytes[8] = (itob current_tail_offset%0#0)
        let offset_as_uint16%0#0: bytes = ((extract 6 2) as_bytes%1#0)
        let encoded_tuple_buffer%1#0: bytes = (concat encoded_tuple_buffer%0#0 offset_as_uint16%0#0)
        let data_length%0#0: uint64 = (len arr#0)
        let current_tail_offset%1#0: uint64 = (+ current_tail_offset%0#0 data_length%0#0)
        let encoded_tuple_buffer%2#0: bytes = (concat encoded_tuple_buffer%1#0 val_as_bytes%0#0)
        let encoded_tuple_buffer%3#0: bytes = (concat encoded_tuple_buffer%2#0 arr#0)
        let encoded_tuple%0#0: bytes = encoded_tuple_buffer%3#0
        let as_bytes%2#0: bytes[8] = (itob 2u)
        let next_item_head%1#0: bytes = ((extract 6 2) as_bytes%2#0)
        let result%2#0: bytes = (concat 0x next_item_head%1#0)
        let next_item_len%1#0: uint64 = (len encoded_tuple%0#0)
        let tail_offset%1#0: uint64 = (+ 2u next_item_len%1#0)
        let result%3#0: bytes = (concat result%2#0 encoded_tuple%0#0)
        let l_count%1#0: uint64 = (extract_uint16 indirect_nested_arr#0 0u)
        let l_head_and_tail%1#0: bytes = ((extract 2 0) indirect_nested_arr#0)
        let r_count%1#0: uint64 = 1u
        let r_head_and_tail%1#0: bytes = result%3#0
        let concat_result%1#0: bytes = _puya_lib.arc4.dynamic_array_concat_dynamic_element(l_count%1#0, l_head_and_tail%1#0, r_count%1#0, r_head_and_tail%1#0)
        itxn_begin
        let inner_txn_params%2#0: itxn_field_set = itxn_field_set(2)
        let inner_txn_params%2%%param_Fee_idx_0#0: uint64 = 0u
        let inner_txn_params%2%%Fee_length#0: uint64 = 1u
        let inner_txn_params%2%%param_TypeEnum_idx_0#0: uint64 = appl
        let inner_txn_params%2%%TypeEnum_length#0: uint64 = 1u
        let inner_txn_params%2%%param_ApplicationArgs_idx_0#0: bytes[4] = method "dont_call((uint64[],uint64)[])uint64"
        let inner_txn_params%2%%param_ApplicationArgs_idx_1#0: (encoded_uint64[],encoded_uint64)[] = indirect_nested_arr#0
        let inner_txn_params%2%%ApplicationArgs_length#0: uint64 = 2u
        let inner_txn_params%2%%param_ApplicationID_idx_0#0: uint64 = app#0
        let inner_txn_params%2%%ApplicationID_length#0: uint64 = 1u
        let inner_txn_params%2%%Sender_length#0: uint64 = 0u
        let inner_txn_params%2%%Note_length#0: uint64 = 0u
        let inner_txn_params%2%%Receiver_length#0: uint64 = 0u
        let inner_txn_params%2%%Amount_length#0: uint64 = 0u
        let inner_txn_params%2%%CloseRemainderTo_length#0: uint64 = 0u
        let inner_txn_params%2%%VotePK_length#0: uint64 = 0u
        let inner_txn_params%2%%SelectionPK_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteFirst_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteLast_length#0: uint64 = 0u
        let inner_txn_params%2%%VoteKeyDilution_length#0: uint64 = 0u
        let inner_txn_params%2%%Type_length#0: uint64 = 0u
        let inner_txn_params%2%%XferAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetAmount_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetSender_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetReceiver_length#0: uint64 = 0u
        let inner_txn_params%2%%AssetCloseTo_length#0: uint64 = 0u
        let inner_txn_params%2%%OnCompletion_length#0: uint64 = 0u
        let inner_txn_params%2%%ApprovalProgram_length#0: uint64 = 0u
        let inner_txn_params%2%%ClearStateProgram_length#0: uint64 = 0u
        let inner_txn_params%2%%RekeyTo_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetTotal_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetDecimals_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetUnitName_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetName_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetURL_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetManager_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetReserve_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetFreeze_length#0: uint64 = 0u
        let inner_txn_params%2%%ConfigAssetClawback_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAsset_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAssetAccount_length#0: uint64 = 0u
        let inner_txn_params%2%%FreezeAssetFrozen_length#0: uint64 = 0u
        let inner_txn_params%2%%GlobalNumUint_length#0: uint64 = 0u
        let inner_txn_params%2%%GlobalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%2%%LocalNumUint_length#0: uint64 = 0u
        let inner_txn_params%2%%LocalNumByteSlice_length#0: uint64 = 0u
        let inner_txn_params%2%%ExtraProgramPages_length#0: uint64 = 0u
        let inner_txn_params%2%%Nonparticipation_length#0: uint64 = 0u
        let inner_txn_params%2%%StateProofPK_length#0: uint64 = 0u
        let inner_txn_params%2%%Accounts_length#0: uint64 = 0u
        let inner_txn_params%2%%Assets_length#0: uint64 = 0u
        let inner_txn_params%2%%Applications_length#0: uint64 = 0u
        let inner_txn_params%2%%ApprovalProgramPages_length#0: uint64 = 0u
        let inner_txn_params%2%%ClearStateProgramPages_length#0: uint64 = 0u
        ((itxn_field ApplicationID) inner_txn_params%2%%param_ApplicationID_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_0#0)
        ((itxn_field ApplicationArgs) inner_txn_params%2%%param_ApplicationArgs_idx_1#0)
        ((itxn_field TypeEnum) inner_txn_params%2%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) inner_txn_params%2%%param_Fee_idx_0#0)
        goto block@3
    block@3: // next_txn_L26
        itxn_submit
        return 

subroutine test_cases.array.unused_opt_allowed.AbiCallContract.__algopy_default_create() -> void:
    block@0: // L1
        return 