// Op                                                                                         Stack (out)
// test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID                                                                         tmp%0#0
    bz main_call___init__@1 ; b main_after_if_else@2

main_call___init__@1:
    // array/static_size.py:26
    // self.count = UInt64(0)
    byte "count"                                                                              "count"
    int 0                                                                                     "count",0
    app_global_put
    b main_after_if_else@2

main_after_if_else@2:
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txn NumAppArgs                                                                            tmp%0#2
    bz main_bare_routing@9 ; b main_abi_routing@4

main_abi_routing@4:
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txna ApplicationArgs 0                                                                    tmp%2#0
    method test_array(uint64,uint64,uint64,uint64)uint64                                      tmp%2#0,Method(test_array(uint64,uint64,uint64,uint64)uint64)
    method test_bool_array(uint64)uint64                                                      tmp%2#0,Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_bool_array(uint64)uint64)
    method test_arc4_conversion(uint64)uint64[]                                               tmp%2#0,Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[])
    method sum_array(uint64[])uint64                                                          tmp%2#0,Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[]),Method(sum_array(uint64[])uint64)
    l-load tmp%2#0 4                                                                          Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[]),Method(sum_array(uint64[])uint64),tmp%2#0
    match main_test_array_route@5 main_test_bool_array_route@6 main_test_arc4_conversion_route@7 main_sum_array_route@8 ; b main_after_if_else@11 

main_test_array_route@5:
    // array/static_size.py:28
    // @arc4.abimethod()
    txn OnCompletion                                                                          tmp%3#0
    !                                                                                         tmp%4#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%5#0
    assert // can only call when not creating
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%0#0
    txna ApplicationArgs 2                                                                    reinterpret_bytes[8]%0#0,reinterpret_bytes[8]%1#0
    btoi                                                                                      reinterpret_bytes[8]%0#0,tmp%7#0
    txna ApplicationArgs 3                                                                    reinterpret_bytes[8]%0#0,tmp%7#0,reinterpret_bytes[8]%2#0
    txna ApplicationArgs 4                                                                    reinterpret_bytes[8]%0#0,tmp%7#0,reinterpret_bytes[8]%2#0,reinterpret_bytes[8]%3#0
    btoi                                                                                      reinterpret_bytes[8]%0#0,tmp%7#0,reinterpret_bytes[8]%2#0,tmp%8#0
    // array/static_size.py:28
    // @arc4.abimethod()
    l-load reinterpret_bytes[8]%0#0 3                                                         tmp%7#0,reinterpret_bytes[8]%2#0,tmp%8#0,reinterpret_bytes[8]%0#0
    l-load tmp%7#0 3                                                                          reinterpret_bytes[8]%2#0,tmp%8#0,reinterpret_bytes[8]%0#0,tmp%7#0
    l-load reinterpret_bytes[8]%2#0 3                                                         tmp%8#0,reinterpret_bytes[8]%0#0,tmp%7#0,reinterpret_bytes[8]%2#0
    l-load tmp%8#0 3                                                                          reinterpret_bytes[8]%0#0,tmp%7#0,reinterpret_bytes[8]%2#0,tmp%8#0
    callsub test_array                                                                        to_encode%0#0
    itob                                                                                      val_as_bytes%0#0
    byte 0x151f7c75                                                                           val_as_bytes%0#0,0x151f7c75
    l-load val_as_bytes%0#0 1                                                                 0x151f7c75,val_as_bytes%0#0
    concat                                                                                    tmp%9#0
    log
    int 1                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_test_bool_array_route@6:
    // array/static_size.py:44
    // @arc4.abimethod()
    txn OnCompletion                                                                          tmp%10#0
    !                                                                                         tmp%11#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%12#0
    assert // can only call when not creating
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%4#0
    btoi                                                                                      tmp%14#0
    // array/static_size.py:44
    // @arc4.abimethod()
    callsub test_bool_array                                                                   to_encode%1#0
    itob                                                                                      val_as_bytes%1#0
    byte 0x151f7c75                                                                           val_as_bytes%1#0,0x151f7c75
    l-load val_as_bytes%1#0 1                                                                 0x151f7c75,val_as_bytes%1#0
    concat                                                                                    tmp%15#0
    log
    int 1                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_test_arc4_conversion_route@7:
    // array/static_size.py:58
    // @arc4.abimethod()
    txn OnCompletion                                                                          tmp%16#0
    !                                                                                         tmp%17#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%18#0
    assert // can only call when not creating
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                    reinterpret_bytes[8]%5#0
    btoi                                                                                      tmp%20#0
    // array/static_size.py:58
    // @arc4.abimethod()
    callsub test_arc4_conversion                                                              tmp%21#0
    byte 0x151f7c75                                                                           tmp%21#0,0x151f7c75
    l-load tmp%21#0 1                                                                         0x151f7c75,tmp%21#0
    concat                                                                                    tmp%22#0
    log
    int 1                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_sum_array_route@8:
    // array/static_size.py:76
    // @arc4.abimethod()
    txn OnCompletion                                                                          tmp%23#0
    !                                                                                         tmp%24#0
    assert // OnCompletion is not NoOp
    txn ApplicationID                                                                         tmp%25#0
    assert // can only call when not creating
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txna ApplicationArgs 1                                                                    tmp%27#0
    // array/static_size.py:76
    // @arc4.abimethod()
    callsub sum_array                                                                         to_encode%2#0
    itob                                                                                      val_as_bytes%2#0
    byte 0x151f7c75                                                                           val_as_bytes%2#0,0x151f7c75
    l-load val_as_bytes%2#0 1                                                                 0x151f7c75,val_as_bytes%2#0
    concat                                                                                    tmp%28#0
    log
    int 1                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_bare_routing@9:
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    txn OnCompletion                                                                          tmp%29#0
    bz main___algopy_default_create@10 ; b main_after_if_else@11

main___algopy_default_create@10:
    txn ApplicationID                                                                         tmp%30#0
    !                                                                                         tmp%31#0
    assert // can only call when creating
    int 1                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_after_if_else@11:
    // array/static_size.py:24
    // class StaticSizeContract(arc4.ARC4Contract):
    int 0                                                                                     test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__%0#0
    x-store tmp%0#0                                                                           (ùïè) tmp%0#0 |
    b main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12 (ùïè) tmp%0#0 | 

main_after_inlined_test_cases.array.static_size.StaticSizeContract.__puya_arc4_router__@12:   (ùïè) tmp%0#0 |
    x-load tmp%0#0                                                                            tmp%0#0
    return


// test_cases.array.static_size.StaticSizeContract.test_array(x1: bytes, y1: uint64, x2: bytes, y2: uint64) -> uint64:
test_array:                                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:30
    // self.count = UInt64(0)
    byte "count"                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | "count"
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | "count",0
    app_global_put                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:32
    // Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
    callsub xtra                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%0#0,tmp%1#0,tmp%2#0,tmp%3#0
    // array/static_size.py:33
    // Point(x=x1, y=y1, other=self.xtra()),
    callsub xtra                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%0#0,tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0
    // array/static_size.py:34
    // Point(x=x2, y=y2, other=self.xtra()),
    callsub xtra                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%0#0,tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0
    // array/static_size.py:32
    // Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
    l-load tmp%0#0 11                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,tmp%0#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%sub_item%1#1
    byte 0x00000000000000000000000000000000                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%sub_item%1#1,0x00000000000000000000000000000000
    l-load array%sub_item%1#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,0x00000000000000000000000000000000,array%sub_item%1#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%1#0,tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%2#1
    l-load tmp%1#0 11                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%2#1,tmp%1#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%2#1,array%sub_item%2#1
    l-load array%encoded%2#1 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%sub_item%2#1,array%encoded%2#1
    l-load array%sub_item%2#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%2#1,array%sub_item%2#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#0,tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%3#1
    l-load tmp%2#0 10                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%3#1,tmp%2#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%3#0,tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%4#1
    l-load tmp%3#0 9                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%4#1,tmp%3#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1
    // array/static_size.py:33
    // Point(x=x1, y=y1, other=self.xtra()),
    p-load y1#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,y1#0 (copy)
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%sub_item%3#1
    p-load x1#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%sub_item%3#1,x1#0 (copy)
    l-load array%sub_item%3#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,x1#0 (copy),array%sub_item%3#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%7#1
    l-load tmp%4#0 9                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%7#1,tmp%4#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%7#1,array%sub_item%4#1
    l-load array%encoded%7#1 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%sub_item%4#1,array%encoded%7#1
    l-load array%sub_item%4#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%7#1,array%sub_item%4#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%8#1
    l-load tmp%5#0 8                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%8#1,tmp%5#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%8#1,array%sub_item%5#1
    l-load array%encoded%8#1 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%sub_item%5#1,array%encoded%8#1
    l-load array%sub_item%5#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%8#1,array%sub_item%5#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%9#1
    l-load tmp%6#0 7                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%9#1,tmp%6#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#0,tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%10#1
    l-load tmp%7#0 6                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%10#1,tmp%7#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%11#1
    // array/static_size.py:31-35
    // path = Array(
    //     Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
    //     Point(x=x1, y=y1, other=self.xtra()),
    //     Point(x=x2, y=y2, other=self.xtra()),
    // )
    l-load array%encoded%5#1 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%11#1,array%encoded%5#1
    l-load array%encoded%11#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%encoded%5#1,array%encoded%11#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1
    // array/static_size.py:34
    // Point(x=x2, y=y2, other=self.xtra()),
    p-load y2#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,y2#0 (copy)
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%sub_item%6#1
    p-load x2#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%sub_item%6#1,x2#0 (copy)
    l-load array%sub_item%6#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,x2#0 (copy),array%sub_item%6#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%13#1
    l-load tmp%8#0 5                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%13#1,tmp%8#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%13#1,array%sub_item%7#1
    l-load array%encoded%13#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%sub_item%7#1,array%encoded%13#1
    l-load array%sub_item%7#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%13#1,array%sub_item%7#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0,tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%14#1
    l-load tmp%9#0 4                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%14#1,tmp%9#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%14#1,array%sub_item%8#1
    l-load array%encoded%14#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#0,tmp%11#0,array%data%1#1,array%sub_item%8#1,array%encoded%14#1
    l-load array%sub_item%8#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%14#1,array%sub_item%8#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#0,tmp%11#0,array%data%1#1,array%encoded%15#1
    l-load tmp%10#0 3                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%11#0,array%data%1#1,array%encoded%15#1,tmp%10#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%11#0,array%data%1#1,array%encoded%16#1
    l-load tmp%11#0 2                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | array%data%1#1,array%encoded%16#1,tmp%11#0
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | array%data%1#1,array%encoded%17#1
    // array/static_size.py:31-35
    // path = Array(
    //     Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
    //     Point(x=x1, y=y1, other=self.xtra()),
    //     Point(x=x2, y=y2, other=self.xtra()),
    // )
    l-load array%data%1#1 1                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | array%encoded%17#1,array%data%1#1
    l-load array%encoded%17#1 1                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | array%data%1#1,array%encoded%17#1
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | array%data%2#1
    v-store slot%0                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:36
    // for i in urange(3):
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | 0
    v-store i#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_for_header@1                                                                 (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_for_header@1:                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:36
    // for i in urange(3):
    v-load i#0                                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0
    int 3                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,3
    <                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | continue_looping%0#0
    bz test_array_after_for@4 ; b test_array_for_body@2                                       (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_for_body@2:                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 |
    v-load slot%0                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%0#0
    // array/static_size.py:37
    // assert path[i].other.b == i + 1
    v-load i#0                                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%0#0,i#0
    l-store-copy i#0 1                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,slot_contents%0#0,i#0 (copy)
    int 80                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,slot_contents%0#0,i#0 (copy),80
    *                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,slot_contents%0#0,array%bytes_index%0#1
    l-load slot_contents%0#0 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%bytes_index%0#1,slot_contents%0#0
    l-load array%bytes_index%0#1 1                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,slot_contents%0#0,array%bytes_index%0#1
    int 80                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,slot_contents%0#0,array%bytes_index%0#1,80
    extract3                                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1
    l-load-copy array%value%0#1 0                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%value%0#1 (copy)
    int 24                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%value%0#1 (copy),24
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%sub_item%15#1
    l-load-copy i#0 2                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%sub_item%15#1,i#0 (copy)
    int 1                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%sub_item%15#1,i#0 (copy),1
    +                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,array%sub_item%15#1,i#2
    l-load array%sub_item%15#1 1                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,i#2,array%sub_item%15#1
    l-load-copy i#2 1                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,i#2,array%sub_item%15#1,i#2 (copy)
    ==                                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,i#2,tmp%19#0
    assert                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,array%value%0#1,i#2
    // array/static_size.py:38
    // assert path[i].other.d.foo == i + 2
    l-load array%value%0#1 1                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,i#2,array%value%0#1
    extract 64 16                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,i#2,array%sub_item%26#1
    l-load-copy array%sub_item%26#1 0                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,i#2,array%sub_item%26#1,array%sub_item%26#1 (copy)
    extract 0 8 // on error: Index access is out of bounds                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#0,i#2,array%sub_item%26#1,reinterpret_biguint%0#0
    l-load i#0 3                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,reinterpret_biguint%0#0,i#0
    int 2                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,reinterpret_biguint%0#0,i#0,2
    +                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,reinterpret_biguint%0#0,tmp%26#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,reinterpret_biguint%0#0,tmp%27#0
    l-load reinterpret_biguint%0#0 1                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,tmp%27#0,reinterpret_biguint%0#0
    l-load tmp%27#0 1                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,reinterpret_biguint%0#0,tmp%27#0
    b==                                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1,tmp%28#0
    assert                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1
    // array/static_size.py:39
    // assert path[i].other.d.bar == (i + 1) * (i + 1)
    l-load array%sub_item%26#1 0                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,array%sub_item%26#1
    extract 8 8 // on error: Index access is out of bounds                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0
    l-load-copy i#2 1                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0,i#2 (copy)
    l-load-copy i#2 2                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0,i#2 (copy),i#2 (copy)
    *                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0,tmp%37#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0,tmp%38#0
    l-load reinterpret_biguint%1#0 1                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,tmp%38#0,reinterpret_biguint%1#0
    l-load tmp%38#0 1                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,reinterpret_biguint%1#0,tmp%38#0
    b==                                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2,tmp%39#0
    assert                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2
    l-load i#2 0                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | i#2
    v-store i#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_for_header@1                                                                 (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_after_for@4:                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 |
    v-load slot%0                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0
    // array/static_size.py:41
    // Box(ImmutableArray[Point], key="a").value = path.freeze()
    l-load-copy slot_contents%3#0 0                                                           (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,slot_contents%3#0 (copy)
    len                                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,byte_len%0#0
    int 80                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,byte_len%0#0,80
    /                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_%0#0
    l-store-copy len_%0#0 0                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_%0#0,len_%0#0 (copy)
    v-store len_%0#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_%0#0
    l-load len_%0#0 0                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_%0#0
    itob                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,as_bytes%0#0
    extract 6 2                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_16_bit%0#0
    l-load-copy slot_contents%3#0 1                                                           (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,len_16_bit%0#0,slot_contents%3#0 (copy)
    concat                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,concat_result%0#0
    byte "a"                                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,concat_result%0#0,"a"
    box_del                                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,concat_result%0#0,{box_del}
    pop 1                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,concat_result%0#0
    byte "a"                                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,concat_result%0#0,"a"
    l-load concat_result%0#0 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0,"a",concat_result%0#0
    box_put                                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0
    // array/static_size.py:100
    // last_point = path[0]
    l-load slot_contents%3#0 0                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%3#0
    extract 0 80                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1
    l-store-copy array%value%3#1 0                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1,array%value%3#1 (copy)
    v-store array%value%3#1                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1
    l-load-copy array%value%3#1 0                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1,array%value%3#1 (copy)
    extract 0 8                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1,last_point.x#0
    v-store last_point.x#0                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1
    l-load array%value%3#1 0                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1
    int 8                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%3#1,8
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | last_point.y#0
    v-store last_point.y#0                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:101
    // length = UInt64()
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | 0
    v-store length#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:102
    // for point_idx in urange(1, path.length):
    int 1                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | 1
    v-store point_idx#0                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_for_header@6                                                                 (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_for_header@6:                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:102
    // for point_idx in urange(1, path.length):
    v-load point_idx#0                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | point_idx#0
    v-load len_%0#0                                                                           (ùï°) x1#0,y1#0,x2#0,y2#0 | point_idx#0,len_%0#0
    <                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | continue_looping%0#0
    bz test_array_after_for@14 ; b test_array_for_body@7                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_for_body@7:                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 |
    v-load slot%0                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1
    // array/static_size.py:103
    // point = path[point_idx]
    v-load point_idx#0                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1,point_idx#0
    int 80                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1,point_idx#0,80
    *                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1,array%bytes_index%4#1
    l-load slot_contents%2#1 1                                                                (ùï°) x1#0,y1#0,x2#0,y2#0 | array%bytes_index%4#1,slot_contents%2#1
    l-load array%bytes_index%4#1 1                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1,array%bytes_index%4#1
    int 80                                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | slot_contents%2#1,array%bytes_index%4#1,80
    extract3                                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%4#1
    l-store-copy array%value%4#1 0                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%4#1,array%value%4#1 (copy)
    x-store array%value%4#1                                                                   (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | array%value%4#1
    l-load-copy array%value%4#1 0                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | array%value%4#1,array%value%4#1 (copy)
    extract 0 8                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | array%value%4#1,point.x#0
    l-load array%value%4#1 1                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0,array%value%4#1
    int 8                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0,array%value%4#1,8
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0,point.y#0
    v-store point.y#0                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0
    // array/static_size.py:104
    // if point.x < last_point.x:
    l-load point.x#0 0                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0
    v-load last_point.x#0                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | point.x#0,last_point.x#0
    b<                                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | tmp%1#1
    bz test_array_else_body@9 ; b test_array_if_body@8                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 |

test_array_if_body@8:                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 |
    // array/static_size.py:105
    // dx = last_point.x.native - point.x.native
    v-load array%value%3#1                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | array%value%3#1
    // array/static_size.py:100
    // last_point = path[0]
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | array%value%3#1,0
    // array/static_size.py:105
    // dx = last_point.x.native - point.x.native
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 | tmp%2#1
    x-load array%value%4#1                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#1,array%value%4#1
    // array/static_size.py:103
    // point = path[point_idx]
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#1,array%value%4#1,0
    // array/static_size.py:105
    // dx = last_point.x.native - point.x.native
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#1,tmp%3#1
    l-load tmp%2#1 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%3#1,tmp%2#1
    l-load tmp%3#1 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%2#1,tmp%3#1
    -                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | dx#0
    v-store dx#0                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_after_if_else@10                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_else_body@9:                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) array%value%4#1 |
    // array/static_size.py:107
    // dx = point.x.native - last_point.x.native
    x-load array%value%4#1                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%4#1
    // array/static_size.py:103
    // point = path[point_idx]
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | array%value%4#1,0
    // array/static_size.py:107
    // dx = point.x.native - last_point.x.native
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0
    v-load array%value%3#1                                                                    (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,array%value%3#1
    // array/static_size.py:100
    // last_point = path[0]
    int 0                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,array%value%3#1,0
    // array/static_size.py:107
    // dx = point.x.native - last_point.x.native
    extract_uint64                                                                            (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0
    l-load tmp%4#0 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%5#0,tmp%4#0
    l-load tmp%5#0 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%4#0,tmp%5#0
    -                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | dx#0
    v-store dx#0                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_after_if_else@10                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_after_if_else@10:                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:108
    // if point.y < last_point.y:
    v-load point.y#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | point.y#0
    v-load last_point.y#0                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | point.y#0,last_point.y#0
    <                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%6#1
    bz test_array_else_body@12 ; b test_array_if_body@11                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_if_body@11:                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:109
    // dy = last_point.y - point.y
    v-load last_point.y#0                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | last_point.y#0
    v-load point.y#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | last_point.y#0,point.y#0
    -                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | dy#0
    x-store dy#0                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 |
    b test_array_after_if_else@13                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 |

test_array_else_body@12:                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:111
    // dy = point.y - last_point.y
    v-load point.y#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | point.y#0
    v-load last_point.y#0                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | point.y#0,last_point.y#0
    -                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | dy#0
    x-store dy#0                                                                              (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 |
    b test_array_after_if_else@13                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 |

test_array_after_if_else@13:                                                                  (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 |
    // array/static_size.py:112
    // length += op.sqrt(dx * dx + dy * dy)
    v-load dx#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 | dx#0
    l-store-copy dx#0 0                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 | dx#0,dx#0 (copy)
    l-load dx#0 1                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 | dx#0 (copy),dx#0
    *                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | (ùïè) dy#0 | tmp%7#1
    x-load dy#0                                                                               (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#1,dy#0
    l-store-copy dy#0 0                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#1,dy#0,dy#0 (copy)
    l-load dy#0 1                                                                             (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#1,dy#0 (copy),dy#0
    *                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#1,tmp%8#0
    l-load tmp%7#1 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%8#0,tmp%7#1
    l-load tmp%8#0 1                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%7#1,tmp%8#0
    +                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%9#0
    sqrt                                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#1
    v-load length#0                                                                           (ùï°) x1#0,y1#0,x2#0,y2#0 | tmp%10#1,length#0
    l-load tmp%10#1 1                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | length#0,tmp%10#1
    +                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | length#0
    v-store length#0                                                                          (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:102
    // for point_idx in urange(1, path.length):
    v-load point_idx#0                                                                        (ùï°) x1#0,y1#0,x2#0,y2#0 | point_idx#0
    int 1                                                                                     (ùï°) x1#0,y1#0,x2#0,y2#0 | point_idx#0,1
    +                                                                                         (ùï°) x1#0,y1#0,x2#0,y2#0 | point_idx#0
    v-store point_idx#0                                                                       (ùï°) x1#0,y1#0,x2#0,y2#0 |
    b test_array_for_header@6                                                                 (ùï°) x1#0,y1#0,x2#0,y2#0 |

test_array_after_for@14:                                                                      (ùï°) x1#0,y1#0,x2#0,y2#0 |
    // array/static_size.py:42
    // return path_length(path)
    v-load length#0                                                                           (ùï°) x1#0,y1#0,x2#0,y2#0 | length#0
    retsub                                                                                    length#0


// test_cases.array.static_size.StaticSizeContract.test_bool_array(length: uint64) -> uint64:
test_bool_array:                                                                              (ùï°) length#0 |
    // array/static_size.py:46
    // arr = Array[bool]()
    byte 0x                                                                                   (ùï°) length#0 | 0x
    v-store slot%0                                                                            (ùï°) length#0 |
    // array/static_size.py:49
    // for i in urange(1, length + 1):
    p-load length#0                                                                           (ùï°) length#0 | length#0 (copy)
    int 1                                                                                     (ùï°) length#0 | length#0 (copy),1
    +                                                                                         (ùï°) length#0 | tmp%2#0
    v-store tmp%2#0                                                                           (ùï°) length#0 |
    int 1                                                                                     (ùï°) length#0 | 1
    v-store i#0                                                                               (ùï°) length#0 |
    b test_bool_array_for_header@1                                                            (ùï°) length#0 |

test_bool_array_for_header@1:                                                                 (ùï°) length#0 |
    // array/static_size.py:49
    // for i in urange(1, length + 1):
    v-load i#0                                                                                (ùï°) length#0 | i#0
    v-load tmp%2#0                                                                            (ùï°) length#0 | i#0,tmp%2#0
    <                                                                                         (ùï°) length#0 | continue_looping%0#0
    bz test_bool_array_after_for@4 ; b test_bool_array_for_body@2                             (ùï°) length#0 |

test_bool_array_for_body@2:                                                                   (ùï°) length#0 |
    // array/static_size.py:50
    // arr.append(i % 2 == 0)
    v-load i#0                                                                                (ùï°) length#0 | i#0
    l-store-copy i#0 0                                                                        (ùï°) length#0 | i#0,i#0 (copy)
    int 2                                                                                     (ùï°) length#0 | i#0,i#0 (copy),2
    %                                                                                         (ùï°) length#0 | i#0,tmp%3#0
    !                                                                                         (ùï°) length#0 | i#0,tmp%4#0
    byte 0x00                                                                                 (ùï°) length#0 | i#0,tmp%4#0,0x00
    byte 0x80                                                                                 (ùï°) length#0 | i#0,tmp%4#0,0x00,0x80
    l-load tmp%4#0 2                                                                          (ùï°) length#0 | i#0,0x00,0x80,tmp%4#0
    select                                                                                    (ùï°) length#0 | i#0,array%encoded_bit%0#1
    v-load slot%0                                                                             (ùï°) length#0 | i#0,array%encoded_bit%0#1,slot_contents%1#0
    l-load array%encoded_bit%0#1 1                                                            (ùï°) length#0 | i#0,slot_contents%1#0,array%encoded_bit%0#1
    concat // on error: max array length exceeded                                             (ùï°) length#0 | i#0,array%array_contents%0#1
    v-store slot%0                                                                            (ùï°) length#0 | i#0
    // array/static_size.py:49
    // for i in urange(1, length + 1):
    l-load i#0 0                                                                              (ùï°) length#0 | i#0
    int 1                                                                                     (ùï°) length#0 | i#0,1
    +                                                                                         (ùï°) length#0 | i#0
    v-store i#0                                                                               (ùï°) length#0 |
    b test_bool_array_for_header@1                                                            (ùï°) length#0 |

test_bool_array_after_for@4:                                                                  (ùï°) length#0 |
    v-load slot%0                                                                             (ùï°) length#0 | slot_contents%2#0
    // array/static_size.py:51
    // assert arr.length == length, "expected correct length"
    len                                                                                       (ùï°) length#0 | array%bytes_len%1#1
    int 1                                                                                     (ùï°) length#0 | array%bytes_len%1#1,1
    /                                                                                         (ùï°) length#0 | array%array_len%1#1
    l-store-copy array%array_len%1#1 0                                                        (ùï°) length#0 | array%array_len%1#1,array%array_len%1#1 (copy)
    v-store array%array_len%1#1                                                               (ùï°) length#0 | array%array_len%1#1
    l-load array%array_len%1#1 0                                                              (ùï°) length#0 | array%array_len%1#1
    p-load length#0                                                                           (ùï°) length#0 | array%array_len%1#1,length#0 (copy)
    ==                                                                                        (ùï°) length#0 | tmp%6#0
    assert // expected correct length                                                         (ùï°) length#0 |
    // array/static_size.py:52
    // count = UInt64(0)
    int 0                                                                                     (ùï°) length#0 | 0
    v-store count#0                                                                           (ùï°) length#0 |
    int 0                                                                                     (ùï°) length#0 | 0
    v-store item_index_internal%0#0                                                           (ùï°) length#0 |
    b test_bool_array_for_header@5                                                            (ùï°) length#0 |

test_bool_array_for_header@5:                                                                 (ùï°) length#0 |
    // array/static_size.py:53
    // for val in arr:
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | item_index_internal%0#0
    v-load array%array_len%1#1                                                                (ùï°) length#0 | item_index_internal%0#0,array%array_len%1#1
    <                                                                                         (ùï°) length#0 | continue_looping%1#0
    bz test_bool_array_after_for@10 ; b test_bool_array_for_body@6                            (ùï°) length#0 |

test_bool_array_for_body@6:                                                                   (ùï°) length#0 |
    v-load slot%0                                                                             (ùï°) length#0 | slot_contents%4#0
    // array/static_size.py:53
    // for val in arr:
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | slot_contents%4#0,item_index_internal%0#0
    int 1                                                                                     (ùï°) length#0 | slot_contents%4#0,item_index_internal%0#0,1
    extract3                                                                                  (ùï°) length#0 | array%value%0#1
    int 0                                                                                     (ùï°) length#0 | array%value%0#1,0
    getbyte                                                                                   (ùï°) length#0 | val#0
    v-load count#0                                                                            (ùï°) length#0 | val#0,count#9
    v-store count#9                                                                           (ùï°) length#0 | val#0
    // array/static_size.py:54
    // if val:
    l-load val#0 0                                                                            (ùï°) length#0 | val#0
    bz test_bool_array_after_if_else@8 ; b test_bool_array_if_body@7                          (ùï°) length#0 |

test_bool_array_if_body@7:                                                                    (ùï°) length#0 |
    // array/static_size.py:55
    // count += 1
    v-load count#0                                                                            (ùï°) length#0 | count#0
    int 1                                                                                     (ùï°) length#0 | count#0,1
    +                                                                                         (ùï°) length#0 | count#0
    v-store count#9                                                                           (ùï°) length#0 |
    b test_bool_array_after_if_else@8                                                         (ùï°) length#0 |

test_bool_array_after_if_else@8:                                                              (ùï°) length#0 |
    v-load count#9                                                                            (ùï°) length#0 | count#0
    v-store count#0                                                                           (ùï°) length#0 |
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | item_index_internal%0#0
    int 1                                                                                     (ùï°) length#0 | item_index_internal%0#0,1
    +                                                                                         (ùï°) length#0 | item_index_internal%0#0
    v-store item_index_internal%0#0                                                           (ùï°) length#0 |
    b test_bool_array_for_header@5                                                            (ùï°) length#0 |

test_bool_array_after_for@10:                                                                 (ùï°) length#0 |
    // array/static_size.py:56
    // return count
    v-load count#0                                                                            (ùï°) length#0 | count#0
    retsub                                                                                    count#0


// test_cases.array.static_size.StaticSizeContract.test_arc4_conversion(length: uint64) -> bytes:
test_arc4_conversion:                                                                         (ùï°) length#0 |
    // array/static_size.py:60
    // arr = Array[arc4.UInt64]()
    byte 0x                                                                                   (ùï°) length#0 | 0x
    v-store slot%0                                                                            (ùï°) length#0 |
    // array/static_size.py:63
    // for i in urange(1, length + 1):
    p-load length#0                                                                           (ùï°) length#0 | length#0 (copy)
    int 1                                                                                     (ùï°) length#0 | length#0 (copy),1
    +                                                                                         (ùï°) length#0 | tmp%2#0
    v-store tmp%2#0                                                                           (ùï°) length#0 |
    int 1                                                                                     (ùï°) length#0 | 1
    v-store i#0                                                                               (ùï°) length#0 |
    b test_arc4_conversion_for_header@1                                                       (ùï°) length#0 |

test_arc4_conversion_for_header@1:                                                            (ùï°) length#0 |
    // array/static_size.py:63
    // for i in urange(1, length + 1):
    v-load i#0                                                                                (ùï°) length#0 | i#0
    v-load tmp%2#0                                                                            (ùï°) length#0 | i#0,tmp%2#0
    <                                                                                         (ùï°) length#0 | continue_looping%0#0
    bz test_arc4_conversion_after_for@4 ; b test_arc4_conversion_for_body@2                   (ùï°) length#0 |

test_arc4_conversion_for_body@2:                                                              (ùï°) length#0 |
    // array/static_size.py:64
    // arr.append(arc4.UInt64(i))
    v-load i#0                                                                                (ùï°) length#0 | i#0
    l-store-copy i#0 0                                                                        (ùï°) length#0 | i#0,i#0 (copy)
    itob                                                                                      (ùï°) length#0 | i#0,val_as_bytes%0#0
    v-load slot%0                                                                             (ùï°) length#0 | i#0,val_as_bytes%0#0,slot_contents%1#0
    l-load val_as_bytes%0#0 1                                                                 (ùï°) length#0 | i#0,slot_contents%1#0,val_as_bytes%0#0
    concat // on error: max array length exceeded                                             (ùï°) length#0 | i#0,array%array_contents%0#1
    v-store slot%0                                                                            (ùï°) length#0 | i#0
    // array/static_size.py:63
    // for i in urange(1, length + 1):
    l-load i#0 0                                                                              (ùï°) length#0 | i#0
    int 1                                                                                     (ùï°) length#0 | i#0,1
    +                                                                                         (ùï°) length#0 | i#0
    v-store i#0                                                                               (ùï°) length#0 |
    b test_arc4_conversion_for_header@1                                                       (ùï°) length#0 |

test_arc4_conversion_after_for@4:                                                             (ùï°) length#0 |
    v-load slot%0                                                                             (ùï°) length#0 | slot_contents%2#0
    // array/static_size.py:65
    // assert arr.length == length, "expected correct length"
    len                                                                                       (ùï°) length#0 | array%bytes_len%1#1
    int 8                                                                                     (ùï°) length#0 | array%bytes_len%1#1,8
    /                                                                                         (ùï°) length#0 | array%array_len%1#1
    l-store-copy array%array_len%1#1 0                                                        (ùï°) length#0 | array%array_len%1#1,array%array_len%1#1 (copy)
    v-store array%array_len%1#1                                                               (ùï°) length#0 | array%array_len%1#1
    l-load array%array_len%1#1 0                                                              (ùï°) length#0 | array%array_len%1#1
    p-load length#0                                                                           (ùï°) length#0 | array%array_len%1#1,length#0 (copy)
    ==                                                                                        (ùï°) length#0 | tmp%4#0
    assert // expected correct length                                                         (ùï°) length#0 |
    // array/static_size.py:66
    // count = UInt64(0)
    int 0                                                                                     (ùï°) length#0 | 0
    v-store count#0                                                                           (ùï°) length#0 |
    int 0                                                                                     (ùï°) length#0 | 0
    v-store item_index_internal%0#0                                                           (ùï°) length#0 |
    b test_arc4_conversion_for_header@5                                                       (ùï°) length#0 |

test_arc4_conversion_for_header@5:                                                            (ùï°) length#0 |
    // array/static_size.py:67
    // for val in arr:
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | item_index_internal%0#0
    v-load array%array_len%1#1                                                                (ùï°) length#0 | item_index_internal%0#0,array%array_len%1#1
    <                                                                                         (ùï°) length#0 | continue_looping%1#0
    bz test_arc4_conversion_after_for@10 ; b test_arc4_conversion_for_body@6                  (ùï°) length#0 |

test_arc4_conversion_for_body@6:                                                              (ùï°) length#0 |
    v-load slot%0                                                                             (ùï°) length#0 | slot_contents%4#0
    // array/static_size.py:67
    // for val in arr:
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | slot_contents%4#0,item_index_internal%0#0
    int 8                                                                                     (ùï°) length#0 | slot_contents%4#0,item_index_internal%0#0,8
    *                                                                                         (ùï°) length#0 | slot_contents%4#0,array%bytes_index%0#1
    l-load slot_contents%4#0 1                                                                (ùï°) length#0 | array%bytes_index%0#1,slot_contents%4#0
    l-load array%bytes_index%0#1 1                                                            (ùï°) length#0 | slot_contents%4#0,array%bytes_index%0#1
    int 8                                                                                     (ùï°) length#0 | slot_contents%4#0,array%bytes_index%0#1,8
    extract3                                                                                  (ùï°) length#0 | array%value%0#1
    extract 0 8                                                                               (ùï°) length#0 | val#0
    // array/static_size.py:68
    // if val:
    byte 0x0000000000000000                                                                   (ùï°) length#0 | val#0,0x0000000000000000
    !=                                                                                        (ùï°) length#0 | tmp%5#0
    v-load count#0                                                                            (ùï°) length#0 | tmp%5#0,count#9
    v-store count#9                                                                           (ùï°) length#0 | tmp%5#0
    l-load tmp%5#0 0                                                                          (ùï°) length#0 | tmp%5#0
    bz test_arc4_conversion_after_if_else@8 ; b test_arc4_conversion_if_body@7                (ùï°) length#0 |

test_arc4_conversion_if_body@7:                                                               (ùï°) length#0 |
    // array/static_size.py:69
    // count += 1
    v-load count#0                                                                            (ùï°) length#0 | count#0
    int 1                                                                                     (ùï°) length#0 | count#0,1
    +                                                                                         (ùï°) length#0 | count#0
    v-store count#9                                                                           (ùï°) length#0 |
    b test_arc4_conversion_after_if_else@8                                                    (ùï°) length#0 |

test_arc4_conversion_after_if_else@8:                                                         (ùï°) length#0 |
    v-load count#9                                                                            (ùï°) length#0 | count#0
    v-store count#0                                                                           (ùï°) length#0 |
    v-load item_index_internal%0#0                                                            (ùï°) length#0 | item_index_internal%0#0
    int 1                                                                                     (ùï°) length#0 | item_index_internal%0#0,1
    +                                                                                         (ùï°) length#0 | item_index_internal%0#0
    v-store item_index_internal%0#0                                                           (ùï°) length#0 |
    b test_arc4_conversion_for_header@5                                                       (ùï°) length#0 |

test_arc4_conversion_after_for@10:                                                            (ùï°) length#0 |
    v-load slot%0                                                                             (ùï°) length#0 | slot_contents%5#0
    // array/static_size.py:72
    // arc4_arr.extend(arr)
    l-load-copy slot_contents%5#0 0                                                           (ùï°) length#0 | slot_contents%5#0,slot_contents%5#0 (copy)
    len                                                                                       (ùï°) length#0 | slot_contents%5#0,byte_len%0#0
    int 8                                                                                     (ùï°) length#0 | slot_contents%5#0,byte_len%0#0,8
    /                                                                                         (ùï°) length#0 | slot_contents%5#0,len_%0#0
    itob                                                                                      (ùï°) length#0 | slot_contents%5#0,as_bytes%0#0
    extract 6 2                                                                               (ùï°) length#0 | slot_contents%5#0,len_16_bit%0#0
    l-load slot_contents%5#0 1                                                                (ùï°) length#0 | len_16_bit%0#0,slot_contents%5#0
    concat                                                                                    (ùï°) length#0 | arc4_arr#1
    // array/static_size.py:74
    // return arc4_arr
    retsub                                                                                    arc4_arr#1


// test_cases.array.static_size.StaticSizeContract.sum_array(arc4_arr: bytes) -> uint64:
sum_array:                                                                                    (ùï°) arc4_arr#0 |
    // array/static_size.py:79
    // arr.extend(arc4_arr)
    p-load arc4_arr#0                                                                         (ùï°) arc4_arr#0 | arc4_arr#0 (copy)
    extract 2 0                                                                               (ùï°) arc4_arr#0 | expr_value_trimmed%0#0
    l-load-copy expr_value_trimmed%0#0 0                                                      (ùï°) arc4_arr#0 | expr_value_trimmed%0#0,expr_value_trimmed%0#0 (copy)
    v-store slot%0                                                                            (ùï°) arc4_arr#0 | expr_value_trimmed%0#0
    // array/static_size.py:81
    // total = UInt64(0)
    int 0                                                                                     (ùï°) arc4_arr#0 | expr_value_trimmed%0#0,0
    v-store total#0                                                                           (ùï°) arc4_arr#0 | expr_value_trimmed%0#0
    // array/static_size.py:82
    // for item in arr:
    l-load expr_value_trimmed%0#0 0                                                           (ùï°) arc4_arr#0 | expr_value_trimmed%0#0
    len                                                                                       (ùï°) arc4_arr#0 | array%bytes_len%0#1
    int 8                                                                                     (ùï°) arc4_arr#0 | array%bytes_len%0#1,8
    /                                                                                         (ùï°) arc4_arr#0 | array%array_len%0#1
    v-store array%array_len%0#1                                                               (ùï°) arc4_arr#0 |
    int 0                                                                                     (ùï°) arc4_arr#0 | 0
    v-store item_index_internal%0#0                                                           (ùï°) arc4_arr#0 |
    b sum_array_for_header@1                                                                  (ùï°) arc4_arr#0 |

sum_array_for_header@1:                                                                       (ùï°) arc4_arr#0 |
    // array/static_size.py:82
    // for item in arr:
    v-load item_index_internal%0#0                                                            (ùï°) arc4_arr#0 | item_index_internal%0#0
    v-load array%array_len%0#1                                                                (ùï°) arc4_arr#0 | item_index_internal%0#0,array%array_len%0#1
    <                                                                                         (ùï°) arc4_arr#0 | continue_looping%0#0
    bz sum_array_after_for@4 ; b sum_array_for_body@2                                         (ùï°) arc4_arr#0 |

sum_array_for_body@2:                                                                         (ùï°) arc4_arr#0 |
    v-load slot%0                                                                             (ùï°) arc4_arr#0 | slot_contents%2#0
    // array/static_size.py:82
    // for item in arr:
    v-load item_index_internal%0#0                                                            (ùï°) arc4_arr#0 | slot_contents%2#0,item_index_internal%0#0
    l-store-copy item_index_internal%0#0 1                                                    (ùï°) arc4_arr#0 | item_index_internal%0#0,slot_contents%2#0,item_index_internal%0#0 (copy)
    int 8                                                                                     (ùï°) arc4_arr#0 | item_index_internal%0#0,slot_contents%2#0,item_index_internal%0#0 (copy),8
    *                                                                                         (ùï°) arc4_arr#0 | item_index_internal%0#0,slot_contents%2#0,array%bytes_index%0#1
    l-load slot_contents%2#0 1                                                                (ùï°) arc4_arr#0 | item_index_internal%0#0,array%bytes_index%0#1,slot_contents%2#0
    l-load array%bytes_index%0#1 1                                                            (ùï°) arc4_arr#0 | item_index_internal%0#0,slot_contents%2#0,array%bytes_index%0#1
    int 8                                                                                     (ùï°) arc4_arr#0 | item_index_internal%0#0,slot_contents%2#0,array%bytes_index%0#1,8
    extract3                                                                                  (ùï°) arc4_arr#0 | item_index_internal%0#0,array%value%0#1
    int 0                                                                                     (ùï°) arc4_arr#0 | item_index_internal%0#0,array%value%0#1,0
    // array/static_size.py:83
    // total += item.native
    extract_uint64                                                                            (ùï°) arc4_arr#0 | item_index_internal%0#0,tmp%0#0
    v-load total#0                                                                            (ùï°) arc4_arr#0 | item_index_internal%0#0,tmp%0#0,total#0
    l-load tmp%0#0 1                                                                          (ùï°) arc4_arr#0 | item_index_internal%0#0,total#0,tmp%0#0
    +                                                                                         (ùï°) arc4_arr#0 | item_index_internal%0#0,total#0
    v-store total#0                                                                           (ùï°) arc4_arr#0 | item_index_internal%0#0
    l-load item_index_internal%0#0 0                                                          (ùï°) arc4_arr#0 | item_index_internal%0#0
    int 1                                                                                     (ùï°) arc4_arr#0 | item_index_internal%0#0,1
    +                                                                                         (ùï°) arc4_arr#0 | item_index_internal%0#0
    v-store item_index_internal%0#0                                                           (ùï°) arc4_arr#0 |
    b sum_array_for_header@1                                                                  (ùï°) arc4_arr#0 |

sum_array_after_for@4:                                                                        (ùï°) arc4_arr#0 |
    // array/static_size.py:85
    // return total
    v-load total#0                                                                            (ùï°) arc4_arr#0 | total#0
    retsub                                                                                    total#0


// test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes:
xtra:
    // array/static_size.py:89
    // self.count += 1
    int 0                                                                                     0
    byte "count"                                                                              0,"count"
    app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
    assert // check self.count exists                                                         maybe_value%0#0
    l-load maybe_value%0#0 0                                                                  maybe_value%0#0
    int 1                                                                                     maybe_value%0#0,1
    +                                                                                         new_state_value%0#0
    byte "count"                                                                              new_state_value%0#0,"count"
    l-load new_state_value%0#0 1                                                              "count",new_state_value%0#0
    app_global_put
    // array/static_size.py:91
    // a=Txn.num_app_args,
    txn NumAppArgs                                                                            tmp%0#0
    // array/static_size.py:92
    // b=self.count,
    int 0                                                                                     tmp%0#0,0
    byte "count"                                                                              tmp%0#0,0,"count"
    app_global_get_ex                                                                         tmp%0#0,maybe_value%1#0,maybe_exists%1#0
    assert // check self.count exists                                                         tmp%0#0,maybe_value%1#0
    // array/static_size.py:93
    // c=Txn.sender,
    txn Sender                                                                                tmp%0#0,maybe_value%1#0,tmp%1#0
    // array/static_size.py:94
    // d=More(foo=arc4.UInt64(self.count + 1), bar=arc4.UInt64(self.count * self.count)),
    int 0                                                                                     tmp%0#0,maybe_value%1#0,tmp%1#0,0
    byte "count"                                                                              tmp%0#0,maybe_value%1#0,tmp%1#0,0,"count"
    app_global_get_ex                                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,maybe_value%2#0,maybe_exists%2#0
    assert // check self.count exists                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,maybe_value%2#0
    l-load maybe_value%2#0 0                                                                  tmp%0#0,maybe_value%1#0,tmp%1#0,maybe_value%2#0
    int 1                                                                                     tmp%0#0,maybe_value%1#0,tmp%1#0,maybe_value%2#0,1
    +                                                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,to_encode%0#0
    itob                                                                                      tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0
    int 0                                                                                     tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,0
    byte "count"                                                                              tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,0,"count"
    app_global_get_ex                                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,maybe_exists%3#0
    assert // check self.count exists                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0
    int 0                                                                                     tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,0
    byte "count"                                                                              tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,0,"count"
    app_global_get_ex                                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,maybe_value%4#0,maybe_exists%4#0
    assert // check self.count exists                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,maybe_value%4#0
    l-load maybe_value%3#0 1                                                                  tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%4#0,maybe_value%3#0
    l-load maybe_value%4#0 1                                                                  tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,maybe_value%3#0,maybe_value%4#0
    *                                                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,to_encode%1#0
    itob                                                                                      tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,val_as_bytes%1#0
    l-load val_as_bytes%0#0 1                                                                 tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%1#0,val_as_bytes%0#0
    l-load val_as_bytes%1#0 1                                                                 tmp%0#0,maybe_value%1#0,tmp%1#0,val_as_bytes%0#0,val_as_bytes%1#0
    concat                                                                                    tmp%0#0,maybe_value%1#0,tmp%1#0,encoded_tuple_buffer%2#0
    // array/static_size.py:90-95
    // return Xtra(
    //     a=Txn.num_app_args,
    //     b=self.count,
    //     c=Txn.sender,
    //     d=More(foo=arc4.UInt64(self.count + 1), bar=arc4.UInt64(self.count * self.count)),
    // )
    l-load tmp%0#0 3                                                                          maybe_value%1#0,tmp%1#0,encoded_tuple_buffer%2#0,tmp%0#0
    l-load maybe_value%1#0 3                                                                  tmp%1#0,encoded_tuple_buffer%2#0,tmp%0#0,maybe_value%1#0
    l-load tmp%1#0 3                                                                          encoded_tuple_buffer%2#0,tmp%0#0,maybe_value%1#0,tmp%1#0
    l-load encoded_tuple_buffer%2#0 3                                                         tmp%0#0,maybe_value%1#0,tmp%1#0,encoded_tuple_buffer%2#0
    retsub                                                                                    tmp%0#0,maybe_value%1#0,tmp%1#0,encoded_tuple_buffer%2#0


