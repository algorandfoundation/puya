// Op                                                                                             Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                         tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // array/static_size.py:39
        // self.count = UInt64(0)
        byte "count"                                                                              "count"
        int 0                                                                                     "count",0
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // array/static_size.py:37
        // class StaticSizeContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                            tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                            tmp%0#1
        bz main___algopy_default_create@16 ; b main_abi_routing@4

    main_abi_routing@4:
        // array/static_size.py:37
        // class StaticSizeContract(arc4.ARC4Contract):
        txn OnCompletion                                                                          tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        !                                                                                         tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                            tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                         tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                            tmp%4#0
        assert
        txna ApplicationArgs 0                                                                    tmp%6#0
        v-store tmp%6#0
        method test_array(uint64,uint64,uint64,uint64)uint64                                      Method(test_array(uint64,uint64,uint64,uint64)uint64)
        method test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[] Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])
        method test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[] Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])
        method test_bool_array(uint64)uint64                                                      Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_bool_array(uint64)uint64)
        method test_arc4_conversion(uint64)uint64[]                                               Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[])
        method sum_array(uint64[])uint64                                                          Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[]),Method(sum_array(uint64[])uint64)
        method test_arc4_bool()bool[]                                                             Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[]),Method(sum_array(uint64[])uint64),Method(test_arc4_bool()bool[])
        v-load tmp%6#0                                                                            Method(test_array(uint64,uint64,uint64,uint64)uint64),Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]),Method(test_bool_array(uint64)uint64),Method(test_arc4_conversion(uint64)uint64[]),Method(sum_array(uint64[])uint64),Method(test_arc4_bool()bool[]),tmp%6#0
        match main_test_array_route@6 main_test_extend_from_tuple_route@7 main_test_extend_from_arc4_tuple_route@8 main_test_bool_array_route@9 main_test_arc4_conversion_route@10 main_sum_array_route@11 main_test_arc4_bool_route@12 ; b main_after_if_else@15 

    main_test_array_route@6:
        // array/static_size.py:41
        // @arc4.abimethod()
        callsub test_array
        b main_after_if_else@15

    main_test_extend_from_tuple_route@7:
        // array/static_size.py:59
        // @arc4.abimethod()
        callsub test_extend_from_tuple
        b main_after_if_else@15

    main_test_extend_from_arc4_tuple_route@8:
        // array/static_size.py:69
        // @arc4.abimethod()
        callsub test_extend_from_arc4_tuple
        b main_after_if_else@15

    main_test_bool_array_route@9:
        // array/static_size.py:77
        // @arc4.abimethod()
        callsub test_bool_array
        b main_after_if_else@15

    main_test_arc4_conversion_route@10:
        // array/static_size.py:96
        // @arc4.abimethod()
        callsub test_arc4_conversion
        b main_after_if_else@15

    main_sum_array_route@11:
        // array/static_size.py:114
        // @arc4.abimethod()
        callsub sum_array
        b main_after_if_else@15

    main_test_arc4_bool_route@12:
        // array/static_size.py:140
        // @arc4.abimethod()
        callsub test_arc4_bool
        b main_after_if_else@15

    main_after_if_else@15:
        // array/static_size.py:37
        // class StaticSizeContract(arc4.ARC4Contract):
        err

    main___algopy_default_create@16:
        txn OnCompletion                                                                          tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                            tmp%7#0
        !                                                                                         tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                                         tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                            tmp%9#0
        !                                                                                         tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                                            tmp%8#0
        v-load tmp%10#0                                                                           tmp%8#0,tmp%10#0
        &&                                                                                        tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                           tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                                     1
        return


// _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
subroutine dynamic_array_concat_bits:
    dynamic_array_concat_bits_block@0:                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        p-load array#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy)
        int 0                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy),0
        extract_uint16                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        v-store array_length#0                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load array_length#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        p-load new_items_count#0                                                                  (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_items_count#0 (copy)
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_array_length#0
        v-store new_array_length#0                                                                (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load new_array_length#0                                                                 (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_array_length#0
        itob                                                                                      (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%2#0
        v-store tmp%2#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%2#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%2#0
        extract 6 0                                                                               (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_array_length_b#0
        v-store new_array_length_b#0                                                              (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        p-load array#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy)
        v-load new_array_length_b#0                                                               (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy),new_array_length_b#0
        replace2 0                                                                                (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-store result#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load array_length#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        int 7                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,7
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%5#0
        v-store tmp%5#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%5#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%5#0
        int 8                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%5#0,8
        /                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | current_bytes#0
        v-store current_bytes#0                                                                   (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load new_array_length#0                                                                 (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_array_length#0
        int 7                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_array_length#0,7
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%7#0
        v-store tmp%7#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%7#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%7#0
        int 8                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%7#0,8
        /                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | required_bytes#0
        v-store required_bytes#0                                                                  (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load current_bytes#0                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | current_bytes#0
        v-load required_bytes#0                                                                   (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | current_bytes#0,required_bytes#0
        <                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%9#0
        v-store tmp%9#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%9#0                                                                            (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%9#0
        bz dynamic_array_concat_bits_after_if_else@2 ; b dynamic_array_concat_bits_if_body@1 (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 

    dynamic_array_concat_bits_if_body@1:                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load required_bytes#0                                                                   (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | required_bytes#0
        v-load current_bytes#0                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | required_bytes#0,current_bytes#0
        -                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%10#0
        v-store tmp%10#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%10#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%10#0
        bzero                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%11#0
        v-store tmp%11#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load result#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-load tmp%11#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,tmp%11#0
        concat                                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-store result#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_after_if_else@2                                               (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_after_if_else@2:                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        int 0                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 0
        v-store read_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load array_length#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        int 16                                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,16
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        v-store write_offset#0                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load write_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        p-load new_items_count#0                                                                  (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,new_items_count#0 (copy)
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_end#0
        v-store write_end#0                                                                       (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_while_top@3                                                   (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_while_top@3:                                                        (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load write_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        v-load write_end#0                                                                        (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,write_end#0
        <                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%15#0
        v-store tmp%15#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load tmp%15#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%15#0
        bz dynamic_array_concat_bits_after_while@5 ; b dynamic_array_concat_bits_while_body@4 (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 

    dynamic_array_concat_bits_while_body@4:                                                       (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        p-load new_items_bytes#0                                                                  (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_items_bytes#0 (copy)
        v-load read_offset#0                                                                      (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_items_bytes#0 (copy),read_offset#0
        getbit                                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%16#0
        v-store tmp%16#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load result#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-load write_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,write_offset#0
        v-load tmp%16#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,write_offset#0,tmp%16#0
        setbit                                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-store result#0                                                                          (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load write_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        int 1                                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,1
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        v-store write_offset#0                                                                    (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load read_offset#0                                                                      (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0
        p-load read_step#0                                                                        (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,read_step#0 (copy)
        +                                                                                         (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0
        v-store read_offset#0                                                                     (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_while_top@3                                                   (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_after_while@5:                                                      (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load result#0                                                                           (洧도) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        retsub                                                                                    result#0


// test_cases.array.static_size.StaticSizeContract.test_array[routing]() -> void:
subroutine test_array:
    test_array_block@0:
        // array/static_size.py:41
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    x1#0
        v-store x1#0
        txna ApplicationArgs 2                                                                    reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                    reinterpret_Encoded(uint64)%1#0
        btoi                                                                                      y1#0
        v-store y1#0
        txna ApplicationArgs 3                                                                    x2#0
        v-store x2#0
        txna ApplicationArgs 4                                                                    reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                    reinterpret_Encoded(uint64)%3#0
        btoi                                                                                      y2#0
        v-store y2#0
        // array/static_size.py:43
        // self.count = UInt64(0)
        byte "count"                                                                              "count"
        int 0                                                                                     "count",0
        app_global_put
        // array/static_size.py:46
        // Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
        callsub xtra                                                                              tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1,tmp%4#1
        v-store tmp%4#1                                                                           tmp%0#1,tmp%1#1,tmp%2#1,tmp%3#1
        v-store tmp%3#1                                                                           tmp%0#1,tmp%1#1,tmp%2#1
        v-store tmp%2#1                                                                           tmp%0#1,tmp%1#1
        v-store tmp%1#1                                                                           tmp%0#1
        v-store tmp%0#1
        // array/static_size.py:47
        // Point(x=x1, y=y1, other=self.xtra()),
        callsub xtra                                                                              tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0,tmp%9#0
        v-store tmp%9#0                                                                           tmp%5#0,tmp%6#0,tmp%7#0,tmp%8#0
        v-store tmp%8#0                                                                           tmp%5#0,tmp%6#0,tmp%7#0
        v-store tmp%7#0                                                                           tmp%5#0,tmp%6#0
        v-store tmp%6#0                                                                           tmp%5#0
        v-store tmp%5#0
        // array/static_size.py:48
        // Point(x=x2, y=y2, other=self.xtra()),
        callsub xtra                                                                              tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0,tmp%14#0
        v-store tmp%14#0                                                                          tmp%10#0,tmp%11#0,tmp%12#0,tmp%13#0
        v-store tmp%13#0                                                                          tmp%10#0,tmp%11#0,tmp%12#0
        v-store tmp%12#0                                                                          tmp%10#0,tmp%11#0
        v-store tmp%11#0                                                                          tmp%10#0
        v-store tmp%10#0
        // array/static_size.py:44-50
        // path = ReferenceArray(
        //     (
        //         Point(x=arc4.UInt64(), y=UInt64(), other=self.xtra()),
        //         Point(x=x1, y=y1, other=self.xtra()),
        //         Point(x=x2, y=y2, other=self.xtra()),
        //     )
        // )
        v-load tmp%0#1                                                                            tmp%0#1
        itob                                                                                      aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load tmp%1#1                                                                            tmp%1#1
        itob                                                                                      aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load aggregate%val_as_bytes%1#0                                                         aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%2#0                                                         aggregate%val_as_bytes%1#0,aggregate%val_as_bytes%2#0
        concat                                                                                    aggregate%head%3#0
        v-store aggregate%head%3#0
        v-load aggregate%head%3#0                                                                 aggregate%head%3#0
        v-load tmp%2#1                                                                            aggregate%head%3#0,tmp%2#1
        concat                                                                                    aggregate%head%4#0
        v-store aggregate%head%4#0
        v-load aggregate%head%4#0                                                                 aggregate%head%4#0
        v-load tmp%3#1                                                                            aggregate%head%4#0,tmp%3#1
        concat                                                                                    aggregate%head%5#0
        v-store aggregate%head%5#0
        v-load tmp%4#1                                                                            tmp%4#1
        len                                                                                       aggregate%value_len%0#0
        v-store aggregate%value_len%0#0
        v-load aggregate%value_len%0#0                                                            aggregate%value_len%0#0
        int 64                                                                                    aggregate%value_len%0#0,64
        <=                                                                                        aggregate%len_ok%0#0
        v-store aggregate%len_ok%0#0
        v-load aggregate%len_ok%0#0                                                               aggregate%len_ok%0#0
        assert // overflow
        int 64                                                                                    64
        bzero                                                                                     aggregate%bzero%0#0
        v-store aggregate%bzero%0#0
        v-load tmp%4#1                                                                            tmp%4#1
        v-load aggregate%bzero%0#0                                                                tmp%4#1,aggregate%bzero%0#0
        b|                                                                                        aggregate%arc4_encoded%0#0
        v-store aggregate%arc4_encoded%0#0
        v-load aggregate%head%5#0                                                                 aggregate%head%5#0
        v-load aggregate%arc4_encoded%0#0                                                         aggregate%head%5#0,aggregate%arc4_encoded%0#0
        concat                                                                                    aggregate%head%6#0
        v-store aggregate%head%6#0
        byte 0x00000000000000000000000000000000                                                   0x00000000000000000000000000000000
        v-load aggregate%head%6#0                                                                 0x00000000000000000000000000000000,aggregate%head%6#0
        concat                                                                                    aggregate%head%7#0
        v-store aggregate%head%7#0
        v-load y1#0                                                                               y1#0
        itob                                                                                      aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load x1#0                                                                               x1#0
        v-load aggregate%val_as_bytes%3#0                                                         x1#0,aggregate%val_as_bytes%3#0
        concat                                                                                    aggregate%head%10#0
        v-store aggregate%head%10#0
        v-load tmp%5#0                                                                            tmp%5#0
        itob                                                                                      aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        v-load tmp%6#0                                                                            tmp%6#0
        itob                                                                                      aggregate%val_as_bytes%5#0
        v-store aggregate%val_as_bytes%5#0
        v-load aggregate%val_as_bytes%4#0                                                         aggregate%val_as_bytes%4#0
        v-load aggregate%val_as_bytes%5#0                                                         aggregate%val_as_bytes%4#0,aggregate%val_as_bytes%5#0
        concat                                                                                    aggregate%head%12#0
        v-store aggregate%head%12#0
        v-load aggregate%head%12#0                                                                aggregate%head%12#0
        v-load tmp%7#0                                                                            aggregate%head%12#0,tmp%7#0
        concat                                                                                    aggregate%head%13#0
        v-store aggregate%head%13#0
        v-load aggregate%head%13#0                                                                aggregate%head%13#0
        v-load tmp%8#0                                                                            aggregate%head%13#0,tmp%8#0
        concat                                                                                    aggregate%head%14#0
        v-store aggregate%head%14#0
        v-load tmp%9#0                                                                            tmp%9#0
        len                                                                                       aggregate%value_len%1#0
        v-store aggregate%value_len%1#0
        v-load aggregate%value_len%1#0                                                            aggregate%value_len%1#0
        int 64                                                                                    aggregate%value_len%1#0,64
        <=                                                                                        aggregate%len_ok%1#0
        v-store aggregate%len_ok%1#0
        v-load aggregate%len_ok%1#0                                                               aggregate%len_ok%1#0
        assert // overflow
        v-load tmp%9#0                                                                            tmp%9#0
        v-load aggregate%bzero%0#0                                                                tmp%9#0,aggregate%bzero%0#0
        b|                                                                                        aggregate%arc4_encoded%1#0
        v-store aggregate%arc4_encoded%1#0
        v-load aggregate%head%14#0                                                                aggregate%head%14#0
        v-load aggregate%arc4_encoded%1#0                                                         aggregate%head%14#0,aggregate%arc4_encoded%1#0
        concat                                                                                    aggregate%head%15#0
        v-store aggregate%head%15#0
        v-load aggregate%head%10#0                                                                aggregate%head%10#0
        v-load aggregate%head%15#0                                                                aggregate%head%10#0,aggregate%head%15#0
        concat                                                                                    aggregate%head%16#0
        v-store aggregate%head%16#0
        v-load aggregate%head%7#0                                                                 aggregate%head%7#0
        v-load aggregate%head%16#0                                                                aggregate%head%7#0,aggregate%head%16#0
        concat                                                                                    aggregate%head%17#0
        v-store aggregate%head%17#0
        v-load y2#0                                                                               y2#0
        itob                                                                                      aggregate%val_as_bytes%6#0
        v-store aggregate%val_as_bytes%6#0
        v-load x2#0                                                                               x2#0
        v-load aggregate%val_as_bytes%6#0                                                         x2#0,aggregate%val_as_bytes%6#0
        concat                                                                                    aggregate%head%19#0
        v-store aggregate%head%19#0
        v-load tmp%10#0                                                                           tmp%10#0
        itob                                                                                      aggregate%val_as_bytes%7#0
        v-store aggregate%val_as_bytes%7#0
        v-load tmp%11#0                                                                           tmp%11#0
        itob                                                                                      aggregate%val_as_bytes%8#0
        v-store aggregate%val_as_bytes%8#0
        v-load aggregate%val_as_bytes%7#0                                                         aggregate%val_as_bytes%7#0
        v-load aggregate%val_as_bytes%8#0                                                         aggregate%val_as_bytes%7#0,aggregate%val_as_bytes%8#0
        concat                                                                                    aggregate%head%21#0
        v-store aggregate%head%21#0
        v-load aggregate%head%21#0                                                                aggregate%head%21#0
        v-load tmp%12#0                                                                           aggregate%head%21#0,tmp%12#0
        concat                                                                                    aggregate%head%22#0
        v-store aggregate%head%22#0
        v-load aggregate%head%22#0                                                                aggregate%head%22#0
        v-load tmp%13#0                                                                           aggregate%head%22#0,tmp%13#0
        concat                                                                                    aggregate%head%23#0
        v-store aggregate%head%23#0
        v-load tmp%14#0                                                                           tmp%14#0
        len                                                                                       aggregate%value_len%2#0
        v-store aggregate%value_len%2#0
        v-load aggregate%value_len%2#0                                                            aggregate%value_len%2#0
        int 64                                                                                    aggregate%value_len%2#0,64
        <=                                                                                        aggregate%len_ok%2#0
        v-store aggregate%len_ok%2#0
        v-load aggregate%len_ok%2#0                                                               aggregate%len_ok%2#0
        assert // overflow
        v-load tmp%14#0                                                                           tmp%14#0
        v-load aggregate%bzero%0#0                                                                tmp%14#0,aggregate%bzero%0#0
        b|                                                                                        aggregate%arc4_encoded%2#0
        v-store aggregate%arc4_encoded%2#0
        v-load aggregate%head%23#0                                                                aggregate%head%23#0
        v-load aggregate%arc4_encoded%2#0                                                         aggregate%head%23#0,aggregate%arc4_encoded%2#0
        concat                                                                                    aggregate%head%24#0
        v-store aggregate%head%24#0
        v-load aggregate%head%19#0                                                                aggregate%head%19#0
        v-load aggregate%head%24#0                                                                aggregate%head%19#0,aggregate%head%24#0
        concat                                                                                    aggregate%head%25#0
        v-store aggregate%head%25#0
        v-load aggregate%head%17#0                                                                aggregate%head%17#0
        v-load aggregate%head%25#0                                                                aggregate%head%17#0,aggregate%head%25#0
        concat                                                                                    aggregate%head%26#0
        v-store aggregate%head%26#0
        v-load aggregate%head%26#0                                                                aggregate%head%26#0
        v-store slot%0
        // array/static_size.py:51
        // for i in urange(3):
        int 0                                                                                     0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store i#0
        b test_array_for_header@2

    test_array_for_header@2:
        // array/static_size.py:51
        // for i in urange(3):
        v-load i#0                                                                                i#0
        int 3                                                                                     i#0,3
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz test_array_after_for@5 ; b test_array_for_body@3

    test_array_for_body@3:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:52
        // assert path[i].other.b == i + 1
        v-store slot_contents%0#0
        v-load i#0                                                                                i#0
        int 144                                                                                   i#0,144
        *                                                                                         aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load slot_contents%0#0                                                                  slot_contents%0#0
        v-load aggregate%bytes_offset%0#0                                                         slot_contents%0#0,aggregate%bytes_offset%0#0
        int 144                                                                                   slot_contents%0#0,aggregate%bytes_offset%0#0,144
        extract3 // on error: index access is out of bounds                                       aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        v-load aggregate%encoded_element%0#0                                                      aggregate%encoded_element%0#0
        extract 16 128                                                                            aggregate%extract%2#0
        v-store aggregate%extract%2#0
        v-load aggregate%extract%2#0                                                              aggregate%extract%2#0
        int 8                                                                                     aggregate%extract%2#0,8
        extract_uint64                                                                            aggregate%item1%1#0
        v-store aggregate%item1%1#0
        v-load i#0                                                                                i#0
        int 1                                                                                     i#0,1
        +                                                                                         tmp%15#0
        v-store tmp%15#0
        v-load aggregate%item1%1#0                                                                aggregate%item1%1#0
        v-load tmp%15#0                                                                           aggregate%item1%1#0,tmp%15#0
        ==                                                                                        tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                           tmp%16#0
        assert
        // array/static_size.py:53
        // assert path[i].other.d.foo == i + 2
        v-load aggregate%extract%2#0                                                              aggregate%extract%2#0
        extract 48 16                                                                             aggregate%extract%14#0
        v-store aggregate%extract%14#0
        v-load aggregate%extract%14#0                                                             aggregate%extract%14#0
        extract 0 8                                                                               aggregate%extract%16#0
        v-store aggregate%extract%16#0
        v-load i#0                                                                                i#0
        int 2                                                                                     i#0,2
        +                                                                                         tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                           tmp%17#0
        itob                                                                                      tmp%18#0
        v-store tmp%18#0
        v-load aggregate%extract%16#0                                                             aggregate%extract%16#0
        v-load tmp%18#0                                                                           aggregate%extract%16#0,tmp%18#0
        b==                                                                                       tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                           tmp%19#0
        assert
        // array/static_size.py:54
        // assert path[i].other.d.bar == (i + 1) * (i + 1)
        v-load aggregate%extract%14#0                                                             aggregate%extract%14#0
        extract 8 8                                                                               aggregate%extract%25#0
        v-store aggregate%extract%25#0
        v-load tmp%15#0                                                                           tmp%15#0
        v-load tmp%15#0                                                                           tmp%15#0,tmp%15#0
        *                                                                                         tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                                           tmp%22#0
        itob                                                                                      tmp%23#0
        v-store tmp%23#0
        v-load aggregate%extract%25#0                                                             aggregate%extract%25#0
        v-load tmp%23#0                                                                           aggregate%extract%25#0,tmp%23#0
        b==                                                                                       tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                           tmp%24#0
        assert
        v-load tmp%15#0                                                                           tmp%15#0
        v-store i#0
        b test_array_for_header@2

    test_array_after_for@5:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:56
        // Box(ImmutableArray[Point], key="a").value = path.freeze()
        v-store slot_contents%3#0
        v-load slot_contents%3#0                                                                  slot_contents%3#0
        len                                                                                       aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                                            aggregate%bytes_len%0#0
        int 144                                                                                   aggregate%bytes_len%0#0,144
        /                                                                                         aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                                            aggregate%array_len%0#0
        itob                                                                                      as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                                       as_bytes%0#0
        extract 6 2                                                                               as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load as_u16_bytes%0#0                                                                   as_u16_bytes%0#0
        v-load slot_contents%3#0                                                                  as_u16_bytes%0#0,slot_contents%3#0
        concat                                                                                    converted_array%0#0
        v-store converted_array%0#0
        byte "a"                                                                                  "a"
        box_del                                                                                   {box_del}
        pop 1
        byte "a"                                                                                  "a"
        v-load converted_array%0#0                                                                "a",converted_array%0#0
        box_put
        // array/static_size.py:169
        // last_point = path[0]
        v-load slot_contents%3#0                                                                  slot_contents%3#0
        extract 0 144 // on error: index access is out of bounds                                  aggregate%encoded_element%3#0
        v-store aggregate%encoded_element%3#0
        v-load aggregate%encoded_element%3#0                                                      aggregate%encoded_element%3#0
        extract 0 8                                                                               last_point.x#0
        v-store last_point.x#0
        v-load aggregate%encoded_element%3#0                                                      aggregate%encoded_element%3#0
        int 8                                                                                     aggregate%encoded_element%3#0,8
        extract_uint64                                                                            last_point.y#0
        v-store last_point.y#0
        // array/static_size.py:170
        // length = UInt64()
        int 0                                                                                     0
        v-store length#0
        // array/static_size.py:171
        // for point_idx in urange(1, path.length):
        int 1                                                                                     1
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store point_idx#0
        b test_array_for_header@7

    test_array_for_header@7:
        // array/static_size.py:171
        // for point_idx in urange(1, path.length):
        v-load point_idx#0                                                                        point_idx#0
        v-load aggregate%array_len%0#0                                                            point_idx#0,aggregate%array_len%0#0
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz test_array_after_for@15 ; b test_array_for_body@8

    test_array_for_body@8:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:172
        // point = path[point_idx]
        v-store slot_contents%1#1
        v-load point_idx#0                                                                        point_idx#0
        int 144                                                                                   point_idx#0,144
        *                                                                                         aggregate%bytes_offset%4#0
        v-store aggregate%bytes_offset%4#0
        v-load slot_contents%1#1                                                                  slot_contents%1#1
        v-load aggregate%bytes_offset%4#0                                                         slot_contents%1#1,aggregate%bytes_offset%4#0
        int 144                                                                                   slot_contents%1#1,aggregate%bytes_offset%4#0,144
        extract3 // on error: index access is out of bounds                                       aggregate%encoded_element%4#0
        v-store aggregate%encoded_element%4#0
        v-load aggregate%encoded_element%4#0                                                      aggregate%encoded_element%4#0
        extract 0 8                                                                               point.x#0
        v-store point.x#0
        v-load aggregate%encoded_element%4#0                                                      aggregate%encoded_element%4#0
        int 8                                                                                     aggregate%encoded_element%4#0,8
        extract_uint64                                                                            point.y#0
        v-store point.y#0
        // array/static_size.py:173
        // if point.x < last_point.x:
        v-load point.x#0                                                                          point.x#0
        v-load last_point.x#0                                                                     point.x#0,last_point.x#0
        b<                                                                                        tmp%1#2
        v-store tmp%1#2
        v-load tmp%1#2                                                                            tmp%1#2
        bz test_array_else_body@10 ; b test_array_if_body@9

    test_array_if_body@9:
        // array/static_size.py:174
        // dx = last_point.x.as_uint64() - point.x.as_uint64()
        v-load aggregate%encoded_element%3#0                                                      aggregate%encoded_element%3#0
        // array/static_size.py:169
        // last_point = path[0]
        int 0                                                                                     aggregate%encoded_element%3#0,0
        // array/static_size.py:174
        // dx = last_point.x.as_uint64() - point.x.as_uint64()
        extract_uint64                                                                            tmp%2#2
        v-store tmp%2#2
        v-load aggregate%encoded_element%4#0                                                      aggregate%encoded_element%4#0
        // array/static_size.py:172
        // point = path[point_idx]
        int 0                                                                                     aggregate%encoded_element%4#0,0
        // array/static_size.py:174
        // dx = last_point.x.as_uint64() - point.x.as_uint64()
        extract_uint64                                                                            tmp%3#2
        v-store tmp%3#2
        v-load tmp%2#2                                                                            tmp%2#2
        v-load tmp%3#2                                                                            tmp%2#2,tmp%3#2
        -                                                                                         dx#0
        v-store dx#0
        b test_array_after_if_else@11

    test_array_else_body@10:
        // array/static_size.py:176
        // dx = point.x.as_uint64() - last_point.x.as_uint64()
        v-load aggregate%encoded_element%4#0                                                      aggregate%encoded_element%4#0
        // array/static_size.py:172
        // point = path[point_idx]
        int 0                                                                                     aggregate%encoded_element%4#0,0
        // array/static_size.py:176
        // dx = point.x.as_uint64() - last_point.x.as_uint64()
        extract_uint64                                                                            tmp%5#0
        v-store tmp%5#0
        v-load aggregate%encoded_element%3#0                                                      aggregate%encoded_element%3#0
        // array/static_size.py:169
        // last_point = path[0]
        int 0                                                                                     aggregate%encoded_element%3#0,0
        // array/static_size.py:176
        // dx = point.x.as_uint64() - last_point.x.as_uint64()
        extract_uint64                                                                            tmp%6#0
        v-store tmp%6#0
        v-load tmp%5#0                                                                            tmp%5#0
        v-load tmp%6#0                                                                            tmp%5#0,tmp%6#0
        -                                                                                         dx#0
        v-store dx#0
        b test_array_after_if_else@11

    test_array_after_if_else@11:
        // array/static_size.py:177
        // if point.y < last_point.y:
        v-load point.y#0                                                                          point.y#0
        v-load last_point.y#0                                                                     point.y#0,last_point.y#0
        <                                                                                         tmp%8#1
        v-store tmp%8#1
        v-load tmp%8#1                                                                            tmp%8#1
        bz test_array_else_body@13 ; b test_array_if_body@12

    test_array_if_body@12:
        // array/static_size.py:178
        // dy = last_point.y - point.y
        v-load last_point.y#0                                                                     last_point.y#0
        v-load point.y#0                                                                          last_point.y#0,point.y#0
        -                                                                                         dy#0
        v-store dy#0
        b test_array_after_if_else@14

    test_array_else_body@13:
        // array/static_size.py:180
        // dy = point.y - last_point.y
        v-load point.y#0                                                                          point.y#0
        v-load last_point.y#0                                                                     point.y#0,last_point.y#0
        -                                                                                         dy#0
        v-store dy#0
        b test_array_after_if_else@14

    test_array_after_if_else@14:
        // array/static_size.py:181
        // length += op.sqrt(dx * dx + dy * dy)
        v-load dx#0                                                                               dx#0
        v-load dx#0                                                                               dx#0,dx#0
        *                                                                                         tmp%11#0
        v-store tmp%11#0
        v-load dy#0                                                                               dy#0
        v-load dy#0                                                                               dy#0,dy#0
        *                                                                                         tmp%12#1
        v-store tmp%12#1
        v-load tmp%11#0                                                                           tmp%11#0
        v-load tmp%12#1                                                                           tmp%11#0,tmp%12#1
        +                                                                                         tmp%13#1
        v-store tmp%13#1
        v-load tmp%13#1                                                                           tmp%13#1
        sqrt                                                                                      tmp%14#1
        v-store tmp%14#1
        v-load length#0                                                                           length#0
        v-load tmp%14#1                                                                           length#0,tmp%14#1
        +                                                                                         length#0
        v-store length#0
        // array/static_size.py:171
        // for point_idx in urange(1, path.length):
        v-load point_idx#0                                                                        point_idx#0
        int 1                                                                                     point_idx#0,1
        +                                                                                         value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store point_idx#0
        b test_array_for_header@7

    test_array_after_for@15:
        // array/static_size.py:41
        // @arc4.abimethod()
        v-load length#0                                                                           length#0
        itob                                                                                      aggregate%val_as_bytes%9#0
        v-store aggregate%val_as_bytes%9#0
        byte 0x151f7c75                                                                           0x151f7c75
        v-load aggregate%val_as_bytes%9#0                                                         0x151f7c75,aggregate%val_as_bytes%9#0
        concat                                                                                    tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                            tmp%4#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple[routing]() -> void:
subroutine test_extend_from_tuple:
    test_extend_from_tuple_block@0:
        // array/static_size.py:59
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0
        v-store reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0
        v-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0                           reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0
        extract 0 16                                                                              some_more.0#0
        v-store some_more.0#0
        v-load reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0                           reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0
        extract 16 16                                                                             some_more.1#0
        v-store some_more.1#0
        // array/static_size.py:62
        // arr.extend(some_more)
        v-load some_more.0#0                                                                      some_more.0#0
        v-load some_more.1#0                                                                      some_more.0#0,some_more.1#0
        concat                                                                                    aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load aggregate%head%1#0                                                                 aggregate%head%1#0
        v-store slot%0
        // array/static_size.py:63
        // last = arr[-1]
        v-load aggregate%head%1#0                                                                 aggregate%head%1#0
        len                                                                                       aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                                            aggregate%bytes_len%0#0
        int 16                                                                                    aggregate%bytes_len%0#0,16
        /                                                                                         aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                                            aggregate%array_len%0#0
        int 1                                                                                     aggregate%array_len%0#0,1
        -                                                                                         tmp%2#1
        v-store tmp%2#1
        v-load tmp%2#1                                                                            tmp%2#1
        int 16                                                                                    tmp%2#1,16
        *                                                                                         aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load aggregate%head%1#0                                                                 aggregate%head%1#0
        v-load aggregate%bytes_offset%0#0                                                         aggregate%head%1#0,aggregate%bytes_offset%0#0
        int 16                                                                                    aggregate%head%1#0,aggregate%bytes_offset%0#0,16
        extract3 // on error: index access is out of bounds                                       last#0
        v-store last#0
        // array/static_size.py:64
        // assert last == some_more[1]
        v-load last#0                                                                             last#0
        v-load some_more.1#0                                                                      last#0,some_more.1#0
        ==                                                                                        tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                            tmp%3#1
        assert
        // array/static_size.py:65
        // result = arr.freeze()
        v-load aggregate%array_len%0#0                                                            aggregate%array_len%0#0
        itob                                                                                      as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                                       as_bytes%0#0
        extract 6 2                                                                               as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load as_u16_bytes%0#0                                                                   as_u16_bytes%0#0
        v-load aggregate%head%1#0                                                                 as_u16_bytes%0#0,aggregate%head%1#0
        concat                                                                                    result#0
        v-store result#0
        // array/static_size.py:66
        // assert result[-1] == last
        v-load result#0                                                                           result#0
        int 0                                                                                     result#0,0
        extract_uint16                                                                            aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                                         aggregate%array_length%0#0
        int 1                                                                                     aggregate%array_length%0#0,1
        -                                                                                         tmp%6#0
        v-store tmp%6#0
        v-load result#0                                                                           result#0
        extract 2 0                                                                               aggregate%array_trimmed%0#0
        v-store aggregate%array_trimmed%0#0
        v-load tmp%6#0                                                                            tmp%6#0
        int 16                                                                                    tmp%6#0,16
        *                                                                                         aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0
        v-load aggregate%array_trimmed%0#0                                                        aggregate%array_trimmed%0#0
        v-load aggregate%bytes_offset%1#0                                                         aggregate%array_trimmed%0#0,aggregate%bytes_offset%1#0
        int 16                                                                                    aggregate%array_trimmed%0#0,aggregate%bytes_offset%1#0,16
        extract3 // on error: index access is out of bounds                                       aggregate%encoded_element%1#0
        v-store aggregate%encoded_element%1#0
        v-load aggregate%encoded_element%1#0                                                      aggregate%encoded_element%1#0
        v-load last#0                                                                             aggregate%encoded_element%1#0,last#0
        ==                                                                                        tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                            tmp%7#0
        assert
        // array/static_size.py:59
        // @arc4.abimethod()
        byte 0x151f7c75                                                                           0x151f7c75
        v-load result#0                                                                           0x151f7c75,result#0
        concat                                                                                    tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                            tmp%3#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple[routing]() -> void:
subroutine test_extend_from_arc4_tuple:
    test_extend_from_arc4_tuple_block@0:
        // array/static_size.py:69
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    some_more#0
        v-store some_more#0
        // array/static_size.py:74
        // arr.extend(some_more)
        v-load some_more#0                                                                        some_more#0
        v-store slot%0
        // array/static_size.py:75
        // return arr.freeze()
        v-load some_more#0                                                                        some_more#0
        len                                                                                       aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                                            aggregate%bytes_len%0#0
        int 16                                                                                    aggregate%bytes_len%0#0,16
        /                                                                                         aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                                            aggregate%array_len%0#0
        itob                                                                                      as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                                       as_bytes%0#0
        extract 6 2                                                                               as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load as_u16_bytes%0#0                                                                   as_u16_bytes%0#0
        v-load some_more#0                                                                        as_u16_bytes%0#0,some_more#0
        concat                                                                                    converted_array%0#0
        v-store converted_array%0#0
        // array/static_size.py:69
        // @arc4.abimethod()
        byte 0x151f7c75                                                                           0x151f7c75
        v-load converted_array%0#0                                                                0x151f7c75,converted_array%0#0
        concat                                                                                    tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.test_bool_array[routing]() -> void:
subroutine test_bool_array:
    test_bool_array_block@0:
        // array/static_size.py:77
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                    reinterpret_Encoded(uint64)%0#0
        btoi                                                                                      length#0
        v-store length#0
        // array/static_size.py:79
        // arr = ReferenceArray[bool]()
        byte 0x                                                                                   0x
        v-store slot%0
        // array/static_size.py:82
        // for i in urange(1, length + 1):
        v-load length#0                                                                           length#0
        int 1                                                                                     length#0,1
        +                                                                                         tmp%2#1
        v-store tmp%2#1
        int 1                                                                                     1
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store i#0
        b test_bool_array_for_header@2

    test_bool_array_for_header@2:
        // array/static_size.py:82
        // for i in urange(1, length + 1):
        v-load i#0                                                                                i#0
        v-load tmp%2#1                                                                            i#0,tmp%2#1
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz test_bool_array_after_for@5 ; b test_bool_array_for_body@3

    test_bool_array_for_body@3:
        // array/static_size.py:83
        // arr.append(i % 2 == 0)
        v-load i#0                                                                                i#0
        int 2                                                                                     i#0,2
        %                                                                                         tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                            tmp%3#1
        !                                                                                         tmp%4#0
        v-store tmp%4#0
        v-load slot%0                                                                             slot%0
        v-store slot_contents%0#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load tmp%4#0                                                                            0x00,0,tmp%4#0
        setbit                                                                                    aggregate%encoded_bool%0#0
        v-store aggregate%encoded_bool%0#0
        v-load slot_contents%0#0                                                                  slot_contents%0#0
        v-load aggregate%encoded_bool%0#0                                                         slot_contents%0#0,aggregate%encoded_bool%0#0
        concat // on error: max array length exceeded                                             concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                                         concat%0#0
        v-store slot%0
        // array/static_size.py:82
        // for i in urange(1, length + 1):
        v-load i#0                                                                                i#0
        int 1                                                                                     i#0,1
        +                                                                                         value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store i#0
        b test_bool_array_for_header@2

    test_bool_array_after_for@5:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:84
        // assert arr.length == length, "expected correct length"
        v-store aggregate%slot_contents%1#0
        v-load aggregate%slot_contents%1#0                                                        aggregate%slot_contents%1#0
        len                                                                                       aggregate%bytes_len%1#0
        v-store aggregate%bytes_len%1#0
        v-load aggregate%bytes_len%1#0                                                            aggregate%bytes_len%1#0
        v-load length#0                                                                           aggregate%bytes_len%1#0,length#0
        ==                                                                                        tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                            tmp%7#0
        assert // expected correct length
        // array/static_size.py:86
        // arr2 = arr.copy()
        v-load aggregate%slot_contents%1#0                                                        aggregate%slot_contents%1#0
        v-store slot%1
        v-load slot%0                                                                             slot%0
        // array/static_size.py:87
        // arr2.extend(arr)
        v-store slot_contents%2#0
        v-load aggregate%slot_contents%1#0                                                        aggregate%slot_contents%1#0
        v-load slot_contents%2#0                                                                  aggregate%slot_contents%1#0,slot_contents%2#0
        concat // on error: max array length exceeded                                             concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                                         concat%1#0
        v-store slot%1
        // array/static_size.py:88
        // assert arr2.length == length * 2, "expected correct length"
        v-load concat%1#0                                                                         concat%1#0
        len                                                                                       aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        v-load length#0                                                                           length#0
        int 2                                                                                     length#0,2
        *                                                                                         tmp%9#0
        v-store tmp%9#0
        v-load aggregate%bytes_len%2#0                                                            aggregate%bytes_len%2#0
        v-load tmp%9#0                                                                            aggregate%bytes_len%2#0,tmp%9#0
        ==                                                                                        tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                           tmp%10#0
        assert // expected correct length
        // array/static_size.py:90
        // count = UInt64(0)
        int 0                                                                                     0
        v-store count#0
        v-load slot%0                                                                             slot%0
        // array/static_size.py:91
        // for val in arr:
        v-store aggregate%slot_contents%3#0
        v-load aggregate%slot_contents%3#0                                                        aggregate%slot_contents%3#0
        len                                                                                       aggregate%bytes_len%3#0
        v-store aggregate%bytes_len%3#0
        int 0                                                                                     0
        v-store item_index_internal%0#0
        b test_bool_array_for_header@6

    test_bool_array_for_header@6:
        // array/static_size.py:91
        // for val in arr:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        v-load aggregate%bytes_len%3#0                                                            item_index_internal%0#0,aggregate%bytes_len%3#0
        <                                                                                         continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                               continue_looping%1#0
        bz test_bool_array_after_for@11 ; b test_bool_array_for_body@7

    test_bool_array_for_body@7:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:91
        // for val in arr:
        v-store slot_contents%4#0
        v-load slot_contents%4#0                                                                  slot_contents%4#0
        v-load item_index_internal%0#0                                                            slot_contents%4#0,item_index_internal%0#0
        int 1                                                                                     slot_contents%4#0,item_index_internal%0#0,1
        extract3 // on error: index access is out of bounds                                       aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        v-load aggregate%encoded_element%0#0                                                      aggregate%encoded_element%0#0
        int 0                                                                                     aggregate%encoded_element%0#0,0
        getbit                                                                                    val#0
        v-store val#0
        // array/static_size.py:92
        // if val:
        v-load val#0                                                                              val#0
        bz test_bool_array_after_if_else@9 ; b test_bool_array_if_body@8

    test_bool_array_if_body@8:
        // array/static_size.py:93
        // count += 1
        v-load count#0                                                                            count#0
        int 1                                                                                     count#0,1
        +                                                                                         count#0
        v-store count#0
        b test_bool_array_after_if_else@9

    test_bool_array_after_if_else@9:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 1                                                                                     item_index_internal%0#0,1
        +                                                                                         item_index_internal%0#0
        v-store item_index_internal%0#0
        b test_bool_array_for_header@6

    test_bool_array_after_for@11:
        // array/static_size.py:77
        // @arc4.abimethod()
        v-load count#0                                                                            count#0
        itob                                                                                      aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                           0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                         0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                    tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                            tmp%3#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.test_arc4_conversion[routing]() -> void:
subroutine test_arc4_conversion:
    test_arc4_conversion_block@0:
        // array/static_size.py:96
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                    reinterpret_Encoded(uint64)%0#0
        btoi                                                                                      length#0
        v-store length#0
        // array/static_size.py:98
        // arr = ReferenceArray[arc4.UInt64]()
        byte 0x                                                                                   0x
        v-store slot%0
        // array/static_size.py:101
        // for i in urange(1, length + 1):
        v-load length#0                                                                           length#0
        int 1                                                                                     length#0,1
        +                                                                                         tmp%2#1
        v-store tmp%2#1
        int 1                                                                                     1
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store i#0
        b test_arc4_conversion_for_header@2

    test_arc4_conversion_for_header@2:
        // array/static_size.py:101
        // for i in urange(1, length + 1):
        v-load i#0                                                                                i#0
        v-load tmp%2#1                                                                            i#0,tmp%2#1
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz test_arc4_conversion_after_for@5 ; b test_arc4_conversion_for_body@3

    test_arc4_conversion_for_body@3:
        // array/static_size.py:102
        // arr.append(arc4.UInt64(i))
        v-load i#0                                                                                i#0
        itob                                                                                      aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot%0                                                                             slot%0
        v-store slot_contents%0#0
        v-load slot_contents%0#0                                                                  slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                                         slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                             concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                                         concat%0#0
        v-store slot%0
        // array/static_size.py:101
        // for i in urange(1, length + 1):
        v-load i#0                                                                                i#0
        int 1                                                                                     i#0,1
        +                                                                                         value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                                 value_internal%0#0
        v-store i#0
        b test_arc4_conversion_for_header@2

    test_arc4_conversion_after_for@5:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:103
        // assert arr.length == length, "expected correct length"
        v-store aggregate%slot_contents%1#0
        v-load aggregate%slot_contents%1#0                                                        aggregate%slot_contents%1#0
        len                                                                                       aggregate%bytes_len%1#0
        v-store aggregate%bytes_len%1#0
        v-load aggregate%bytes_len%1#0                                                            aggregate%bytes_len%1#0
        int 8                                                                                     aggregate%bytes_len%1#0,8
        /                                                                                         aggregate%array_len%1#0
        v-store aggregate%array_len%1#0
        v-load aggregate%array_len%1#0                                                            aggregate%array_len%1#0
        v-load length#0                                                                           aggregate%array_len%1#0,length#0
        ==                                                                                        tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                            tmp%6#0
        assert // expected correct length
        // array/static_size.py:104
        // count = UInt64(0)
        int 0                                                                                     0
        v-store count#0
        int 0                                                                                     0
        v-store item_index_internal%0#0
        b test_arc4_conversion_for_header@6

    test_arc4_conversion_for_header@6:
        // array/static_size.py:105
        // for val in arr:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        v-load aggregate%array_len%1#0                                                            item_index_internal%0#0,aggregate%array_len%1#0
        <                                                                                         continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                               continue_looping%1#0
        bz test_arc4_conversion_after_for@11 ; b test_arc4_conversion_for_body@7

    test_arc4_conversion_for_body@7:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:105
        // for val in arr:
        v-store slot_contents%1#0
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 8                                                                                     item_index_internal%0#0,8
        *                                                                                         aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load slot_contents%1#0                                                                  slot_contents%1#0
        v-load aggregate%bytes_offset%0#0                                                         slot_contents%1#0,aggregate%bytes_offset%0#0
        int 8                                                                                     slot_contents%1#0,aggregate%bytes_offset%0#0,8
        extract3 // on error: index access is out of bounds                                       val#0
        v-store val#0
        // array/static_size.py:106
        // if val:
        v-load val#0                                                                              val#0
        byte 0x                                                                                   val#0,0x
        b!=                                                                                       tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                            tmp%7#0
        bz test_arc4_conversion_after_if_else@9 ; b test_arc4_conversion_if_body@8

    test_arc4_conversion_if_body@8:
        // array/static_size.py:107
        // count += 1
        v-load count#0                                                                            count#0
        int 1                                                                                     count#0,1
        +                                                                                         count#0
        v-store count#0
        b test_arc4_conversion_after_if_else@9

    test_arc4_conversion_after_if_else@9:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 1                                                                                     item_index_internal%0#0,1
        +                                                                                         item_index_internal%0#0
        v-store item_index_internal%0#0
        b test_arc4_conversion_for_header@6

    test_arc4_conversion_after_for@11:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:110
        // arc4_arr.extend(arr)
        v-store slot_contents%2#0
        // array/static_size.py:109
        // arc4_arr = arc4.DynamicArray[arc4.UInt64]()
        byte 0x0000                                                                               0x0000
        // array/static_size.py:110
        // arc4_arr.extend(arr)
        v-load slot_contents%2#0                                                                  0x0000,slot_contents%2#0
        concat // on error: max array length exceeded                                             concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                                         concat%1#0
        extract 2 0                                                                               extract_to_end%0#0
        v-store extract_to_end%0#0
        v-load extract_to_end%0#0                                                                 extract_to_end%0#0
        len                                                                                       len%0#0
        v-store len%0#0
        v-load len%0#0                                                                            len%0#0
        int 8                                                                                     len%0#0,8
        /                                                                                         div_floor%0#0
        v-store div_floor%0#0
        v-load div_floor%0#0                                                                      div_floor%0#0
        itob                                                                                      as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                                       as_bytes%0#0
        extract 6 2                                                                               as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load concat%1#0                                                                         concat%1#0
        v-load as_u16_bytes%0#0                                                                   concat%1#0,as_u16_bytes%0#0
        replace2 0                                                                                arc4_arr#1
        v-store arc4_arr#1
        // array/static_size.py:96
        // @arc4.abimethod()
        byte 0x151f7c75                                                                           0x151f7c75
        v-load arc4_arr#1                                                                         0x151f7c75,arc4_arr#1
        concat                                                                                    tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.sum_array[routing]() -> void:
subroutine sum_array:
    sum_array_block@0:
        // array/static_size.py:114
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                                    arc4_arr#0
        v-store arc4_arr#0
        // array/static_size.py:117
        // arr.extend(arc4_arr)
        v-load arc4_arr#0                                                                         arc4_arr#0
        extract 2 0                                                                               extract_to_end%0#0
        v-store extract_to_end%0#0
        v-load extract_to_end%0#0                                                                 extract_to_end%0#0
        v-store slot%0
        // array/static_size.py:119
        // total = UInt64(0)
        int 0                                                                                     0
        v-store total#0
        // array/static_size.py:120
        // for item in arr:
        v-load extract_to_end%0#0                                                                 extract_to_end%0#0
        len                                                                                       aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                                            aggregate%bytes_len%0#0
        int 8                                                                                     aggregate%bytes_len%0#0,8
        /                                                                                         aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        int 0                                                                                     0
        v-store item_index_internal%0#0
        b sum_array_for_header@2

    sum_array_for_header@2:
        // array/static_size.py:120
        // for item in arr:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        v-load aggregate%array_len%0#0                                                            item_index_internal%0#0,aggregate%array_len%0#0
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz sum_array_after_for@5 ; b sum_array_for_body@3

    sum_array_for_body@3:
        v-load slot%0                                                                             slot%0
        // array/static_size.py:120
        // for item in arr:
        v-store slot_contents%1#0
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 8                                                                                     item_index_internal%0#0,8
        *                                                                                         aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        // array/static_size.py:121
        // total += item.as_uint64()
        v-load slot_contents%1#0                                                                  slot_contents%1#0
        v-load aggregate%bytes_offset%0#0                                                         slot_contents%1#0,aggregate%bytes_offset%0#0
        extract_uint64                                                                            tmp%0#1
        v-store tmp%0#1
        v-load total#0                                                                            total#0
        v-load tmp%0#1                                                                            total#0,tmp%0#1
        +                                                                                         total#0
        v-store total#0
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 1                                                                                     item_index_internal%0#0,1
        +                                                                                         item_index_internal%0#0
        v-store item_index_internal%0#0
        b sum_array_for_header@2

    sum_array_after_for@5:
        // array/static_size.py:114
        // @arc4.abimethod()
        v-load total#0                                                                            total#0
        itob                                                                                      aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                           0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                         0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                    tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.test_arc4_bool[routing]() -> void:
subroutine test_arc4_bool:
    test_arc4_bool_block@0:
        // array/static_size.py:143
        // arr.append(arc4.Bool(Txn.sender == Txn.receiver))
        txn Sender                                                                                tmp%0#1
        v-store tmp%0#1
        txn Receiver                                                                              tmp%1#1
        v-store tmp%1#1
        v-load tmp%0#1                                                                            tmp%0#1
        v-load tmp%1#1                                                                            tmp%0#1,tmp%1#1
        ==                                                                                        tmp%2#0
        v-store tmp%2#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load tmp%2#0                                                                            0x00,0,tmp%2#0
        setbit                                                                                    aggregate%encoded_bool%0#0
        v-store aggregate%encoded_bool%0#0
        // array/static_size.py:144
        // arr.append(arc4.Bool(Txn.sender != Txn.receiver))
        txn Sender                                                                                tmp%5#0
        v-store tmp%5#0
        txn Receiver                                                                              tmp%6#0
        v-store tmp%6#0
        v-load tmp%5#0                                                                            tmp%5#0
        v-load tmp%6#0                                                                            tmp%5#0,tmp%6#0
        !=                                                                                        tmp%7#0
        v-store tmp%7#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load tmp%7#0                                                                            0x00,0,tmp%7#0
        setbit                                                                                    aggregate%encoded_bool%1#0
        v-store aggregate%encoded_bool%1#0
        v-load aggregate%encoded_bool%0#0                                                         aggregate%encoded_bool%0#0
        v-load aggregate%encoded_bool%1#0                                                         aggregate%encoded_bool%0#0,aggregate%encoded_bool%1#0
        concat // on error: max array length exceeded                                             concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                                         concat%1#0
        v-store slot%0
        // array/static_size.py:147
        // dyn_arr.extend(arr)
        v-load concat%1#0                                                                         concat%1#0
        len                                                                                       aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        // array/static_size.py:146
        // dyn_arr = arc4.DynamicArray[arc4.Bool]()
        byte 0x0000                                                                               0x0000
        // array/static_size.py:147
        // dyn_arr.extend(arr)
        v-load concat%1#0                                                                         0x0000,concat%1#0
        v-load aggregate%bytes_len%0#0                                                            0x0000,concat%1#0,aggregate%bytes_len%0#0
        int 8                                                                                     0x0000,concat%1#0,aggregate%bytes_len%0#0,8
        callsub dynamic_array_concat_bits                                                         dyn_arr#1
        v-store dyn_arr#1
        // array/static_size.py:148
        // assert dyn_arr.length == 2, "expected correct length"
        v-load dyn_arr#1                                                                          dyn_arr#1
        int 0                                                                                     dyn_arr#1,0
        extract_uint16                                                                            aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                                         aggregate%array_length%0#0
        int 2                                                                                     aggregate%array_length%0#0,2
        ==                                                                                        tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                           tmp%12#0
        assert // expected correct length
        // array/static_size.py:149
        // assert dyn_arr.bytes.length == 3, "expected 3 bytes"
        v-load dyn_arr#1                                                                          dyn_arr#1
        len                                                                                       tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                           tmp%13#0
        int 3                                                                                     tmp%13#0,3
        ==                                                                                        tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                           tmp%14#0
        assert // expected 3 bytes
        // array/static_size.py:150
        // assert dyn_arr[0] == (Txn.sender == Txn.receiver), "expected correct value at 0"
        v-load aggregate%array_length%0#0                                                         aggregate%array_length%0#0
        assert // index access is out of bounds
        v-load dyn_arr#1                                                                          dyn_arr#1
        int 16                                                                                    dyn_arr#1,16
        getbit                                                                                    aggregate%get_bit%0#0
        v-store aggregate%get_bit%0#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load aggregate%get_bit%0#0                                                              0x00,0,aggregate%get_bit%0#0
        setbit                                                                                    aggregate%encoded_bool%2#0
        v-store aggregate%encoded_bool%2#0
        v-load aggregate%encoded_bool%2#0                                                         aggregate%encoded_bool%2#0
        int 0                                                                                     aggregate%encoded_bool%2#0,0
        getbit                                                                                    aggregate%get_bit%1#0
        v-store aggregate%get_bit%1#0
        txn Sender                                                                                tmp%16#0
        v-store tmp%16#0
        txn Receiver                                                                              tmp%17#0
        v-store tmp%17#0
        v-load tmp%16#0                                                                           tmp%16#0
        v-load tmp%17#0                                                                           tmp%16#0,tmp%17#0
        ==                                                                                        tmp%18#0
        v-store tmp%18#0
        v-load aggregate%get_bit%1#0                                                              aggregate%get_bit%1#0
        v-load tmp%18#0                                                                           aggregate%get_bit%1#0,tmp%18#0
        ==                                                                                        tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                           tmp%19#0
        assert // expected correct value at 0
        // array/static_size.py:151
        // assert dyn_arr[1] == (Txn.sender != Txn.receiver), "expected correct value at 1"
        int 1                                                                                     1
        v-load aggregate%array_length%0#0                                                         1,aggregate%array_length%0#0
        <                                                                                         aggregate%lt%1#0
        v-store aggregate%lt%1#0
        v-load aggregate%lt%1#0                                                                   aggregate%lt%1#0
        assert // index access is out of bounds
        v-load dyn_arr#1                                                                          dyn_arr#1
        int 17                                                                                    dyn_arr#1,17
        getbit                                                                                    aggregate%get_bit%2#0
        v-store aggregate%get_bit%2#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load aggregate%get_bit%2#0                                                              0x00,0,aggregate%get_bit%2#0
        setbit                                                                                    aggregate%encoded_bool%3#0
        v-store aggregate%encoded_bool%3#0
        v-load aggregate%encoded_bool%3#0                                                         aggregate%encoded_bool%3#0
        int 0                                                                                     aggregate%encoded_bool%3#0,0
        getbit                                                                                    aggregate%get_bit%3#0
        v-store aggregate%get_bit%3#0
        txn Sender                                                                                tmp%21#0
        v-store tmp%21#0
        txn Receiver                                                                              tmp%22#0
        v-store tmp%22#0
        v-load tmp%21#0                                                                           tmp%21#0
        v-load tmp%22#0                                                                           tmp%21#0,tmp%22#0
        !=                                                                                        tmp%23#0
        v-store tmp%23#0
        v-load aggregate%get_bit%3#0                                                              aggregate%get_bit%3#0
        v-load tmp%23#0                                                                           aggregate%get_bit%3#0,tmp%23#0
        ==                                                                                        tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                                           tmp%24#0
        assert // expected correct value at 1
        // array/static_size.py:153
        // arr2 = arr.copy()
        v-load concat%1#0                                                                         concat%1#0
        v-store slot%1
        int 0                                                                                     0
        v-store item_index_internal%0#0
        b test_arc4_bool_for_header@2

    test_arc4_bool_for_header@2:
        // array/static_size.py:156
        // for b in dyn_arr:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        v-load aggregate%array_length%0#0                                                         item_index_internal%0#0,aggregate%array_length%0#0
        <                                                                                         continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                               continue_looping%0#0
        bz test_arc4_bool_after_for@5 ; b test_arc4_bool_for_body@3

    test_arc4_bool_for_body@3:
        // array/static_size.py:156
        // for b in dyn_arr:
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 16                                                                                    item_index_internal%0#0,16
        +                                                                                         aggregate%add%2#0
        v-store aggregate%add%2#0
        v-load dyn_arr#1                                                                          dyn_arr#1
        v-load aggregate%add%2#0                                                                  dyn_arr#1,aggregate%add%2#0
        getbit                                                                                    aggregate%get_bit%4#0
        v-store aggregate%get_bit%4#0
        byte 0x00                                                                                 0x00
        int 0                                                                                     0x00,0
        v-load aggregate%get_bit%4#0                                                              0x00,0,aggregate%get_bit%4#0
        setbit                                                                                    b#0
        v-store b#0
        v-load slot%1                                                                             slot%1
        // array/static_size.py:157
        // arr2.append(b)
        v-store slot_contents%4#0
        v-load slot_contents%4#0                                                                  slot_contents%4#0
        v-load b#0                                                                                slot_contents%4#0,b#0
        concat // on error: max array length exceeded                                             concat%2#0
        v-store concat%2#0
        v-load concat%2#0                                                                         concat%2#0
        v-store slot%1
        v-load item_index_internal%0#0                                                            item_index_internal%0#0
        int 1                                                                                     item_index_internal%0#0,1
        +                                                                                         item_index_internal%0#0
        v-store item_index_internal%0#0
        b test_arc4_bool_for_header@2

    test_arc4_bool_after_for@5:
        v-load slot%1                                                                             slot%1
        // array/static_size.py:158
        // assert arr2.length == 4, "expected correct length"
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                                        aggregate%slot_contents%0#0
        len                                                                                       aggregate%bytes_len%1#0
        v-store aggregate%bytes_len%1#0
        v-load aggregate%bytes_len%1#0                                                            aggregate%bytes_len%1#0
        int 4                                                                                     aggregate%bytes_len%1#0,4
        ==                                                                                        tmp%27#0
        v-store tmp%27#0
        v-load tmp%27#0                                                                           tmp%27#0
        assert // expected correct length
        // array/static_size.py:159
        // assert arr2[0] == (Txn.sender == Txn.receiver), "expected correct value at 0"
        v-load aggregate%slot_contents%0#0                                                        aggregate%slot_contents%0#0
        extract 0 1 // on error: index access is out of bounds                                    aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        v-load aggregate%encoded_element%0#0                                                      aggregate%encoded_element%0#0
        int 0                                                                                     aggregate%encoded_element%0#0,0
        getbit                                                                                    aggregate%get_bit%5#0
        v-store aggregate%get_bit%5#0
        txn Sender                                                                                tmp%29#0
        v-store tmp%29#0
        txn Receiver                                                                              tmp%30#0
        v-store tmp%30#0
        v-load tmp%29#0                                                                           tmp%29#0
        v-load tmp%30#0                                                                           tmp%29#0,tmp%30#0
        ==                                                                                        tmp%31#0
        v-store tmp%31#0
        v-load aggregate%get_bit%5#0                                                              aggregate%get_bit%5#0
        v-load tmp%31#0                                                                           aggregate%get_bit%5#0,tmp%31#0
        ==                                                                                        tmp%32#0
        v-store tmp%32#0
        v-load tmp%32#0                                                                           tmp%32#0
        assert // expected correct value at 0
        // array/static_size.py:160
        // assert arr2[1] == (Txn.sender != Txn.receiver), "expected correct value at 1"
        v-load aggregate%slot_contents%0#0                                                        aggregate%slot_contents%0#0
        extract 1 1 // on error: index access is out of bounds                                    aggregate%encoded_element%1#0
        v-store aggregate%encoded_element%1#0
        v-load aggregate%encoded_element%1#0                                                      aggregate%encoded_element%1#0
        int 0                                                                                     aggregate%encoded_element%1#0,0
        getbit                                                                                    aggregate%get_bit%6#0
        v-store aggregate%get_bit%6#0
        txn Sender                                                                                tmp%34#0
        v-store tmp%34#0
        txn Receiver                                                                              tmp%35#0
        v-store tmp%35#0
        v-load tmp%34#0                                                                           tmp%34#0
        v-load tmp%35#0                                                                           tmp%34#0,tmp%35#0
        !=                                                                                        tmp%36#0
        v-store tmp%36#0
        v-load aggregate%get_bit%6#0                                                              aggregate%get_bit%6#0
        v-load tmp%36#0                                                                           aggregate%get_bit%6#0,tmp%36#0
        ==                                                                                        tmp%37#0
        v-store tmp%37#0
        v-load tmp%37#0                                                                           tmp%37#0
        assert // expected correct value at 1
        // array/static_size.py:161
        // assert arr2[2] == (Txn.sender == Txn.receiver), "expected correct value at 2"
        v-load aggregate%slot_contents%0#0                                                        aggregate%slot_contents%0#0
        extract 2 1 // on error: index access is out of bounds                                    aggregate%encoded_element%2#0
        v-store aggregate%encoded_element%2#0
        v-load aggregate%encoded_element%2#0                                                      aggregate%encoded_element%2#0
        int 0                                                                                     aggregate%encoded_element%2#0,0
        getbit                                                                                    aggregate%get_bit%7#0
        v-store aggregate%get_bit%7#0
        txn Sender                                                                                tmp%39#0
        v-store tmp%39#0
        txn Receiver                                                                              tmp%40#0
        v-store tmp%40#0
        v-load tmp%39#0                                                                           tmp%39#0
        v-load tmp%40#0                                                                           tmp%39#0,tmp%40#0
        ==                                                                                        tmp%41#0
        v-store tmp%41#0
        v-load aggregate%get_bit%7#0                                                              aggregate%get_bit%7#0
        v-load tmp%41#0                                                                           aggregate%get_bit%7#0,tmp%41#0
        ==                                                                                        tmp%42#0
        v-store tmp%42#0
        v-load tmp%42#0                                                                           tmp%42#0
        assert // expected correct value at 2
        // array/static_size.py:162
        // assert arr2[3] == (Txn.sender != Txn.receiver), "expected correct value at 3"
        v-load aggregate%slot_contents%0#0                                                        aggregate%slot_contents%0#0
        extract 3 1 // on error: index access is out of bounds                                    aggregate%encoded_element%3#0
        v-store aggregate%encoded_element%3#0
        v-load aggregate%encoded_element%3#0                                                      aggregate%encoded_element%3#0
        int 0                                                                                     aggregate%encoded_element%3#0,0
        getbit                                                                                    aggregate%get_bit%8#0
        v-store aggregate%get_bit%8#0
        txn Sender                                                                                tmp%44#0
        v-store tmp%44#0
        txn Receiver                                                                              tmp%45#0
        v-store tmp%45#0
        v-load tmp%44#0                                                                           tmp%44#0
        v-load tmp%45#0                                                                           tmp%44#0,tmp%45#0
        !=                                                                                        tmp%46#0
        v-store tmp%46#0
        v-load aggregate%get_bit%8#0                                                              aggregate%get_bit%8#0
        v-load tmp%46#0                                                                           aggregate%get_bit%8#0,tmp%46#0
        ==                                                                                        tmp%47#0
        v-store tmp%47#0
        v-load tmp%47#0                                                                           tmp%47#0
        assert // expected correct value at 3
        v-load slot%0                                                                             slot%0
        // array/static_size.py:164
        // return arr.freeze()
        v-store slot_contents%9#0
        v-load slot_contents%9#0                                                                  slot_contents%9#0
        len                                                                                       aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        byte 0x0000                                                                               0x0000
        v-load slot_contents%9#0                                                                  0x0000,slot_contents%9#0
        v-load aggregate%bytes_len%2#0                                                            0x0000,slot_contents%9#0,aggregate%bytes_len%2#0
        int 8                                                                                     0x0000,slot_contents%9#0,aggregate%bytes_len%2#0,8
        callsub dynamic_array_concat_bits                                                         bit_packed_source%0#0
        v-store bit_packed_source%0#0
        // array/static_size.py:140
        // @arc4.abimethod()
        byte 0x151f7c75                                                                           0x151f7c75
        v-load bit_packed_source%0#0                                                              0x151f7c75,bit_packed_source%0#0
        concat                                                                                    tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                            tmp%1#0
        log
        int 1                                                                                     1
        return


// test_cases.array.static_size.StaticSizeContract.xtra() -> uint64, uint64, bytes, bytes, bytes:
subroutine xtra:
    xtra_block@0:
        // array/static_size.py:127
        // self.count += 1
        int 0                                                                                     0
        byte "count"                                                                              0,"count"
        app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                  maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                   maybe_exists%0#0
        assert // check self.count exists
        v-load maybe_value%0#0                                                                    maybe_value%0#0
        int 1                                                                                     maybe_value%0#0,1
        +                                                                                         tmp%0#0
        v-store tmp%0#0
        byte "count"                                                                              "count"
        v-load tmp%0#0                                                                            "count",tmp%0#0
        app_global_put
        // array/static_size.py:129
        // a=Txn.num_app_args,
        txn NumAppArgs                                                                            tmp%1#0
        v-store tmp%1#0
        // array/static_size.py:131
        // c=Txn.sender,
        txn Sender                                                                                tmp%2#0
        v-store tmp%2#0
        // array/static_size.py:132
        // d=self.more(),
        callsub more                                                                              tmp%3#0
        v-store tmp%3#0
        // array/static_size.py:133
        // e=BigUInt(self.count),
        int 0                                                                                     0
        byte "count"                                                                              0,"count"
        app_global_get_ex                                                                         maybe_value%2#0,maybe_exists%2#0
        v-store maybe_exists%2#0                                                                  maybe_value%2#0
        v-store maybe_value%2#0
        v-load maybe_exists%2#0                                                                   maybe_exists%2#0
        assert // check self.count exists
        v-load maybe_value%2#0                                                                    maybe_value%2#0
        itob                                                                                      tmp%4#0
        v-store tmp%4#0
        // array/static_size.py:128-134
        // return Xtra(
        //     a=Txn.num_app_args,
        //     b=self.count,
        //     c=Txn.sender,
        //     d=self.more(),
        //     e=BigUInt(self.count),
        // )
        v-load tmp%1#0                                                                            tmp%1#0
        v-load tmp%0#0                                                                            tmp%1#0,tmp%0#0
        v-load tmp%2#0                                                                            tmp%1#0,tmp%0#0,tmp%2#0
        v-load tmp%3#0                                                                            tmp%1#0,tmp%0#0,tmp%2#0,tmp%3#0
        v-load tmp%4#0                                                                            tmp%1#0,tmp%0#0,tmp%2#0,tmp%3#0,tmp%4#0
        retsub                                                                                    tmp%1#0,tmp%0#0,tmp%2#0,tmp%3#0,tmp%4#0


// test_cases.array.static_size.StaticSizeContract.more() -> bytes:
subroutine more:
    more_block@0:
        // array/static_size.py:138
        // return More(foo=arc4.UInt64(self.count + 1), bar=arc4.UInt64(self.count * self.count))
        int 0                                                                                     0
        byte "count"                                                                              0,"count"
        app_global_get_ex                                                                         maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                  maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                   maybe_exists%0#0
        assert // check self.count exists
        v-load maybe_value%0#0                                                                    maybe_value%0#0
        int 1                                                                                     maybe_value%0#0,1
        +                                                                                         tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                            tmp%0#0
        itob                                                                                      aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load maybe_value%0#0                                                                    maybe_value%0#0
        v-load maybe_value%0#0                                                                    maybe_value%0#0,maybe_value%0#0
        *                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                            tmp%2#0
        itob                                                                                      aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%val_as_bytes%0#0                                                         aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%1#0                                                         aggregate%val_as_bytes%0#0,aggregate%val_as_bytes%1#0
        concat                                                                                    aggregate%head%1#0
        v-store aggregate%head%1#0
        v-load aggregate%head%1#0                                                                 aggregate%head%1#0
        retsub                                                                                    aggregate%head%1#0


