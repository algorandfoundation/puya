{
  "version": 3,
  "sources": [
    "../unused_opt_allowed.py"
  ],
  "mappings": ";;;;;AAIA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;;;AAAA;AAAA;;AACK;;;AAAA;;AADL;;AAAA;;;;;;;;;AACA;;;AAKQ;;;;;AAAA;;;;;;;;;;;;AAAA;;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0xe739158e // method \"test_implicit_conversion_abi_call(uint64[],application)void\""
    },
    "16": {
      "op": "txna ApplicationArgs 0"
    },
    "19": {
      "op": "match main_test_implicit_conversion_abi_call_route@3"
    },
    "23": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "return"
    },
    "25": {
      "block": "main_test_implicit_conversion_abi_call_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "29": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0"
      ]
    },
    "35": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "reinterpret_uint64[]%0#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "38": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%7#0"
      ]
    },
    "39": {
      "op": "txnas Applications",
      "defined_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_uint64[]%0#0",
        "tmp%8#0"
      ]
    },
    "41": {
      "callsub": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "op": "callsub test_implicit_conversion_abi_call",
      "stack_out": []
    },
    "44": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "45": {
      "op": "return"
    },
    "46": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "48": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "51": {
      "op": "txn ApplicationID"
    },
    "53": {
      "op": "!"
    },
    "54": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "55": {
      "op": "intc_1 // 1"
    },
    "56": {
      "op": "return"
    },
    "57": {
      "subroutine": "test_cases.array.unused_opt_allowed.AbiCallContract.test_implicit_conversion_abi_call",
      "params": {
        "arr#0": "bytes",
        "app#0": "uint64"
      },
      "block": "test_implicit_conversion_abi_call",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "60": {
      "op": "itxn_begin"
    },
    "61": {
      "op": "frame_dig -1",
      "defined_out": [
        "app#0 (copy)"
      ],
      "stack_out": [
        "app#0 (copy)"
      ]
    },
    "63": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "65": {
      "op": "pushbytes 0x75b694f3 // method \"dont_call(uint64[])uint64\"",
      "defined_out": [
        "Method(dont_call(uint64[])uint64)"
      ],
      "stack_out": [
        "Method(dont_call(uint64[])uint64)"
      ]
    },
    "71": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "73": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "75": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "77": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "79": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "81": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "82": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "84": {
      "op": "itxn_submit"
    },
    "85": {
      "retsub": true,
      "op": "retsub"
    }
  }
}