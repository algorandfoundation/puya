{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIK;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAEG;AAAa;AAAb;AAE6C;;;AACjB;;;AACA;;;AAHrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKE;AAAA;AAAO;;AAAP;AAAjB;;;AACmB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;;;AAAuB;;AAAA;;AAAA;AAAvB;AAAA;AAAP;;;;;;;;AAEwC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAb;;;AAA/B;;AAA+B;;;AAA/B;AAAA;AAiHS;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AACJ;AAAT;;AACwB;AAApB;;AAAa;;AAAA;;AAAA;AAArB;;;;;AACgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AACL;;AAAA;AAAX;;;AACiB;;AALA;AAKA;AAA2B;AAF5B;AAE4B;AAA3B;AAAA;;AAGN;;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;;AAAA;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AASJ;;AAAA;;AAAA;;;;AARD;AAIC;AAAsB;;AAPtB;AAOsB;AAAtB;AAAA;;;;;AArIZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAGG;AAAA;;AAAA;AACW;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAP;AACS;AAAA;AAAA;;;AAAA;;AAAA;AACK;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;AAKG;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AANV;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAQA;;;AAAA;AAAA;AAES;;AAGsB;AAAT;AAAH;AAAP;AAAA;;AAAA;AAAjB;;;AACuB;;AAAI;;AAAJ;AAAA;;;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;;;;;AAEF;AAAA;;AAAA;AAAA;;AAAA;AAAP;;;AAGA;AACO;AAAe;;AAAS;;AAAT;AAAf;AAAP;AAEQ;AAAR;;AACR;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;;;AACgB;;AAAS;AAAT;AAAA;;;;;;;;;;;AAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAmBA;;;AAAA;AAAA;AAES;;AAGsB;AAAT;AAAH;AAAP;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;AAAA;AAAf;;;AACgB;;AAAS;AAAT;AAAA;;;;;;;;;;;AAEG;;;;AACX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;;;AAGG;;;AAAA;AAEQ;AAAR;AACR;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;AAPP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BwB;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AACU;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;AAAA;;AAGA;AADU;;AACV;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAlB;AAAP;AACO;;AAAA;AAAwB;;AAAxB;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AACe;AAAR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;;AAKR;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACY;AAAA;;;;;;;;;;;;AACG;AAAA;AAAe;;AAAf;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;;;AAEO;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAxBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAbG;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;;AAAA;AAEM;;AAEA;;AACA;;;AACQ;AAAA;AAAA;AAAA;AAAR;AALN;;AAAA;;AAAA;AAU4B;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;;AAAA;;AAAA;AAAZ;AAA1C;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 16 144"
    },
    "9": {
      "op": "bytecblock 0x 0x151f7c75 \"count\" 0x00 0x0000"
    },
    "28": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "30": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "33": {
      "op": "bytec_2 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "34": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "35": {
      "op": "app_global_put",
      "stack_out": []
    },
    "36": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "38": {
      "op": "bz main___algopy_default_create@16",
      "stack_out": []
    },
    "41": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "43": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "44": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "45": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "47": {
      "op": "assert",
      "stack_out": []
    },
    "48": {
      "op": "pushbytess 0x28d7c1b8 0xfa9cb973 0x6039a240 0xf8fd68a7 0x1f028db1 0x096b3a59 0x8d6e3a25 // method \"test_array(uint64,uint64,uint64,uint64)uint64\", method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_bool_array(uint64)uint64\", method \"test_arc4_conversion(uint64)uint64[]\", method \"sum_array(uint64[])uint64\", method \"test_arc4_bool()bool[]\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ],
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])"
      ]
    },
    "85": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "tmp%6#0"
      ]
    },
    "88": {
      "op": "match test_array test_extend_from_tuple test_extend_from_arc4_tuple test_bool_array test_arc4_conversion sum_array test_arc4_bool",
      "stack_out": []
    },
    "104": {
      "op": "err"
    },
    "105": {
      "block": "main___algopy_default_create@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "107": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "108": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "110": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "111": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "112": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "113": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "116": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "117": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "119": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "121": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "122": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "123": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "125": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "127": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "128": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "129": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "130": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "133": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "135": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "136": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "138": {
      "op": "cover 2",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "140": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "141": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "143": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "144": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "145": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "146": {
      "op": "dup"
    },
    "147": {
      "op": "uncover 2",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "149": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "151": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "152": {
      "op": "intc_2 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "153": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "154": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "155": {
      "op": "cover 2",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "157": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%9#0"
      ]
    },
    "158": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "161": {
      "op": "frame_dig 6",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "163": {
      "op": "frame_dig 5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "165": {
      "op": "-",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%10#0"
      ]
    },
    "166": {
      "op": "bzero",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0"
      ]
    },
    "167": {
      "op": "frame_dig 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%11#0",
        "result#0"
      ]
    },
    "169": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "tmp%11#0"
      ]
    },
    "170": {
      "op": "concat",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ]
    },
    "171": {
      "op": "frame_bury 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "173": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "174": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "176": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "array_length#0"
      ]
    },
    "178": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "array_length#0",
        "16"
      ]
    },
    "179": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "180": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "181": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "183": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "185": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_end#0"
      ]
    },
    "186": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "188": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0"
      ]
    },
    "190": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "192": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "tmp%15#0"
      ]
    },
    "193": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "196": {
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)"
      ]
    },
    "198": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "200": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "201": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "203": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "204": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "206": {
      "op": "frame_dig 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "208": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "209": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "211": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "213": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "214": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "216": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "217": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "218": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "220": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "222": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "read_offset#0"
      ]
    },
    "223": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "225": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "228": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ]
    },
    "230": {
      "op": "frame_bury 0"
    },
    "232": {
      "retsub": true,
      "op": "retsub"
    },
    "233": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array[routing]",
      "params": {},
      "block": "test_array",
      "stack_in": [],
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0"
      ]
    },
    "234": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ]
    },
    "235": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0"
      ]
    },
    "236": {
      "op": "dupn 5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "238": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "x1#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0"
      ]
    },
    "241": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0",
        "x1#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "244": {
      "op": "btoi",
      "defined_out": [
        "x1#0",
        "y1#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0"
      ]
    },
    "245": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "x1#0",
        "x2#0",
        "y1#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0"
      ]
    },
    "248": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0",
        "x1#0",
        "x2#0",
        "y1#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "251": {
      "op": "btoi",
      "defined_out": [
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0"
      ]
    },
    "252": {
      "op": "bytec_2 // \"count\"",
      "defined_out": [
        "\"count\"",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "\"count\""
      ]
    },
    "253": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "\"count\"",
        "0"
      ]
    },
    "254": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0"
      ]
    },
    "255": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%0#1",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1"
      ]
    },
    "258": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%0#1",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "261": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%0#1",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "264": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%0#1"
      ]
    },
    "266": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "tmp%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%1#1",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "267": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%1#1"
      ]
    },
    "269": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "270": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%2#1",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%3#0"
      ]
    },
    "271": {
      "op": "uncover 13",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%3#0",
        "tmp%2#1"
      ]
    },
    "273": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%3#1",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%4#0"
      ]
    },
    "274": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%4#0",
        "tmp%3#1"
      ]
    },
    "276": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0"
      ]
    },
    "277": {
      "op": "dig 11",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%4#1 (copy)",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "tmp%4#1 (copy)"
      ]
    },
    "279": {
      "op": "len",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0"
      ]
    },
    "280": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "282": {
      "op": "<=",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "283": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0"
      ]
    },
    "284": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "64"
      ]
    },
    "286": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0"
      ]
    },
    "287": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "tmp%4#1"
      ]
    },
    "289": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%bzero%0#0 (copy)",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#1",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "tmp%4#1",
        "aggregate%bzero%0#0 (copy)"
      ]
    },
    "291": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "292": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0",
        "aggregate%head%5#0"
      ]
    },
    "294": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0"
      ]
    },
    "296": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "314": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "0x00000000000000000000000000000000",
        "aggregate%head%6#0"
      ]
    },
    "315": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y1#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "y1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0"
      ]
    },
    "316": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "y1#0"
      ]
    },
    "318": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x1#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "319": {
      "op": "uncover 15",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0",
        "x1#0"
      ]
    },
    "321": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "x1#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "322": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0"
      ]
    },
    "323": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "tmp%5#0"
      ]
    },
    "325": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "326": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%6#0"
      ]
    },
    "328": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "329": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0"
      ]
    },
    "330": {
      "op": "uncover 11",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "tmp%7#0"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0"
      ]
    },
    "333": {
      "op": "uncover 10",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "tmp%8#0"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "336": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0 (copy)"
      ]
    },
    "338": {
      "op": "len",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "aggregate%value_len%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0"
      ]
    },
    "339": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0",
        "64"
      ]
    },
    "341": {
      "op": "<=",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "aggregate%len_ok%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%len_ok%1#0"
      ]
    },
    "342": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "343": {
      "op": "uncover 9",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0"
      ]
    },
    "345": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0",
        "aggregate%bzero%0#0 (copy)"
      ]
    },
    "347": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "348": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%15#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%15#0"
      ]
    },
    "349": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%16#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%16#0"
      ]
    },
    "350": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0",
        "y2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "y2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0"
      ]
    },
    "351": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "y2#0"
      ]
    },
    "353": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "x2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "354": {
      "op": "uncover 8",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0",
        "x2#0"
      ]
    },
    "356": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "x2#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "357": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0"
      ]
    },
    "358": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0"
      ]
    },
    "360": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "361": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%11#0"
      ]
    },
    "363": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "364": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0"
      ]
    },
    "365": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%12#0"
      ]
    },
    "367": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0"
      ]
    },
    "368": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0"
      ]
    },
    "370": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "371": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0 (copy)"
      ]
    },
    "373": {
      "op": "len",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0"
      ]
    },
    "374": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "376": {
      "op": "<=",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "377": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "378": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ]
    },
    "380": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0",
        "aggregate%bzero%0#0"
      ]
    },
    "382": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "383": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%24#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%24#0"
      ]
    },
    "384": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%25#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%25#0"
      ]
    },
    "385": {
      "op": "concat",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0"
      ]
    },
    "386": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "387": {
      "block": "test_array_for_header@2",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "388": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "390": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "391": {
      "op": "bz test_array_after_for@5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "394": {
      "op": "dup2",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "395": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "396": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "398": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "144"
      ]
    },
    "400": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "401": {
      "op": "intc 4 // 144",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "144"
      ]
    },
    "403": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "404": {
      "op": "extract 16 128",
      "defined_out": [
        "aggregate%extract%2#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0"
      ]
    },
    "407": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)"
      ]
    },
    "408": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "8"
      ]
    },
    "409": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0"
      ]
    },
    "410": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0 (copy)"
      ]
    },
    "412": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "413": {
      "op": "+",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#2"
      ]
    },
    "414": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "aggregate%item1%1#0"
      ]
    },
    "415": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#2",
        "i#2 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "aggregate%item1%1#0",
        "i#2 (copy)"
      ]
    },
    "417": {
      "op": "==",
      "defined_out": [
        "aggregate%extract%2#0",
        "i#0",
        "i#2",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "tmp%16#0"
      ]
    },
    "418": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2"
      ]
    },
    "419": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%2#0"
      ]
    },
    "420": {
      "op": "extract 48 16",
      "defined_out": [
        "aggregate%extract%14#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0"
      ]
    },
    "423": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%14#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%14#0 (copy)"
      ]
    },
    "424": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0"
      ]
    },
    "427": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0"
      ]
    },
    "429": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "2"
      ]
    },
    "431": {
      "op": "+",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "tmp%17#0"
      ]
    },
    "432": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "tmp%18#0"
      ]
    },
    "433": {
      "op": "b==",
      "defined_out": [
        "aggregate%extract%14#0",
        "i#0",
        "i#2",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "tmp%19#0"
      ]
    },
    "434": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0"
      ]
    },
    "435": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0"
      ]
    },
    "438": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "i#2 (copy)"
      ]
    },
    "440": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "i#2 (copy)",
        "i#2 (copy)"
      ]
    },
    "442": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "tmp%22#0"
      ]
    },
    "443": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "tmp%23#0"
      ]
    },
    "444": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "i#2",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "tmp%24#0"
      ]
    },
    "445": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "446": {
      "op": "bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "448": {
      "op": "b test_array_for_header@2"
    },
    "451": {
      "block": "test_array_after_for@5",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "453": {
      "op": "dup",
      "defined_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "454": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "455": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "aggregate%bytes_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0",
        "144"
      ]
    },
    "457": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0"
      ]
    },
    "458": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "459": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0"
      ]
    },
    "461": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_len%0#0",
        "as_bytes%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "462": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0"
      ]
    },
    "465": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0"
      ]
    },
    "468": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "471": {
      "op": "box_del",
      "defined_out": [
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "{box_del}"
      ]
    },
    "472": {
      "op": "pop",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0"
      ]
    },
    "473": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "476": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "\"a\"",
        "converted_array%0#0"
      ]
    },
    "477": {
      "op": "box_put",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "478": {
      "error": "index access is out of bounds",
      "op": "extract 0 144 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "481": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "482": {
      "op": "bury 11",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "484": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ]
    },
    "485": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ]
    },
    "488": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "490": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "8"
      ]
    },
    "491": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "492": {
      "op": "bury 6",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "495": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "497": {
      "op": "intc_1 // 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "498": {
      "op": "bury 3",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "500": {
      "block": "test_array_for_header@7",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "502": {
      "op": "dig 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "aggregate%array_len%0#0"
      ]
    },
    "504": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "continue_looping%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "505": {
      "op": "bz test_array_after_for@15",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "508": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1"
      ]
    },
    "510": {
      "op": "dig 3",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "point_idx#0"
      ]
    },
    "512": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "aggregate%array_len%0#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "point_idx#0",
        "144"
      ]
    },
    "514": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%4#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "515": {
      "op": "intc 4 // 144",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "aggregate%bytes_offset%4#0",
        "144"
      ]
    },
    "517": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "518": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0 (copy)"
      ]
    },
    "520": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0",
        "point.x#0"
      ]
    },
    "523": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "524": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "aggregate%encoded_element%4#0",
        "8"
      ]
    },
    "525": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0"
      ]
    },
    "526": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0"
      ]
    },
    "528": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "last_point.x#0"
      ]
    },
    "530": {
      "op": "b<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "tmp%1#2"
      ]
    },
    "531": {
      "op": "bz test_array_else_body@10",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "534": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "536": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "537": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "tmp%2#2"
      ]
    },
    "538": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#2",
        "aggregate%encoded_element%4#0"
      ]
    },
    "539": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#2",
        "aggregate%encoded_element%4#0",
        "0"
      ]
    },
    "540": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#2",
        "tmp%3#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#2",
        "tmp%3#2"
      ]
    },
    "541": {
      "op": "-",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "dx#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "542": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "dx#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "544": {
      "block": "test_array_after_if_else@11",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "546": {
      "op": "dig 6",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "548": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%8#1"
      ]
    },
    "549": {
      "op": "bz test_array_else_body@13",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "552": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "554": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0",
        "point.y#0"
      ]
    },
    "556": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "557": {
      "block": "test_array_after_if_else@14",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ],
      "op": "dig 7",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0"
      ]
    },
    "559": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "560": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "tmp%11#0"
      ]
    },
    "561": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "dy#0"
      ]
    },
    "562": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "563": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%11#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "tmp%12#1"
      ]
    },
    "564": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%13#1"
      ]
    },
    "565": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%14#1"
      ]
    },
    "566": {
      "op": "dig 5",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%14#1",
        "length#0"
      ]
    },
    "568": {
      "op": "+",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "569": {
      "op": "bury 5",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "571": {
      "op": "dig 2",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "573": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "1"
      ]
    },
    "574": {
      "op": "+",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "575": {
      "op": "bury 3",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "577": {
      "op": "b test_array_for_header@7"
    },
    "580": {
      "block": "test_array_else_body@13",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "582": {
      "op": "dig 6",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "584": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "585": {
      "op": "b test_array_after_if_else@14"
    },
    "588": {
      "block": "test_array_else_body@10",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "0"
      ]
    },
    "589": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "590": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "592": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "593": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "594": {
      "op": "-",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "595": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "597": {
      "op": "b test_array_after_if_else@11"
    },
    "600": {
      "block": "test_array_after_for@15",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "602": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%9#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "603": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%9#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%val_as_bytes%9#0",
        "0x151f7c75"
      ]
    },
    "604": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%9#0"
      ]
    },
    "605": {
      "op": "concat",
      "defined_out": [
        "length#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "606": {
      "op": "log",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "607": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "1"
      ]
    },
    "608": {
      "op": "return",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "609": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple[routing]",
      "params": {},
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "612": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ]
    },
    "613": {
      "op": "extract 0 16",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "some_more.0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "some_more.0#0"
      ]
    },
    "616": {
      "op": "swap",
      "stack_out": [
        "some_more.0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "617": {
      "op": "extract 16 16",
      "defined_out": [
        "some_more.0#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.0#0",
        "some_more.1#0"
      ]
    },
    "620": {
      "op": "swap",
      "stack_out": [
        "some_more.1#0",
        "some_more.0#0"
      ]
    },
    "621": {
      "op": "dig 1",
      "defined_out": [
        "some_more.0#0",
        "some_more.1#0",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "some_more.1#0",
        "some_more.0#0",
        "some_more.1#0 (copy)"
      ]
    },
    "623": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0"
      ]
    },
    "624": {
      "op": "dup",
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%head%1#0 (copy)"
      ]
    },
    "625": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "626": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "627": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0"
      ]
    },
    "628": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)"
      ]
    },
    "629": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "1"
      ]
    },
    "630": {
      "op": "-",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "some_more.1#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "tmp%2#1"
      ]
    },
    "631": {
      "op": "intc_3 // 16",
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "tmp%2#1",
        "16"
      ]
    },
    "632": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%head%1#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "633": {
      "op": "dig 2",
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%head%1#0 (copy)"
      ]
    },
    "635": {
      "op": "swap",
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%head%1#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "636": {
      "op": "intc_3 // 16",
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%head%1#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "637": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0"
      ]
    },
    "638": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0",
        "last#0 (copy)",
        "some_more.1#0"
      ],
      "stack_out": [
        "some_more.1#0",
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "last#0 (copy)"
      ]
    },
    "639": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "last#0 (copy)",
        "some_more.1#0"
      ]
    },
    "641": {
      "op": "==",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "tmp%3#1"
      ]
    },
    "642": {
      "op": "assert",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0"
      ]
    },
    "643": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "aggregate%array_len%0#0"
      ]
    },
    "644": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "as_bytes%0#0",
        "last#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "as_bytes%0#0"
      ]
    },
    "645": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "as_u16_bytes%0#0",
        "last#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "as_u16_bytes%0#0"
      ]
    },
    "648": {
      "op": "uncover 2",
      "stack_out": [
        "last#0",
        "as_u16_bytes%0#0",
        "aggregate%head%1#0"
      ]
    },
    "650": {
      "op": "concat",
      "defined_out": [
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0"
      ]
    },
    "651": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "652": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)",
        "0"
      ]
    },
    "653": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_length%0#0"
      ]
    },
    "654": {
      "op": "intc_1 // 1",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "655": {
      "op": "-",
      "defined_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ]
    },
    "656": {
      "op": "dig 1",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "result#0 (copy)"
      ]
    },
    "658": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "661": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0"
      ]
    },
    "662": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0",
        "16"
      ]
    },
    "663": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "664": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "665": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "666": {
      "op": "uncover 2",
      "stack_out": [
        "result#0",
        "aggregate%encoded_element%1#0",
        "last#0"
      ]
    },
    "668": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%7#0"
      ]
    },
    "669": {
      "op": "assert",
      "stack_out": [
        "result#0"
      ]
    },
    "670": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "0x151f7c75"
      ]
    },
    "671": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "result#0"
      ]
    },
    "672": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "673": {
      "op": "log",
      "stack_out": []
    },
    "674": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "675": {
      "op": "return",
      "stack_out": []
    },
    "676": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple[routing]",
      "params": {},
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0"
      ]
    },
    "679": {
      "op": "dup",
      "defined_out": [
        "some_more#0",
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "some_more#0",
        "some_more#0 (copy)"
      ]
    },
    "680": {
      "op": "pop",
      "stack_out": [
        "some_more#0"
      ]
    },
    "681": {
      "op": "dup",
      "stack_out": [
        "some_more#0",
        "some_more#0 (copy)"
      ]
    },
    "682": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "683": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0",
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "684": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0",
        "aggregate%array_len%0#0"
      ]
    },
    "685": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0",
        "as_bytes%0#0"
      ]
    },
    "686": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "some_more#0"
      ],
      "stack_out": [
        "some_more#0",
        "as_u16_bytes%0#0"
      ]
    },
    "689": {
      "op": "swap",
      "stack_out": [
        "as_u16_bytes%0#0",
        "some_more#0"
      ]
    },
    "690": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "converted_array%0#0"
      ]
    },
    "691": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "converted_array%0#0"
      ],
      "stack_out": [
        "converted_array%0#0",
        "0x151f7c75"
      ]
    },
    "692": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "converted_array%0#0"
      ]
    },
    "693": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "694": {
      "op": "log",
      "stack_out": []
    },
    "695": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "696": {
      "op": "return",
      "stack_out": []
    },
    "697": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array[routing]",
      "params": {},
      "block": "test_bool_array",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%bytes_len%3#0"
      ]
    },
    "698": {
      "op": "dupn 2",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0"
      ]
    },
    "700": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "703": {
      "op": "btoi",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0"
      ]
    },
    "704": {
      "op": "dup",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "length#0"
      ]
    },
    "705": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "length#0",
        "slot%0"
      ]
    },
    "706": {
      "op": "swap",
      "defined_out": [
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "length#0"
      ]
    },
    "707": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "length#0",
        "1"
      ]
    },
    "708": {
      "op": "+",
      "defined_out": [
        "length#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1"
      ]
    },
    "709": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "length#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "710": {
      "block": "test_bool_array_for_header@2",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "711": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "tmp%2#1"
      ]
    },
    "713": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "714": {
      "op": "bz test_bool_array_after_for@5",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "717": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "719": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "721": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "tmp%3#1"
      ]
    },
    "722": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%2#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "723": {
      "op": "dig 4",
      "defined_out": [
        "i#0",
        "slot_contents%0#0",
        "tmp%2#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "tmp%4#0",
        "slot_contents%0#0"
      ]
    },
    "725": {
      "op": "swap",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "726": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00"
      ]
    },
    "727": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00",
        "0"
      ]
    },
    "728": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "0x00",
        "0",
        "tmp%4#0"
      ]
    },
    "730": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "731": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "732": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "734": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "735": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "736": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "738": {
      "op": "b test_bool_array_for_header@2"
    },
    "741": {
      "block": "test_bool_array_after_for@5",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0"
      ]
    },
    "743": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "aggregate%slot_contents%1#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%slot_contents%1#0 (copy)"
      ]
    },
    "745": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%1#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "746": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%1#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0",
        "length#0"
      ]
    },
    "748": {
      "op": "dup",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%1#0",
        "length#0",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0",
        "length#0 (copy)",
        "length#0 (copy)"
      ]
    },
    "749": {
      "op": "cover 4",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0",
        "length#0 (copy)"
      ]
    },
    "751": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "length#0",
        "slot%0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "tmp%7#0"
      ]
    },
    "752": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "753": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "length#0",
        "slot%0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "slot_contents%2#0"
      ]
    },
    "755": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "concat%1#0"
      ]
    },
    "756": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "length#0",
        "slot%0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "757": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "length#0"
      ]
    },
    "759": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%bytes_len%2#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "length#0",
        "2"
      ]
    },
    "761": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "length#0",
        "slot%0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "tmp%9#0"
      ]
    },
    "762": {
      "op": "==",
      "defined_out": [
        "length#0",
        "slot%0",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "tmp%10#0"
      ]
    },
    "763": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0"
      ]
    },
    "764": {
      "op": "intc_0 // 0",
      "defined_out": [
        "count#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot%0",
        "count#0"
      ]
    },
    "765": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%slot_contents%3#0",
        "count#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%slot_contents%3#0"
      ]
    },
    "767": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "768": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "770": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "771": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "773": {
      "block": "test_bool_array_for_header@6",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "775": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "777": {
      "op": "<",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "778": {
      "op": "bz test_bool_array_after_for@11",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "781": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%4#0"
      ]
    },
    "783": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "785": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "786": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "787": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%bytes_len%3#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%encoded_element%0#0",
        "0"
      ]
    },
    "788": {
      "op": "getbit",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "val#0"
      ]
    },
    "789": {
      "op": "bz test_bool_array_after_if_else@9",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "792": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "794": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "795": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "796": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "798": {
      "block": "test_bool_array_after_if_else@9",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "800": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "801": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "802": {
      "op": "bury 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "804": {
      "op": "b test_bool_array_for_header@6"
    },
    "807": {
      "block": "test_bool_array_after_for@11",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "809": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "810": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0",
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "811": {
      "op": "swap",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "812": {
      "op": "concat",
      "defined_out": [
        "count#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "tmp%3#0"
      ]
    },
    "813": {
      "op": "log",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "814": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "1"
      ]
    },
    "815": {
      "op": "return",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "816": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion[routing]",
      "params": {},
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "aggregate%array_len%1#0"
      ]
    },
    "817": {
      "op": "dupn 2",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ]
    },
    "819": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "822": {
      "op": "btoi",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0"
      ]
    },
    "823": {
      "op": "dup",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "length#0"
      ]
    },
    "824": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "length#0",
        "slot%0"
      ]
    },
    "825": {
      "op": "swap",
      "defined_out": [
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "length#0"
      ]
    },
    "826": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "length#0",
        "1"
      ]
    },
    "827": {
      "op": "+",
      "defined_out": [
        "length#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1"
      ]
    },
    "828": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "length#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "829": {
      "block": "test_arc4_conversion_for_header@2",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "830": {
      "op": "dig 2",
      "defined_out": [
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "tmp%2#1"
      ]
    },
    "832": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "833": {
      "op": "bz test_arc4_conversion_after_for@5",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "836": {
      "op": "dupn 2",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "838": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "839": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "slot_contents%0#0"
      ]
    },
    "841": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "842": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "843": {
      "op": "bury 4",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "845": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "846": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "i#0"
      ]
    },
    "847": {
      "op": "bury 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "849": {
      "op": "b test_arc4_conversion_for_header@2"
    },
    "852": {
      "block": "test_arc4_conversion_after_for@5",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "aggregate%slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "854": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "855": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%bytes_len%1#0",
        "8"
      ]
    },
    "856": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%array_len%1#0"
      ]
    },
    "857": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%array_len%1#0",
        "aggregate%array_len%1#0"
      ]
    },
    "858": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%array_len%1#0"
      ]
    },
    "860": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%array_len%1#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "aggregate%array_len%1#0",
        "length#0"
      ]
    },
    "862": {
      "op": "==",
      "defined_out": [
        "aggregate%array_len%1#0",
        "length#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "tmp%6#0"
      ]
    },
    "863": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "864": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "865": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "867": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "868": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "870": {
      "block": "test_arc4_conversion_for_header@6",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "872": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%array_len%1#0"
      ]
    },
    "874": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%1#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "875": {
      "op": "bz test_arc4_conversion_after_for@11",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "878": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "880": {
      "op": "dig 5",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "882": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%1#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "883": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%1#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "884": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "885": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "val#0"
      ]
    },
    "886": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "val#0",
        "0x"
      ]
    },
    "887": {
      "op": "b!=",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "tmp%7#0"
      ]
    },
    "888": {
      "op": "bz test_arc4_conversion_after_if_else@9",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "891": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "893": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "894": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "count#0"
      ]
    },
    "895": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "897": {
      "block": "test_arc4_conversion_after_if_else@9",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "899": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "900": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "901": {
      "op": "bury 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "903": {
      "op": "b test_arc4_conversion_for_header@6"
    },
    "906": {
      "block": "test_arc4_conversion_after_for@11",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ],
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "0x0000"
      ]
    },
    "908": {
      "op": "dig 3",
      "defined_out": [
        "0x0000",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "0x0000",
        "slot_contents%2#0"
      ]
    },
    "910": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0"
      ]
    },
    "911": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "concat%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "912": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%1#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "915": {
      "op": "len",
      "defined_out": [
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "916": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "917": {
      "op": "/",
      "defined_out": [
        "concat%1#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "918": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "as_bytes%0#0"
      ]
    },
    "919": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "922": {
      "op": "replace2 0",
      "defined_out": [
        "arc4_arr#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "arc4_arr#1"
      ]
    },
    "924": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "arc4_arr#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "arc4_arr#1",
        "0x151f7c75"
      ]
    },
    "925": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "0x151f7c75",
        "arc4_arr#1"
      ]
    },
    "926": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "tmp%2#0"
      ]
    },
    "927": {
      "op": "log",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "928": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0",
        "1"
      ]
    },
    "929": {
      "op": "return",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0",
        "length#0",
        "slot%0",
        "tmp%2#1",
        "i#0"
      ]
    },
    "930": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array[routing]",
      "params": {},
      "block": "sum_array",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0"
      ]
    },
    "933": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "extract_to_end%0#0"
      ]
    },
    "936": {
      "op": "dup",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "extract_to_end%0#0"
      ]
    },
    "937": {
      "op": "intc_0 // 0",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "extract_to_end%0#0",
        "total#0"
      ]
    },
    "938": {
      "op": "swap",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "extract_to_end%0#0"
      ]
    },
    "939": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "940": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "941": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0"
      ]
    },
    "942": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "943": {
      "block": "sum_array_for_header@2",
      "stack_in": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "944": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "946": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "947": {
      "op": "bz sum_array_after_for@5",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "950": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ]
    },
    "952": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "954": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "955": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "957": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "958": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "959": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#1"
      ]
    },
    "960": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#1",
        "total#0"
      ]
    },
    "962": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "963": {
      "op": "bury 4",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "965": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "966": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "967": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "969": {
      "op": "b sum_array_for_header@2"
    },
    "972": {
      "block": "sum_array_after_for@5",
      "stack_in": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "974": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "975": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "976": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "977": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "978": {
      "op": "log",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "979": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "980": {
      "op": "return",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "981": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool[routing]",
      "params": {},
      "block": "test_arc4_bool",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "983": {
      "op": "txn Receiver",
      "defined_out": [
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "tmp%1#1"
      ]
    },
    "985": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "986": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x00"
      ]
    },
    "987": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "988": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "990": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0"
      ]
    },
    "991": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0"
      ]
    },
    "993": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "995": {
      "op": "!=",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0"
      ]
    },
    "996": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0",
        "0x00"
      ]
    },
    "997": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0",
        "0x00",
        "0"
      ]
    },
    "998": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0x00",
        "0",
        "tmp%7#0"
      ]
    },
    "1000": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "1001": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0"
      ]
    },
    "1002": {
      "op": "dupn 2",
      "defined_out": [
        "concat%1#0",
        "concat%1#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1004": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1005": {
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "aggregate%bytes_len%0#0",
        "0x0000"
      ]
    },
    "1007": {
      "op": "dig 2",
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "aggregate%bytes_len%0#0",
        "0x0000",
        "concat%1#0 (copy)"
      ]
    },
    "1009": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "0x0000",
        "concat%1#0 (copy)",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1011": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "0x0000",
        "concat%1#0 (copy)",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1012": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "dyn_arr#1"
      ]
    },
    "1015": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "concat%1#0",
        "dyn_arr#1",
        "dyn_arr#1"
      ]
    },
    "1016": {
      "op": "cover 2",
      "defined_out": [
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "concat%1#0",
        "dyn_arr#1"
      ]
    },
    "1018": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "concat%1#0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)"
      ]
    },
    "1019": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "concat%1#0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "0"
      ]
    },
    "1020": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1021": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1022": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1024": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "1025": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "2"
      ]
    },
    "1027": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%12#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%12#0"
      ]
    },
    "1028": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1029": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)"
      ]
    },
    "1031": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%13#0"
      ]
    },
    "1032": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%13#0",
        "3"
      ]
    },
    "1034": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%14#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%14#0"
      ]
    },
    "1035": {
      "error": "expected 3 bytes",
      "op": "assert // expected 3 bytes",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1036": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "1037": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1038": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)"
      ]
    },
    "1040": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)",
        "16"
      ]
    },
    "1041": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1042": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1043": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1044": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1046": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0"
      ]
    },
    "1047": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0",
        "0"
      ]
    },
    "1048": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "1049": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%16#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%16#0"
      ]
    },
    "1051": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1053": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%18#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%18#0"
      ]
    },
    "1054": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%19#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%19#0"
      ]
    },
    "1055": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1056": {
      "op": "intc_1 // 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "1057": {
      "op": ">",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%lt%1#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "aggregate%lt%1#0"
      ]
    },
    "1058": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1"
      ]
    },
    "1059": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "17"
      ]
    },
    "1061": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%2#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%2#0"
      ]
    },
    "1062": {
      "op": "bytec_3 // 0x00",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%2#0",
        "0x00"
      ]
    },
    "1063": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%2#0",
        "0x00",
        "0"
      ]
    },
    "1064": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "0x00",
        "0",
        "aggregate%get_bit%2#0"
      ]
    },
    "1066": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%3#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%encoded_bool%3#0"
      ]
    },
    "1067": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%encoded_bool%3#0",
        "0"
      ]
    },
    "1068": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%3#0"
      ]
    },
    "1069": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%21#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%3#0",
        "tmp%21#0"
      ]
    },
    "1071": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%3#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1073": {
      "op": "!=",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%23#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "aggregate%get_bit%3#0",
        "tmp%23#0"
      ]
    },
    "1074": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%24#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "concat%1#0",
        "tmp%24#0"
      ]
    },
    "1075": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1"
      ]
    },
    "1076": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1077": {
      "block": "test_arc4_bool_for_header@2",
      "stack_in": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1078": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1080": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1081": {
      "op": "bz test_arc4_bool_after_for@5",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1084": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1086": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "1087": {
      "op": "+",
      "defined_out": [
        "aggregate%add%2#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0"
      ]
    },
    "1088": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%add%2#0",
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0",
        "dyn_arr#1"
      ]
    },
    "1090": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dyn_arr#1",
        "aggregate%add%2#0"
      ]
    },
    "1091": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0"
      ]
    },
    "1092": {
      "op": "bytec_3 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0",
        "0x00"
      ]
    },
    "1093": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0",
        "0x00",
        "0"
      ]
    },
    "1094": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%4#0"
      ]
    },
    "1096": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "b#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "1097": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "b#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "b#0",
        "slot_contents%4#0"
      ]
    },
    "1099": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "b#0"
      ]
    },
    "1100": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot%1"
      ]
    },
    "1101": {
      "op": "bury 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1103": {
      "op": "intc_1 // 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1104": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1105": {
      "op": "bury 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1107": {
      "op": "b test_arc4_bool_for_header@2"
    },
    "1110": {
      "block": "test_arc4_bool_after_for@5",
      "stack_in": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1112": {
      "op": "dup",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1113": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1114": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%bytes_len%1#0",
        "4"
      ]
    },
    "1116": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%27#0"
      ]
    },
    "1117": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1118": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1119": {
      "error": "index access is out of bounds",
      "op": "extract 0 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1122": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%0#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%0#0",
        "0"
      ]
    },
    "1123": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "1124": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%29#0"
      ]
    },
    "1126": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1128": {
      "op": "==",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%31#0"
      ]
    },
    "1129": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%32#0"
      ]
    },
    "1130": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1131": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1132": {
      "error": "index access is out of bounds",
      "op": "extract 1 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%1#0",
        "0"
      ]
    },
    "1136": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0"
      ]
    },
    "1137": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%34#0"
      ]
    },
    "1139": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1141": {
      "op": "!=",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%36#0"
      ]
    },
    "1142": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%37#0"
      ]
    },
    "1143": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1144": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1145": {
      "error": "index access is out of bounds",
      "op": "extract 2 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1148": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%2#0",
        "0"
      ]
    },
    "1149": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0"
      ]
    },
    "1150": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%39#0"
      ]
    },
    "1152": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1154": {
      "op": "==",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%41#0"
      ]
    },
    "1155": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%42#0"
      ]
    },
    "1156": {
      "error": "expected correct value at 2",
      "op": "assert // expected correct value at 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1157": {
      "error": "index access is out of bounds",
      "op": "extract 3 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1160": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "1161": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%8#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0"
      ]
    },
    "1162": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%44#0"
      ]
    },
    "1164": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "1166": {
      "op": "!=",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%46#0"
      ]
    },
    "1167": {
      "op": "==",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "tmp%47#0"
      ]
    },
    "1168": {
      "error": "expected correct value at 3",
      "op": "assert // expected correct value at 3",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1169": {
      "op": "dig 4",
      "defined_out": [
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0"
      ]
    },
    "1171": {
      "op": "dup",
      "defined_out": [
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ]
    },
    "1172": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1173": {
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0",
        "0x0000"
      ]
    },
    "1175": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1177": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0",
        "8"
      ]
    },
    "1178": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "bit_packed_source%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "bit_packed_source%0#0"
      ]
    },
    "1181": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "bit_packed_source%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "bit_packed_source%0#0",
        "0x151f7c75"
      ]
    },
    "1182": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "0x151f7c75",
        "bit_packed_source%0#0"
      ]
    },
    "1183": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1184": {
      "op": "log",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1185": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1186": {
      "op": "return",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1187": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1188": {
      "op": "bytec_2 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1189": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1190": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1191": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1192": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1193": {
      "op": "bytec_2 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "\"count\""
      ]
    },
    "1194": {
      "op": "dig 1",
      "defined_out": [
        "\"count\"",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"count\"",
        "tmp%0#0 (copy)"
      ]
    },
    "1196": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1197": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1199": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1201": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1204": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1205": {
      "op": "bytec_2 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"count\""
      ]
    },
    "1206": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1207": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "1208": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1209": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0"
      ]
    },
    "1211": {
      "op": "cover 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1213": {
      "retsub": true,
      "op": "retsub"
    },
    "1214": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1215": {
      "op": "bytec_2 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1216": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1217": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1218": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1219": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "1"
      ]
    },
    "1220": {
      "op": "+",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "1221": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1222": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1224": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1226": {
      "op": "*",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%2#0"
      ]
    },
    "1227": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1228": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1229": {
      "retsub": true,
      "op": "retsub"
    }
  }
}