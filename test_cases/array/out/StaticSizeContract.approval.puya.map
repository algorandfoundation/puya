{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAqGK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AA3EL;;;AA2EK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAzDL;;;AAAA;AAyDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAtCL;;;AAAA;AAsCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AA9BL;;;AA8BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AApBL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAoBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;;;AAEQ;AAAa;AAAb;AAE6C;;;AACjB;;;AACA;;;AAHrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKE;AAAA;;AAAO;;AAAP;AAAjB;;;;;AACmB;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;;;AAAuB;;AAAA;;AAAA;AAAvB;AAAA;AAAP;;;;;;;;AAEwC;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAb;;;AAA/B;;AAA+B;;;AAA/B;AAAA;AAiHS;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AACJ;AAAT;;AACwB;AAApB;;AAAa;;AAAA;;AAAA;AAArB;;;;;AACgB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AACL;;AAAA;AAAX;;;AACiB;;AALA;AAKA;AAAsB;AAFvB;AAEuB;AAAtB;AAAA;;AAGN;;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;;AAAA;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AASJ;;AAAA;;AAAA;;;;AARD;AAIC;AAAiB;;AAPjB;AAOiB;AAAjB;AAAA;;;;;AAvHT;;AAAA;;AAAA;AAER;;;AAGQ;;AAAA;;AAAA;AACW;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAP;AACS;AAAA;AAAA;;;AAAA;;AAAA;AACK;AAAA;AAAA;AAAP;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACA;AAER;;;AAKQ;;;AACO;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAI;;AAAJ;AAAA;;;AAAX;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;;;;;AAEF;AAAA;;AAAA;AAAP;;;AAGA;AACO;AAAe;;AAAS;;AAAT;AAAf;AAAP;AAEQ;AAAR;;AACR;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACe;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AAEG;;;;AACX;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAEA;;AAAA;AAER;;;AAGQ;;AAAA;;;AAAA;AAEQ;AAAR;AACR;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;;AAAA;AAEM;;AAEA;;AACA;;;AACQ;AAAA;AAAA;AAAA;AAAR;AALN;;AAAA;;AAAA;AAU4B;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;;AAAA;;AAAA;AAAZ;AAA1C;AAAP;AAER;;;AAG6B;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AACU;;AAAc;;AAAd;AAAV;AAAA;AAAA;;AAAA;AAAX;AAAA;;;;AAGA;AAAA;AADU;;AACV;;AAAA;AAAA;;;AAAA;AAAA;;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAkB;;AAAlB;AAAP;AACO;;AAAA;AAAwB;;AAAxB;AAAP;AACO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;AACe;AAAR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAe;;AAAc;;AAAd;AAAf;AAAP;;AAKR;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACY;AAAA;;;;;;;;;;;;AACG;AAAA;AAAe;;AAAf;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;AAAA;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;AACO;;;AAAA;AAAA;AAAY;;AAAc;;AAAd;AAAZ;AAAP;;;AAEO;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAP;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 16 144"
    },
    "9": {
      "op": "bytecblock 0x151f7c75 \"count\" 0x00 0x 0x0000"
    },
    "28": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "30": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "33": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "\"count\""
      ]
    },
    "34": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "\"count\"",
        "0"
      ]
    },
    "35": {
      "op": "app_global_put",
      "stack_out": []
    },
    "36": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "38": {
      "op": "bz main_bare_routing@12",
      "stack_out": []
    },
    "41": {
      "op": "pushbytess 0x28d7c1b8 0xfa9cb973 0x6039a240 0xf8fd68a7 0x1f028db1 0x096b3a59 0x8d6e3a25 // method \"test_array(uint64,uint64,uint64,uint64)uint64\", method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_bool_array(uint64)uint64\", method \"test_arc4_conversion(uint64)uint64[]\", method \"sum_array(uint64[])uint64\", method \"test_arc4_bool()bool[]\"",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])"
      ],
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])"
      ]
    },
    "78": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_array(uint64,uint64,uint64,uint64)uint64)",
        "Method(test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[])",
        "Method(test_bool_array(uint64)uint64)",
        "Method(test_arc4_conversion(uint64)uint64[])",
        "Method(sum_array(uint64[])uint64)",
        "Method(test_arc4_bool()bool[])",
        "tmp%2#0"
      ]
    },
    "81": {
      "op": "match main_test_array_route@5 main_test_extend_from_tuple_route@6 main_test_extend_from_arc4_tuple_route@7 main_test_bool_array_route@8 main_test_arc4_conversion_route@9 main_sum_array_route@10 main_test_arc4_bool_route@11",
      "stack_out": []
    },
    "97": {
      "block": "main_after_if_else@14",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "98": {
      "block": "main_test_arc4_bool_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "100": {
      "op": "!",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "101": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "102": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "104": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "105": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "op": "callsub test_arc4_bool",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "108": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "0x151f7c75"
      ]
    },
    "109": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%52#0"
      ]
    },
    "110": {
      "op": "concat",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "111": {
      "op": "log",
      "stack_out": []
    },
    "112": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "113": {
      "op": "return",
      "stack_out": []
    },
    "114": {
      "block": "main_sum_array_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "116": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "117": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "118": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "120": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "121": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint64[])%0#0"
      ]
    },
    "124": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "127": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "128": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "129": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "130": {
      "op": "concat",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "131": {
      "op": "log",
      "stack_out": []
    },
    "132": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "133": {
      "op": "return",
      "stack_out": []
    },
    "134": {
      "block": "main_test_arc4_conversion_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "136": {
      "op": "!",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "137": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "138": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "140": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "141": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "144": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "145": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "148": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "0x151f7c75"
      ]
    },
    "149": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%39#0"
      ]
    },
    "150": {
      "op": "concat",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "151": {
      "op": "log",
      "stack_out": []
    },
    "152": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "153": {
      "op": "return",
      "stack_out": []
    },
    "154": {
      "block": "main_test_bool_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "156": {
      "op": "!",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "157": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "158": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "160": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "161": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "164": {
      "op": "btoi",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "165": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "168": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "169": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "170": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "171": {
      "op": "concat",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "172": {
      "op": "log",
      "stack_out": []
    },
    "173": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "return",
      "stack_out": []
    },
    "175": {
      "block": "main_test_extend_from_arc4_tuple_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "177": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "182": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%1#0"
      ]
    },
    "185": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "op": "callsub test_extend_from_arc4_tuple",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "188": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "0x151f7c75"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%24#0"
      ]
    },
    "190": {
      "op": "concat",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "191": {
      "op": "log",
      "stack_out": []
    },
    "192": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "193": {
      "op": "return",
      "stack_out": []
    },
    "194": {
      "block": "main_test_extend_from_tuple_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "196": {
      "op": "!",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "197": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "198": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "200": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "201": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "204": {
      "op": "dup",
      "defined_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0 (copy)"
      ]
    },
    "205": {
      "op": "extract 0 16",
      "defined_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0",
        "aggregate%extract%0#0"
      ]
    },
    "208": {
      "op": "swap",
      "stack_out": [
        "aggregate%extract%0#0",
        "reinterpret_Encoded((uint64,uint64),(uint64,uint64))%0#0"
      ]
    },
    "209": {
      "op": "extract 16 16",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ],
      "stack_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "212": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "op": "callsub test_extend_from_tuple",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "215": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "0x151f7c75"
      ]
    },
    "216": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%18#0"
      ]
    },
    "217": {
      "op": "concat",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "218": {
      "op": "log",
      "stack_out": []
    },
    "219": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "return",
      "stack_out": []
    },
    "221": {
      "block": "main_test_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "223": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "224": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "225": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "227": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "228": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "231": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "234": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0"
      ]
    },
    "235": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "238": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "241": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "tmp%7#0",
        "reinterpret_Encoded(uint64)%2#0",
        "tmp%8#0"
      ]
    },
    "242": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "245": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "246": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "247": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "248": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "249": {
      "op": "log",
      "stack_out": []
    },
    "250": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "251": {
      "op": "return",
      "stack_out": []
    },
    "252": {
      "block": "main_bare_routing@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "254": {
      "op": "bnz main_after_if_else@14",
      "stack_out": []
    },
    "257": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "259": {
      "op": "!",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "260": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "261": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "262": {
      "op": "return",
      "stack_out": []
    },
    "263": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_bits",
      "params": {
        "array#0": "bytes",
        "new_items_bytes#0": "bytes",
        "new_items_count#0": "uint64",
        "read_step#0": "uint64"
      },
      "block": "dynamic_array_concat_bits",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "266": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "read_offset#0"
      ]
    },
    "267": {
      "op": "dupn 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ]
    },
    "269": {
      "op": "frame_dig -4",
      "defined_out": [
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)"
      ]
    },
    "271": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array#0 (copy)",
        "0"
      ]
    },
    "272": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0"
      ]
    },
    "273": {
      "op": "dupn 2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)"
      ]
    },
    "275": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "array_length#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "277": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0"
      ]
    },
    "278": {
      "op": "dup",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length#0 (copy)"
      ]
    },
    "279": {
      "op": "itob",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "tmp%2#0"
      ]
    },
    "280": {
      "op": "extract 6 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0"
      ]
    },
    "283": {
      "op": "frame_dig -4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "new_array_length_b#0",
        "array#0 (copy)"
      ]
    },
    "285": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "array#0 (copy)",
        "new_array_length_b#0"
      ]
    },
    "286": {
      "op": "replace2 0",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ]
    },
    "288": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "289": {
      "op": "uncover 2"
    },
    "291": {
      "op": "uncover 3",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0"
      ]
    },
    "293": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "array_length#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "array_length#0",
        "7"
      ]
    },
    "295": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0"
      ]
    },
    "296": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array_length#0",
        "new_array_length#0",
        "result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "tmp%5#0",
        "8"
      ]
    },
    "297": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "298": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0",
        "current_bytes#0"
      ]
    },
    "299": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "new_array_length#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "new_array_length#0",
        "current_bytes#0"
      ]
    },
    "301": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0"
      ]
    },
    "302": {
      "op": "pushint 7 // 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "new_array_length#0",
        "7"
      ]
    },
    "304": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0"
      ]
    },
    "305": {
      "op": "intc_2 // 8",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "tmp%7#0",
        "8"
      ]
    },
    "306": {
      "op": "/",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "307": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "required_bytes#0"
      ]
    },
    "308": {
      "op": "cover 3",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0"
      ]
    },
    "310": {
      "op": "<",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%9#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%9#0"
      ]
    },
    "311": {
      "op": "bz dynamic_array_concat_bits_after_if_else@2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "314": {
      "op": "frame_dig 6",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0"
      ]
    },
    "316": {
      "op": "frame_dig 5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "required_bytes#0",
        "current_bytes#0"
      ]
    },
    "318": {
      "op": "-",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%10#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%10#0"
      ]
    },
    "319": {
      "op": "bzero",
      "defined_out": [
        "array_length#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#0",
        "result#7",
        "tmp%11#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0"
      ]
    },
    "320": {
      "op": "frame_dig 4",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%11#0",
        "result#0"
      ]
    },
    "322": {
      "op": "swap",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0",
        "tmp%11#0"
      ]
    },
    "323": {
      "op": "concat",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#7"
      ]
    },
    "324": {
      "op": "frame_bury 7",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "326": {
      "block": "dynamic_array_concat_bits_after_if_else@2",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "328": {
      "op": "frame_bury 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "330": {
      "op": "intc_0 // 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "331": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "333": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0"
      ]
    },
    "335": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "array_length#0",
        "read_offset#0",
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "array_length#0",
        "16"
      ]
    },
    "336": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "337": {
      "op": "dup",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_offset#0"
      ]
    },
    "338": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "340": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_length#0",
        "new_items_count#0 (copy)",
        "read_offset#0",
        "result#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "new_items_count#0 (copy)"
      ]
    },
    "342": {
      "op": "+",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_end#0"
      ]
    },
    "343": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_length#0",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "345": {
      "block": "dynamic_array_concat_bits_while_top@3",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0"
      ]
    },
    "347": {
      "op": "frame_dig 1",
      "defined_out": [
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "write_offset#0",
        "write_end#0"
      ]
    },
    "349": {
      "op": "<",
      "defined_out": [
        "tmp%15#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "tmp%15#0"
      ]
    },
    "350": {
      "op": "bz dynamic_array_concat_bits_after_while@5",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "353": {
      "op": "frame_dig -3",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)"
      ]
    },
    "355": {
      "op": "frame_dig 0",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0"
      ]
    },
    "357": {
      "op": "dup",
      "defined_out": [
        "new_items_bytes#0 (copy)",
        "read_offset#0",
        "read_offset#0 (copy)",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "358": {
      "op": "cover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "new_items_bytes#0 (copy)",
        "read_offset#0 (copy)"
      ]
    },
    "360": {
      "op": "getbit",
      "defined_out": [
        "read_offset#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0"
      ]
    },
    "361": {
      "op": "frame_dig 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0"
      ]
    },
    "363": {
      "op": "frame_dig 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0"
      ]
    },
    "365": {
      "op": "dup",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "tmp%16#0",
        "write_end#0",
        "write_offset#0",
        "write_offset#0 (copy)"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)",
        "write_offset#0 (copy)"
      ]
    },
    "366": {
      "op": "cover 3",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "tmp%16#0",
        "result#0",
        "write_offset#0 (copy)"
      ]
    },
    "368": {
      "op": "uncover 2",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0",
        "write_offset#0 (copy)",
        "tmp%16#0"
      ]
    },
    "370": {
      "op": "setbit",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "result#0"
      ]
    },
    "371": {
      "op": "frame_bury 4",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "373": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0",
        "1"
      ]
    },
    "374": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "write_offset#0"
      ]
    },
    "375": {
      "op": "frame_bury 2",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "377": {
      "op": "frame_dig -1",
      "defined_out": [
        "read_offset#0",
        "read_step#0 (copy)",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0",
        "read_step#0 (copy)"
      ]
    },
    "379": {
      "op": "+",
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "read_offset#0"
      ]
    },
    "380": {
      "op": "frame_bury 0",
      "defined_out": [
        "read_offset#0",
        "result#0",
        "write_end#0",
        "write_offset#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ]
    },
    "382": {
      "op": "b dynamic_array_concat_bits_while_top@3"
    },
    "385": {
      "block": "dynamic_array_concat_bits_after_while@5",
      "stack_in": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "read_offset#0",
        "write_end#0",
        "write_offset#0",
        "array_length#0",
        "result#0",
        "current_bytes#0",
        "required_bytes#0",
        "result#7",
        "result#0"
      ]
    },
    "387": {
      "op": "frame_bury 0"
    },
    "389": {
      "retsub": true,
      "op": "retsub"
    },
    "390": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0"
      ]
    },
    "394": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ]
    },
    "395": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0"
      ]
    },
    "396": {
      "op": "dupn 5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "398": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\""
      ]
    },
    "399": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\"",
        "0"
      ]
    },
    "400": {
      "op": "app_global_put",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "401": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "404": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "407": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "410": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%0#0"
      ]
    },
    "412": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "413": {
      "op": "uncover 14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0",
        "tmp%1#0"
      ]
    },
    "415": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "416": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%3#0"
      ]
    },
    "417": {
      "op": "uncover 13",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%3#0",
        "tmp%2#0"
      ]
    },
    "419": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%4#0"
      ]
    },
    "420": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%4#0",
        "tmp%3#0"
      ]
    },
    "422": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0"
      ]
    },
    "423": {
      "op": "dig 11",
      "defined_out": [
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "tmp%4#0 (copy)"
      ]
    },
    "425": {
      "op": "len",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0"
      ]
    },
    "426": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%value_len%0#0",
        "64"
      ]
    },
    "428": {
      "op": "<=",
      "defined_out": [
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%len_ok%0#0"
      ]
    },
    "429": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0"
      ]
    },
    "430": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "64"
      ]
    },
    "432": {
      "op": "bzero",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0"
      ]
    },
    "433": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "tmp%4#0"
      ]
    },
    "435": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%bzero%0#0 (copy)",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "tmp%4#0",
        "aggregate%bzero%0#0 (copy)"
      ]
    },
    "437": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%0#0",
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%head%5#0",
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "438": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%arc4_encoded%0#0",
        "aggregate%head%5#0"
      ]
    },
    "440": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%5#0",
        "aggregate%arc4_encoded%0#0"
      ]
    },
    "441": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0"
      ]
    },
    "442": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%6#0",
        "0x00000000000000000000000000000000"
      ]
    },
    "460": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "0x00000000000000000000000000000000",
        "aggregate%head%6#0"
      ]
    },
    "461": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0"
      ]
    },
    "462": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "y1#0 (copy)"
      ]
    },
    "464": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "465": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%3#0",
        "x1#0 (copy)"
      ]
    },
    "467": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "x1#0 (copy)",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "468": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0"
      ]
    },
    "469": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "tmp%5#0"
      ]
    },
    "471": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0"
      ]
    },
    "472": {
      "op": "uncover 12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0",
        "tmp%6#0"
      ]
    },
    "474": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%7#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%val_as_bytes%4#0",
        "aggregate%val_as_bytes%5#0"
      ]
    },
    "475": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0"
      ]
    },
    "476": {
      "op": "uncover 11",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%12#0",
        "tmp%7#0"
      ]
    },
    "478": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0"
      ]
    },
    "479": {
      "op": "uncover 10",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%13#0",
        "tmp%8#0"
      ]
    },
    "481": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "482": {
      "op": "dig 9",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0 (copy)"
      ]
    },
    "484": {
      "op": "len",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "aggregate%value_len%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0"
      ]
    },
    "485": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%value_len%1#0",
        "64"
      ]
    },
    "487": {
      "op": "<=",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "aggregate%len_ok%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%len_ok%1#0"
      ]
    },
    "488": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0"
      ]
    },
    "489": {
      "op": "uncover 9",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0"
      ]
    },
    "491": {
      "op": "dig 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "tmp%9#0",
        "aggregate%bzero%0#0 (copy)"
      ]
    },
    "493": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%1#0",
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%14#0",
        "aggregate%arc4_encoded%1#0"
      ]
    },
    "494": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%10#0",
        "aggregate%head%15#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%10#0",
        "aggregate%head%15#0"
      ]
    },
    "495": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%16#0",
        "aggregate%head%7#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%7#0",
        "aggregate%head%16#0"
      ]
    },
    "496": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0"
      ]
    },
    "497": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "y2#0 (copy)"
      ]
    },
    "499": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "500": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%val_as_bytes%6#0",
        "x2#0 (copy)"
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "x2#0 (copy)",
        "aggregate%val_as_bytes%6#0"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0"
      ]
    },
    "504": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "tmp%10#0"
      ]
    },
    "506": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0"
      ]
    },
    "507": {
      "op": "uncover 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "tmp%11#0"
      ]
    },
    "509": {
      "op": "itob",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%val_as_bytes%7#0",
        "aggregate%val_as_bytes%8#0"
      ]
    },
    "510": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0"
      ]
    },
    "511": {
      "op": "uncover 6",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%21#0",
        "tmp%12#0"
      ]
    },
    "513": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%13#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0"
      ]
    },
    "514": {
      "op": "uncover 5",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%22#0",
        "tmp%13#0"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "517": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0 (copy)"
      ]
    },
    "519": {
      "op": "len",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0"
      ]
    },
    "520": {
      "op": "pushint 64 // 64",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%value_len%2#0",
        "64"
      ]
    },
    "522": {
      "op": "<=",
      "defined_out": [
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%len_ok%2#0"
      ]
    },
    "523": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%14#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ]
    },
    "524": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%bzero%0#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0"
      ]
    },
    "526": {
      "op": "uncover 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "tmp%14#0",
        "aggregate%bzero%0#0"
      ]
    },
    "528": {
      "op": "b|",
      "defined_out": [
        "aggregate%arc4_encoded%2#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%23#0",
        "aggregate%arc4_encoded%2#0"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%24#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%19#0",
        "aggregate%head%24#0"
      ]
    },
    "530": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%17#0",
        "aggregate%head%25#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "aggregate%head%17#0",
        "aggregate%head%25#0"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0"
      ]
    },
    "532": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "533": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "535": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "537": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "538": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "541": {
      "op": "frame_dig 8",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "543": {
      "op": "frame_dig 9",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "545": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "546": {
      "op": "cover 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "548": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "144"
      ]
    },
    "550": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "551": {
      "op": "intc 4 // 144",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%bytes_offset%0#0",
        "144"
      ]
    },
    "553": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "554": {
      "op": "extract 16 128",
      "defined_out": [
        "aggregate%extract%2#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0"
      ]
    },
    "557": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)"
      ]
    },
    "558": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%extract%2#0 (copy)",
        "8"
      ]
    },
    "559": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0"
      ]
    },
    "560": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0 (copy)"
      ]
    },
    "562": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0 (copy)",
        "1"
      ]
    },
    "563": {
      "op": "+",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#2"
      ]
    },
    "564": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "aggregate%item1%1#0"
      ]
    },
    "565": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%extract%2#0",
        "aggregate%item1%1#0",
        "i#0",
        "i#2",
        "i#2 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "aggregate%item1%1#0",
        "i#2 (copy)"
      ]
    },
    "567": {
      "op": "==",
      "defined_out": [
        "aggregate%extract%2#0",
        "i#0",
        "i#2",
        "tmp%16#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2",
        "tmp%16#0"
      ]
    },
    "568": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "aggregate%extract%2#0",
        "i#2"
      ]
    },
    "569": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%2#0"
      ]
    },
    "570": {
      "op": "extract 48 16",
      "defined_out": [
        "aggregate%extract%14#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0"
      ]
    },
    "573": {
      "op": "dup",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%14#0 (copy)",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%14#0 (copy)"
      ]
    },
    "574": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0"
      ]
    },
    "577": {
      "op": "uncover 3",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0"
      ]
    },
    "579": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "2"
      ]
    },
    "581": {
      "op": "+",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2",
        "tmp%17#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "tmp%17#0"
      ]
    },
    "582": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "i#0",
        "i#2",
        "tmp%18#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "aggregate%extract%16#0",
        "tmp%18#0"
      ]
    },
    "583": {
      "op": "b==",
      "defined_out": [
        "aggregate%extract%14#0",
        "i#0",
        "i#2",
        "tmp%19#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0",
        "tmp%19#0"
      ]
    },
    "584": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%14#0"
      ]
    },
    "585": {
      "op": "extract 8 8",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0"
      ]
    },
    "588": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "i#2 (copy)"
      ]
    },
    "590": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "i#2 (copy)",
        "i#2 (copy)"
      ]
    },
    "592": {
      "op": "*",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2",
        "tmp%22#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "tmp%22#0"
      ]
    },
    "593": {
      "op": "itob",
      "defined_out": [
        "aggregate%extract%25#0",
        "i#0",
        "i#2",
        "tmp%23#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "aggregate%extract%25#0",
        "tmp%23#0"
      ]
    },
    "594": {
      "op": "b==",
      "defined_out": [
        "i#0",
        "i#2",
        "tmp%24#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#2",
        "tmp%24#0"
      ]
    },
    "595": {
      "op": "assert",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "596": {
      "op": "frame_bury 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "598": {
      "op": "b test_array_for_header@1"
    },
    "601": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "603": {
      "op": "dup",
      "defined_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "604": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "605": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "aggregate%bytes_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%bytes_len%0#0",
        "144"
      ]
    },
    "607": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0"
      ]
    },
    "608": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "609": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "aggregate%array_len%0#0"
      ]
    },
    "611": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_len%0#0",
        "as_bytes%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "612": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0"
      ]
    },
    "615": {
      "op": "dig 1",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_u16_bytes%0#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "617": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0"
      ]
    },
    "618": {
      "op": "pushbytes \"a\"",
      "defined_out": [
        "\"a\"",
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "621": {
      "op": "box_del",
      "defined_out": [
        "aggregate%array_len%0#0",
        "converted_array%0#0",
        "slot_contents%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "{box_del}"
      ]
    },
    "622": {
      "op": "pop",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0"
      ]
    },
    "623": {
      "op": "pushbytes \"a\"",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "converted_array%0#0",
        "\"a\""
      ]
    },
    "626": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "\"a\"",
        "converted_array%0#0"
      ]
    },
    "627": {
      "op": "box_put",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "628": {
      "error": "index access is out of bounds",
      "op": "extract 0 144 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "631": {
      "op": "dup",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "632": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "634": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%3#0 (copy)"
      ]
    },
    "635": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ]
    },
    "638": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "640": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%3#0",
        "8"
      ]
    },
    "641": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "642": {
      "op": "frame_bury 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "644": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "645": {
      "op": "frame_bury 5",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "last_point.y#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "648": {
      "op": "frame_bury 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "650": {
      "block": "test_array_for_header@6",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "652": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "aggregate%array_len%0#0"
      ]
    },
    "654": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "continue_looping%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "655": {
      "op": "bz test_array_after_for@14",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "658": {
      "op": "frame_dig 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1"
      ]
    },
    "660": {
      "op": "frame_dig 7",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "point_idx#0"
      ]
    },
    "662": {
      "op": "intc 4 // 144",
      "defined_out": [
        "144",
        "aggregate%array_len%0#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "point_idx#0",
        "144"
      ]
    },
    "664": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%4#0",
        "point_idx#0",
        "slot_contents%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "aggregate%bytes_offset%4#0"
      ]
    },
    "665": {
      "op": "intc 4 // 144",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%1#1",
        "aggregate%bytes_offset%4#0",
        "144"
      ]
    },
    "667": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "668": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0 (copy)",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0 (copy)"
      ]
    },
    "670": {
      "op": "extract 0 8",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%4#0",
        "point.x#0"
      ]
    },
    "673": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "674": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "aggregate%encoded_element%4#0",
        "8"
      ]
    },
    "675": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0"
      ]
    },
    "676": {
      "op": "frame_bury 6",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0"
      ]
    },
    "678": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "point.x#0",
        "last_point.x#0"
      ]
    },
    "680": {
      "op": "b<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "tmp%1#1"
      ]
    },
    "681": {
      "op": "bz test_array_else_body@9",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ]
    },
    "684": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "686": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "687": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "aggregate%encoded_element%4#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "tmp%2#1"
      ]
    },
    "688": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#1",
        "aggregate%encoded_element%4#0"
      ]
    },
    "689": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#1",
        "aggregate%encoded_element%4#0",
        "0"
      ]
    },
    "690": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%2#1",
        "tmp%3#1"
      ]
    },
    "691": {
      "op": "-",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "dx#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "692": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%encoded_element%3#0",
        "dx#0",
        "last_point.x#0",
        "point.y#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "694": {
      "block": "test_array_after_if_else@10",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "696": {
      "op": "frame_dig 4",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "698": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%8#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%8#1"
      ]
    },
    "699": {
      "op": "bz test_array_else_body@12",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "702": {
      "op": "frame_dig 4",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "704": {
      "op": "frame_dig 6",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0",
        "point.y#0"
      ]
    },
    "706": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "707": {
      "block": "test_array_after_if_else@13",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0"
      ]
    },
    "709": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "710": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "tmp%11#0"
      ]
    },
    "711": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "dy#0"
      ]
    },
    "712": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "713": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%11#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%11#0",
        "tmp%12#1"
      ]
    },
    "714": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%13#1"
      ]
    },
    "715": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%14#1"
      ]
    },
    "716": {
      "op": "frame_dig 5",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%14#1",
        "length#0"
      ]
    },
    "718": {
      "op": "+",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "719": {
      "op": "frame_bury 5",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "721": {
      "op": "frame_dig 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "723": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "1"
      ]
    },
    "724": {
      "op": "+",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "725": {
      "op": "frame_bury 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "727": {
      "op": "b test_array_for_header@6"
    },
    "730": {
      "block": "test_array_else_body@12",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "732": {
      "op": "frame_dig 4",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "734": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "735": {
      "op": "b test_array_after_if_else@13"
    },
    "738": {
      "block": "test_array_else_body@9",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%4#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "aggregate%encoded_element%4#0",
        "0"
      ]
    },
    "739": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "740": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "742": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "743": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "744": {
      "op": "-",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "745": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%encoded_element%3#0",
        "dx#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "747": {
      "op": "b test_array_after_if_else@10"
    },
    "750": {
      "block": "test_array_after_for@14",
      "stack_in": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "aggregate%encoded_element%3#0",
        "last_point.x#0",
        "aggregate%array_len%0#0",
        "dx#0",
        "last_point.y#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "752": {
      "op": "frame_bury 0"
    },
    "754": {
      "retsub": true,
      "op": "retsub"
    },
    "755": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "params": {
        "some_more.0#0": "bytes",
        "some_more.1#0": "bytes"
      },
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "758": {
      "op": "frame_dig -2",
      "defined_out": [
        "some_more.0#0 (copy)"
      ],
      "stack_out": [
        "some_more.0#0 (copy)"
      ]
    },
    "760": {
      "op": "frame_dig -1",
      "defined_out": [
        "some_more.0#0 (copy)",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "some_more.0#0 (copy)",
        "some_more.1#0 (copy)"
      ]
    },
    "762": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "763": {
      "op": "dup",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%head%1#0 (copy)"
      ]
    },
    "764": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "765": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "766": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0"
      ]
    },
    "767": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)"
      ]
    },
    "768": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%array_len%0#0 (copy)",
        "1"
      ]
    },
    "769": {
      "op": "-",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "tmp%2#0"
      ]
    },
    "770": {
      "op": "intc_3 // 16",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "tmp%2#0",
        "16"
      ]
    },
    "771": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "772": {
      "op": "dig 2",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "aggregate%head%1#0 (copy)"
      ]
    },
    "774": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%head%1#0 (copy)",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "775": {
      "op": "intc_3 // 16",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "aggregate%head%1#0 (copy)",
        "aggregate%bytes_offset%0#0",
        "16"
      ]
    },
    "776": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0"
      ]
    },
    "777": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0",
        "last#0 (copy)"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "last#0 (copy)"
      ]
    },
    "778": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "last#0 (copy)",
        "some_more.1#0 (copy)"
      ]
    },
    "780": {
      "op": "==",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%head%1#0",
        "last#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0",
        "tmp%3#0"
      ]
    },
    "781": {
      "op": "assert",
      "stack_out": [
        "aggregate%head%1#0",
        "aggregate%array_len%0#0",
        "last#0"
      ]
    },
    "782": {
      "op": "swap",
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "aggregate%array_len%0#0"
      ]
    },
    "783": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%1#0",
        "as_bytes%0#0",
        "last#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "as_bytes%0#0"
      ]
    },
    "784": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "as_u16_bytes%0#0",
        "last#0"
      ],
      "stack_out": [
        "aggregate%head%1#0",
        "last#0",
        "as_u16_bytes%0#0"
      ]
    },
    "787": {
      "op": "uncover 2",
      "stack_out": [
        "last#0",
        "as_u16_bytes%0#0",
        "aggregate%head%1#0"
      ]
    },
    "789": {
      "op": "concat",
      "defined_out": [
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0"
      ]
    },
    "790": {
      "op": "dup",
      "defined_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)"
      ]
    },
    "791": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "last#0",
        "result#0",
        "result#0 (copy)"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "result#0 (copy)",
        "0"
      ]
    },
    "792": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_length%0#0"
      ]
    },
    "793": {
      "op": "intc_1 // 1",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "794": {
      "op": "-",
      "defined_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0"
      ]
    },
    "795": {
      "op": "dig 1",
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "result#0 (copy)"
      ]
    },
    "797": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "last#0",
        "result#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "tmp%6#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "800": {
      "op": "swap",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0"
      ]
    },
    "801": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "tmp%6#0",
        "16"
      ]
    },
    "802": {
      "op": "*",
      "defined_out": [
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "803": {
      "op": "intc_3 // 16",
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%1#0",
        "16"
      ]
    },
    "804": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "last#0",
        "result#0"
      ],
      "stack_out": [
        "last#0",
        "result#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "805": {
      "op": "uncover 2",
      "stack_out": [
        "result#0",
        "aggregate%encoded_element%1#0",
        "last#0"
      ]
    },
    "807": {
      "op": "==",
      "defined_out": [
        "result#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "result#0",
        "tmp%7#0"
      ]
    },
    "808": {
      "op": "assert",
      "stack_out": [
        "result#0"
      ]
    },
    "809": {
      "retsub": true,
      "op": "retsub"
    },
    "810": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "params": {
        "some_more#0": "bytes"
      },
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "813": {
      "op": "frame_dig -1",
      "defined_out": [
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "some_more#0 (copy)"
      ]
    },
    "815": {
      "op": "pop",
      "stack_out": []
    },
    "816": {
      "op": "frame_dig -1",
      "stack_out": [
        "some_more#0 (copy)"
      ]
    },
    "818": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%0#0"
      ]
    },
    "819": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%bytes_len%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%0#0",
        "16"
      ]
    },
    "820": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%0#0"
      ]
    },
    "821": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "822": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0"
      ],
      "stack_out": [
        "as_u16_bytes%0#0"
      ]
    },
    "825": {
      "op": "frame_dig -1",
      "stack_out": [
        "as_u16_bytes%0#0",
        "some_more#0 (copy)"
      ]
    },
    "827": {
      "op": "concat",
      "defined_out": [
        "converted_array%0#0"
      ],
      "stack_out": [
        "converted_array%0#0"
      ]
    },
    "828": {
      "retsub": true,
      "op": "retsub"
    },
    "829": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "832": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "aggregate%bytes_len%3#0"
      ]
    },
    "833": {
      "op": "dupn 4",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "835": {
      "op": "frame_dig -1"
    },
    "837": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "838": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "839": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "840": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "842": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "844": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "845": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "848": {
      "op": "frame_dig 6",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "850": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "851": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "853": {
      "op": "%",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "854": {
      "op": "!",
      "defined_out": [
        "i#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "855": {
      "op": "frame_dig 4",
      "defined_out": [
        "i#0",
        "slot_contents%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%4#0",
        "slot_contents%0#0"
      ]
    },
    "857": {
      "op": "swap",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0"
      ]
    },
    "858": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00"
      ]
    },
    "859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%4#0",
        "0x00",
        "0"
      ]
    },
    "860": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "0x00",
        "0",
        "tmp%4#0"
      ]
    },
    "862": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "863": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "864": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "866": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "867": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "868": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "870": {
      "op": "b test_bool_array_for_header@1"
    },
    "873": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0"
      ]
    },
    "875": {
      "op": "dupn 2",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "aggregate%slot_contents%1#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%slot_contents%1#0 (copy)"
      ]
    },
    "877": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%1#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "878": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%1#0",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "aggregate%bytes_len%1#0",
        "length#0 (copy)"
      ]
    },
    "880": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "slot%0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "tmp%7#0"
      ]
    },
    "881": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "882": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%slot_contents%1#0",
        "slot%0",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%slot_contents%1#0",
        "slot_contents%2#0"
      ]
    },
    "884": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "concat%1#0"
      ]
    },
    "885": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "886": {
      "op": "frame_dig -1",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "length#0 (copy)"
      ]
    },
    "888": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%bytes_len%2#0",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "length#0 (copy)",
        "2"
      ]
    },
    "890": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "slot%0",
        "tmp%9#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "aggregate%bytes_len%2#0",
        "tmp%9#0"
      ]
    },
    "891": {
      "op": "==",
      "defined_out": [
        "slot%0",
        "tmp%10#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "tmp%10#0"
      ]
    },
    "892": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0"
      ]
    },
    "893": {
      "op": "intc_0 // 0",
      "defined_out": [
        "count#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot%0",
        "count#0"
      ]
    },
    "894": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%slot_contents%3#0",
        "count#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%slot_contents%3#0"
      ]
    },
    "896": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "897": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "899": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "900": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "item_index_internal%0#0",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "902": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "904": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%bytes_len%3#0"
      ]
    },
    "906": {
      "op": "<",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "907": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "910": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0"
      ]
    },
    "912": {
      "op": "frame_dig 3",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0"
      ]
    },
    "914": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%4#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "915": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "916": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%bytes_len%3#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%encoded_element%0#0",
        "0"
      ]
    },
    "917": {
      "op": "getbit",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "918": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "val#0",
        "count#9"
      ]
    },
    "920": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#9",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "922": {
      "op": "bz test_bool_array_after_if_else@8",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "925": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "927": {
      "op": "intc_1 // 1",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "928": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#9"
      ]
    },
    "929": {
      "op": "frame_bury 2",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "931": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "933": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "935": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "937": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "938": {
      "op": "+",
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "939": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "941": {
      "op": "b test_bool_array_for_header@5"
    },
    "944": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%bytes_len%3#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "946": {
      "op": "frame_bury 0"
    },
    "948": {
      "retsub": true,
      "op": "retsub"
    },
    "949": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "952": {
      "op": "bytec_3 // \"\"",
      "stack_out": [
        "aggregate%array_len%1#0"
      ]
    },
    "953": {
      "op": "dupn 4",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ]
    },
    "955": {
      "op": "frame_dig -1"
    },
    "957": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "958": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "959": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "960": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "962": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "964": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "965": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "968": {
      "op": "frame_dig 6",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "970": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "971": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "972": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "slot_contents%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "slot_contents%0#0"
      ]
    },
    "974": {
      "op": "swap",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "975": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "976": {
      "op": "frame_bury 4",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "978": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "979": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "980": {
      "op": "frame_bury 6",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "982": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "985": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%slot_contents%1#0"
      ]
    },
    "987": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "988": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%bytes_len%1#0",
        "8"
      ]
    },
    "989": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%array_len%1#0"
      ]
    },
    "990": {
      "op": "dup",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%array_len%1#0",
        "aggregate%array_len%1#0"
      ]
    },
    "991": {
      "op": "frame_bury 0",
      "defined_out": [
        "aggregate%array_len%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%array_len%1#0"
      ]
    },
    "993": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%array_len%1#0",
        "length#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "aggregate%array_len%1#0",
        "length#0 (copy)"
      ]
    },
    "995": {
      "op": "==",
      "defined_out": [
        "aggregate%array_len%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "996": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "997": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "998": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1000": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1001": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1003": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1005": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "aggregate%array_len%1#0"
      ]
    },
    "1007": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%1#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "1008": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1011": {
      "op": "frame_dig 4",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "1013": {
      "op": "frame_dig 3",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1015": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%1#0",
        "item_index_internal%0#0",
        "8"
      ]
    },
    "1016": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%1#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1017": {
      "op": "intc_2 // 8",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "1018": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "val#0"
      ]
    },
    "1019": {
      "op": "bytec_3 // 0x",
      "defined_out": [
        "0x",
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "val#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "val#0",
        "0x"
      ]
    },
    "1020": {
      "op": "b!=",
      "defined_out": [
        "aggregate%array_len%1#0",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "1021": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%7#0",
        "count#9"
      ]
    },
    "1023": {
      "op": "frame_bury 2",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#9",
        "item_index_internal%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "1025": {
      "op": "bz test_arc4_conversion_after_if_else@8",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1028": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "1030": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0",
        "1"
      ]
    },
    "1031": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#9"
      ]
    },
    "1032": {
      "op": "frame_bury 2",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1034": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "1036": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1038": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1040": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1041": {
      "op": "+",
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "1042": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1044": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "1047": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "0x0000"
      ]
    },
    "1049": {
      "op": "frame_dig 4",
      "defined_out": [
        "0x0000",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "0x0000",
        "slot_contents%2#0"
      ]
    },
    "1051": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0"
      ]
    },
    "1052": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "concat%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1053": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%1#0",
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "1056": {
      "op": "len",
      "defined_out": [
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "1057": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "concat%1#0",
        "len%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "1058": {
      "op": "/",
      "defined_out": [
        "concat%1#0",
        "div_floor%0#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "1059": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "as_bytes%0#0"
      ]
    },
    "1060": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%1#0"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1063": {
      "op": "replace2 0",
      "defined_out": [
        "arc4_arr#1"
      ],
      "stack_out": [
        "aggregate%array_len%1#0",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#1"
      ]
    },
    "1065": {
      "op": "frame_bury 0"
    },
    "1067": {
      "retsub": true,
      "op": "retsub"
    },
    "1068": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1071": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0 (copy)"
      ]
    },
    "1073": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0"
      ],
      "stack_out": [
        "extract_to_end%0#0"
      ]
    },
    "1076": {
      "op": "dup",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "extract_to_end%0#0"
      ]
    },
    "1077": {
      "op": "intc_0 // 0",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "extract_to_end%0#0",
        "total#0"
      ]
    },
    "1078": {
      "op": "swap",
      "defined_out": [
        "extract_to_end%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "extract_to_end%0#0"
      ]
    },
    "1079": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1080": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%bytes_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1081": {
      "op": "/",
      "defined_out": [
        "aggregate%array_len%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0"
      ]
    },
    "1082": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1083": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1085": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_len%0#0"
      ]
    },
    "1087": {
      "op": "<",
      "defined_out": [
        "aggregate%array_len%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1088": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1091": {
      "op": "frame_dig 0",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ]
    },
    "1093": {
      "op": "frame_dig 3",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0"
      ]
    },
    "1095": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1096": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1098": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "1099": {
      "op": "*",
      "defined_out": [
        "aggregate%array_len%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%1#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "1100": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1101": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "1103": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1104": {
      "op": "frame_bury 1",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1106": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1107": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1108": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1110": {
      "op": "b sum_array_for_header@1"
    },
    "1113": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "aggregate%array_len%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "1115": {
      "op": "frame_bury 0"
    },
    "1117": {
      "retsub": true,
      "op": "retsub"
    },
    "1118": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1119": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1120": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1121": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "1123": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1124": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "\"count\""
      ]
    },
    "1125": {
      "op": "dig 1",
      "defined_out": [
        "\"count\"",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"count\"",
        "tmp%0#0 (copy)"
      ]
    },
    "1127": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1128": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1130": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "1132": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1135": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0"
      ]
    },
    "1136": {
      "op": "bytec_1 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "0",
        "\"count\""
      ]
    },
    "1137": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1138": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "1139": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1140": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%1#0"
      ]
    },
    "1142": {
      "op": "cover 4",
      "stack_out": [
        "tmp%1#0",
        "tmp%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1144": {
      "retsub": true,
      "op": "retsub"
    },
    "1145": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1146": {
      "op": "bytec_1 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "1147": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1148": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1149": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1150": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "1"
      ]
    },
    "1151": {
      "op": "+",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%0#0"
      ]
    },
    "1152": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1153": {
      "op": "dig 1",
      "stack_out": [
        "maybe_value%0#0",
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "1155": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "maybe_value%0#0 (copy)",
        "maybe_value%0#0"
      ]
    },
    "1157": {
      "op": "*",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "tmp%2#0"
      ]
    },
    "1158": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1159": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0"
      ],
      "stack_out": [
        "aggregate%head%1#0"
      ]
    },
    "1160": {
      "retsub": true,
      "op": "retsub"
    },
    "1161": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_bool",
      "params": {},
      "block": "test_arc4_bool",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1164": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1166": {
      "op": "txn Receiver",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1168": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1169": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x00"
      ]
    },
    "1170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0x00",
        "0"
      ]
    },
    "1171": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "tmp%2#0"
      ]
    },
    "1173": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0"
      ]
    },
    "1174": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0"
      ]
    },
    "1176": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1178": {
      "op": "!=",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0"
      ]
    },
    "1179": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0",
        "0x00"
      ]
    },
    "1180": {
      "op": "intc_0 // 0",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "tmp%7#0",
        "0x00",
        "0"
      ]
    },
    "1181": {
      "op": "uncover 2",
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "0x00",
        "0",
        "tmp%7#0"
      ]
    },
    "1183": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%encoded_bool%1#0"
      ]
    },
    "1184": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "concat%1#0"
      ]
    },
    "1185": {
      "op": "dupn 2",
      "defined_out": [
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "concat%1#0",
        "slot%0",
        "slot%0 (copy)"
      ]
    },
    "1187": {
      "op": "uncover 2",
      "defined_out": [
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "concat%1#0"
      ]
    },
    "1189": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "concat%1#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1190": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "concat%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1191": {
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "concat%1#0",
        "aggregate%bytes_len%0#0",
        "0x0000"
      ]
    },
    "1193": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "slot%0",
        "0x0000",
        "concat%1#0",
        "aggregate%bytes_len%0#0"
      ]
    },
    "1195": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "aggregate%bytes_len%0#0",
        "concat%1#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "0x0000",
        "concat%1#0",
        "aggregate%bytes_len%0#0",
        "8"
      ]
    },
    "1196": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "slot%0",
        "dyn_arr#1"
      ]
    },
    "1199": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "slot%0",
        "dyn_arr#1",
        "dyn_arr#1"
      ]
    },
    "1200": {
      "op": "cover 2",
      "defined_out": [
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "slot%0",
        "dyn_arr#1"
      ]
    },
    "1202": {
      "op": "dup",
      "defined_out": [
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "slot%0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)"
      ]
    },
    "1203": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "slot%0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "0"
      ]
    },
    "1204": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1205": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1206": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1208": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "1209": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)",
        "2"
      ]
    },
    "1211": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%12#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%12#0"
      ]
    },
    "1212": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1213": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)"
      ]
    },
    "1215": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%13#0"
      ]
    },
    "1216": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%13#0",
        "3"
      ]
    },
    "1218": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%14#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%14#0"
      ]
    },
    "1219": {
      "error": "expected 3 bytes",
      "op": "assert // expected 3 bytes",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1220": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%0#0 (copy)"
      ]
    },
    "1221": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1222": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)"
      ]
    },
    "1224": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "dyn_arr#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "dyn_arr#1 (copy)",
        "16"
      ]
    },
    "1225": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1226": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "0x00"
      ]
    },
    "1227": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%0#0",
        "0x00",
        "0"
      ]
    },
    "1228": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%0#0"
      ]
    },
    "1230": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0"
      ]
    },
    "1231": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%2#0",
        "0"
      ]
    },
    "1232": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0"
      ]
    },
    "1233": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%16#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%16#0"
      ]
    },
    "1235": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "1237": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%18#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%1#0",
        "tmp%18#0"
      ]
    },
    "1238": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%19#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "tmp%19#0"
      ]
    },
    "1239": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0"
      ]
    },
    "1240": {
      "op": "intc_1 // 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "1"
      ]
    },
    "1241": {
      "op": ">",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%lt%1#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "aggregate%lt%1#0"
      ]
    },
    "1242": {
      "error": "index access is out of bounds",
      "op": "assert // index access is out of bounds",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1"
      ]
    },
    "1243": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "dyn_arr#1",
        "17"
      ]
    },
    "1245": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%2#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%2#0"
      ]
    },
    "1246": {
      "op": "bytec_2 // 0x00",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%2#0",
        "0x00"
      ]
    },
    "1247": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%2#0",
        "0x00",
        "0"
      ]
    },
    "1248": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "0x00",
        "0",
        "aggregate%get_bit%2#0"
      ]
    },
    "1250": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_bool%3#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%encoded_bool%3#0"
      ]
    },
    "1251": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%encoded_bool%3#0",
        "0"
      ]
    },
    "1252": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "dyn_arr#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%3#0"
      ]
    },
    "1253": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%21#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%3#0",
        "tmp%21#0"
      ]
    },
    "1255": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%3#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "1257": {
      "op": "!=",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%3#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%23#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "aggregate%get_bit%3#0",
        "tmp%23#0"
      ]
    },
    "1258": {
      "op": "==",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "tmp%24#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%0",
        "tmp%24#0"
      ]
    },
    "1259": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1"
      ]
    },
    "1260": {
      "op": "intc_0 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1261": {
      "block": "test_arc4_bool_for_header@1",
      "stack_in": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1263": {
      "op": "frame_dig 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "1265": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1266": {
      "op": "bz test_arc4_bool_after_for@4",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1269": {
      "op": "frame_dig 4",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1271": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1272": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "16"
      ]
    },
    "1273": {
      "op": "+",
      "defined_out": [
        "aggregate%add%2#0",
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0"
      ]
    },
    "1274": {
      "op": "frame_dig 1",
      "defined_out": [
        "aggregate%add%2#0",
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%add%2#0",
        "dyn_arr#1"
      ]
    },
    "1276": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "dyn_arr#1",
        "aggregate%add%2#0"
      ]
    },
    "1277": {
      "op": "getbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0"
      ]
    },
    "1278": {
      "op": "bytec_2 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0",
        "0x00"
      ]
    },
    "1279": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%array_length%0#0",
        "aggregate%get_bit%4#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%get_bit%4#0",
        "0x00",
        "0"
      ]
    },
    "1280": {
      "op": "uncover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "0x00",
        "0",
        "aggregate%get_bit%4#0"
      ]
    },
    "1282": {
      "op": "setbit",
      "defined_out": [
        "aggregate%array_length%0#0",
        "b#0",
        "dyn_arr#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "1283": {
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "b#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "b#0",
        "slot_contents%4#0"
      ]
    },
    "1285": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "b#0"
      ]
    },
    "1286": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "slot%1"
      ]
    },
    "1287": {
      "op": "frame_bury 3",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1289": {
      "op": "intc_1 // 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1290": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1291": {
      "op": "frame_bury 4",
      "defined_out": [
        "aggregate%array_length%0#0",
        "dyn_arr#1",
        "item_index_internal%0#0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1293": {
      "op": "b test_arc4_bool_for_header@1"
    },
    "1296": {
      "block": "test_arc4_bool_after_for@4",
      "stack_in": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1298": {
      "op": "dup",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1299": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%bytes_len%1#0"
      ]
    },
    "1300": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "aggregate%bytes_len%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%bytes_len%1#0",
        "4"
      ]
    },
    "1302": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%27#0"
      ]
    },
    "1303": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1304": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1305": {
      "error": "index access is out of bounds",
      "op": "extract 0 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "1308": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "aggregate%encoded_element%0#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%0#0",
        "0"
      ]
    },
    "1309": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0"
      ]
    },
    "1310": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%29#0"
      ]
    },
    "1312": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "1314": {
      "op": "==",
      "defined_out": [
        "aggregate%get_bit%5#0",
        "aggregate%slot_contents%0#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%5#0",
        "tmp%31#0"
      ]
    },
    "1315": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%32#0"
      ]
    },
    "1316": {
      "error": "expected correct value at 0",
      "op": "assert // expected correct value at 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1317": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1318": {
      "error": "index access is out of bounds",
      "op": "extract 1 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "1321": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%1#0",
        "0"
      ]
    },
    "1322": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0"
      ]
    },
    "1323": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%34#0"
      ]
    },
    "1325": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "1327": {
      "op": "!=",
      "defined_out": [
        "aggregate%get_bit%6#0",
        "aggregate%slot_contents%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%6#0",
        "tmp%36#0"
      ]
    },
    "1328": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%37#0"
      ]
    },
    "1329": {
      "error": "expected correct value at 1",
      "op": "assert // expected correct value at 1",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1330": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%slot_contents%0#0 (copy)"
      ]
    },
    "1331": {
      "error": "index access is out of bounds",
      "op": "extract 2 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "1334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%encoded_element%2#0",
        "0"
      ]
    },
    "1335": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0"
      ]
    },
    "1336": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%39#0"
      ]
    },
    "1338": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%39#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%39#0",
        "tmp%40#0"
      ]
    },
    "1340": {
      "op": "==",
      "defined_out": [
        "aggregate%get_bit%7#0",
        "aggregate%slot_contents%0#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "aggregate%get_bit%7#0",
        "tmp%41#0"
      ]
    },
    "1341": {
      "op": "==",
      "defined_out": [
        "aggregate%slot_contents%0#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0",
        "tmp%42#0"
      ]
    },
    "1342": {
      "error": "expected correct value at 2",
      "op": "assert // expected correct value at 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%slot_contents%0#0"
      ]
    },
    "1343": {
      "error": "index access is out of bounds",
      "op": "extract 3 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%3#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%encoded_element%3#0"
      ]
    },
    "1346": {
      "op": "intc_0 // 0",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%encoded_element%3#0",
        "0"
      ]
    },
    "1347": {
      "op": "getbit",
      "defined_out": [
        "aggregate%get_bit%8#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0"
      ]
    },
    "1348": {
      "op": "txn Sender",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%44#0"
      ]
    },
    "1350": {
      "op": "txn Receiver",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "1352": {
      "op": "!=",
      "defined_out": [
        "aggregate%get_bit%8#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "aggregate%get_bit%8#0",
        "tmp%46#0"
      ]
    },
    "1353": {
      "op": "==",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "tmp%47#0"
      ]
    },
    "1354": {
      "error": "expected correct value at 3",
      "op": "assert // expected correct value at 3",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0"
      ]
    },
    "1355": {
      "op": "frame_dig 0",
      "defined_out": [
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0"
      ]
    },
    "1357": {
      "op": "dup",
      "defined_out": [
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "slot_contents%9#0 (copy)"
      ]
    },
    "1358": {
      "op": "len",
      "defined_out": [
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1359": {
      "op": "bytec 4 // 0x0000",
      "defined_out": [
        "0x0000",
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0",
        "0x0000"
      ]
    },
    "1361": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0"
      ]
    },
    "1363": {
      "op": "intc_2 // 8",
      "defined_out": [
        "0x0000",
        "8",
        "aggregate%bytes_len%2#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "0x0000",
        "slot_contents%9#0",
        "aggregate%bytes_len%2#0",
        "8"
      ]
    },
    "1364": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_bits",
      "op": "callsub dynamic_array_concat_bits",
      "defined_out": [
        "bit_packed_source%0#0"
      ],
      "stack_out": [
        "slot%0",
        "dyn_arr#1",
        "aggregate%array_length%0#0",
        "slot%1",
        "item_index_internal%0#0",
        "bit_packed_source%0#0"
      ]
    },
    "1367": {
      "op": "frame_bury 0"
    },
    "1369": {
      "retsub": true,
      "op": "retsub"
    }
  }
}