{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AAoDK;;AAAA;AAAA;AAAA;;AAAA;AApDL;;;AAoDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAlCL;;;AAAA;AAkCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AApBL;;;AAAA;AAoBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJL;;AAAA;;;;;;;;;AAIA;;;;;;;;AAEQ;AAAa;AAAb;AAE6C;;;AACjB;;;AACA;;;AAFhB;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFL;AAGK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHL;AAKE;AAAA;;AAAO;;AAAP;AAAjB;;;;;AACmB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;;;AAAuB;;AAAA;;AAAA;AAAvB;AAAA;AAAP;;;;;;;;AAEwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAb;AAA/B;;AAA+B;AAA/B;AAAA;AA2DS;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AACJ;AAAT;;AACwB;AAApB;;AAAa;;AAAA;;AAAA;AAArB;;;;;AACgB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AACL;;AAAA;AAAX;;;AACiB;;AALA;AAKA;AAAsB;AAFvB;AAEuB;AAAtB;AAAL;;AAGD;;AAAA;;AAAA;AAAX;;;AACY;;AAAA;;AAAK;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AAST;;AAAA;;AAAK;;;;AARD;AAIC;AAAiB;;AAPjB;AAOiB;AAAjB;AAAL;;;;;AAjEJ;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAI;;AAAJ;AAAA;AAAA;;;;;;AAAA;;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACe;;;;;;;;;;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;;;AAGR;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAEA;;AAAA;AAER;;;AAGmB;;AAAA;;;AAAX;AAEQ;AAAR;AACY;AAAA;AAAA;;AAApB;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACqB;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAJN",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 8 80"
    },
    "7": {
      "op": "bytecblock \"count\" 0x151f7c75 \"\" \"a\""
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "28": {
      "op": "bytec_0 // \"count\""
    },
    "29": {
      "op": "intc_0 // 0"
    },
    "30": {
      "op": "app_global_put"
    },
    "31": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "33": {
      "op": "bz main_bare_routing@9",
      "stack_out": []
    },
    "36": {
      "op": "pushbytess 0x28d7c1b8 0xf8fd68a7 0x1f028db1 0x096b3a59 // method \"test_array(uint64,uint64,uint64,uint64)uint64\", method \"test_bool_array(uint64)uint64\", method \"test_arc4_conversion(uint64)uint64[]\", method \"sum_array(uint64[])uint64\""
    },
    "58": {
      "op": "txna ApplicationArgs 0"
    },
    "61": {
      "op": "match main_test_array_route@5 main_test_bool_array_route@6 main_test_arc4_conversion_route@7 main_sum_array_route@8"
    },
    "71": {
      "block": "main_after_if_else@11",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "72": {
      "op": "return"
    },
    "73": {
      "block": "main_sum_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "75": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "76": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "77": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "79": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "80": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "83": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "86": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "87": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "88": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "89": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "90": {
      "op": "log",
      "stack_out": []
    },
    "91": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "92": {
      "op": "return"
    },
    "93": {
      "block": "main_test_arc4_conversion_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "95": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "96": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "97": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "99": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "100": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "103": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "104": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "107": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "0x151f7c75"
      ]
    },
    "108": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%21#0"
      ]
    },
    "109": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "110": {
      "op": "log",
      "stack_out": []
    },
    "111": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "112": {
      "op": "return"
    },
    "113": {
      "block": "main_test_bool_array_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "115": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "116": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "117": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "119": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "120": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "123": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "124": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "127": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "128": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "129": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "130": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "131": {
      "op": "log",
      "stack_out": []
    },
    "132": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "133": {
      "op": "return"
    },
    "134": {
      "block": "main_test_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "136": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "137": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "138": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "140": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "141": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "144": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "147": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ]
    },
    "148": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "151": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "154": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0"
      ]
    },
    "155": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "158": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "159": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "160": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "161": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "162": {
      "op": "log",
      "stack_out": []
    },
    "163": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "164": {
      "op": "return"
    },
    "165": {
      "block": "main_bare_routing@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "167": {
      "op": "bnz main_after_if_else@11",
      "stack_out": []
    },
    "170": {
      "op": "txn ApplicationID"
    },
    "172": {
      "op": "!"
    },
    "173": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "174": {
      "op": "intc_1 // 1"
    },
    "175": {
      "op": "return"
    },
    "176": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "179": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array%value%3#1"
      ]
    },
    "180": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0"
      ]
    },
    "181": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0"
      ]
    },
    "182": {
      "op": "dupn 5",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "184": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\""
      ]
    },
    "185": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\"",
        "0"
      ]
    },
    "186": {
      "op": "app_global_put",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "187": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "190": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "193": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "196": {
      "op": "uncover 11",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%0#0"
      ]
    },
    "198": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%sub_item%1#1"
      ]
    },
    "199": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "array%sub_item%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%sub_item%1#1",
        "0x00000000000000000000000000000000"
      ]
    },
    "217": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "0x00000000000000000000000000000000",
        "array%sub_item%1#1"
      ]
    },
    "218": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1"
      ]
    },
    "219": {
      "op": "uncover 11",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1",
        "tmp%1#0"
      ]
    },
    "221": {
      "op": "itob",
      "defined_out": [
        "array%encoded%2#1",
        "array%sub_item%2#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1",
        "array%sub_item%2#1"
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "array%encoded%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%3#1"
      ]
    },
    "223": {
      "op": "uncover 10",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%3#1",
        "tmp%2#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "array%encoded%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%4#1"
      ]
    },
    "226": {
      "op": "uncover 9",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%4#1",
        "tmp%3#0"
      ]
    },
    "228": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1"
      ]
    },
    "229": {
      "op": "frame_dig -3",
      "defined_out": [
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "y1#0 (copy)"
      ]
    },
    "231": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%sub_item%3#1"
      ]
    },
    "232": {
      "op": "frame_dig -4",
      "defined_out": [
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "x1#0 (copy)"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "x1#0 (copy)",
        "array%sub_item%3#1"
      ]
    },
    "235": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1"
      ]
    },
    "236": {
      "op": "uncover 9",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1",
        "tmp%4#0"
      ]
    },
    "238": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%7#1",
        "array%sub_item%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1",
        "array%sub_item%4#1"
      ]
    },
    "239": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%8#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1"
      ]
    },
    "240": {
      "op": "uncover 8",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1",
        "tmp%5#0"
      ]
    },
    "242": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%8#1",
        "array%sub_item%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1",
        "array%sub_item%5#1"
      ]
    },
    "243": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%9#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%9#1"
      ]
    },
    "244": {
      "op": "uncover 7",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%9#1",
        "tmp%6#0"
      ]
    },
    "246": {
      "op": "concat",
      "defined_out": [
        "array%encoded%10#1",
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%10#1"
      ]
    },
    "247": {
      "op": "uncover 6",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%10#1",
        "tmp%7#0"
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "array%encoded%11#1",
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%11#1"
      ]
    },
    "250": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1"
      ]
    },
    "251": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "y2#0 (copy)"
      ]
    },
    "253": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%sub_item%6#1"
      ]
    },
    "254": {
      "op": "frame_dig -2",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%sub_item%6#1",
        "x2#0 (copy)"
      ]
    },
    "256": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "x2#0 (copy)",
        "array%sub_item%6#1"
      ]
    },
    "257": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1"
      ]
    },
    "258": {
      "op": "uncover 5",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%8#0"
      ]
    },
    "260": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1"
      ]
    },
    "262": {
      "op": "uncover 4",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%9#0"
      ]
    },
    "264": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1"
      ]
    },
    "265": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%15#1"
      ]
    },
    "266": {
      "op": "uncover 3",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0"
      ]
    },
    "268": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%16#1"
      ]
    },
    "269": {
      "op": "uncover 2",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ]
    },
    "271": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%17#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "array%data%1#1",
        "array%encoded%17#1"
      ]
    },
    "272": {
      "op": "concat",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0"
      ]
    },
    "273": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "274": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "276": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "278": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "279": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "282": {
      "op": "frame_dig 8"
    },
    "284": {
      "op": "frame_dig 9"
    },
    "286": {
      "op": "dup"
    },
    "287": {
      "op": "cover 2"
    },
    "289": {
      "op": "intc_3 // 80"
    },
    "290": {
      "op": "*"
    },
    "291": {
      "op": "intc_3 // 80"
    },
    "292": {
      "op": "extract3"
    },
    "293": {
      "op": "dup"
    },
    "294": {
      "op": "pushint 24 // 24"
    },
    "296": {
      "op": "extract_uint64"
    },
    "297": {
      "op": "dig 2"
    },
    "299": {
      "op": "intc_1 // 1"
    },
    "300": {
      "op": "+"
    },
    "301": {
      "op": "swap"
    },
    "302": {
      "op": "dig 1"
    },
    "304": {
      "op": "=="
    },
    "305": {
      "op": "assert"
    },
    "306": {
      "op": "swap"
    },
    "307": {
      "op": "extract 64 16"
    },
    "310": {
      "op": "dup"
    },
    "311": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds"
    },
    "314": {
      "op": "uncover 3"
    },
    "316": {
      "op": "pushint 2 // 2"
    },
    "318": {
      "op": "+"
    },
    "319": {
      "op": "itob"
    },
    "320": {
      "op": "b=="
    },
    "321": {
      "op": "assert"
    },
    "322": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds"
    },
    "325": {
      "op": "dig 1"
    },
    "327": {
      "op": "dig 2"
    },
    "329": {
      "op": "*"
    },
    "330": {
      "op": "itob"
    },
    "331": {
      "op": "b=="
    },
    "332": {
      "op": "assert"
    },
    "333": {
      "op": "frame_bury 9"
    },
    "335": {
      "op": "b test_array_for_header@1"
    },
    "338": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "340": {
      "op": "dup",
      "defined_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "341": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "byte_len%0#0"
      ]
    },
    "342": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "byte_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "byte_len%0#0",
        "80"
      ]
    },
    "343": {
      "op": "/",
      "defined_out": [
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0"
      ]
    },
    "344": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0",
        "len_%0#0"
      ]
    },
    "345": {
      "op": "frame_bury 4",
      "defined_out": [
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0"
      ]
    },
    "347": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "348": {
      "op": "extract 6 2",
      "defined_out": [
        "len_%0#0",
        "len_16_bit%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_16_bit%0#0"
      ]
    },
    "351": {
      "op": "dig 1",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_16_bit%0#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "353": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0"
      ]
    },
    "354": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "355": {
      "op": "box_del",
      "defined_out": [
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "{box_del}"
      ]
    },
    "356": {
      "op": "pop",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0"
      ]
    },
    "357": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "358": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "\"a\"",
        "concat_result%0#0"
      ]
    },
    "359": {
      "op": "box_put",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "360": {
      "op": "extract 0 80",
      "defined_out": [
        "array%value%3#1",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "363": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "array%value%3#1"
      ]
    },
    "364": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%value%3#1",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "366": {
      "op": "dup",
      "defined_out": [
        "array%value%3#1",
        "array%value%3#1 (copy)",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "array%value%3#1 (copy)"
      ]
    },
    "367": {
      "op": "extract 0 8",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "last_point.x#0"
      ]
    },
    "370": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "372": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "8"
      ]
    },
    "373": {
      "op": "extract_uint64",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "374": {
      "op": "frame_bury 3",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "376": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "377": {
      "op": "frame_bury 5",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "379": {
      "op": "intc_1 // 1",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "380": {
      "op": "frame_bury 7",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "382": {
      "block": "test_array_for_header@6",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "384": {
      "op": "frame_dig 4",
      "defined_out": [
        "len_%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "len_%0#0"
      ]
    },
    "386": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "len_%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "387": {
      "op": "bz test_array_after_for@14",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "390": {
      "op": "frame_dig 8"
    },
    "392": {
      "op": "frame_dig 7"
    },
    "394": {
      "op": "intc_3 // 80"
    },
    "395": {
      "op": "*"
    },
    "396": {
      "op": "intc_3 // 80"
    },
    "397": {
      "op": "extract3"
    },
    "398": {
      "op": "dupn 2"
    },
    "400": {
      "op": "extract 0 8"
    },
    "403": {
      "op": "swap"
    },
    "404": {
      "op": "intc_2 // 8"
    },
    "405": {
      "op": "extract_uint64"
    },
    "406": {
      "op": "frame_bury 6"
    },
    "408": {
      "op": "frame_dig 1"
    },
    "410": {
      "op": "b<"
    },
    "411": {
      "op": "bz test_array_else_body@9"
    },
    "414": {
      "op": "frame_dig 0"
    },
    "416": {
      "op": "intc_0 // 0"
    },
    "417": {
      "op": "extract_uint64"
    },
    "418": {
      "op": "swap"
    },
    "419": {
      "op": "intc_0 // 0"
    },
    "420": {
      "op": "extract_uint64"
    },
    "421": {
      "op": "-"
    },
    "422": {
      "op": "frame_bury 2"
    },
    "424": {
      "block": "test_array_after_if_else@10",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "426": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "428": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%6#1"
      ]
    },
    "429": {
      "op": "bz test_array_else_body@12",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "432": {
      "op": "frame_dig 3"
    },
    "434": {
      "op": "frame_dig 6"
    },
    "436": {
      "op": "-"
    },
    "437": {
      "block": "test_array_after_if_else@13",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0"
      ]
    },
    "439": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "440": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "tmp%7#1"
      ]
    },
    "441": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0"
      ]
    },
    "442": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "443": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "tmp%8#0"
      ]
    },
    "444": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "445": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1"
      ]
    },
    "446": {
      "op": "frame_dig 5",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1",
        "length#0"
      ]
    },
    "448": {
      "op": "+",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "449": {
      "op": "frame_bury 5",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "451": {
      "op": "frame_dig 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "453": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "1"
      ]
    },
    "454": {
      "op": "+",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "455": {
      "op": "frame_bury 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "457": {
      "op": "b test_array_for_header@6"
    },
    "460": {
      "block": "test_array_else_body@12",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "462": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "464": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "465": {
      "op": "b test_array_after_if_else@13"
    },
    "468": {
      "block": "test_array_else_body@9",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%4#1"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "array%value%4#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%4#1",
        "0"
      ]
    },
    "469": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "470": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%value%3#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "array%value%3#1"
      ]
    },
    "472": {
      "op": "intc_0 // 0",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "array%value%3#1",
        "0"
      ]
    },
    "473": {
      "op": "extract_uint64",
      "defined_out": [
        "array%value%3#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "474": {
      "op": "-",
      "defined_out": [
        "array%value%3#1",
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "475": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%value%3#1",
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "477": {
      "op": "b test_array_after_if_else@10"
    },
    "480": {
      "block": "test_array_after_for@14",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "482": {
      "op": "frame_bury 0"
    },
    "484": {
      "retsub": true,
      "op": "retsub"
    },
    "485": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "488": {
      "op": "bytec_2 // \"\""
    },
    "489": {
      "op": "dupn 4"
    },
    "491": {
      "op": "frame_dig -1"
    },
    "493": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "494": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "495": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "496": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "498": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "500": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "501": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "504": {
      "op": "frame_dig 6"
    },
    "506": {
      "op": "dup"
    },
    "507": {
      "op": "pushint 2 // 2"
    },
    "509": {
      "op": "%"
    },
    "510": {
      "op": "!"
    },
    "511": {
      "op": "pushbytess 0x00 0x80 // 0x00, 0x80"
    },
    "517": {
      "op": "uncover 2"
    },
    "519": {
      "op": "select"
    },
    "520": {
      "op": "frame_dig 4"
    },
    "522": {
      "op": "swap"
    },
    "523": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "524": {
      "op": "frame_bury 4"
    },
    "526": {
      "op": "intc_1 // 1"
    },
    "527": {
      "op": "+"
    },
    "528": {
      "op": "frame_bury 6"
    },
    "530": {
      "op": "b test_bool_array_for_header@1"
    },
    "533": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "535": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "536": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "1"
      ]
    },
    "537": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "538": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "539": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "541": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "543": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "544": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "545": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "546": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "548": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "549": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "551": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "553": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "555": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "556": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "559": {
      "op": "frame_dig 4"
    },
    "561": {
      "op": "frame_dig 3"
    },
    "563": {
      "op": "intc_1 // 1"
    },
    "564": {
      "op": "extract3"
    },
    "565": {
      "op": "intc_0 // 0"
    },
    "566": {
      "op": "getbyte"
    },
    "567": {
      "op": "frame_dig 1"
    },
    "569": {
      "op": "frame_bury 2"
    },
    "571": {
      "op": "bz test_bool_array_after_if_else@8"
    },
    "574": {
      "op": "frame_dig 1"
    },
    "576": {
      "op": "intc_1 // 1"
    },
    "577": {
      "op": "+"
    },
    "578": {
      "op": "frame_bury 2"
    },
    "580": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "582": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "584": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "586": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "587": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "588": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "590": {
      "op": "b test_bool_array_for_header@5"
    },
    "593": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "595": {
      "op": "frame_bury 0"
    },
    "597": {
      "retsub": true,
      "op": "retsub"
    },
    "598": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "601": {
      "op": "bytec_2 // \"\""
    },
    "602": {
      "op": "dupn 4"
    },
    "604": {
      "op": "frame_dig -1"
    },
    "606": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "607": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "608": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "609": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "611": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "613": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "614": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "617": {
      "op": "frame_dig 6"
    },
    "619": {
      "op": "dup"
    },
    "620": {
      "op": "itob"
    },
    "621": {
      "op": "frame_dig 4"
    },
    "623": {
      "op": "swap"
    },
    "624": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "625": {
      "op": "frame_bury 4"
    },
    "627": {
      "op": "intc_1 // 1"
    },
    "628": {
      "op": "+"
    },
    "629": {
      "op": "frame_bury 6"
    },
    "631": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "634": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "636": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "637": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "638": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "639": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "640": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "642": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "644": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "645": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "646": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "647": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "649": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "650": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "652": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "654": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "656": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "657": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "660": {
      "op": "frame_dig 4"
    },
    "662": {
      "op": "frame_dig 3"
    },
    "664": {
      "op": "intc_2 // 8"
    },
    "665": {
      "op": "*"
    },
    "666": {
      "op": "intc_2 // 8"
    },
    "667": {
      "op": "extract3"
    },
    "668": {
      "op": "extract 0 8"
    },
    "671": {
      "op": "pushbytes 0x0000000000000000"
    },
    "681": {
      "op": "!="
    },
    "682": {
      "op": "frame_dig 1"
    },
    "684": {
      "op": "frame_bury 2"
    },
    "686": {
      "op": "bz test_arc4_conversion_after_if_else@8"
    },
    "689": {
      "op": "frame_dig 1"
    },
    "691": {
      "op": "intc_1 // 1"
    },
    "692": {
      "op": "+"
    },
    "693": {
      "op": "frame_bury 2"
    },
    "695": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "697": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "699": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "701": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "702": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "703": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "705": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "708": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0"
      ]
    },
    "710": {
      "op": "dup",
      "defined_out": [
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ]
    },
    "711": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0"
      ]
    },
    "712": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "713": {
      "op": "/",
      "defined_out": [
        "len_%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_%0#0"
      ]
    },
    "714": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "as_bytes%0#0"
      ]
    },
    "715": {
      "op": "extract 6 2",
      "defined_out": [
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_16_bit%0#0"
      ]
    },
    "718": {
      "op": "swap",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ]
    },
    "719": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#1"
      ]
    },
    "720": {
      "op": "frame_bury 0"
    },
    "722": {
      "retsub": true,
      "op": "retsub"
    },
    "723": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "726": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0 (copy)"
      ]
    },
    "728": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "731": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0"
      ]
    },
    "732": {
      "op": "intc_0 // 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0",
        "total#0"
      ]
    },
    "733": {
      "op": "swap",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "734": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1"
      ]
    },
    "735": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "736": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1"
      ]
    },
    "737": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "738": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "740": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array%array_len%0#1"
      ]
    },
    "742": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "743": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "746": {
      "op": "frame_dig 0"
    },
    "748": {
      "op": "frame_dig 3"
    },
    "750": {
      "op": "dup"
    },
    "751": {
      "op": "cover 2"
    },
    "753": {
      "op": "intc_2 // 8"
    },
    "754": {
      "op": "*"
    },
    "755": {
      "op": "intc_2 // 8"
    },
    "756": {
      "op": "extract3"
    },
    "757": {
      "op": "intc_0 // 0"
    },
    "758": {
      "op": "extract_uint64"
    },
    "759": {
      "op": "frame_dig 1"
    },
    "761": {
      "op": "+"
    },
    "762": {
      "op": "frame_bury 1"
    },
    "764": {
      "op": "intc_1 // 1"
    },
    "765": {
      "op": "+"
    },
    "766": {
      "op": "frame_bury 3"
    },
    "768": {
      "op": "b sum_array_for_header@1"
    },
    "771": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "773": {
      "op": "frame_bury 0"
    },
    "775": {
      "retsub": true,
      "op": "retsub"
    },
    "776": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "777": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "778": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "779": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "780": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "781": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "782": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"count\""
      ]
    },
    "783": {
      "op": "swap",
      "stack_out": [
        "\"count\"",
        "new_state_value%0#0"
      ]
    },
    "784": {
      "op": "app_global_put",
      "stack_out": []
    },
    "785": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "787": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "788": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"count\""
      ]
    },
    "789": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "790": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "791": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "793": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "0"
      ]
    },
    "794": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "0",
        "\"count\""
      ]
    },
    "795": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "796": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0"
      ]
    },
    "797": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "798": {
      "op": "+",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "to_encode%0#0"
      ]
    },
    "799": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "800": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "801": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "0",
        "\"count\""
      ]
    },
    "802": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%3#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "803": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0"
      ]
    },
    "804": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "0"
      ]
    },
    "805": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "0",
        "\"count\""
      ]
    },
    "806": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "807": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_value%4#0"
      ]
    },
    "808": {
      "op": "*",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "to_encode%1#0"
      ]
    },
    "809": {
      "op": "itob",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "810": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "811": {
      "retsub": true,
      "op": "retsub"
    }
  }
}