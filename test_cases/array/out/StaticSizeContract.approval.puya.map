{
  "version": 3,
  "sources": [
    "../static_size.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBQ;AAAa;AAAb;AAFR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;;AAmEK;;AAAA;AAAA;AAAA;;AAAA;AAnEL;;;AAmEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAjDL;;;AAAA;AAiDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAnCL;;;AAAA;AAmCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;;AAAA;AAAA;AAAA;;AAAA;AA3BL;;;AA2BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAqBK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAJL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAIK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAJL;;AAAA;;;;;;;;;AAIA;;;;;;;;AAEQ;AAAa;AAAb;AAE6C;;;AACjB;;;AACA;;;AAFhB;;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAFL;AAGK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAHL;AAKE;AAAA;;AAAO;;AAAP;AAAjB;;;;;AACmB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAmB;;AAAI;AAAJ;AAAnB;AAAA;;AAAA;AAAP;AACO;AAAA;;;AAAA;AAAA;;;AAAuB;;AAAI;;AAAJ;AAAvB;AAAA;AAAP;AACO;;;AAAuB;;AAAA;;AAAA;AAAvB;AAAA;AAAP;;;;;;;;AAEwC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAb;AAA/B;;AAA+B;AAA/B;AAAA;AA8ES;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AACJ;AAAT;;AACwB;AAApB;;AAAa;;AAAA;;AAAA;AAArB;;;;;AACgB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AACL;;AAAA;AAAX;;;AACiB;;AALA;AAKA;AAAsB;AAFvB;AAEuB;AAAtB;AAAL;;AAGD;;AAAA;;AAAA;AAAX;;;AACY;;AAAA;;AAAK;AAGS;;AAAA;AAAA;AAAU;AAAA;AAAA;AAAV;AAAR;AAAV;;AAAA;AAAA;;AAVa;;AAAA;AAAA;AAAA;;;;;AAST;;AAAA;;AAAK;;;;AARD;AAIC;AAAiB;;AAPjB;AAOiB;AAAjB;AAAL;;;;;AAnFJ;;AAAA;;AAAA;AAER;;;AAGmB;;AAAA;;AAAA;AACJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAP;AAER;;;AAKQ;;;AACO;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAI;;AAAJ;AAAA;AAAA;;;;;;AAAA;;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;AACA;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;AACR;;AAAA;;AAAA;AAER;;;;AAEc;;AAGa;;AAAS;AAAT;AAAH;AAAP;;AAAA;;AAAA;AAAjB;;;AACuB;;AAAA;AAAA;;;AAAX;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAP;AACQ;AAAR;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACe;;;;;;;;;;AAAA;;;;;AAAf;;;AACgB;;AAAS;AAAT;;;;;;;;;;;;;;;;;;AAGR;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAEA;;AAAA;AAER;;;AAGmB;;AAAA;;;AAAX;AAEQ;AAAR;AACY;AAAA;AAAA;;AAApB;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACqB;AAAT;;AAAA;AAAA;;;;;;;;;AAEJ;;AAAA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAAc;AAAd;AAAA;AAAA;AAAA;AAEM;;AACA;AAAA;AAAA;AAAA;AACA;;AACA;;;AAJN;AAS4B;AAAA;AAAA;AAAA;AAAa;AAAb;AAAZ;AAA6C;AAAA;AAAA;AAAA;AAAa;AAAA;AAAA;AAAA;AAAb;AAAZ;AAA1C;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8 80"
    },
    "7": {
      "op": "bytecblock \"count\" 0x151f7c75 \"\" \"a\""
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "25": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "28": {
      "op": "bytec_0 // \"count\""
    },
    "29": {
      "op": "intc_1 // 0"
    },
    "30": {
      "op": "app_global_put"
    },
    "31": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "33": {
      "op": "bz main_bare_routing@11",
      "stack_out": []
    },
    "36": {
      "op": "pushbytess 0x28d7c1b8 0xfa9cb973 0x6039a240 0xf8fd68a7 0x1f028db1 0x096b3a59 // method \"test_array(uint64,uint64,uint64,uint64)uint64\", method \"test_extend_from_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_extend_from_arc4_tuple(((uint64,uint64),(uint64,uint64)))(uint64,uint64)[]\", method \"test_bool_array(uint64)uint64\", method \"test_arc4_conversion(uint64)uint64[]\", method \"sum_array(uint64[])uint64\""
    },
    "68": {
      "op": "txna ApplicationArgs 0"
    },
    "71": {
      "op": "match main_test_array_route@5 main_test_extend_from_tuple_route@6 main_test_extend_from_arc4_tuple_route@7 main_test_bool_array_route@8 main_test_arc4_conversion_route@9 main_sum_array_route@10"
    },
    "85": {
      "block": "main_after_if_else@13",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "86": {
      "op": "return"
    },
    "87": {
      "block": "main_sum_array_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "89": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "90": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "91": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "93": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "94": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "97": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "op": "callsub sum_array",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "100": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "101": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "102": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "103": {
      "op": "concat",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "104": {
      "op": "log",
      "stack_out": []
    },
    "105": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "106": {
      "op": "return"
    },
    "107": {
      "block": "main_test_arc4_conversion_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "109": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "110": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "111": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "113": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "114": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "117": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "118": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "op": "callsub test_arc4_conversion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "121": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0x151f7c75"
      ]
    },
    "122": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%33#0"
      ]
    },
    "123": {
      "op": "concat",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "124": {
      "op": "log",
      "stack_out": []
    },
    "125": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "126": {
      "op": "return"
    },
    "127": {
      "block": "main_test_bool_array_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "129": {
      "op": "!",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "130": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "131": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "133": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "134": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "137": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "138": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "op": "callsub test_bool_array",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "141": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "142": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "143": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "144": {
      "op": "concat",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "145": {
      "op": "log",
      "stack_out": []
    },
    "146": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "147": {
      "op": "return"
    },
    "148": {
      "block": "main_test_extend_from_arc4_tuple_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "150": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "151": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "152": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "154": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "155": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[32]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%1#0"
      ]
    },
    "158": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "op": "callsub test_extend_from_arc4_tuple",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "161": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0x151f7c75"
      ]
    },
    "162": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%20#0"
      ]
    },
    "163": {
      "op": "concat",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "164": {
      "op": "log",
      "stack_out": []
    },
    "165": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "166": {
      "op": "return"
    },
    "167": {
      "block": "main_test_extend_from_tuple_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "169": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "170": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "171": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "173": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "174": {
      "op": "txna ApplicationArgs 1"
    },
    "177": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ]
    },
    "178": {
      "error": "Index access is out of bounds",
      "op": "extract 0 16 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "item0%0#0"
      ]
    },
    "181": {
      "op": "swap",
      "stack_out": [
        "item0%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "182": {
      "error": "Index access is out of bounds",
      "op": "extract 16 16 // on error: Index access is out of bounds",
      "defined_out": [
        "item0%0#0",
        "item1%0#0"
      ],
      "stack_out": [
        "item0%0#0",
        "item1%0#0"
      ]
    },
    "185": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "op": "callsub test_extend_from_tuple",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "188": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "0x151f7c75"
      ]
    },
    "189": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%14#0"
      ]
    },
    "190": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "191": {
      "op": "log",
      "stack_out": []
    },
    "192": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "193": {
      "op": "return"
    },
    "194": {
      "block": "main_test_array_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "196": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "197": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "198": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "200": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "201": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "204": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "207": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ]
    },
    "208": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "211": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "214": {
      "op": "btoi",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0",
        "reinterpret_bytes[8]%2#0",
        "tmp%8#0"
      ]
    },
    "215": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.test_array",
      "op": "callsub test_array",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "218": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "219": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "220": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "221": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "222": {
      "op": "log",
      "stack_out": []
    },
    "223": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "224": {
      "op": "return"
    },
    "225": {
      "block": "main_bare_routing@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "227": {
      "op": "bnz main_after_if_else@13",
      "stack_out": []
    },
    "230": {
      "op": "txn ApplicationID"
    },
    "232": {
      "op": "!"
    },
    "233": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "234": {
      "op": "intc_0 // 1"
    },
    "235": {
      "op": "return"
    },
    "236": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_array",
      "params": {
        "x1#0": "bytes",
        "y1#0": "uint64",
        "x2#0": "bytes",
        "y2#0": "uint64"
      },
      "block": "test_array",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "239": {
      "op": "intc_1 // 0",
      "stack_out": [
        "array%value%3#1"
      ]
    },
    "240": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0"
      ]
    },
    "241": {
      "op": "bytec_2 // \"\"",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0"
      ]
    },
    "242": {
      "op": "dupn 5",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "244": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\""
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\""
      ]
    },
    "245": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "\"count\"",
        "0"
      ]
    },
    "246": {
      "op": "app_global_put",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0"
      ]
    },
    "247": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "250": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "253": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.xtra",
      "op": "callsub xtra",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "256": {
      "op": "uncover 11",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%0#0"
      ]
    },
    "258": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%sub_item%1#1"
      ]
    },
    "259": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "0x00000000000000000000000000000000",
        "array%sub_item%1#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%sub_item%1#1",
        "0x00000000000000000000000000000000"
      ]
    },
    "277": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "0x00000000000000000000000000000000",
        "array%sub_item%1#1"
      ]
    },
    "278": {
      "op": "concat",
      "defined_out": [
        "array%encoded%2#1",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%1#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1"
      ]
    },
    "279": {
      "op": "uncover 11",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1",
        "tmp%1#0"
      ]
    },
    "281": {
      "op": "itob",
      "defined_out": [
        "array%encoded%2#1",
        "array%sub_item%2#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%2#1",
        "array%sub_item%2#1"
      ]
    },
    "282": {
      "op": "concat",
      "defined_out": [
        "array%encoded%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%3#1"
      ]
    },
    "283": {
      "op": "uncover 10",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%3#1",
        "tmp%2#0"
      ]
    },
    "285": {
      "op": "concat",
      "defined_out": [
        "array%encoded%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%3#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%4#1"
      ]
    },
    "286": {
      "op": "uncover 9",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%4#1",
        "tmp%3#0"
      ]
    },
    "288": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1"
      ]
    },
    "289": {
      "op": "frame_dig -3",
      "defined_out": [
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "y1#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "y1#0 (copy)"
      ]
    },
    "291": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%sub_item%3#1"
      ]
    },
    "292": {
      "op": "frame_dig -4",
      "defined_out": [
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "x1#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%sub_item%3#1",
        "x1#0 (copy)"
      ]
    },
    "294": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "x1#0 (copy)",
        "array%sub_item%3#1"
      ]
    },
    "295": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1"
      ]
    },
    "296": {
      "op": "uncover 9",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1",
        "tmp%4#0"
      ]
    },
    "298": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%7#1",
        "array%sub_item%4#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%7#1",
        "array%sub_item%4#1"
      ]
    },
    "299": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%8#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1"
      ]
    },
    "300": {
      "op": "uncover 8",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1",
        "tmp%5#0"
      ]
    },
    "302": {
      "op": "itob",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%8#1",
        "array%sub_item%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%8#1",
        "array%sub_item%5#1"
      ]
    },
    "303": {
      "op": "concat",
      "defined_out": [
        "array%encoded%5#1",
        "array%encoded%9#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%6#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%9#1"
      ]
    },
    "304": {
      "op": "uncover 7",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%9#1",
        "tmp%6#0"
      ]
    },
    "306": {
      "op": "concat",
      "defined_out": [
        "array%encoded%10#1",
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%7#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%10#1"
      ]
    },
    "307": {
      "op": "uncover 6",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%10#1",
        "tmp%7#0"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "array%encoded%11#1",
        "array%encoded%5#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%encoded%5#1",
        "array%encoded%11#1"
      ]
    },
    "310": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1"
      ]
    },
    "311": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%data%1#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "y2#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "y2#0 (copy)"
      ]
    },
    "313": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%sub_item%6#1"
      ]
    },
    "314": {
      "op": "frame_dig -2",
      "defined_out": [
        "array%data%1#1",
        "array%sub_item%6#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0",
        "x2#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%sub_item%6#1",
        "x2#0 (copy)"
      ]
    },
    "316": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "x2#0 (copy)",
        "array%sub_item%6#1"
      ]
    },
    "317": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%8#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1"
      ]
    },
    "318": {
      "op": "uncover 5",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "tmp%8#0"
      ]
    },
    "320": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%13#1",
        "array%sub_item%7#1"
      ]
    },
    "321": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%9#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1"
      ]
    },
    "322": {
      "op": "uncover 4",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "tmp%9#0"
      ]
    },
    "324": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%14#1",
        "array%sub_item%8#1"
      ]
    },
    "325": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%10#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%15#1"
      ]
    },
    "326": {
      "op": "uncover 3",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%15#1",
        "tmp%10#0"
      ]
    },
    "328": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "tmp%11#0",
        "array%data%1#1",
        "array%encoded%16#1"
      ]
    },
    "329": {
      "op": "uncover 2",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "array%data%1#1",
        "array%encoded%16#1",
        "tmp%11#0"
      ]
    },
    "331": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1",
        "array%encoded%17#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "array%data%1#1",
        "array%encoded%17#1"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0"
      ]
    },
    "333": {
      "op": "intc_1 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "334": {
      "block": "test_array_for_header@1",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "336": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "i#0",
        "3"
      ]
    },
    "338": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "339": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "342": {
      "op": "frame_dig 8"
    },
    "344": {
      "op": "frame_dig 9"
    },
    "346": {
      "op": "dup"
    },
    "347": {
      "op": "cover 2"
    },
    "349": {
      "op": "intc_3 // 80"
    },
    "350": {
      "op": "*"
    },
    "351": {
      "op": "intc_3 // 80"
    },
    "352": {
      "op": "extract3"
    },
    "353": {
      "op": "dup"
    },
    "354": {
      "op": "pushint 24 // 24"
    },
    "356": {
      "op": "extract_uint64"
    },
    "357": {
      "op": "dig 2"
    },
    "359": {
      "op": "intc_0 // 1"
    },
    "360": {
      "op": "+"
    },
    "361": {
      "op": "swap"
    },
    "362": {
      "op": "dig 1"
    },
    "364": {
      "op": "=="
    },
    "365": {
      "op": "assert"
    },
    "366": {
      "op": "swap"
    },
    "367": {
      "op": "extract 64 16"
    },
    "370": {
      "op": "dup"
    },
    "371": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds"
    },
    "374": {
      "op": "uncover 3"
    },
    "376": {
      "op": "pushint 2 // 2"
    },
    "378": {
      "op": "+"
    },
    "379": {
      "op": "itob"
    },
    "380": {
      "op": "b=="
    },
    "381": {
      "op": "assert"
    },
    "382": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds"
    },
    "385": {
      "op": "dig 1"
    },
    "387": {
      "op": "dig 2"
    },
    "389": {
      "op": "*"
    },
    "390": {
      "op": "itob"
    },
    "391": {
      "op": "b=="
    },
    "392": {
      "op": "assert"
    },
    "393": {
      "op": "frame_bury 9"
    },
    "395": {
      "op": "b test_array_for_header@1"
    },
    "398": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "400": {
      "op": "dup",
      "defined_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "401": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "byte_len%0#0"
      ]
    },
    "402": {
      "op": "intc_3 // 80",
      "defined_out": [
        "80",
        "byte_len%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "byte_len%0#0",
        "80"
      ]
    },
    "403": {
      "op": "/",
      "defined_out": [
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0"
      ]
    },
    "404": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0",
        "len_%0#0"
      ]
    },
    "405": {
      "op": "frame_bury 4",
      "defined_out": [
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_%0#0"
      ]
    },
    "407": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "as_bytes%0#0"
      ]
    },
    "408": {
      "op": "extract 6 2",
      "defined_out": [
        "len_%0#0",
        "len_16_bit%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_16_bit%0#0"
      ]
    },
    "411": {
      "op": "dig 1",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "len_16_bit%0#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "413": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0"
      ]
    },
    "414": {
      "op": "bytec_3 // \"a\"",
      "defined_out": [
        "\"a\"",
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "415": {
      "op": "box_del",
      "defined_out": [
        "concat_result%0#0",
        "len_%0#0",
        "slot_contents%3#0",
        "{box_del}"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "{box_del}"
      ]
    },
    "416": {
      "op": "pop",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0"
      ]
    },
    "417": {
      "op": "bytec_3 // \"a\"",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "concat_result%0#0",
        "\"a\""
      ]
    },
    "418": {
      "op": "swap",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0",
        "\"a\"",
        "concat_result%0#0"
      ]
    },
    "419": {
      "op": "box_put",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "slot_contents%3#0"
      ]
    },
    "420": {
      "op": "extract 0 80",
      "defined_out": [
        "array%value%3#1",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "423": {
      "op": "dup",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "array%value%3#1"
      ]
    },
    "424": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%value%3#1",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "426": {
      "op": "dup",
      "defined_out": [
        "array%value%3#1",
        "array%value%3#1 (copy)",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "array%value%3#1 (copy)"
      ]
    },
    "427": {
      "op": "extract 0 8",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "last_point.x#0"
      ]
    },
    "430": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1"
      ]
    },
    "432": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%value%3#1",
        "last_point.x#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%3#1",
        "8"
      ]
    },
    "433": {
      "op": "extract_uint64",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "last_point.y#0"
      ]
    },
    "434": {
      "op": "frame_bury 3",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "436": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "437": {
      "op": "frame_bury 5",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "439": {
      "op": "intc_0 // 1",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "440": {
      "op": "frame_bury 7",
      "defined_out": [
        "array%value%3#1",
        "last_point.x#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "442": {
      "block": "test_array_for_header@6",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "444": {
      "op": "frame_dig 4",
      "defined_out": [
        "len_%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "len_%0#0"
      ]
    },
    "446": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "len_%0#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "447": {
      "op": "bz test_array_after_for@14",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "450": {
      "op": "frame_dig 8"
    },
    "452": {
      "op": "frame_dig 7"
    },
    "454": {
      "op": "intc_3 // 80"
    },
    "455": {
      "op": "*"
    },
    "456": {
      "op": "intc_3 // 80"
    },
    "457": {
      "op": "extract3"
    },
    "458": {
      "op": "dupn 2"
    },
    "460": {
      "op": "extract 0 8"
    },
    "463": {
      "op": "swap"
    },
    "464": {
      "op": "intc_2 // 8"
    },
    "465": {
      "op": "extract_uint64"
    },
    "466": {
      "op": "frame_bury 6"
    },
    "468": {
      "op": "frame_dig 1"
    },
    "470": {
      "op": "b<"
    },
    "471": {
      "op": "bz test_array_else_body@9"
    },
    "474": {
      "op": "frame_dig 0"
    },
    "476": {
      "op": "intc_1 // 0"
    },
    "477": {
      "op": "extract_uint64"
    },
    "478": {
      "op": "swap"
    },
    "479": {
      "op": "intc_1 // 0"
    },
    "480": {
      "op": "extract_uint64"
    },
    "481": {
      "op": "-"
    },
    "482": {
      "op": "frame_bury 2"
    },
    "484": {
      "block": "test_array_after_if_else@10",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "486": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "488": {
      "op": "<",
      "defined_out": [
        "last_point.y#0",
        "point.y#0",
        "tmp%6#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%6#1"
      ]
    },
    "489": {
      "op": "bz test_array_else_body@12",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "492": {
      "op": "frame_dig 3"
    },
    "494": {
      "op": "frame_dig 6"
    },
    "496": {
      "op": "-"
    },
    "497": {
      "block": "test_array_after_if_else@13",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0"
      ]
    },
    "499": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dx#0 (copy)"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "dx#0 (copy)",
        "dx#0"
      ]
    },
    "500": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0",
        "tmp%7#1"
      ]
    },
    "501": {
      "op": "swap",
      "defined_out": [
        "dx#0",
        "dy#0",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0"
      ]
    },
    "502": {
      "op": "dup",
      "defined_out": [
        "dx#0",
        "dy#0",
        "dy#0 (copy)",
        "tmp%7#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "dy#0 (copy)",
        "dy#0"
      ]
    },
    "503": {
      "op": "*",
      "defined_out": [
        "dx#0",
        "tmp%7#1",
        "tmp%8#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%7#1",
        "tmp%8#0"
      ]
    },
    "504": {
      "op": "+",
      "defined_out": [
        "dx#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "505": {
      "op": "sqrt",
      "defined_out": [
        "dx#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1"
      ]
    },
    "506": {
      "op": "frame_dig 5",
      "defined_out": [
        "dx#0",
        "length#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%10#1",
        "length#0"
      ]
    },
    "508": {
      "op": "+",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "509": {
      "op": "frame_bury 5",
      "defined_out": [
        "dx#0",
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "511": {
      "op": "frame_dig 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "513": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0",
        "1"
      ]
    },
    "514": {
      "op": "+",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point_idx#0"
      ]
    },
    "515": {
      "op": "frame_bury 7",
      "defined_out": [
        "dx#0",
        "length#0",
        "point_idx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "517": {
      "op": "b test_array_for_header@6"
    },
    "520": {
      "block": "test_array_else_body@12",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0"
      ]
    },
    "522": {
      "op": "frame_dig 3",
      "defined_out": [
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "point.y#0",
        "last_point.y#0"
      ]
    },
    "524": {
      "op": "-",
      "defined_out": [
        "dy#0",
        "last_point.y#0",
        "point.y#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dy#0"
      ]
    },
    "525": {
      "op": "b test_array_after_if_else@13"
    },
    "528": {
      "block": "test_array_else_body@9",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%4#1"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "array%value%4#1"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "array%value%4#1",
        "0"
      ]
    },
    "529": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "530": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%value%3#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "array%value%3#1"
      ]
    },
    "532": {
      "op": "intc_1 // 0",
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "array%value%3#1",
        "0"
      ]
    },
    "533": {
      "op": "extract_uint64",
      "defined_out": [
        "array%value%3#1",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "534": {
      "op": "-",
      "defined_out": [
        "array%value%3#1",
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "dx#0"
      ]
    },
    "535": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%value%3#1",
        "dx#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ]
    },
    "537": {
      "op": "b test_array_after_if_else@10"
    },
    "540": {
      "block": "test_array_after_for@14",
      "stack_in": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "length#0"
      ],
      "stack_out": [
        "array%value%3#1",
        "last_point.x#0",
        "dx#0",
        "last_point.y#0",
        "len_%0#0",
        "length#0",
        "point.y#0",
        "point_idx#0",
        "slot%0",
        "i#0",
        "length#0"
      ]
    },
    "542": {
      "op": "frame_bury 0"
    },
    "544": {
      "retsub": true,
      "op": "retsub"
    },
    "545": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_tuple",
      "params": {
        "some_more.0#0": "bytes",
        "some_more.1#0": "bytes"
      },
      "block": "test_extend_from_tuple",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "548": {
      "op": "frame_dig -2",
      "defined_out": [
        "some_more.0#0 (copy)"
      ],
      "stack_out": [
        "some_more.0#0 (copy)"
      ]
    },
    "550": {
      "op": "frame_dig -1",
      "defined_out": [
        "some_more.0#0 (copy)",
        "some_more.1#0 (copy)"
      ],
      "stack_out": [
        "some_more.0#0 (copy)",
        "some_more.1#0 (copy)"
      ]
    },
    "552": {
      "op": "concat",
      "defined_out": [
        "array%data%1#1"
      ],
      "stack_out": [
        "array%data%1#1"
      ]
    },
    "553": {
      "op": "dup",
      "stack_out": [
        "array%data%1#1",
        "array%data%1#1 (copy)"
      ]
    },
    "554": {
      "op": "len",
      "defined_out": [
        "array%data%1#1",
        "byte_len%0#0"
      ],
      "stack_out": [
        "array%data%1#1",
        "byte_len%0#0"
      ]
    },
    "555": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "array%data%1#1",
        "byte_len%0#0"
      ],
      "stack_out": [
        "array%data%1#1",
        "byte_len%0#0",
        "16"
      ]
    },
    "557": {
      "op": "/",
      "defined_out": [
        "array%data%1#1",
        "len_%0#0"
      ],
      "stack_out": [
        "array%data%1#1",
        "len_%0#0"
      ]
    },
    "558": {
      "op": "itob",
      "defined_out": [
        "array%data%1#1",
        "as_bytes%0#0"
      ],
      "stack_out": [
        "array%data%1#1",
        "as_bytes%0#0"
      ]
    },
    "559": {
      "op": "extract 6 2",
      "defined_out": [
        "array%data%1#1",
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "array%data%1#1",
        "len_16_bit%0#0"
      ]
    },
    "562": {
      "op": "swap",
      "stack_out": [
        "len_16_bit%0#0",
        "array%data%1#1"
      ]
    },
    "563": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "564": {
      "retsub": true,
      "op": "retsub"
    },
    "565": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_extend_from_arc4_tuple",
      "params": {
        "some_more#0": "bytes"
      },
      "block": "test_extend_from_arc4_tuple",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "568": {
      "op": "frame_dig -1",
      "defined_out": [
        "some_more#0 (copy)"
      ],
      "stack_out": [
        "some_more#0 (copy)"
      ]
    },
    "570": {
      "op": "pop",
      "stack_out": []
    },
    "571": {
      "op": "frame_dig -1",
      "stack_out": [
        "some_more#0 (copy)"
      ]
    },
    "573": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0"
      ],
      "stack_out": [
        "byte_len%0#0"
      ]
    },
    "574": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "byte_len%0#0"
      ],
      "stack_out": [
        "byte_len%0#0",
        "16"
      ]
    },
    "576": {
      "op": "/",
      "defined_out": [
        "len_%0#0"
      ],
      "stack_out": [
        "len_%0#0"
      ]
    },
    "577": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0"
      ],
      "stack_out": [
        "as_bytes%0#0"
      ]
    },
    "578": {
      "op": "extract 6 2",
      "defined_out": [
        "len_16_bit%0#0"
      ],
      "stack_out": [
        "len_16_bit%0#0"
      ]
    },
    "581": {
      "op": "frame_dig -1",
      "stack_out": [
        "len_16_bit%0#0",
        "some_more#0 (copy)"
      ]
    },
    "583": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "concat_result%0#0"
      ]
    },
    "584": {
      "retsub": true,
      "op": "retsub"
    },
    "585": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_bool_array",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_bool_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "588": {
      "op": "bytec_2 // \"\""
    },
    "589": {
      "op": "dupn 4"
    },
    "591": {
      "op": "frame_dig -1"
    },
    "593": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "594": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "595": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "596": {
      "block": "test_bool_array_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "598": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "600": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "601": {
      "op": "bz test_bool_array_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "604": {
      "op": "frame_dig 6"
    },
    "606": {
      "op": "dup"
    },
    "607": {
      "op": "pushint 2 // 2"
    },
    "609": {
      "op": "%"
    },
    "610": {
      "op": "!"
    },
    "611": {
      "op": "pushbytess 0x00 0x80 // 0x00, 0x80"
    },
    "617": {
      "op": "uncover 2"
    },
    "619": {
      "op": "select"
    },
    "620": {
      "op": "frame_dig 4"
    },
    "622": {
      "op": "swap"
    },
    "623": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "624": {
      "op": "frame_bury 4"
    },
    "626": {
      "op": "intc_0 // 1"
    },
    "627": {
      "op": "+"
    },
    "628": {
      "op": "frame_bury 6"
    },
    "630": {
      "op": "b test_bool_array_for_header@1"
    },
    "633": {
      "block": "test_bool_array_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "635": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "636": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "1"
      ]
    },
    "637": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "638": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "639": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "641": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "643": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "644": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "645": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "646": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "648": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "649": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "651": {
      "block": "test_bool_array_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "653": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "655": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "656": {
      "op": "bz test_bool_array_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "659": {
      "op": "frame_dig 4"
    },
    "661": {
      "op": "frame_dig 3"
    },
    "663": {
      "op": "intc_0 // 1"
    },
    "664": {
      "op": "extract3"
    },
    "665": {
      "op": "intc_1 // 0"
    },
    "666": {
      "op": "getbyte"
    },
    "667": {
      "op": "frame_dig 1"
    },
    "669": {
      "op": "frame_bury 2"
    },
    "671": {
      "op": "bz test_bool_array_after_if_else@8"
    },
    "674": {
      "op": "frame_dig 1"
    },
    "676": {
      "op": "intc_0 // 1"
    },
    "677": {
      "op": "+"
    },
    "678": {
      "op": "frame_bury 2"
    },
    "680": {
      "block": "test_bool_array_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "682": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "684": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "686": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "687": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "688": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "690": {
      "op": "b test_bool_array_for_header@5"
    },
    "693": {
      "block": "test_bool_array_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "695": {
      "op": "frame_bury 0"
    },
    "697": {
      "retsub": true,
      "op": "retsub"
    },
    "698": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.test_arc4_conversion",
      "params": {
        "length#0": "uint64"
      },
      "block": "test_arc4_conversion",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "701": {
      "op": "bytec_2 // \"\""
    },
    "702": {
      "op": "dupn 4"
    },
    "704": {
      "op": "frame_dig -1"
    },
    "706": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "length#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "length#0 (copy)",
        "1"
      ]
    },
    "707": {
      "op": "+",
      "defined_out": [
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0"
      ]
    },
    "708": {
      "op": "intc_0 // 1",
      "defined_out": [
        "i#0",
        "slot%0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "709": {
      "block": "test_arc4_conversion_for_header@1",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "711": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "713": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "714": {
      "op": "bz test_arc4_conversion_after_for@4",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "717": {
      "op": "frame_dig 6"
    },
    "719": {
      "op": "dup"
    },
    "720": {
      "op": "itob"
    },
    "721": {
      "op": "frame_dig 4"
    },
    "723": {
      "op": "swap"
    },
    "724": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "725": {
      "op": "frame_bury 4"
    },
    "727": {
      "op": "intc_0 // 1"
    },
    "728": {
      "op": "+"
    },
    "729": {
      "op": "frame_bury 6"
    },
    "731": {
      "op": "b test_arc4_conversion_for_header@1"
    },
    "734": {
      "block": "test_arc4_conversion_after_for@4",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%2#0"
      ]
    },
    "736": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1"
      ]
    },
    "737": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "738": {
      "op": "/",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "739": {
      "op": "dup",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "array%array_len%1#1"
      ]
    },
    "740": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%1#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1"
      ]
    },
    "742": {
      "op": "frame_dig -1",
      "defined_out": [
        "array%array_len%1#1",
        "length#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "array%array_len%1#1",
        "length#0 (copy)"
      ]
    },
    "744": {
      "op": "==",
      "defined_out": [
        "array%array_len%1#1",
        "tmp%4#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "745": {
      "error": "expected correct length",
      "op": "assert // expected correct length",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "746": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "747": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%1#1",
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "749": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "750": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%1#1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "752": {
      "block": "test_arc4_conversion_for_header@5",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "754": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%1#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "array%array_len%1#1"
      ]
    },
    "756": {
      "op": "<",
      "defined_out": [
        "array%array_len%1#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "757": {
      "op": "bz test_arc4_conversion_after_for@10",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "760": {
      "op": "frame_dig 4"
    },
    "762": {
      "op": "frame_dig 3"
    },
    "764": {
      "op": "intc_2 // 8"
    },
    "765": {
      "op": "*"
    },
    "766": {
      "op": "intc_2 // 8"
    },
    "767": {
      "op": "extract3"
    },
    "768": {
      "op": "extract 0 8"
    },
    "771": {
      "op": "pushbytes 0x0000000000000000"
    },
    "781": {
      "op": "!="
    },
    "782": {
      "op": "frame_dig 1"
    },
    "784": {
      "op": "frame_bury 2"
    },
    "786": {
      "op": "bz test_arc4_conversion_after_if_else@8"
    },
    "789": {
      "op": "frame_dig 1"
    },
    "791": {
      "op": "intc_0 // 1"
    },
    "792": {
      "op": "+"
    },
    "793": {
      "op": "frame_bury 2"
    },
    "795": {
      "block": "test_arc4_conversion_after_if_else@8",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "count#0"
      ]
    },
    "797": {
      "op": "frame_bury 1",
      "defined_out": [
        "count#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "799": {
      "op": "frame_dig 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "801": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "802": {
      "op": "+",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "803": {
      "op": "frame_bury 3",
      "defined_out": [
        "count#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "805": {
      "op": "b test_arc4_conversion_for_header@5"
    },
    "808": {
      "block": "test_arc4_conversion_after_for@10",
      "stack_in": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0"
      ]
    },
    "810": {
      "op": "dup",
      "defined_out": [
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ]
    },
    "811": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0"
      ]
    },
    "812": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "byte_len%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "byte_len%0#0",
        "8"
      ]
    },
    "813": {
      "op": "/",
      "defined_out": [
        "len_%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_%0#0"
      ]
    },
    "814": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "as_bytes%0#0"
      ]
    },
    "815": {
      "op": "extract 6 2",
      "defined_out": [
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "slot_contents%5#0",
        "len_16_bit%0#0"
      ]
    },
    "818": {
      "op": "swap",
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "len_16_bit%0#0",
        "slot_contents%5#0"
      ]
    },
    "819": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#1"
      ],
      "stack_out": [
        "array%array_len%1#1",
        "count#0",
        "count#9",
        "item_index_internal%0#0",
        "slot%0",
        "tmp%2#0",
        "i#0",
        "arc4_arr#1"
      ]
    },
    "820": {
      "op": "frame_bury 0"
    },
    "822": {
      "retsub": true,
      "op": "retsub"
    },
    "823": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.sum_array",
      "params": {
        "arc4_arr#0": "bytes"
      },
      "block": "sum_array",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "826": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0 (copy)"
      ]
    },
    "828": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0"
      ],
      "stack_out": [
        "expr_value_trimmed%0#0"
      ]
    },
    "831": {
      "op": "dup",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0"
      ]
    },
    "832": {
      "op": "intc_1 // 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "expr_value_trimmed%0#0",
        "total#0"
      ]
    },
    "833": {
      "op": "swap",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "834": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1"
      ]
    },
    "835": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "836": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1"
      ]
    },
    "837": {
      "op": "intc_1 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "slot%0",
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "838": {
      "block": "sum_array_for_header@1",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "840": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "array%array_len%0#1"
      ]
    },
    "842": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "843": {
      "op": "bz sum_array_after_for@4",
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ]
    },
    "846": {
      "op": "frame_dig 0"
    },
    "848": {
      "op": "frame_dig 3"
    },
    "850": {
      "op": "dup"
    },
    "851": {
      "op": "cover 2"
    },
    "853": {
      "op": "intc_2 // 8"
    },
    "854": {
      "op": "*"
    },
    "855": {
      "op": "intc_2 // 8"
    },
    "856": {
      "op": "extract3"
    },
    "857": {
      "op": "intc_1 // 0"
    },
    "858": {
      "op": "extract_uint64"
    },
    "859": {
      "op": "frame_dig 1"
    },
    "861": {
      "op": "+"
    },
    "862": {
      "op": "frame_bury 1"
    },
    "864": {
      "op": "intc_0 // 1"
    },
    "865": {
      "op": "+"
    },
    "866": {
      "op": "frame_bury 3"
    },
    "868": {
      "op": "b sum_array_for_header@1"
    },
    "871": {
      "block": "sum_array_after_for@4",
      "stack_in": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "slot%0",
        "total#0",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "873": {
      "op": "frame_bury 0"
    },
    "875": {
      "retsub": true,
      "op": "retsub"
    },
    "876": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.xtra",
      "params": {},
      "block": "xtra",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "877": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "878": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "879": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "880": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "881": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "882": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"count\""
      ]
    },
    "883": {
      "op": "swap",
      "stack_out": [
        "\"count\"",
        "new_state_value%0#0"
      ]
    },
    "884": {
      "op": "app_global_put",
      "stack_out": []
    },
    "885": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "887": {
      "op": "intc_1 // 0",
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "888": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"count\""
      ]
    },
    "889": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "890": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0"
      ]
    },
    "891": {
      "op": "txn Sender",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ]
    },
    "893": {
      "callsub": "test_cases.array.static_size.StaticSizeContract.more",
      "op": "callsub more",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%0#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%1#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "896": {
      "retsub": true,
      "op": "retsub"
    },
    "897": {
      "subroutine": "test_cases.array.static_size.StaticSizeContract.more",
      "params": {},
      "block": "more",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "898": {
      "op": "bytec_0 // \"count\"",
      "defined_out": [
        "\"count\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"count\""
      ]
    },
    "899": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "900": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "901": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "902": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "903": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "904": {
      "op": "intc_1 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "905": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "0",
        "\"count\""
      ]
    },
    "906": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "907": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "908": {
      "op": "intc_1 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "909": {
      "op": "bytec_0 // \"count\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "0",
        "\"count\""
      ]
    },
    "910": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "911": {
      "error": "check self.count exists",
      "op": "assert // check self.count exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "912": {
      "op": "*",
      "defined_out": [
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "to_encode%1#0"
      ]
    },
    "913": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "914": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%2#0"
      ]
    },
    "915": {
      "retsub": true,
      "op": "retsub"
    }
  }
}