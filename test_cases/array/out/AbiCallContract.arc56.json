{
    "name": "AbiCallContract",
    "structs": {},
    "methods": [
        {
            "name": "test_implicit_conversion_abi_call",
            "args": [
                {
                    "type": "uint64[]",
                    "name": "arr"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        43
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        32
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        61
                    ],
                    "errorMessage": "invalid number of bytes for (len+uint64[])"
                },
                {
                    "pc": [
                        70
                    ],
                    "errorMessage": "invalid number of bytes for uint64"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDIgNiAxCiAgICAvLyBhcnJheS91bnVzZWRfb3B0X2FsbG93ZWQucHk6MTIKICAgIC8vIGNsYXNzIEFiaUNhbGxDb250cmFjdChhcmM0LkFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9fX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUA1CiAgICBwdXNoYnl0ZXMgMHgwNjU5OGJjNiAvLyBtZXRob2QgInRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbCh1aW50NjRbXSx1aW50NjQpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fdGVzdF9pbXBsaWNpdF9jb252ZXJzaW9uX2FiaV9jYWxsX3JvdXRlQDMKICAgIGVycgoKbWFpbl90ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGxfcm91dGVAMzoKICAgIC8vIGFycmF5L3VudXNlZF9vcHRfYWxsb3dlZC5weToxMwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYiB0ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGwKCm1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzMgLy8gMQogICAgcmV0dXJuCgoKLy8gdGVzdF9jYXNlcy5hcnJheS51bnVzZWRfb3B0X2FsbG93ZWQuQWJpQ2FsbENvbnRyYWN0LnRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbFtyb3V0aW5nXSgpIC0+IHZvaWQ6CnRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbDoKICAgIC8vIGFycmF5L3VudXNlZF9vcHRfYWxsb3dlZC5weToxMwogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGR1cAogICAgaW50Y18wIC8vIDAKICAgIGV4dHJhY3RfdWludDE2CiAgICBwdXNoaW50IDggLy8gOAogICAgKgogICAgaW50Y18xIC8vIDIKICAgICsKICAgIGRpZyAxCiAgICBsZW4KICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIChsZW4rdWludDY0W10pCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAyCiAgICBkdXAKICAgIGxlbgogICAgcHVzaGludCA4IC8vIDgKICAgID09CiAgICBhc3NlcnQgLy8gaW52YWxpZCBudW1iZXIgb2YgYnl0ZXMgZm9yIHVpbnQ2NAogICAgYnRvaQogICAgZHVwCiAgICBjb3ZlciAyCiAgICAvLyBhcnJheS91bnVzZWRfb3B0X2FsbG93ZWQucHk6MTctMTgKICAgIC8vICMgaXR4biByZXF1aXJlcyByZW1vdmVfdW51c2VkX3ZhcmlhYmxlcwogICAgLy8gYXJjNC5hYmlfY2FsbCgiZG9udF9jYWxsKHVpbnQ2NFtdKXVpbnQ2NCIsIGFyciwgYXBwX2lkPWFwcCkKICAgIGl0eG5fYmVnaW4KICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25JRAogICAgcHVzaGJ5dGVzIDB4NzViNjk0ZjMgLy8gbWV0aG9kICJkb250X2NhbGwodWludDY0W10pdWludDY0IgogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKICAgIGR1cAogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKICAgIGludGNfMiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBpbnRjXzAgLy8gMAogICAgaXR4bl9maWVsZCBGZWUKICAgIGl0eG5fc3VibWl0CiAgICAvLyBhcnJheS91bnVzZWRfb3B0X2FsbG93ZWQucHk6MjEKICAgIC8vIG5lc3RlZF9hcnIgPSBuZXN0ZWRfYXJyLmFwcGVuZChhcnIpCiAgICBwdXNoYnl0ZXMgMHgwMDAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweAogICAgaW50Y18wIC8vIDAKCnRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbF9mb3JfaGVhZGVyQDI6CiAgICBkdXAKICAgIGludGNfMCAvLyAwCiAgICA8CiAgICBieiB0ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGxfYWZ0ZXJfZm9yQDQKICAgIC8vIGFycmF5L3VudXNlZF9vcHRfYWxsb3dlZC5weToyMQogICAgLy8gbmVzdGVkX2FyciA9IG5lc3RlZF9hcnIuYXBwZW5kKGFycikKICAgIHB1c2hieXRlcyAweAogICAgZGlnIDEKICAgIGR1cAogICAgY292ZXIgMgogICAgZXh0cmFjdF91aW50MTYKICAgIGludGNfMSAvLyAyCiAgICArCiAgICBpdG9iCiAgICBleHRyYWN0IDYgMgogICAgZGlnIDMKICAgIHN3YXAKICAgIGNvbmNhdAogICAgYnVyeSAzCiAgICBpbnRjXzEgLy8gMgogICAgKwogICAgYnVyeSAxCiAgICBiIHRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbF9mb3JfaGVhZGVyQDIKCnRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbF9hZnRlcl9mb3JANDoKICAgIGludGNfMCAvLyAwCiAgICBidXJ5IDEKCnRlc3RfaW1wbGljaXRfY29udmVyc2lvbl9hYmlfY2FsbF9mb3JfaGVhZGVyQDU6CiAgICBkdXAKICAgIGludGNfMSAvLyAyCiAgICA8CiAgICBieiB0ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGxfYWZ0ZXJfZm9yQDcKICAgIGRpZyAyCiAgICBkaWcgMQogICAgZHVwCiAgICBjb3ZlciAyCiAgICBleHRyYWN0X3VpbnQxNgogICAgaXRvYgogICAgZXh0cmFjdCA2IDIKICAgIGRpZyAzCiAgICBzd2FwCiAgICBjb25jYXQKICAgIGJ1cnkgMwogICAgaW50Y18xIC8vIDIKICAgICsKICAgIGJ1cnkgMQogICAgYiB0ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGxfZm9yX2hlYWRlckA1Cgp0ZXN0X2ltcGxpY2l0X2NvbnZlcnNpb25fYWJpX2NhbGxfYWZ0ZXJfZm9yQDc6CiAgICBwdXNoYnl0ZXMgMHgwMDAxCiAgICBkaWcgMgogICAgY29uY2F0CiAgICBkaWcgMwogICAgZXh0cmFjdCAyIDAKICAgIGNvbmNhdAogICAgLy8gYXJyYXkvdW51c2VkX29wdF9hbGxvd2VkLnB5OjIyCiAgICAvLyBhcmM0LmFiaV9jYWxsKCJkb250X2NhbGwodWludDY0W11bXSl1aW50NjQiLCBuZXN0ZWRfYXJyLCBhcHBfaWQ9YXBwKQogICAgaXR4bl9iZWdpbgogICAgZGlnIDQKICAgIGR1cAogICAgY292ZXIgMgogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbklECiAgICBwdXNoYnl0ZXMgMHhlOTJiMWQ1MyAvLyBtZXRob2QgImRvbnRfY2FsbCh1aW50NjRbXVtdKXVpbnQ2NCIKICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCiAgICBpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwogICAgaW50Y18yIC8vIGFwcGwKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIGludGNfMCAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgaXR4bl9zdWJtaXQKICAgIC8vIGFycmF5L3VudXNlZF9vcHRfYWxsb3dlZC5weToyNgogICAgLy8gYXJjNC5hYmlfY2FsbCgiZG9udF9jYWxsKCh1aW50NjRbXSx1aW50NjQpW10pdWludDY0IiwgaW5kaXJlY3RfbmVzdGVkX2FyciwgYXBwX2lkPWFwcCkKICAgIGl0eG5fYmVnaW4KICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25JRAogICAgcHVzaGJ5dGVzIDB4MTY1MzEyZDggLy8gbWV0aG9kICJkb250X2NhbGwoKHVpbnQ2NFtdLHVpbnQ2NClbXSl1aW50NjQiCiAgICBpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uQXJncwogICAgLy8gYXJyYXkvdW51c2VkX29wdF9hbGxvd2VkLnB5OjI0CiAgICAvLyBpbmRpcmVjdF9uZXN0ZWRfYXJyID0gSW1tdXRhYmxlQXJyYXlbTXlUdXBsZV0oKQogICAgcHVzaGJ5dGVzIDB4MDAwMAogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKICAgIC8vIGFycmF5L3VudXNlZF9vcHRfYWxsb3dlZC5weToyNgogICAgLy8gYXJjNC5hYmlfY2FsbCgiZG9udF9jYWxsKCh1aW50NjRbXSx1aW50NjQpW10pdWludDY0IiwgaW5kaXJlY3RfbmVzdGVkX2FyciwgYXBwX2lkPWFwcCkKICAgIGludGNfMiAvLyBhcHBsCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICBpbnRjXzAgLy8gMAogICAgaXR4bl9maWVsZCBGZWUKICAgIGl0eG5fc3VibWl0CiAgICAvLyBhcnJheS91bnVzZWRfb3B0X2FsbG93ZWQucHk6MTMKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBpbnRjXzMgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAAIGATEbQQAYgAQGWYvGNhoAjgEAAQAxGRQxGBBEQgAKMRkUMRgUEEQlQzYaAUkiWYEICyMISwEVEkQ2GgJJFYEIEkQXSU4CsbIYgAR1tpTzshpJshokshAisgGzgAIAAkxQgAAiSSIMQQAbgABLAUlOAlkjCBZXBgJLA0xQRQMjCEUBQv/fIkUBSSMMQQAZSwJLAUlOAlkWVwYCSwNMUEUDIwhFAUL/4YACAAFLAlBLA1cCAFCxSwRJTgKyGIAE6SsdU7IashokshAisgGzsbIYgAQWUxLYshqAAgAAshokshAisgGzJUM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}