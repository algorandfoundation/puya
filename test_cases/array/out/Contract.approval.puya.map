{
  "version": 3,
  "sources": [
    "../uint64.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAyKK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAhHL;;;AAAA;AAgHK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AADL;;AAAA;;;;;;;;;AAmLA;;;;;;AAIiB;;AAAA;;AAAA;AAA+B;;AAAhC;AAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAKE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAd;;;AACY;;AAAQ;AAAR;AAAA;;;;;AAEU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAd;;;AAEA;;AAAA;;;AAEY;;AAAS;AAAT;AAAA;;;;;AA6BL;;AAAA;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;AAED;;AAAA;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;;AA9BO;;AAAA;;AAAA;AAAf;;;AACwC;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAY;;AAAA;;AAAA;AAAA;;AAAA;AAApC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAQ;AAAR;AAAA;;AAEhB;;AAAA;;;AAEgB;;AAAS;AAAT;AAAA;AAAA;;AAEG;;AAAA;AAAnB;;;AAAA;;;AAMe;;AAAA;;AAAA;AAAf;;;AACgB;;AAAQ;AAAR;AAAA;;;;;;;AAEhB;;;AACoB;;AAAS;AAAT;;;;;;;AAGJ;;;AAYhB;;;AAEU;;;AAAA;AAAA;AAAA;AACG;AAAA;;AAAO;AAAP;AAAb;;;AACQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;;;;;AAET;AAGJ;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AAAJ;AAAA;AAAA;AAAA;AAAP;;AAUJ;;;AAEa;AAAA;;AAAA;;AAAA;AAAb;;;AACQ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADK;AAAA;AAAA;;;;;;AAYb;;;AAEe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAX;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AA3QJ;;;AAEc;;;AAAA;;AAGN;;;;;;;;;;AAAA;AAIA;AAAW;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEiC;;AAqP3B;AAAA;;AArPO;;AAqPP;AAAd;;;AACiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AACF;;AAAA;AAAA;;AAAA;AAAP;AACY;AAAZ;AAAA;;AAHM;;AAAA;AAAA;AAAA;;;;;AApPC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;AAAX;AAAP;AAEA;;;;;;;;;;AAAA;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;;AACO;AAAU;;AAAV;AAAP;AAEA;AAAW;;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;;;;;;;;;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AAyNJ;;;;;;;;;;AAAA;AACA;;;;;;;;;;AAAA;AAxNI;;AAAA;AAA2B;;AAA3B;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;;AAIM;;;AAAA;AAAA;AAAA;AACN;AAAW;AAAX;;;AAIA;;AAEA;AAAA;AAFA;AAEA;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAc;;AAAd;AAAP;;AAIM;;;AAAA;AAAA;AAAA;AACN;AAAW;AAAX;;;AACA;AAAA;AAAA;;;;;;;;;;AAAA;AACA;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAc;;AAAd;AAAP;;AAMR;;;AAEgB;AACC;AAAA;;AAAO;;;AAAP;AAAjB;;;;;AACY;;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAgB;;;AAAhB;AAAP;AAEA;;;;;;;;;;AAAA;;;AAER;;;AAEgB;AACC;AAAA;;AAAO;AAAP;AAAjB;;;;;AACY;;AAAA;AAAA;;AAAA;AAAA;;;AADK;AAAA;AAAA;;;;;;;;AAIT;;;;;;;;;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAa;AAAb;AAAP;;;AAEO;AAAA;AAAA;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEA;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;;;AACO;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;AAAA;AAAY;AAAZ;AAAP;;;AACO;AAAA;AAAP;;AAIM;;;AACN;AAAA;AAAA;AACA;AAAA;;;AAAqC;;AAAA;;;AAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;AAAU;;AAAV;AAAP;AACO;;AAAA;AAAU;AAAV;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AACO;;;AAAA;AAAU;AAAV;AAAP;;;AACO;AAAU;;AAAV;AAAP;AAEwC;AAAA;;;AAA8B;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA;AAApC;;AAAA;;;AAAA;;AAAA;AAAJ;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;;;AACO;AAAU;;AAAV;AAAP;;AAER;;;AAEkB;AAAA;;AAAA;;AAAA;AAAlB;;;AACyB;;;AAAA;AAAA;AAAA;AACK;AAAlB;;;AAFM;;AAAA;AAAA;AAAA;;;;;;AAIlB;;;;;;AAEc;;AACK;AAAA;;AAAO;AAAP;AAAnB;;;;;AACY;;AAAA;AAAA;;AAAA;AAAA;;;AADO;AAAA;AAAA;;;;;;;AAEJ;AAAA;AAAA;AAAA;AAAA;;AAAc;AAAd;AAAP;AAGO;AAAP;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;;;;;;;;AAIZ;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;;AAAA;AAAP;;;;;;;;;;AAGZ;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;AAGO;;;;AAAA;;AACE;;;AACJ;AAAL;;AAAK;;AAAO;AAAP;AAAjB;;;AAC4B;;AAAA;AAAA;AAAhB;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;AACA;AAAA;;;AAFK;AAAA;AAAA;;;;;AAGM;;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AACR;AAAA;AAAA;AAAuB;;AAAvB;AAAP;AACO;AAAA;;;AAAmB;AAAnB;AAAP;AACO;AAAA;;;AAAmB;;AAAnB;AAAP;AACO;AAAA;;;AAAmB;AAAnB;AAAP;AACO;;;AAAmB;;AAAnB;AAAP;;AAER;;;;;;AAGc;;;AAAA;AAAA;AAAA;AACG;;;AAAjB;;AAAA;;AAAA;AAAA;;;AACuB;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AACG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAG8C;AAAb;AAAjC;;AAAsB;AAAtB;;AAAA;;;AAGO;AAAP;;AACR;AAAA;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;;;;;;;AAKE;;;AACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAa;AAAb;AACK;AAAZ;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;;;AACA;;AAAA;AAAY;AAAZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AACO;AAAA;AAAa;AAAb;AAAP;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 8 0 5"
    },
    "7": {
      "op": "bytecblock 0x 0x000000000000000100000000000000020000000000000003 0x0000000000000003 0x0000000000000000 0x0000000000000004"
    },
    "62": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
    },
    "96": {
      "op": "store 0"
    },
    "98": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "100": {
      "op": "bz main_bare_routing@16",
      "stack_out": []
    },
    "103": {
      "op": "pushbytess 0xa33be873 0xe0c378e9 0x366f509d 0x58351a50 0xfa99e984 0xa20e440f 0x179ac3f9 0xf17f6f0a 0x845e1b4e 0x7621cfd1 0x5661a67c // method \"test_array()void\", method \"test_array_extend()void\", method \"test_array_multiple_append()void\", method \"overhead()void\", method \"test_array_too_long()void\", method \"test_array_copy_and_extend()void\", method \"test_array_evaluation_order()void\", method \"test_allocations(uint64)void\", method \"test_iteration()void\", method \"test_quicksort()void\", method \"test_unobserved_write()void\"",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)"
      ],
      "stack_out": [
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)"
      ]
    },
    "160": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(overhead()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_array()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(test_array_too_long()void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(test_array()void)",
        "Method(test_array_extend()void)",
        "Method(test_array_multiple_append()void)",
        "Method(overhead()void)",
        "Method(test_array_too_long()void)",
        "Method(test_array_copy_and_extend()void)",
        "Method(test_array_evaluation_order()void)",
        "Method(test_allocations(uint64)void)",
        "Method(test_iteration()void)",
        "Method(test_quicksort()void)",
        "Method(test_unobserved_write()void)",
        "tmp%2#0"
      ]
    },
    "163": {
      "op": "match main_test_array_route@3 main_test_array_extend_route@4 main_test_array_multiple_append_route@5 main_overhead_route@6 main_test_array_too_long_route@7 main_test_array_copy_and_extend_route@8 main_test_array_evaluation_order_route@9 main_test_allocations_route@10 main_test_iteration_route@11 main_test_quicksort_route@12 main_test_unobserved_write_route@13",
      "stack_out": []
    },
    "187": {
      "block": "main_after_if_else@20",
      "stack_in": [],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "188": {
      "op": "return",
      "stack_out": []
    },
    "189": {
      "block": "main_test_unobserved_write_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "191": {
      "op": "!",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "192": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "193": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "195": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "196": {
      "callsub": "test_cases.array.uint64.Contract.test_unobserved_write",
      "op": "callsub test_unobserved_write"
    },
    "199": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "200": {
      "op": "return",
      "stack_out": []
    },
    "201": {
      "block": "main_test_quicksort_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "203": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "204": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "207": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "208": {
      "callsub": "test_cases.array.uint64.Contract.test_quicksort",
      "op": "callsub test_quicksort"
    },
    "211": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "212": {
      "op": "return",
      "stack_out": []
    },
    "213": {
      "block": "main_test_iteration_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "215": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "219": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "220": {
      "callsub": "test_cases.array.uint64.Contract.test_iteration",
      "op": "callsub test_iteration"
    },
    "223": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "224": {
      "op": "return",
      "stack_out": []
    },
    "225": {
      "block": "main_test_allocations_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "227": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "228": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "229": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "231": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "232": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "235": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "236": {
      "callsub": "test_cases.array.uint64.Contract.test_allocations",
      "op": "callsub test_allocations",
      "stack_out": []
    },
    "239": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "240": {
      "op": "return",
      "stack_out": []
    },
    "241": {
      "block": "main_test_array_evaluation_order_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "243": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "244": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "245": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "247": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "248": {
      "callsub": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "op": "callsub test_array_evaluation_order"
    },
    "251": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "252": {
      "op": "return",
      "stack_out": []
    },
    "253": {
      "block": "main_test_array_copy_and_extend_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "255": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "256": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "257": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "259": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "260": {
      "callsub": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "op": "callsub test_array_copy_and_extend"
    },
    "263": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "264": {
      "op": "return",
      "stack_out": []
    },
    "265": {
      "block": "main_test_array_too_long_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "267": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "268": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "269": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "271": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "272": {
      "callsub": "test_cases.array.uint64.Contract.test_array_too_long",
      "op": "callsub test_array_too_long"
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    },
    "277": {
      "block": "main_overhead_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "279": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "284": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "285": {
      "op": "return",
      "stack_out": []
    },
    "286": {
      "block": "main_test_array_multiple_append_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "288": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "289": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "290": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "292": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "293": {
      "callsub": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "op": "callsub test_array_multiple_append"
    },
    "296": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "297": {
      "op": "return",
      "stack_out": []
    },
    "298": {
      "block": "main_test_array_extend_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "300": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "301": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "302": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "304": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "305": {
      "callsub": "test_cases.array.uint64.Contract.test_array_extend",
      "op": "callsub test_array_extend"
    },
    "308": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "309": {
      "op": "return",
      "stack_out": []
    },
    "310": {
      "block": "main_test_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "312": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "313": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "314": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "316": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "317": {
      "callsub": "test_cases.array.uint64.Contract.test_array",
      "op": "callsub test_array"
    },
    "320": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "321": {
      "op": "return",
      "stack_out": []
    },
    "322": {
      "block": "main_bare_routing@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "324": {
      "op": "bnz main_after_if_else@20",
      "stack_out": []
    },
    "327": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "329": {
      "op": "!",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "330": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "331": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "332": {
      "op": "return",
      "stack_out": []
    },
    "333": {
      "subroutine": "test_cases.array.uint64.quicksort_window",
      "params": {
        "arr#0": "uint64",
        "window_left#0": "uint64",
        "window_right#0": "uint64"
      },
      "block": "quicksort_window",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "336": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "bytes_offset%1#0"
      ]
    },
    "337": {
      "op": "dupn 2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16"
      ]
    },
    "339": {
      "op": "frame_dig -2",
      "defined_out": [
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "window_left#0 (copy)"
      ]
    },
    "341": {
      "op": "frame_dig -1",
      "defined_out": [
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ]
    },
    "343": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "tmp%0#0"
      ]
    },
    "344": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "tmp%0#0",
        "2"
      ]
    },
    "346": {
      "op": "/",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "tmp%1#0"
      ]
    },
    "347": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "349": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "350": {
      "op": "swap",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "351": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "slot_contents%0#0",
        "tmp%1#0",
        "8"
      ]
    },
    "352": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "slot_contents%0#0",
        "bytes_offset%0#0"
      ]
    },
    "353": {
      "op": "extract_uint64",
      "defined_out": [
        "pivot#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0"
      ]
    },
    "354": {
      "op": "frame_dig -1"
    },
    "356": {
      "op": "frame_dig -2",
      "defined_out": [
        "left#1",
        "pivot#0",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "358": {
      "block": "quicksort_window_while_top@3",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "360": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0"
      ]
    },
    "361": {
      "op": "frame_dig 5",
      "defined_out": [
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "left#1"
      ]
    },
    "363": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "left#1",
        "8"
      ]
    },
    "364": {
      "op": "*",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "bytes_offset%1#0"
      ]
    },
    "365": {
      "op": "dup",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "bytes_offset%1#0",
        "bytes_offset%1#0"
      ]
    },
    "366": {
      "op": "frame_bury 0",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "bytes_offset%1#0"
      ]
    },
    "368": {
      "op": "extract_uint64",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "tmp%3#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%3#0"
      ]
    },
    "369": {
      "op": "frame_dig 3",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "pivot#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%3#0",
        "pivot#0"
      ]
    },
    "371": {
      "op": "<",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "pivot#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%4#0"
      ]
    },
    "372": {
      "op": "bz quicksort_window_while_top@6",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "375": {
      "op": "frame_dig 5",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "377": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "1"
      ]
    },
    "378": {
      "op": "+",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "379": {
      "op": "frame_bury 5",
      "defined_out": [
        "bytes_offset%1#0",
        "left#1",
        "pivot#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "381": {
      "op": "b quicksort_window_while_top@3"
    },
    "384": {
      "block": "quicksort_window_while_top@6",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "386": {
      "op": "loads",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0"
      ]
    },
    "387": {
      "op": "frame_dig 4",
      "defined_out": [
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "right#1"
      ]
    },
    "389": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "right#1",
        "8"
      ]
    },
    "390": {
      "op": "*",
      "defined_out": [
        "bytes_offset%2#0",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "bytes_offset%2#0"
      ]
    },
    "391": {
      "op": "dup",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "bytes_offset%2#0",
        "bytes_offset%2#0"
      ]
    },
    "392": {
      "op": "frame_bury 1",
      "defined_out": [
        "bytes_offset%2#0",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "bytes_offset%2#0"
      ]
    },
    "394": {
      "op": "extract_uint64",
      "defined_out": [
        "bytes_offset%2#0",
        "right#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%6#0"
      ]
    },
    "395": {
      "op": "frame_dig 3",
      "defined_out": [
        "bytes_offset%2#0",
        "pivot#0",
        "right#1",
        "tmp%6#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%6#0",
        "pivot#0"
      ]
    },
    "397": {
      "op": ">",
      "defined_out": [
        "bytes_offset%2#0",
        "pivot#0",
        "right#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%7#0"
      ]
    },
    "398": {
      "op": "bz quicksort_window_after_while@10",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "401": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "403": {
      "op": "bz quicksort_window_after_while@22",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "406": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "408": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "bytes_offset%2#0",
        "pivot#0",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "1"
      ]
    },
    "409": {
      "op": "-",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "410": {
      "op": "frame_bury 4",
      "defined_out": [
        "bytes_offset%2#0",
        "pivot#0",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "412": {
      "op": "b quicksort_window_while_top@6"
    },
    "415": {
      "block": "quicksort_window_after_while@22",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "window_left#0 (copy)"
      ]
    },
    "417": {
      "op": "frame_dig 4",
      "defined_out": [
        "right#1",
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "window_left#0 (copy)",
        "right#1"
      ]
    },
    "419": {
      "op": "<",
      "defined_out": [
        "right#1",
        "tmp%23#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%23#0"
      ]
    },
    "420": {
      "op": "bz quicksort_window_after_if_else@24",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "423": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "425": {
      "op": "frame_dig -2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)",
        "window_left#0 (copy)"
      ]
    },
    "427": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)",
        "window_left#0 (copy)",
        "right#1"
      ]
    },
    "429": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "432": {
      "block": "quicksort_window_after_if_else@24",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "434": {
      "op": "frame_dig -1",
      "defined_out": [
        "left#1",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "window_right#0 (copy)"
      ]
    },
    "436": {
      "op": "<",
      "defined_out": [
        "left#1",
        "tmp%24#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%24#0"
      ]
    },
    "437": {
      "op": "bz quicksort_window_after_if_else@26",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "440": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "left#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "442": {
      "op": "frame_dig 5",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)",
        "left#1"
      ]
    },
    "444": {
      "op": "frame_dig -1",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)",
        "left#1",
        "window_right#0 (copy)"
      ]
    },
    "446": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "449": {
      "block": "quicksort_window_after_if_else@26",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "450": {
      "block": "quicksort_window_after_while@10",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "452": {
      "op": "frame_dig 4",
      "defined_out": [
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "right#1"
      ]
    },
    "454": {
      "op": "<",
      "defined_out": [
        "left#1",
        "right#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%10#0"
      ]
    },
    "455": {
      "op": "bz quicksort_window_after_if_else@16",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "458": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "460": {
      "op": "loads",
      "defined_out": [
        "left#1",
        "right#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%3#0"
      ]
    },
    "461": {
      "op": "dup",
      "defined_out": [
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "462": {
      "op": "frame_dig 1",
      "defined_out": [
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%2#0"
      ]
    },
    "464": {
      "op": "dup",
      "defined_out": [
        "bytes_offset%2#0",
        "bytes_offset%2#0 (copy)",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%2#0 (copy)",
        "bytes_offset%2#0 (copy)"
      ]
    },
    "465": {
      "op": "cover 3",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%2#0 (copy)"
      ]
    },
    "467": {
      "op": "extract_uint64",
      "defined_out": [
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "slot_contents%3#0",
        "tmp%11#0"
      ]
    },
    "468": {
      "op": "dig 1",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "470": {
      "op": "frame_dig 0",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%1#0"
      ]
    },
    "472": {
      "op": "dup",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%1#0 (copy)",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%1#0 (copy)",
        "bytes_offset%1#0 (copy)"
      ]
    },
    "473": {
      "op": "cover 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "bytes_offset%1#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "slot_contents%3#0 (copy)",
        "bytes_offset%1#0 (copy)"
      ]
    },
    "475": {
      "op": "extract_uint64",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "bytes_offset%1#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "476": {
      "op": "swap",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "bytes_offset%1#0",
        "slot_contents%3#0",
        "tmp%12#0",
        "tmp%11#0"
      ]
    },
    "477": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%0#1",
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "slot_contents%3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "bytes_offset%1#0",
        "slot_contents%3#0",
        "tmp%12#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "478": {
      "op": "uncover 2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "bytes_offset%1#0",
        "tmp%12#0",
        "array%val_as_bytes%0#1",
        "slot_contents%3#0"
      ]
    },
    "480": {
      "op": "uncover 3",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "tmp%12#0",
        "array%val_as_bytes%0#1",
        "slot_contents%3#0",
        "bytes_offset%1#0"
      ]
    },
    "482": {
      "op": "uncover 2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "tmp%12#0",
        "slot_contents%3#0",
        "bytes_offset%1#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "484": {
      "op": "replace3",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "tmp%12#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "tmp%12#0",
        "updated_array%0#0"
      ]
    },
    "485": {
      "op": "swap",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "updated_array%0#0",
        "tmp%12#0"
      ]
    },
    "486": {
      "op": "itob",
      "defined_out": [
        "array%val_as_bytes%1#1",
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "updated_array%0#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "updated_array%0#0",
        "array%val_as_bytes%1#1"
      ]
    },
    "487": {
      "op": "swap",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "bytes_offset%2#0",
        "array%val_as_bytes%1#1",
        "updated_array%0#0"
      ]
    },
    "488": {
      "op": "cover 2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "updated_array%0#0",
        "bytes_offset%2#0",
        "array%val_as_bytes%1#1"
      ]
    },
    "490": {
      "op": "replace3",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "updated_array%1#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "updated_array%1#0"
      ]
    },
    "491": {
      "op": "frame_dig -3",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "updated_array%1#0",
        "arr#0 (copy)"
      ]
    },
    "493": {
      "op": "swap",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)",
        "updated_array%1#0"
      ]
    },
    "494": {
      "op": "stores",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "495": {
      "op": "frame_dig 5",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "497": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "1"
      ]
    },
    "498": {
      "op": "+",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "499": {
      "op": "frame_bury 5",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "501": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "503": {
      "op": "bz quicksort_window_after_while@22",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "506": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "508": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "1"
      ]
    },
    "509": {
      "op": "-",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "510": {
      "op": "dup",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "right#1"
      ]
    },
    "511": {
      "op": "frame_bury 4",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "513": {
      "op": "frame_dig 5",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "left#1"
      ]
    },
    "515": {
      "op": ">=",
      "defined_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "left#1",
        "right#1",
        "tmp%18#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%18#0"
      ]
    },
    "516": {
      "op": "bnz quicksort_window_while_top@3",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "519": {
      "op": "b quicksort_window_after_while@22"
    },
    "522": {
      "block": "quicksort_window_after_if_else@16",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "524": {
      "op": "frame_dig 4",
      "defined_out": [
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "right#1"
      ]
    },
    "526": {
      "op": "==",
      "defined_out": [
        "left#1",
        "right#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%19#0"
      ]
    },
    "527": {
      "op": "bz quicksort_window_after_while@22",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "530": {
      "op": "frame_dig 5",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "532": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "1"
      ]
    },
    "533": {
      "op": "+",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "534": {
      "op": "frame_bury 5",
      "defined_out": [
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "536": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "538": {
      "op": "dup",
      "defined_out": [
        "left#1",
        "right#1",
        "right#16"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "right#16"
      ]
    },
    "539": {
      "op": "frame_bury 2",
      "defined_out": [
        "left#1",
        "right#1",
        "right#16"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "541": {
      "op": "bz quicksort_window_after_if_else@19",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "544": {
      "op": "frame_dig 4",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "546": {
      "op": "intc_0 // 1",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1",
        "1"
      ]
    },
    "547": {
      "op": "-",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#16"
      ]
    },
    "548": {
      "op": "frame_bury 2",
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "550": {
      "block": "quicksort_window_after_if_else@19",
      "stack_in": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "552": {
      "op": "frame_bury 4",
      "defined_out": [
        "right#1"
      ],
      "stack_out": [
        "bytes_offset%1#0",
        "bytes_offset%2#0",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "554": {
      "op": "b quicksort_window_after_while@22"
    },
    "557": {
      "subroutine": "test_cases.array.uint64.create_array",
      "params": {},
      "block": "create_array",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "560": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "563": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "564": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "0x"
      ]
    },
    "565": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "566": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "567": {
      "block": "create_array_for_header@1",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "569": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "570": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "571": {
      "op": "bz create_array_after_for@4",
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "574": {
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "576": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "577": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "578": {
      "op": "frame_dig 1",
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "580": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "581": {
      "op": "cover 3",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "583": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "584": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "arr#0",
        "concat%0#0"
      ]
    },
    "585": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "586": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "587": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "i#0",
        "i#0"
      ]
    },
    "588": {
      "op": "frame_bury 1",
      "defined_out": [
        "arr#0",
        "i#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0"
      ]
    },
    "590": {
      "op": "b create_array_for_header@1"
    },
    "593": {
      "block": "create_array_after_for@4",
      "stack_in": [
        "arr#0",
        "i#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "i#0",
        "arr#0"
      ]
    },
    "594": {
      "subroutine": "test_cases.array.uint64.assert_last_is_zero",
      "params": {
        "arr#0": "uint64"
      },
      "block": "assert_last_is_zero",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "597": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "599": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0"
      ]
    },
    "600": {
      "op": "dup",
      "defined_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "601": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%bytes_len%0#1"
      ]
    },
    "602": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "603": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%array_len%0#1"
      ]
    },
    "604": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%array_len%0#1",
        "1"
      ]
    },
    "605": {
      "op": "-",
      "defined_out": [
        "slot_contents%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "tmp%0#0"
      ]
    },
    "606": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot_contents%0#0",
        "tmp%0#0",
        "8"
      ]
    },
    "607": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "bytes_offset%0#0"
      ]
    },
    "608": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "609": {
      "op": "!",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "610": {
      "op": "assert",
      "stack_out": []
    },
    "611": {
      "retsub": true,
      "op": "retsub"
    },
    "612": {
      "subroutine": "test_cases.array.uint64.add_x",
      "params": {
        "arr#0": "uint64",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "615": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "616": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "618": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "620": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "621": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "624": {
      "op": "frame_dig -2",
      "defined_out": [
        "arr#0 (copy)",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "arr#0 (copy)"
      ]
    },
    "626": {
      "op": "loads",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "627": {
      "op": "frame_dig 0",
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "629": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "630": {
      "op": "cover 2",
      "stack_out": [
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "632": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "633": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0"
      ]
    },
    "634": {
      "op": "frame_dig -2",
      "stack_out": [
        "i#0",
        "i#0",
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "636": {
      "op": "swap",
      "stack_out": [
        "i#0",
        "i#0",
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "637": {
      "op": "stores",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "638": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "1"
      ]
    },
    "639": {
      "op": "+",
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "640": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "642": {
      "op": "b add_x_for_header@1"
    },
    "645": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "646": {
      "subroutine": "test_cases.array.uint64.append_length_and_return",
      "params": {
        "arr#0": "uint64"
      },
      "block": "append_length_and_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "649": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "651": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0"
      ]
    },
    "652": {
      "op": "dup",
      "defined_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "653": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%bytes_len%0#1"
      ]
    },
    "654": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "655": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "array%array_len%0#1"
      ]
    },
    "656": {
      "op": "itob",
      "defined_out": [
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "657": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0"
      ],
      "stack_out": [
        "concat%0#0"
      ]
    },
    "658": {
      "op": "frame_dig -1",
      "stack_out": [
        "concat%0#0",
        "arr#0 (copy)"
      ]
    },
    "660": {
      "op": "swap",
      "stack_out": [
        "arr#0 (copy)",
        "concat%0#0"
      ]
    },
    "661": {
      "op": "stores",
      "stack_out": []
    },
    "662": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "664": {
      "retsub": true,
      "op": "retsub"
    },
    "665": {
      "subroutine": "test_cases.array.uint64.Contract.test_array",
      "params": {},
      "block": "test_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "668": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "671": {
      "op": "dupn 2",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "673": {
      "op": "pushbytes 0x000000000000002a",
      "defined_out": [
        "0x000000000000002a",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "0x000000000000002a"
      ]
    },
    "683": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "684": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "685": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "5"
      ]
    },
    "686": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "689": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0"
      ]
    },
    "690": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ]
    },
    "691": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_len%3#1"
      ]
    },
    "692": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "693": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)"
      ]
    },
    "695": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "6"
      ]
    },
    "697": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "tmp%5#0"
      ]
    },
    "698": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1"
      ]
    },
    "699": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "1"
      ]
    },
    "700": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "tmp%6#0"
      ]
    },
    "701": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "tmp%6#0",
        "8"
      ]
    },
    "702": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%1#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%5#0",
        "bytes_offset%1#0"
      ]
    },
    "703": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0"
      ]
    },
    "704": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%7#0",
        "4"
      ]
    },
    "706": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%8#0"
      ]
    },
    "707": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "708": {
      "op": "pushint 4 // 4"
    },
    "710": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0"
      ]
    },
    "711": {
      "block": "test_array_for_header@2",
      "stack_in": [
        "arr#0",
        "expected#0",
        "_i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "_i#0"
      ]
    },
    "713": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "_i#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "_i#0",
        "3"
      ]
    },
    "715": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "716": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0"
      ]
    },
    "719": {
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0"
      ]
    },
    "721": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "722": {
      "op": "loads",
      "defined_out": [
        "_i#0",
        "arr#0",
        "slot_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1"
      ]
    },
    "723": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "slot_contents%0#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "slot_contents%0#1 (copy)"
      ]
    },
    "724": {
      "op": "len",
      "defined_out": [
        "_i#0",
        "arr#0",
        "len%0#0",
        "slot_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0"
      ]
    },
    "725": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "arr#0",
        "len%0#0",
        "len%0#0 (copy)",
        "slot_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0",
        "len%0#0 (copy)"
      ]
    },
    "726": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "_i#0",
        "arr#0",
        "len%0#0",
        "len%0#0 (copy)",
        "slot_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0",
        "len%0#0 (copy)",
        "8"
      ]
    },
    "727": {
      "op": "-",
      "defined_out": [
        "_i#0",
        "arr#0",
        "len%0#0",
        "slot_contents%0#1",
        "sub%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0",
        "sub%0#0"
      ]
    },
    "728": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0",
        "sub%0#0",
        "slot_contents%0#1 (copy)"
      ]
    },
    "730": {
      "op": "dig 1",
      "defined_out": [
        "_i#0",
        "arr#0",
        "len%0#0",
        "slot_contents%0#1",
        "slot_contents%0#1 (copy)",
        "sub%0#0",
        "sub%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "len%0#0",
        "sub%0#0",
        "slot_contents%0#1 (copy)",
        "sub%0#0 (copy)"
      ]
    },
    "732": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "sub%0#0",
        "slot_contents%0#1 (copy)",
        "sub%0#0 (copy)",
        "len%0#0"
      ]
    },
    "734": {
      "op": "substring3",
      "defined_out": [
        "_i#0",
        "arr#0",
        "data%0#0",
        "slot_contents%0#1",
        "sub%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%0#1",
        "sub%0#0",
        "data%0#0"
      ]
    },
    "735": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "sub%0#0",
        "data%0#0",
        "slot_contents%0#1"
      ]
    },
    "737": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "_i#0",
        "arr#0",
        "data%0#0",
        "slot_contents%0#1",
        "sub%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "sub%0#0",
        "data%0#0",
        "slot_contents%0#1",
        "0"
      ]
    },
    "738": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "data%0#0",
        "slot_contents%0#1",
        "0",
        "sub%0#0"
      ]
    },
    "740": {
      "op": "extract3",
      "defined_out": [
        "_i#0",
        "arr#0",
        "data%0#0",
        "extract%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "data%0#0",
        "extract%0#0"
      ]
    },
    "741": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "extract%0#0",
        "data%0#0"
      ]
    },
    "742": {
      "op": "btoi",
      "defined_out": [
        "_i#0",
        "arr#0",
        "extract%0#0",
        "popped#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "extract%0#0",
        "popped#0"
      ]
    },
    "743": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "popped#0",
        "arr#0",
        "extract%0#0"
      ]
    },
    "745": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "popped#0"
      ]
    },
    "746": {
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0",
        "popped#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "popped#0",
        "expected#0"
      ]
    },
    "748": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0",
        "expected#0 (copy)",
        "popped#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "popped#0",
        "expected#0 (copy)",
        "expected#0 (copy)"
      ]
    },
    "749": {
      "op": "cover 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "expected#0",
        "popped#0",
        "expected#0 (copy)"
      ]
    },
    "751": {
      "op": "==",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "expected#0",
        "tmp%1#1"
      ]
    },
    "752": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "expected#0"
      ]
    },
    "753": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "arr#0",
        "expected#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "expected#0",
        "1"
      ]
    },
    "754": {
      "op": "-",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "expected#0"
      ]
    },
    "755": {
      "op": "frame_bury 1",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0"
      ]
    },
    "757": {
      "op": "frame_dig 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "_i#0"
      ]
    },
    "759": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "760": {
      "op": "+",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "_i#0"
      ]
    },
    "761": {
      "op": "frame_bury 2",
      "defined_out": [
        "_i#0",
        "arr#0",
        "expected#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0"
      ]
    },
    "763": {
      "op": "b test_array_for_header@2"
    },
    "766": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "arr#0",
        "expected#0",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0"
      ]
    },
    "768": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "769": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0"
      ]
    },
    "770": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0",
        "slot_contents%8#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "slot_contents%8#0 (copy)"
      ]
    },
    "771": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%5#1",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%bytes_len%5#1"
      ]
    },
    "772": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%5#1",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "773": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%5#1",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1"
      ]
    },
    "774": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)"
      ]
    },
    "775": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)",
        "3"
      ]
    },
    "777": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%5#1",
        "slot_contents%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1",
        "tmp%9#0"
      ]
    },
    "778": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1"
      ]
    },
    "779": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%array_len%5#1",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "array%array_len%5#1",
        "1"
      ]
    },
    "780": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "tmp%10#0"
      ]
    },
    "781": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "tmp%10#0",
        "8"
      ]
    },
    "782": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%2#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "bytes_offset%2#0"
      ]
    },
    "783": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "bytes_offset%2#0",
        "slot_contents%8#0 (copy)"
      ]
    },
    "785": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "slot_contents%8#0 (copy)",
        "bytes_offset%2#0"
      ]
    },
    "786": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "tmp%11#0"
      ]
    },
    "787": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "tmp%11#0",
        "1"
      ]
    },
    "788": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%8#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "tmp%12#0"
      ]
    },
    "789": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0"
      ]
    },
    "790": {
      "op": "pushbytes 0x000000000000002b",
      "defined_out": [
        "0x000000000000002b",
        "arr#0",
        "slot_contents%8#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%8#0",
        "0x000000000000002b"
      ]
    },
    "800": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "801": {
      "op": "dup2",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "concat%1#0",
        "concat%1#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "arr#0 (copy)",
        "concat%1#0 (copy)"
      ]
    },
    "802": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "803": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "804": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%7#1",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%bytes_len%7#1"
      ]
    },
    "805": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%bytes_len%7#1",
        "8"
      ]
    },
    "806": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1"
      ]
    },
    "807": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)"
      ]
    },
    "808": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "4"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "concat%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1",
        "tmp%13#0"
      ]
    },
    "811": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1"
      ]
    },
    "812": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%array_len%7#1",
        "1"
      ]
    },
    "813": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%14#0"
      ]
    },
    "814": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%14#0",
        "8"
      ]
    },
    "815": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%3#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "bytes_offset%3#0"
      ]
    },
    "816": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "bytes_offset%3#0",
        "concat%1#0 (copy)"
      ]
    },
    "818": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "bytes_offset%3#0"
      ]
    },
    "819": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%15#0"
      ]
    },
    "820": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "arr#0",
        "concat%1#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%15#0",
        "43"
      ]
    },
    "822": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%16#0"
      ]
    },
    "823": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "824": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "0"
      ]
    },
    "825": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "tmp%17#0"
      ]
    },
    "826": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "tmp%17#0",
        "42"
      ]
    },
    "828": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "tmp%18#0"
      ]
    },
    "829": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0"
      ]
    },
    "830": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "831": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)",
        "10"
      ]
    },
    "833": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0"
      ]
    },
    "836": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "837": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "838": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)"
      ]
    },
    "839": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%9#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_len%9#1"
      ]
    },
    "840": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_len%9#1",
        "8"
      ]
    },
    "841": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1"
      ]
    },
    "842": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)"
      ]
    },
    "843": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "14"
      ]
    },
    "845": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "slot_contents%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "tmp%19#0"
      ]
    },
    "846": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1"
      ]
    },
    "847": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "1"
      ]
    },
    "848": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%20#0"
      ]
    },
    "849": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%20#0",
        "8"
      ]
    },
    "850": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%5#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "bytes_offset%5#0"
      ]
    },
    "851": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "bytes_offset%5#0",
        "slot_contents%16#0 (copy)"
      ]
    },
    "853": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)",
        "bytes_offset%5#0"
      ]
    },
    "854": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%21#0"
      ]
    },
    "855": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "slot_contents%16#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%21#0",
        "9"
      ]
    },
    "857": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%22#0"
      ]
    },
    "858": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "859": {
      "op": "pushbytes 0x000000000000002c",
      "defined_out": [
        "0x000000000000002c",
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "0x000000000000002c"
      ]
    },
    "869": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0"
      ]
    },
    "870": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "concat%2#0",
        "concat%2#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "871": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%11#1",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%bytes_len%11#1"
      ]
    },
    "872": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%bytes_len%11#1",
        "8"
      ]
    },
    "873": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%11#1",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1"
      ]
    },
    "874": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)"
      ]
    },
    "875": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)",
        "15"
      ]
    },
    "877": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%11#1",
        "concat%2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1",
        "tmp%23#0"
      ]
    },
    "878": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1"
      ]
    },
    "879": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "array%array_len%11#1",
        "1"
      ]
    },
    "880": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "concat%2#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "tmp%24#0"
      ]
    },
    "881": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "tmp%24#0",
        "8"
      ]
    },
    "882": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%6#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "bytes_offset%6#0"
      ]
    },
    "883": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "bytes_offset%6#0",
        "concat%2#0 (copy)"
      ]
    },
    "885": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "concat%2#0 (copy)",
        "bytes_offset%6#0"
      ]
    },
    "886": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "concat%2#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "tmp%25#0"
      ]
    },
    "887": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "arr#0",
        "concat%2#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "tmp%25#0",
        "44"
      ]
    },
    "889": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "concat%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "tmp%26#0"
      ]
    },
    "890": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0"
      ]
    },
    "891": {
      "op": "pushbytes 0x0000000000000063",
      "defined_out": [
        "0x0000000000000063",
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%2#0",
        "0x0000000000000063"
      ]
    },
    "901": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%0#1"
      ]
    },
    "902": {
      "op": "pushbytes 0x0000000000000064",
      "defined_out": [
        "0x0000000000000064",
        "arr#0",
        "concat%0#1"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%0#1",
        "0x0000000000000064"
      ]
    },
    "912": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0"
      ]
    },
    "913": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "914": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "0"
      ]
    },
    "915": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%28#0"
      ]
    },
    "916": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "concat%1#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%28#0",
        "2"
      ]
    },
    "918": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "tmp%29#0"
      ]
    },
    "919": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "concat%1#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "920": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "arr#0",
        "updated_array%0#0"
      ]
    },
    "922": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "arr#0"
      ]
    },
    "923": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "arr#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "925": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0"
      ]
    },
    "926": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "927": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%13#1",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%bytes_len%13#1"
      ]
    },
    "928": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%bytes_len%13#1",
        "8"
      ]
    },
    "929": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1"
      ]
    },
    "930": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)"
      ]
    },
    "931": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "17"
      ]
    },
    "933": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%31#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%31#0"
      ]
    },
    "934": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1"
      ]
    },
    "935": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "updated_array%0#0 (copy)"
      ]
    },
    "937": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "updated_array%0#0 (copy)",
        "0"
      ]
    },
    "938": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%32#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%32#0"
      ]
    },
    "939": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%32#0",
        "44"
      ]
    },
    "941": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%33#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%33#0"
      ]
    },
    "942": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1"
      ]
    },
    "943": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)"
      ]
    },
    "944": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "2"
      ]
    },
    "946": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%34#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%34#0"
      ]
    },
    "947": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%34#0",
        "8"
      ]
    },
    "948": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "bytes_offset%9#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "bytes_offset%9#0"
      ]
    },
    "949": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "bytes_offset%9#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "951": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "updated_array%0#0 (copy)",
        "bytes_offset%9#0"
      ]
    },
    "952": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%35#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%35#0"
      ]
    },
    "953": {
      "op": "pushint 99 // 99",
      "defined_out": [
        "99",
        "arr#0",
        "array%array_len%13#1",
        "tmp%35#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%35#0",
        "99"
      ]
    },
    "955": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "tmp%36#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "tmp%36#0"
      ]
    },
    "956": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1"
      ]
    },
    "957": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "array%array_len%13#1",
        "1"
      ]
    },
    "958": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "tmp%37#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "tmp%37#0"
      ]
    },
    "959": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "tmp%37#0",
        "8"
      ]
    },
    "960": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%10#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "updated_array%0#0",
        "bytes_offset%10#0"
      ]
    },
    "961": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "tmp%38#0"
      ]
    },
    "962": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "arr#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "tmp%38#0",
        "100"
      ]
    },
    "964": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0",
        "tmp%39#0"
      ]
    },
    "965": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "expected#0",
        "_i#0"
      ]
    },
    "966": {
      "retsub": true,
      "op": "retsub"
    },
    "967": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_extend",
      "params": {},
      "block": "test_array_extend",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "970": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "971": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x"
      ]
    },
    "972": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "973": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "974": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "975": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "978": {
      "op": "bytec_1 // 0x000000000000000100000000000000020000000000000003",
      "defined_out": [
        "0x000000000000000100000000000000020000000000000003",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x000000000000000100000000000000020000000000000003"
      ]
    },
    "979": {
      "op": "pop",
      "stack_out": [
        "arr#0"
      ]
    },
    "980": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "981": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0"
      ]
    },
    "982": {
      "op": "bytec_1 // 0x000000000000000100000000000000020000000000000003",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "0x000000000000000100000000000000020000000000000003"
      ]
    },
    "983": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%3#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%3#0"
      ]
    },
    "984": {
      "op": "swap",
      "stack_out": [
        "concat%3#0",
        "arr#0"
      ]
    },
    "985": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "concat%3#0",
        "concat%3#0 (copy)"
      ],
      "stack_out": [
        "concat%3#0",
        "arr#0",
        "concat%3#0 (copy)"
      ]
    },
    "987": {
      "op": "stores",
      "stack_out": [
        "concat%3#0"
      ]
    },
    "988": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "989": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "990": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1"
      ]
    },
    "991": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1",
        "4"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "994": {
      "op": "assert",
      "stack_out": []
    },
    "995": {
      "retsub": true,
      "op": "retsub"
    },
    "996": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "params": {},
      "block": "test_array_multiple_append",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "999": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1000": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x"
      ]
    },
    "1001": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1002": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1003": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "1004": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "1007": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1008": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1009": {
      "op": "pushbytes 0x0000000000000001",
      "defined_out": [
        "0x0000000000000001",
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "0x0000000000000001"
      ]
    },
    "1019": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0"
      ]
    },
    "1020": {
      "op": "pushbytes 0x0000000000000002",
      "defined_out": [
        "0x0000000000000002",
        "arr#0",
        "concat%0#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%0#0",
        "0x0000000000000002"
      ]
    },
    "1030": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0"
      ]
    },
    "1031": {
      "op": "bytec_2 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "arr#0",
        "concat%1#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%1#0",
        "0x0000000000000003"
      ]
    },
    "1032": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%2#0"
      ],
      "stack_out": [
        "arr#0",
        "concat%2#0"
      ]
    },
    "1033": {
      "op": "swap",
      "stack_out": [
        "concat%2#0",
        "arr#0"
      ]
    },
    "1034": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "concat%2#0",
        "concat%2#0 (copy)"
      ],
      "stack_out": [
        "concat%2#0",
        "arr#0",
        "concat%2#0 (copy)"
      ]
    },
    "1036": {
      "op": "stores",
      "stack_out": [
        "concat%2#0"
      ]
    },
    "1037": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "1038": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1039": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1"
      ]
    },
    "1040": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1",
        "4"
      ]
    },
    "1042": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1043": {
      "op": "assert",
      "stack_out": []
    },
    "1044": {
      "retsub": true,
      "op": "retsub"
    },
    "1045": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_too_long",
      "params": {},
      "block": "test_array_too_long",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1048": {
      "op": "bytec_0 // 0x"
    },
    "1049": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1050": {
      "block": "test_array_too_long_for_header@1",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1052": {
      "op": "pushint 512 // 512",
      "defined_out": [
        "512",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "512"
      ]
    },
    "1055": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1056": {
      "op": "bz test_array_too_long_after_for@4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1059": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "1061": {
      "op": "frame_dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "1063": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1064": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "1066": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1067": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "1068": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1070": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1071": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1072": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1074": {
      "op": "b test_array_too_long_for_header@1"
    },
    "1077": {
      "block": "test_array_too_long_after_for@4",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "1079": {
      "op": "dup",
      "defined_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ]
    },
    "1080": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_len%0#1"
      ]
    },
    "1081": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1082": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%array_len%0#1"
      ]
    },
    "1083": {
      "op": "pushint 512 // 512",
      "defined_out": [
        "512",
        "array%array_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%array_len%0#1",
        "512"
      ]
    },
    "1086": {
      "op": "==",
      "defined_out": [
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "tmp%0#0"
      ]
    },
    "1087": {
      "error": "array is expected length",
      "op": "assert // array is expected length",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "1088": {
      "op": "pushbytes 0x0000000000000200",
      "defined_out": [
        "0x0000000000000200",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "0x0000000000000200"
      ]
    },
    "1098": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%1#0"
      ]
    },
    "1099": {
      "op": "pop",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1100": {
      "retsub": true,
      "op": "retsub"
    },
    "1101": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "params": {},
      "block": "test_array_copy_and_extend",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1104": {
      "op": "bytec_0 // 0x"
    },
    "1105": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1106": {
      "block": "test_array_copy_and_extend_for_header@1",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1108": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "1109": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1110": {
      "op": "bz test_array_copy_and_extend_after_for@4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1113": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0"
      ]
    },
    "1115": {
      "op": "frame_dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0"
      ]
    },
    "1117": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1118": {
      "op": "cover 2",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "i#0 (copy)"
      ]
    },
    "1120": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1121": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "slot%0"
      ]
    },
    "1122": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1124": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1125": {
      "op": "+",
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "1126": {
      "op": "frame_bury 1",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1128": {
      "op": "b test_array_copy_and_extend_for_header@1"
    },
    "1131": {
      "block": "test_array_copy_and_extend_after_for@4",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%0"
      ]
    },
    "1133": {
      "op": "dup",
      "defined_out": [
        "slot%0",
        "slot%1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "slot_contents%2#0"
      ]
    },
    "1134": {
      "op": "pushbytes 0x0000000000000005",
      "defined_out": [
        "0x0000000000000005",
        "slot%0",
        "slot%1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "slot_contents%2#0",
        "0x0000000000000005"
      ]
    },
    "1144": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0"
      ]
    },
    "1145": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1146": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%bytes_len%0#1"
      ]
    },
    "1147": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1148": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1"
      ]
    },
    "1149": {
      "op": "dup",
      "defined_out": [
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)"
      ]
    },
    "1150": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "6"
      ]
    },
    "1152": {
      "op": "==",
      "defined_out": [
        "array%array_len%0#1",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "tmp%0#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1",
        "tmp%0#0"
      ]
    },
    "1153": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1"
      ]
    },
    "1154": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%0#1",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "array%array_len%0#1",
        "1"
      ]
    },
    "1155": {
      "op": "-",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "tmp%1#0"
      ]
    },
    "1156": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "tmp%1#0",
        "8"
      ]
    },
    "1157": {
      "op": "*",
      "defined_out": [
        "bytes_offset%0#0",
        "concat%1#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "bytes_offset%0#0"
      ]
    },
    "1158": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "bytes_offset%0#0",
        "concat%1#0 (copy)"
      ]
    },
    "1160": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "concat%1#0 (copy)",
        "bytes_offset%0#0"
      ]
    },
    "1161": {
      "op": "extract_uint64",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "tmp%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "tmp%2#0"
      ]
    },
    "1162": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "tmp%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "tmp%2#0",
        "5"
      ]
    },
    "1163": {
      "op": "==",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "tmp%3#0"
      ]
    },
    "1164": {
      "error": "expected 5",
      "op": "assert // expected 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0"
      ]
    },
    "1165": {
      "op": "dig 1",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0"
      ]
    },
    "1167": {
      "op": "dup",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)"
      ]
    },
    "1168": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%bytes_len%2#1"
      ]
    },
    "1169": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1170": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1"
      ]
    },
    "1171": {
      "op": "dup",
      "defined_out": [
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)"
      ]
    },
    "1172": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)",
        "5"
      ]
    },
    "1173": {
      "op": "==",
      "defined_out": [
        "array%array_len%2#1",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "tmp%4#0"
      ]
    },
    "1174": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1"
      ]
    },
    "1175": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "1"
      ]
    },
    "1176": {
      "op": "-",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "tmp%5#0"
      ]
    },
    "1177": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "tmp%5#0",
        "8"
      ]
    },
    "1178": {
      "op": "*",
      "defined_out": [
        "bytes_offset%1#0",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "bytes_offset%1#0"
      ]
    },
    "1179": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "bytes_offset%1#0",
        "slot_contents%6#0 (copy)"
      ]
    },
    "1181": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)",
        "bytes_offset%1#0"
      ]
    },
    "1182": {
      "op": "extract_uint64",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "tmp%6#0"
      ]
    },
    "1183": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "tmp%6#0",
        "4"
      ]
    },
    "1185": {
      "op": "==",
      "defined_out": [
        "concat%1#0",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0",
        "tmp%7#0"
      ]
    },
    "1186": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%1#0",
        "slot_contents%6#0"
      ]
    },
    "1187": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0"
      ]
    },
    "1188": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "1189": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%4#1",
        "concat%2#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%bytes_len%4#1"
      ]
    },
    "1190": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%bytes_len%4#1",
        "8"
      ]
    },
    "1191": {
      "op": "/",
      "defined_out": [
        "array%array_len%4#1",
        "concat%2#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%array_len%4#1"
      ]
    },
    "1192": {
      "op": "dup",
      "defined_out": [
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "concat%2#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)"
      ]
    },
    "1193": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "concat%2#0",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "11"
      ]
    },
    "1195": {
      "op": "==",
      "defined_out": [
        "array%array_len%4#1",
        "concat%2#0",
        "slot%0",
        "slot%1",
        "tmp%8#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%array_len%4#1",
        "tmp%8#0"
      ]
    },
    "1196": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "concat%2#0",
        "array%array_len%4#1"
      ]
    },
    "1197": {
      "op": "uncover 2",
      "defined_out": [
        "array%array_len%4#1",
        "concat%2#0",
        "slot%0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "slot_contents%12#0"
      ]
    },
    "1199": {
      "op": "len",
      "defined_out": [
        "array%array_len%4#1",
        "array%bytes_len%5#1",
        "concat%2#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "array%bytes_len%5#1"
      ]
    },
    "1200": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "1201": {
      "op": "/",
      "defined_out": [
        "array%array_len%4#1",
        "array%array_len%5#1",
        "concat%2#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "array%array_len%5#1"
      ]
    },
    "1202": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "array%array_len%5#1",
        "5"
      ]
    },
    "1203": {
      "op": "==",
      "defined_out": [
        "array%array_len%4#1",
        "concat%2#0",
        "slot%0",
        "tmp%9#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "tmp%9#0"
      ]
    },
    "1204": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1"
      ]
    },
    "1205": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "array%array_len%4#1",
        "1"
      ]
    },
    "1206": {
      "op": "-",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%10#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%10#0"
      ]
    },
    "1207": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%10#0",
        "8"
      ]
    },
    "1208": {
      "op": "*",
      "defined_out": [
        "bytes_offset%2#0",
        "concat%2#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "bytes_offset%2#0"
      ]
    },
    "1209": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "bytes_offset%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "1211": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "concat%2#0 (copy)",
        "bytes_offset%2#0"
      ]
    },
    "1212": {
      "op": "extract_uint64",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%11#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%11#0"
      ]
    },
    "1213": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%11#0",
        "4"
      ]
    },
    "1215": {
      "op": "==",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%12#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%12#0"
      ]
    },
    "1216": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0"
      ]
    },
    "1217": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "1218": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "concat%2#0",
        "concat%2#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "concat%2#0 (copy)",
        "32"
      ]
    },
    "1220": {
      "op": "extract_uint64",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%13#0"
      ]
    },
    "1221": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%13#0",
        "4"
      ]
    },
    "1223": {
      "op": "==",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%14#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%14#0"
      ]
    },
    "1224": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0"
      ]
    },
    "1225": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "concat%2#0 (copy)"
      ]
    },
    "1226": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "concat%2#0",
        "concat%2#0 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "concat%2#0 (copy)",
        "40"
      ]
    },
    "1228": {
      "op": "extract_uint64",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%15#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%15#0"
      ]
    },
    "1229": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%15#0",
        "5"
      ]
    },
    "1230": {
      "op": "==",
      "defined_out": [
        "concat%2#0",
        "slot%0",
        "tmp%16#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "tmp%16#0"
      ]
    },
    "1231": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0"
      ]
    },
    "1232": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "concat%2#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "concat%2#0",
        "48"
      ]
    },
    "1234": {
      "op": "extract_uint64",
      "defined_out": [
        "slot%0",
        "tmp%17#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "1235": {
      "op": "!",
      "defined_out": [
        "slot%0",
        "tmp%18#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "tmp%18#0"
      ]
    },
    "1236": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1237": {
      "retsub": true,
      "op": "retsub"
    },
    "1238": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "params": {},
      "block": "test_array_evaluation_order",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1241": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1242": {
      "op": "bytec_2 // 0x0000000000000003",
      "defined_out": [
        "0x0000000000000003",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x0000000000000003"
      ]
    },
    "1243": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1244": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1245": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1248": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "1250": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1253": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0"
      ]
    },
    "1254": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1256": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "slot_contents%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0",
        "slot_contents%2#0"
      ]
    },
    "1257": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%2#0",
        "slot_contents%1#0"
      ]
    },
    "1258": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "concat%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "concat%1#0"
      ]
    },
    "1259": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1260": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1261": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1262": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1263": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "array%bytes_len%0#1"
      ]
    },
    "1264": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1265": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "array%array_len%0#1"
      ]
    },
    "1266": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "array%array_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "array%array_len%0#1",
        "6"
      ]
    },
    "1268": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%2#0"
      ]
    },
    "1269": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1270": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1271": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "0"
      ]
    },
    "1272": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%3#0"
      ]
    },
    "1273": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "slot_contents%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%3#0",
        "3"
      ]
    },
    "1275": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%4#0"
      ]
    },
    "1276": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1277": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1278": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "8"
      ]
    },
    "1279": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%5#0"
      ]
    },
    "1280": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "slot_contents%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%5#0",
        "1"
      ]
    },
    "1281": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%6#0"
      ]
    },
    "1282": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1283": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1284": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "16"
      ]
    },
    "1286": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%7#0"
      ]
    },
    "1287": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "slot_contents%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%7#0",
        "2"
      ]
    },
    "1289": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%8#0"
      ]
    },
    "1290": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1291": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1292": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "24"
      ]
    },
    "1294": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%9#0"
      ]
    },
    "1295": {
      "op": "pushint 3 // 3",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%9#0",
        "3"
      ]
    },
    "1297": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%10#0"
      ]
    },
    "1298": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1299": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1300": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "32"
      ]
    },
    "1302": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%11#0"
      ]
    },
    "1303": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%11#0",
        "1"
      ]
    },
    "1304": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "tmp%12#0"
      ]
    },
    "1305": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "slot_contents%3#0"
      ]
    },
    "1306": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "arr#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%3#0",
        "40"
      ]
    },
    "1308": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%13#0"
      ]
    },
    "1309": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "tmp%13#0",
        "2"
      ]
    },
    "1311": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%14#0"
      ]
    },
    "1312": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "1313": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1314": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%15#0"
      ]
    },
    "1317": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0"
      ]
    },
    "1318": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%10#0",
        "slot_contents%10#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "slot_contents%10#0 (copy)"
      ]
    },
    "1319": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%1#1",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "array%bytes_len%1#1"
      ]
    },
    "1320": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "array%bytes_len%1#1",
        "8"
      ]
    },
    "1321": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%1#1",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "array%array_len%1#1"
      ]
    },
    "1322": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "array%array_len%1#1",
        "1"
      ]
    },
    "1323": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%16#0"
      ]
    },
    "1324": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "tmp%16#0",
        "8"
      ]
    },
    "1325": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "bytes_offset%6#0",
        "slot_contents%10#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%10#0",
        "bytes_offset%6#0"
      ]
    },
    "1326": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0"
      ]
    },
    "1327": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "arr#0 (copy)"
      ]
    },
    "1329": {
      "callsub": "test_cases.array.uint64.append_length_and_return",
      "op": "callsub append_length_and_return",
      "defined_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "1332": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%12#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "slot_contents%12#0"
      ]
    },
    "1333": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "slot_contents%12#0",
        "0"
      ]
    },
    "1334": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "1335": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%19#0",
        "arr#0 (copy)"
      ]
    },
    "1337": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%13#0",
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%17#0",
        "tmp%19#0",
        "slot_contents%13#0"
      ]
    },
    "1338": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "slot_contents%13#0",
        "tmp%17#0"
      ]
    },
    "1340": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "slot_contents%13#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%19#0",
        "slot_contents%13#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "1341": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "array%val_as_bytes%0#1",
        "tmp%19#0"
      ]
    },
    "1343": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "array%val_as_bytes%0#1",
        "tmp%19#0",
        "8"
      ]
    },
    "1344": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "slot_contents%13#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "array%val_as_bytes%0#1",
        "write_offset%0#0"
      ]
    },
    "1345": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%13#0",
        "write_offset%0#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "1346": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "arr#0",
        "updated_array%0#0"
      ]
    },
    "1347": {
      "op": "swap",
      "stack_out": [
        "updated_array%0#0",
        "arr#0"
      ]
    },
    "1348": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ],
      "stack_out": [
        "updated_array%0#0",
        "arr#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "1350": {
      "op": "stores",
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "1351": {
      "op": "dup",
      "stack_out": [
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "1352": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "array%bytes_len%2#1"
      ]
    },
    "1353": {
      "op": "intc_1 // 8",
      "stack_out": [
        "updated_array%0#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1354": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "array%array_len%2#1"
      ]
    },
    "1355": {
      "op": "intc_1 // 8",
      "stack_out": [
        "updated_array%0#0",
        "array%array_len%2#1",
        "8"
      ]
    },
    "1356": {
      "op": "==",
      "defined_out": [
        "tmp%21#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%21#0"
      ]
    },
    "1357": {
      "op": "assert",
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "1358": {
      "op": "dup",
      "stack_out": [
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "1359": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ],
      "stack_out": [
        "updated_array%0#0",
        "updated_array%0#0 (copy)",
        "48"
      ]
    },
    "1361": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%22#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%22#0"
      ]
    },
    "1362": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "updated_array%0#0",
        "tmp%22#0",
        "6"
      ]
    },
    "1364": {
      "op": "==",
      "defined_out": [
        "tmp%23#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%23#0"
      ]
    },
    "1365": {
      "op": "assert",
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "1366": {
      "op": "dup",
      "stack_out": [
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ]
    },
    "1367": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "updated_array%0#0",
        "updated_array%0#0 (copy)"
      ],
      "stack_out": [
        "updated_array%0#0",
        "updated_array%0#0 (copy)",
        "56"
      ]
    },
    "1369": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%24#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%24#0"
      ]
    },
    "1370": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "tmp%24#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%24#0",
        "7"
      ]
    },
    "1372": {
      "op": "==",
      "defined_out": [
        "tmp%25#0",
        "updated_array%0#0"
      ],
      "stack_out": [
        "updated_array%0#0",
        "tmp%25#0"
      ]
    },
    "1373": {
      "op": "assert",
      "stack_out": [
        "updated_array%0#0"
      ]
    },
    "1374": {
      "op": "pushint 24 // 24",
      "stack_out": [
        "updated_array%0#0",
        "24"
      ]
    },
    "1376": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1377": {
      "op": "pushint 6 // 6",
      "stack_out": [
        "tmp%26#0",
        "6"
      ]
    },
    "1379": {
      "op": "==",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1380": {
      "op": "assert",
      "stack_out": []
    },
    "1381": {
      "retsub": true,
      "op": "retsub"
    },
    "1382": {
      "subroutine": "test_cases.array.uint64.Contract.test_allocations",
      "params": {
        "num#0": "uint64"
      },
      "block": "test_allocations",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1385": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1386": {
      "block": "test_allocations_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1388": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "num#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "num#0 (copy)"
      ]
    },
    "1390": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1391": {
      "op": "bz test_allocations_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "1394": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "_i#0",
        "alloc_test#0"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0"
      ]
    },
    "1397": {
      "op": "dup",
      "defined_out": [
        "_i#0",
        "alloc_test#0",
        "alloc_test#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0",
        "alloc_test#0 (copy)"
      ]
    },
    "1398": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "_i#0",
        "alloc_test#0",
        "alloc_test#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0",
        "alloc_test#0 (copy)",
        "0x"
      ]
    },
    "1399": {
      "op": "stores",
      "stack_out": [
        "_i#0",
        "alloc_test#0"
      ]
    },
    "1400": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "_i#0",
        "alloc_test#0"
      ],
      "stack_out": [
        "_i#0",
        "alloc_test#0",
        "1"
      ]
    },
    "1401": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "_i#0"
      ]
    },
    "1404": {
      "op": "frame_dig 0",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1406": {
      "op": "intc_0 // 1",
      "stack_out": [
        "_i#0",
        "_i#0",
        "1"
      ]
    },
    "1407": {
      "op": "+",
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1408": {
      "op": "frame_bury 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1410": {
      "op": "b test_allocations_for_header@1"
    },
    "1413": {
      "block": "test_allocations_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1414": {
      "subroutine": "test_cases.array.uint64.Contract.test_iteration",
      "params": {},
      "block": "test_iteration",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1417": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arc4_arr#0"
      ]
    },
    "1418": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1"
      ]
    },
    "1419": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1"
      ]
    },
    "1420": {
      "op": "dupn 7",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1422": {
      "op": "intc_2 // 0",
      "defined_out": [
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1423": {
      "block": "test_iteration_for_header@1",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0"
      ]
    },
    "1425": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "5"
      ]
    },
    "1426": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%0#0"
      ]
    },
    "1427": {
      "op": "bz test_iteration_after_for@4",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1430": {
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%0#0"
      ]
    },
    "1432": {
      "op": "frame_dig 10",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%0#0",
        "val#0"
      ]
    },
    "1434": {
      "op": "dup",
      "defined_out": [
        "slot_contents%0#0",
        "val#0",
        "val#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%0#0",
        "val#0 (copy)",
        "val#0 (copy)"
      ]
    },
    "1435": {
      "op": "cover 2",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "slot_contents%0#0",
        "val#0 (copy)"
      ]
    },
    "1437": {
      "op": "itob",
      "defined_out": [
        "slot_contents%0#0",
        "val#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1438": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "slot%0"
      ]
    },
    "1439": {
      "op": "frame_bury 9",
      "defined_out": [
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0"
      ]
    },
    "1441": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "1"
      ]
    },
    "1442": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0"
      ]
    },
    "1443": {
      "op": "frame_bury 10",
      "defined_out": [
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1445": {
      "op": "b test_iteration_for_header@1"
    },
    "1448": {
      "block": "test_iteration_after_for@4",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%1#0"
      ]
    },
    "1450": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%0#1"
      ]
    },
    "1451": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1452": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1"
      ]
    },
    "1453": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1",
        "array%array_len%0#1"
      ]
    },
    "1454": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1"
      ]
    },
    "1456": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1",
        "5"
      ]
    },
    "1457": {
      "op": "==",
      "defined_out": [
        "array%array_len%0#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "tmp%0#0"
      ]
    },
    "1458": {
      "error": "expected array of length 5",
      "op": "assert // expected array of length 5",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1459": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "last#0"
      ]
    },
    "1460": {
      "op": "frame_bury 7",
      "defined_out": [
        "array%array_len%0#1",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1462": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "1463": {
      "op": "frame_bury 6",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1465": {
      "block": "test_iteration_for_header@5",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "1467": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "array%array_len%0#1"
      ]
    },
    "1469": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%1#0"
      ]
    },
    "1470": {
      "op": "bz test_iteration_after_for@8",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1473": {
      "op": "frame_dig 9",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%3#0"
      ]
    },
    "1475": {
      "op": "frame_dig 6",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%3#0",
        "item_index_internal%0#0"
      ]
    },
    "1477": {
      "op": "dup",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%3#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1478": {
      "op": "cover 2",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "slot_contents%3#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1480": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "slot_contents%3#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "1481": {
      "op": "*",
      "defined_out": [
        "array%array_len%0#1",
        "bytes_offset%0#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "slot_contents%3#0",
        "bytes_offset%0#0"
      ]
    },
    "1482": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "value#0"
      ]
    },
    "1483": {
      "op": "dup",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "1484": {
      "op": "frame_dig 7",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "1486": {
      "op": ">=",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0",
        "tmp%2#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "value#0",
        "tmp%2#0"
      ]
    },
    "1487": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "value#0"
      ]
    },
    "1488": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "item_index_internal%0#0"
      ]
    },
    "1489": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1490": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "item_index_internal%0#0"
      ]
    },
    "1491": {
      "op": "frame_bury 6",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "last#0"
      ]
    },
    "1493": {
      "op": "frame_bury 7",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1495": {
      "op": "b test_iteration_for_header@5"
    },
    "1498": {
      "block": "test_iteration_after_for@8",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%4#0"
      ]
    },
    "1500": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%2#1"
      ]
    },
    "1501": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1502": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%2#1"
      ]
    },
    "1503": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1505": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1506": {
      "op": "frame_bury 5",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1508": {
      "block": "test_iteration_for_header@9",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1510": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "array%array_len%2#1"
      ]
    },
    "1512": {
      "op": "<",
      "defined_out": [
        "array%array_len%2#1",
        "continue_looping%2#0",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%2#0"
      ]
    },
    "1513": {
      "op": "bz test_iteration_after_for@12",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1516": {
      "op": "frame_dig 9",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%5#0"
      ]
    },
    "1518": {
      "op": "frame_dig 5",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%5#0",
        "idx#0"
      ]
    },
    "1520": {
      "op": "dup",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0",
        "idx#0 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%5#0",
        "idx#0 (copy)",
        "idx#0 (copy)"
      ]
    },
    "1521": {
      "op": "cover 2",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "slot_contents%5#0",
        "idx#0 (copy)"
      ]
    },
    "1523": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%array_len%2#1",
        "idx#0",
        "idx#0 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "slot_contents%5#0",
        "idx#0 (copy)",
        "8"
      ]
    },
    "1524": {
      "op": "*",
      "defined_out": [
        "array%array_len%2#1",
        "bytes_offset%1#0",
        "idx#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "slot_contents%5#0",
        "bytes_offset%1#0"
      ]
    },
    "1525": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "value#0"
      ]
    },
    "1526": {
      "op": "dig 1",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "value#0",
        "idx#0 (copy)"
      ]
    },
    "1528": {
      "op": "==",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "tmp%4#0"
      ]
    },
    "1529": {
      "error": "incorrect array value",
      "op": "assert // incorrect array value",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1530": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "1"
      ]
    },
    "1531": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1532": {
      "op": "frame_bury 5",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1534": {
      "op": "b test_iteration_for_header@9"
    },
    "1537": {
      "block": "test_iteration_after_for@12",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%6#0"
      ]
    },
    "1539": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%3#1"
      ]
    },
    "1540": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "1541": {
      "op": "/",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1542": {
      "op": "frame_bury 8",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1544": {
      "block": "test_iteration_for_header@13",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1546": {
      "op": "bz test_iteration_after_for@16",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1549": {
      "op": "frame_dig 8",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1551": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1",
        "1"
      ]
    },
    "1552": {
      "op": "-",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1553": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1",
        "reverse_index_internal%2#1"
      ]
    },
    "1554": {
      "op": "frame_bury 8",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1556": {
      "op": "frame_dig 9",
      "defined_out": [
        "reverse_index_internal%2#1",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1",
        "slot_contents%7#0"
      ]
    },
    "1558": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%7#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1559": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "reverse_index_internal%2#1",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%7#0",
        "reverse_index_internal%2#1",
        "8"
      ]
    },
    "1560": {
      "op": "*",
      "defined_out": [
        "bytes_offset%2#0",
        "reverse_index_internal%2#1",
        "slot_contents%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%7#0",
        "bytes_offset%2#0"
      ]
    },
    "1561": {
      "op": "extract_uint64",
      "defined_out": [
        "reverse_index_internal%2#1",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0"
      ]
    },
    "1562": {
      "op": "dup",
      "defined_out": [
        "reverse_index_internal%2#1",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "1563": {
      "op": "frame_dig 7",
      "defined_out": [
        "last#0",
        "reverse_index_internal%2#1",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "1565": {
      "op": "<=",
      "defined_out": [
        "last#0",
        "reverse_index_internal%2#1",
        "tmp%6#0",
        "value#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "value#0",
        "tmp%6#0"
      ]
    },
    "1566": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "last#0"
      ]
    },
    "1567": {
      "op": "frame_bury 7",
      "defined_out": [
        "last#0",
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1569": {
      "op": "b test_iteration_for_header@13"
    },
    "1572": {
      "block": "test_iteration_after_for@16",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "pushbytes 0x0000",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "arc4_arr#0"
      ]
    },
    "1576": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1578": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "arc4_arr#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot%1"
      ]
    },
    "1579": {
      "op": "frame_bury 1",
      "defined_out": [
        "arc4_arr#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1581": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1582": {
      "op": "frame_bury 4",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1584": {
      "block": "test_iteration_for_header@17",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1586": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "5"
      ]
    },
    "1587": {
      "op": "<",
      "defined_out": [
        "continue_looping%4#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%4#0"
      ]
    },
    "1588": {
      "op": "bz test_iteration_after_for@20",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1591": {
      "op": "frame_dig 4",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1593": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "i#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "i#0 (copy)"
      ]
    },
    "1594": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0"
      ]
    },
    "1595": {
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "arc4_arr#0"
      ]
    },
    "1597": {
      "op": "dig 1",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "val_as_bytes%1#0",
        "val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "arc4_arr#0",
        "val_as_bytes%1#0 (copy)"
      ]
    },
    "1599": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0"
      ]
    },
    "1600": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "1601": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "extract_to_end%0#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "extract_to_end%0#0"
      ]
    },
    "1604": {
      "op": "len",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "i#0",
        "len%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "len%0#0"
      ]
    },
    "1605": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arc4_arr#0",
        "concat%1#0",
        "i#0",
        "len%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "len%0#0",
        "8"
      ]
    },
    "1606": {
      "op": "/",
      "defined_out": [
        "arc4_arr#0",
        "concat%1#0",
        "div_floor%0#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "div_floor%0#0"
      ]
    },
    "1607": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_bytes%1#0",
        "concat%1#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "1608": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0",
        "as_u16_bytes%0#0",
        "concat%1#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "concat%1#0",
        "as_u16_bytes%0#0"
      ]
    },
    "1611": {
      "op": "replace2 0",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "arc4_arr#0"
      ]
    },
    "1613": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0"
      ]
    },
    "1615": {
      "op": "frame_dig 1",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot_contents%8#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "val_as_bytes%1#0",
        "slot_contents%8#0"
      ]
    },
    "1617": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "slot_contents%8#0",
        "val_as_bytes%1#0"
      ]
    },
    "1618": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "slot%1"
      ]
    },
    "1619": {
      "op": "frame_bury 1",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1621": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "1"
      ]
    },
    "1622": {
      "op": "+",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1623": {
      "op": "frame_bury 4",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1625": {
      "op": "b test_iteration_for_header@17"
    },
    "1628": {
      "block": "test_iteration_after_for@20",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "arc4_arr#0"
      ]
    },
    "1630": {
      "op": "frame_dig 1",
      "defined_out": [
        "arc4_arr#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "arc4_arr#0",
        "slot_contents%9#0"
      ]
    },
    "1632": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0"
      ]
    },
    "1633": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "concat%3#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "concat%3#0 (copy)"
      ]
    },
    "1634": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "extract_to_end%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "extract_to_end%1#0"
      ]
    },
    "1637": {
      "op": "len",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "len%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "len%1#0"
      ]
    },
    "1638": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arc4_arr#0",
        "concat%3#0",
        "len%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "len%1#0",
        "8"
      ]
    },
    "1639": {
      "op": "/",
      "defined_out": [
        "arc4_arr#0",
        "concat%3#0",
        "div_floor%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "div_floor%1#0"
      ]
    },
    "1640": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_bytes%2#0",
        "concat%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "as_bytes%2#0"
      ]
    },
    "1641": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0",
        "as_u16_bytes%1#0",
        "concat%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concat%3#0",
        "as_u16_bytes%1#0"
      ]
    },
    "1644": {
      "op": "replace2 0",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1646": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "1647": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arc4_arr#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)",
        "0"
      ]
    },
    "1648": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_arr#0",
        "array%array_length%0#1",
        "combined_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "array%array_length%0#1"
      ]
    },
    "1649": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arc4_arr#0",
        "array%array_length%0#1",
        "combined_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "array%array_length%0#1",
        "10"
      ]
    },
    "1651": {
      "op": "==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%7#0"
      ]
    },
    "1652": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1653": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "1654": {
      "op": "extract 2 8",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "encoded_element%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%3#0"
      ]
    },
    "1657": {
      "op": "bytec_3 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arc4_arr#0",
        "combined_arr#0",
        "encoded_element%3#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%3#0",
        "0x0000000000000000"
      ]
    },
    "1658": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%8#0"
      ]
    },
    "1659": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1660": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "1661": {
      "op": "extract 34 8",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "encoded_element%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%4#0"
      ]
    },
    "1664": {
      "op": "bytec 4 // 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004",
        "arc4_arr#0",
        "combined_arr#0",
        "encoded_element%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%4#0",
        "0x0000000000000004"
      ]
    },
    "1666": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%9#0"
      ]
    },
    "1667": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1668": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "1669": {
      "op": "extract 42 8",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "encoded_element%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%5#0"
      ]
    },
    "1672": {
      "op": "bytec_3 // 0x0000000000000000",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "encoded_element%5#0",
        "0x0000000000000000"
      ]
    },
    "1673": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%10#0"
      ]
    },
    "1674": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1675": {
      "op": "extract 74 8",
      "defined_out": [
        "arc4_arr#0",
        "encoded_element%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "encoded_element%6#0"
      ]
    },
    "1678": {
      "op": "bytec 4 // 0x0000000000000004",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "encoded_element%6#0",
        "0x0000000000000004"
      ]
    },
    "1680": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "tmp%11#0"
      ]
    },
    "1681": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1682": {
      "retsub": true,
      "op": "retsub"
    },
    "1683": {
      "subroutine": "test_cases.array.uint64.Contract.test_quicksort",
      "params": {},
      "block": "test_quicksort",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1686": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array%array_len%2#1"
      ]
    },
    "1687": {
      "op": "dupn 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0"
      ]
    },
    "1689": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ]
    },
    "1692": {
      "op": "dup",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "rnd#0"
      ]
    },
    "1693": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "rnd#0",
        "0x"
      ]
    },
    "1694": {
      "op": "stores",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ]
    },
    "1695": {
      "op": "txn Sender"
    },
    "1697": {
      "op": "intc_2 // 0",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1698": {
      "block": "test_quicksort_for_header@1",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1700": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "32"
      ]
    },
    "1702": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1703": {
      "op": "bz test_quicksort_after_for@4",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1706": {
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "1708": {
      "op": "frame_dig 5",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1710": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1711": {
      "op": "cover 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "1713": {
      "op": "getbyte",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0"
      ]
    },
    "1714": {
      "op": "frame_dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "rnd#0"
      ]
    },
    "1716": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%1#0",
        "rnd#0 (copy)",
        "rnd#0 (copy)"
      ]
    },
    "1717": {
      "op": "cover 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%1#0",
        "rnd#0 (copy)"
      ]
    },
    "1719": {
      "op": "loads",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "1720": {
      "op": "swap",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "1721": {
      "op": "itob",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "1722": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "concat%0#0"
      ]
    },
    "1723": {
      "op": "stores",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1724": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "1725": {
      "op": "+",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1726": {
      "op": "frame_bury 5",
      "defined_out": [
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1728": {
      "op": "b test_quicksort_for_header@1"
    },
    "1731": {
      "block": "test_quicksort_after_for@4",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1733": {
      "op": "dup",
      "defined_out": [
        "rnd#0",
        "rnd#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)"
      ]
    },
    "1734": {
      "op": "loads",
      "defined_out": [
        "rnd#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%1#0"
      ]
    },
    "1735": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1"
      ]
    },
    "1736": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1737": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1"
      ]
    },
    "1738": {
      "op": "dup",
      "defined_out": [
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)"
      ]
    },
    "1739": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "32"
      ]
    },
    "1741": {
      "op": "==",
      "defined_out": [
        "array%array_len%0#1",
        "rnd#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "tmp%2#0"
      ]
    },
    "1742": {
      "error": "expected array of length 32",
      "op": "assert // expected array of length 32",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1"
      ]
    },
    "1743": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "1"
      ]
    },
    "1744": {
      "op": "-",
      "defined_out": [
        "rnd#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%3#0"
      ]
    },
    "1745": {
      "op": "dig 1",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%3#0",
        "rnd#0 (copy)"
      ]
    },
    "1747": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "rnd#0",
        "rnd#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%3#0",
        "rnd#0 (copy)",
        "0"
      ]
    },
    "1748": {
      "op": "uncover 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)",
        "0",
        "tmp%3#0"
      ]
    },
    "1750": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1753": {
      "op": "intc_2 // 0",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "last#0"
      ]
    },
    "1754": {
      "op": "frame_bury 2",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1756": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "rnd#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ]
    },
    "1757": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1"
      ]
    },
    "1758": {
      "op": "intc_1 // 8",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1759": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "array%array_len%2#1"
      ]
    },
    "1760": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1762": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "1763": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1765": {
      "block": "test_quicksort_for_header@5",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "1767": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array%array_len%2#1"
      ]
    },
    "1769": {
      "op": "<",
      "defined_out": [
        "array%array_len%2#1",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "1770": {
      "op": "bz test_quicksort_after_for@8",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1773": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1775": {
      "op": "loads",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0"
      ]
    },
    "1776": {
      "op": "frame_dig 1",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%1#0"
      ]
    },
    "1778": {
      "op": "dup",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "slot_contents%4#0",
        "item_index_internal%1#0 (copy)",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "1779": {
      "op": "cover 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "slot_contents%4#0",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "1781": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "slot_contents%4#0",
        "item_index_internal%1#0 (copy)",
        "8"
      ]
    },
    "1782": {
      "op": "*",
      "defined_out": [
        "array%array_len%2#1",
        "bytes_offset%0#0",
        "item_index_internal%1#0",
        "rnd#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "slot_contents%4#0",
        "bytes_offset%0#0"
      ]
    },
    "1783": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "rnd#0",
        "value#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "value#0"
      ]
    },
    "1784": {
      "op": "dup",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "rnd#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "value#0",
        "value#0 (copy)"
      ]
    },
    "1785": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "value#0",
        "value#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "value#0",
        "value#0 (copy)",
        "last#0"
      ]
    },
    "1787": {
      "op": ">=",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%5#0",
        "value#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "value#0",
        "tmp%5#0"
      ]
    },
    "1788": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "value#0"
      ]
    },
    "1789": {
      "op": "swap",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "value#0",
        "item_index_internal%1#0"
      ]
    },
    "1790": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "value#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "value#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "1791": {
      "op": "+",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "value#0",
        "item_index_internal%1#0"
      ]
    },
    "1792": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0",
        "last#0"
      ]
    },
    "1794": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1796": {
      "op": "b test_quicksort_for_header@5"
    },
    "1799": {
      "block": "test_quicksort_after_for@8",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1800": {
      "subroutine": "test_cases.array.uint64.Contract.test_unobserved_write",
      "params": {},
      "block": "test_unobserved_write",
      "stack_in": [],
      "callsub": "test_cases.array.uint64.create_array",
      "op": "callsub create_array",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1803": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1804": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0"
      ]
    },
    "1805": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "slot_contents%0#0 (copy)"
      ]
    },
    "1806": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%bytes_len%0#1"
      ]
    },
    "1807": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1808": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%array_len%0#1"
      ]
    },
    "1809": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%array_len%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%array_len%0#1",
        "1"
      ]
    },
    "1810": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "last#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "last#0"
      ]
    },
    "1811": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "last#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "last#0",
        "0"
      ]
    },
    "1812": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "last#0",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "last#0",
        "array%val_as_bytes%0#1"
      ]
    },
    "1813": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%val_as_bytes%0#1",
        "last#0"
      ]
    },
    "1814": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%val_as_bytes%0#1",
        "last#0",
        "8"
      ]
    },
    "1815": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "slot_contents%0#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%val_as_bytes%0#1",
        "write_offset%0#0"
      ]
    },
    "1816": {
      "op": "uncover 2",
      "stack_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "write_offset%0#0",
        "slot_contents%0#0"
      ]
    },
    "1818": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "slot_contents%0#0",
        "write_offset%0#0",
        "write_offset%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "array%val_as_bytes%0#1",
        "write_offset%0#0",
        "slot_contents%0#0",
        "write_offset%0#0 (copy)"
      ]
    },
    "1820": {
      "op": "uncover 3",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "slot_contents%0#0",
        "write_offset%0#0 (copy)",
        "array%val_as_bytes%0#1"
      ]
    },
    "1822": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "updated_array%0#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "updated_array%0#0"
      ]
    },
    "1823": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "updated_array%0#0",
        "arr#0 (copy)"
      ]
    },
    "1825": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "arr#0 (copy)",
        "updated_array%0#0"
      ]
    },
    "1826": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "write_offset%0#0"
      ]
    },
    "1827": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "1829": {
      "callsub": "test_cases.array.uint64.assert_last_is_zero",
      "op": "callsub assert_last_is_zero",
      "stack_out": [
        "arr#0",
        "write_offset%0#0"
      ]
    },
    "1832": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "arr#0 (copy)"
      ]
    },
    "1834": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%2#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "slot_contents%2#0"
      ]
    },
    "1835": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "slot_contents%2#0",
        "1"
      ]
    },
    "1836": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%val_as_bytes%1#1",
        "slot_contents%2#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "slot_contents%2#0",
        "array%val_as_bytes%1#1"
      ]
    },
    "1837": {
      "op": "dig 2"
    },
    "1839": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "slot_contents%2#0",
        "write_offset%0#0 (copy)",
        "array%val_as_bytes%1#1"
      ]
    },
    "1840": {
      "op": "replace3",
      "defined_out": [
        "arr#0",
        "updated_array%1#0",
        "write_offset%0#0"
      ],
      "stack_out": [
        "arr#0",
        "write_offset%0#0",
        "updated_array%1#0"
      ]
    },
    "1841": {
      "op": "uncover 2",
      "stack_out": [
        "write_offset%0#0",
        "updated_array%1#0",
        "arr#0"
      ]
    },
    "1843": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "updated_array%1#0",
        "updated_array%1#0 (copy)",
        "write_offset%0#0"
      ],
      "stack_out": [
        "write_offset%0#0",
        "updated_array%1#0",
        "arr#0",
        "updated_array%1#0 (copy)"
      ]
    },
    "1845": {
      "op": "stores",
      "stack_out": [
        "write_offset%0#0",
        "updated_array%1#0"
      ]
    },
    "1846": {
      "op": "swap",
      "stack_out": [
        "updated_array%1#0",
        "write_offset%0#0"
      ]
    },
    "1847": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1848": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%4#0",
        "1"
      ]
    },
    "1849": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1850": {
      "op": "assert",
      "stack_out": []
    },
    "1851": {
      "retsub": true,
      "op": "retsub"
    },
    "1852": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "1854": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1855": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "1857": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "1860": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "1862": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "1863": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "1864": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "1865": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1867": {
      "retsub": true,
      "op": "retsub"
    }
  }
}