{
  "version": 3,
  "sources": [
    "../uint64.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAkJK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAlCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AA1GL;;;AAAA;AA0GK;;;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAtBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AApCA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AADL;;AAAA;;;;;;;;;AAoKA;;;;;;AAIiB;;AAAA;;AAAA;AAA+B;;AAAhC;AAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;AAKE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAd;;;AACY;;AAAQ;AAAR;AAAA;;;;;AAEU;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAR;;AAAA;AAAd;;;AAEA;;AAAA;;;AAEY;;AAAS;AAAT;AAAA;;;;;AA6BL;;AAAA;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;AAED;;AAAA;;AAAA;AAAP;;;AACQ;;AAAA;;AAAA;;AAAA;;;;AA9BO;;AAAA;;AAAA;AAAf;;;AACwC;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAY;;AAAA;;AAAA;AAAA;;AAAA;AAApC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAW;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACX;;AAAQ;AAAR;AAAA;;AAEhB;;AAAA;;;AAEgB;;AAAS;AAAT;AAAA;AAAA;;AAEG;;AAAA;AAAnB;;;AAAA;;;AAMe;;AAAA;;AAAA;AAAf;;;AACgB;;AAAQ;AAAR;AAAA;;;;;;;AAEhB;;;AACoB;;AAAS;AAAT;;;;;;;AAGJ;;;AAmBhB;;;AAEa;AAAA;;AAAA;;AAAA;AAAb;;;AACmB;;AAAA;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AADK;AAAA;AAAA;;;;;;AAUb;;;AAEe;AAAA;AAAX;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AA7OJ;;;AAEc;;;AAAA;AAGK;;AAAA;AAAX;;AAAA;AAAA;AAIA;AAAW;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEW;;AAAA;AAAX;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;;AACO;AAAU;;AAAV;AAAP;AAsNM;AAAA;;AApNK;;AAoNL;AAAd;;;AACQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;;AAAA;AAAA;AAAA;;;;;AAnNC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEA;AAAW;;AAAX;;;AACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AAEW;;AAAA;AAAX;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AA6LO;;AAAA;AAAX;AACY;;AAAA;AAAZ;AA5LI;;AAAA;AAA2B;;AAA3B;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;;AAAA;AAAU;;AAAV;AAAP;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAW;;AAAX;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;AAAW;;AAAX;AAAP;;AAIM;;;AAAA;AAAA;AAAA;AACN;AAAW;AAAX;;;AAIA;;AAEA;AAAA;AAFA;AAEA;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAc;;AAAd;AAAP;;AAIM;;;AAAA;AAAA;AAAA;AACN;AAAW;AAAX;;;AACW;AAAA;AAAX;;AAAA;AAAA;AAAA;AACW;;AAAA;AAAX;AACW;;AAAA;AAAX;AAAA;AAAA;;AAAA;AACO;AAAA;AAAA;AAAc;;AAAd;AAAP;;AAMR;;;AAEgB;AACC;AAAA;;AAAO;;AAAP;AAAjB;;;AACyB;;AAAA;AAAA;;;AAAb;AAAA;;;AADK;AAAA;AAAA;;;;;;;AAEF;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AAEa;;AAAA;AAAb;;;AAER;;;AAEgB;AACC;AAAA;;AAAO;AAAP;AAAjB;;;AACyB;;AAAA;AAAA;;;AAAb;AAAA;;;AADK;AAAA;AAAA;;;;;;;;AAII;AAAA;AAAb;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAa;AAAb;AAAP;;;AAEO;AAAA;AAAA;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEA;AACO;AAAA;AAAA;AAAA;AAAA;AAAgB;;AAAhB;AAAP;;;AACO;AAAA;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAa;;AAAb;AAAP;AACO;;;AAAA;AAAY;;AAAZ;AAAP;AACO;;;AAAA;AAAY;AAAZ;AAAP;;;AACO;AAAA;AAAP;;AAIM;;;AACK;AAAA;AAAX;;AAAA;AAAA;AACA;AAAA;;;AAAgC;;AAAA;;;AAAA;AAAhC;;AAAA;AAAA;AAAA;AAAA;AACO;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AACO;;AAAA;AAAU;AAAV;AAAP;AACO;;AAAA;AAAU;AAAV;AAAP;AACO;;;AAAA;AAAU;AAAV;AAAP;AACO;;;AAAA;AAAU;AAAV;AAAP;AACO;;;AAAA;AAAU;AAAV;AAAP;;;AACO;AAAU;AAAV;AAAP;;AAER;;;AAEkB;AAAA;;AAAA;;AAAA;AAAlB;;;AACyB;;;AAAA;AAAA;AAAA;AACK;AAAlB;;;AAFM;;AAAA;AAAA;AAAA;;;;;;AAIlB;;;;;;AAEc;;AACK;AAAA;;AAAO;AAAP;AAAnB;;;AACuB;;AAAA;AAAA;;;AAAX;AAAA;;;AADO;AAAA;AAAA;;;;;;;AAEJ;AAAA;AAAA;AAAA;AAAA;;AAAc;AAAd;AAAP;AAGO;AAAP;;;;;AACR;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;;;;;;;;AAIyB;AAAA;AAAA;AAAA;;;;;AAArC;;AAAA;;AAAA;AAAA;;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;;AAAA;AAAP;;;;;;;;;;AAGkB;AAAA;AAAA;;;AAA9B;;AAAA;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;AAGO;;;;AAAA;;AACE;;;AACJ;AAAL;;AAAK;;AAAO;AAAP;AAAjB;;;AACY;;AAAA;;;AAAgB;;AAAA;AAAA;;AAAA;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AACA;AAAA;;;AAFK;AAAA;AAAA;;;;;AAGM;;AAAA;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACR;AAAA;AAAA;AAAuB;;AAAvB;AAAP;AACO;;;AAAA;AAAA;;;AAAmB;AAAnB;AAAP;AACO;AAAA;;;AAAmB;AAAnB;AAAP;AACO;AAAA;;;AAAmB;AAAnB;AAAP;AACO;;;AAAmB;AAAnB;AAAP;;AAER;;;;;;AAGc;;;AAAA;AAAA;AAAA;AACG;;AAAA;AAAjB;;AAAA;;AAAA;;AAAA;AAAA;;;AACuB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAX;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AACG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAG8C;AAAb;AAAjC;;AAAsB;AAAtB;;AAAA;;;AAGO;AAAP;;AACa;AAAA;AAAA;AAAA;AAAA;;;;;AAArB;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACmB;AAAA;;AAAA;AAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 8 0 5 512"
    },
    "9": {
      "op": "bytecblock 0x 0x000000000000000100000000000000020000000000000003 0x0000000000000000 0x0000000000000004"
    },
    "55": {
      "op": "pushbytes 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
      "defined_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ],
      "stack_out": [
        "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ]
    },
    "89": {
      "op": "store 0",
      "stack_out": []
    },
    "91": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "93": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "96": {
      "op": "pushbytess 0xa33be873 0xe0c378e9 0x366f509d 0x58351a50 0xfa99e984 0xa20e440f 0x179ac3f9 0xf17f6f0a 0x845e1b4e 0x7621cfd1 // method \"test_array()void\", method \"test_array_extend()void\", method \"test_array_multiple_append()void\", method \"overhead()void\", method \"test_array_too_long()void\", method \"test_array_copy_and_extend()void\", method \"test_array_evaluation_order()void\", method \"test_allocations(uint64)void\", method \"test_iteration()void\", method \"test_quicksort()void\""
    },
    "148": {
      "op": "txna ApplicationArgs 0"
    },
    "151": {
      "op": "match main_test_array_route@3 main_test_array_extend_route@4 main_test_array_multiple_append_route@5 main_overhead_route@6 main_test_array_too_long_route@7 main_test_array_copy_and_extend_route@8 main_test_array_evaluation_order_route@9 main_test_allocations_route@10 main_test_iteration_route@11 main_test_quicksort_route@12"
    },
    "173": {
      "block": "main_after_if_else@19",
      "stack_in": [],
      "op": "intc_2 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "return"
    },
    "175": {
      "block": "main_test_quicksort_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "177": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "182": {
      "callsub": "test_cases.array.uint64.Contract.test_quicksort",
      "op": "callsub test_quicksort"
    },
    "185": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "186": {
      "op": "return"
    },
    "187": {
      "block": "main_test_iteration_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "189": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "190": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "191": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "193": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "194": {
      "callsub": "test_cases.array.uint64.Contract.test_iteration",
      "op": "callsub test_iteration"
    },
    "197": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "198": {
      "op": "return"
    },
    "199": {
      "block": "main_test_allocations_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "201": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "202": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "205": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "206": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "209": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "210": {
      "callsub": "test_cases.array.uint64.Contract.test_allocations",
      "op": "callsub test_allocations",
      "stack_out": []
    },
    "213": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "214": {
      "op": "return"
    },
    "215": {
      "block": "main_test_array_evaluation_order_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "217": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "218": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "219": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "221": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "222": {
      "callsub": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "op": "callsub test_array_evaluation_order"
    },
    "225": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "226": {
      "op": "return"
    },
    "227": {
      "block": "main_test_array_copy_and_extend_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "229": {
      "op": "!",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "230": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "231": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "233": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "234": {
      "callsub": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "op": "callsub test_array_copy_and_extend"
    },
    "237": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "238": {
      "op": "return"
    },
    "239": {
      "block": "main_test_array_too_long_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "241": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "242": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "243": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "245": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "246": {
      "callsub": "test_cases.array.uint64.Contract.test_array_too_long",
      "op": "callsub test_array_too_long"
    },
    "249": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "250": {
      "op": "return"
    },
    "251": {
      "block": "main_overhead_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "253": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "254": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "255": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "257": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "258": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "259": {
      "op": "return"
    },
    "260": {
      "block": "main_test_array_multiple_append_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "262": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "263": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "264": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "266": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "267": {
      "callsub": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "op": "callsub test_array_multiple_append"
    },
    "270": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "271": {
      "op": "return"
    },
    "272": {
      "block": "main_test_array_extend_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "274": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "275": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "276": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "278": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "279": {
      "callsub": "test_cases.array.uint64.Contract.test_array_extend",
      "op": "callsub test_array_extend"
    },
    "282": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "283": {
      "op": "return"
    },
    "284": {
      "block": "main_test_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "286": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "287": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "288": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "290": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "291": {
      "callsub": "test_cases.array.uint64.Contract.test_array",
      "op": "callsub test_array"
    },
    "294": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "295": {
      "op": "return"
    },
    "296": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "298": {
      "op": "bnz main_after_if_else@19",
      "stack_out": []
    },
    "301": {
      "op": "txn ApplicationID"
    },
    "303": {
      "op": "!"
    },
    "304": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "305": {
      "op": "intc_0 // 1"
    },
    "306": {
      "op": "return"
    },
    "307": {
      "subroutine": "test_cases.array.uint64.quicksort_window",
      "params": {
        "arr#0": "uint64",
        "window_left#0": "uint64",
        "window_right#0": "uint64"
      },
      "block": "quicksort_window",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "310": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array%bytes_index%1#1"
      ]
    },
    "311": {
      "op": "dupn 2",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16"
      ]
    },
    "313": {
      "op": "frame_dig -2",
      "defined_out": [
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "window_left#0 (copy)"
      ]
    },
    "315": {
      "op": "frame_dig -1",
      "defined_out": [
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "window_left#0 (copy)",
        "window_right#0 (copy)"
      ]
    },
    "317": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "tmp%0#0"
      ]
    },
    "318": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "tmp%0#0",
        "2"
      ]
    },
    "320": {
      "op": "/",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "tmp%1#0"
      ]
    },
    "321": {
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "tmp%1#0",
        "arr#0 (copy)"
      ]
    },
    "323": {
      "op": "loads",
      "defined_out": [
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "tmp%1#0",
        "slot_contents%0#0"
      ]
    },
    "324": {
      "op": "swap",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "slot_contents%0#0",
        "tmp%1#0"
      ]
    },
    "325": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "slot_contents%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "slot_contents%0#0",
        "tmp%1#0",
        "8"
      ]
    },
    "326": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "slot_contents%0#0",
        "array%bytes_index%0#1"
      ]
    },
    "327": {
      "op": "extract_uint64",
      "defined_out": [
        "pivot#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0"
      ]
    },
    "328": {
      "op": "frame_dig -1"
    },
    "330": {
      "op": "frame_dig -2",
      "defined_out": [
        "left#1",
        "pivot#0",
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "332": {
      "block": "quicksort_window_while_top@3",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "334": {
      "op": "loads",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0"
      ]
    },
    "335": {
      "op": "frame_dig 5",
      "defined_out": [
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "left#1"
      ]
    },
    "337": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "left#1",
        "8"
      ]
    },
    "338": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%1#1",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "array%bytes_index%1#1"
      ]
    },
    "339": {
      "op": "dup",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "array%bytes_index%1#1",
        "array%bytes_index%1#1"
      ]
    },
    "340": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%bytes_index%1#1",
        "left#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%1#0",
        "array%bytes_index%1#1"
      ]
    },
    "342": {
      "op": "extract_uint64",
      "defined_out": [
        "array%bytes_index%1#1",
        "array%sub_item%3#1",
        "left#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "array%sub_item%3#1"
      ]
    },
    "343": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%bytes_index%1#1",
        "array%sub_item%3#1",
        "left#1",
        "pivot#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "array%sub_item%3#1",
        "pivot#0"
      ]
    },
    "345": {
      "op": "<",
      "defined_out": [
        "array%bytes_index%1#1",
        "left#1",
        "pivot#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%3#0"
      ]
    },
    "346": {
      "op": "bz quicksort_window_while_top@6",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "349": {
      "op": "frame_dig 5"
    },
    "351": {
      "op": "intc_0 // 1"
    },
    "352": {
      "op": "+"
    },
    "353": {
      "op": "frame_bury 5"
    },
    "355": {
      "op": "b quicksort_window_while_top@3"
    },
    "358": {
      "block": "quicksort_window_while_top@6",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "arr#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "arr#0 (copy)"
      ]
    },
    "360": {
      "op": "loads",
      "defined_out": [
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0"
      ]
    },
    "361": {
      "op": "frame_dig 4",
      "defined_out": [
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "right#1"
      ]
    },
    "363": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "right#1",
        "8"
      ]
    },
    "364": {
      "op": "*",
      "defined_out": [
        "array%bytes_index%2#1",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "array%bytes_index%2#1"
      ]
    },
    "365": {
      "op": "dup",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "array%bytes_index%2#1",
        "array%bytes_index%2#1"
      ]
    },
    "366": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%bytes_index%2#1",
        "right#1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "slot_contents%2#0",
        "array%bytes_index%2#1"
      ]
    },
    "368": {
      "op": "extract_uint64",
      "defined_out": [
        "array%bytes_index%2#1",
        "array%sub_item%5#1",
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "array%sub_item%5#1"
      ]
    },
    "369": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%bytes_index%2#1",
        "array%sub_item%5#1",
        "pivot#0",
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "array%sub_item%5#1",
        "pivot#0"
      ]
    },
    "371": {
      "op": ">",
      "defined_out": [
        "array%bytes_index%2#1",
        "pivot#0",
        "right#1",
        "tmp%5#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%5#0"
      ]
    },
    "372": {
      "op": "bz quicksort_window_after_while@10",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "375": {
      "op": "frame_dig 4"
    },
    "377": {
      "op": "bz quicksort_window_after_while@22"
    },
    "380": {
      "op": "frame_dig 4"
    },
    "382": {
      "op": "intc_0 // 1"
    },
    "383": {
      "op": "-"
    },
    "384": {
      "op": "frame_bury 4"
    },
    "386": {
      "op": "b quicksort_window_while_top@6"
    },
    "389": {
      "block": "quicksort_window_after_while@22",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "window_left#0 (copy)"
      ]
    },
    "391": {
      "op": "frame_dig 4",
      "defined_out": [
        "right#1",
        "window_left#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "window_left#0 (copy)",
        "right#1"
      ]
    },
    "393": {
      "op": "<",
      "defined_out": [
        "right#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%14#0"
      ]
    },
    "394": {
      "op": "bz quicksort_window_after_if_else@24",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "397": {
      "op": "frame_dig -3"
    },
    "399": {
      "op": "frame_dig -2"
    },
    "401": {
      "op": "frame_dig 4"
    },
    "403": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window"
    },
    "406": {
      "block": "quicksort_window_after_if_else@24",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "408": {
      "op": "frame_dig -1",
      "defined_out": [
        "left#1",
        "window_right#0 (copy)"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "window_right#0 (copy)"
      ]
    },
    "410": {
      "op": "<",
      "defined_out": [
        "left#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%15#0"
      ]
    },
    "411": {
      "op": "bz quicksort_window_after_if_else@26",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "414": {
      "op": "frame_dig -3"
    },
    "416": {
      "op": "frame_dig 5"
    },
    "418": {
      "op": "frame_dig -1"
    },
    "420": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window"
    },
    "423": {
      "block": "quicksort_window_after_if_else@26",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "424": {
      "block": "quicksort_window_after_while@10",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "426": {
      "op": "frame_dig 4",
      "defined_out": [
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "right#1"
      ]
    },
    "428": {
      "op": "<",
      "defined_out": [
        "left#1",
        "right#1",
        "tmp%7#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%7#0"
      ]
    },
    "429": {
      "op": "bz quicksort_window_after_if_else@16",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "432": {
      "op": "frame_dig -3"
    },
    "434": {
      "op": "loads"
    },
    "435": {
      "op": "dup"
    },
    "436": {
      "op": "frame_dig 1"
    },
    "438": {
      "op": "dup"
    },
    "439": {
      "op": "cover 3"
    },
    "441": {
      "op": "extract_uint64"
    },
    "442": {
      "op": "dig 1"
    },
    "444": {
      "op": "frame_dig 0"
    },
    "446": {
      "op": "dup"
    },
    "447": {
      "op": "cover 4"
    },
    "449": {
      "op": "extract_uint64"
    },
    "450": {
      "op": "swap"
    },
    "451": {
      "op": "itob"
    },
    "452": {
      "op": "uncover 2"
    },
    "454": {
      "op": "uncover 3"
    },
    "456": {
      "op": "uncover 2"
    },
    "458": {
      "op": "replace3"
    },
    "459": {
      "op": "swap"
    },
    "460": {
      "op": "itob"
    },
    "461": {
      "op": "swap"
    },
    "462": {
      "op": "cover 2"
    },
    "464": {
      "op": "replace3"
    },
    "465": {
      "op": "frame_dig -3"
    },
    "467": {
      "op": "swap"
    },
    "468": {
      "op": "stores"
    },
    "469": {
      "op": "frame_dig 5"
    },
    "471": {
      "op": "intc_0 // 1"
    },
    "472": {
      "op": "+"
    },
    "473": {
      "op": "frame_bury 5"
    },
    "475": {
      "op": "frame_dig 4"
    },
    "477": {
      "op": "bz quicksort_window_after_while@22"
    },
    "480": {
      "op": "frame_dig 4"
    },
    "482": {
      "op": "intc_0 // 1"
    },
    "483": {
      "op": "-"
    },
    "484": {
      "op": "dup"
    },
    "485": {
      "op": "frame_bury 4"
    },
    "487": {
      "op": "frame_dig 5"
    },
    "489": {
      "op": ">="
    },
    "490": {
      "op": "bnz quicksort_window_while_top@3"
    },
    "493": {
      "op": "b quicksort_window_after_while@22"
    },
    "496": {
      "block": "quicksort_window_after_if_else@16",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "left#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1"
      ]
    },
    "498": {
      "op": "frame_dig 4",
      "defined_out": [
        "left#1",
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "left#1",
        "right#1"
      ]
    },
    "500": {
      "op": "==",
      "defined_out": [
        "left#1",
        "right#1",
        "tmp%12#0"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "tmp%12#0"
      ]
    },
    "501": {
      "op": "bz quicksort_window_after_while@22",
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "504": {
      "op": "frame_dig 5"
    },
    "506": {
      "op": "intc_0 // 1"
    },
    "507": {
      "op": "+"
    },
    "508": {
      "op": "frame_bury 5"
    },
    "510": {
      "op": "frame_dig 4"
    },
    "512": {
      "op": "dup"
    },
    "513": {
      "op": "frame_bury 2"
    },
    "515": {
      "op": "bz quicksort_window_after_if_else@19"
    },
    "518": {
      "op": "frame_dig 4"
    },
    "520": {
      "op": "intc_0 // 1"
    },
    "521": {
      "op": "-"
    },
    "522": {
      "op": "frame_bury 2"
    },
    "524": {
      "block": "quicksort_window_after_if_else@19",
      "stack_in": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1",
        "right#1"
      ]
    },
    "526": {
      "op": "frame_bury 4",
      "defined_out": [
        "right#1"
      ],
      "stack_out": [
        "array%bytes_index%1#1",
        "array%bytes_index%2#1",
        "right#16",
        "pivot#0",
        "right#1",
        "left#1"
      ]
    },
    "528": {
      "op": "b quicksort_window_after_while@22"
    },
    "531": {
      "subroutine": "test_cases.array.uint64.add_x",
      "params": {
        "arr#0": "uint64",
        "x#0": "uint64"
      },
      "block": "add_x",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "534": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0"
      ]
    },
    "535": {
      "block": "add_x_for_header@1",
      "stack_in": [
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "i#0"
      ]
    },
    "537": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "x#0 (copy)"
      ],
      "stack_out": [
        "i#0",
        "i#0",
        "x#0 (copy)"
      ]
    },
    "539": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "540": {
      "op": "bz add_x_after_for@4",
      "stack_out": [
        "i#0"
      ]
    },
    "543": {
      "op": "frame_dig 0"
    },
    "545": {
      "op": "dup"
    },
    "546": {
      "op": "itob"
    },
    "547": {
      "op": "frame_dig -2"
    },
    "549": {
      "op": "loads"
    },
    "550": {
      "op": "swap"
    },
    "551": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "552": {
      "op": "frame_dig -2"
    },
    "554": {
      "op": "swap"
    },
    "555": {
      "op": "stores"
    },
    "556": {
      "op": "intc_0 // 1"
    },
    "557": {
      "op": "+"
    },
    "558": {
      "op": "frame_bury 0"
    },
    "560": {
      "op": "b add_x_for_header@1"
    },
    "563": {
      "block": "add_x_after_for@4",
      "stack_in": [
        "i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "564": {
      "subroutine": "test_cases.array.uint64.append_5_and_return",
      "params": {
        "arr#0": "uint64"
      },
      "block": "append_5_and_return",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "567": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "5"
      ]
    },
    "568": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "array%sub_item%0#1"
      ]
    },
    "569": {
      "op": "frame_dig -1",
      "defined_out": [
        "arr#0 (copy)",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "array%sub_item%0#1",
        "arr#0 (copy)"
      ]
    },
    "571": {
      "op": "loads",
      "defined_out": [
        "array%sub_item%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "array%sub_item%0#1",
        "slot_contents%0#0"
      ]
    },
    "572": {
      "op": "swap",
      "stack_out": [
        "slot_contents%0#0",
        "array%sub_item%0#1"
      ]
    },
    "573": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array%array_contents%0#1"
      ],
      "stack_out": [
        "array%array_contents%0#1"
      ]
    },
    "574": {
      "op": "frame_dig -1",
      "stack_out": [
        "array%array_contents%0#1",
        "arr#0 (copy)"
      ]
    },
    "576": {
      "op": "swap",
      "stack_out": [
        "arr#0 (copy)",
        "array%array_contents%0#1"
      ]
    },
    "577": {
      "op": "stores",
      "stack_out": []
    },
    "578": {
      "op": "frame_dig -1",
      "stack_out": [
        "arr#0 (copy)"
      ]
    },
    "580": {
      "retsub": true,
      "op": "retsub"
    },
    "581": {
      "subroutine": "test_cases.array.uint64.Contract.test_array",
      "params": {},
      "block": "test_array",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "584": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "587": {
      "op": "dup",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "588": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "42"
      ]
    },
    "590": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "array%sub_item%0#1"
      ]
    },
    "591": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "array%sub_item%0#1",
        "arr#0 (copy)"
      ]
    },
    "593": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "array%sub_item%0#1"
      ]
    },
    "594": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "595": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "596": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)",
        "5"
      ]
    },
    "597": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0",
        "arr#0"
      ]
    },
    "600": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "601": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0"
      ]
    },
    "602": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)"
      ]
    },
    "603": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_len%3#1"
      ]
    },
    "604": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "605": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1"
      ]
    },
    "606": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)"
      ]
    },
    "607": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "arr#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "array%array_len%3#1 (copy)",
        "6"
      ]
    },
    "609": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "tmp%9#0"
      ]
    },
    "610": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1"
      ]
    },
    "611": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%array_len%3#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%array_len%3#1",
        "1"
      ]
    },
    "612": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "tmp%11#0"
      ]
    },
    "613": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "tmp%11#0",
        "8"
      ]
    },
    "614": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%1#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_index%1#1"
      ]
    },
    "615": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%bytes_index%1#1",
        "slot_contents%5#0 (copy)"
      ]
    },
    "617": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "slot_contents%5#0 (copy)",
        "array%bytes_index%1#1"
      ]
    },
    "618": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%sub_item%4#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%sub_item%4#1"
      ]
    },
    "619": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "array%sub_item%4#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%sub_item%4#1",
        "4"
      ]
    },
    "621": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%5#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "tmp%13#0"
      ]
    },
    "622": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0"
      ]
    },
    "623": {
      "op": "pushint 43 // 43",
      "defined_out": [
        "43",
        "arr#0",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "43"
      ]
    },
    "625": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%5#1",
        "slot_contents%5#0"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "slot_contents%5#0",
        "array%sub_item%5#1"
      ]
    },
    "626": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1"
      ],
      "stack_out": [
        "arr#0",
        "arr#0",
        "array%array_contents%1#1"
      ]
    },
    "627": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "arr#0"
      ]
    },
    "628": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_contents%1#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "arr#0",
        "array%array_contents%1#1 (copy)"
      ]
    },
    "630": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1"
      ]
    },
    "631": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_contents%1#1 (copy)"
      ]
    },
    "632": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_len%5#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_len%5#1"
      ]
    },
    "633": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "634": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1"
      ]
    },
    "635": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)"
      ]
    },
    "636": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "array%array_len%5#1 (copy)",
        "7"
      ]
    },
    "638": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "tmp%15#0"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "tmp%15#0"
      ]
    },
    "639": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1"
      ]
    },
    "640": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_len%5#1",
        "1"
      ]
    },
    "641": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%17#0"
      ]
    },
    "642": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%17#0",
        "8"
      ]
    },
    "643": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_index%2#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_index%2#1"
      ]
    },
    "644": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%bytes_index%2#1",
        "array%array_contents%1#1 (copy)"
      ]
    },
    "646": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%array_contents%1#1 (copy)",
        "array%bytes_index%2#1"
      ]
    },
    "647": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%sub_item%7#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%sub_item%7#1"
      ]
    },
    "648": {
      "op": "pushint 43 // 43",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%sub_item%7#1",
        "43"
      ]
    },
    "650": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%19#0"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%19#0"
      ]
    },
    "651": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1"
      ]
    },
    "652": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "0"
      ]
    },
    "653": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%sub_item%9#1"
      ],
      "stack_out": [
        "arr#0",
        "array%sub_item%9#1"
      ]
    },
    "654": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "arr#0",
        "array%sub_item%9#1",
        "42"
      ]
    },
    "656": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%21#0"
      ]
    },
    "657": {
      "op": "assert",
      "stack_out": [
        "arr#0"
      ]
    },
    "658": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0"
      ]
    },
    "659": {
      "block": "test_array_for_header@2",
      "stack_in": [
        "arr#0",
        "_i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "_i#0"
      ]
    },
    "661": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "_i#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "_i#0",
        "3"
      ]
    },
    "663": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "664": {
      "op": "bz test_array_after_for@4",
      "stack_out": [
        "arr#0",
        "_i#0"
      ]
    },
    "667": {
      "op": "frame_dig 0"
    },
    "669": {
      "op": "dup"
    },
    "670": {
      "op": "loads"
    },
    "671": {
      "op": "dup"
    },
    "672": {
      "op": "len"
    },
    "673": {
      "op": "intc_1 // 8"
    },
    "674": {
      "op": "-"
    },
    "675": {
      "op": "intc_2 // 0"
    },
    "676": {
      "op": "swap"
    },
    "677": {
      "op": "extract3"
    },
    "678": {
      "op": "stores"
    },
    "679": {
      "op": "frame_dig 1"
    },
    "681": {
      "op": "intc_0 // 1"
    },
    "682": {
      "op": "+"
    },
    "683": {
      "op": "frame_bury 1"
    },
    "685": {
      "op": "b test_array_for_header@2"
    },
    "688": {
      "block": "test_array_after_for@4",
      "stack_in": [
        "arr#0",
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0"
      ]
    },
    "690": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "691": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0"
      ]
    },
    "692": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%13#0",
        "slot_contents%13#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "slot_contents%13#0 (copy)"
      ]
    },
    "693": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%7#1",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%bytes_len%7#1"
      ]
    },
    "694": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arr#0",
        "array%bytes_len%7#1",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%bytes_len%7#1",
        "8"
      ]
    },
    "695": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1"
      ]
    },
    "696": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)"
      ]
    },
    "697": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "arr#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1",
        "array%array_len%7#1 (copy)",
        "4"
      ]
    },
    "699": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%7#1",
        "slot_contents%13#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1",
        "tmp%23#0"
      ]
    },
    "700": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1"
      ]
    },
    "701": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "array%array_len%7#1",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%array_len%7#1",
        "1"
      ]
    },
    "702": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%13#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "tmp%25#0"
      ]
    },
    "703": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "tmp%25#0",
        "8"
      ]
    },
    "704": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%5#1",
        "slot_contents%13#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%13#0",
        "array%bytes_index%5#1"
      ]
    },
    "705": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%sub_item%13#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%sub_item%13#1"
      ]
    },
    "706": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array%sub_item%13#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%sub_item%13#1",
        "2"
      ]
    },
    "708": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "tmp%27#0"
      ]
    },
    "709": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0"
      ]
    },
    "710": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "711": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)",
        "10"
      ]
    },
    "713": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0"
      ]
    },
    "716": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "717": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "718": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)"
      ]
    },
    "719": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%9#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_len%9#1"
      ]
    },
    "720": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_len%9#1",
        "8"
      ]
    },
    "721": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1"
      ]
    },
    "722": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)"
      ]
    },
    "723": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "arr#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "array%array_len%9#1 (copy)",
        "14"
      ]
    },
    "725": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%9#1",
        "slot_contents%16#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "tmp%29#0"
      ]
    },
    "726": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1"
      ]
    },
    "727": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%array_len%9#1",
        "1"
      ]
    },
    "728": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%31#0"
      ]
    },
    "729": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%31#0",
        "8"
      ]
    },
    "730": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%6#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_index%6#1"
      ]
    },
    "731": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%bytes_index%6#1",
        "slot_contents%16#0 (copy)"
      ]
    },
    "733": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "slot_contents%16#0 (copy)",
        "array%bytes_index%6#1"
      ]
    },
    "734": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%sub_item%15#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%sub_item%15#1"
      ]
    },
    "735": {
      "op": "pushint 9 // 9",
      "defined_out": [
        "9",
        "arr#0",
        "array%sub_item%15#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%sub_item%15#1",
        "9"
      ]
    },
    "737": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "slot_contents%16#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "tmp%33#0"
      ]
    },
    "738": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0"
      ]
    },
    "739": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "arr#0",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "44"
      ]
    },
    "741": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%16#1",
        "slot_contents%16#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "slot_contents%16#0",
        "array%sub_item%16#1"
      ]
    },
    "742": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1"
      ]
    },
    "743": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%array_contents%3#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_contents%3#1 (copy)"
      ]
    },
    "744": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_len%11#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_len%11#1"
      ]
    },
    "745": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_len%11#1",
        "8"
      ]
    },
    "746": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1"
      ]
    },
    "747": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)"
      ]
    },
    "748": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "15",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "array%array_len%11#1 (copy)",
        "15"
      ]
    },
    "750": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "tmp%35#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "tmp%35#0"
      ]
    },
    "751": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1"
      ]
    },
    "752": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_len%11#1",
        "1"
      ]
    },
    "753": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "tmp%37#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "tmp%37#0"
      ]
    },
    "754": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "tmp%37#0",
        "8"
      ]
    },
    "755": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_index%7#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_index%7#1"
      ]
    },
    "756": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%bytes_index%7#1",
        "array%array_contents%3#1 (copy)"
      ]
    },
    "758": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%array_contents%3#1 (copy)",
        "array%bytes_index%7#1"
      ]
    },
    "759": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%sub_item%18#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%sub_item%18#1"
      ]
    },
    "760": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%sub_item%18#1",
        "44"
      ]
    },
    "762": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "tmp%39#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "tmp%39#0"
      ]
    },
    "763": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1"
      ]
    },
    "764": {
      "op": "pushint 99 // 99",
      "defined_out": [
        "99",
        "arr#0",
        "array%array_contents%3#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "99"
      ]
    },
    "766": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%sub_item%19#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%3#1",
        "array%sub_item%19#1"
      ]
    },
    "767": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%4#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%4#1"
      ]
    },
    "768": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "arr#0",
        "array%array_contents%4#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%4#1",
        "100"
      ]
    },
    "770": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%array_contents%4#1",
        "array%sub_item%20#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%4#1",
        "array%sub_item%20#1"
      ]
    },
    "771": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%5#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1"
      ]
    },
    "772": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_contents%5#1",
        "array%array_contents%5#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "array%array_contents%5#1 (copy)"
      ]
    },
    "773": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arr#0",
        "array%array_contents%5#1",
        "array%array_contents%5#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "array%array_contents%5#1 (copy)",
        "0"
      ]
    },
    "774": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_contents%5#1",
        "array%sub_item%22#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "array%sub_item%22#1"
      ]
    },
    "775": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "array%sub_item%22#1",
        "2"
      ]
    },
    "777": {
      "op": "+",
      "defined_out": [
        "arr#0",
        "array%array_contents%5#1",
        "new_box_value%0#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "new_box_value%0#0"
      ]
    },
    "778": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%array_contents%5#1",
        "array%sub_item%23#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%array_contents%5#1",
        "array%sub_item%23#1"
      ]
    },
    "779": {
      "op": "replace2 0",
      "defined_out": [
        "arr#0",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "arr#0",
        "array%updated_array%0#1"
      ]
    },
    "781": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "arr#0"
      ]
    },
    "782": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array%updated_array%0#1",
        "array%updated_array%0#1 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "arr#0",
        "array%updated_array%0#1 (copy)"
      ]
    },
    "784": {
      "op": "stores",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1"
      ]
    },
    "785": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%updated_array%0#1 (copy)"
      ]
    },
    "786": {
      "op": "len",
      "defined_out": [
        "arr#0",
        "array%bytes_len%13#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%bytes_len%13#1"
      ]
    },
    "787": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%bytes_len%13#1",
        "8"
      ]
    },
    "788": {
      "op": "/",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1"
      ]
    },
    "789": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)"
      ]
    },
    "790": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "arr#0",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "17"
      ]
    },
    "792": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%updated_array%0#1",
        "tmp%43#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "tmp%43#0"
      ]
    },
    "793": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1"
      ]
    },
    "794": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%updated_array%0#1 (copy)"
      ]
    },
    "796": {
      "op": "intc_2 // 0",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%updated_array%0#1 (copy)",
        "0"
      ]
    },
    "797": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%sub_item%25#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%sub_item%25#1"
      ]
    },
    "798": {
      "op": "pushint 44 // 44",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%sub_item%25#1",
        "44"
      ]
    },
    "800": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%updated_array%0#1",
        "tmp%45#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "tmp%45#0"
      ]
    },
    "801": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1"
      ]
    },
    "802": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)"
      ]
    },
    "803": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%array_len%13#1 (copy)",
        "2"
      ]
    },
    "805": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%updated_array%0#1",
        "tmp%47#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "tmp%47#0"
      ]
    },
    "806": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "tmp%47#0",
        "8"
      ]
    },
    "807": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%bytes_index%11#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%bytes_index%11#1"
      ]
    },
    "808": {
      "op": "dig 2",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%bytes_index%11#1",
        "array%updated_array%0#1 (copy)"
      ]
    },
    "810": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%updated_array%0#1 (copy)",
        "array%bytes_index%11#1"
      ]
    },
    "811": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%sub_item%27#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%sub_item%27#1"
      ]
    },
    "812": {
      "op": "pushint 99 // 99",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "array%sub_item%27#1",
        "99"
      ]
    },
    "814": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "array%array_len%13#1",
        "array%updated_array%0#1",
        "tmp%49#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "tmp%49#0"
      ]
    },
    "815": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1"
      ]
    },
    "816": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%array_len%13#1",
        "1"
      ]
    },
    "817": {
      "op": "-",
      "defined_out": [
        "arr#0",
        "array%updated_array%0#1",
        "tmp%51#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "tmp%51#0"
      ]
    },
    "818": {
      "op": "intc_1 // 8",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "tmp%51#0",
        "8"
      ]
    },
    "819": {
      "op": "*",
      "defined_out": [
        "arr#0",
        "array%bytes_index%12#1",
        "array%updated_array%0#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%updated_array%0#1",
        "array%bytes_index%12#1"
      ]
    },
    "820": {
      "op": "extract_uint64",
      "defined_out": [
        "arr#0",
        "array%sub_item%29#1"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%sub_item%29#1"
      ]
    },
    "821": {
      "op": "pushint 100 // 100",
      "stack_out": [
        "arr#0",
        "_i#0",
        "array%sub_item%29#1",
        "100"
      ]
    },
    "823": {
      "op": "==",
      "defined_out": [
        "arr#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "arr#0",
        "_i#0",
        "tmp%53#0"
      ]
    },
    "824": {
      "op": "assert",
      "stack_out": [
        "arr#0",
        "_i#0"
      ]
    },
    "825": {
      "retsub": true,
      "op": "retsub"
    },
    "826": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_extend",
      "params": {},
      "block": "test_array_extend",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "829": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "830": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x"
      ]
    },
    "831": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "832": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "833": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "834": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "837": {
      "op": "bytec_1 // 0x000000000000000100000000000000020000000000000003",
      "defined_out": [
        "0x000000000000000100000000000000020000000000000003",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "0x000000000000000100000000000000020000000000000003"
      ]
    },
    "838": {
      "op": "pop",
      "stack_out": [
        "arr#0"
      ]
    },
    "839": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "840": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arr#0",
        "slot_contents%4#0"
      ]
    },
    "841": {
      "op": "bytec_1 // 0x000000000000000100000000000000020000000000000003",
      "stack_out": [
        "arr#0",
        "slot_contents%4#0",
        "0x000000000000000100000000000000020000000000000003"
      ]
    },
    "842": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%3#1"
      ]
    },
    "843": {
      "op": "swap",
      "stack_out": [
        "array%array_contents%3#1",
        "arr#0"
      ]
    },
    "844": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array%array_contents%3#1",
        "array%array_contents%3#1 (copy)"
      ],
      "stack_out": [
        "array%array_contents%3#1",
        "arr#0",
        "array%array_contents%3#1 (copy)"
      ]
    },
    "846": {
      "op": "stores",
      "stack_out": [
        "array%array_contents%3#1"
      ]
    },
    "847": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "848": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "849": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1"
      ]
    },
    "850": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1",
        "4"
      ]
    },
    "852": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "853": {
      "op": "assert",
      "stack_out": []
    },
    "854": {
      "retsub": true,
      "op": "retsub"
    },
    "855": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_multiple_append",
      "params": {},
      "block": "test_array_multiple_append",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "858": {
      "op": "dup",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "859": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "0x"
      ]
    },
    "860": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "861": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "862": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0",
        "arr#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "1"
      ]
    },
    "863": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x",
      "stack_out": [
        "arr#0"
      ]
    },
    "866": {
      "op": "intc_0 // 1",
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "867": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%sub_item%0#1"
      ]
    },
    "868": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "array%sub_item%0#1",
        "arr#0 (copy)"
      ]
    },
    "870": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1",
        "slot_contents%0#0"
      ],
      "stack_out": [
        "arr#0",
        "array%sub_item%0#1",
        "slot_contents%0#0"
      ]
    },
    "871": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "slot_contents%0#0",
        "array%sub_item%0#1"
      ]
    },
    "872": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%0#1"
      ]
    },
    "873": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "arr#0",
        "array%array_contents%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%0#1",
        "2"
      ]
    },
    "875": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%array_contents%0#1",
        "array%sub_item%1#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%0#1",
        "array%sub_item%1#1"
      ]
    },
    "876": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1"
      ]
    },
    "877": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "arr#0",
        "array%array_contents%1#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "3"
      ]
    },
    "879": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%sub_item%2#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%1#1",
        "array%sub_item%2#1"
      ]
    },
    "880": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%2#1"
      ],
      "stack_out": [
        "arr#0",
        "array%array_contents%2#1"
      ]
    },
    "881": {
      "op": "swap",
      "stack_out": [
        "array%array_contents%2#1",
        "arr#0"
      ]
    },
    "882": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)"
      ],
      "stack_out": [
        "array%array_contents%2#1",
        "arr#0",
        "array%array_contents%2#1 (copy)"
      ]
    },
    "884": {
      "op": "stores",
      "stack_out": [
        "array%array_contents%2#1"
      ]
    },
    "885": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1"
      ]
    },
    "886": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "887": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1"
      ]
    },
    "888": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "array%array_len%0#1",
        "4"
      ]
    },
    "890": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "891": {
      "op": "assert",
      "stack_out": []
    },
    "892": {
      "retsub": true,
      "op": "retsub"
    },
    "893": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_too_long",
      "params": {},
      "block": "test_array_too_long",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "896": {
      "op": "bytec_0 // 0x"
    },
    "897": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "898": {
      "block": "test_array_too_long_for_header@1",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "900": {
      "op": "intc 4 // 512",
      "defined_out": [
        "512",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "512"
      ]
    },
    "902": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "903": {
      "op": "bz test_array_too_long_after_for@4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "906": {
      "op": "frame_dig 1"
    },
    "908": {
      "op": "dup"
    },
    "909": {
      "op": "itob"
    },
    "910": {
      "op": "frame_dig 0"
    },
    "912": {
      "op": "swap"
    },
    "913": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "914": {
      "op": "frame_bury 0"
    },
    "916": {
      "op": "intc_0 // 1"
    },
    "917": {
      "op": "+"
    },
    "918": {
      "op": "frame_bury 1"
    },
    "920": {
      "op": "b test_array_too_long_for_header@1"
    },
    "923": {
      "block": "test_array_too_long_after_for@4",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "925": {
      "op": "dup",
      "defined_out": [
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "slot_contents%1#0 (copy)"
      ]
    },
    "926": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_len%0#1"
      ]
    },
    "927": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "928": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%array_len%0#1"
      ]
    },
    "929": {
      "op": "intc 4 // 512",
      "defined_out": [
        "512",
        "array%array_len%0#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%array_len%0#1",
        "512"
      ]
    },
    "931": {
      "op": "==",
      "defined_out": [
        "slot_contents%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "tmp%1#0"
      ]
    },
    "932": {
      "error": "array is expected length",
      "op": "assert // array is expected length",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0"
      ]
    },
    "933": {
      "op": "intc 4 // 512",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "512"
      ]
    },
    "935": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot_contents%1#0",
        "array%sub_item%1#1"
      ]
    },
    "936": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array%array_contents%1#1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%1#1"
      ]
    },
    "937": {
      "op": "pop",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "938": {
      "retsub": true,
      "op": "retsub"
    },
    "939": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_copy_and_extend",
      "params": {},
      "block": "test_array_copy_and_extend",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "942": {
      "op": "bytec_0 // 0x"
    },
    "943": {
      "op": "intc_2 // 0",
      "defined_out": [
        "i#0",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "944": {
      "block": "test_array_copy_and_extend_for_header@1",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0"
      ]
    },
    "946": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "i#0",
        "5"
      ]
    },
    "947": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "948": {
      "op": "bz test_array_copy_and_extend_after_for@4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "951": {
      "op": "frame_dig 1"
    },
    "953": {
      "op": "dup"
    },
    "954": {
      "op": "itob"
    },
    "955": {
      "op": "frame_dig 0"
    },
    "957": {
      "op": "swap"
    },
    "958": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "959": {
      "op": "frame_bury 0"
    },
    "961": {
      "op": "intc_0 // 1"
    },
    "962": {
      "op": "+"
    },
    "963": {
      "op": "frame_bury 1"
    },
    "965": {
      "op": "b test_array_copy_and_extend_for_header@1"
    },
    "968": {
      "block": "test_array_copy_and_extend_after_for@4",
      "stack_in": [
        "slot%0",
        "i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%0"
      ]
    },
    "970": {
      "op": "dup",
      "defined_out": [
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "slot%0"
      ]
    },
    "971": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "slot%0",
        "5"
      ]
    },
    "972": {
      "op": "itob",
      "defined_out": [
        "array%sub_item%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%2#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "slot_contents%2#0",
        "array%sub_item%1#1"
      ]
    },
    "973": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1"
      ]
    },
    "974": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_contents%1#1 (copy)"
      ]
    },
    "975": {
      "op": "len",
      "defined_out": [
        "array%array_contents%1#1",
        "array%bytes_len%0#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%bytes_len%0#1"
      ]
    },
    "976": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%array_contents%1#1",
        "array%bytes_len%0#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "977": {
      "op": "/",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1"
      ]
    },
    "978": {
      "op": "dup",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)"
      ]
    },
    "979": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "6"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "slot%0",
        "slot%1",
        "tmp%1#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "tmp%1#0"
      ]
    },
    "982": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1"
      ]
    },
    "983": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_len%0#1",
        "1"
      ]
    },
    "984": {
      "op": "-",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "tmp%3#0"
      ]
    },
    "985": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "tmp%3#0",
        "8"
      ]
    },
    "986": {
      "op": "*",
      "defined_out": [
        "array%array_contents%1#1",
        "array%bytes_index%0#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%bytes_index%0#1"
      ]
    },
    "987": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%bytes_index%0#1",
        "array%array_contents%1#1 (copy)"
      ]
    },
    "989": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%array_contents%1#1 (copy)",
        "array%bytes_index%0#1"
      ]
    },
    "990": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_contents%1#1",
        "array%sub_item%3#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%sub_item%3#1"
      ]
    },
    "991": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "array%sub_item%3#1",
        "5"
      ]
    },
    "992": {
      "op": "==",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "tmp%5#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "tmp%5#0"
      ]
    },
    "993": {
      "error": "expected 5",
      "op": "assert // expected 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1"
      ]
    },
    "994": {
      "op": "dig 1",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0"
      ]
    },
    "996": {
      "op": "dup",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)"
      ]
    },
    "997": {
      "op": "len",
      "defined_out": [
        "array%array_contents%1#1",
        "array%bytes_len%2#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%bytes_len%2#1"
      ]
    },
    "998": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "999": {
      "op": "/",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%2#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1"
      ]
    },
    "1000": {
      "op": "dup",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)"
      ]
    },
    "1001": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "array%array_len%2#1 (copy)",
        "5"
      ]
    },
    "1002": {
      "op": "==",
      "defined_out": [
        "array%array_contents%1#1",
        "array%array_len%2#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "tmp%7#0"
      ]
    },
    "1003": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1"
      ]
    },
    "1004": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%array_len%2#1",
        "1"
      ]
    },
    "1005": {
      "op": "-",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "tmp%9#0"
      ]
    },
    "1006": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "tmp%9#0",
        "8"
      ]
    },
    "1007": {
      "op": "*",
      "defined_out": [
        "array%array_contents%1#1",
        "array%bytes_index%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%bytes_index%1#1"
      ]
    },
    "1008": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%bytes_index%1#1",
        "slot_contents%6#0 (copy)"
      ]
    },
    "1010": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "slot_contents%6#0 (copy)",
        "array%bytes_index%1#1"
      ]
    },
    "1011": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_contents%1#1",
        "array%sub_item%5#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%sub_item%5#1"
      ]
    },
    "1012": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "array%array_contents%1#1",
        "array%sub_item%5#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "array%sub_item%5#1",
        "4"
      ]
    },
    "1014": {
      "op": "==",
      "defined_out": [
        "array%array_contents%1#1",
        "slot%0",
        "slot%1",
        "slot_contents%6#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0",
        "tmp%11#0"
      ]
    },
    "1015": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%1#1",
        "slot_contents%6#0"
      ]
    },
    "1016": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "array%array_contents%2#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1"
      ]
    },
    "1017": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)"
      ]
    },
    "1018": {
      "op": "len",
      "defined_out": [
        "array%array_contents%2#1",
        "array%bytes_len%4#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%bytes_len%4#1"
      ]
    },
    "1019": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%bytes_len%4#1",
        "8"
      ]
    },
    "1020": {
      "op": "/",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_len%4#1"
      ]
    },
    "1021": {
      "op": "dup",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)"
      ]
    },
    "1022": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "slot%0",
        "slot%1"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%4#1 (copy)",
        "11"
      ]
    },
    "1024": {
      "op": "==",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "slot%0",
        "slot%1",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "tmp%13#0"
      ]
    },
    "1025": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "slot%1",
        "array%array_contents%2#1",
        "array%array_len%4#1"
      ]
    },
    "1026": {
      "op": "uncover 2",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "slot%0",
        "slot_contents%12#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "slot_contents%12#0"
      ]
    },
    "1028": {
      "op": "len",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%bytes_len%5#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%bytes_len%5#1"
      ]
    },
    "1029": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%bytes_len%5#1",
        "8"
      ]
    },
    "1030": {
      "op": "/",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%5#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%5#1"
      ]
    },
    "1031": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "array%array_len%5#1",
        "5"
      ]
    },
    "1032": {
      "op": "==",
      "defined_out": [
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "slot%0",
        "tmp%15#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "tmp%15#0"
      ]
    },
    "1033": {
      "op": "assert",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1"
      ]
    },
    "1034": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_len%4#1",
        "1"
      ]
    },
    "1035": {
      "op": "-",
      "defined_out": [
        "array%array_contents%2#1",
        "slot%0",
        "tmp%17#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "tmp%17#0"
      ]
    },
    "1036": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "tmp%17#0",
        "8"
      ]
    },
    "1037": {
      "op": "*",
      "defined_out": [
        "array%array_contents%2#1",
        "array%bytes_index%2#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%bytes_index%2#1"
      ]
    },
    "1038": {
      "op": "dig 1",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%bytes_index%2#1",
        "array%array_contents%2#1 (copy)"
      ]
    },
    "1040": {
      "op": "swap",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)",
        "array%bytes_index%2#1"
      ]
    },
    "1041": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_contents%2#1",
        "array%sub_item%7#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%7#1"
      ]
    },
    "1042": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%7#1",
        "4"
      ]
    },
    "1044": {
      "op": "==",
      "defined_out": [
        "array%array_contents%2#1",
        "slot%0",
        "tmp%19#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "tmp%19#0"
      ]
    },
    "1045": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1"
      ]
    },
    "1046": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)"
      ]
    },
    "1047": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)",
        "32"
      ]
    },
    "1049": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_contents%2#1",
        "array%sub_item%9#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%9#1"
      ]
    },
    "1050": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%9#1",
        "4"
      ]
    },
    "1052": {
      "op": "==",
      "defined_out": [
        "array%array_contents%2#1",
        "slot%0",
        "tmp%21#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "tmp%21#0"
      ]
    },
    "1053": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1"
      ]
    },
    "1054": {
      "op": "dup",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)"
      ]
    },
    "1055": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%array_contents%2#1 (copy)",
        "40"
      ]
    },
    "1057": {
      "op": "extract_uint64",
      "defined_out": [
        "array%array_contents%2#1",
        "array%sub_item%11#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%11#1"
      ]
    },
    "1058": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "array%sub_item%11#1",
        "5"
      ]
    },
    "1059": {
      "op": "==",
      "defined_out": [
        "array%array_contents%2#1",
        "slot%0",
        "tmp%23#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "tmp%23#0"
      ]
    },
    "1060": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1"
      ]
    },
    "1061": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "array%array_contents%2#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%array_contents%2#1",
        "48"
      ]
    },
    "1063": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%13#1",
        "slot%0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "array%sub_item%13#1"
      ]
    },
    "1064": {
      "op": "!",
      "defined_out": [
        "slot%0",
        "tmp%25#0"
      ],
      "stack_out": [
        "slot%0",
        "i#0",
        "tmp%25#0"
      ]
    },
    "1065": {
      "error": "expected 4",
      "op": "assert // expected 4",
      "stack_out": [
        "slot%0",
        "i#0"
      ]
    },
    "1066": {
      "retsub": true,
      "op": "retsub"
    },
    "1067": {
      "subroutine": "test_cases.array.uint64.Contract.test_array_evaluation_order",
      "params": {},
      "block": "test_array_evaluation_order",
      "stack_in": [],
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "arr#0"
      ],
      "stack_out": [
        "arr#0"
      ]
    },
    "1070": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "arr#0"
      ],
      "stack_out": [
        "arr#0",
        "1"
      ]
    },
    "1071": {
      "op": "itob",
      "defined_out": [
        "arr#0",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%sub_item%0#1"
      ]
    },
    "1072": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "arr#0 (copy)",
        "array%sub_item%0#1"
      ],
      "stack_out": [
        "arr#0",
        "array%sub_item%0#1",
        "arr#0 (copy)"
      ]
    },
    "1074": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)",
        "array%sub_item%0#1"
      ]
    },
    "1075": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1076": {
      "op": "dup",
      "stack_out": [
        "arr#0",
        "arr#0 (copy)"
      ]
    },
    "1077": {
      "callsub": "test_cases.array.uint64.append_5_and_return",
      "op": "callsub append_5_and_return",
      "defined_out": [
        "arr#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0"
      ]
    },
    "1080": {
      "op": "dig 1",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "arr#0 (copy)"
      ]
    },
    "1082": {
      "callsub": "test_cases.array.uint64.append_5_and_return",
      "op": "callsub append_5_and_return",
      "defined_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1085": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0"
      ]
    },
    "1086": {
      "op": "dig 1",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0",
        "tmp%0#0 (copy)"
      ]
    },
    "1088": {
      "op": "loads",
      "defined_out": [
        "arr#0",
        "slot_contents%1#0",
        "slot_contents%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%1#0",
        "slot_contents%2#0"
      ]
    },
    "1089": {
      "op": "swap",
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "slot_contents%2#0",
        "slot_contents%1#0"
      ]
    },
    "1090": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "arr#0",
        "array%array_contents%1#1",
        "tmp%0#0"
      ],
      "stack_out": [
        "arr#0",
        "tmp%0#0",
        "array%array_contents%1#1"
      ]
    },
    "1091": {
      "op": "stores",
      "stack_out": [
        "arr#0"
      ]
    },
    "1092": {
      "op": "loads",
      "defined_out": [
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1093": {
      "op": "dup",
      "defined_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1094": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%bytes_len%0#1"
      ]
    },
    "1095": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1096": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%array_len%0#1"
      ]
    },
    "1097": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "array%array_len%0#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%array_len%0#1",
        "6"
      ]
    },
    "1099": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%3#0"
      ]
    },
    "1100": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1101": {
      "op": "dup",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1102": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "0"
      ]
    },
    "1103": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%2#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%2#1"
      ]
    },
    "1104": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%2#1",
        "1"
      ]
    },
    "1105": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%5#0"
      ]
    },
    "1106": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1107": {
      "op": "dup",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1108": {
      "op": "intc_1 // 8",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "8"
      ]
    },
    "1109": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%4#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%4#1"
      ]
    },
    "1110": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "array%sub_item%4#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%4#1",
        "5"
      ]
    },
    "1111": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%7#0"
      ]
    },
    "1112": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1113": {
      "op": "dup",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1114": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "16"
      ]
    },
    "1116": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%6#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%6#1"
      ]
    },
    "1117": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%6#1",
        "5"
      ]
    },
    "1118": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%9#0"
      ]
    },
    "1119": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1120": {
      "op": "dup",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1121": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "24"
      ]
    },
    "1123": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%8#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%8#1"
      ]
    },
    "1124": {
      "op": "intc_0 // 1",
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%8#1",
        "1"
      ]
    },
    "1125": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%11#0"
      ]
    },
    "1126": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1127": {
      "op": "dup",
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ]
    },
    "1128": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "slot_contents%3#0 (copy)",
        "32"
      ]
    },
    "1130": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%10#1",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%10#1"
      ]
    },
    "1131": {
      "op": "intc_3 // 5",
      "stack_out": [
        "slot_contents%3#0",
        "array%sub_item%10#1",
        "5"
      ]
    },
    "1132": {
      "op": "==",
      "defined_out": [
        "slot_contents%3#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "tmp%13#0"
      ]
    },
    "1133": {
      "op": "assert",
      "stack_out": [
        "slot_contents%3#0"
      ]
    },
    "1134": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "slot_contents%3#0",
        "40"
      ]
    },
    "1136": {
      "op": "extract_uint64",
      "defined_out": [
        "array%sub_item%12#1"
      ],
      "stack_out": [
        "array%sub_item%12#1"
      ]
    },
    "1137": {
      "op": "intc_3 // 5",
      "stack_out": [
        "array%sub_item%12#1",
        "5"
      ]
    },
    "1138": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1139": {
      "op": "assert",
      "stack_out": []
    },
    "1140": {
      "retsub": true,
      "op": "retsub"
    },
    "1141": {
      "subroutine": "test_cases.array.uint64.Contract.test_allocations",
      "params": {
        "num#0": "uint64"
      },
      "block": "test_allocations",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1144": {
      "op": "intc_2 // 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0"
      ]
    },
    "1145": {
      "block": "test_allocations_for_header@1",
      "stack_in": [
        "_i#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "_i#0"
      ],
      "stack_out": [
        "_i#0",
        "_i#0"
      ]
    },
    "1147": {
      "op": "frame_dig -1",
      "defined_out": [
        "_i#0",
        "num#0 (copy)"
      ],
      "stack_out": [
        "_i#0",
        "_i#0",
        "num#0 (copy)"
      ]
    },
    "1149": {
      "op": "<",
      "defined_out": [
        "_i#0",
        "continue_looping%0#0"
      ],
      "stack_out": [
        "_i#0",
        "continue_looping%0#0"
      ]
    },
    "1150": {
      "op": "bz test_allocations_after_for@4",
      "stack_out": [
        "_i#0"
      ]
    },
    "1153": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot"
    },
    "1156": {
      "op": "dup"
    },
    "1157": {
      "op": "bytec_0 // 0x"
    },
    "1158": {
      "op": "stores"
    },
    "1159": {
      "op": "intc_0 // 1"
    },
    "1160": {
      "callsub": "test_cases.array.uint64.add_x",
      "op": "callsub add_x"
    },
    "1163": {
      "op": "frame_dig 0"
    },
    "1165": {
      "op": "intc_0 // 1"
    },
    "1166": {
      "op": "+"
    },
    "1167": {
      "op": "frame_bury 0"
    },
    "1169": {
      "op": "b test_allocations_for_header@1"
    },
    "1172": {
      "block": "test_allocations_after_for@4",
      "stack_in": [
        "_i#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1173": {
      "subroutine": "test_cases.array.uint64.Contract.test_iteration",
      "params": {},
      "block": "test_iteration",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1176": {
      "op": "intc_2 // 0"
    },
    "1177": {
      "op": "dup"
    },
    "1178": {
      "op": "bytec_0 // \"\""
    },
    "1179": {
      "op": "dupn 7"
    },
    "1181": {
      "op": "intc_2 // 0",
      "defined_out": [
        "slot%0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1182": {
      "block": "test_iteration_for_header@1",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 10",
      "defined_out": [
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0"
      ]
    },
    "1184": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "val#0",
        "5"
      ]
    },
    "1185": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "val#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%0#0"
      ]
    },
    "1186": {
      "op": "bz test_iteration_after_for@4",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1189": {
      "op": "frame_dig 10"
    },
    "1191": {
      "op": "dup"
    },
    "1192": {
      "op": "itob"
    },
    "1193": {
      "op": "frame_dig 9"
    },
    "1195": {
      "op": "swap"
    },
    "1196": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "1197": {
      "op": "frame_bury 9"
    },
    "1199": {
      "op": "intc_0 // 1"
    },
    "1200": {
      "op": "+"
    },
    "1201": {
      "op": "frame_bury 10"
    },
    "1203": {
      "op": "b test_iteration_for_header@1"
    },
    "1206": {
      "block": "test_iteration_after_for@4",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%1#0"
      ]
    },
    "1208": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%0#1"
      ]
    },
    "1209": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1210": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1"
      ]
    },
    "1211": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1",
        "array%array_len%0#1"
      ]
    },
    "1212": {
      "op": "frame_bury 2",
      "defined_out": [
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1"
      ]
    },
    "1214": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "array%array_len%0#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%0#1",
        "5"
      ]
    },
    "1215": {
      "op": "==",
      "defined_out": [
        "array%array_len%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "tmp%1#0"
      ]
    },
    "1216": {
      "error": "expected array of length 5",
      "op": "assert // expected array of length 5",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1217": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "last#0"
      ]
    },
    "1218": {
      "op": "frame_bury 7",
      "defined_out": [
        "array%array_len%0#1",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1220": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "1221": {
      "op": "frame_bury 6",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0",
        "last#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1223": {
      "block": "test_iteration_for_header@5",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0"
      ]
    },
    "1225": {
      "op": "frame_dig 2",
      "defined_out": [
        "array%array_len%0#1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "item_index_internal%0#0",
        "array%array_len%0#1"
      ]
    },
    "1227": {
      "op": "<",
      "defined_out": [
        "array%array_len%0#1",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%1#0"
      ]
    },
    "1228": {
      "op": "bz test_iteration_after_for@8",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1231": {
      "op": "frame_dig 9"
    },
    "1233": {
      "op": "frame_dig 6"
    },
    "1235": {
      "op": "dup"
    },
    "1236": {
      "op": "cover 2"
    },
    "1238": {
      "op": "intc_1 // 8"
    },
    "1239": {
      "op": "*"
    },
    "1240": {
      "op": "extract_uint64"
    },
    "1241": {
      "op": "dup"
    },
    "1242": {
      "op": "frame_dig 7"
    },
    "1244": {
      "op": ">="
    },
    "1245": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted"
    },
    "1246": {
      "op": "swap"
    },
    "1247": {
      "op": "intc_0 // 1"
    },
    "1248": {
      "op": "+"
    },
    "1249": {
      "op": "frame_bury 6"
    },
    "1251": {
      "op": "frame_bury 7"
    },
    "1253": {
      "op": "b test_iteration_for_header@5"
    },
    "1256": {
      "block": "test_iteration_after_for@8",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%4#0"
      ]
    },
    "1258": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%2#1"
      ]
    },
    "1259": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1260": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%array_len%2#1"
      ]
    },
    "1261": {
      "op": "frame_bury 3",
      "defined_out": [
        "array%array_len%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1263": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1264": {
      "op": "frame_bury 5",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1266": {
      "block": "test_iteration_for_header@9",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0"
      ]
    },
    "1268": {
      "op": "frame_dig 3",
      "defined_out": [
        "array%array_len%2#1",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "idx#0",
        "array%array_len%2#1"
      ]
    },
    "1270": {
      "op": "<",
      "defined_out": [
        "array%array_len%2#1",
        "continue_looping%2#0",
        "idx#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%2#0"
      ]
    },
    "1271": {
      "op": "bz test_iteration_after_for@12",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1274": {
      "op": "frame_dig 9"
    },
    "1276": {
      "op": "frame_dig 5"
    },
    "1278": {
      "op": "dup"
    },
    "1279": {
      "op": "cover 2"
    },
    "1281": {
      "op": "intc_1 // 8"
    },
    "1282": {
      "op": "*"
    },
    "1283": {
      "op": "extract_uint64"
    },
    "1284": {
      "op": "dig 1"
    },
    "1286": {
      "op": "=="
    },
    "1287": {
      "error": "incorrect array value",
      "op": "assert // incorrect array value"
    },
    "1288": {
      "op": "intc_0 // 1"
    },
    "1289": {
      "op": "+"
    },
    "1290": {
      "op": "frame_bury 5"
    },
    "1292": {
      "op": "b test_iteration_for_header@9"
    },
    "1295": {
      "block": "test_iteration_after_for@12",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "slot_contents%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot_contents%6#0"
      ]
    },
    "1297": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%3#1"
      ]
    },
    "1298": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%3#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array%bytes_len%3#1",
        "8"
      ]
    },
    "1299": {
      "op": "/",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1300": {
      "op": "frame_bury 8",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1302": {
      "block": "test_iteration_for_header@13",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "reverse_index_internal%2#1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reverse_index_internal%2#1"
      ]
    },
    "1304": {
      "op": "bz test_iteration_after_for@16",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1307": {
      "op": "frame_dig 8"
    },
    "1309": {
      "op": "intc_0 // 1"
    },
    "1310": {
      "op": "-"
    },
    "1311": {
      "op": "dup"
    },
    "1312": {
      "op": "frame_bury 8"
    },
    "1314": {
      "op": "frame_dig 9"
    },
    "1316": {
      "op": "swap"
    },
    "1317": {
      "op": "intc_1 // 8"
    },
    "1318": {
      "op": "*"
    },
    "1319": {
      "op": "extract_uint64"
    },
    "1320": {
      "op": "dup"
    },
    "1321": {
      "op": "frame_dig 7"
    },
    "1323": {
      "op": "<="
    },
    "1324": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted"
    },
    "1325": {
      "op": "frame_bury 7"
    },
    "1327": {
      "op": "b test_iteration_for_header@13"
    },
    "1330": {
      "block": "test_iteration_after_for@16",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "pushbytes 0x0000",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "arc4_arr#0"
      ]
    },
    "1334": {
      "op": "frame_bury 0",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1336": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "arc4_arr#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "slot%1"
      ]
    },
    "1337": {
      "op": "frame_bury 1",
      "defined_out": [
        "arc4_arr#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1339": {
      "op": "intc_2 // 0",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1340": {
      "op": "frame_bury 4",
      "defined_out": [
        "arc4_arr#0",
        "i#0",
        "slot%1"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1342": {
      "block": "test_iteration_for_header@17",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0"
      ]
    },
    "1344": {
      "op": "intc_3 // 5",
      "defined_out": [
        "5",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "i#0",
        "5"
      ]
    },
    "1345": {
      "op": "<",
      "defined_out": [
        "continue_looping%4#0",
        "i#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "continue_looping%4#0"
      ]
    },
    "1346": {
      "op": "bz test_iteration_after_for@20",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1349": {
      "op": "frame_dig 0"
    },
    "1351": {
      "op": "extract 2 0"
    },
    "1354": {
      "op": "frame_dig 4"
    },
    "1356": {
      "op": "dup"
    },
    "1357": {
      "op": "cover 2"
    },
    "1359": {
      "op": "itob"
    },
    "1360": {
      "op": "swap"
    },
    "1361": {
      "op": "dig 1"
    },
    "1363": {
      "op": "concat"
    },
    "1364": {
      "op": "dup"
    },
    "1365": {
      "op": "len"
    },
    "1366": {
      "op": "intc_1 // 8"
    },
    "1367": {
      "op": "/"
    },
    "1368": {
      "op": "itob"
    },
    "1369": {
      "op": "extract 6 2"
    },
    "1372": {
      "op": "swap"
    },
    "1373": {
      "op": "concat"
    },
    "1374": {
      "op": "frame_bury 0"
    },
    "1376": {
      "op": "frame_dig 1"
    },
    "1378": {
      "op": "swap"
    },
    "1379": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "1380": {
      "op": "frame_bury 1"
    },
    "1382": {
      "op": "intc_0 // 1"
    },
    "1383": {
      "op": "+"
    },
    "1384": {
      "op": "frame_bury 4"
    },
    "1386": {
      "op": "b test_iteration_for_header@17"
    },
    "1389": {
      "block": "test_iteration_after_for@20",
      "stack_in": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "arc4_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "arc4_arr#0"
      ]
    },
    "1391": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "expr_value_trimmed%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "1394": {
      "op": "frame_dig 1",
      "defined_out": [
        "arc4_arr#0",
        "expr_value_trimmed%1#0",
        "slot_contents%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "expr_value_trimmed%1#0",
        "slot_contents%9#0"
      ]
    },
    "1396": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0"
      ]
    },
    "1397": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "1398": {
      "op": "len",
      "defined_out": [
        "arc4_arr#0",
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "1399": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "arc4_arr#0",
        "byte_len%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "byte_len%1#0",
        "8"
      ]
    },
    "1400": {
      "op": "/",
      "defined_out": [
        "arc4_arr#0",
        "concatenated%1#0",
        "len_%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "1401": {
      "op": "itob",
      "defined_out": [
        "arc4_arr#0",
        "as_bytes%1#0",
        "concatenated%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "1402": {
      "op": "extract 6 2",
      "defined_out": [
        "arc4_arr#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "1405": {
      "op": "swap",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "1406": {
      "op": "concat",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1407": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ]
    },
    "1408": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "arc4_arr#0",
        "combined_arr#0",
        "combined_arr#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "combined_arr#0 (copy)",
        "0"
      ]
    },
    "1409": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%5#0"
      ]
    },
    "1410": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%5#0",
        "10"
      ]
    },
    "1412": {
      "op": "==",
      "defined_out": [
        "arc4_arr#0",
        "combined_arr#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0",
        "tmp%6#0"
      ]
    },
    "1413": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "combined_arr#0"
      ]
    },
    "1414": {
      "op": "extract 2 0",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1417": {
      "op": "dup",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1418": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1421": {
      "op": "bytec_2 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "1422": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "tmp%7#0"
      ]
    },
    "1423": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1424": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1425": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "1428": {
      "op": "bytec_3 // 0x0000000000000004",
      "defined_out": [
        "0x0000000000000004",
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%2#0",
        "0x0000000000000004"
      ]
    },
    "1429": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "tmp%8#0"
      ]
    },
    "1430": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1431": {
      "op": "dup",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1432": {
      "error": "Index access is out of bounds",
      "op": "extract 40 8 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "1435": {
      "op": "bytec_2 // 0x0000000000000000",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "reinterpret_biguint%4#0",
        "0x0000000000000000"
      ]
    },
    "1436": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "array_head_and_tail%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0",
        "tmp%9#0"
      ]
    },
    "1437": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1438": {
      "error": "Index access is out of bounds",
      "op": "extract 72 8 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_arr#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reinterpret_biguint%6#0"
      ]
    },
    "1441": {
      "op": "bytec_3 // 0x0000000000000004",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "reinterpret_biguint%6#0",
        "0x0000000000000004"
      ]
    },
    "1442": {
      "op": "b==",
      "defined_out": [
        "arc4_arr#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0",
        "tmp%10#0"
      ]
    },
    "1443": {
      "op": "assert",
      "stack_out": [
        "arc4_arr#0",
        "slot%1",
        "array%array_len%0#1",
        "array%array_len%2#1",
        "i#0",
        "idx#0",
        "item_index_internal%0#0",
        "last#0",
        "reverse_index_internal%2#1",
        "slot%0",
        "val#0"
      ]
    },
    "1444": {
      "retsub": true,
      "op": "retsub"
    },
    "1445": {
      "subroutine": "test_cases.array.uint64.Contract.test_quicksort",
      "params": {},
      "block": "test_quicksort",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1448": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "array%array_len%2#1"
      ]
    },
    "1449": {
      "op": "dupn 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0"
      ]
    },
    "1451": {
      "callsub": "_puya_lib.mem.new_slot",
      "op": "callsub _puya_lib.mem.new_slot",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ]
    },
    "1454": {
      "op": "dup",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "rnd#0"
      ]
    },
    "1455": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "rnd#0",
        "0x"
      ]
    },
    "1456": {
      "op": "stores",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ]
    },
    "1457": {
      "op": "txn Sender"
    },
    "1459": {
      "op": "dup",
      "defined_out": [
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "tmp%0#0"
      ]
    },
    "1460": {
      "op": "len",
      "defined_out": [
        "bytes_length%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0"
      ]
    },
    "1461": {
      "op": "intc_2 // 0",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1462": {
      "block": "test_quicksort_for_header@1",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1464": {
      "op": "frame_dig 5",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "bytes_length%0#0"
      ]
    },
    "1466": {
      "op": "<",
      "defined_out": [
        "bytes_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "1467": {
      "op": "bz test_quicksort_after_for@4",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1470": {
      "op": "frame_dig 4"
    },
    "1472": {
      "op": "frame_dig 6"
    },
    "1474": {
      "op": "dup"
    },
    "1475": {
      "op": "cover 2"
    },
    "1477": {
      "op": "getbyte"
    },
    "1478": {
      "op": "itob"
    },
    "1479": {
      "op": "frame_dig 3"
    },
    "1481": {
      "op": "dup"
    },
    "1482": {
      "op": "cover 2"
    },
    "1484": {
      "op": "loads"
    },
    "1485": {
      "op": "swap"
    },
    "1486": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded"
    },
    "1487": {
      "op": "stores"
    },
    "1488": {
      "op": "intc_0 // 1"
    },
    "1489": {
      "op": "+"
    },
    "1490": {
      "op": "frame_bury 6"
    },
    "1492": {
      "op": "b test_quicksort_for_header@1"
    },
    "1495": {
      "block": "test_quicksort_after_for@4",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1497": {
      "op": "dup",
      "defined_out": [
        "rnd#0",
        "rnd#0 (copy)"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)"
      ]
    },
    "1498": {
      "op": "loads",
      "defined_out": [
        "rnd#0",
        "slot_contents%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "slot_contents%1#0"
      ]
    },
    "1499": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1"
      ]
    },
    "1500": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "array%bytes_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%bytes_len%0#1",
        "8"
      ]
    },
    "1501": {
      "op": "/",
      "defined_out": [
        "array%array_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1"
      ]
    },
    "1502": {
      "op": "dup",
      "defined_out": [
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)"
      ]
    },
    "1503": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "array%array_len%0#1 (copy)",
        "32"
      ]
    },
    "1505": {
      "op": "==",
      "defined_out": [
        "array%array_len%0#1",
        "rnd#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "tmp%3#0"
      ]
    },
    "1506": {
      "error": "expected array of length 32",
      "op": "assert // expected array of length 32",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1"
      ]
    },
    "1507": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "array%array_len%0#1",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "array%array_len%0#1",
        "1"
      ]
    },
    "1508": {
      "op": "-",
      "defined_out": [
        "rnd#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0"
      ]
    },
    "1509": {
      "op": "dig 1",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0",
        "rnd#0 (copy)"
      ]
    },
    "1511": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "rnd#0",
        "rnd#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "tmp%5#0",
        "rnd#0 (copy)",
        "0"
      ]
    },
    "1512": {
      "op": "uncover 2",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "rnd#0 (copy)",
        "0",
        "tmp%5#0"
      ]
    },
    "1514": {
      "callsub": "test_cases.array.uint64.quicksort_window",
      "op": "callsub quicksort_window",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1517": {
      "op": "intc_2 // 0",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0",
        "last#0"
      ]
    },
    "1518": {
      "op": "frame_bury 2",
      "defined_out": [
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "rnd#0"
      ]
    },
    "1520": {
      "op": "loads",
      "defined_out": [
        "last#0",
        "rnd#0",
        "slot_contents%3#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "slot_contents%3#0"
      ]
    },
    "1521": {
      "op": "len",
      "defined_out": [
        "array%bytes_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1"
      ]
    },
    "1522": {
      "op": "intc_1 // 8",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array%bytes_len%2#1",
        "8"
      ]
    },
    "1523": {
      "op": "/",
      "defined_out": [
        "array%array_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "array%array_len%2#1"
      ]
    },
    "1524": {
      "op": "frame_bury 0",
      "defined_out": [
        "array%array_len%2#1",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1526": {
      "op": "intc_2 // 0",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "1527": {
      "op": "frame_bury 1",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1529": {
      "block": "test_quicksort_for_header@5",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0"
      ]
    },
    "1531": {
      "op": "frame_dig 0",
      "defined_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "array%array_len%2#1"
      ]
    },
    "1533": {
      "op": "<",
      "defined_out": [
        "array%array_len%2#1",
        "continue_looping%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "continue_looping%1#0"
      ]
    },
    "1534": {
      "op": "bz test_quicksort_after_for@8",
      "stack_out": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ]
    },
    "1537": {
      "op": "frame_dig 3"
    },
    "1539": {
      "op": "loads"
    },
    "1540": {
      "op": "frame_dig 1"
    },
    "1542": {
      "op": "dup"
    },
    "1543": {
      "op": "cover 2"
    },
    "1545": {
      "op": "intc_1 // 8"
    },
    "1546": {
      "op": "*"
    },
    "1547": {
      "op": "extract_uint64"
    },
    "1548": {
      "op": "dup"
    },
    "1549": {
      "op": "frame_dig 2"
    },
    "1551": {
      "op": ">="
    },
    "1552": {
      "error": "array is not sorted",
      "op": "assert // array is not sorted"
    },
    "1553": {
      "op": "swap"
    },
    "1554": {
      "op": "intc_0 // 1"
    },
    "1555": {
      "op": "+"
    },
    "1556": {
      "op": "frame_bury 1"
    },
    "1558": {
      "op": "frame_bury 2"
    },
    "1560": {
      "op": "b test_quicksort_for_header@5"
    },
    "1563": {
      "block": "test_quicksort_after_for@8",
      "stack_in": [
        "array%array_len%2#1",
        "item_index_internal%1#0",
        "last#0",
        "rnd#0",
        "tmp%0#0",
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "1564": {
      "subroutine": "_puya_lib.mem.new_slot",
      "params": {},
      "block": "_puya_lib.mem.new_slot",
      "stack_in": [],
      "op": "load 0",
      "defined_out": [
        "slot_allocations"
      ],
      "stack_out": [
        "slot_allocations"
      ]
    },
    "1566": {
      "op": "bitlen",
      "defined_out": [
        "free_slot#0"
      ],
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1567": {
      "op": "load 0",
      "stack_out": [
        "free_slot#0",
        "slot_allocations"
      ]
    },
    "1569": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "256",
        "free_slot#0",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256"
      ]
    },
    "1572": {
      "op": "dig 2",
      "defined_out": [
        "256",
        "free_slot#0",
        "free_slot#0 (copy)",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "256",
        "free_slot#0 (copy)"
      ]
    },
    "1574": {
      "op": "-",
      "defined_out": [
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx"
      ]
    },
    "1575": {
      "op": "intc_2 // 0",
      "defined_out": [
        "0",
        "free_slot#0",
        "free_slot_idx",
        "slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "slot_allocations",
        "free_slot_idx",
        "0"
      ]
    },
    "1576": {
      "error": "no available slots",
      "op": "setbit // on error: no available slots",
      "defined_out": [
        "free_slot#0",
        "new_slot_allocations"
      ],
      "stack_out": [
        "free_slot#0",
        "new_slot_allocations"
      ]
    },
    "1577": {
      "op": "store 0",
      "stack_out": [
        "free_slot#0"
      ]
    },
    "1579": {
      "retsub": true,
      "op": "retsub"
    }
  }
}