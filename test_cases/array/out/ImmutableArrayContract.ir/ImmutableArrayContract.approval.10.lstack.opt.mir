// Op                                                                                             Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txn NumAppArgs                                                                            tmp%0#1
        bz main_bare_routing@28 ; b main_abi_routing@2

    main_abi_routing@2:
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                    tmp%2#0
        method test_uint64_array()void                                                            tmp%2#0,Method(test_uint64_array()void)
        method test_biguint_array()void                                                           tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void)
        method test_bool_array(uint64)void                                                        tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void)
        method test_fixed_size_tuple_array()void                                                  tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void)
        method test_fixed_size_named_tuple_array()void                                            tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void)
        method test_dynamic_sized_tuple_array()void                                               tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void)
        method test_dynamic_sized_named_tuple_array()void                                         tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void)
        method test_implicit_conversion_log(uint64[])void                                         tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void)
        method test_implicit_conversion_emit(uint64[])void                                        tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void)
        method test_nested_array(uint64,uint64[][])uint64[]                                       tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[])
        method test_bit_packed_tuples()void                                                       tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void)
        method sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64) tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64))
        method test_uint64_return(uint64)uint64[]                                                 tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[])
        method test_bool_return(uint64)bool[]                                                     tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[])
        method test_tuple_return(uint64)(uint64,bool,bool)[]                                      tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[])
        method test_dynamic_tuple_return(uint64)(uint64,string)[]                                 tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[])
        method test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[] tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[])
        method test_concat_with_arc4_tuple((uint64,uint64))uint64[]                               tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[])
        method test_concat_with_native_tuple((uint64,uint64))uint64[]                             tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[])
        method test_dynamic_concat_with_arc4_tuple((string,string))string[]                       tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[]),Method(test_dynamic_concat_with_arc4_tuple((string,string))string[])
        method test_dynamic_concat_with_native_tuple((string,string))string[]                     tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[]),Method(test_dynamic_concat_with_arc4_tuple((string,string))string[]),Method(test_dynamic_concat_with_native_tuple((string,string))string[])
        method test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[] tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[]),Method(test_dynamic_concat_with_arc4_tuple((string,string))string[]),Method(test_dynamic_concat_with_native_tuple((string,string))string[]),Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[])
        method test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]                            tmp%2#0,Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[]),Method(test_dynamic_concat_with_arc4_tuple((string,string))string[]),Method(test_dynamic_concat_with_native_tuple((string,string))string[]),Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]),Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[])
        l-load tmp%2#0 23                                                                         Method(test_uint64_array()void),Method(test_biguint_array()void),Method(test_bool_array(uint64)void),Method(test_fixed_size_tuple_array()void),Method(test_fixed_size_named_tuple_array()void),Method(test_dynamic_sized_tuple_array()void),Method(test_dynamic_sized_named_tuple_array()void),Method(test_implicit_conversion_log(uint64[])void),Method(test_implicit_conversion_emit(uint64[])void),Method(test_nested_array(uint64,uint64[][])uint64[]),Method(test_bit_packed_tuples()void),Method(sum_uints_and_lengths_and_trues(uint64[],bool[],(uint64,bool,bool)[],(uint64,string)[])(uint64,uint64,uint64,uint64)),Method(test_uint64_return(uint64)uint64[]),Method(test_bool_return(uint64)bool[]),Method(test_tuple_return(uint64)(uint64,bool,bool)[]),Method(test_dynamic_tuple_return(uint64)(uint64,string)[]),Method(test_convert_to_array_and_back((uint64,bool,bool)[],uint64)(uint64,bool,bool)[]),Method(test_concat_with_arc4_tuple((uint64,uint64))uint64[]),Method(test_concat_with_native_tuple((uint64,uint64))uint64[]),Method(test_dynamic_concat_with_arc4_tuple((string,string))string[]),Method(test_dynamic_concat_with_native_tuple((string,string))string[]),Method(test_concat_immutable_dynamic((uint64,string)[],(uint64,string)[])(uint64,string)[]),Method(test_immutable_arc4((uint64,uint64)[])(uint64,uint64)[]),tmp%2#0
        match main_test_uint64_array_route@3 main_test_biguint_array_route@4 main_test_bool_array_route@5 main_test_fixed_size_tuple_array_route@6 main_test_fixed_size_named_tuple_array_route@7 main_test_dynamic_sized_tuple_array_route@8 main_test_dynamic_sized_named_tuple_array_route@9 main_test_implicit_conversion_log_route@10 main_test_implicit_conversion_emit_route@11 main_test_nested_array_route@12 main_test_bit_packed_tuples_route@13 main_sum_uints_and_lengths_and_trues_route@14 main_test_uint64_return_route@15 main_test_bool_return_route@16 main_test_tuple_return_route@17 main_test_dynamic_tuple_return_route@18 main_test_convert_to_array_and_back_route@19 main_test_concat_with_arc4_tuple_route@20 main_test_concat_with_native_tuple_route@21 main_test_dynamic_concat_with_arc4_tuple_route@22 main_test_dynamic_concat_with_native_tuple_route@23 main_test_concat_immutable_dynamic_route@24 main_test_immutable_arc4_route@25 ; b main_after_if_else@32 

    main_test_uint64_array_route@3:
        // array/immutable.py:82
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%3#0
        !                                                                                         tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%5#0
        assert // can only call when not creating
        callsub test_uint64_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_biguint_array_route@4:
        // array/immutable.py:118
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%7#0
        !                                                                                         tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%9#0
        assert // can only call when not creating
        callsub test_biguint_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_bool_array_route@5:
        // array/immutable.py:143
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%11#0
        !                                                                                         tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%13#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%0#0
        btoi                                                                                      tmp%15#0
        // array/immutable.py:143
        // @arc4.abimethod()
        callsub test_bool_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_fixed_size_tuple_array_route@6:
        // array/immutable.py:167
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%16#0
        !                                                                                         tmp%17#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%18#0
        assert // can only call when not creating
        callsub test_fixed_size_tuple_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_fixed_size_named_tuple_array_route@7:
        // array/immutable.py:185
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%20#0
        !                                                                                         tmp%21#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%22#0
        assert // can only call when not creating
        callsub test_fixed_size_named_tuple_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_dynamic_sized_tuple_array_route@8:
        // array/immutable.py:200
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%24#0
        !                                                                                         tmp%25#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%26#0
        assert // can only call when not creating
        callsub test_dynamic_sized_tuple_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_dynamic_sized_named_tuple_array_route@9:
        // array/immutable.py:219
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%28#0
        !                                                                                         tmp%29#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%30#0
        assert // can only call when not creating
        callsub test_dynamic_sized_named_tuple_array
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_implicit_conversion_log_route@10:
        // array/immutable.py:238
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%32#0
        !                                                                                         tmp%33#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%34#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+uint64[])%0#0
        // array/immutable.py:238
        // @arc4.abimethod()
        callsub test_implicit_conversion_log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_implicit_conversion_emit_route@11:
        // array/immutable.py:242
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%36#0
        !                                                                                         tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%38#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+uint64[])%1#0
        // array/immutable.py:242
        // @arc4.abimethod()
        callsub test_implicit_conversion_emit
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_nested_array_route@12:
        // array/immutable.py:246
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%40#0
        !                                                                                         tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%42#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%1#0
        btoi                                                                                      tmp%44#0
        txna ApplicationArgs 2                                                                    tmp%44#0,reinterpret_Encoded(len+len+uint64[][])%0#0
        // array/immutable.py:246
        // @arc4.abimethod()
        l-load tmp%44#0 1                                                                         reinterpret_Encoded(len+len+uint64[][])%0#0,tmp%44#0
        l-load reinterpret_Encoded(len+len+uint64[][])%0#0 1                                      tmp%44#0,reinterpret_Encoded(len+len+uint64[][])%0#0
        callsub test_nested_array                                                                 tmp%45#0
        byte 0x151f7c75                                                                           tmp%45#0,0x151f7c75
        l-load tmp%45#0 1                                                                         0x151f7c75,tmp%45#0
        concat                                                                                    tmp%46#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_bit_packed_tuples_route@13:
        // array/immutable.py:264
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%47#0
        !                                                                                         tmp%48#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%49#0
        assert // can only call when not creating
        callsub test_bit_packed_tuples
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_sum_uints_and_lengths_and_trues_route@14:
        // array/immutable.py:329
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%51#0
        !                                                                                         tmp%52#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%53#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+uint64[])%2#0
        txna ApplicationArgs 2                                                                    reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0
        txna ApplicationArgs 3                                                                    reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0
        txna ApplicationArgs 4                                                                    reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0
        // array/immutable.py:329
        // @arc4.abimethod()
        l-load reinterpret_Encoded(len+uint64[])%2#0 3                                            reinterpret_Encoded(len+bool1[])%0#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0,reinterpret_Encoded(len+uint64[])%2#0
        l-load reinterpret_Encoded(len+bool1[])%0#0 3                                             reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0,reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0
        l-load reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0 3                              reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0,reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0
        l-load reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0 3                               reinterpret_Encoded(len+uint64[])%2#0,reinterpret_Encoded(len+bool1[])%0#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%0#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%0#0
        callsub sum_uints_and_lengths_and_trues                                                   to_encode%0#0,to_encode%1#0,to_encode%2#0,to_encode%3#0
        l-load to_encode%0#0 3                                                                    to_encode%1#0,to_encode%2#0,to_encode%3#0,to_encode%0#0
        itob                                                                                      to_encode%1#0,to_encode%2#0,to_encode%3#0,val_as_bytes%0#0
        l-load to_encode%1#0 3                                                                    to_encode%2#0,to_encode%3#0,val_as_bytes%0#0,to_encode%1#0
        itob                                                                                      to_encode%2#0,to_encode%3#0,val_as_bytes%0#0,val_as_bytes%1#0
        l-load val_as_bytes%0#0 1                                                                 to_encode%2#0,to_encode%3#0,val_as_bytes%1#0,val_as_bytes%0#0
        l-load val_as_bytes%1#0 1                                                                 to_encode%2#0,to_encode%3#0,val_as_bytes%0#0,val_as_bytes%1#0
        concat                                                                                    to_encode%2#0,to_encode%3#0,encoded%1#0
        l-load to_encode%2#0 2                                                                    to_encode%3#0,encoded%1#0,to_encode%2#0
        itob                                                                                      to_encode%3#0,encoded%1#0,val_as_bytes%2#0
        l-load encoded%1#0 1                                                                      to_encode%3#0,val_as_bytes%2#0,encoded%1#0
        l-load val_as_bytes%2#0 1                                                                 to_encode%3#0,encoded%1#0,val_as_bytes%2#0
        concat                                                                                    to_encode%3#0,encoded%2#0
        l-load to_encode%3#0 1                                                                    encoded%2#0,to_encode%3#0
        itob                                                                                      encoded%2#0,val_as_bytes%3#0
        l-load encoded%2#0 1                                                                      val_as_bytes%3#0,encoded%2#0
        l-load val_as_bytes%3#0 1                                                                 encoded%2#0,val_as_bytes%3#0
        concat                                                                                    encoded%3#0
        byte 0x151f7c75                                                                           encoded%3#0,0x151f7c75
        l-load encoded%3#0 1                                                                      0x151f7c75,encoded%3#0
        concat                                                                                    tmp%55#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_uint64_return_route@15:
        // array/immutable.py:356
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%56#0
        !                                                                                         tmp%57#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%58#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%2#0
        btoi                                                                                      tmp%60#0
        // array/immutable.py:356
        // @arc4.abimethod()
        callsub test_uint64_return                                                                tmp%61#0
        byte 0x151f7c75                                                                           tmp%61#0,0x151f7c75
        l-load tmp%61#0 1                                                                         0x151f7c75,tmp%61#0
        concat                                                                                    tmp%62#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_bool_return_route@16:
        // array/immutable.py:363
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%63#0
        !                                                                                         tmp%64#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%65#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%3#0
        btoi                                                                                      tmp%67#0
        // array/immutable.py:363
        // @arc4.abimethod()
        callsub test_bool_return                                                                  tmp%68#0
        byte 0x151f7c75                                                                           tmp%68#0,0x151f7c75
        l-load tmp%68#0 1                                                                         0x151f7c75,tmp%68#0
        concat                                                                                    tmp%69#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_tuple_return_route@17:
        // array/immutable.py:370
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%70#0
        !                                                                                         tmp%71#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%72#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%4#0
        btoi                                                                                      tmp%74#0
        // array/immutable.py:370
        // @arc4.abimethod()
        callsub test_tuple_return                                                                 tmp%75#0
        byte 0x151f7c75                                                                           tmp%75#0,0x151f7c75
        l-load tmp%75#0 1                                                                         0x151f7c75,tmp%75#0
        concat                                                                                    tmp%76#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_dynamic_tuple_return_route@18:
        // array/immutable.py:377
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%77#0
        !                                                                                         tmp%78#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%79#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(uint64)%5#0
        btoi                                                                                      tmp%81#0
        // array/immutable.py:377
        // @arc4.abimethod()
        callsub test_dynamic_tuple_return                                                         tmp%82#0
        byte 0x151f7c75                                                                           tmp%82#0,0x151f7c75
        l-load tmp%82#0 1                                                                         0x151f7c75,tmp%82#0
        concat                                                                                    tmp%83#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_convert_to_array_and_back_route@19:
        // array/immutable.py:384
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%84#0
        !                                                                                         tmp%85#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%86#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0
        txna ApplicationArgs 2                                                                    reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0,reinterpret_Encoded(uint64)%6#0
        btoi                                                                                      reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0,tmp%88#0
        // array/immutable.py:384
        // @arc4.abimethod()
        l-load reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0 1                              tmp%88#0,reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0
        l-load tmp%88#0 1                                                                         reinterpret_Encoded(len+(uint64,bool1,bool1)[])%1#0,tmp%88#0
        callsub test_convert_to_array_and_back                                                    tmp%89#0
        byte 0x151f7c75                                                                           tmp%89#0,0x151f7c75
        l-load tmp%89#0 1                                                                         0x151f7c75,tmp%89#0
        concat                                                                                    tmp%90#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_concat_with_arc4_tuple_route@20:
        // array/immutable.py:394
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%91#0
        !                                                                                         tmp%92#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%93#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded((uint64,uint64))%0#0
        // array/immutable.py:394
        // @arc4.abimethod()
        callsub test_concat_with_arc4_tuple                                                       tmp%95#0
        byte 0x151f7c75                                                                           tmp%95#0,0x151f7c75
        l-load tmp%95#0 1                                                                         0x151f7c75,tmp%95#0
        concat                                                                                    tmp%96#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_concat_with_native_tuple_route@21:
        // array/immutable.py:402
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%97#0
        !                                                                                         tmp%98#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%99#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded((uint64,uint64))%1#0
        l-load-copy reinterpret_Encoded((uint64,uint64))%1#0 0                                    reinterpret_Encoded((uint64,uint64))%1#0,reinterpret_Encoded((uint64,uint64))%1#0 (copy)
        extract 0 8 // on error: Index access is out of bounds                                    reinterpret_Encoded((uint64,uint64))%1#0,item0%0#0
        l-load reinterpret_Encoded((uint64,uint64))%1#0 1                                         item0%0#0,reinterpret_Encoded((uint64,uint64))%1#0
        extract 8 8 // on error: Index access is out of bounds                                    item0%0#0,item1%0#0
        // array/immutable.py:402
        // @arc4.abimethod()
        l-load item0%0#0 1                                                                        item1%0#0,item0%0#0
        l-load item1%0#0 1                                                                        item0%0#0,item1%0#0
        callsub test_concat_with_native_tuple                                                     tmp%101#0
        byte 0x151f7c75                                                                           tmp%101#0,0x151f7c75
        l-load tmp%101#0 1                                                                        0x151f7c75,tmp%101#0
        concat                                                                                    tmp%102#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_dynamic_concat_with_arc4_tuple_route@22:
        // array/immutable.py:410
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%103#0
        !                                                                                         tmp%104#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%105#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded((len+utf8[],len+utf8[]))%0#0
        // array/immutable.py:410
        // @arc4.abimethod()
        callsub test_dynamic_concat_with_arc4_tuple                                               tmp%107#0
        byte 0x151f7c75                                                                           tmp%107#0,0x151f7c75
        l-load tmp%107#0 1                                                                        0x151f7c75,tmp%107#0
        concat                                                                                    tmp%108#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_dynamic_concat_with_native_tuple_route@23:
        // array/immutable.py:418
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%109#0
        !                                                                                         tmp%110#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%111#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0
        l-load-copy reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 0                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy)
        int 0                                                                                     reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy),0
        extract_uint16                                                                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_start_offset%0#0
        l-load-copy reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 1                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_start_offset%0#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy)
        int 2                                                                                     reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_start_offset%0#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy),2
        extract_uint16                                                                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_start_offset%0#0,item_end_offset%0#0
        l-load-copy reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 2                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_start_offset%0#0,item_end_offset%0#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy)
        l-load item_start_offset%0#0 2                                                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy),item_start_offset%0#0
        l-load-copy item_end_offset%0#0 2                                                         reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy),item_start_offset%0#0,item_end_offset%0#0 (copy)
        substring3                                                                                reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,item0%1#0
        l-load-copy reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 2                            reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,item0%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 (copy)
        len                                                                                       reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,item0%1#0,item_end_offset%1#0
        l-load reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0 3                                 item_end_offset%0#0,item0%1#0,item_end_offset%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0
        l-load item_end_offset%0#0 3                                                              item0%1#0,item_end_offset%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0
        l-load item_end_offset%1#0 2                                                              item0%1#0,reinterpret_Encoded((len+utf8[],len+utf8[]))%1#0,item_end_offset%0#0,item_end_offset%1#0
        substring3                                                                                item0%1#0,item1%1#0
        // array/immutable.py:418
        // @arc4.abimethod()
        l-load item0%1#0 1                                                                        item1%1#0,item0%1#0
        l-load item1%1#0 1                                                                        item0%1#0,item1%1#0
        callsub test_dynamic_concat_with_native_tuple                                             tmp%113#0
        byte 0x151f7c75                                                                           tmp%113#0,0x151f7c75
        l-load tmp%113#0 1                                                                        0x151f7c75,tmp%113#0
        concat                                                                                    tmp%114#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_concat_immutable_dynamic_route@24:
        // array/immutable.py:426
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%115#0
        !                                                                                         tmp%116#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%117#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+(uint64,len+utf8[])[])%1#0
        txna ApplicationArgs 2                                                                    reinterpret_Encoded(len+(uint64,len+utf8[])[])%1#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%2#0
        // array/immutable.py:426
        // @arc4.abimethod()
        l-load reinterpret_Encoded(len+(uint64,len+utf8[])[])%1#0 1                               reinterpret_Encoded(len+(uint64,len+utf8[])[])%2#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%1#0
        l-load reinterpret_Encoded(len+(uint64,len+utf8[])[])%2#0 1                               reinterpret_Encoded(len+(uint64,len+utf8[])[])%1#0,reinterpret_Encoded(len+(uint64,len+utf8[])[])%2#0
        callsub test_concat_immutable_dynamic                                                     tmp%119#0
        byte 0x151f7c75                                                                           tmp%119#0,0x151f7c75
        l-load tmp%119#0 1                                                                        0x151f7c75,tmp%119#0
        concat                                                                                    tmp%120#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_test_immutable_arc4_route@25:
        // array/immutable.py:432
        // @arc4.abimethod()
        txn OnCompletion                                                                          tmp%121#0
        !                                                                                         tmp%122#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                         tmp%123#0
        assert // can only call when not creating
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                    reinterpret_Encoded(len+(uint64,uint64)[])%0#0
        // array/immutable.py:432
        // @arc4.abimethod()
        callsub test_immutable_arc4                                                               tmp%125#0
        byte 0x151f7c75                                                                           tmp%125#0,0x151f7c75
        l-load tmp%125#0 1                                                                        0x151f7c75,tmp%125#0
        concat                                                                                    tmp%126#0
        log
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_bare_routing@28:
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        txn OnCompletion                                                                          tmp%127#0
        bz main___algopy_default_create@29 ; b main_after_if_else@32

    main___algopy_default_create@29:
        txn ApplicationID                                                                         tmp%128#0
        !                                                                                         tmp%129#0
        assert // can only call when creating
        int 1                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_after_if_else@32:
        // array/immutable.py:81
        // class ImmutableArrayContract(arc4.ARC4Contract):
        int 0                                                                                     test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33 

    main_after_inlined_test_cases.array.immutable.ImmutableArrayContract.__puya_arc4_router__@33:
        v-load tmp%0#0                                                                            tmp%0#0
        return


// _puya_lib.arc4.dynamic_array_pop_fixed_size(array: bytes, fixed_byte_size: uint64) -> bytes, bytes:
subroutine dynamic_array_pop_fixed_size:
    dynamic_array_pop_fixed_size_block@0:                                                         (𝕡) array#0,fixed_byte_size#0 |
        p-load array#0                                                                            (𝕡) array#0,fixed_byte_size#0 | array#0 (copy)
        int 0                                                                                     (𝕡) array#0,fixed_byte_size#0 | array#0 (copy),0
        extract_uint16                                                                            (𝕡) array#0,fixed_byte_size#0 | array_length#0
        int 1                                                                                     (𝕡) array#0,fixed_byte_size#0 | array_length#0,1
        -                                                                                         (𝕡) array#0,fixed_byte_size#0 | length_minus_1#0
        itob                                                                                      (𝕡) array#0,fixed_byte_size#0 | tmp%0#0
        extract 6 0                                                                               (𝕡) array#0,fixed_byte_size#0 | tmp%1#0
        p-load array#0                                                                            (𝕡) array#0,fixed_byte_size#0 | tmp%1#0,array#0 (copy)
        l-load tmp%1#0 1                                                                          (𝕡) array#0,fixed_byte_size#0 | array#0 (copy),tmp%1#0
        replace2 0                                                                                (𝕡) array#0,fixed_byte_size#0 | result#0
        l-load-copy result#0 0                                                                    (𝕡) array#0,fixed_byte_size#0 | result#0,result#0 (copy)
        len                                                                                       (𝕡) array#0,fixed_byte_size#0 | result#0,tmp%2#0
        p-load fixed_byte_size#0                                                                  (𝕡) array#0,fixed_byte_size#0 | result#0,tmp%2#0,fixed_byte_size#0 (copy)
        -                                                                                         (𝕡) array#0,fixed_byte_size#0 | result#0,item_location#0
        l-load-copy result#0 1                                                                    (𝕡) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy)
        l-load-copy item_location#0 1                                                             (𝕡) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy),item_location#0 (copy)
        p-load fixed_byte_size#0                                                                  (𝕡) array#0,fixed_byte_size#0 | result#0,item_location#0,result#0 (copy),item_location#0 (copy),fixed_byte_size#0 (copy)
        extract3                                                                                  (𝕡) array#0,fixed_byte_size#0 | result#0,item_location#0,popped#0
        l-load result#0 2                                                                         (𝕡) array#0,fixed_byte_size#0 | item_location#0,popped#0,result#0
        int 0                                                                                     (𝕡) array#0,fixed_byte_size#0 | item_location#0,popped#0,result#0,0
        l-load item_location#0 3                                                                  (𝕡) array#0,fixed_byte_size#0 | popped#0,result#0,0,item_location#0
        substring3                                                                                (𝕡) array#0,fixed_byte_size#0 | popped#0,result#0
        l-load popped#0 1                                                                         (𝕡) array#0,fixed_byte_size#0 | result#0,popped#0
        l-load result#0 1                                                                         (𝕡) array#0,fixed_byte_size#0 | popped#0,result#0
        retsub                                                                                    popped#0,result#0


// _puya_lib.arc4.dynamic_array_pop_dynamic_element(array: bytes) -> bytes, bytes:
subroutine dynamic_array_pop_dynamic_element:
    dynamic_array_pop_dynamic_element_block@0:                                                    (𝕡) array#0 |
        p-load array#0                                                                            (𝕡) array#0 | array#0 (copy)
        int 0                                                                                     (𝕡) array#0 | array#0 (copy),0
        extract_uint16                                                                            (𝕡) array#0 | array_length#0
        int 1                                                                                     (𝕡) array#0 | array_length#0,1
        -                                                                                         (𝕡) array#0 | length_minus_1#0
        l-store-copy length_minus_1#0 0                                                           (𝕡) array#0 | length_minus_1#0,length_minus_1#0 (copy)
        v-store length_minus_1#0                                                                  (𝕡) array#0 | length_minus_1#0
        l-load length_minus_1#0 0                                                                 (𝕡) array#0 | length_minus_1#0
        int 2                                                                                     (𝕡) array#0 | length_minus_1#0,2
        *                                                                                         (𝕡) array#0 | popped_header_offset#0
        l-store-copy popped_header_offset#0 0                                                     (𝕡) array#0 | popped_header_offset#0,popped_header_offset#0 (copy)
        v-store popped_header_offset#0                                                            (𝕡) array#0 | popped_header_offset#0
        p-load array#0                                                                            (𝕡) array#0 | popped_header_offset#0,array#0 (copy)
        extract 2 0                                                                               (𝕡) array#0 | popped_header_offset#0,head_and_tail#0
        l-store-copy head_and_tail#0 0                                                            (𝕡) array#0 | popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        v-store head_and_tail#0                                                                   (𝕡) array#0 | popped_header_offset#0,head_and_tail#0
        l-load-copy head_and_tail#0 0                                                             (𝕡) array#0 | popped_header_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        l-load popped_header_offset#0 2                                                           (𝕡) array#0 | head_and_tail#0,head_and_tail#0 (copy),popped_header_offset#0
        extract_uint16                                                                            (𝕡) array#0 | head_and_tail#0,popped_offset#0
        l-store-copy popped_offset#0 1                                                            (𝕡) array#0 | popped_offset#0,head_and_tail#0,popped_offset#0 (copy)
        v-store popped_offset#0                                                                   (𝕡) array#0 | popped_offset#0,head_and_tail#0
        l-load-copy head_and_tail#0 0                                                             (𝕡) array#0 | popped_offset#0,head_and_tail#0,head_and_tail#0 (copy)
        len                                                                                       (𝕡) array#0 | popped_offset#0,head_and_tail#0,tmp%0#0
        l-load head_and_tail#0 1                                                                  (𝕡) array#0 | popped_offset#0,tmp%0#0,head_and_tail#0
        l-load popped_offset#0 2                                                                  (𝕡) array#0 | tmp%0#0,head_and_tail#0,popped_offset#0
        l-load tmp%0#0 2                                                                          (𝕡) array#0 | head_and_tail#0,popped_offset#0,tmp%0#0
        substring3                                                                                (𝕡) array#0 | popped#0
        v-store popped#0                                                                          (𝕡) array#0 |
        byte 0x                                                                                   (𝕡) array#0 | 0x
        v-store new_head#0                                                                        (𝕡) array#0 |
        int 0                                                                                     (𝕡) array#0 | 0
        v-store head_offset#0                                                                     (𝕡) array#0 |
        b dynamic_array_pop_dynamic_element_for_header@1                                          (𝕡) array#0 |

    dynamic_array_pop_dynamic_element_for_header@1:                                               (𝕡) array#0 |
        v-load head_offset#0                                                                      (𝕡) array#0 | head_offset#0
        v-load popped_header_offset#0                                                             (𝕡) array#0 | head_offset#0,popped_header_offset#0
        <                                                                                         (𝕡) array#0 | continue_looping%0#0
        bz dynamic_array_pop_dynamic_element_after_for@4 ; b dynamic_array_pop_dynamic_element_for_body@2 (𝕡) array#0 | 

    dynamic_array_pop_dynamic_element_for_body@2:                                                 (𝕡) array#0 |
        v-load head_and_tail#0                                                                    (𝕡) array#0 | head_and_tail#0
        v-load head_offset#0                                                                      (𝕡) array#0 | head_and_tail#0,head_offset#0
        l-store-copy head_offset#0 1                                                              (𝕡) array#0 | head_offset#0,head_and_tail#0,head_offset#0 (copy)
        extract_uint16                                                                            (𝕡) array#0 | head_offset#0,item_offset#0
        int 2                                                                                     (𝕡) array#0 | head_offset#0,item_offset#0,2
        -                                                                                         (𝕡) array#0 | head_offset#0,item_offset#0
        itob                                                                                      (𝕡) array#0 | head_offset#0,tmp%2#0
        extract 6 2                                                                               (𝕡) array#0 | head_offset#0,tmp%3#0
        v-load new_head#0                                                                         (𝕡) array#0 | head_offset#0,tmp%3#0,new_head#0
        l-load tmp%3#0 1                                                                          (𝕡) array#0 | head_offset#0,new_head#0,tmp%3#0
        concat                                                                                    (𝕡) array#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                        (𝕡) array#0 | head_offset#0
        l-load head_offset#0 0                                                                    (𝕡) array#0 | head_offset#0
        int 2                                                                                     (𝕡) array#0 | head_offset#0,2
        +                                                                                         (𝕡) array#0 | head_offset#0
        v-store head_offset#0                                                                     (𝕡) array#0 |
        b dynamic_array_pop_dynamic_element_for_header@1                                          (𝕡) array#0 |

    dynamic_array_pop_dynamic_element_after_for@4:                                                (𝕡) array#0 |
        v-load length_minus_1#0                                                                   (𝕡) array#0 | length_minus_1#0
        itob                                                                                      (𝕡) array#0 | tmp%4#0
        extract 6 2                                                                               (𝕡) array#0 | tmp%5#0
        v-load new_head#0                                                                         (𝕡) array#0 | tmp%5#0,new_head#0
        concat                                                                                    (𝕡) array#0 | tmp%6#0
        v-load popped_header_offset#0                                                             (𝕡) array#0 | tmp%6#0,popped_header_offset#0
        int 2                                                                                     (𝕡) array#0 | tmp%6#0,popped_header_offset#0,2
        +                                                                                         (𝕡) array#0 | tmp%6#0,tmp%7#0
        v-load head_and_tail#0                                                                    (𝕡) array#0 | tmp%6#0,tmp%7#0,head_and_tail#0
        l-load tmp%7#0 1                                                                          (𝕡) array#0 | tmp%6#0,head_and_tail#0,tmp%7#0
        v-load popped_offset#0                                                                    (𝕡) array#0 | tmp%6#0,head_and_tail#0,tmp%7#0,popped_offset#0
        substring3                                                                                (𝕡) array#0 | tmp%6#0,tmp%8#0
        l-load tmp%6#0 1                                                                          (𝕡) array#0 | tmp%8#0,tmp%6#0
        l-load tmp%8#0 1                                                                          (𝕡) array#0 | tmp%6#0,tmp%8#0
        concat                                                                                    (𝕡) array#0 | updated#0
        v-load popped#0                                                                           (𝕡) array#0 | updated#0,popped#0
        l-load updated#0 1                                                                        (𝕡) array#0 | popped#0,updated#0
        retsub                                                                                    popped#0,updated#0


// _puya_lib.arc4.dynamic_array_concat_bits(array: bytes, new_items_bytes: bytes, new_items_count: uint64, read_step: uint64) -> bytes:
subroutine dynamic_array_concat_bits:
    dynamic_array_concat_bits_block@0:                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy)
        int 0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array#0 (copy),0
        extract_uint16                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        l-store-copy array_length#0 0                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,array_length#0 (copy)
        v-store array_length#0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        l-load-copy array_length#0 0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,array_length#0 (copy)
        p-load new_items_count#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,array_length#0 (copy),new_items_count#0 (copy)
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0
        l-load-copy new_array_length#0 0                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,new_array_length#0 (copy)
        itob                                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,tmp%0#0
        extract 6 0                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,new_array_length_b#0
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,new_array_length_b#0,array#0 (copy)
        l-load new_array_length_b#0 1                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,array#0 (copy),new_array_length_b#0
        replace2 0                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,new_array_length#0,result#0
        l-store-copy result#0 2                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,array_length#0,new_array_length#0,result#0 (copy)
        v-store result#0                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,array_length#0,new_array_length#0
        l-load array_length#0 1                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,array_length#0
        int 7                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,array_length#0,7
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,tmp%1#0
        int 8                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,tmp%1#0,8
        /                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,current_bytes#0
        l-store-copy current_bytes#0 0                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,current_bytes#0,current_bytes#0 (copy)
        v-store current_bytes#0                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,new_array_length#0,current_bytes#0
        l-load new_array_length#0 1                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,new_array_length#0
        int 7                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,new_array_length#0,7
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,tmp%2#0
        int 8                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,tmp%2#0,8
        /                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,required_bytes#0
        l-store-copy required_bytes#0 0                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,required_bytes#0,required_bytes#0 (copy)
        v-store required_bytes#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,required_bytes#0
        l-load current_bytes#0 1                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,required_bytes#0,current_bytes#0
        l-load required_bytes#0 1                                                                 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,current_bytes#0,required_bytes#0
        <                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,tmp%3#0
        l-load result#0 1                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%3#0,result#0
        v-store result#7                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%3#0
        l-load tmp%3#0 0                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%3#0
        bz dynamic_array_concat_bits_after_if_else@2 ; b dynamic_array_concat_bits_if_body@1 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 

    dynamic_array_concat_bits_if_body@1:                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load required_bytes#0                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | required_bytes#0
        v-load current_bytes#0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | required_bytes#0,current_bytes#0
        -                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%4#0
        bzero                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%5#0
        v-load result#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%5#0,result#0
        l-load tmp%5#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0,tmp%5#0
        concat                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        v-store result#7                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_after_if_else@2                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_after_if_else@2:                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load result#7                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#7
        v-store result#0                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        int 0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 0
        v-store read_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load array_length#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0
        int 16                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | array_length#0,16
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        l-store-copy write_offset#0 0                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,write_offset#0 (copy)
        v-store write_offset#0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        l-load write_offset#0 0                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        p-load new_items_count#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,new_items_count#0 (copy)
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_end#0
        v-store write_end#0                                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_while_top@3                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_while_top@3:                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load write_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0
        v-load write_end#0                                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | write_offset#0,write_end#0
        <                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | tmp%6#0
        bz dynamic_array_concat_bits_after_while@5 ; b dynamic_array_concat_bits_while_body@4 (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | 

    dynamic_array_concat_bits_while_body@4:                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        p-load new_items_bytes#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_items_bytes#0 (copy)
        v-load read_offset#0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | new_items_bytes#0 (copy),read_offset#0
        l-store-copy read_offset#0 1                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,new_items_bytes#0 (copy),read_offset#0 (copy)
        getbit                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,tmp%7#0
        v-load result#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,tmp%7#0,result#0
        v-load write_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,tmp%7#0,result#0,write_offset#0
        l-store-copy write_offset#0 2                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0,tmp%7#0,result#0,write_offset#0 (copy)
        l-load tmp%7#0 2                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0,result#0,write_offset#0 (copy),tmp%7#0
        setbit                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0,result#0
        v-store result#0                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0
        l-load write_offset#0 0                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0
        int 1                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0,1
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,write_offset#0
        v-store write_offset#0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0
        l-load read_offset#0 0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0
        p-load read_step#0                                                                        (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0,read_step#0 (copy)
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | read_offset#0
        v-store read_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        b dynamic_array_concat_bits_while_top@3                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |

    dynamic_array_concat_bits_after_while@5:                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 |
        v-load result#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0,read_step#0 | result#0
        retsub                                                                                    result#0


// _puya_lib.arc4.dynamic_array_concat_byte_length_head(array: bytes, new_items_bytes: bytes, new_items_count: uint64) -> bytes:
subroutine dynamic_array_concat_byte_length_head:
    dynamic_array_concat_byte_length_head_block@0:                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array#0 (copy)
        int 0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array#0 (copy),0
        extract_uint16                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0
        l-load-copy array_length#0 0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,array_length#0 (copy)
        p-load new_items_count#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,array_length#0 (copy),new_items_count#0 (copy)
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | array_length#0,new_length#0
        l-load array_length#0 1                                                                   (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,array_length#0
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,array_length#0,2
        *                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%0#0
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%0#0,2
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0
        l-load-copy new_length#0 1                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,new_length#0 (copy)
        itob                                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%1#0
        extract 6 2                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%2#0
        v-store tmp%2#0                                                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,array#0 (copy)
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,array#0 (copy),2
        l-load-copy header_end#0 2                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,array#0 (copy),2,header_end#0 (copy)
        substring3                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0
        p-load new_items_count#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0,new_items_count#0 (copy)
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0,new_items_count#0 (copy),2
        *                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0,tmp%4#0
        bzero                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0,tmp%5#0
        l-load tmp%3#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%5#0,tmp%3#0
        l-load tmp%5#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%3#0,tmp%5#0
        concat                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%6#0
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%6#0,array#0 (copy)
        len                                                                                       (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%6#0,tmp%7#0
        p-load array#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,header_end#0,tmp%6#0,tmp%7#0,array#0 (copy)
        l-load header_end#0 3                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%6#0,tmp%7#0,array#0 (copy),header_end#0
        l-load tmp%7#0 2                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%6#0,array#0 (copy),header_end#0,tmp%7#0
        substring3                                                                                (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%6#0,tmp%8#0
        l-load tmp%6#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%8#0,tmp%6#0
        l-load tmp%8#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%6#0,tmp%8#0
        concat                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%9#0
        p-load new_items_bytes#0                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,tmp%9#0,new_items_bytes#0 (copy)
        concat                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,array_head_and_tail#0
        v-store array_head_and_tail#0                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0
        l-load new_length#0 0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | new_length#0,2
        *                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0
        l-store-copy tail_offset#0 0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0,tail_offset#0 (copy)
        v-store tail_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0
        int 0                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0,0
        v-store head_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0
        l-load tail_offset#0 0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#0
        v-store tail_offset#1                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        b dynamic_array_concat_byte_length_head_for_header@2                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 |

    dynamic_array_concat_byte_length_head_for_header@2:                                           (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        v-load head_offset#0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0
        v-load tail_offset#0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#0
        <                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | continue_looping%0#0
        bz dynamic_array_concat_byte_length_head_after_for@5 ; b dynamic_array_concat_byte_length_head_for_body@3 (𝕡) array#0,new_items_bytes#0,new_items_count#0 | 

    dynamic_array_concat_byte_length_head_for_body@3:                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        v-load tail_offset#1                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1
        l-store-copy tail_offset#1 0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1,tail_offset#1 (copy)
        itob                                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1,tmp%5#0
        extract 6 2                                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1,tail_offset_bytes#0
        v-load array_head_and_tail#0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1,tail_offset_bytes#0,array_head_and_tail#0
        v-load head_offset#0                                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tail_offset#1,tail_offset_bytes#0,array_head_and_tail#0,head_offset#0
        l-store-copy head_offset#0 3                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,tail_offset_bytes#0,array_head_and_tail#0,head_offset#0 (copy)
        l-load tail_offset_bytes#0 2                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0,head_offset#0 (copy),tail_offset_bytes#0
        replace3                                                                                  (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0
        l-store-copy array_head_and_tail#0 0                                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0,array_head_and_tail#0 (copy)
        v-store array_head_and_tail#0                                                             (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0
        l-load array_head_and_tail#0 0                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0
        l-load-copy tail_offset#1 1                                                               (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,array_head_and_tail#0,tail_offset#1 (copy)
        extract_uint16                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,tmp%6#1
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,tmp%6#1,2
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,tmp%7#0
        l-load tail_offset#1 1                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tmp%7#0,tail_offset#1
        l-load tmp%7#0 1                                                                          (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1,tmp%7#0
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,tail_offset#1
        v-store tail_offset#1                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0
        l-load head_offset#0 0                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0
        int 2                                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0,2
        +                                                                                         (𝕡) array#0,new_items_bytes#0,new_items_count#0 | head_offset#0
        v-store head_offset#0                                                                     (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        b dynamic_array_concat_byte_length_head_for_header@2                                      (𝕡) array#0,new_items_bytes#0,new_items_count#0 |

    dynamic_array_concat_byte_length_head_after_for@5:                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 |
        v-load tmp%2#0                                                                            (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0
        v-load array_head_and_tail#0                                                              (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%2#0,array_head_and_tail#0
        concat                                                                                    (𝕡) array#0,new_items_bytes#0,new_items_count#0 | tmp%12#0
        retsub                                                                                    tmp%12#0


// _puya_lib.arc4.dynamic_array_concat_dynamic_element(array_items_count: uint64, array_head_and_tail: bytes, new_items_count: uint64, new_head_and_tail: bytes) -> bytes:
subroutine dynamic_array_concat_dynamic_element:
    dynamic_array_concat_dynamic_element_block@0:                                                 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        byte 0x                                                                                   (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0x
        v-store new_head#0                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load new_items_count#0                                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_items_count#0 (copy)
        int 2                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_items_count#0 (copy),2
        *                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | item_offset_adjustment#0
        v-store item_offset_adjustment#0                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_items_count#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy)
        int 2                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy),2
        *                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%0#0
        v-store tmp%0#0                                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        int 0                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0
        v-store head_offset#0                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@1                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_for_header@1:                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        v-load head_offset#0                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-load tmp%0#0                                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%0#0
        <                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | continue_looping%0#0
        bz dynamic_array_concat_dynamic_element_after_for@4 ; b dynamic_array_concat_dynamic_element_for_body@2 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 

    dynamic_array_concat_dynamic_element_for_body@2:                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_head_and_tail#0                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy)
        v-load head_offset#0                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy),head_offset#0
        l-store-copy head_offset#0 1                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,array_head_and_tail#0 (copy),head_offset#0 (copy)
        extract_uint16                                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0
        v-load item_offset_adjustment#0                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0,item_offset_adjustment#0
        l-load item_offset#0 1                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#0,item_offset#0
        +                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%1#0
        itob                                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%2#0
        extract 6 2                                                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%3#0
        v-load new_head#0                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%3#0,new_head#0
        l-load tmp%3#0 1                                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0,tmp%3#0
        concat                                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        l-load head_offset#0 0                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        int 2                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,2
        +                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-store head_offset#0                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@1                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_after_for@4:                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_head_and_tail#0                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_head_and_tail#0 (copy)
        len                                                                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | item_offset_adjustment#2
        v-store item_offset_adjustment#2                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        int 0                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 0
        v-store head_offset#0                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@5                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_for_header@5:                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        v-load head_offset#0                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-load item_offset_adjustment#0                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#0
        <                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | continue_looping%1#0
        bz dynamic_array_concat_dynamic_element_after_for@8 ; b dynamic_array_concat_dynamic_element_for_body@6 (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | 

    dynamic_array_concat_dynamic_element_for_body@6:                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load new_head_and_tail#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_head_and_tail#0 (copy)
        v-load head_offset#0                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | new_head_and_tail#0 (copy),head_offset#0
        l-store-copy head_offset#0 1                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head_and_tail#0 (copy),head_offset#0 (copy)
        extract_uint16                                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0
        v-load item_offset_adjustment#2                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset#0,item_offset_adjustment#2
        l-load item_offset#0 1                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,item_offset_adjustment#2,item_offset#0
        +                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%5#0
        itob                                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%6#0
        extract 6 2                                                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%7#0
        v-load new_head#0                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,tmp%7#0,new_head#0
        l-load tmp%7#0 1                                                                          (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0,tmp%7#0
        concat                                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,new_head#0
        v-store new_head#0                                                                        (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        l-load head_offset#0 0                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        int 2                                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0,2
        +                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | head_offset#0
        v-store head_offset#0                                                                     (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        b dynamic_array_concat_dynamic_element_for_header@5                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |

    dynamic_array_concat_dynamic_element_after_for@8:                                             (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 |
        p-load array_items_count#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy)
        p-load new_items_count#0                                                                  (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | array_items_count#0 (copy),new_items_count#0 (copy)
        +                                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%8#0
        itob                                                                                      (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%9#0
        extract 6 2                                                                               (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%10#0
        v-load new_head#0                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%10#0,new_head#0
        concat                                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0
        p-load array_head_and_tail#0                                                              (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy)
        v-load tmp%0#0                                                                            (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0
        v-load item_offset_adjustment#2                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,array_head_and_tail#0 (copy),tmp%0#0,item_offset_adjustment#2
        substring3                                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,tmp%14#0
        l-load tmp%11#0 1                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%14#0,tmp%11#0
        l-load tmp%14#0 1                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%11#0,tmp%14#0
        concat                                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0
        p-load new_head_and_tail#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,new_head_and_tail#0 (copy)
        len                                                                                       (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0
        p-load new_head_and_tail#0                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy)
        v-load item_offset_adjustment#0                                                           (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%17#0,new_head_and_tail#0 (copy),item_offset_adjustment#0
        l-load tmp%17#0 2                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,new_head_and_tail#0 (copy),item_offset_adjustment#0,tmp%17#0
        substring3                                                                                (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%18#0
        l-load tmp%15#0 1                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%18#0,tmp%15#0
        l-load tmp%18#0 1                                                                         (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%15#0,tmp%18#0
        concat                                                                                    (𝕡) array_items_count#0,array_head_and_tail#0,new_items_count#0,new_head_and_tail#0 | tmp%19#0
        retsub                                                                                    tmp%19#0


// test_cases.array.immutable.times(n: uint64) -> bytes:
subroutine times:
    times_block@0:                                                                                (𝕡) n#0 |
        // array/immutable.py:441
        // result = String()
        byte ""                                                                                   (𝕡) n#0 | ""
        v-store result#0                                                                          (𝕡) n#0 |
        // array/immutable.py:442
        // for _i in urange(n):
        int 0                                                                                     (𝕡) n#0 | 0
        v-store _i#0                                                                              (𝕡) n#0 |
        b times_for_header@1                                                                      (𝕡) n#0 |

    times_for_header@1:                                                                           (𝕡) n#0 |
        // array/immutable.py:442
        // for _i in urange(n):
        v-load _i#0                                                                               (𝕡) n#0 | _i#0
        p-load n#0                                                                                (𝕡) n#0 | _i#0,n#0 (copy)
        <                                                                                         (𝕡) n#0 | continue_looping%0#0
        bz times_after_for@4 ; b times_for_body@2                                                 (𝕡) n#0 |

    times_for_body@2:                                                                             (𝕡) n#0 |
        // array/immutable.py:443
        // result += String(" ")
        v-load result#0                                                                           (𝕡) n#0 | result#0
        byte " "                                                                                  (𝕡) n#0 | result#0," "
        concat                                                                                    (𝕡) n#0 | result#0
        v-store result#0                                                                          (𝕡) n#0 |
        // array/immutable.py:442
        // for _i in urange(n):
        v-load _i#0                                                                               (𝕡) n#0 | _i#0
        int 1                                                                                     (𝕡) n#0 | _i#0,1
        +                                                                                         (𝕡) n#0 | _i#0
        v-store _i#0                                                                              (𝕡) n#0 |
        b times_for_header@1                                                                      (𝕡) n#0 |

    times_after_for@4:                                                                            (𝕡) n#0 |
        // array/immutable.py:444
        // return result
        v-load result#0                                                                           (𝕡) n#0 | result#0
        retsub                                                                                    result#0


// test_cases.array.immutable.add_x(arr: bytes, x: uint64) -> bytes:
subroutine add_x:
    add_x_block@0:                                                                                (𝕡) arr#0,x#0 |
        // array/immutable.py:449
        // for i in urange(x):
        int 0                                                                                     (𝕡) arr#0,x#0 | 0
        v-store i#0                                                                               (𝕡) arr#0,x#0 |
        b add_x_for_header@1                                                                      (𝕡) arr#0,x#0 |

    add_x_for_header@1:                                                                           (𝕡) arr#0,x#0 |
        // array/immutable.py:449
        // for i in urange(x):
        v-load i#0                                                                                (𝕡) arr#0,x#0 | i#0
        p-load x#0                                                                                (𝕡) arr#0,x#0 | i#0,x#0 (copy)
        <                                                                                         (𝕡) arr#0,x#0 | continue_looping%0#0
        bz add_x_after_for@4 ; b add_x_for_body@2                                                 (𝕡) arr#0,x#0 |

    add_x_for_body@2:                                                                             (𝕡) arr#0,x#0 |
        // array/immutable.py:450
        // arr = arr.append(i)
        v-load i#0                                                                                (𝕡) arr#0,x#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) arr#0,x#0 | i#0,i#0 (copy)
        itob                                                                                      (𝕡) arr#0,x#0 | i#0,val_as_bytes%0#0
        p-load arr#0                                                                              (𝕡) arr#0,x#0 | i#0,val_as_bytes%0#0,arr#0 (copy)
        l-load val_as_bytes%0#0 1                                                                 (𝕡) arr#0,x#0 | i#0,arr#0 (copy),val_as_bytes%0#0
        concat // on error: max array length exceeded                                             (𝕡) arr#0,x#0 | i#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) arr#0,x#0 | i#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) arr#0,x#0 | i#0,concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) arr#0,x#0 | i#0,concat%0#0,len%0#0
        int 8                                                                                     (𝕡) arr#0,x#0 | i#0,concat%0#0,len%0#0,8
        /                                                                                         (𝕡) arr#0,x#0 | i#0,concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) arr#0,x#0 | i#0,concat%0#0,as_bytes%0#0
        extract 6 2                                                                               (𝕡) arr#0,x#0 | i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) arr#0,x#0 | i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) arr#0,x#0 | i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) arr#0,x#0 | i#0,arr#0
        p-store arr#0                                                                             (𝕡) arr#0,x#0 | i#0
        // array/immutable.py:449
        // for i in urange(x):
        l-load i#0 0                                                                              (𝕡) arr#0,x#0 | i#0
        int 1                                                                                     (𝕡) arr#0,x#0 | i#0,1
        +                                                                                         (𝕡) arr#0,x#0 | i#0
        v-store i#0                                                                               (𝕡) arr#0,x#0 |
        b add_x_for_header@1                                                                      (𝕡) arr#0,x#0 |

    add_x_after_for@4:                                                                            (𝕡) arr#0,x#0 |
        // array/immutable.py:451
        // return arr
        p-load arr#0                                                                              (𝕡) arr#0,x#0 | arr#0 (copy)
        retsub                                                                                    arr#0 (copy)


// test_cases.array.immutable.ImmutableArrayContract.test_uint64_array() -> void:
subroutine test_uint64_array:
    test_uint64_array_block@0:
        // array/immutable.py:87
        // arr = arr.append(UInt64(42))
        byte 0x0001000000000000002a                                                               0x0001000000000000002a
        // array/immutable.py:91
        // arr = add_x(arr, UInt64(5))
        int 5                                                                                     0x0001000000000000002a,5
        callsub add_x                                                                             arr#2
        // array/immutable.py:92
        // assert arr.length == 6
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%3#1
        l-load-copy array%array_length%3#1 0                                                      arr#2,array%array_length%3#1,array%array_length%3#1 (copy)
        int 6                                                                                     arr#2,array%array_length%3#1,array%array_length%3#1 (copy),6
        ==                                                                                        arr#2,array%array_length%3#1,tmp%9#0
        assert                                                                                    arr#2,array%array_length%3#1
        // array/immutable.py:93
        // assert arr[-1] == 4
        l-load array%array_length%3#1 0                                                           arr#2,array%array_length%3#1
        int 1                                                                                     arr#2,array%array_length%3#1,1
        -                                                                                         arr#2,tmp%11#0
        l-load-copy arr#2 1                                                                       arr#2,tmp%11#0,arr#2 (copy)
        extract 2 0                                                                               arr#2,tmp%11#0,array_trimmed%1#0
        l-load tmp%11#0 1                                                                         arr#2,array_trimmed%1#0,tmp%11#0
        int 8                                                                                     arr#2,array_trimmed%1#0,tmp%11#0,8
        *                                                                                         arr#2,array_trimmed%1#0,bytes_offset%1#0
        l-load array_trimmed%1#0 1                                                                arr#2,bytes_offset%1#0,array_trimmed%1#0
        l-load bytes_offset%1#0 1                                                                 arr#2,array_trimmed%1#0,bytes_offset%1#0
        extract_uint64                                                                            arr#2,tmp%12#0
        int 4                                                                                     arr#2,tmp%12#0,4
        ==                                                                                        arr#2,tmp%13#0
        assert                                                                                    arr#2
        // array/immutable.py:95
        // arr = arr.append(UInt64(43))
        l-load arr#2 0                                                                            arr#2
        byte 0x000000000000002b                                                                   arr#2,0x000000000000002b
        concat // on error: max array length exceeded                                             concat%1#0
        l-load-copy concat%1#0 0                                                                  concat%1#0,concat%1#0 (copy)
        extract 2 0                                                                               concat%1#0,extract_to_end%1#0
        len                                                                                       concat%1#0,len%1#0
        int 8                                                                                     concat%1#0,len%1#0,8
        /                                                                                         concat%1#0,div_floor%1#0
        itob                                                                                      concat%1#0,as_bytes%2#0
        extract 6 2                                                                               concat%1#0,as_u16_bytes%1#0
        l-load concat%1#0 1                                                                       as_u16_bytes%1#0,concat%1#0
        l-load as_u16_bytes%1#0 1                                                                 concat%1#0,as_u16_bytes%1#0
        replace2 0                                                                                arr#2
        l-store-copy arr#2 0                                                                      arr#2,arr#2 (copy)
        v-store arr#2                                                                             arr#2
        // array/immutable.py:96
        // assert arr.length == 7
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%5#1
        l-load-copy array%array_length%5#1 0                                                      arr#2,array%array_length%5#1,array%array_length%5#1 (copy)
        int 7                                                                                     arr#2,array%array_length%5#1,array%array_length%5#1 (copy),7
        ==                                                                                        arr#2,array%array_length%5#1,tmp%15#0
        assert                                                                                    arr#2,array%array_length%5#1
        // array/immutable.py:97
        // assert arr[-1] == 43
        l-load array%array_length%5#1 0                                                           arr#2,array%array_length%5#1
        int 1                                                                                     arr#2,array%array_length%5#1,1
        -                                                                                         arr#2,tmp%17#0
        l-load-copy arr#2 1                                                                       arr#2,tmp%17#0,arr#2 (copy)
        extract 2 0                                                                               arr#2,tmp%17#0,array_trimmed%2#0
        l-load tmp%17#0 1                                                                         arr#2,array_trimmed%2#0,tmp%17#0
        int 8                                                                                     arr#2,array_trimmed%2#0,tmp%17#0,8
        *                                                                                         arr#2,array_trimmed%2#0,bytes_offset%2#0
        l-load array_trimmed%2#0 1                                                                arr#2,bytes_offset%2#0,array_trimmed%2#0
        l-load bytes_offset%2#0 1                                                                 arr#2,array_trimmed%2#0,bytes_offset%2#0
        extract_uint64                                                                            arr#2,tmp%18#0
        int 43                                                                                    arr#2,tmp%18#0,43
        ==                                                                                        arr#2,tmp%19#0
        assert                                                                                    arr#2
        // array/immutable.py:98
        // assert arr[0] == 42
        l-load arr#2 0                                                                            arr#2
        int 2                                                                                     arr#2,2
        extract_uint64                                                                            tmp%20#0
        int 42                                                                                    tmp%20#0,42
        ==                                                                                        tmp%21#0
        assert
        // array/immutable.py:456
        // for _i in urange(x):
        int 0                                                                                     0
        v-store _i#0
        b test_uint64_array_for_header@2

    test_uint64_array_for_header@2:
        // array/immutable.py:456
        // for _i in urange(x):
        v-load _i#0                                                                               _i#0
        // array/immutable.py:100
        // arr = pop_x(arr, UInt64(3))
        int 3                                                                                     _i#0,3
        // array/immutable.py:456
        // for _i in urange(x):
        <                                                                                         continue_looping%0#0
        bz test_uint64_array_after_for@4 ; b test_uint64_array_for_body@3

    test_uint64_array_for_body@3:
        // array/immutable.py:457
        // arr = arr.pop()
        v-load arr#2                                                                              arr#2
        int 8                                                                                     arr#2,8
        callsub dynamic_array_pop_fixed_size                                                      popped%0#0,arr#2
        v-store arr#2                                                                             popped%0#0
        pop 1
        // array/immutable.py:456
        // for _i in urange(x):
        v-load _i#0                                                                               _i#0
        int 1                                                                                     _i#0,1
        +                                                                                         _i#0
        v-store _i#0
        b test_uint64_array_for_header@2

    test_uint64_array_after_for@4:
        // array/immutable.py:101
        // assert arr.length == 4
        v-load arr#2                                                                              arr#2
        l-store-copy arr#2 0                                                                      arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%7#1
        l-load-copy array%array_length%7#1 0                                                      arr#2,array%array_length%7#1,array%array_length%7#1 (copy)
        int 4                                                                                     arr#2,array%array_length%7#1,array%array_length%7#1 (copy),4
        ==                                                                                        arr#2,array%array_length%7#1,tmp%23#0
        assert                                                                                    arr#2,array%array_length%7#1
        // array/immutable.py:102
        // assert arr[-1] == 2
        l-load array%array_length%7#1 0                                                           arr#2,array%array_length%7#1
        int 1                                                                                     arr#2,array%array_length%7#1,1
        -                                                                                         arr#2,tmp%25#0
        l-load-copy arr#2 1                                                                       arr#2,tmp%25#0,arr#2 (copy)
        extract 2 0                                                                               arr#2,tmp%25#0,array_trimmed%4#0
        l-load tmp%25#0 1                                                                         arr#2,array_trimmed%4#0,tmp%25#0
        int 8                                                                                     arr#2,array_trimmed%4#0,tmp%25#0,8
        *                                                                                         arr#2,array_trimmed%4#0,bytes_offset%4#0
        l-load array_trimmed%4#0 1                                                                arr#2,bytes_offset%4#0,array_trimmed%4#0
        l-load bytes_offset%4#0 1                                                                 arr#2,array_trimmed%4#0,bytes_offset%4#0
        extract_uint64                                                                            arr#2,tmp%26#0
        int 2                                                                                     arr#2,tmp%26#0,2
        ==                                                                                        arr#2,tmp%27#0
        assert                                                                                    arr#2
        // array/immutable.py:104
        // arr = add_x(arr, UInt64(10))
        l-load arr#2 0                                                                            arr#2
        int 10                                                                                    arr#2,10
        callsub add_x                                                                             arr#2
        // array/immutable.py:105
        // assert arr.length == 14
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%9#1
        l-load-copy array%array_length%9#1 0                                                      arr#2,array%array_length%9#1,array%array_length%9#1 (copy)
        int 14                                                                                    arr#2,array%array_length%9#1,array%array_length%9#1 (copy),14
        ==                                                                                        arr#2,array%array_length%9#1,tmp%29#0
        assert                                                                                    arr#2,array%array_length%9#1
        // array/immutable.py:106
        // assert arr[-1] == 9
        l-load array%array_length%9#1 0                                                           arr#2,array%array_length%9#1
        int 1                                                                                     arr#2,array%array_length%9#1,1
        -                                                                                         arr#2,tmp%31#0
        l-load-copy arr#2 1                                                                       arr#2,tmp%31#0,arr#2 (copy)
        extract 2 0                                                                               arr#2,tmp%31#0,array_trimmed%5#0
        l-load tmp%31#0 1                                                                         arr#2,array_trimmed%5#0,tmp%31#0
        int 8                                                                                     arr#2,array_trimmed%5#0,tmp%31#0,8
        *                                                                                         arr#2,array_trimmed%5#0,bytes_offset%5#0
        l-load array_trimmed%5#0 1                                                                arr#2,bytes_offset%5#0,array_trimmed%5#0
        l-load bytes_offset%5#0 1                                                                 arr#2,array_trimmed%5#0,bytes_offset%5#0
        extract_uint64                                                                            arr#2,tmp%32#0
        int 9                                                                                     arr#2,tmp%32#0,9
        ==                                                                                        arr#2,tmp%33#0
        assert                                                                                    arr#2
        // array/immutable.py:108
        // arr = arr.append(UInt64(44))
        l-load arr#2 0                                                                            arr#2
        byte 0x000000000000002c                                                                   arr#2,0x000000000000002c
        concat // on error: max array length exceeded                                             concat%2#0
        l-load-copy concat%2#0 0                                                                  concat%2#0,concat%2#0 (copy)
        extract 2 0                                                                               concat%2#0,extract_to_end%2#0
        len                                                                                       concat%2#0,len%2#0
        int 8                                                                                     concat%2#0,len%2#0,8
        /                                                                                         concat%2#0,div_floor%2#0
        itob                                                                                      concat%2#0,as_bytes%3#0
        extract 6 2                                                                               concat%2#0,as_u16_bytes%2#0
        l-load concat%2#0 1                                                                       as_u16_bytes%2#0,concat%2#0
        l-load as_u16_bytes%2#0 1                                                                 concat%2#0,as_u16_bytes%2#0
        replace2 0                                                                                arr#2
        // array/immutable.py:109
        // assert arr.length == 15
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%11#1
        l-load-copy array%array_length%11#1 0                                                     arr#2,array%array_length%11#1,array%array_length%11#1 (copy)
        int 15                                                                                    arr#2,array%array_length%11#1,array%array_length%11#1 (copy),15
        ==                                                                                        arr#2,array%array_length%11#1,tmp%35#0
        assert                                                                                    arr#2,array%array_length%11#1
        // array/immutable.py:110
        // assert arr[-1] == 44
        l-load array%array_length%11#1 0                                                          arr#2,array%array_length%11#1
        int 1                                                                                     arr#2,array%array_length%11#1,1
        -                                                                                         arr#2,tmp%37#0
        l-load-copy arr#2 1                                                                       arr#2,tmp%37#0,arr#2 (copy)
        extract 2 0                                                                               arr#2,tmp%37#0,array_trimmed%6#0
        l-load tmp%37#0 1                                                                         arr#2,array_trimmed%6#0,tmp%37#0
        int 8                                                                                     arr#2,array_trimmed%6#0,tmp%37#0,8
        *                                                                                         arr#2,array_trimmed%6#0,bytes_offset%6#0
        l-load array_trimmed%6#0 1                                                                arr#2,bytes_offset%6#0,array_trimmed%6#0
        l-load bytes_offset%6#0 1                                                                 arr#2,array_trimmed%6#0,bytes_offset%6#0
        extract_uint64                                                                            arr#2,tmp%38#0
        int 44                                                                                    arr#2,tmp%38#0,44
        ==                                                                                        arr#2,tmp%39#0
        assert                                                                                    arr#2
        // array/immutable.py:112
        // arr = arr.replace(2, UInt64(23))
        int 23                                                                                    arr#2,23
        itob                                                                                      arr#2,array%val_as_bytes%0#1
        l-load arr#2 1                                                                            array%val_as_bytes%0#1,arr#2
        l-load array%val_as_bytes%0#1 1                                                           arr#2,array%val_as_bytes%0#1
        replace2 18                                                                               arr#2
        // array/immutable.py:113
        // assert arr.length == 15
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 0                                                                                     arr#2,arr#2 (copy),0
        extract_uint16                                                                            arr#2,array%array_length%13#1
        int 15                                                                                    arr#2,array%array_length%13#1,15
        ==                                                                                        arr#2,tmp%41#0
        assert                                                                                    arr#2
        // array/immutable.py:114
        // assert arr[2] == 23
        l-load-copy arr#2 0                                                                       arr#2,arr#2 (copy)
        int 18                                                                                    arr#2,arr#2 (copy),18
        extract_uint64                                                                            arr#2,tmp%42#0
        int 23                                                                                    arr#2,tmp%42#0,23
        ==                                                                                        arr#2,tmp%43#0
        assert                                                                                    arr#2
        // array/immutable.py:116
        // self.a = arr
        byte "a"                                                                                  arr#2,"a"
        l-load arr#2 1                                                                            "a",arr#2
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_biguint_array() -> void:
subroutine test_biguint_array:
    test_biguint_array_block@0:
        // array/immutable.py:123
        // arr = arr.append(BigUInt(Txn.num_app_args - 1))
        txn NumAppArgs                                                                            tmp%2#0
        int 1                                                                                     tmp%2#0,1
        -                                                                                         tmp%3#0
        itob                                                                                      tmp%4#0
        int 64                                                                                    tmp%4#0,64
        bzero                                                                                     tmp%4#0,bzero%0#0
        l-store-copy bzero%0#0 0                                                                  tmp%4#0,bzero%0#0,bzero%0#0 (copy)
        v-store bzero%0#0                                                                         tmp%4#0,bzero%0#0
        l-load tmp%4#0 1                                                                          bzero%0#0,tmp%4#0
        l-load bzero%0#0 1                                                                        tmp%4#0,bzero%0#0
        b|                                                                                        arc4_encoded%0#0
        // array/immutable.py:120
        // arr = ImmutableArray[BigUInt]()
        byte 0x0000                                                                               arc4_encoded%0#0,0x0000
        // array/immutable.py:123
        // arr = arr.append(BigUInt(Txn.num_app_args - 1))
        l-load arc4_encoded%0#0 1                                                                 0x0000,arc4_encoded%0#0
        concat // on error: max array length exceeded                                             concat%0#0
        l-load-copy concat%0#0 0                                                                  concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               concat%0#0,extract_to_end%0#0
        len                                                                                       concat%0#0,len%0#0
        int 64                                                                                    concat%0#0,len%0#0,64
        /                                                                                         concat%0#0,div_floor%0#0
        itob                                                                                      concat%0#0,as_bytes%1#0
        extract 6 2                                                                               concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                arr#1
        l-store-copy arr#1 0                                                                      arr#1,arr#1 (copy)
        v-store arr#1                                                                             arr#1
        // array/immutable.py:124
        // assert arr.length == 1
        l-load-copy arr#1 0                                                                       arr#1,arr#1 (copy)
        int 0                                                                                     arr#1,arr#1 (copy),0
        extract_uint16                                                                            arr#1,array%array_length%1#1
        l-load-copy array%array_length%1#1 0                                                      arr#1,array%array_length%1#1,array%array_length%1#1 (copy)
        int 1                                                                                     arr#1,array%array_length%1#1,array%array_length%1#1 (copy),1
        ==                                                                                        arr#1,array%array_length%1#1,tmp%6#0
        assert                                                                                    arr#1,array%array_length%1#1
        // array/immutable.py:125
        // assert arr[-1] == 0
        l-load array%array_length%1#1 0                                                           arr#1,array%array_length%1#1
        int 1                                                                                     arr#1,array%array_length%1#1,1
        -                                                                                         arr#1,tmp%8#0
        l-load arr#1 1                                                                            tmp%8#0,arr#1
        extract 2 0                                                                               tmp%8#0,array_trimmed%0#0
        l-load tmp%8#0 1                                                                          array_trimmed%0#0,tmp%8#0
        int 64                                                                                    array_trimmed%0#0,tmp%8#0,64
        *                                                                                         array_trimmed%0#0,bytes_offset%0#0
        l-load array_trimmed%0#0 1                                                                bytes_offset%0#0,array_trimmed%0#0
        l-load bytes_offset%0#0 1                                                                 array_trimmed%0#0,bytes_offset%0#0
        int 64                                                                                    array_trimmed%0#0,bytes_offset%0#0,64
        extract3 // on error: index access is out of bounds                                       encoded_element%0#0
        byte 0x                                                                                   encoded_element%0#0,0x
        b==                                                                                       tmp%10#0
        assert
        // array/immutable.py:463
        // for i in urange(x):
        int 0                                                                                     0
        v-store i#0
        b test_biguint_array_for_header@2

    test_biguint_array_for_header@2:
        // array/immutable.py:463
        // for i in urange(x):
        v-load i#0                                                                                i#0
        // array/immutable.py:127
        // arr = add_xb(arr, UInt64(5))
        int 5                                                                                     i#0,5
        // array/immutable.py:463
        // for i in urange(x):
        <                                                                                         continue_looping%0#0
        bz test_biguint_array_after_for@4 ; b test_biguint_array_for_body@3

    test_biguint_array_for_body@3:
        // array/immutable.py:464
        // arr = arr.append(BigUInt(i))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        itob                                                                                      i#0,tmp%0#1
        v-load bzero%0#0                                                                          i#0,tmp%0#1,bzero%0#0
        b|                                                                                        i#0,arc4_encoded%0#0
        v-load arr#1                                                                              i#0,arc4_encoded%0#0,arr#1
        l-load arc4_encoded%0#0 1                                                                 i#0,arr#1,arc4_encoded%0#0
        concat // on error: max array length exceeded                                             i#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  i#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               i#0,concat%0#0,extract_to_end%0#0
        len                                                                                       i#0,concat%0#0,len%0#0
        int 64                                                                                    i#0,concat%0#0,len%0#0,64
        /                                                                                         i#0,concat%0#0,div_floor%0#0
        itob                                                                                      i#0,concat%0#0,as_bytes%0#1
        extract 6 2                                                                               i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                i#0,arr#1
        v-store arr#1                                                                             i#0
        // array/immutable.py:463
        // for i in urange(x):
        l-load i#0 0                                                                              i#0
        int 1                                                                                     i#0,1
        +                                                                                         i#0
        v-store i#0
        b test_biguint_array_for_header@2

    test_biguint_array_after_for@4:
        // array/immutable.py:128
        // assert arr.length == 6
        v-load arr#1                                                                              arr#1
        l-store-copy arr#1 0                                                                      arr#1,arr#1 (copy)
        int 0                                                                                     arr#1,arr#1 (copy),0
        extract_uint16                                                                            arr#1,array%array_length%3#1
        l-load-copy array%array_length%3#1 0                                                      arr#1,array%array_length%3#1,array%array_length%3#1 (copy)
        int 6                                                                                     arr#1,array%array_length%3#1,array%array_length%3#1 (copy),6
        ==                                                                                        arr#1,array%array_length%3#1,tmp%12#0
        assert                                                                                    arr#1,array%array_length%3#1
        // array/immutable.py:129
        // assert arr[-1] == 4
        l-load array%array_length%3#1 0                                                           arr#1,array%array_length%3#1
        int 1                                                                                     arr#1,array%array_length%3#1,1
        -                                                                                         arr#1,tmp%14#0
        l-load-copy arr#1 1                                                                       arr#1,tmp%14#0,arr#1 (copy)
        extract 2 0                                                                               arr#1,tmp%14#0,array_trimmed%1#0
        l-load tmp%14#0 1                                                                         arr#1,array_trimmed%1#0,tmp%14#0
        int 64                                                                                    arr#1,array_trimmed%1#0,tmp%14#0,64
        *                                                                                         arr#1,array_trimmed%1#0,bytes_offset%1#0
        l-load array_trimmed%1#0 1                                                                arr#1,bytes_offset%1#0,array_trimmed%1#0
        l-load bytes_offset%1#0 1                                                                 arr#1,array_trimmed%1#0,bytes_offset%1#0
        int 64                                                                                    arr#1,array_trimmed%1#0,bytes_offset%1#0,64
        extract3 // on error: index access is out of bounds                                       arr#1,encoded_element%1#0
        byte 0x04                                                                                 arr#1,encoded_element%1#0,0x04
        b==                                                                                       arr#1,tmp%16#0
        assert                                                                                    arr#1
        // array/immutable.py:131
        // arr = arr.append(BigUInt(2**512 - 1) - Txn.num_app_args)
        txn NumAppArgs                                                                            arr#1,tmp%17#0
        itob                                                                                      arr#1,tmp%18#0
        byte 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff arr#1,tmp%18#0,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        l-load tmp%18#0 1                                                                         arr#1,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,tmp%18#0
        b-                                                                                        arr#1,tmp%19#0
        l-load-copy tmp%19#0 0                                                                    arr#1,tmp%19#0,tmp%19#0 (copy)
        len                                                                                       arr#1,tmp%19#0,value_len%1#0
        int 64                                                                                    arr#1,tmp%19#0,value_len%1#0,64
        <=                                                                                        arr#1,tmp%19#0,len_ok%1#0
        assert // overflow                                                                        arr#1,tmp%19#0
        l-load tmp%19#0 0                                                                         arr#1,tmp%19#0
        v-load bzero%0#0                                                                          arr#1,tmp%19#0,bzero%0#0
        b|                                                                                        arr#1,arc4_encoded%1#0
        l-load arr#1 1                                                                            arc4_encoded%1#0,arr#1
        l-load arc4_encoded%1#0 1                                                                 arr#1,arc4_encoded%1#0
        concat // on error: max array length exceeded                                             concat%1#0
        l-load-copy concat%1#0 0                                                                  concat%1#0,concat%1#0 (copy)
        extract 2 0                                                                               concat%1#0,extract_to_end%1#0
        len                                                                                       concat%1#0,len%1#0
        int 64                                                                                    concat%1#0,len%1#0,64
        /                                                                                         concat%1#0,div_floor%1#0
        itob                                                                                      concat%1#0,as_bytes%2#0
        extract 6 2                                                                               concat%1#0,as_u16_bytes%1#0
        l-load concat%1#0 1                                                                       as_u16_bytes%1#0,concat%1#0
        l-load as_u16_bytes%1#0 1                                                                 concat%1#0,as_u16_bytes%1#0
        replace2 0                                                                                arr#1
        // array/immutable.py:132
        // assert arr.length == 7
        l-load-copy arr#1 0                                                                       arr#1,arr#1 (copy)
        int 0                                                                                     arr#1,arr#1 (copy),0
        extract_uint16                                                                            arr#1,array%array_length%5#1
        l-load-copy array%array_length%5#1 0                                                      arr#1,array%array_length%5#1,array%array_length%5#1 (copy)
        int 7                                                                                     arr#1,array%array_length%5#1,array%array_length%5#1 (copy),7
        ==                                                                                        arr#1,array%array_length%5#1,tmp%21#0
        assert                                                                                    arr#1,array%array_length%5#1
        // array/immutable.py:133
        // assert arr[-1] == 2**512 - 2
        l-load array%array_length%5#1 0                                                           arr#1,array%array_length%5#1
        int 1                                                                                     arr#1,array%array_length%5#1,1
        -                                                                                         arr#1,tmp%23#0
        l-load-copy arr#1 1                                                                       arr#1,tmp%23#0,arr#1 (copy)
        extract 2 0                                                                               arr#1,tmp%23#0,array_trimmed%2#0
        l-load tmp%23#0 1                                                                         arr#1,array_trimmed%2#0,tmp%23#0
        int 64                                                                                    arr#1,array_trimmed%2#0,tmp%23#0,64
        *                                                                                         arr#1,array_trimmed%2#0,bytes_offset%2#0
        l-load array_trimmed%2#0 1                                                                arr#1,bytes_offset%2#0,array_trimmed%2#0
        l-load bytes_offset%2#0 1                                                                 arr#1,array_trimmed%2#0,bytes_offset%2#0
        int 64                                                                                    arr#1,array_trimmed%2#0,bytes_offset%2#0,64
        extract3 // on error: index access is out of bounds                                       arr#1,encoded_element%2#0
        byte 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe arr#1,encoded_element%2#0,0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
        b==                                                                                       arr#1,tmp%25#0
        assert                                                                                    arr#1
        // array/immutable.py:134
        // assert arr[0] == 0
        l-load-copy arr#1 0                                                                       arr#1,arr#1 (copy)
        extract 2 64                                                                              arr#1,encoded_element%3#0
        byte 0x                                                                                   arr#1,encoded_element%3#0,0x
        b==                                                                                       arr#1,tmp%27#0
        assert                                                                                    arr#1
        // array/immutable.py:136
        // arr = arr.append(BigUInt(2**512 - 1))
        l-load arr#1 0                                                                            arr#1
        byte 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff arr#1,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        concat // on error: max array length exceeded                                             concat%2#0
        l-load-copy concat%2#0 0                                                                  concat%2#0,concat%2#0 (copy)
        extract 2 0                                                                               concat%2#0,extract_to_end%2#0
        len                                                                                       concat%2#0,len%2#0
        int 64                                                                                    concat%2#0,len%2#0,64
        /                                                                                         concat%2#0,div_floor%2#0
        itob                                                                                      concat%2#0,as_bytes%3#0
        extract 6 2                                                                               concat%2#0,as_u16_bytes%2#0
        l-load concat%2#0 1                                                                       as_u16_bytes%2#0,concat%2#0
        l-load as_u16_bytes%2#0 1                                                                 concat%2#0,as_u16_bytes%2#0
        replace2 0                                                                                arr#1
        // array/immutable.py:137
        // assert arr.length == 8
        l-load-copy arr#1 0                                                                       arr#1,arr#1 (copy)
        int 0                                                                                     arr#1,arr#1 (copy),0
        extract_uint16                                                                            arr#1,array%array_length%7#1
        l-load-copy array%array_length%7#1 0                                                      arr#1,array%array_length%7#1,array%array_length%7#1 (copy)
        int 8                                                                                     arr#1,array%array_length%7#1,array%array_length%7#1 (copy),8
        ==                                                                                        arr#1,array%array_length%7#1,tmp%29#0
        assert                                                                                    arr#1,array%array_length%7#1
        // array/immutable.py:138
        // assert arr[-1] == 2**512 - 1
        l-load array%array_length%7#1 0                                                           arr#1,array%array_length%7#1
        int 1                                                                                     arr#1,array%array_length%7#1,1
        -                                                                                         arr#1,tmp%31#0
        l-load-copy arr#1 1                                                                       arr#1,tmp%31#0,arr#1 (copy)
        extract 2 0                                                                               arr#1,tmp%31#0,array_trimmed%4#0
        l-load tmp%31#0 1                                                                         arr#1,array_trimmed%4#0,tmp%31#0
        int 64                                                                                    arr#1,array_trimmed%4#0,tmp%31#0,64
        *                                                                                         arr#1,array_trimmed%4#0,bytes_offset%4#0
        l-load array_trimmed%4#0 1                                                                arr#1,bytes_offset%4#0,array_trimmed%4#0
        l-load bytes_offset%4#0 1                                                                 arr#1,array_trimmed%4#0,bytes_offset%4#0
        int 64                                                                                    arr#1,array_trimmed%4#0,bytes_offset%4#0,64
        extract3 // on error: index access is out of bounds                                       arr#1,encoded_element%4#0
        byte 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff arr#1,encoded_element%4#0,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        b==                                                                                       arr#1,tmp%33#0
        assert                                                                                    arr#1
        // array/immutable.py:139
        // assert arr[0] == 0
        l-load-copy arr#1 0                                                                       arr#1,arr#1 (copy)
        extract 2 64                                                                              arr#1,encoded_element%5#0
        byte 0x                                                                                   arr#1,encoded_element%5#0,0x
        b==                                                                                       arr#1,tmp%35#0
        assert                                                                                    arr#1
        // array/immutable.py:141
        // Box(ImmutableArray[BigUInt], key=b"biguint").value = arr
        byte 0x62696775696e74                                                                     arr#1,0x62696775696e74
        box_del                                                                                   arr#1,{box_del}
        pop 1                                                                                     arr#1
        byte 0x62696775696e74                                                                     arr#1,0x62696775696e74
        l-load arr#1 1                                                                            0x62696775696e74,arr#1
        box_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_bool_array(length: uint64) -> void:
subroutine test_bool_array:
    test_bool_array_block@0:                                                                      (𝕡) length#0 |
        // array/immutable.py:145
        // arr = ImmutableArray[bool]()
        byte 0x0000                                                                               (𝕡) length#0 | 0x0000
        v-store arr#0                                                                             (𝕡) length#0 |
        // array/immutable.py:148
        // for i in urange(length):
        int 0                                                                                     (𝕡) length#0 | 0
        v-store i#0                                                                               (𝕡) length#0 |
        b test_bool_array_for_header@1                                                            (𝕡) length#0 |

    test_bool_array_for_header@1:                                                                 (𝕡) length#0 |
        // array/immutable.py:148
        // for i in urange(length):
        v-load i#0                                                                                (𝕡) length#0 | i#0
        p-load length#0                                                                           (𝕡) length#0 | i#0,length#0 (copy)
        <                                                                                         (𝕡) length#0 | continue_looping%0#0
        bz test_bool_array_after_for@4 ; b test_bool_array_for_body@2                             (𝕡) length#0 |

    test_bool_array_for_body@2:                                                                   (𝕡) length#0 |
        // array/immutable.py:149
        // arr = arr.append(i == Txn.num_app_args)
        txn NumAppArgs                                                                            (𝕡) length#0 | tmp%2#0
        v-load i#0                                                                                (𝕡) length#0 | tmp%2#0,i#0
        l-store-copy i#0 1                                                                        (𝕡) length#0 | i#0,tmp%2#0,i#0 (copy)
        l-load tmp%2#0 1                                                                          (𝕡) length#0 | i#0,i#0 (copy),tmp%2#0
        ==                                                                                        (𝕡) length#0 | i#0,tmp%3#0
        byte 0x00                                                                                 (𝕡) length#0 | i#0,tmp%3#0,0x00
        int 0                                                                                     (𝕡) length#0 | i#0,tmp%3#0,0x00,0
        l-load tmp%3#0 2                                                                          (𝕡) length#0 | i#0,0x00,0,tmp%3#0
        setbit                                                                                    (𝕡) length#0 | i#0,encoded_bool%0#0
        v-load arr#0                                                                              (𝕡) length#0 | i#0,encoded_bool%0#0,arr#0
        l-load encoded_bool%0#0 1                                                                 (𝕡) length#0 | i#0,arr#0,encoded_bool%0#0
        int 1                                                                                     (𝕡) length#0 | i#0,arr#0,encoded_bool%0#0,1
        int 8                                                                                     (𝕡) length#0 | i#0,arr#0,encoded_bool%0#0,1,8
        callsub dynamic_array_concat_bits                                                         (𝕡) length#0 | i#0,arr#0
        v-store arr#0                                                                             (𝕡) length#0 | i#0
        // array/immutable.py:148
        // for i in urange(length):
        l-load i#0 0                                                                              (𝕡) length#0 | i#0
        int 1                                                                                     (𝕡) length#0 | i#0,1
        +                                                                                         (𝕡) length#0 | i#0
        v-store i#0                                                                               (𝕡) length#0 |
        b test_bool_array_for_header@1                                                            (𝕡) length#0 |

    test_bool_array_after_for@4:                                                                  (𝕡) length#0 |
        // array/immutable.py:151
        // assert arr.length == length
        v-load arr#0                                                                              (𝕡) length#0 | arr#0
        int 0                                                                                     (𝕡) length#0 | arr#0,0
        extract_uint16                                                                            (𝕡) length#0 | array_length#0
        l-store-copy array_length#0 0                                                             (𝕡) length#0 | array_length#0,array_length#0 (copy)
        v-store array_length#0                                                                    (𝕡) length#0 | array_length#0
        l-load array_length#0 0                                                                   (𝕡) length#0 | array_length#0
        p-load length#0                                                                           (𝕡) length#0 | array_length#0,length#0 (copy)
        ==                                                                                        (𝕡) length#0 | tmp%5#0
        assert                                                                                    (𝕡) length#0 |
        // array/immutable.py:153
        // if length > 0:
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        bz test_bool_array_after_if_else@6 ; b test_bool_array_if_body@5                          (𝕡) length#0 |

    test_bool_array_if_body@5:                                                                    (𝕡) length#0 |
        // array/immutable.py:154
        // assert not arr[0], "expected element 0 to be False"
        v-load array_length#0                                                                     (𝕡) length#0 | array_length#0
        assert // index access is out of bounds                                                   (𝕡) length#0 |
        v-load arr#0                                                                              (𝕡) length#0 | arr#0
        extract 2 0                                                                               (𝕡) length#0 | array_trimmed%0#0
        int 0                                                                                     (𝕡) length#0 | array_trimmed%0#0,0
        getbit                                                                                    (𝕡) length#0 | is_true%0#0
        !                                                                                         (𝕡) length#0 | tmp%7#0
        assert // expected element 0 to be False                                                  (𝕡) length#0 |
        b test_bool_array_after_if_else@6                                                         (𝕡) length#0 |

    test_bool_array_after_if_else@6:                                                              (𝕡) length#0 |
        // array/immutable.py:155
        // if length > 1:
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        int 1                                                                                     (𝕡) length#0 | length#0 (copy),1
        >                                                                                         (𝕡) length#0 | tmp%8#0
        bz test_bool_array_after_if_else@8 ; b test_bool_array_if_body@7                          (𝕡) length#0 |

    test_bool_array_if_body@7:                                                                    (𝕡) length#0 |
        // array/immutable.py:156
        // assert not arr[1], "expected element 1 to be False"
        int 1                                                                                     (𝕡) length#0 | 1
        v-load array_length#0                                                                     (𝕡) length#0 | 1,array_length#0
        <                                                                                         (𝕡) length#0 | lt%1#0
        assert // index access is out of bounds                                                   (𝕡) length#0 |
        v-load arr#0                                                                              (𝕡) length#0 | arr#0
        extract 2 0                                                                               (𝕡) length#0 | array_trimmed%1#0
        int 1                                                                                     (𝕡) length#0 | array_trimmed%1#0,1
        getbit                                                                                    (𝕡) length#0 | is_true%1#0
        !                                                                                         (𝕡) length#0 | tmp%9#0
        assert // expected element 1 to be False                                                  (𝕡) length#0 |
        b test_bool_array_after_if_else@8                                                         (𝕡) length#0 |

    test_bool_array_after_if_else@8:                                                              (𝕡) length#0 |
        // array/immutable.py:157
        // if length > 2:
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        int 2                                                                                     (𝕡) length#0 | length#0 (copy),2
        >                                                                                         (𝕡) length#0 | tmp%10#0
        bz test_bool_array_after_if_else@10 ; b test_bool_array_if_body@9                         (𝕡) length#0 |

    test_bool_array_if_body@9:                                                                    (𝕡) length#0 |
        // array/immutable.py:158
        // assert arr[2], "expected element 2 to be True"
        int 2                                                                                     (𝕡) length#0 | 2
        v-load array_length#0                                                                     (𝕡) length#0 | 2,array_length#0
        <                                                                                         (𝕡) length#0 | lt%2#0
        assert // index access is out of bounds                                                   (𝕡) length#0 |
        v-load arr#0                                                                              (𝕡) length#0 | arr#0
        extract 2 0                                                                               (𝕡) length#0 | array_trimmed%2#0
        int 2                                                                                     (𝕡) length#0 | array_trimmed%2#0,2
        getbit                                                                                    (𝕡) length#0 | is_true%2#0
        assert // expected element 2 to be True                                                   (𝕡) length#0 |
        b test_bool_array_after_if_else@10                                                        (𝕡) length#0 |

    test_bool_array_after_if_else@10:                                                             (𝕡) length#0 |
        // array/immutable.py:159
        // if length > 3:
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        int 3                                                                                     (𝕡) length#0 | length#0 (copy),3
        >                                                                                         (𝕡) length#0 | tmp%11#0
        bz test_bool_array_after_if_else@12 ; b test_bool_array_if_body@11                        (𝕡) length#0 |

    test_bool_array_if_body@11:                                                                   (𝕡) length#0 |
        // array/immutable.py:160
        // assert not arr[length - 1], "expected last element to be False"
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        int 1                                                                                     (𝕡) length#0 | length#0 (copy),1
        -                                                                                         (𝕡) length#0 | tmp%12#0
        l-load-copy tmp%12#0 0                                                                    (𝕡) length#0 | tmp%12#0,tmp%12#0 (copy)
        v-load array_length#0                                                                     (𝕡) length#0 | tmp%12#0,tmp%12#0 (copy),array_length#0
        <                                                                                         (𝕡) length#0 | tmp%12#0,lt%3#0
        assert // index access is out of bounds                                                   (𝕡) length#0 | tmp%12#0
        v-load arr#0                                                                              (𝕡) length#0 | tmp%12#0,arr#0
        extract 2 0                                                                               (𝕡) length#0 | tmp%12#0,array_trimmed%3#0
        l-load tmp%12#0 1                                                                         (𝕡) length#0 | array_trimmed%3#0,tmp%12#0
        getbit                                                                                    (𝕡) length#0 | is_true%3#0
        !                                                                                         (𝕡) length#0 | tmp%13#0
        assert // expected last element to be False                                               (𝕡) length#0 |
        b test_bool_array_after_if_else@12                                                        (𝕡) length#0 |

    test_bool_array_after_if_else@12:                                                             (𝕡) length#0 |
        // array/immutable.py:162
        // self.g = arr
        byte "g"                                                                                  (𝕡) length#0 | "g"
        v-load arr#0                                                                              (𝕡) length#0 | "g",arr#0
        app_global_put                                                                            (𝕡) length#0 |
        // array/immutable.py:163
        // if length:
        p-load length#0                                                                           (𝕡) length#0 | length#0 (copy)
        bz test_bool_array_after_if_else@14 ; b test_bool_array_if_body@13                        (𝕡) length#0 |

    test_bool_array_if_body@13:                                                                   (𝕡) length#0 |
        v-load array_length#0                                                                     (𝕡) length#0 | array_length#0
        int 1                                                                                     (𝕡) length#0 | array_length#0,1
        -                                                                                         (𝕡) length#0 | length_minus_1#0
        l-load-copy length_minus_1#0 0                                                            (𝕡) length#0 | length_minus_1#0,length_minus_1#0 (copy)
        itob                                                                                      (𝕡) length#0 | length_minus_1#0,tmp%0#1
        extract 6 0                                                                               (𝕡) length#0 | length_minus_1#0,tmp%1#1
        v-load arr#0                                                                              (𝕡) length#0 | length_minus_1#0,tmp%1#1,arr#0
        l-load tmp%1#1 1                                                                          (𝕡) length#0 | length_minus_1#0,arr#0,tmp%1#1
        replace2 0                                                                                (𝕡) length#0 | length_minus_1#0,result#0
        l-load-copy length_minus_1#0 1                                                            (𝕡) length#0 | length_minus_1#0,result#0,length_minus_1#0 (copy)
        int 16                                                                                    (𝕡) length#0 | length_minus_1#0,result#0,length_minus_1#0 (copy),16
        +                                                                                         (𝕡) length#0 | length_minus_1#0,result#0,popped_location#0
        l-load result#0 1                                                                         (𝕡) length#0 | length_minus_1#0,popped_location#0,result#0
        l-load popped_location#0 1                                                                (𝕡) length#0 | length_minus_1#0,result#0,popped_location#0
        int 0                                                                                     (𝕡) length#0 | length_minus_1#0,result#0,popped_location#0,0
        setbit                                                                                    (𝕡) length#0 | length_minus_1#0,result#0
        l-load length_minus_1#0 1                                                                 (𝕡) length#0 | result#0,length_minus_1#0
        int 7                                                                                     (𝕡) length#0 | result#0,length_minus_1#0,7
        +                                                                                         (𝕡) length#0 | result#0,tmp%3#1
        int 8                                                                                     (𝕡) length#0 | result#0,tmp%3#1,8
        /                                                                                         (𝕡) length#0 | result#0,tmp%4#1
        int 2                                                                                     (𝕡) length#0 | result#0,tmp%4#1,2
        l-load tmp%4#1 1                                                                          (𝕡) length#0 | result#0,2,tmp%4#1
        +                                                                                         (𝕡) length#0 | result#0,tmp%5#1
        l-load result#0 1                                                                         (𝕡) length#0 | tmp%5#1,result#0
        int 0                                                                                     (𝕡) length#0 | tmp%5#1,result#0,0
        l-load tmp%5#1 2                                                                          (𝕡) length#0 | result#0,0,tmp%5#1
        substring3                                                                                (𝕡) length#0 | result#0
        // array/immutable.py:165
        // assert arr.length == length - 1
        int 0                                                                                     (𝕡) length#0 | result#0,0
        extract_uint16                                                                            (𝕡) length#0 | array%array_length%6#1
        p-load length#0                                                                           (𝕡) length#0 | array%array_length%6#1,length#0 (copy)
        int 1                                                                                     (𝕡) length#0 | array%array_length%6#1,length#0 (copy),1
        -                                                                                         (𝕡) length#0 | array%array_length%6#1,tmp%16#0
        l-load array%array_length%6#1 1                                                           (𝕡) length#0 | tmp%16#0,array%array_length%6#1
        l-load tmp%16#0 1                                                                         (𝕡) length#0 | array%array_length%6#1,tmp%16#0
        ==                                                                                        (𝕡) length#0 | tmp%17#0
        assert                                                                                    (𝕡) length#0 |
        b test_bool_array_after_if_else@14                                                        (𝕡) length#0 |

    test_bool_array_after_if_else@14:                                                             (𝕡) length#0 |
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_tuple_array() -> void:
subroutine test_fixed_size_tuple_array:
    test_fixed_size_tuple_array_block@0:
        // array/immutable.py:169
        // arr = ImmutableArray[tuple[UInt64, UInt64]]()
        byte 0x0000                                                                               0x0000
        v-store arr#0
        // array/immutable.py:172
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_fixed_size_tuple_array_for_header@1

    test_fixed_size_tuple_array_for_header@1:
        // array/immutable.py:172
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%0#0
        bz test_fixed_size_tuple_array_after_for@4 ; b test_fixed_size_tuple_array_for_body@2 

    test_fixed_size_tuple_array_for_body@2:
        // array/immutable.py:173
        // arr = arr.append((i + 1, i + 2))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        int 1                                                                                     i#0,i#0 (copy),1
        +                                                                                         i#0,i#2
        l-load i#0 1                                                                              i#2,i#0
        int 2                                                                                     i#2,i#0,2
        +                                                                                         i#2,tmp%3#0
        l-load-copy i#2 1                                                                         i#2,tmp%3#0,i#2 (copy)
        itob                                                                                      i#2,tmp%3#0,val_as_bytes%0#0
        l-load tmp%3#0 1                                                                          i#2,val_as_bytes%0#0,tmp%3#0
        itob                                                                                      i#2,val_as_bytes%0#0,val_as_bytes%1#0
        l-load val_as_bytes%0#0 1                                                                 i#2,val_as_bytes%1#0,val_as_bytes%0#0
        l-load val_as_bytes%1#0 1                                                                 i#2,val_as_bytes%0#0,val_as_bytes%1#0
        concat                                                                                    i#2,encoded%3#0
        v-load arr#0                                                                              i#2,encoded%3#0,arr#0
        l-load encoded%3#0 1                                                                      i#2,arr#0,encoded%3#0
        concat // on error: max array length exceeded                                             i#2,concat%0#0
        l-load-copy concat%0#0 0                                                                  i#2,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               i#2,concat%0#0,extract_to_end%0#0
        len                                                                                       i#2,concat%0#0,len%0#0
        int 16                                                                                    i#2,concat%0#0,len%0#0,16
        /                                                                                         i#2,concat%0#0,div_floor%0#0
        itob                                                                                      i#2,concat%0#0,as_bytes%1#0
        extract 6 2                                                                               i#2,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       i#2,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 i#2,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                i#2,arr#0
        v-store arr#0                                                                             i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_fixed_size_tuple_array_for_header@1

    test_fixed_size_tuple_array_after_for@4:
        // array/immutable.py:175
        // assert arr.length == 5
        v-load arr#0                                                                              arr#0
        l-store-copy arr#0 0                                                                      arr#0,arr#0 (copy)
        int 0                                                                                     arr#0,arr#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%1#1
        l-load-copy array%array_length%1#1 0                                                      arr#0,array%array_length%1#1,array%array_length%1#1 (copy)
        int 5                                                                                     arr#0,array%array_length%1#1,array%array_length%1#1 (copy),5
        ==                                                                                        arr#0,array%array_length%1#1,tmp%5#0
        assert                                                                                    arr#0,array%array_length%1#1
        // array/immutable.py:176
        // assert arr[0] == (UInt64(1), UInt64(2))
        l-load-copy arr#0 1                                                                       arr#0,array%array_length%1#1,arr#0 (copy)
        extract 2 0                                                                               arr#0,array%array_length%1#1,array_trimmed%0#0
        l-load-copy arr#0 2                                                                       arr#0,array%array_length%1#1,array_trimmed%0#0,arr#0 (copy)
        extract 2 16                                                                              arr#0,array%array_length%1#1,array_trimmed%0#0,encoded_element%0#0
        l-load-copy encoded_element%0#0 0                                                         arr#0,array%array_length%1#1,array_trimmed%0#0,encoded_element%0#0,encoded_element%0#0 (copy)
        int 0                                                                                     arr#0,array%array_length%1#1,array_trimmed%0#0,encoded_element%0#0,encoded_element%0#0 (copy),0
        extract_uint64                                                                            arr#0,array%array_length%1#1,array_trimmed%0#0,encoded_element%0#0,array%item0%0#1
        l-load encoded_element%0#0 1                                                              arr#0,array%array_length%1#1,array_trimmed%0#0,array%item0%0#1,encoded_element%0#0
        int 8                                                                                     arr#0,array%array_length%1#1,array_trimmed%0#0,array%item0%0#1,encoded_element%0#0,8
        extract_uint64                                                                            arr#0,array%array_length%1#1,array_trimmed%0#0,array%item0%0#1,array%item1%0#1
        l-load array%item0%0#1 1                                                                  arr#0,array%array_length%1#1,array_trimmed%0#0,array%item1%0#1,array%item0%0#1
        int 1                                                                                     arr#0,array%array_length%1#1,array_trimmed%0#0,array%item1%0#1,array%item0%0#1,1
        ==                                                                                        arr#0,array%array_length%1#1,array_trimmed%0#0,array%item1%0#1,tmp%6#0
        l-load array%item1%0#1 1                                                                  arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%6#0,array%item1%0#1
        int 2                                                                                     arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%6#0,array%item1%0#1,2
        ==                                                                                        arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%6#0,tmp%7#0
        l-load tmp%6#0 1                                                                          arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%7#0,tmp%6#0
        l-load tmp%7#0 1                                                                          arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%6#0,tmp%7#0
        &&                                                                                        arr#0,array%array_length%1#1,array_trimmed%0#0,tmp%8#0
        assert                                                                                    arr#0,array%array_length%1#1,array_trimmed%0#0
        // array/immutable.py:177
        // assert arr[-1] == (UInt64(5), UInt64(6))
        l-load array%array_length%1#1 1                                                           arr#0,array_trimmed%0#0,array%array_length%1#1
        int 1                                                                                     arr#0,array_trimmed%0#0,array%array_length%1#1,1
        -                                                                                         arr#0,array_trimmed%0#0,tmp%10#0
        int 16                                                                                    arr#0,array_trimmed%0#0,tmp%10#0,16
        *                                                                                         arr#0,array_trimmed%0#0,bytes_offset%1#0
        l-load array_trimmed%0#0 1                                                                arr#0,bytes_offset%1#0,array_trimmed%0#0
        l-load bytes_offset%1#0 1                                                                 arr#0,array_trimmed%0#0,bytes_offset%1#0
        int 16                                                                                    arr#0,array_trimmed%0#0,bytes_offset%1#0,16
        extract3 // on error: index access is out of bounds                                       arr#0,encoded_element%1#0
        l-load-copy encoded_element%1#0 0                                                         arr#0,encoded_element%1#0,encoded_element%1#0 (copy)
        int 0                                                                                     arr#0,encoded_element%1#0,encoded_element%1#0 (copy),0
        extract_uint64                                                                            arr#0,encoded_element%1#0,array%item0%1#1
        l-load encoded_element%1#0 1                                                              arr#0,array%item0%1#1,encoded_element%1#0
        int 8                                                                                     arr#0,array%item0%1#1,encoded_element%1#0,8
        extract_uint64                                                                            arr#0,array%item0%1#1,array%item1%1#1
        l-load array%item0%1#1 1                                                                  arr#0,array%item1%1#1,array%item0%1#1
        int 5                                                                                     arr#0,array%item1%1#1,array%item0%1#1,5
        ==                                                                                        arr#0,array%item1%1#1,tmp%11#0
        l-load array%item1%1#1 1                                                                  arr#0,tmp%11#0,array%item1%1#1
        int 6                                                                                     arr#0,tmp%11#0,array%item1%1#1,6
        ==                                                                                        arr#0,tmp%11#0,tmp%12#0
        l-load tmp%11#0 1                                                                         arr#0,tmp%12#0,tmp%11#0
        l-load tmp%12#0 1                                                                         arr#0,tmp%11#0,tmp%12#0
        &&                                                                                        arr#0,tmp%13#0
        assert                                                                                    arr#0
        // array/immutable.py:179
        // arr = arr.pop()
        l-load arr#0 0                                                                            arr#0
        int 16                                                                                    arr#0,16
        callsub dynamic_array_pop_fixed_size                                                      popped%0#0,arr#0
        l-store arr#0 1                                                                           arr#0,popped%0#0
        pop 1                                                                                     arr#0
        // array/immutable.py:180
        // assert arr.length == 4
        l-load-copy arr#0 0                                                                       arr#0,arr#0 (copy)
        int 0                                                                                     arr#0,arr#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%3#1
        l-load-copy array%array_length%3#1 0                                                      arr#0,array%array_length%3#1,array%array_length%3#1 (copy)
        int 4                                                                                     arr#0,array%array_length%3#1,array%array_length%3#1 (copy),4
        ==                                                                                        arr#0,array%array_length%3#1,tmp%15#0
        assert                                                                                    arr#0,array%array_length%3#1
        // array/immutable.py:181
        // assert arr[0] == (UInt64(1), UInt64(2))
        l-load-copy arr#0 1                                                                       arr#0,array%array_length%3#1,arr#0 (copy)
        extract 2 0                                                                               arr#0,array%array_length%3#1,array_trimmed%2#0
        l-load-copy arr#0 2                                                                       arr#0,array%array_length%3#1,array_trimmed%2#0,arr#0 (copy)
        extract 2 16                                                                              arr#0,array%array_length%3#1,array_trimmed%2#0,encoded_element%2#0
        l-load-copy encoded_element%2#0 0                                                         arr#0,array%array_length%3#1,array_trimmed%2#0,encoded_element%2#0,encoded_element%2#0 (copy)
        int 0                                                                                     arr#0,array%array_length%3#1,array_trimmed%2#0,encoded_element%2#0,encoded_element%2#0 (copy),0
        extract_uint64                                                                            arr#0,array%array_length%3#1,array_trimmed%2#0,encoded_element%2#0,array%item0%2#1
        l-load encoded_element%2#0 1                                                              arr#0,array%array_length%3#1,array_trimmed%2#0,array%item0%2#1,encoded_element%2#0
        int 8                                                                                     arr#0,array%array_length%3#1,array_trimmed%2#0,array%item0%2#1,encoded_element%2#0,8
        extract_uint64                                                                            arr#0,array%array_length%3#1,array_trimmed%2#0,array%item0%2#1,array%item1%2#1
        l-load array%item0%2#1 1                                                                  arr#0,array%array_length%3#1,array_trimmed%2#0,array%item1%2#1,array%item0%2#1
        int 1                                                                                     arr#0,array%array_length%3#1,array_trimmed%2#0,array%item1%2#1,array%item0%2#1,1
        ==                                                                                        arr#0,array%array_length%3#1,array_trimmed%2#0,array%item1%2#1,tmp%16#0
        l-load array%item1%2#1 1                                                                  arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%16#0,array%item1%2#1
        int 2                                                                                     arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%16#0,array%item1%2#1,2
        ==                                                                                        arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%16#0,tmp%17#0
        l-load tmp%16#0 1                                                                         arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%17#0,tmp%16#0
        l-load tmp%17#0 1                                                                         arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%16#0,tmp%17#0
        &&                                                                                        arr#0,array%array_length%3#1,array_trimmed%2#0,tmp%18#0
        assert                                                                                    arr#0,array%array_length%3#1,array_trimmed%2#0
        // array/immutable.py:182
        // assert arr[-1] == (UInt64(4), UInt64(5))
        l-load array%array_length%3#1 1                                                           arr#0,array_trimmed%2#0,array%array_length%3#1
        int 1                                                                                     arr#0,array_trimmed%2#0,array%array_length%3#1,1
        -                                                                                         arr#0,array_trimmed%2#0,tmp%20#0
        int 16                                                                                    arr#0,array_trimmed%2#0,tmp%20#0,16
        *                                                                                         arr#0,array_trimmed%2#0,bytes_offset%3#0
        l-load array_trimmed%2#0 1                                                                arr#0,bytes_offset%3#0,array_trimmed%2#0
        l-load bytes_offset%3#0 1                                                                 arr#0,array_trimmed%2#0,bytes_offset%3#0
        int 16                                                                                    arr#0,array_trimmed%2#0,bytes_offset%3#0,16
        extract3 // on error: index access is out of bounds                                       arr#0,encoded_element%3#0
        l-load-copy encoded_element%3#0 0                                                         arr#0,encoded_element%3#0,encoded_element%3#0 (copy)
        int 0                                                                                     arr#0,encoded_element%3#0,encoded_element%3#0 (copy),0
        extract_uint64                                                                            arr#0,encoded_element%3#0,array%item0%3#1
        l-load encoded_element%3#0 1                                                              arr#0,array%item0%3#1,encoded_element%3#0
        int 8                                                                                     arr#0,array%item0%3#1,encoded_element%3#0,8
        extract_uint64                                                                            arr#0,array%item0%3#1,array%item1%3#1
        l-load array%item0%3#1 1                                                                  arr#0,array%item1%3#1,array%item0%3#1
        int 4                                                                                     arr#0,array%item1%3#1,array%item0%3#1,4
        ==                                                                                        arr#0,array%item1%3#1,tmp%21#0
        l-load array%item1%3#1 1                                                                  arr#0,tmp%21#0,array%item1%3#1
        int 5                                                                                     arr#0,tmp%21#0,array%item1%3#1,5
        ==                                                                                        arr#0,tmp%21#0,tmp%22#0
        l-load tmp%21#0 1                                                                         arr#0,tmp%22#0,tmp%21#0
        l-load tmp%22#0 1                                                                         arr#0,tmp%21#0,tmp%22#0
        &&                                                                                        arr#0,tmp%23#0
        assert                                                                                    arr#0
        // array/immutable.py:183
        // self.c = arr
        byte "c"                                                                                  arr#0,"c"
        l-load arr#0 1                                                                            "c",arr#0
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_fixed_size_named_tuple_array() -> void:
subroutine test_fixed_size_named_tuple_array:
    test_fixed_size_named_tuple_array_block@0:
        // array/immutable.py:187
        // arr = ImmutableArray[MyTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr#0
        // array/immutable.py:190
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_fixed_size_named_tuple_array_for_header@1

    test_fixed_size_named_tuple_array_for_header@1:
        // array/immutable.py:190
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%0#0
        bz test_fixed_size_named_tuple_array_after_for@4 ; b test_fixed_size_named_tuple_array_for_body@2 

    test_fixed_size_named_tuple_array_for_body@2:
        // array/immutable.py:191
        // arr = arr.append(MyTuple(foo=i, bar=i % 2 == 0, baz=i * 3 % 2 == 0))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        int 2                                                                                     i#0,i#0 (copy),2
        %                                                                                         i#0,tmp%2#0
        !                                                                                         i#0,tmp%3#0
        l-load-copy i#0 1                                                                         i#0,tmp%3#0,i#0 (copy)
        int 3                                                                                     i#0,tmp%3#0,i#0 (copy),3
        *                                                                                         i#0,tmp%3#0,tmp%4#0
        int 2                                                                                     i#0,tmp%3#0,tmp%4#0,2
        %                                                                                         i#0,tmp%3#0,tmp%5#0
        !                                                                                         i#0,tmp%3#0,tmp%6#0
        l-load-copy i#0 2                                                                         i#0,tmp%3#0,tmp%6#0,i#0 (copy)
        itob                                                                                      i#0,tmp%3#0,tmp%6#0,val_as_bytes%0#0
        byte 0x00                                                                                 i#0,tmp%3#0,tmp%6#0,val_as_bytes%0#0,0x00
        int 0                                                                                     i#0,tmp%3#0,tmp%6#0,val_as_bytes%0#0,0x00,0
        l-load tmp%3#0 4                                                                          i#0,tmp%6#0,val_as_bytes%0#0,0x00,0,tmp%3#0
        setbit                                                                                    i#0,tmp%6#0,val_as_bytes%0#0,encoded_bit%0#0
        l-load val_as_bytes%0#0 1                                                                 i#0,tmp%6#0,encoded_bit%0#0,val_as_bytes%0#0
        l-load encoded_bit%0#0 1                                                                  i#0,tmp%6#0,val_as_bytes%0#0,encoded_bit%0#0
        concat                                                                                    i#0,tmp%6#0,encoded%3#0
        int 65                                                                                    i#0,tmp%6#0,encoded%3#0,65
        l-load tmp%6#0 2                                                                          i#0,encoded%3#0,65,tmp%6#0
        setbit                                                                                    i#0,set_bit%0#0
        v-load arr#0                                                                              i#0,set_bit%0#0,arr#0
        l-load set_bit%0#0 1                                                                      i#0,arr#0,set_bit%0#0
        concat // on error: max array length exceeded                                             i#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  i#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               i#0,concat%0#0,extract_to_end%0#0
        len                                                                                       i#0,concat%0#0,len%0#0
        int 9                                                                                     i#0,concat%0#0,len%0#0,9
        /                                                                                         i#0,concat%0#0,div_floor%0#0
        itob                                                                                      i#0,concat%0#0,as_bytes%1#0
        extract 6 2                                                                               i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                i#0,arr#0
        v-store arr#0                                                                             i#0
        // array/immutable.py:190
        // for i in urange(5):
        l-load i#0 0                                                                              i#0
        int 1                                                                                     i#0,1
        +                                                                                         i#0
        v-store i#0
        b test_fixed_size_named_tuple_array_for_header@1

    test_fixed_size_named_tuple_array_after_for@4:
        // array/immutable.py:193
        // assert arr.length == 5
        v-load arr#0                                                                              arr#0
        l-store-copy arr#0 0                                                                      arr#0,arr#0 (copy)
        int 0                                                                                     arr#0,arr#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%1#1
        int 5                                                                                     arr#0,array%array_length%1#1,5
        ==                                                                                        arr#0,tmp%8#0
        assert                                                                                    arr#0
        // array/immutable.py:194
        // foo, bar, baz = arr[0]
        l-load-copy arr#0 0                                                                       arr#0,arr#0 (copy)
        extract 2 9                                                                               arr#0,encoded_element%0#0
        l-load-copy encoded_element%0#0 0                                                         arr#0,encoded_element%0#0,encoded_element%0#0 (copy)
        int 0                                                                                     arr#0,encoded_element%0#0,encoded_element%0#0 (copy),0
        extract_uint64                                                                            arr#0,encoded_element%0#0,foo#0
        l-load-copy encoded_element%0#0 1                                                         arr#0,encoded_element%0#0,foo#0,encoded_element%0#0 (copy)
        int 64                                                                                    arr#0,encoded_element%0#0,foo#0,encoded_element%0#0 (copy),64
        getbit                                                                                    arr#0,encoded_element%0#0,foo#0,array%is_true%0#1
        byte 0x00                                                                                 arr#0,encoded_element%0#0,foo#0,array%is_true%0#1,0x00
        int 0                                                                                     arr#0,encoded_element%0#0,foo#0,array%is_true%0#1,0x00,0
        l-load array%is_true%0#1 2                                                                arr#0,encoded_element%0#0,foo#0,0x00,0,array%is_true%0#1
        setbit                                                                                    arr#0,encoded_element%0#0,foo#0,array%encoded_bool%0#1
        int 0                                                                                     arr#0,encoded_element%0#0,foo#0,array%encoded_bool%0#1,0
        getbit                                                                                    arr#0,encoded_element%0#0,foo#0,bar#0
        l-load encoded_element%0#0 2                                                              arr#0,foo#0,bar#0,encoded_element%0#0
        int 65                                                                                    arr#0,foo#0,bar#0,encoded_element%0#0,65
        getbit                                                                                    arr#0,foo#0,bar#0,array%is_true%1#1
        byte 0x00                                                                                 arr#0,foo#0,bar#0,array%is_true%1#1,0x00
        int 0                                                                                     arr#0,foo#0,bar#0,array%is_true%1#1,0x00,0
        l-load array%is_true%1#1 2                                                                arr#0,foo#0,bar#0,0x00,0,array%is_true%1#1
        setbit                                                                                    arr#0,foo#0,bar#0,array%encoded_bool%1#1
        int 0                                                                                     arr#0,foo#0,bar#0,array%encoded_bool%1#1,0
        getbit                                                                                    arr#0,foo#0,bar#0,baz#0
        // array/immutable.py:195
        // assert foo == 0
        l-load foo#0 2                                                                            arr#0,bar#0,baz#0,foo#0
        !                                                                                         arr#0,bar#0,baz#0,tmp%9#0
        assert                                                                                    arr#0,bar#0,baz#0
        // array/immutable.py:196
        // assert bar
        l-load bar#0 1                                                                            arr#0,baz#0,bar#0
        assert                                                                                    arr#0,baz#0
        // array/immutable.py:197
        // assert baz
        l-load baz#0 0                                                                            arr#0,baz#0
        assert                                                                                    arr#0
        // array/immutable.py:198
        // self.d = arr
        byte "d"                                                                                  arr#0,"d"
        l-load arr#0 1                                                                            "d",arr#0
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_tuple_array() -> void:
subroutine test_dynamic_sized_tuple_array:
    test_dynamic_sized_tuple_array_block@0:
        // array/immutable.py:202
        // arr = ImmutableArray[tuple[UInt64, Bytes]]()
        byte 0x0000                                                                               0x0000
        v-store arr#0
        // array/immutable.py:205
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_dynamic_sized_tuple_array_for_header@1

    test_dynamic_sized_tuple_array_for_header@1:
        // array/immutable.py:205
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%0#0
        bz test_dynamic_sized_tuple_array_after_for@4 ; b test_dynamic_sized_tuple_array_for_body@2 

    test_dynamic_sized_tuple_array_for_body@2:
        // array/immutable.py:206
        // arr = arr.append((i + 1, op.bzero(i)))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        int 1                                                                                     i#0,i#0 (copy),1
        +                                                                                         i#0,i#2
        l-load i#0 1                                                                              i#2,i#0
        bzero                                                                                     i#2,tmp%3#0
        v-load arr#0                                                                              i#2,tmp%3#0,arr#0
        l-store-copy arr#0 0                                                                      i#2,tmp%3#0,arr#0,arr#0 (copy)
        int 0                                                                                     i#2,tmp%3#0,arr#0,arr#0 (copy),0
        extract_uint16                                                                            i#2,tmp%3#0,arr#0,extract_uint16%0#0
        l-load arr#0 1                                                                            i#2,tmp%3#0,extract_uint16%0#0,arr#0
        extract 2 0                                                                               i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0
        l-load-copy i#2 3                                                                         i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,i#2 (copy)
        itob                                                                                      i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0
        l-load-copy tmp%3#0 3                                                                     i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,tmp%3#0 (copy)
        len                                                                                       i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length%0#0
        itob                                                                                      i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,as_bytes%1#0
        extract 6 2                                                                               i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length_uint16%0#0
        l-load tmp%3#0 4                                                                          i#2,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length_uint16%0#0,tmp%3#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,encoded_value%0#0
        l-load val_as_bytes%0#0 1                                                                 i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,val_as_bytes%0#0
        byte 0x000a                                                                               i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,val_as_bytes%0#0,0x000a
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,encoded%3#0
        l-load encoded_value%0#0 1                                                                i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%3#0,encoded_value%0#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%4#0
        byte 0x0002                                                                               i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%4#0,0x0002
        l-load encoded%4#0 1                                                                      i#2,extract_uint16%0#0,extract_to_end%0#0,0x0002,encoded%4#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%6#0
        l-load extract_uint16%0#0 2                                                               i#2,extract_to_end%0#0,encoded%6#0,extract_uint16%0#0
        l-load extract_to_end%0#0 2                                                               i#2,encoded%6#0,extract_uint16%0#0,extract_to_end%0#0
        int 1                                                                                     i#2,encoded%6#0,extract_uint16%0#0,extract_to_end%0#0,1
        l-load encoded%6#0 3                                                                      i#2,extract_uint16%0#0,extract_to_end%0#0,1,encoded%6#0
        callsub dynamic_array_concat_dynamic_element                                              i#2,arr#0
        v-store arr#0                                                                             i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_dynamic_sized_tuple_array_for_header@1

    test_dynamic_sized_tuple_array_after_for@4:
        // array/immutable.py:208
        // assert arr.length == 5
        v-load arr#0                                                                              arr#0
        int 0                                                                                     arr#0,0
        extract_uint16                                                                            array%array_length%1#1
        l-store-copy array%array_length%1#1 0                                                     array%array_length%1#1,array%array_length%1#1 (copy)
        v-store array%array_length%1#1                                                            array%array_length%1#1
        l-load array%array_length%1#1 0                                                           array%array_length%1#1
        int 5                                                                                     array%array_length%1#1,5
        ==                                                                                        tmp%5#0
        assert
        // array/immutable.py:209
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_dynamic_sized_tuple_array_for_header@5

    test_dynamic_sized_tuple_array_for_header@5:
        // array/immutable.py:209
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%1#0
        bz test_dynamic_sized_tuple_array_after_for@8 ; b test_dynamic_sized_tuple_array_for_body@6 

    test_dynamic_sized_tuple_array_for_body@6:
        // array/immutable.py:210
        // assert arr[i][0] == i + 1, "expected 1st element to be correct"
        v-load arr#0                                                                              arr#0
        extract 2 0                                                                               array_head_and_tail%0#0
        v-load i#0                                                                                array_head_and_tail%0#0,i#0
        l-store-copy i#0 1                                                                        i#0,array_head_and_tail%0#0,i#0 (copy)
        int 2                                                                                     i#0,array_head_and_tail%0#0,i#0 (copy),2
        *                                                                                         i#0,array_head_and_tail%0#0,item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 1                                                     i#0,array_head_and_tail%0#0,item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset_offset%0#0 1                                                           i#0,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),item_offset_offset%0#0
        extract_uint16                                                                            i#0,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy i#0 2                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#0 (copy)
        int 1                                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#0 (copy),1
        +                                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2
        v-load array%array_length%1#1                                                             i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,array%array_length%1#1
        l-load-copy i#2 1                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,array%array_length%1#1,i#2 (copy)
        - // on error: index access is out of bounds                                              i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                       i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0
        l-load-copy i#2 2                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,i#2 (copy)
        int 2                                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,i#2 (copy),2
        *                                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load next_item_offset_offset%0#0 1                                                      i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),next_item_offset_offset%0#0
        extract_uint16                                                                            i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load end_of_array%0#0 1                                                                 i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,next_item_offset%0#0,end_of_array%0#0
        l-load next_item_offset%0#0 1                                                             i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load has_next%0#0 2                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,end_of_array%0#0,next_item_offset%0#0,has_next%0#0
        select                                                                                    i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,end_offset%0#0
        l-load array_head_and_tail%0#0 3                                                          i#0,item_offset%0#0,i#2,end_offset%0#0,array_head_and_tail%0#0
        l-load item_offset%0#0 3                                                                  i#0,i#2,end_offset%0#0,array_head_and_tail%0#0,item_offset%0#0
        l-load end_offset%0#0 2                                                                   i#0,i#2,array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0
        substring3                                                                                i#0,i#2,substring3%0#0
        l-load-copy substring3%0#0 0                                                              i#0,i#2,substring3%0#0,substring3%0#0 (copy)
        int 0                                                                                     i#0,i#2,substring3%0#0,substring3%0#0 (copy),0
        extract_uint64                                                                            i#0,i#2,substring3%0#0,array%item0%0#1
        l-load-copy i#2 2                                                                         i#0,i#2,substring3%0#0,array%item0%0#1,i#2 (copy)
        ==                                                                                        i#0,i#2,substring3%0#0,tmp%9#0
        assert // expected 1st element to be correct                                              i#0,i#2,substring3%0#0
        // array/immutable.py:211
        // assert arr[i][1].length == i, "expected 2nd element to be correct"
        l-load-copy substring3%0#0 0                                                              i#0,i#2,substring3%0#0,substring3%0#0 (copy)
        int 8                                                                                     i#0,i#2,substring3%0#0,substring3%0#0 (copy),8
        extract_uint16                                                                            i#0,i#2,substring3%0#0,array%item_start_offset%1#1
        l-load-copy substring3%0#0 1                                                              i#0,i#2,substring3%0#0,array%item_start_offset%1#1,substring3%0#0 (copy)
        len                                                                                       i#0,i#2,substring3%0#0,array%item_start_offset%1#1,array%item_end_offset%1#1
        l-load substring3%0#0 2                                                                   i#0,i#2,array%item_start_offset%1#1,array%item_end_offset%1#1,substring3%0#0
        l-load array%item_start_offset%1#1 2                                                      i#0,i#2,array%item_end_offset%1#1,substring3%0#0,array%item_start_offset%1#1
        l-load array%item_end_offset%1#1 2                                                        i#0,i#2,substring3%0#0,array%item_start_offset%1#1,array%item_end_offset%1#1
        substring3                                                                                i#0,i#2,array%encoded_item1%1#1
        extract 2 0                                                                               i#0,i#2,array%item1%1#1
        len                                                                                       i#0,i#2,tmp%12#0
        l-load i#0 2                                                                              i#2,tmp%12#0,i#0
        ==                                                                                        i#2,tmp%13#0
        assert // expected 2nd element to be correct                                              i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_dynamic_sized_tuple_array_for_header@5

    test_dynamic_sized_tuple_array_after_for@8:
        // array/immutable.py:213
        // arr = arr.pop()
        v-load arr#0                                                                              arr#0
        callsub dynamic_array_pop_dynamic_element                                                 popped%0#0,arr#0
        l-store arr#0 1                                                                           arr#0,popped%0#0
        pop 1                                                                                     arr#0
        // array/immutable.py:214
        // assert arr.length == 4
        l-load-copy arr#0 0                                                                       arr#0,arr#0 (copy)
        int 0                                                                                     arr#0,arr#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%4#1
        l-load-copy array%array_length%4#1 0                                                      arr#0,array%array_length%4#1,array%array_length%4#1 (copy)
        int 4                                                                                     arr#0,array%array_length%4#1,array%array_length%4#1 (copy),4
        ==                                                                                        arr#0,array%array_length%4#1,tmp%15#0
        assert                                                                                    arr#0,array%array_length%4#1
        // array/immutable.py:215
        // assert arr[0] == (UInt64(1), op.bzero(0)), "expected 1, 0"
        l-load-copy arr#0 1                                                                       arr#0,array%array_length%4#1,arr#0 (copy)
        extract 2 0                                                                               arr#0,array%array_length%4#1,array_head_and_tail%2#0
        l-load-copy array_head_and_tail%2#0 0                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy)
        int 0                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0
        l-load-copy array%array_length%4#1 2                                                      arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,array%array_length%4#1 (copy)
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,array%array_length%4#1 (copy),1
        - // on error: index access is out of bounds                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0
        l-load-copy array_head_and_tail%2#0 2                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,array_head_and_tail%2#0 (copy)
        len                                                                                       arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0
        l-load-copy array_head_and_tail%2#0 3                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy)
        int 2                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),2
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0
        l-load-copy end_of_array%2#0 1                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0,end_of_array%2#0 (copy)
        l-load next_item_offset%2#0 1                                                             arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_of_array%2#0 (copy),next_item_offset%2#0
        l-load-copy has_next%2#0 3                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_of_array%2#0 (copy),next_item_offset%2#0,has_next%2#0 (copy)
        select                                                                                    arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0
        l-load-copy array_head_and_tail%2#0 4                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0,array_head_and_tail%2#0 (copy)
        l-load item_offset%2#0 4                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0,array_head_and_tail%2#0 (copy),item_offset%2#0
        l-load end_offset%2#0 2                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),item_offset%2#0,end_offset%2#0
        substring3                                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0
        l-load-copy substring3%2#0 0                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,substring3%2#0 (copy)
        int 0                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,substring3%2#0 (copy),0
        extract_uint64                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1
        l-load-copy substring3%2#0 1                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,substring3%2#0 (copy)
        int 8                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,substring3%2#0 (copy),8
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1
        l-load-copy substring3%2#0 2                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1,substring3%2#0 (copy)
        len                                                                                       arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1,array%item_end_offset%2#1
        l-load substring3%2#0 3                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item_start_offset%2#1,array%item_end_offset%2#1,substring3%2#0
        l-load array%item_start_offset%2#1 2                                                      arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item_end_offset%2#1,substring3%2#0,array%item_start_offset%2#1
        l-load array%item_end_offset%2#1 2                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,substring3%2#0,array%item_start_offset%2#1,array%item_end_offset%2#1
        substring3                                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%encoded_item1%2#1
        extract 2 0                                                                               arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item1%2#1
        l-load array%item0%2#1 1                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,array%item0%2#1
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,array%item0%2#1,1
        ==                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,tmp%16#0
        int 0                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,tmp%16#0,0
        bzero                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,tmp%16#0,tmp%17#0
        l-load array%item1%2#1 2                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,tmp%17#0,array%item1%2#1
        l-load tmp%17#0 1                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,array%item1%2#1,tmp%17#0
        ==                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,tmp%18#0
        l-load tmp%16#0 1                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%18#0,tmp%16#0
        l-load tmp%18#0 1                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,tmp%18#0
        &&                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%19#0
        assert // expected 1, 0                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0
        // array/immutable.py:216
        // assert arr[-1] == (UInt64(4), op.bzero(3)), "expected 4, 3"
        l-load-copy has_next%2#0 1                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,has_next%2#0 (copy)
        int 2                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,has_next%2#0 (copy),2
        *                                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset_offset%3#0
        l-load-copy array_head_and_tail%2#0 3                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset_offset%3#0,array_head_and_tail%2#0 (copy)
        l-load item_offset_offset%3#0 1                                                           arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),item_offset_offset%3#0
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset%3#0
        l-load has_next%2#0 2                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%2#0
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%2#0,1
        +                                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0
        l-load array%array_length%4#1 4                                                           arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,array%array_length%4#1
        l-load-copy next_index%3#0 1                                                              arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,array%array_length%4#1,next_index%3#0 (copy)
        - // on error: index access is out of bounds                                              arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,has_next%3#0
        l-load next_index%3#0 1                                                                   arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_index%3#0
        int 2                                                                                     arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_index%3#0,2
        *                                                                                         arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset_offset%3#0
        l-load-copy array_head_and_tail%2#0 4                                                     arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset_offset%3#0,array_head_and_tail%2#0 (copy)
        l-load next_item_offset_offset%3#0 1                                                      arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,array_head_and_tail%2#0 (copy),next_item_offset_offset%3#0
        extract_uint16                                                                            arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset%3#0
        l-load end_of_array%2#0 3                                                                 arr#0,array_head_and_tail%2#0,item_offset%3#0,has_next%3#0,next_item_offset%3#0,end_of_array%2#0
        l-load next_item_offset%3#0 1                                                             arr#0,array_head_and_tail%2#0,item_offset%3#0,has_next%3#0,end_of_array%2#0,next_item_offset%3#0
        l-load has_next%3#0 2                                                                     arr#0,array_head_and_tail%2#0,item_offset%3#0,end_of_array%2#0,next_item_offset%3#0,has_next%3#0
        select                                                                                    arr#0,array_head_and_tail%2#0,item_offset%3#0,end_offset%3#0
        l-load array_head_and_tail%2#0 2                                                          arr#0,item_offset%3#0,end_offset%3#0,array_head_and_tail%2#0
        l-load item_offset%3#0 2                                                                  arr#0,end_offset%3#0,array_head_and_tail%2#0,item_offset%3#0
        l-load end_offset%3#0 2                                                                   arr#0,array_head_and_tail%2#0,item_offset%3#0,end_offset%3#0
        substring3                                                                                arr#0,substring3%3#0
        l-load-copy substring3%3#0 0                                                              arr#0,substring3%3#0,substring3%3#0 (copy)
        int 0                                                                                     arr#0,substring3%3#0,substring3%3#0 (copy),0
        extract_uint64                                                                            arr#0,substring3%3#0,array%item0%3#1
        l-load-copy substring3%3#0 1                                                              arr#0,substring3%3#0,array%item0%3#1,substring3%3#0 (copy)
        int 8                                                                                     arr#0,substring3%3#0,array%item0%3#1,substring3%3#0 (copy),8
        extract_uint16                                                                            arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1
        l-load-copy substring3%3#0 2                                                              arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1,substring3%3#0 (copy)
        len                                                                                       arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1,array%item_end_offset%3#1
        l-load substring3%3#0 3                                                                   arr#0,array%item0%3#1,array%item_start_offset%3#1,array%item_end_offset%3#1,substring3%3#0
        l-load array%item_start_offset%3#1 2                                                      arr#0,array%item0%3#1,array%item_end_offset%3#1,substring3%3#0,array%item_start_offset%3#1
        l-load array%item_end_offset%3#1 2                                                        arr#0,array%item0%3#1,substring3%3#0,array%item_start_offset%3#1,array%item_end_offset%3#1
        substring3                                                                                arr#0,array%item0%3#1,array%encoded_item1%3#1
        extract 2 0                                                                               arr#0,array%item0%3#1,array%item1%3#1
        l-load array%item0%3#1 1                                                                  arr#0,array%item1%3#1,array%item0%3#1
        int 4                                                                                     arr#0,array%item1%3#1,array%item0%3#1,4
        ==                                                                                        arr#0,array%item1%3#1,tmp%22#0
        int 3                                                                                     arr#0,array%item1%3#1,tmp%22#0,3
        bzero                                                                                     arr#0,array%item1%3#1,tmp%22#0,tmp%23#0
        l-load array%item1%3#1 2                                                                  arr#0,tmp%22#0,tmp%23#0,array%item1%3#1
        l-load tmp%23#0 1                                                                         arr#0,tmp%22#0,array%item1%3#1,tmp%23#0
        ==                                                                                        arr#0,tmp%22#0,tmp%24#0
        l-load tmp%22#0 1                                                                         arr#0,tmp%24#0,tmp%22#0
        l-load tmp%24#0 1                                                                         arr#0,tmp%22#0,tmp%24#0
        &&                                                                                        arr#0,tmp%25#0
        assert // expected 4, 3                                                                   arr#0
        // array/immutable.py:217
        // self.e = arr
        byte "e"                                                                                  arr#0,"e"
        l-load arr#0 1                                                                            "e",arr#0
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_dynamic_sized_named_tuple_array() -> void:
subroutine test_dynamic_sized_named_tuple_array:
    test_dynamic_sized_named_tuple_array_block@0:
        // array/immutable.py:221
        // arr = ImmutableArray[MyDynamicSizedTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr#0
        // array/immutable.py:224
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_dynamic_sized_named_tuple_array_for_header@1

    test_dynamic_sized_named_tuple_array_for_header@1:
        // array/immutable.py:224
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%0#0
        bz test_dynamic_sized_named_tuple_array_after_for@4 ; b test_dynamic_sized_named_tuple_array_for_body@2 

    test_dynamic_sized_named_tuple_array_for_body@2:
        // array/immutable.py:225
        // arr = arr.append(MyDynamicSizedTuple(foo=i + 1, bar=times(i)))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        int 1                                                                                     i#0,i#0 (copy),1
        +                                                                                         i#0,i#2
        l-load i#0 1                                                                              i#2,i#0
        callsub times                                                                             i#2,tmp%3#0
        v-load arr#0                                                                              i#2,tmp%3#0,arr#0
        l-store-copy arr#0 0                                                                      i#2,tmp%3#0,arr#0,arr#0 (copy)
        int 0                                                                                     i#2,tmp%3#0,arr#0,arr#0 (copy),0
        extract_uint16                                                                            i#2,tmp%3#0,arr#0,extract_uint16%0#0
        l-load arr#0 1                                                                            i#2,tmp%3#0,extract_uint16%0#0,arr#0
        extract 2 0                                                                               i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0
        l-load-copy i#2 3                                                                         i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,i#2 (copy)
        itob                                                                                      i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0
        l-load-copy tmp%3#0 3                                                                     i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,tmp%3#0 (copy)
        len                                                                                       i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length%0#0
        itob                                                                                      i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,as_bytes%1#0
        extract 6 2                                                                               i#2,tmp%3#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length_uint16%0#0
        l-load tmp%3#0 4                                                                          i#2,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,length_uint16%0#0,tmp%3#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%0#0,encoded_value%0#0
        l-load val_as_bytes%0#0 1                                                                 i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,val_as_bytes%0#0
        byte 0x000a                                                                               i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,val_as_bytes%0#0,0x000a
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded_value%0#0,encoded%3#0
        l-load encoded_value%0#0 1                                                                i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%3#0,encoded_value%0#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%4#0
        byte 0x0002                                                                               i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%4#0,0x0002
        l-load encoded%4#0 1                                                                      i#2,extract_uint16%0#0,extract_to_end%0#0,0x0002,encoded%4#0
        concat                                                                                    i#2,extract_uint16%0#0,extract_to_end%0#0,encoded%6#0
        l-load extract_uint16%0#0 2                                                               i#2,extract_to_end%0#0,encoded%6#0,extract_uint16%0#0
        l-load extract_to_end%0#0 2                                                               i#2,encoded%6#0,extract_uint16%0#0,extract_to_end%0#0
        int 1                                                                                     i#2,encoded%6#0,extract_uint16%0#0,extract_to_end%0#0,1
        l-load encoded%6#0 3                                                                      i#2,extract_uint16%0#0,extract_to_end%0#0,1,encoded%6#0
        callsub dynamic_array_concat_dynamic_element                                              i#2,arr#0
        v-store arr#0                                                                             i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_dynamic_sized_named_tuple_array_for_header@1

    test_dynamic_sized_named_tuple_array_after_for@4:
        // array/immutable.py:227
        // assert arr.length == 5
        v-load arr#0                                                                              arr#0
        int 0                                                                                     arr#0,0
        extract_uint16                                                                            array%array_length%1#1
        l-store-copy array%array_length%1#1 0                                                     array%array_length%1#1,array%array_length%1#1 (copy)
        v-store array%array_length%1#1                                                            array%array_length%1#1
        l-load array%array_length%1#1 0                                                           array%array_length%1#1
        int 5                                                                                     array%array_length%1#1,5
        ==                                                                                        tmp%5#0
        assert
        // array/immutable.py:228
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_dynamic_sized_named_tuple_array_for_header@5

    test_dynamic_sized_named_tuple_array_for_header@5:
        // array/immutable.py:228
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%1#0
        bz test_dynamic_sized_named_tuple_array_after_for@8 ; b test_dynamic_sized_named_tuple_array_for_body@6 

    test_dynamic_sized_named_tuple_array_for_body@6:
        // array/immutable.py:229
        // assert arr[i][0] == i + 1, "expected 1st element to be correct"
        v-load arr#0                                                                              arr#0
        extract 2 0                                                                               array_head_and_tail%0#0
        v-load i#0                                                                                array_head_and_tail%0#0,i#0
        l-store-copy i#0 1                                                                        i#0,array_head_and_tail%0#0,i#0 (copy)
        int 2                                                                                     i#0,array_head_and_tail%0#0,i#0 (copy),2
        *                                                                                         i#0,array_head_and_tail%0#0,item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 1                                                     i#0,array_head_and_tail%0#0,item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset_offset%0#0 1                                                           i#0,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),item_offset_offset%0#0
        extract_uint16                                                                            i#0,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy i#0 2                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#0 (copy)
        int 1                                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#0 (copy),1
        +                                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2
        v-load array%array_length%1#1                                                             i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,array%array_length%1#1
        l-load-copy i#2 1                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,array%array_length%1#1,i#2 (copy)
        - // on error: index access is out of bounds                                              i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                       i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0
        l-load-copy i#2 2                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,i#2 (copy)
        int 2                                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,i#2 (copy),2
        *                                                                                         i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load next_item_offset_offset%0#0 1                                                      i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),next_item_offset_offset%0#0
        extract_uint16                                                                            i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load end_of_array%0#0 1                                                                 i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,next_item_offset%0#0,end_of_array%0#0
        l-load next_item_offset%0#0 1                                                             i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load has_next%0#0 2                                                                     i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,end_of_array%0#0,next_item_offset%0#0,has_next%0#0
        select                                                                                    i#0,array_head_and_tail%0#0,item_offset%0#0,i#2,end_offset%0#0
        l-load array_head_and_tail%0#0 3                                                          i#0,item_offset%0#0,i#2,end_offset%0#0,array_head_and_tail%0#0
        l-load item_offset%0#0 3                                                                  i#0,i#2,end_offset%0#0,array_head_and_tail%0#0,item_offset%0#0
        l-load end_offset%0#0 2                                                                   i#0,i#2,array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0
        substring3                                                                                i#0,i#2,substring3%0#0
        l-load-copy substring3%0#0 0                                                              i#0,i#2,substring3%0#0,substring3%0#0 (copy)
        int 0                                                                                     i#0,i#2,substring3%0#0,substring3%0#0 (copy),0
        extract_uint64                                                                            i#0,i#2,substring3%0#0,array%item0%0#1
        l-load-copy i#2 2                                                                         i#0,i#2,substring3%0#0,array%item0%0#1,i#2 (copy)
        ==                                                                                        i#0,i#2,substring3%0#0,tmp%9#0
        assert // expected 1st element to be correct                                              i#0,i#2,substring3%0#0
        // array/immutable.py:230
        // assert arr[i][1] == times(i), "expected 2nd element to be correct"
        l-load-copy substring3%0#0 0                                                              i#0,i#2,substring3%0#0,substring3%0#0 (copy)
        int 8                                                                                     i#0,i#2,substring3%0#0,substring3%0#0 (copy),8
        extract_uint16                                                                            i#0,i#2,substring3%0#0,array%item_start_offset%1#1
        l-load-copy substring3%0#0 1                                                              i#0,i#2,substring3%0#0,array%item_start_offset%1#1,substring3%0#0 (copy)
        len                                                                                       i#0,i#2,substring3%0#0,array%item_start_offset%1#1,array%item_end_offset%1#1
        l-load substring3%0#0 2                                                                   i#0,i#2,array%item_start_offset%1#1,array%item_end_offset%1#1,substring3%0#0
        l-load array%item_start_offset%1#1 2                                                      i#0,i#2,array%item_end_offset%1#1,substring3%0#0,array%item_start_offset%1#1
        l-load array%item_end_offset%1#1 2                                                        i#0,i#2,substring3%0#0,array%item_start_offset%1#1,array%item_end_offset%1#1
        substring3                                                                                i#0,i#2,array%encoded_item1%1#1
        extract 2 0                                                                               i#0,i#2,array%item1%1#1
        l-load i#0 2                                                                              i#2,array%item1%1#1,i#0
        callsub times                                                                             i#2,array%item1%1#1,tmp%12#0
        l-load array%item1%1#1 1                                                                  i#2,tmp%12#0,array%item1%1#1
        l-load tmp%12#0 1                                                                         i#2,array%item1%1#1,tmp%12#0
        ==                                                                                        i#2,tmp%13#0
        assert // expected 2nd element to be correct                                              i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_dynamic_sized_named_tuple_array_for_header@5

    test_dynamic_sized_named_tuple_array_after_for@8:
        // array/immutable.py:232
        // arr = arr.pop()
        v-load arr#0                                                                              arr#0
        callsub dynamic_array_pop_dynamic_element                                                 popped%0#0,arr#0
        l-store arr#0 1                                                                           arr#0,popped%0#0
        pop 1                                                                                     arr#0
        // array/immutable.py:233
        // assert arr.length == 4
        l-load-copy arr#0 0                                                                       arr#0,arr#0 (copy)
        int 0                                                                                     arr#0,arr#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%4#1
        l-load-copy array%array_length%4#1 0                                                      arr#0,array%array_length%4#1,array%array_length%4#1 (copy)
        int 4                                                                                     arr#0,array%array_length%4#1,array%array_length%4#1 (copy),4
        ==                                                                                        arr#0,array%array_length%4#1,tmp%15#0
        assert                                                                                    arr#0,array%array_length%4#1
        // array/immutable.py:234
        // assert arr[0] == MyDynamicSizedTuple(UInt64(1), String()), "expected 1, 0"
        l-load-copy arr#0 1                                                                       arr#0,array%array_length%4#1,arr#0 (copy)
        extract 2 0                                                                               arr#0,array%array_length%4#1,array_head_and_tail%2#0
        l-load-copy array_head_and_tail%2#0 0                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy)
        int 0                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,array_head_and_tail%2#0 (copy),0
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0
        l-load-copy array%array_length%4#1 2                                                      arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,array%array_length%4#1 (copy)
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,array%array_length%4#1 (copy),1
        - // on error: index access is out of bounds                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0
        l-load-copy array_head_and_tail%2#0 2                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,array_head_and_tail%2#0 (copy)
        len                                                                                       arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0
        l-load-copy array_head_and_tail%2#0 3                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy)
        int 2                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),2
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0
        l-load-copy end_of_array%2#0 1                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,next_item_offset%2#0,end_of_array%2#0 (copy)
        l-load next_item_offset%2#0 1                                                             arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_of_array%2#0 (copy),next_item_offset%2#0
        l-load-copy has_next%2#0 3                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_of_array%2#0 (copy),next_item_offset%2#0,has_next%2#0 (copy)
        select                                                                                    arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0
        l-load-copy array_head_and_tail%2#0 4                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,item_offset%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0,array_head_and_tail%2#0 (copy)
        l-load item_offset%2#0 4                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,end_offset%2#0,array_head_and_tail%2#0 (copy),item_offset%2#0
        l-load end_offset%2#0 2                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),item_offset%2#0,end_offset%2#0
        substring3                                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0
        l-load-copy substring3%2#0 0                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,substring3%2#0 (copy)
        int 0                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,substring3%2#0 (copy),0
        extract_uint64                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1
        l-load-copy substring3%2#0 1                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,substring3%2#0 (copy)
        int 8                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,substring3%2#0 (copy),8
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1
        l-load-copy substring3%2#0 2                                                              arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1,substring3%2#0 (copy)
        len                                                                                       arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,substring3%2#0,array%item0%2#1,array%item_start_offset%2#1,array%item_end_offset%2#1
        l-load substring3%2#0 3                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item_start_offset%2#1,array%item_end_offset%2#1,substring3%2#0
        l-load array%item_start_offset%2#1 2                                                      arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item_end_offset%2#1,substring3%2#0,array%item_start_offset%2#1
        l-load array%item_end_offset%2#1 2                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,substring3%2#0,array%item_start_offset%2#1,array%item_end_offset%2#1
        substring3                                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%encoded_item1%2#1
        extract 2 0                                                                               arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item0%2#1,array%item1%2#1
        l-load array%item0%2#1 1                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,array%item0%2#1
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,array%item0%2#1,1
        ==                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array%item1%2#1,tmp%16#0
        l-load array%item1%2#1 1                                                                  arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,array%item1%2#1
        byte ""                                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,array%item1%2#1,""
        ==                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,tmp%17#0
        l-load tmp%16#0 1                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%17#0,tmp%16#0
        l-load tmp%17#0 1                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%16#0,tmp%17#0
        &&                                                                                        arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,tmp%18#0
        assert // expected 1, 0                                                                   arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0
        // array/immutable.py:235
        // assert arr[-1] == MyDynamicSizedTuple(UInt64(4), String("   ")), "expected 4, 3"
        l-load-copy has_next%2#0 1                                                                arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,has_next%2#0 (copy)
        int 2                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,has_next%2#0 (copy),2
        *                                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset_offset%3#0
        l-load-copy array_head_and_tail%2#0 3                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset_offset%3#0,array_head_and_tail%2#0 (copy)
        l-load item_offset_offset%3#0 1                                                           arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,array_head_and_tail%2#0 (copy),item_offset_offset%3#0
        extract_uint16                                                                            arr#0,array%array_length%4#1,array_head_and_tail%2#0,has_next%2#0,end_of_array%2#0,item_offset%3#0
        l-load has_next%2#0 2                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%2#0
        int 1                                                                                     arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%2#0,1
        +                                                                                         arr#0,array%array_length%4#1,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0
        l-load array%array_length%4#1 4                                                           arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,array%array_length%4#1
        l-load-copy next_index%3#0 1                                                              arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,array%array_length%4#1,next_index%3#0 (copy)
        - // on error: index access is out of bounds                                              arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,next_index%3#0,has_next%3#0
        l-load next_index%3#0 1                                                                   arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_index%3#0
        int 2                                                                                     arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_index%3#0,2
        *                                                                                         arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset_offset%3#0
        l-load-copy array_head_and_tail%2#0 4                                                     arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset_offset%3#0,array_head_and_tail%2#0 (copy)
        l-load next_item_offset_offset%3#0 1                                                      arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,array_head_and_tail%2#0 (copy),next_item_offset_offset%3#0
        extract_uint16                                                                            arr#0,array_head_and_tail%2#0,end_of_array%2#0,item_offset%3#0,has_next%3#0,next_item_offset%3#0
        l-load end_of_array%2#0 3                                                                 arr#0,array_head_and_tail%2#0,item_offset%3#0,has_next%3#0,next_item_offset%3#0,end_of_array%2#0
        l-load next_item_offset%3#0 1                                                             arr#0,array_head_and_tail%2#0,item_offset%3#0,has_next%3#0,end_of_array%2#0,next_item_offset%3#0
        l-load has_next%3#0 2                                                                     arr#0,array_head_and_tail%2#0,item_offset%3#0,end_of_array%2#0,next_item_offset%3#0,has_next%3#0
        select                                                                                    arr#0,array_head_and_tail%2#0,item_offset%3#0,end_offset%3#0
        l-load array_head_and_tail%2#0 2                                                          arr#0,item_offset%3#0,end_offset%3#0,array_head_and_tail%2#0
        l-load item_offset%3#0 2                                                                  arr#0,end_offset%3#0,array_head_and_tail%2#0,item_offset%3#0
        l-load end_offset%3#0 2                                                                   arr#0,array_head_and_tail%2#0,item_offset%3#0,end_offset%3#0
        substring3                                                                                arr#0,substring3%3#0
        l-load-copy substring3%3#0 0                                                              arr#0,substring3%3#0,substring3%3#0 (copy)
        int 0                                                                                     arr#0,substring3%3#0,substring3%3#0 (copy),0
        extract_uint64                                                                            arr#0,substring3%3#0,array%item0%3#1
        l-load-copy substring3%3#0 1                                                              arr#0,substring3%3#0,array%item0%3#1,substring3%3#0 (copy)
        int 8                                                                                     arr#0,substring3%3#0,array%item0%3#1,substring3%3#0 (copy),8
        extract_uint16                                                                            arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1
        l-load-copy substring3%3#0 2                                                              arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1,substring3%3#0 (copy)
        len                                                                                       arr#0,substring3%3#0,array%item0%3#1,array%item_start_offset%3#1,array%item_end_offset%3#1
        l-load substring3%3#0 3                                                                   arr#0,array%item0%3#1,array%item_start_offset%3#1,array%item_end_offset%3#1,substring3%3#0
        l-load array%item_start_offset%3#1 2                                                      arr#0,array%item0%3#1,array%item_end_offset%3#1,substring3%3#0,array%item_start_offset%3#1
        l-load array%item_end_offset%3#1 2                                                        arr#0,array%item0%3#1,substring3%3#0,array%item_start_offset%3#1,array%item_end_offset%3#1
        substring3                                                                                arr#0,array%item0%3#1,array%encoded_item1%3#1
        extract 2 0                                                                               arr#0,array%item0%3#1,array%item1%3#1
        l-load array%item0%3#1 1                                                                  arr#0,array%item1%3#1,array%item0%3#1
        int 4                                                                                     arr#0,array%item1%3#1,array%item0%3#1,4
        ==                                                                                        arr#0,array%item1%3#1,tmp%21#0
        l-load array%item1%3#1 1                                                                  arr#0,tmp%21#0,array%item1%3#1
        byte "   "                                                                                arr#0,tmp%21#0,array%item1%3#1,"   "
        ==                                                                                        arr#0,tmp%21#0,tmp%22#0
        l-load tmp%21#0 1                                                                         arr#0,tmp%22#0,tmp%21#0
        l-load tmp%22#0 1                                                                         arr#0,tmp%21#0,tmp%22#0
        &&                                                                                        arr#0,tmp%23#0
        assert // expected 4, 3                                                                   arr#0
        // array/immutable.py:236
        // self.f = arr
        byte "f"                                                                                  arr#0,"f"
        l-load arr#0 1                                                                            "f",arr#0
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_log(arr: bytes) -> void:
subroutine test_implicit_conversion_log:
    test_implicit_conversion_log_block@0:                                                         (𝕡) arr#0 |
        // array/immutable.py:240
        // log(arr)
        p-load arr#0                                                                              (𝕡) arr#0 | arr#0 (copy)
        log                                                                                       (𝕡) arr#0 |
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_implicit_conversion_emit(arr: bytes) -> void:
subroutine test_implicit_conversion_emit:
    test_implicit_conversion_emit_block@0:                                                        (𝕡) arr#0 |
        // array/immutable.py:244
        // arc4.emit("emit_test", arr)
        byte 0x0002                                                                               (𝕡) arr#0 | 0x0002
        p-load arr#0                                                                              (𝕡) arr#0 | 0x0002,arr#0 (copy)
        concat                                                                                    (𝕡) arr#0 | encoded%1#0
        method emit_test(uint64[])                                                                (𝕡) arr#0 | encoded%1#0,Method(emit_test(uint64[]))
        l-load encoded%1#0 1                                                                      (𝕡) arr#0 | Method(emit_test(uint64[])),encoded%1#0
        concat                                                                                    (𝕡) arr#0 | event%0#0
        log                                                                                       (𝕡) arr#0 |
        retsub


// test_cases.array.immutable.ImmutableArrayContract.test_nested_array(arr_to_add: uint64, arr: bytes) -> bytes:
subroutine test_nested_array:
    test_nested_array_block@0:                                                                    (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:251
        // for i in urange(arr_to_add):
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | 0
        v-store i#0                                                                               (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@1                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_header@1:                                                               (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:251
        // for i in urange(arr_to_add):
        v-load i#0                                                                                (𝕡) arr_to_add#0,arr#0 | i#0
        p-load arr_to_add#0                                                                       (𝕡) arr_to_add#0,arr#0 | i#0,arr_to_add#0 (copy)
        <                                                                                         (𝕡) arr_to_add#0,arr#0 | continue_looping%0#0
        bz test_nested_array_after_for@8 ; b test_nested_array_for_body@2                         (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_body@2:                                                                 (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:252
        // extra_arr = ImmutableArray[UInt64]()
        byte 0x0000                                                                               (𝕡) arr_to_add#0,arr#0 | 0x0000
        v-store extra_arr#0                                                                       (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:253
        // for j in urange(i):
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | 0
        v-store j#0                                                                               (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@3                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_header@3:                                                               (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:253
        // for j in urange(i):
        v-load j#0                                                                                (𝕡) arr_to_add#0,arr#0 | j#0
        v-load i#0                                                                                (𝕡) arr_to_add#0,arr#0 | j#0,i#0
        <                                                                                         (𝕡) arr_to_add#0,arr#0 | continue_looping%1#0
        bz test_nested_array_after_for@6 ; b test_nested_array_for_body@4                         (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_body@4:                                                                 (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:254
        // extra_arr = extra_arr.append(j)
        v-load j#0                                                                                (𝕡) arr_to_add#0,arr#0 | j#0
        l-store-copy j#0 0                                                                        (𝕡) arr_to_add#0,arr#0 | j#0,j#0 (copy)
        itob                                                                                      (𝕡) arr_to_add#0,arr#0 | j#0,val_as_bytes%0#0
        v-load extra_arr#0                                                                        (𝕡) arr_to_add#0,arr#0 | j#0,val_as_bytes%0#0,extra_arr#0
        l-load val_as_bytes%0#0 1                                                                 (𝕡) arr_to_add#0,arr#0 | j#0,extra_arr#0,val_as_bytes%0#0
        concat // on error: max array length exceeded                                             (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,len%0#0
        int 8                                                                                     (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,len%0#0,8
        /                                                                                         (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) arr_to_add#0,arr#0 | j#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) arr_to_add#0,arr#0 | j#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) arr_to_add#0,arr#0 | j#0,extra_arr#0
        v-store extra_arr#0                                                                       (𝕡) arr_to_add#0,arr#0 | j#0
        // array/immutable.py:253
        // for j in urange(i):
        l-load j#0 0                                                                              (𝕡) arr_to_add#0,arr#0 | j#0
        int 1                                                                                     (𝕡) arr_to_add#0,arr#0 | j#0,1
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | j#0
        v-store j#0                                                                               (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@3                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_after_for@6:                                                                (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:255
        // arr = arr.append(extra_arr)
        p-load arr#0                                                                              (𝕡) arr_to_add#0,arr#0 | arr#0 (copy)
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | arr#0 (copy),0
        extract_uint16                                                                            (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0
        p-load arr#0                                                                              (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,arr#0 (copy)
        extract 2 0                                                                               (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,extract_to_end%1#0
        byte 0x0002                                                                               (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,extract_to_end%1#0,0x0002
        v-load extra_arr#0                                                                        (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,extract_to_end%1#0,0x0002,extra_arr#0
        concat                                                                                    (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,extract_to_end%1#0,encoded%5#0
        l-load extract_uint16%0#0 2                                                               (𝕡) arr_to_add#0,arr#0 | extract_to_end%1#0,encoded%5#0,extract_uint16%0#0
        l-load extract_to_end%1#0 2                                                               (𝕡) arr_to_add#0,arr#0 | encoded%5#0,extract_uint16%0#0,extract_to_end%1#0
        int 1                                                                                     (𝕡) arr_to_add#0,arr#0 | encoded%5#0,extract_uint16%0#0,extract_to_end%1#0,1
        l-load encoded%5#0 3                                                                      (𝕡) arr_to_add#0,arr#0 | extract_uint16%0#0,extract_to_end%1#0,1,encoded%5#0
        callsub dynamic_array_concat_dynamic_element                                              (𝕡) arr_to_add#0,arr#0 | arr#0
        p-store arr#0                                                                             (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:251
        // for i in urange(arr_to_add):
        v-load i#0                                                                                (𝕡) arr_to_add#0,arr#0 | i#0
        int 1                                                                                     (𝕡) arr_to_add#0,arr#0 | i#0,1
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | i#0
        v-store i#0                                                                               (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@1                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_after_for@8:                                                                (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:258
        // totals = ImmutableArray[UInt64]()
        byte 0x0000                                                                               (𝕡) arr_to_add#0,arr#0 | 0x0000
        v-store totals#0                                                                          (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:259
        // for inner_arr in arr:
        p-load arr#0                                                                              (𝕡) arr_to_add#0,arr#0 | arr#0 (copy)
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | arr#0 (copy),0
        extract_uint16                                                                            (𝕡) arr_to_add#0,arr#0 | array%array_length%0#1
        v-store array%array_length%0#1                                                            (𝕡) arr_to_add#0,arr#0 |
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | 0
        v-store item_index_internal%0#0                                                           (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@9                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_header@9:                                                               (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:259
        // for inner_arr in arr:
        v-load item_index_internal%0#0                                                            (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#0
        v-load array%array_length%0#1                                                             (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#0,array%array_length%0#1
        <                                                                                         (𝕡) arr_to_add#0,arr#0 | continue_looping%2#0
        bz test_nested_array_after_for@12 ; b test_nested_array_for_body@10                       (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_body@10:                                                                (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:259
        // for inner_arr in arr:
        p-load arr#0                                                                              (𝕡) arr_to_add#0,arr#0 | arr#0 (copy)
        extract 2 0                                                                               (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0
        v-load item_index_internal%0#0                                                            (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_index_internal%0#0
        int 2                                                                                     (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_index_internal%0#0,2
        *                                                                                         (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 1                                                     (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset_offset%0#0 1                                                           (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),item_offset_offset%0#0
        extract_uint16                                                                            (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0
        l-load-copy array_head_and_tail%0#0 1                                                     (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load-copy item_offset%0#0 1                                                             (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,array_head_and_tail%0#0 (copy),item_offset%0#0 (copy)
        extract_uint16                                                                            (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_length%0#0
        int 8                                                                                     (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_length%0#0,8
        *                                                                                         (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_length_in_bytes%0#0
        int 2                                                                                     (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_length_in_bytes%0#0,2
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_head_tail_length%0#0
        l-load array_head_and_tail%0#0 2                                                          (𝕡) arr_to_add#0,arr#0 | item_offset%0#0,item_head_tail_length%0#0,array_head_and_tail%0#0
        l-load item_offset%0#0 2                                                                  (𝕡) arr_to_add#0,arr#0 | item_head_tail_length%0#0,array_head_and_tail%0#0,item_offset%0#0
        l-load item_head_tail_length%0#0 2                                                        (𝕡) arr_to_add#0,arr#0 | array_head_and_tail%0#0,item_offset%0#0,item_head_tail_length%0#0
        extract3                                                                                  (𝕡) arr_to_add#0,arr#0 | inner_arr#0
        l-store-copy inner_arr#0 0                                                                (𝕡) arr_to_add#0,arr#0 | inner_arr#0,inner_arr#0 (copy)
        v-store inner_arr#0                                                                       (𝕡) arr_to_add#0,arr#0 | inner_arr#0
        // array/immutable.py:470
        // total = UInt64()
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | inner_arr#0,0
        v-store total#0                                                                           (𝕡) arr_to_add#0,arr#0 | inner_arr#0
        // array/immutable.py:471
        // for i in arr:
        l-load inner_arr#0 0                                                                      (𝕡) arr_to_add#0,arr#0 | inner_arr#0
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | inner_arr#0,0
        extract_uint16                                                                            (𝕡) arr_to_add#0,arr#0 | array%array_length%1#1
        v-store array%array_length%1#1                                                            (𝕡) arr_to_add#0,arr#0 |
        int 0                                                                                     (𝕡) arr_to_add#0,arr#0 | 0
        v-store item_index_internal%0#3                                                           (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@14                                                         (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_header@14:                                                              (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:471
        // for i in arr:
        v-load item_index_internal%0#3                                                            (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3
        v-load array%array_length%1#1                                                             (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,array%array_length%1#1
        <                                                                                         (𝕡) arr_to_add#0,arr#0 | continue_looping%0#0
        bz test_nested_array_after_for@16 ; b test_nested_array_for_body@15                       (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_for_body@15:                                                                (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:471
        // for i in arr:
        v-load inner_arr#0                                                                        (𝕡) arr_to_add#0,arr#0 | inner_arr#0
        extract 2 0                                                                               (𝕡) arr_to_add#0,arr#0 | array_trimmed%0#0
        v-load item_index_internal%0#3                                                            (𝕡) arr_to_add#0,arr#0 | array_trimmed%0#0,item_index_internal%0#3
        l-store-copy item_index_internal%0#3 1                                                    (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,array_trimmed%0#0,item_index_internal%0#3 (copy)
        int 8                                                                                     (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,array_trimmed%0#0,item_index_internal%0#3 (copy),8
        *                                                                                         (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,array_trimmed%0#0,bytes_offset%0#0
        l-load array_trimmed%0#0 1                                                                (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,bytes_offset%0#0,array_trimmed%0#0
        l-load bytes_offset%0#0 1                                                                 (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,array_trimmed%0#0,bytes_offset%0#0
        extract_uint64                                                                            (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,i#0
        // array/immutable.py:472
        // total += i
        v-load total#0                                                                            (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,i#0,total#0
        l-load i#0 1                                                                              (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,total#0,i#0
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,total#0
        v-store total#0                                                                           (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3
        l-load item_index_internal%0#3 0                                                          (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3
        int 1                                                                                     (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3,1
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#3
        v-store item_index_internal%0#3                                                           (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@14                                                         (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_after_for@16:                                                               (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:260
        // totals = totals.append(sum_arr(inner_arr))
        v-load total#0                                                                            (𝕡) arr_to_add#0,arr#0 | total#0
        itob                                                                                      (𝕡) arr_to_add#0,arr#0 | val_as_bytes%1#0
        v-load totals#0                                                                           (𝕡) arr_to_add#0,arr#0 | val_as_bytes%1#0,totals#0
        l-load val_as_bytes%1#0 1                                                                 (𝕡) arr_to_add#0,arr#0 | totals#0,val_as_bytes%1#0
        concat // on error: max array length exceeded                                             (𝕡) arr_to_add#0,arr#0 | concat%1#0
        l-load-copy concat%1#0 0                                                                  (𝕡) arr_to_add#0,arr#0 | concat%1#0,concat%1#0 (copy)
        extract 2 0                                                                               (𝕡) arr_to_add#0,arr#0 | concat%1#0,extract_to_end%2#0
        len                                                                                       (𝕡) arr_to_add#0,arr#0 | concat%1#0,len%1#0
        int 8                                                                                     (𝕡) arr_to_add#0,arr#0 | concat%1#0,len%1#0,8
        /                                                                                         (𝕡) arr_to_add#0,arr#0 | concat%1#0,div_floor%1#0
        itob                                                                                      (𝕡) arr_to_add#0,arr#0 | concat%1#0,as_bytes%4#0
        extract 6 2                                                                               (𝕡) arr_to_add#0,arr#0 | concat%1#0,as_u16_bytes%1#0
        l-load concat%1#0 1                                                                       (𝕡) arr_to_add#0,arr#0 | as_u16_bytes%1#0,concat%1#0
        l-load as_u16_bytes%1#0 1                                                                 (𝕡) arr_to_add#0,arr#0 | concat%1#0,as_u16_bytes%1#0
        replace2 0                                                                                (𝕡) arr_to_add#0,arr#0 | totals#0
        v-store totals#0                                                                          (𝕡) arr_to_add#0,arr#0 |
        v-load item_index_internal%0#0                                                            (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#0
        int 1                                                                                     (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#0,1
        +                                                                                         (𝕡) arr_to_add#0,arr#0 | item_index_internal%0#0
        v-store item_index_internal%0#0                                                           (𝕡) arr_to_add#0,arr#0 |
        b test_nested_array_for_header@9                                                          (𝕡) arr_to_add#0,arr#0 |

    test_nested_array_after_for@12:                                                               (𝕡) arr_to_add#0,arr#0 |
        // array/immutable.py:262
        // return totals
        v-load totals#0                                                                           (𝕡) arr_to_add#0,arr#0 | totals#0
        retsub                                                                                    totals#0


// test_cases.array.immutable.ImmutableArrayContract.test_bit_packed_tuples() -> void:
subroutine test_bit_packed_tuples:
    test_bit_packed_tuples_block@0:
        // array/immutable.py:266
        // arr2 = ImmutableArray[TwoBoolTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr2#0
        // array/immutable.py:267
        // arr7 = ImmutableArray[SevenBoolTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr7#0
        // array/immutable.py:268
        // arr8 = ImmutableArray[EightBoolTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr8#0
        // array/immutable.py:269
        // arr9 = ImmutableArray[NineBoolTuple]()
        byte 0x0000                                                                               0x0000
        v-store arr9#0
        // array/immutable.py:275
        // for i in urange(5):
        int 0                                                                                     0
        v-store i#0
        b test_bit_packed_tuples_for_header@1

    test_bit_packed_tuples_for_header@1:
        // array/immutable.py:275
        // for i in urange(5):
        v-load i#0                                                                                i#0
        int 5                                                                                     i#0,5
        <                                                                                         continue_looping%0#0
        bz test_bit_packed_tuples_after_for@4 ; b test_bit_packed_tuples_for_body@2

    test_bit_packed_tuples_for_body@2:
        // array/immutable.py:276
        // arr2 = arr2.append(TwoBoolTuple(a=i == 0, b=i == 1))
        v-load i#0                                                                                i#0
        l-store-copy i#0 0                                                                        i#0,i#0 (copy)
        !                                                                                         i#0,tmp%8#0
        l-load-copy i#0 1                                                                         i#0,tmp%8#0,i#0 (copy)
        int 1                                                                                     i#0,tmp%8#0,i#0 (copy),1
        ==                                                                                        i#0,tmp%8#0,tmp%9#0
        byte 0x00                                                                                 i#0,tmp%8#0,tmp%9#0,0x00
        int 0                                                                                     i#0,tmp%8#0,tmp%9#0,0x00,0
        l-load tmp%8#0 3                                                                          i#0,tmp%9#0,0x00,0,tmp%8#0
        setbit                                                                                    i#0,tmp%9#0,encoded_bit%0#0
        l-load-copy encoded_bit%0#0 0                                                             i#0,tmp%9#0,encoded_bit%0#0,encoded_bit%0#0 (copy)
        int 1                                                                                     i#0,tmp%9#0,encoded_bit%0#0,encoded_bit%0#0 (copy),1
        l-load-copy tmp%9#0 3                                                                     i#0,tmp%9#0,encoded_bit%0#0,encoded_bit%0#0 (copy),1,tmp%9#0 (copy)
        setbit                                                                                    i#0,tmp%9#0,encoded_bit%0#0,set_bit%0#0
        v-load arr2#0                                                                             i#0,tmp%9#0,encoded_bit%0#0,set_bit%0#0,arr2#0
        l-load set_bit%0#0 1                                                                      i#0,tmp%9#0,encoded_bit%0#0,arr2#0,set_bit%0#0
        concat // on error: max array length exceeded                                             i#0,tmp%9#0,encoded_bit%0#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,extract_to_end%0#0
        len                                                                                       i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,len%0#0
        itob                                                                                      i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,as_bytes%4#0
        extract 6 2                                                                               i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       i#0,tmp%9#0,encoded_bit%0#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 i#0,tmp%9#0,encoded_bit%0#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                i#0,tmp%9#0,encoded_bit%0#0,arr2#0
        v-store arr2#0                                                                            i#0,tmp%9#0,encoded_bit%0#0
        // array/immutable.py:283
        // c=i == 2,
        l-load-copy i#0 2                                                                         i#0,tmp%9#0,encoded_bit%0#0,i#0 (copy)
        int 2                                                                                     i#0,tmp%9#0,encoded_bit%0#0,i#0 (copy),2
        ==                                                                                        i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0
        // array/immutable.py:284
        // d=i == 3,
        l-load-copy i#0 3                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,i#0 (copy)
        int 3                                                                                     i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,i#0 (copy),3
        ==                                                                                        i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0
        // array/immutable.py:285
        // e=i == 4,
        l-load-copy i#0 4                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,i#0 (copy)
        int 4                                                                                     i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,i#0 (copy),4
        ==                                                                                        i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0
        // array/immutable.py:286
        // f=i == 5,
        l-load-copy i#0 5                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,i#0 (copy)
        int 5                                                                                     i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,i#0 (copy),5
        ==                                                                                        i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0
        // array/immutable.py:287
        // g=i == 6,
        l-load-copy i#0 6                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,i#0 (copy)
        int 6                                                                                     i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,i#0 (copy),6
        ==                                                                                        i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0
        // array/immutable.py:280
        // bar=i + 1,
        l-load-copy i#0 7                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#0 (copy)
        int 1                                                                                     i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#0 (copy),1
        +                                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2
        // array/immutable.py:277-289
        // arr7 = arr7.append(
        //     SevenBoolTuple(
        //         foo=i,
        //         bar=i + 1,
        //         a=i == 0,
        //         b=i == 1,
        //         c=i == 2,
        //         d=i == 3,
        //         e=i == 4,
        //         f=i == 5,
        //         g=i == 6,
        //     )
        // )
        l-load-copy i#0 8                                                                         i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,i#0 (copy)
        itob                                                                                      i#0,tmp%9#0,encoded_bit%0#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,val_as_bytes%0#0
        l-load encoded_bit%0#0 7                                                                  i#0,tmp%9#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,val_as_bytes%0#0,encoded_bit%0#0
        concat                                                                                    i#0,tmp%9#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,encoded%13#0
        int 65                                                                                    i#0,tmp%9#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,encoded%13#0,65
        l-load tmp%9#0 8                                                                          i#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,encoded%13#0,65,tmp%9#0
        setbit                                                                                    i#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%1#0
        int 66                                                                                    i#0,tmp%12#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%1#0,66
        l-load tmp%12#0 7                                                                         i#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%1#0,66,tmp%12#0
        setbit                                                                                    i#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%2#0
        int 67                                                                                    i#0,tmp%13#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%2#0,67
        l-load tmp%13#0 6                                                                         i#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%2#0,67,tmp%13#0
        setbit                                                                                    i#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%3#0
        int 68                                                                                    i#0,tmp%14#0,tmp%15#0,tmp%16#0,i#2,set_bit%3#0,68
        l-load tmp%14#0 5                                                                         i#0,tmp%15#0,tmp%16#0,i#2,set_bit%3#0,68,tmp%14#0
        setbit                                                                                    i#0,tmp%15#0,tmp%16#0,i#2,set_bit%4#0
        int 69                                                                                    i#0,tmp%15#0,tmp%16#0,i#2,set_bit%4#0,69
        l-load tmp%15#0 4                                                                         i#0,tmp%16#0,i#2,set_bit%4#0,69,tmp%15#0
        setbit                                                                                    i#0,tmp%16#0,i#2,set_bit%5#0
        int 70                                                                                    i#0,tmp%16#0,i#2,set_bit%5#0,70
        l-load tmp%16#0 3                                                                         i#0,i#2,set_bit%5#0,70,tmp%16#0
        setbit                                                                                    i#0,i#2,set_bit%6#0
        l-load-copy i#2 1                                                                         i#0,i#2,set_bit%6#0,i#2 (copy)
        itob                                                                                      i#0,i#2,set_bit%6#0,val_as_bytes%1#0
        l-load-copy set_bit%6#0 1                                                                 i#0,i#2,set_bit%6#0,val_as_bytes%1#0,set_bit%6#0 (copy)
        l-load-copy val_as_bytes%1#0 1                                                            i#0,i#2,set_bit%6#0,val_as_bytes%1#0,set_bit%6#0 (copy),val_as_bytes%1#0 (copy)
        concat                                                                                    i#0,i#2,set_bit%6#0,val_as_bytes%1#0,encoded%14#0
        v-load arr7#0                                                                             i#0,i#2,set_bit%6#0,val_as_bytes%1#0,encoded%14#0,arr7#0
        l-load encoded%14#0 1                                                                     i#0,i#2,set_bit%6#0,val_as_bytes%1#0,arr7#0,encoded%14#0
        concat // on error: max array length exceeded                                             i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0
        l-load-copy concat%1#0 0                                                                  i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,concat%1#0 (copy)
        extract 2 0                                                                               i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,extract_to_end%1#0
        len                                                                                       i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,len%1#0
        int 17                                                                                    i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,len%1#0,17
        /                                                                                         i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,div_floor%1#0
        itob                                                                                      i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,as_bytes%5#0
        extract 6 2                                                                               i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,as_u16_bytes%1#0
        l-load concat%1#0 1                                                                       i#0,i#2,set_bit%6#0,val_as_bytes%1#0,as_u16_bytes%1#0,concat%1#0
        l-load as_u16_bytes%1#0 1                                                                 i#0,i#2,set_bit%6#0,val_as_bytes%1#0,concat%1#0,as_u16_bytes%1#0
        replace2 0                                                                                i#0,i#2,set_bit%6#0,val_as_bytes%1#0,arr7#0
        v-store arr7#0                                                                            i#0,i#2,set_bit%6#0,val_as_bytes%1#0
        // array/immutable.py:301
        // h=i == 7,
        l-load-copy i#0 3                                                                         i#0,i#2,set_bit%6#0,val_as_bytes%1#0,i#0 (copy)
        int 7                                                                                     i#0,i#2,set_bit%6#0,val_as_bytes%1#0,i#0 (copy),7
        ==                                                                                        i#0,i#2,set_bit%6#0,val_as_bytes%1#0,tmp%25#0
        // array/immutable.py:290-303
        // arr8 = arr8.append(
        //     EightBoolTuple(
        //         foo=i,
        //         bar=i + 1,
        //         a=i == 0,
        //         b=i == 1,
        //         c=i == 2,
        //         d=i == 3,
        //         e=i == 4,
        //         f=i == 5,
        //         g=i == 6,
        //         h=i == 7,
        //     )
        // )
        l-load set_bit%6#0 2                                                                      i#0,i#2,val_as_bytes%1#0,tmp%25#0,set_bit%6#0
        int 71                                                                                    i#0,i#2,val_as_bytes%1#0,tmp%25#0,set_bit%6#0,71
        l-load tmp%25#0 2                                                                         i#0,i#2,val_as_bytes%1#0,set_bit%6#0,71,tmp%25#0
        setbit                                                                                    i#0,i#2,val_as_bytes%1#0,set_bit%13#0
        l-load-copy set_bit%13#0 0                                                                i#0,i#2,val_as_bytes%1#0,set_bit%13#0,set_bit%13#0 (copy)
        l-load-copy val_as_bytes%1#0 2                                                            i#0,i#2,val_as_bytes%1#0,set_bit%13#0,set_bit%13#0 (copy),val_as_bytes%1#0 (copy)
        concat                                                                                    i#0,i#2,val_as_bytes%1#0,set_bit%13#0,encoded%20#0
        v-load arr8#0                                                                             i#0,i#2,val_as_bytes%1#0,set_bit%13#0,encoded%20#0,arr8#0
        l-load encoded%20#0 1                                                                     i#0,i#2,val_as_bytes%1#0,set_bit%13#0,arr8#0,encoded%20#0
        concat // on error: max array length exceeded                                             i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0
        l-load-copy concat%2#0 0                                                                  i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,concat%2#0 (copy)
        extract 2 0                                                                               i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,extract_to_end%2#0
        len                                                                                       i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,len%2#0
        int 17                                                                                    i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,len%2#0,17
        /                                                                                         i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,div_floor%2#0
        itob                                                                                      i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,as_bytes%6#0
        extract 6 2                                                                               i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,as_u16_bytes%2#0
        l-load concat%2#0 1                                                                       i#0,i#2,val_as_bytes%1#0,set_bit%13#0,as_u16_bytes%2#0,concat%2#0
        l-load as_u16_bytes%2#0 1                                                                 i#0,i#2,val_as_bytes%1#0,set_bit%13#0,concat%2#0,as_u16_bytes%2#0
        replace2 0                                                                                i#0,i#2,val_as_bytes%1#0,set_bit%13#0,arr8#0
        v-store arr8#0                                                                            i#0,i#2,val_as_bytes%1#0,set_bit%13#0
        // array/immutable.py:316
        // i=i == 8,
        l-load i#0 3                                                                              i#2,val_as_bytes%1#0,set_bit%13#0,i#0
        int 8                                                                                     i#2,val_as_bytes%1#0,set_bit%13#0,i#0,8
        ==                                                                                        i#2,val_as_bytes%1#0,set_bit%13#0,tmp%35#0
        // array/immutable.py:304-318
        // arr9 = arr9.append(
        //     NineBoolTuple(
        //         foo=i,
        //         bar=i + 1,
        //         a=i == 0,
        //         b=i == 1,
        //         c=i == 2,
        //         d=i == 3,
        //         e=i == 4,
        //         f=i == 5,
        //         g=i == 6,
        //         h=i == 7,
        //         i=i == 8,
        //     )
        // )
        byte 0x00                                                                                 i#2,val_as_bytes%1#0,set_bit%13#0,tmp%35#0,0x00
        int 0                                                                                     i#2,val_as_bytes%1#0,set_bit%13#0,tmp%35#0,0x00,0
        l-load tmp%35#0 2                                                                         i#2,val_as_bytes%1#0,set_bit%13#0,0x00,0,tmp%35#0
        setbit                                                                                    i#2,val_as_bytes%1#0,set_bit%13#0,set_bit%21#0
        l-load set_bit%13#0 1                                                                     i#2,val_as_bytes%1#0,set_bit%21#0,set_bit%13#0
        l-load set_bit%21#0 1                                                                     i#2,val_as_bytes%1#0,set_bit%13#0,set_bit%21#0
        concat                                                                                    i#2,val_as_bytes%1#0,encoded%26#0
        l-load val_as_bytes%1#0 1                                                                 i#2,encoded%26#0,val_as_bytes%1#0
        concat                                                                                    i#2,encoded%27#0
        v-load arr9#0                                                                             i#2,encoded%27#0,arr9#0
        l-load encoded%27#0 1                                                                     i#2,arr9#0,encoded%27#0
        concat // on error: max array length exceeded                                             i#2,concat%3#0
        l-load-copy concat%3#0 0                                                                  i#2,concat%3#0,concat%3#0 (copy)
        extract 2 0                                                                               i#2,concat%3#0,extract_to_end%3#0
        len                                                                                       i#2,concat%3#0,len%3#0
        int 18                                                                                    i#2,concat%3#0,len%3#0,18
        /                                                                                         i#2,concat%3#0,div_floor%3#0
        itob                                                                                      i#2,concat%3#0,as_bytes%7#0
        extract 6 2                                                                               i#2,concat%3#0,as_u16_bytes%3#0
        l-load concat%3#0 1                                                                       i#2,as_u16_bytes%3#0,concat%3#0
        l-load as_u16_bytes%3#0 1                                                                 i#2,concat%3#0,as_u16_bytes%3#0
        replace2 0                                                                                i#2,arr9#0
        v-store arr9#0                                                                            i#2
        l-load i#2 0                                                                              i#2
        v-store i#0
        b test_bit_packed_tuples_for_header@1

    test_bit_packed_tuples_after_for@4:
        // array/immutable.py:320
        // assert arr2.length == 5
        v-load arr2#0                                                                             arr2#0
        l-store-copy arr2#0 0                                                                     arr2#0,arr2#0 (copy)
        int 0                                                                                     arr2#0,arr2#0 (copy),0
        extract_uint16                                                                            arr2#0,array%array_length%4#1
        int 5                                                                                     arr2#0,array%array_length%4#1,5
        ==                                                                                        arr2#0,tmp%38#0
        assert                                                                                    arr2#0
        // array/immutable.py:321
        // assert arr7.length == 5
        v-load arr7#0                                                                             arr2#0,arr7#0
        l-store-copy arr7#0 0                                                                     arr2#0,arr7#0,arr7#0 (copy)
        int 0                                                                                     arr2#0,arr7#0,arr7#0 (copy),0
        extract_uint16                                                                            arr2#0,arr7#0,array%array_length%5#1
        int 5                                                                                     arr2#0,arr7#0,array%array_length%5#1,5
        ==                                                                                        arr2#0,arr7#0,tmp%40#0
        assert                                                                                    arr2#0,arr7#0
        // array/immutable.py:322
        // assert arr8.length == 5
        v-load arr8#0                                                                             arr2#0,arr7#0,arr8#0
        l-store-copy arr8#0 0                                                                     arr2#0,arr7#0,arr8#0,arr8#0 (copy)
        int 0                                                                                     arr2#0,arr7#0,arr8#0,arr8#0 (copy),0
        extract_uint16                                                                            arr2#0,arr7#0,arr8#0,array%array_length%6#1
        int 5                                                                                     arr2#0,arr7#0,arr8#0,array%array_length%6#1,5
        ==                                                                                        arr2#0,arr7#0,arr8#0,tmp%42#0
        assert                                                                                    arr2#0,arr7#0,arr8#0
        // array/immutable.py:323
        // assert arr9.length == 5
        v-load arr9#0                                                                             arr2#0,arr7#0,arr8#0,arr9#0
        l-store-copy arr9#0 0                                                                     arr2#0,arr7#0,arr8#0,arr9#0,arr9#0 (copy)
        int 0                                                                                     arr2#0,arr7#0,arr8#0,arr9#0,arr9#0 (copy),0
        extract_uint16                                                                            arr2#0,arr7#0,arr8#0,arr9#0,array%array_length%7#1
        int 5                                                                                     arr2#0,arr7#0,arr8#0,arr9#0,array%array_length%7#1,5
        ==                                                                                        arr2#0,arr7#0,arr8#0,arr9#0,tmp%44#0
        assert                                                                                    arr2#0,arr7#0,arr8#0,arr9#0
        // array/immutable.py:324
        // self.bool2 = arr2
        byte "bool2"                                                                              arr2#0,arr7#0,arr8#0,arr9#0,"bool2"
        l-load arr2#0 4                                                                           arr7#0,arr8#0,arr9#0,"bool2",arr2#0
        app_global_put                                                                            arr7#0,arr8#0,arr9#0
        // array/immutable.py:325
        // self.bool7 = arr7
        byte "bool7"                                                                              arr7#0,arr8#0,arr9#0,"bool7"
        l-load arr7#0 3                                                                           arr8#0,arr9#0,"bool7",arr7#0
        app_global_put                                                                            arr8#0,arr9#0
        // array/immutable.py:326
        // self.bool8 = arr8
        byte "bool8"                                                                              arr8#0,arr9#0,"bool8"
        l-load arr8#0 2                                                                           arr9#0,"bool8",arr8#0
        app_global_put                                                                            arr9#0
        // array/immutable.py:327
        // self.bool9 = arr9
        byte "bool9"                                                                              arr9#0,"bool9"
        l-load arr9#0 1                                                                           "bool9",arr9#0
        app_global_put
        retsub


// test_cases.array.immutable.ImmutableArrayContract.sum_uints_and_lengths_and_trues(arr1: bytes, arr2: bytes, arr3: bytes, arr4: bytes) -> uint64, uint64, uint64, uint64:
subroutine sum_uints_and_lengths_and_trues:
    sum_uints_and_lengths_and_trues_block@0:                                                      (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:337
        // sum1 = sum2 = sum3 = sum4 = UInt64()
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store sum4#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store sum3#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store sum2#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store sum1#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:338
        // for i in arr1:
        p-load arr1#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr1#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr1#0 (copy),0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array%array_length%0#1
        v-store array%array_length%0#1                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store item_index_internal%0#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@1                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_for_header@1:                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:338
        // for i in arr1:
        v-load item_index_internal%0#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0
        v-load array%array_length%0#1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,array%array_length%0#1
        <                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | continue_looping%0#0
        bz sum_uints_and_lengths_and_trues_after_for@4 ; b sum_uints_and_lengths_and_trues_for_body@2 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_for_body@2:                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:338
        // for i in arr1:
        p-load arr1#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr1#0 (copy)
        extract 2 0                                                                               (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%0#0
        v-load item_index_internal%0#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%0#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,array_trimmed%0#0,item_index_internal%0#0 (copy)
        int 8                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,array_trimmed%0#0,item_index_internal%0#0 (copy),8
        *                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,array_trimmed%0#0,bytes_offset%0#0
        l-load array_trimmed%0#0 1                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,bytes_offset%0#0,array_trimmed%0#0
        l-load bytes_offset%0#0 1                                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,array_trimmed%0#0,bytes_offset%0#0
        extract_uint64                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,i#0
        // array/immutable.py:339
        // sum1 += i
        v-load sum1#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,i#0,sum1#0
        l-load i#0 1                                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,sum1#0,i#0
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,sum1#0
        v-store sum1#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                          (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%0#0
        v-store item_index_internal%0#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@1                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_for@4:                                                  (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:340
        // for b in arr2:
        p-load arr2#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr2#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr2#0 (copy),0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array%array_length%1#1
        v-store array%array_length%1#1                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store item_index_internal%1#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@5                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_for_header@5:                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:340
        // for b in arr2:
        v-load item_index_internal%1#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%1#0
        v-load array%array_length%1#1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%1#0,array%array_length%1#1
        <                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | continue_looping%1#0
        bz sum_uints_and_lengths_and_trues_after_for@10 ; b sum_uints_and_lengths_and_trues_for_body@6 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_for_body@6:                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:340
        // for b in arr2:
        p-load arr2#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr2#0 (copy)
        extract 2 0                                                                               (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%1#0
        v-load item_index_internal%1#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%1#0,item_index_internal%1#0
        getbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | b#0
        v-load sum2#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | b#0,sum2#0
        v-store sum2#10                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | b#0
        // array/immutable.py:341
        // if b:
        l-load b#0 0                                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | b#0
        bz sum_uints_and_lengths_and_trues_after_if_else@8 ; b sum_uints_and_lengths_and_trues_if_body@7 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_if_body@7:                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:342
        // sum2 += 1
        v-load sum2#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum2#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum2#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum2#0
        v-store sum2#10                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_after_if_else@8                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_if_else@8:                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        v-load sum2#10                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum2#10
        v-store sum2#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        v-load item_index_internal%1#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%1#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%1#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%1#0
        v-store item_index_internal%1#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@5                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_for@10:                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:343
        // for tup in arr3:
        p-load arr3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr3#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr3#0 (copy),0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array%array_length%2#1
        v-store array%array_length%2#1                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 0
        v-store item_index_internal%2#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@11                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_for_header@11:                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:343
        // for tup in arr3:
        v-load item_index_internal%2#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%2#0
        v-load array%array_length%2#1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%2#0,array%array_length%2#1
        <                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | continue_looping%2#0
        bz sum_uints_and_lengths_and_trues_after_for@18 ; b sum_uints_and_lengths_and_trues_for_body@12 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_for_body@12:                                                  (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:343
        // for tup in arr3:
        p-load arr3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr3#0 (copy)
        extract 2 0                                                                               (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0
        v-load item_index_internal%2#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0,item_index_internal%2#0
        int 9                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0,item_index_internal%2#0,9
        *                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0,bytes_offset%1#0
        l-load array_trimmed%2#0 1                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | bytes_offset%1#0,array_trimmed%2#0
        l-load bytes_offset%1#0 1                                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0,bytes_offset%1#0
        int 9                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_trimmed%2#0,bytes_offset%1#0,9
        extract3 // on error: index access is out of bounds                                       (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0
        l-load-copy encoded_element%1#0 0                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,encoded_element%1#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,encoded_element%1#0 (copy),0
        extract_uint64                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0
        l-load-copy encoded_element%1#0 1                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,encoded_element%1#0 (copy)
        int 64                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,encoded_element%1#0 (copy),64
        getbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,array%is_true%0#1
        byte 0x00                                                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,array%is_true%0#1,0x00
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,array%is_true%0#1,0x00,0
        l-load array%is_true%0#1 2                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,0x00,0,array%is_true%0#1
        setbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,array%encoded_bool%0#1
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,array%encoded_bool%0#1,0
        getbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | encoded_element%1#0,tup.foo#0,tup.bar#0
        l-load encoded_element%1#0 2                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,encoded_element%1#0
        int 65                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,encoded_element%1#0,65
        getbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,array%is_true%1#1
        byte 0x00                                                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,array%is_true%1#1,0x00
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,array%is_true%1#1,0x00,0
        l-load array%is_true%1#1 2                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,0x00,0,array%is_true%1#1
        setbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,array%encoded_bool%1#1
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,array%encoded_bool%1#1,0
        getbit                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,tup.baz#0
        v-store tup.baz#0                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0
        // array/immutable.py:344
        // sum3 += tup.foo
        v-load sum3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.foo#0,tup.bar#0,sum3#0
        l-load tup.foo#0 2                                                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0,sum3#0,tup.foo#0
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0,sum3#0
        l-store-copy sum3#0 0                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0,sum3#0,sum3#0 (copy)
        v-store sum3#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0,sum3#0
        l-load sum3#0 0                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0,sum3#0
        v-store sum3#15                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0
        // array/immutable.py:345
        // if tup.bar:
        l-load tup.bar#0 0                                                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.bar#0
        bz sum_uints_and_lengths_and_trues_after_if_else@14 ; b sum_uints_and_lengths_and_trues_if_body@13 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_if_body@13:                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:346
        // sum3 += 1
        v-load sum3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        v-store sum3#15                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_after_if_else@14                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_if_else@14:                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        v-load sum3#15                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        l-store-copy sum3#0 0                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0,sum3#0 (copy)
        v-store sum3#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        l-load sum3#0 0                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        v-store sum3#15                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:347
        // if tup.baz:
        v-load tup.baz#0                                                                          (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | tup.baz#0
        bz sum_uints_and_lengths_and_trues_after_if_else@16 ; b sum_uints_and_lengths_and_trues_if_body@15 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_if_body@15:                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:348
        // sum3 += 1
        v-load sum3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#0
        v-store sum3#15                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_after_if_else@16                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_if_else@16:                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        v-load sum3#15                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum3#15
        v-store sum3#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        v-load item_index_internal%2#0                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%2#0
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%2#0,1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%2#0
        v-store item_index_internal%2#0                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@11                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_for@18:                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:349
        // for idx, dyn_tup in uenumerate(arr4):
        p-load arr4#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr4#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr4#0 (copy),0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array%array_length%3#1
        v-store array%array_length%3#1                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | item_index_internal%3#0
        v-store idx#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@19                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_for_header@19:                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:349
        // for idx, dyn_tup in uenumerate(arr4):
        v-load idx#0                                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0
        v-load array%array_length%3#1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array%array_length%3#1
        <                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | continue_looping%3#0
        bz sum_uints_and_lengths_and_trues_after_for@22 ; b sum_uints_and_lengths_and_trues_for_body@20 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | 

    sum_uints_and_lengths_and_trues_for_body@20:                                                  (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:349
        // for idx, dyn_tup in uenumerate(arr4):
        p-load arr4#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | arr4#0 (copy)
        extract 2 0                                                                               (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_head_and_tail%0#0
        v-load idx#0                                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | array_head_and_tail%0#0,idx#0
        l-store-copy idx#0 1                                                                      (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,idx#0 (copy)
        int 2                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,idx#0 (copy),2
        *                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 1                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load item_offset_offset%0#0 1                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,array_head_and_tail%0#0 (copy),item_offset_offset%0#0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0
        l-load-copy idx#0 2                                                                       (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,idx#0 (copy)
        int 1                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,idx#0 (copy),1
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0
        v-load array%array_length%3#1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,array%array_length%3#1
        l-load-copy next_index%0#0 1                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,array%array_length%3#1,next_index%0#0 (copy)
        - // on error: index access is out of bounds                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0
        l-load-copy array_head_and_tail%0#0 3                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,array_head_and_tail%0#0 (copy)
        len                                                                                       (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0
        l-load-copy next_index%0#0 2                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_index%0#0 (copy)
        int 2                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_index%0#0 (copy),2
        *                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0
        l-load-copy array_head_and_tail%0#0 5                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_item_offset_offset%0#0,array_head_and_tail%0#0 (copy)
        l-load next_item_offset_offset%0#0 1                                                      (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,array_head_and_tail%0#0 (copy),next_item_offset_offset%0#0
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load end_of_array%0#0 1                                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,next_item_offset%0#0,end_of_array%0#0
        l-load next_item_offset%0#0 1                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,has_next%0#0,end_of_array%0#0,next_item_offset%0#0
        l-load has_next%0#0 2                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,end_of_array%0#0,next_item_offset%0#0,has_next%0#0
        select                                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,array_head_and_tail%0#0,item_offset%0#0,next_index%0#0,end_offset%0#0
        l-load array_head_and_tail%0#0 3                                                          (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,item_offset%0#0,next_index%0#0,end_offset%0#0,array_head_and_tail%0#0
        l-load item_offset%0#0 3                                                                  (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,end_offset%0#0,array_head_and_tail%0#0,item_offset%0#0
        l-load end_offset%0#0 2                                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,array_head_and_tail%0#0,item_offset%0#0,end_offset%0#0
        substring3                                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0
        l-load-copy substring3%0#0 0                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,substring3%0#0 (copy)
        int 0                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,substring3%0#0 (copy),0
        extract_uint64                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0
        l-load-copy substring3%0#0 1                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0,substring3%0#0 (copy)
        int 8                                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0,substring3%0#0 (copy),8
        extract_uint16                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0,array%item_start_offset%0#1
        l-load-copy substring3%0#0 2                                                              (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0,array%item_start_offset%0#1,substring3%0#0 (copy)
        len                                                                                       (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,substring3%0#0,dyn_tup.foo#0,array%item_start_offset%0#1,array%item_end_offset%0#1
        l-load substring3%0#0 3                                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,array%item_start_offset%0#1,array%item_end_offset%0#1,substring3%0#0
        l-load array%item_start_offset%0#1 2                                                      (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,array%item_end_offset%0#1,substring3%0#0,array%item_start_offset%0#1
        l-load array%item_end_offset%0#1 2                                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,substring3%0#0,array%item_start_offset%0#1,array%item_end_offset%0#1
        substring3                                                                                (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,array%encoded_item1%0#1
        extract 2 0                                                                               (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,dyn_tup.bar#0
        // array/immutable.py:350
        // sum4 += dyn_tup.foo
        v-load sum4#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.foo#0,dyn_tup.bar#0,sum4#0
        l-load dyn_tup.foo#0 2                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.bar#0,sum4#0,dyn_tup.foo#0
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,dyn_tup.bar#0,sum4#0
        // array/immutable.py:351
        // sum4 += dyn_tup.bar.bytes.length
        l-load dyn_tup.bar#0 1                                                                    (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,sum4#0,dyn_tup.bar#0
        len                                                                                       (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,sum4#0,tmp%0#0
        l-load sum4#0 1                                                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,tmp%0#0,sum4#0
        l-load-copy tmp%0#0 1                                                                     (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,tmp%0#0,sum4#0,tmp%0#0 (copy)
        +                                                                                         (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,tmp%0#0,sum4#0
        v-store sum4#0                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,tmp%0#0
        // array/immutable.py:352
        // assert dyn_tup.bar.bytes.length == idx, "expected string length to match index"
        l-load tmp%0#0 0                                                                          (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | idx#0,next_index%0#0,tmp%0#0
        l-load idx#0 2                                                                            (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | next_index%0#0,tmp%0#0,idx#0
        ==                                                                                        (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | next_index%0#0,tmp%2#0
        assert // expected string length to match index                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | next_index%0#0
        l-load next_index%0#0 0                                                                   (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | next_index%0#0
        v-store idx#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        b sum_uints_and_lengths_and_trues_for_header@19                                           (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |

    sum_uints_and_lengths_and_trues_after_for@22:                                                 (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 |
        // array/immutable.py:354
        // return sum1, sum2, sum3, sum4
        v-load sum1#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum1#0
        v-load sum2#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum1#0,sum2#0
        v-load sum3#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum1#0,sum2#0,sum3#0
        v-load sum4#0                                                                             (𝕡) arr1#0,arr2#0,arr3#0,arr4#0 | sum1#0,sum2#0,sum3#0,sum4#0
        retsub                                                                                    sum1#0,sum2#0,sum3#0,sum4#0


// test_cases.array.immutable.ImmutableArrayContract.test_uint64_return(append: uint64) -> bytes:
subroutine test_uint64_return:
    test_uint64_return_block@0:                                                                   (𝕡) append#0 |
        // array/immutable.py:358
        // arr = ImmutableArray(UInt64(1), UInt64(2), UInt64(3))
        byte 0x0003000000000000000100000000000000020000000000000003                               (𝕡) append#0 | 0x0003000000000000000100000000000000020000000000000003
        v-store arr#0                                                                             (𝕡) append#0 |
        // array/immutable.py:359
        // for i in urange(append):
        int 0                                                                                     (𝕡) append#0 | 0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_uint64_return_for_header@1                                                         (𝕡) append#0 |

    test_uint64_return_for_header@1:                                                              (𝕡) append#0 |
        // array/immutable.py:359
        // for i in urange(append):
        v-load i#0                                                                                (𝕡) append#0 | i#0
        p-load append#0                                                                           (𝕡) append#0 | i#0,append#0 (copy)
        <                                                                                         (𝕡) append#0 | continue_looping%0#0
        bz test_uint64_return_after_for@4 ; b test_uint64_return_for_body@2                       (𝕡) append#0 |

    test_uint64_return_for_body@2:                                                                (𝕡) append#0 |
        // array/immutable.py:360
        // arr = arr.append(i)
        v-load i#0                                                                                (𝕡) append#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) append#0 | i#0,i#0 (copy)
        itob                                                                                      (𝕡) append#0 | i#0,val_as_bytes%3#0
        v-load arr#0                                                                              (𝕡) append#0 | i#0,val_as_bytes%3#0,arr#0
        l-load val_as_bytes%3#0 1                                                                 (𝕡) append#0 | i#0,arr#0,val_as_bytes%3#0
        concat // on error: max array length exceeded                                             (𝕡) append#0 | i#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) append#0 | i#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) append#0 | i#0,concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) append#0 | i#0,concat%0#0,len%0#0
        int 8                                                                                     (𝕡) append#0 | i#0,concat%0#0,len%0#0,8
        /                                                                                         (𝕡) append#0 | i#0,concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) append#0 | i#0,concat%0#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) append#0 | i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) append#0 | i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) append#0 | i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) append#0 | i#0,arr#0
        v-store arr#0                                                                             (𝕡) append#0 | i#0
        // array/immutable.py:359
        // for i in urange(append):
        l-load i#0 0                                                                              (𝕡) append#0 | i#0
        int 1                                                                                     (𝕡) append#0 | i#0,1
        +                                                                                         (𝕡) append#0 | i#0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_uint64_return_for_header@1                                                         (𝕡) append#0 |

    test_uint64_return_after_for@4:                                                               (𝕡) append#0 |
        // array/immutable.py:361
        // return arr
        v-load arr#0                                                                              (𝕡) append#0 | arr#0
        retsub                                                                                    arr#0


// test_cases.array.immutable.ImmutableArrayContract.test_bool_return(append: uint64) -> bytes:
subroutine test_bool_return:
    test_bool_return_block@0:                                                                     (𝕡) append#0 |
        // array/immutable.py:365
        // arr = ImmutableArray(True, False, True, False, True)
        byte 0x0005a8                                                                             (𝕡) append#0 | 0x0005a8
        v-store arr#0                                                                             (𝕡) append#0 |
        // array/immutable.py:366
        // for i in urange(append):
        int 0                                                                                     (𝕡) append#0 | 0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_bool_return_for_header@1                                                           (𝕡) append#0 |

    test_bool_return_for_header@1:                                                                (𝕡) append#0 |
        // array/immutable.py:366
        // for i in urange(append):
        v-load i#0                                                                                (𝕡) append#0 | i#0
        p-load append#0                                                                           (𝕡) append#0 | i#0,append#0 (copy)
        <                                                                                         (𝕡) append#0 | continue_looping%0#0
        bz test_bool_return_after_for@4 ; b test_bool_return_for_body@2                           (𝕡) append#0 |

    test_bool_return_for_body@2:                                                                  (𝕡) append#0 |
        // array/immutable.py:367
        // arr = arr.append(i % 2 == 0)
        v-load i#0                                                                                (𝕡) append#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) append#0 | i#0,i#0 (copy)
        int 2                                                                                     (𝕡) append#0 | i#0,i#0 (copy),2
        %                                                                                         (𝕡) append#0 | i#0,tmp%0#0
        !                                                                                         (𝕡) append#0 | i#0,tmp%1#0
        byte 0x00                                                                                 (𝕡) append#0 | i#0,tmp%1#0,0x00
        int 0                                                                                     (𝕡) append#0 | i#0,tmp%1#0,0x00,0
        l-load tmp%1#0 2                                                                          (𝕡) append#0 | i#0,0x00,0,tmp%1#0
        setbit                                                                                    (𝕡) append#0 | i#0,encoded_bool%0#0
        v-load arr#0                                                                              (𝕡) append#0 | i#0,encoded_bool%0#0,arr#0
        l-load encoded_bool%0#0 1                                                                 (𝕡) append#0 | i#0,arr#0,encoded_bool%0#0
        int 1                                                                                     (𝕡) append#0 | i#0,arr#0,encoded_bool%0#0,1
        int 8                                                                                     (𝕡) append#0 | i#0,arr#0,encoded_bool%0#0,1,8
        callsub dynamic_array_concat_bits                                                         (𝕡) append#0 | i#0,arr#0
        v-store arr#0                                                                             (𝕡) append#0 | i#0
        // array/immutable.py:366
        // for i in urange(append):
        l-load i#0 0                                                                              (𝕡) append#0 | i#0
        int 1                                                                                     (𝕡) append#0 | i#0,1
        +                                                                                         (𝕡) append#0 | i#0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_bool_return_for_header@1                                                           (𝕡) append#0 |

    test_bool_return_after_for@4:                                                                 (𝕡) append#0 |
        // array/immutable.py:368
        // return arr
        v-load arr#0                                                                              (𝕡) append#0 | arr#0
        retsub                                                                                    arr#0


// test_cases.array.immutable.ImmutableArrayContract.test_tuple_return(append: uint64) -> bytes:
subroutine test_tuple_return:
    test_tuple_return_block@0:                                                                    (𝕡) append#0 |
        // array/immutable.py:372
        // arr = ImmutableArray(MyTuple(UInt64(), True, False))
        byte 0x0001000000000000000080                                                             (𝕡) append#0 | 0x0001000000000000000080
        v-store arr#0                                                                             (𝕡) append#0 |
        // array/immutable.py:373
        // for i in urange(append):
        int 0                                                                                     (𝕡) append#0 | 0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_tuple_return_for_header@1                                                          (𝕡) append#0 |

    test_tuple_return_for_header@1:                                                               (𝕡) append#0 |
        // array/immutable.py:373
        // for i in urange(append):
        v-load i#0                                                                                (𝕡) append#0 | i#0
        p-load append#0                                                                           (𝕡) append#0 | i#0,append#0 (copy)
        <                                                                                         (𝕡) append#0 | continue_looping%0#0
        bz test_tuple_return_after_for@4 ; b test_tuple_return_for_body@2                         (𝕡) append#0 |

    test_tuple_return_for_body@2:                                                                 (𝕡) append#0 |
        // array/immutable.py:374
        // arr = arr.append(MyTuple(foo=i, bar=i % 2 == 0, baz=i % 3 == 0))
        v-load i#0                                                                                (𝕡) append#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) append#0 | i#0,i#0 (copy)
        int 2                                                                                     (𝕡) append#0 | i#0,i#0 (copy),2
        %                                                                                         (𝕡) append#0 | i#0,tmp%0#0
        !                                                                                         (𝕡) append#0 | i#0,tmp%1#0
        l-load-copy i#0 1                                                                         (𝕡) append#0 | i#0,tmp%1#0,i#0 (copy)
        int 3                                                                                     (𝕡) append#0 | i#0,tmp%1#0,i#0 (copy),3
        %                                                                                         (𝕡) append#0 | i#0,tmp%1#0,tmp%2#0
        !                                                                                         (𝕡) append#0 | i#0,tmp%1#0,tmp%3#0
        l-load-copy i#0 2                                                                         (𝕡) append#0 | i#0,tmp%1#0,tmp%3#0,i#0 (copy)
        itob                                                                                      (𝕡) append#0 | i#0,tmp%1#0,tmp%3#0,val_as_bytes%1#0
        byte 0x00                                                                                 (𝕡) append#0 | i#0,tmp%1#0,tmp%3#0,val_as_bytes%1#0,0x00
        int 0                                                                                     (𝕡) append#0 | i#0,tmp%1#0,tmp%3#0,val_as_bytes%1#0,0x00,0
        l-load tmp%1#0 4                                                                          (𝕡) append#0 | i#0,tmp%3#0,val_as_bytes%1#0,0x00,0,tmp%1#0
        setbit                                                                                    (𝕡) append#0 | i#0,tmp%3#0,val_as_bytes%1#0,encoded_bit%1#0
        l-load val_as_bytes%1#0 1                                                                 (𝕡) append#0 | i#0,tmp%3#0,encoded_bit%1#0,val_as_bytes%1#0
        l-load encoded_bit%1#0 1                                                                  (𝕡) append#0 | i#0,tmp%3#0,val_as_bytes%1#0,encoded_bit%1#0
        concat                                                                                    (𝕡) append#0 | i#0,tmp%3#0,encoded%7#0
        int 65                                                                                    (𝕡) append#0 | i#0,tmp%3#0,encoded%7#0,65
        l-load tmp%3#0 2                                                                          (𝕡) append#0 | i#0,encoded%7#0,65,tmp%3#0
        setbit                                                                                    (𝕡) append#0 | i#0,set_bit%1#0
        v-load arr#0                                                                              (𝕡) append#0 | i#0,set_bit%1#0,arr#0
        l-load set_bit%1#0 1                                                                      (𝕡) append#0 | i#0,arr#0,set_bit%1#0
        concat // on error: max array length exceeded                                             (𝕡) append#0 | i#0,concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) append#0 | i#0,concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) append#0 | i#0,concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) append#0 | i#0,concat%0#0,len%0#0
        int 9                                                                                     (𝕡) append#0 | i#0,concat%0#0,len%0#0,9
        /                                                                                         (𝕡) append#0 | i#0,concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) append#0 | i#0,concat%0#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) append#0 | i#0,concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) append#0 | i#0,as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) append#0 | i#0,concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) append#0 | i#0,arr#0
        v-store arr#0                                                                             (𝕡) append#0 | i#0
        // array/immutable.py:373
        // for i in urange(append):
        l-load i#0 0                                                                              (𝕡) append#0 | i#0
        int 1                                                                                     (𝕡) append#0 | i#0,1
        +                                                                                         (𝕡) append#0 | i#0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_tuple_return_for_header@1                                                          (𝕡) append#0 |

    test_tuple_return_after_for@4:                                                                (𝕡) append#0 |
        // array/immutable.py:375
        // return arr
        v-load arr#0                                                                              (𝕡) append#0 | arr#0
        retsub                                                                                    arr#0


// test_cases.array.immutable.ImmutableArrayContract.test_dynamic_tuple_return(append: uint64) -> bytes:
subroutine test_dynamic_tuple_return:
    test_dynamic_tuple_return_block@0:                                                            (𝕡) append#0 |
        // array/immutable.py:379
        // arr = ImmutableArray(MyDynamicSizedTuple(UInt64(), String("Hello")))
        byte 0x000100020000000000000000000a000548656c6c6f                                         (𝕡) append#0 | 0x000100020000000000000000000a000548656c6c6f
        v-store arr#0                                                                             (𝕡) append#0 |
        // array/immutable.py:380
        // for i in urange(append):
        int 0                                                                                     (𝕡) append#0 | 0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_dynamic_tuple_return_for_header@1                                                  (𝕡) append#0 |

    test_dynamic_tuple_return_for_header@1:                                                       (𝕡) append#0 |
        // array/immutable.py:380
        // for i in urange(append):
        v-load i#0                                                                                (𝕡) append#0 | i#0
        p-load append#0                                                                           (𝕡) append#0 | i#0,append#0 (copy)
        <                                                                                         (𝕡) append#0 | continue_looping%0#0
        bz test_dynamic_tuple_return_after_for@4 ; b test_dynamic_tuple_return_for_body@2 (𝕡) append#0 | 

    test_dynamic_tuple_return_for_body@2:                                                         (𝕡) append#0 |
        // array/immutable.py:381
        // arr = arr.append(MyDynamicSizedTuple(i, times(i)))
        v-load i#0                                                                                (𝕡) append#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) append#0 | i#0,i#0 (copy)
        callsub times                                                                             (𝕡) append#0 | i#0,tmp%0#0
        v-load arr#0                                                                              (𝕡) append#0 | i#0,tmp%0#0,arr#0
        l-store-copy arr#0 0                                                                      (𝕡) append#0 | i#0,tmp%0#0,arr#0,arr#0 (copy)
        int 0                                                                                     (𝕡) append#0 | i#0,tmp%0#0,arr#0,arr#0 (copy),0
        extract_uint16                                                                            (𝕡) append#0 | i#0,tmp%0#0,arr#0,extract_uint16%0#0
        l-load arr#0 1                                                                            (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,arr#0
        extract 2 0                                                                               (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0
        l-load-copy i#0 3                                                                         (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,i#0 (copy)
        itob                                                                                      (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0
        l-load-copy tmp%0#0 3                                                                     (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,tmp%0#0 (copy)
        len                                                                                       (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,length%1#0
        itob                                                                                      (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,as_bytes%4#0
        extract 6 2                                                                               (𝕡) append#0 | i#0,tmp%0#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,length_uint16%1#0
        l-load tmp%0#0 4                                                                          (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,length_uint16%1#0,tmp%0#0
        concat                                                                                    (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,val_as_bytes%1#0,encoded_value%1#0
        l-load val_as_bytes%1#0 1                                                                 (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded_value%1#0,val_as_bytes%1#0
        byte 0x000a                                                                               (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded_value%1#0,val_as_bytes%1#0,0x000a
        concat                                                                                    (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded_value%1#0,encoded%7#0
        l-load encoded_value%1#0 1                                                                (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded%7#0,encoded_value%1#0
        concat                                                                                    (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded%8#0
        byte 0x0002                                                                               (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded%8#0,0x0002
        l-load encoded%8#0 1                                                                      (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,0x0002,encoded%8#0
        concat                                                                                    (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,encoded%10#0
        l-load extract_uint16%0#0 2                                                               (𝕡) append#0 | i#0,extract_to_end%0#0,encoded%10#0,extract_uint16%0#0
        l-load extract_to_end%0#0 2                                                               (𝕡) append#0 | i#0,encoded%10#0,extract_uint16%0#0,extract_to_end%0#0
        int 1                                                                                     (𝕡) append#0 | i#0,encoded%10#0,extract_uint16%0#0,extract_to_end%0#0,1
        l-load encoded%10#0 3                                                                     (𝕡) append#0 | i#0,extract_uint16%0#0,extract_to_end%0#0,1,encoded%10#0
        callsub dynamic_array_concat_dynamic_element                                              (𝕡) append#0 | i#0,arr#0
        v-store arr#0                                                                             (𝕡) append#0 | i#0
        // array/immutable.py:380
        // for i in urange(append):
        l-load i#0 0                                                                              (𝕡) append#0 | i#0
        int 1                                                                                     (𝕡) append#0 | i#0,1
        +                                                                                         (𝕡) append#0 | i#0
        v-store i#0                                                                               (𝕡) append#0 |
        b test_dynamic_tuple_return_for_header@1                                                  (𝕡) append#0 |

    test_dynamic_tuple_return_after_for@4:                                                        (𝕡) append#0 |
        // array/immutable.py:382
        // return arr
        v-load arr#0                                                                              (𝕡) append#0 | arr#0
        retsub                                                                                    arr#0


// test_cases.array.immutable.ImmutableArrayContract.test_convert_to_array_and_back(arr: bytes, append: uint64) -> bytes:
subroutine test_convert_to_array_and_back:
    test_convert_to_array_and_back_block@0:                                                       (𝕡) arr#0,append#0 |
        // array/immutable.py:389
        // mutable.extend(arr)
        p-load arr#0                                                                              (𝕡) arr#0,append#0 | arr#0 (copy)
        extract 2 0                                                                               (𝕡) arr#0,append#0 | extract_to_end%0#0
        v-store slot%0                                                                            (𝕡) arr#0,append#0 |
        // array/immutable.py:390
        // for i in urange(append):
        int 0                                                                                     (𝕡) arr#0,append#0 | 0
        v-store i#0                                                                               (𝕡) arr#0,append#0 |
        b test_convert_to_array_and_back_for_header@1                                             (𝕡) arr#0,append#0 |

    test_convert_to_array_and_back_for_header@1:                                                  (𝕡) arr#0,append#0 |
        // array/immutable.py:390
        // for i in urange(append):
        v-load i#0                                                                                (𝕡) arr#0,append#0 | i#0
        p-load append#0                                                                           (𝕡) arr#0,append#0 | i#0,append#0 (copy)
        <                                                                                         (𝕡) arr#0,append#0 | continue_looping%0#0
        bz test_convert_to_array_and_back_after_for@4 ; b test_convert_to_array_and_back_for_body@2 (𝕡) arr#0,append#0 | 

    test_convert_to_array_and_back_for_body@2:                                                    (𝕡) arr#0,append#0 |
        // array/immutable.py:391
        // mutable.append(MyTuple(foo=i, bar=i % 2 == 0, baz=i % 3 == 0))
        v-load i#0                                                                                (𝕡) arr#0,append#0 | i#0
        l-store-copy i#0 0                                                                        (𝕡) arr#0,append#0 | i#0,i#0 (copy)
        int 2                                                                                     (𝕡) arr#0,append#0 | i#0,i#0 (copy),2
        %                                                                                         (𝕡) arr#0,append#0 | i#0,tmp%0#0
        !                                                                                         (𝕡) arr#0,append#0 | i#0,tmp%1#0
        l-load-copy i#0 1                                                                         (𝕡) arr#0,append#0 | i#0,tmp%1#0,i#0 (copy)
        int 3                                                                                     (𝕡) arr#0,append#0 | i#0,tmp%1#0,i#0 (copy),3
        %                                                                                         (𝕡) arr#0,append#0 | i#0,tmp%1#0,tmp%2#0
        !                                                                                         (𝕡) arr#0,append#0 | i#0,tmp%1#0,tmp%3#0
        v-load slot%0                                                                             (𝕡) arr#0,append#0 | i#0,tmp%1#0,tmp%3#0,slot_contents%1#0
        l-store slot_contents%1#0 3                                                               (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%1#0,tmp%3#0
        l-load-copy i#0 2                                                                         (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%1#0,tmp%3#0,i#0 (copy)
        itob                                                                                      (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%1#0,tmp%3#0,val_as_bytes%0#0
        byte 0x00                                                                                 (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%1#0,tmp%3#0,val_as_bytes%0#0,0x00
        int 0                                                                                     (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%1#0,tmp%3#0,val_as_bytes%0#0,0x00,0
        l-load tmp%1#0 4                                                                          (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,val_as_bytes%0#0,0x00,0,tmp%1#0
        setbit                                                                                    (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,val_as_bytes%0#0,encoded_bit%0#0
        l-load val_as_bytes%0#0 1                                                                 (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,encoded_bit%0#0,val_as_bytes%0#0
        l-load encoded_bit%0#0 1                                                                  (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,val_as_bytes%0#0,encoded_bit%0#0
        concat                                                                                    (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,encoded%2#0
        int 65                                                                                    (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,tmp%3#0,encoded%2#0,65
        l-load tmp%3#0 2                                                                          (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,encoded%2#0,65,tmp%3#0
        setbit                                                                                    (𝕡) arr#0,append#0 | slot_contents%1#0,i#0,set_bit%0#0
        l-load slot_contents%1#0 2                                                                (𝕡) arr#0,append#0 | i#0,set_bit%0#0,slot_contents%1#0
        l-load set_bit%0#0 1                                                                      (𝕡) arr#0,append#0 | i#0,slot_contents%1#0,set_bit%0#0
        concat // on error: max array length exceeded                                             (𝕡) arr#0,append#0 | i#0,concat%1#0
        v-store slot%0                                                                            (𝕡) arr#0,append#0 | i#0
        // array/immutable.py:390
        // for i in urange(append):
        l-load i#0 0                                                                              (𝕡) arr#0,append#0 | i#0
        int 1                                                                                     (𝕡) arr#0,append#0 | i#0,1
        +                                                                                         (𝕡) arr#0,append#0 | i#0
        v-store i#0                                                                               (𝕡) arr#0,append#0 |
        b test_convert_to_array_and_back_for_header@1                                             (𝕡) arr#0,append#0 |

    test_convert_to_array_and_back_after_for@4:                                                   (𝕡) arr#0,append#0 |
        v-load slot%0                                                                             (𝕡) arr#0,append#0 | slot_contents%2#0
        // array/immutable.py:392
        // return mutable.freeze()
        byte 0x0000                                                                               (𝕡) arr#0,append#0 | slot_contents%2#0,0x0000
        l-load slot_contents%2#0 1                                                                (𝕡) arr#0,append#0 | 0x0000,slot_contents%2#0
        concat // on error: max array length exceeded                                             (𝕡) arr#0,append#0 | concat%2#0
        l-load-copy concat%2#0 0                                                                  (𝕡) arr#0,append#0 | concat%2#0,concat%2#0 (copy)
        extract 2 0                                                                               (𝕡) arr#0,append#0 | concat%2#0,extract_to_end%1#0
        len                                                                                       (𝕡) arr#0,append#0 | concat%2#0,len%0#0
        int 9                                                                                     (𝕡) arr#0,append#0 | concat%2#0,len%0#0,9
        /                                                                                         (𝕡) arr#0,append#0 | concat%2#0,div_floor%0#0
        itob                                                                                      (𝕡) arr#0,append#0 | concat%2#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) arr#0,append#0 | concat%2#0,as_u16_bytes%0#0
        l-load concat%2#0 1                                                                       (𝕡) arr#0,append#0 | as_u16_bytes%0#0,concat%2#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) arr#0,append#0 | concat%2#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) arr#0,append#0 | replace%0#0
        retsub                                                                                    replace%0#0


// test_cases.array.immutable.ImmutableArrayContract.test_concat_with_arc4_tuple(arg: bytes) -> bytes:
subroutine test_concat_with_arc4_tuple:
    test_concat_with_arc4_tuple_block@0:                                                          (𝕡) arg#0 |
        // array/immutable.py:398
        // prefix = ImmutableArray(arc4.UInt64(1), arc4.UInt64(2))
        byte 0x000200000000000000010000000000000002                                               (𝕡) arg#0 | 0x000200000000000000010000000000000002
        // array/immutable.py:399
        // result = prefix + arg
        p-load arg#0                                                                              (𝕡) arg#0 | 0x000200000000000000010000000000000002,arg#0 (copy)
        concat // on error: max array length exceeded                                             (𝕡) arg#0 | concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) arg#0 | concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) arg#0 | concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) arg#0 | concat%0#0,len%0#0
        int 8                                                                                     (𝕡) arg#0 | concat%0#0,len%0#0,8
        /                                                                                         (𝕡) arg#0 | concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) arg#0 | concat%0#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) arg#0 | concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) arg#0 | as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) arg#0 | concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) arg#0 | result#0
        // array/immutable.py:400
        // return result
        retsub                                                                                    result#0


// test_cases.array.immutable.ImmutableArrayContract.test_concat_with_native_tuple(arg.0: bytes, arg.1: bytes) -> bytes:
subroutine test_concat_with_native_tuple:
    test_concat_with_native_tuple_block@0:                                                        (𝕡) arg.0#0,arg.1#0 |
        // array/immutable.py:407
        // result = prefix + arg
        p-load arg.0#0                                                                            (𝕡) arg.0#0,arg.1#0 | arg.0#0 (copy)
        p-load arg.1#0                                                                            (𝕡) arg.0#0,arg.1#0 | arg.0#0 (copy),arg.1#0 (copy)
        concat                                                                                    (𝕡) arg.0#0,arg.1#0 | encoded%5#0
        // array/immutable.py:406
        // prefix = ImmutableArray(arc4.UInt64(1), arc4.UInt64(2))
        byte 0x000200000000000000010000000000000002                                               (𝕡) arg.0#0,arg.1#0 | encoded%5#0,0x000200000000000000010000000000000002
        // array/immutable.py:407
        // result = prefix + arg
        l-load encoded%5#0 1                                                                      (𝕡) arg.0#0,arg.1#0 | 0x000200000000000000010000000000000002,encoded%5#0
        concat // on error: max array length exceeded                                             (𝕡) arg.0#0,arg.1#0 | concat%0#0
        l-load-copy concat%0#0 0                                                                  (𝕡) arg.0#0,arg.1#0 | concat%0#0,concat%0#0 (copy)
        extract 2 0                                                                               (𝕡) arg.0#0,arg.1#0 | concat%0#0,extract_to_end%0#0
        len                                                                                       (𝕡) arg.0#0,arg.1#0 | concat%0#0,len%0#0
        int 8                                                                                     (𝕡) arg.0#0,arg.1#0 | concat%0#0,len%0#0,8
        /                                                                                         (𝕡) arg.0#0,arg.1#0 | concat%0#0,div_floor%0#0
        itob                                                                                      (𝕡) arg.0#0,arg.1#0 | concat%0#0,as_bytes%1#0
        extract 6 2                                                                               (𝕡) arg.0#0,arg.1#0 | concat%0#0,as_u16_bytes%0#0
        l-load concat%0#0 1                                                                       (𝕡) arg.0#0,arg.1#0 | as_u16_bytes%0#0,concat%0#0
        l-load as_u16_bytes%0#0 1                                                                 (𝕡) arg.0#0,arg.1#0 | concat%0#0,as_u16_bytes%0#0
        replace2 0                                                                                (𝕡) arg.0#0,arg.1#0 | result#0
        // array/immutable.py:408
        // return result
        retsub                                                                                    result#0


// test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_arc4_tuple(arg: bytes) -> bytes:
subroutine test_dynamic_concat_with_arc4_tuple:
    test_dynamic_concat_with_arc4_tuple_block@0:                                                  (𝕡) arg#0 |
        // array/immutable.py:415
        // result = prefix + arg
        p-load arg#0                                                                              (𝕡) arg#0 | arg#0 (copy)
        len                                                                                       (𝕡) arg#0 | total_length%0#0
        p-load arg#0                                                                              (𝕡) arg#0 | total_length%0#0,arg#0 (copy)
        int 4                                                                                     (𝕡) arg#0 | total_length%0#0,arg#0 (copy),4
        l-load total_length%0#0 2                                                                 (𝕡) arg#0 | arg#0 (copy),4,total_length%0#0
        substring3                                                                                (𝕡) arg#0 | data%0#0
        // array/immutable.py:414
        // prefix = ImmutableArray(arc4.String("a"), arc4.String("b"))
        byte 0x000200040007000161000162                                                           (𝕡) arg#0 | data%0#0,0x000200040007000161000162
        // array/immutable.py:415
        // result = prefix + arg
        l-load data%0#0 1                                                                         (𝕡) arg#0 | 0x000200040007000161000162,data%0#0
        int 2                                                                                     (𝕡) arg#0 | 0x000200040007000161000162,data%0#0,2
        callsub dynamic_array_concat_byte_length_head                                             (𝕡) arg#0 | result#0
        // array/immutable.py:416
        // return result
        retsub                                                                                    result#0


// test_cases.array.immutable.ImmutableArrayContract.test_dynamic_concat_with_native_tuple(arg.0: bytes, arg.1: bytes) -> bytes:
subroutine test_dynamic_concat_with_native_tuple:
    test_dynamic_concat_with_native_tuple_block@0:                                                (𝕡) arg.0#0,arg.1#0 |
        // array/immutable.py:423
        // result = prefix + arg
        p-load arg.0#0                                                                            (𝕡) arg.0#0,arg.1#0 | arg.0#0 (copy)
        len                                                                                       (𝕡) arg.0#0,arg.1#0 | data_length%2#0
        int 4                                                                                     (𝕡) arg.0#0,arg.1#0 | data_length%2#0,4
        l-load data_length%2#0 1                                                                  (𝕡) arg.0#0,arg.1#0 | 4,data_length%2#0
        +                                                                                         (𝕡) arg.0#0,arg.1#0 | current_tail_offset%2#0
        p-load arg.0#0                                                                            (𝕡) arg.0#0,arg.1#0 | current_tail_offset%2#0,arg.0#0 (copy)
        p-load arg.1#0                                                                            (𝕡) arg.0#0,arg.1#0 | current_tail_offset%2#0,arg.0#0 (copy),arg.1#0 (copy)
        concat                                                                                    (𝕡) arg.0#0,arg.1#0 | current_tail_offset%2#0,tail%3#0
        l-load current_tail_offset%2#0 1                                                          (𝕡) arg.0#0,arg.1#0 | tail%3#0,current_tail_offset%2#0
        itob                                                                                      (𝕡) arg.0#0,arg.1#0 | tail%3#0,as_bytes%6#0
        extract 6 2                                                                               (𝕡) arg.0#0,arg.1#0 | tail%3#0,offset_as_uint16%3#0
        byte 0x0004                                                                               (𝕡) arg.0#0,arg.1#0 | tail%3#0,offset_as_uint16%3#0,0x0004
        l-load offset_as_uint16%3#0 1                                                             (𝕡) arg.0#0,arg.1#0 | tail%3#0,0x0004,offset_as_uint16%3#0
        concat                                                                                    (𝕡) arg.0#0,arg.1#0 | tail%3#0,encoded%5#0
        l-load tail%3#0 1                                                                         (𝕡) arg.0#0,arg.1#0 | encoded%5#0,tail%3#0
        concat                                                                                    (𝕡) arg.0#0,arg.1#0 | encoded%6#0
        l-load-copy encoded%6#0 0                                                                 (𝕡) arg.0#0,arg.1#0 | encoded%6#0,encoded%6#0 (copy)
        len                                                                                       (𝕡) arg.0#0,arg.1#0 | encoded%6#0,total_length%0#0
        l-load encoded%6#0 1                                                                      (𝕡) arg.0#0,arg.1#0 | total_length%0#0,encoded%6#0
        int 4                                                                                     (𝕡) arg.0#0,arg.1#0 | total_length%0#0,encoded%6#0,4
        l-load total_length%0#0 2                                                                 (𝕡) arg.0#0,arg.1#0 | encoded%6#0,4,total_length%0#0
        substring3                                                                                (𝕡) arg.0#0,arg.1#0 | data%0#0
        // array/immutable.py:422
        // prefix = ImmutableArray(arc4.String("a"), arc4.String("b"))
        byte 0x000200040007000161000162                                                           (𝕡) arg.0#0,arg.1#0 | data%0#0,0x000200040007000161000162
        // array/immutable.py:423
        // result = prefix + arg
        l-load data%0#0 1                                                                         (𝕡) arg.0#0,arg.1#0 | 0x000200040007000161000162,data%0#0
        int 2                                                                                     (𝕡) arg.0#0,arg.1#0 | 0x000200040007000161000162,data%0#0,2
        callsub dynamic_array_concat_byte_length_head                                             (𝕡) arg.0#0,arg.1#0 | result#0
        // array/immutable.py:424
        // return result
        retsub                                                                                    result#0


// test_cases.array.immutable.ImmutableArrayContract.test_concat_immutable_dynamic(imm1: bytes, imm2: bytes) -> bytes:
subroutine test_concat_immutable_dynamic:
    test_concat_immutable_dynamic_block@0:                                                        (𝕡) imm1#0,imm2#0 |
        // array/immutable.py:430
        // return imm1 + imm2
        p-load imm1#0                                                                             (𝕡) imm1#0,imm2#0 | imm1#0 (copy)
        int 0                                                                                     (𝕡) imm1#0,imm2#0 | imm1#0 (copy),0
        extract_uint16                                                                            (𝕡) imm1#0,imm2#0 | extract_uint16%0#0
        p-load imm1#0                                                                             (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,imm1#0 (copy)
        extract 2 0                                                                               (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0
        p-load imm2#0                                                                             (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,imm2#0 (copy)
        extract 2 0                                                                               (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,extract_to_end%1#0
        p-load imm2#0                                                                             (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,extract_to_end%1#0,imm2#0 (copy)
        int 0                                                                                     (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,extract_to_end%1#0,imm2#0 (copy),0
        extract_uint16                                                                            (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,extract_to_end%1#0,array%array_length%0#1
        l-load extract_uint16%0#0 3                                                               (𝕡) imm1#0,imm2#0 | extract_to_end%0#0,extract_to_end%1#0,array%array_length%0#1,extract_uint16%0#0
        l-load extract_to_end%0#0 3                                                               (𝕡) imm1#0,imm2#0 | extract_to_end%1#0,array%array_length%0#1,extract_uint16%0#0,extract_to_end%0#0
        l-load array%array_length%0#1 2                                                           (𝕡) imm1#0,imm2#0 | extract_to_end%1#0,extract_uint16%0#0,extract_to_end%0#0,array%array_length%0#1
        l-load extract_to_end%1#0 3                                                               (𝕡) imm1#0,imm2#0 | extract_uint16%0#0,extract_to_end%0#0,array%array_length%0#1,extract_to_end%1#0
        callsub dynamic_array_concat_dynamic_element                                              (𝕡) imm1#0,imm2#0 | as_Encoded(len+(uint64,len+utf8[])[])%0#0
        retsub                                                                                    as_Encoded(len+(uint64,len+utf8[])[])%0#0


// test_cases.array.immutable.ImmutableArrayContract.test_immutable_arc4(imm: bytes) -> bytes:
subroutine test_immutable_arc4:
    test_immutable_arc4_block@0:                                                                  (𝕡) imm#0 |
        // array/immutable.py:434
        // assert imm, "expected non empty array"
        p-load imm#0                                                                              (𝕡) imm#0 | imm#0 (copy)
        int 0                                                                                     (𝕡) imm#0 | imm#0 (copy),0
        extract_uint16                                                                            (𝕡) imm#0 | array%array_length%0#1
        l-load-copy array%array_length%0#1 0                                                      (𝕡) imm#0 | array%array_length%0#1,array%array_length%0#1 (copy)
        assert // expected non empty array                                                        (𝕡) imm#0 | array%array_length%0#1
        // array/immutable.py:435
        // imm = imm.replace(imm.length - 1, imm[0])
        l-load array%array_length%0#1 0                                                           (𝕡) imm#0 | array%array_length%0#1
        int 1                                                                                     (𝕡) imm#0 | array%array_length%0#1,1
        -                                                                                         (𝕡) imm#0 | tmp%3#0
        p-load imm#0                                                                              (𝕡) imm#0 | tmp%3#0,imm#0 (copy)
        extract 2 16                                                                              (𝕡) imm#0 | tmp%3#0,encoded_element%0#0
        l-load tmp%3#0 1                                                                          (𝕡) imm#0 | encoded_element%0#0,tmp%3#0
        int 16                                                                                    (𝕡) imm#0 | encoded_element%0#0,tmp%3#0,16
        *                                                                                         (𝕡) imm#0 | encoded_element%0#0,write_offset%0#0
        int 2                                                                                     (𝕡) imm#0 | encoded_element%0#0,write_offset%0#0,2
        +                                                                                         (𝕡) imm#0 | encoded_element%0#0,write_offset_with_length_header%0#0
        p-load imm#0                                                                              (𝕡) imm#0 | encoded_element%0#0,write_offset_with_length_header%0#0,imm#0 (copy)
        l-load write_offset_with_length_header%0#0 1                                              (𝕡) imm#0 | encoded_element%0#0,imm#0 (copy),write_offset_with_length_header%0#0
        l-load encoded_element%0#0 2                                                              (𝕡) imm#0 | imm#0 (copy),write_offset_with_length_header%0#0,encoded_element%0#0
        replace3                                                                                  (𝕡) imm#0 | imm#0
        p-store imm#0                                                                             (𝕡) imm#0 |
        // array/immutable.py:436
        // return imm
        p-load imm#0                                                                              (𝕡) imm#0 | imm#0 (copy)
        retsub                                                                                    imm#0 (copy)


