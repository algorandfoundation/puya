// Op                                                                                Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txn NumAppArgs                                                               tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                               tmp%0#1
        bz main___algopy_default_create@19 ; b main_abi_routing@2

    main_abi_routing@2:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txn OnCompletion                                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                               tmp%2#0
        !                                                                            tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                               tmp%3#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                            tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert
        txna ApplicationArgs 0                                                       tmp%6#0
        v-store tmp%6#0
        method test_array()void                                                      Method(test_array()void)
        method test_array_extend()void                                               Method(test_array()void),Method(test_array_extend()void)
        method test_array_multiple_append()void                                      Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void)
        method overhead()void                                                        Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void)
        method test_array_too_long()void                                             Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void)
        method test_array_copy_and_extend()void                                      Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void)
        method test_array_evaluation_order()void                                     Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void)
        method test_array_assignment_maximum_cursage()void                           Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void)
        method test_allocations(uint64)void                                          Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void)
        method test_iteration()void                                                  Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void)
        method test_quicksort()void                                                  Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void)
        method test_unobserved_write()void                                           Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void),Method(test_unobserved_write()void)
        v-load tmp%6#0                                                               Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void),Method(test_unobserved_write()void),tmp%6#0
        match main_test_array_route@4 main_test_array_extend_route@5 main_test_array_multiple_append_route@6 main_overhead_route@7 main_test_array_too_long_route@8 main_test_array_copy_and_extend_route@9 main_test_array_evaluation_order_route@10 main_test_array_assignment_maximum_cursage_route@11 main_test_allocations_route@12 main_test_iteration_route@13 main_test_quicksort_route@14 main_test_unobserved_write_route@15 ; b main_after_if_else@18 

    main_test_array_route@4:
        // array/uint64.py:14
        // @arc4.abimethod()
        callsub test_array
        b main_after_if_else@18

    main_test_array_extend_route@5:
        // array/uint64.py:50
        // @arc4.abimethod()
        callsub test_array_extend
        b main_after_if_else@18

    main_test_array_multiple_append_route@6:
        // array/uint64.py:62
        // @arc4.abimethod()
        callsub test_array_multiple_append
        b main_after_if_else@18

    main_overhead_route@7:
        // array/uint64.py:71
        // @arc4.abimethod()
        int 1                                                                        1
        return

    main_test_array_too_long_route@8:
        // array/uint64.py:75
        // @arc4.abimethod()
        callsub test_array_too_long
        b main_after_if_else@18

    main_test_array_copy_and_extend_route@9:
        // array/uint64.py:84
        // @arc4.abimethod()
        callsub test_array_copy_and_extend
        b main_after_if_else@18

    main_test_array_evaluation_order_route@10:
        // array/uint64.py:106
        // @arc4.abimethod()
        callsub test_array_evaluation_order
        b main_after_if_else@18

    main_test_array_assignment_maximum_cursage_route@11:
        // array/uint64.py:125
        // @arc4.abimethod()
        callsub test_array_assignment_maximum_cursage
        b main_after_if_else@18

    main_test_allocations_route@12:
        // array/uint64.py:134
        // @arc4.abimethod()
        callsub test_allocations
        b main_after_if_else@18

    main_test_iteration_route@13:
        // array/uint64.py:140
        // @arc4.abimethod()
        callsub test_iteration
        b main_after_if_else@18

    main_test_quicksort_route@14:
        // array/uint64.py:174
        // @arc4.abimethod()
        callsub test_quicksort
        b main_after_if_else@18

    main_test_unobserved_write_route@15:
        // array/uint64.py:191
        // @arc4.abimethod()
        callsub test_unobserved_write
        b main_after_if_else@18

    main_after_if_else@18:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        err

    main___algopy_default_create@19:
        txn OnCompletion                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                               tmp%7#0
        !                                                                            tmp%8#0
        v-store tmp%8#0
        txn ApplicationID                                                            tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                               tmp%9#0
        !                                                                            tmp%10#0
        v-store tmp%10#0
        v-load tmp%8#0                                                               tmp%8#0
        v-load tmp%10#0                                                              tmp%8#0,tmp%10#0
        &&                                                                           tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                              tmp%11#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                        1
        return


// test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
subroutine quicksort_window:
    quicksort_window_block@0:                                                        (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:207
        // pivot = arr[(window_left + window_right) // 2]
        p-load window_left#0                                                         (ùï°) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        p-load window_right#0                                                        (ùï°) arr#0,window_left#0,window_right#0 | window_left#0 (copy),window_right#0 (copy)
        +                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%0#0
        v-store tmp%0#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%0#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | tmp%0#0
        int 2                                                                        (ùï°) arr#0,window_left#0,window_right#0 | tmp%0#0,2
        /                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%1#0
        v-store tmp%1#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%0#0
        v-store slot_contents%0#0                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%1#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | tmp%1#0
        int 8                                                                        (ùï°) arr#0,window_left#0,window_right#0 | tmp%1#0,8
        *                                                                            (ùï°) arr#0,window_left#0,window_right#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                           (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%0#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%0#0
        v-load aggregate%bytes_offset%0#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%0#0,aggregate%bytes_offset%0#0
        extract_uint64                                                               (ùï°) arr#0,window_left#0,window_right#0 | pivot#0
        v-store pivot#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        p-load window_right#0                                                        (ùï°) arr#0,window_left#0,window_right#0 | window_right#0 (copy)
        v-store right#1                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        p-load window_left#0                                                         (ùï°) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        v-store left#1                                                               (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@3                                               (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_top@3:                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:212
        // while arr[left] < pivot:
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%1#0
        v-store slot_contents%1#0                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        int 8                                                                        (ùï°) arr#0,window_left#0,window_right#0 | left#1,8
        *                                                                            (ùï°) arr#0,window_left#0,window_right#0 | aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0                                           (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%1#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%1#0
        v-load aggregate%bytes_offset%1#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%1#0,aggregate%bytes_offset%1#0
        extract_uint64                                                               (ùï°) arr#0,window_left#0,window_right#0 | values%1#0
        v-store values%1#0                                                           (ùï°) arr#0,window_left#0,window_right#0 |
        v-load values%1#0                                                            (ùï°) arr#0,window_left#0,window_right#0 | values%1#0
        v-load pivot#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | values%1#0,pivot#0
        <                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%2#0
        v-store tmp%2#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%2#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | tmp%2#0
        bz quicksort_window_while_top@6 ; b quicksort_window_while_body@4            (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_body@4:                                                   (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:213
        // left += 1
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                            (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                               (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@3                                               (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_top@6:                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:215
        // while pivot < arr[right]:
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%2#0
        v-store slot_contents%2#0                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        int 8                                                                        (ùï°) arr#0,window_left#0,window_right#0 | right#1,8
        *                                                                            (ùï°) arr#0,window_left#0,window_right#0 | aggregate%bytes_offset%2#0
        v-store aggregate%bytes_offset%2#0                                           (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%2#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%2#0
        v-load aggregate%bytes_offset%2#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%2#0,aggregate%bytes_offset%2#0
        extract_uint64                                                               (ùï°) arr#0,window_left#0,window_right#0 | values%2#0
        v-store values%2#0                                                           (ùï°) arr#0,window_left#0,window_right#0 |
        v-load pivot#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | pivot#0
        v-load values%2#0                                                            (ùï°) arr#0,window_left#0,window_right#0 | pivot#0,values%2#0
        <                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%4#0
        v-store tmp%4#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%4#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | tmp%4#0
        bz quicksort_window_after_while@10 ; b quicksort_window_while_body@7         (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_body@7:                                                   (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:217
        // if not right:
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@9      (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@9:                                                (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:219
        // right -= 1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                            (ùï°) arr#0,window_left#0,window_right#0 | right#1
        v-store right#1                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@6                                               (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_while@10:                                                 (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:222
        // if left < right:
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | left#1,right#1
        <                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%7#0
        v-store tmp%7#0                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%7#0                                                               (ùï°) arr#0,window_left#0,window_right#0 | tmp%7#0
        bz quicksort_window_after_if_else@16 ; b quicksort_window_if_body@11         (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@11:                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:223
        // arr[left], arr[right] = arr[right], arr[left]
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0
        v-store slot_contents%3#0                                                    (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%3#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0
        v-load aggregate%bytes_offset%2#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%2#0
        int 8                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%2#0,8
        extract3 // on error: index access is out of bounds                          (ùï°) arr#0,window_left#0,window_right#0 | aggregate%encoded_element%3#0
        v-store aggregate%encoded_element%3#0                                        (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%3#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0
        v-load aggregate%bytes_offset%1#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%1#0
        int 8                                                                        (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%1#0,8
        extract3 // on error: index access is out of bounds                          (ùï°) arr#0,window_left#0,window_right#0 | aggregate%encoded_element%4#0
        v-store aggregate%encoded_element%4#0                                        (ùï°) arr#0,window_left#0,window_right#0 |
        v-load slot_contents%3#0                                                     (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0
        v-load aggregate%bytes_offset%1#0                                            (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%1#0
        v-load aggregate%encoded_element%3#0                                         (ùï°) arr#0,window_left#0,window_right#0 | slot_contents%3#0,aggregate%bytes_offset%1#0,aggregate%encoded_element%3#0
        replace3 // on error: index access is out of bounds                          (ùï°) arr#0,window_left#0,window_right#0 | aggregate%updated_array%0#0
        v-store aggregate%updated_array%0#0                                          (ùï°) arr#0,window_left#0,window_right#0 |
        v-load aggregate%updated_array%0#0                                           (ùï°) arr#0,window_left#0,window_right#0 | aggregate%updated_array%0#0
        v-load aggregate%bytes_offset%2#0                                            (ùï°) arr#0,window_left#0,window_right#0 | aggregate%updated_array%0#0,aggregate%bytes_offset%2#0
        v-load aggregate%encoded_element%4#0                                         (ùï°) arr#0,window_left#0,window_right#0 | aggregate%updated_array%0#0,aggregate%bytes_offset%2#0,aggregate%encoded_element%4#0
        replace3 // on error: index access is out of bounds                          (ùï°) arr#0,window_left#0,window_right#0 | aggregate%updated_array%1#0
        v-store aggregate%updated_array%1#0                                          (ùï°) arr#0,window_left#0,window_right#0 |
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        v-load aggregate%updated_array%1#0                                           (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy),aggregate%updated_array%1#0
        stores                                                                       (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:224
        // left += 1
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                            (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                               (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:226
        // if not right:
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@13     (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@13:                                               (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:228
        // right -= 1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                            (ùï°) arr#0,window_left#0,window_right#0 | right#1
        v-store right#1                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:230
        // if left <= right:
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | left#1,right#1
        <=                                                                           (ùï°) arr#0,window_left#0,window_right#0 | tmp%11#0
        v-store tmp%11#0                                                             (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%11#0                                                              (ùï°) arr#0,window_left#0,window_right#0 | tmp%11#0
        bz quicksort_window_after_while@22 ; b quicksort_window_while_top@3          (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@16:                                               (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:236
        // if left == right:
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | left#1,right#1
        ==                                                                           (ùï°) arr#0,window_left#0,window_right#0 | tmp%12#0
        v-store tmp%12#0                                                             (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%12#0                                                              (ùï°) arr#0,window_left#0,window_right#0 | tmp%12#0
        bz quicksort_window_after_while@22 ; b quicksort_window_if_body@17           (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@17:                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:237
        // left += 1
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                            (ùï°) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                               (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:239
        // if right:
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_if_body@18           (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@18:                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:240
        // right -= 1
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                        (ùï°) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                            (ùï°) arr#0,window_left#0,window_right#0 | right#1
        v-store right#1                                                              (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_while@22                                            (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_while@22:                                                 (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:248
        // if window_left < right:
        p-load window_left#0                                                         (ùï°) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | window_left#0 (copy),right#1
        <                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%16#0
        v-store tmp%16#0                                                             (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%16#0                                                              (ùï°) arr#0,window_left#0,window_right#0 | tmp%16#0
        bz quicksort_window_after_if_else@24 ; b quicksort_window_if_body@23         (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@23:                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:249
        // quicksort_window(arr, window_left, right)
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        p-load window_left#0                                                         (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy),window_left#0 (copy)
        v-load right#1                                                               (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy),window_left#0 (copy),right#1
        callsub quicksort_window                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_if_else@24                                          (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@24:                                               (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:251
        // if left < window_right:
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | left#1
        p-load window_right#0                                                        (ùï°) arr#0,window_left#0,window_right#0 | left#1,window_right#0 (copy)
        <                                                                            (ùï°) arr#0,window_left#0,window_right#0 | tmp%17#0
        v-store tmp%17#0                                                             (ùï°) arr#0,window_left#0,window_right#0 |
        v-load tmp%17#0                                                              (ùï°) arr#0,window_left#0,window_right#0 | tmp%17#0
        bz quicksort_window_after_if_else@26 ; b quicksort_window_if_body@25         (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@25:                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:252
        // quicksort_window(arr, left, window_right)
        p-load arr#0                                                                 (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        v-load left#1                                                                (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy),left#1
        p-load window_right#0                                                        (ùï°) arr#0,window_left#0,window_right#0 | arr#0 (copy),left#1,window_right#0 (copy)
        callsub quicksort_window                                                     (ùï°) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_if_else@26                                          (ùï°) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@26:                                               (ùï°) arr#0,window_left#0,window_right#0 |
        retsub


// test_cases.array.uint64.create_array() -> uint64:
subroutine create_array:
    create_array_block@0:
        // array/uint64.py:257
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        v-load arr#0                                                                 arr#0
        byte 0x                                                                      arr#0,0x
        stores
        // array/uint64.py:258
        // for i in urange(5):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b create_array_for_header@1

    create_array_for_header@1:
        // array/uint64.py:258
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 5                                                                        i#0,5
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz create_array_after_for@4 ; b create_array_for_body@2

    create_array_for_body@2:
        // array/uint64.py:259
        // arr.append(i)
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%0#0
        v-store slot_contents%0#0
        v-load i#0                                                                   i#0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        v-load arr#0                                                                 arr#0
        v-load concat%0#0                                                            arr#0,concat%0#0
        stores
        // array/uint64.py:258
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 1                                                                        i#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b create_array_for_header@1

    create_array_after_for@4:
        // array/uint64.py:260
        // return arr
        v-load arr#0                                                                 arr#0
        retsub                                                                       arr#0


// test_cases.array.uint64.assert_last_is_zero(arr: uint64) -> void:
subroutine assert_last_is_zero:
    assert_last_is_zero_block@0:                                                     (ùï°) arr#0 |
        // array/uint64.py:265
        // assert arr[arr.length - 1] == 0
        p-load arr#0                                                                 (ùï°) arr#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0 | aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0                                          (ùï°) arr#0 |
        v-load aggregate%slot_contents%0#0                                           (ùï°) arr#0 | aggregate%slot_contents%0#0
        len                                                                          (ùï°) arr#0 | aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0                                              (ùï°) arr#0 |
        v-load aggregate%bytes_len%0#0                                               (ùï°) arr#0 | aggregate%bytes_len%0#0
        int 8                                                                        (ùï°) arr#0 | aggregate%bytes_len%0#0,8
        /                                                                            (ùï°) arr#0 | aggregate%array_len%0#0
        v-store aggregate%array_len%0#0                                              (ùï°) arr#0 |
        v-load aggregate%array_len%0#0                                               (ùï°) arr#0 | aggregate%array_len%0#0
        int 1                                                                        (ùï°) arr#0 | aggregate%array_len%0#0,1
        -                                                                            (ùï°) arr#0 | tmp%1#0
        v-store tmp%1#0                                                              (ùï°) arr#0 |
        v-load tmp%1#0                                                               (ùï°) arr#0 | tmp%1#0
        int 8                                                                        (ùï°) arr#0 | tmp%1#0,8
        *                                                                            (ùï°) arr#0 | aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0                                           (ùï°) arr#0 |
        v-load aggregate%slot_contents%0#0                                           (ùï°) arr#0 | aggregate%slot_contents%0#0
        v-load aggregate%bytes_offset%0#0                                            (ùï°) arr#0 | aggregate%slot_contents%0#0,aggregate%bytes_offset%0#0
        extract_uint64                                                               (ùï°) arr#0 | values%0#0
        v-store values%0#0                                                           (ùï°) arr#0 |
        v-load values%0#0                                                            (ùï°) arr#0 | values%0#0
        !                                                                            (ùï°) arr#0 | tmp%2#0
        v-store tmp%2#0                                                              (ùï°) arr#0 |
        v-load tmp%2#0                                                               (ùï°) arr#0 | tmp%2#0
        assert                                                                       (ùï°) arr#0 |
        retsub


// test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
subroutine add_x:
    add_x_block@0:                                                                   (ùï°) arr#0,x#0 |
        // array/uint64.py:279
        // for i in urange(x):
        int 0                                                                        (ùï°) arr#0,x#0 | 0
        v-store value_internal%0#0                                                   (ùï°) arr#0,x#0 |
        v-load value_internal%0#0                                                    (ùï°) arr#0,x#0 | value_internal%0#0
        v-store i#0                                                                  (ùï°) arr#0,x#0 |
        b add_x_for_header@1                                                         (ùï°) arr#0,x#0 |

    add_x_for_header@1:                                                              (ùï°) arr#0,x#0 |
        // array/uint64.py:279
        // for i in urange(x):
        v-load i#0                                                                   (ùï°) arr#0,x#0 | i#0
        p-load x#0                                                                   (ùï°) arr#0,x#0 | i#0,x#0 (copy)
        <                                                                            (ùï°) arr#0,x#0 | continue_looping%0#0
        v-store continue_looping%0#0                                                 (ùï°) arr#0,x#0 |
        v-load continue_looping%0#0                                                  (ùï°) arr#0,x#0 | continue_looping%0#0
        bz add_x_after_for@4 ; b add_x_for_body@2                                    (ùï°) arr#0,x#0 |

    add_x_for_body@2:                                                                (ùï°) arr#0,x#0 |
        // array/uint64.py:280
        // arr.append(i)
        p-load arr#0                                                                 (ùï°) arr#0,x#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0,x#0 | slot_contents%0#0
        v-store slot_contents%0#0                                                    (ùï°) arr#0,x#0 |
        v-load i#0                                                                   (ùï°) arr#0,x#0 | i#0
        itob                                                                         (ùï°) arr#0,x#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                           (ùï°) arr#0,x#0 |
        v-load slot_contents%0#0                                                     (ùï°) arr#0,x#0 | slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            (ùï°) arr#0,x#0 | slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                (ùï°) arr#0,x#0 | concat%0#0
        v-store concat%0#0                                                           (ùï°) arr#0,x#0 |
        p-load arr#0                                                                 (ùï°) arr#0,x#0 | arr#0 (copy)
        v-load concat%0#0                                                            (ùï°) arr#0,x#0 | arr#0 (copy),concat%0#0
        stores                                                                       (ùï°) arr#0,x#0 |
        // array/uint64.py:279
        // for i in urange(x):
        v-load i#0                                                                   (ùï°) arr#0,x#0 | i#0
        int 1                                                                        (ùï°) arr#0,x#0 | i#0,1
        +                                                                            (ùï°) arr#0,x#0 | value_internal%0#0
        v-store value_internal%0#0                                                   (ùï°) arr#0,x#0 |
        v-load value_internal%0#0                                                    (ùï°) arr#0,x#0 | value_internal%0#0
        v-store i#0                                                                  (ùï°) arr#0,x#0 |
        b add_x_for_header@1                                                         (ùï°) arr#0,x#0 |

    add_x_after_for@4:                                                               (ùï°) arr#0,x#0 |
        retsub


// test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
subroutine append_length_and_return:
    append_length_and_return_block@0:                                                (ùï°) arr#0 |
        // array/uint64.py:293
        // arr.append(arr.length)
        p-load arr#0                                                                 (ùï°) arr#0 | arr#0 (copy)
        loads                                                                        (ùï°) arr#0 | aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0                                          (ùï°) arr#0 |
        v-load aggregate%slot_contents%0#0                                           (ùï°) arr#0 | aggregate%slot_contents%0#0
        len                                                                          (ùï°) arr#0 | aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0                                              (ùï°) arr#0 |
        v-load aggregate%bytes_len%0#0                                               (ùï°) arr#0 | aggregate%bytes_len%0#0
        int 8                                                                        (ùï°) arr#0 | aggregate%bytes_len%0#0,8
        /                                                                            (ùï°) arr#0 | aggregate%array_len%0#0
        v-store aggregate%array_len%0#0                                              (ùï°) arr#0 |
        v-load aggregate%array_len%0#0                                               (ùï°) arr#0 | aggregate%array_len%0#0
        itob                                                                         (ùï°) arr#0 | aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0                                           (ùï°) arr#0 |
        v-load aggregate%slot_contents%0#0                                           (ùï°) arr#0 | aggregate%slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            (ùï°) arr#0 | aggregate%slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                (ùï°) arr#0 | concat%0#0
        v-store concat%0#0                                                           (ùï°) arr#0 |
        p-load arr#0                                                                 (ùï°) arr#0 | arr#0 (copy)
        v-load concat%0#0                                                            (ùï°) arr#0 | arr#0 (copy),concat%0#0
        stores                                                                       (ùï°) arr#0 |
        // array/uint64.py:294
        // return arr
        p-load arr#0                                                                 (ùï°) arr#0 | arr#0 (copy)
        retsub                                                                       arr#0 (copy)


// test_cases.array.uint64.Contract.test_array[routing]() -> void:
subroutine test_array:
    test_array_block@0:
        // array/uint64.py:16
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        // array/uint64.py:19
        // arr.append(UInt64(42))
        int 42                                                                       42
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%val_as_bytes%0#0                                            arr#0,aggregate%val_as_bytes%0#0
        stores
        // array/uint64.py:23
        // add_x(arr, UInt64(5))
        v-load arr#0                                                                 arr#0
        int 5                                                                        arr#0,5
        callsub add_x
        // array/uint64.py:24
        // assert arr.length == 6
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%3#0
        v-store aggregate%slot_contents%3#0
        v-load aggregate%slot_contents%3#0                                           aggregate%slot_contents%3#0
        len                                                                          aggregate%bytes_len%3#0
        v-store aggregate%bytes_len%3#0
        v-load aggregate%bytes_len%3#0                                               aggregate%bytes_len%3#0
        int 8                                                                        aggregate%bytes_len%3#0,8
        /                                                                            aggregate%array_len%3#0
        v-store aggregate%array_len%3#0
        v-load aggregate%array_len%3#0                                               aggregate%array_len%3#0
        int 6                                                                        aggregate%array_len%3#0,6
        ==                                                                           tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                               tmp%9#0
        assert
        // array/uint64.py:25
        // assert arr[-1] == 4
        v-load aggregate%array_len%3#0                                               aggregate%array_len%3#0
        int 1                                                                        aggregate%array_len%3#0,1
        -                                                                            tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                              tmp%11#0
        int 8                                                                        tmp%11#0,8
        *                                                                            aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0
        v-load aggregate%slot_contents%3#0                                           aggregate%slot_contents%3#0
        v-load aggregate%bytes_offset%1#0                                            aggregate%slot_contents%3#0,aggregate%bytes_offset%1#0
        extract_uint64                                                               values%1#0
        v-store values%1#0
        v-load values%1#0                                                            values%1#0
        int 4                                                                        values%1#0,4
        ==                                                                           tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                              tmp%12#0
        assert
        // array/uint64.py:27
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 4                                                                        4
        v-store expected#0
        // array/uint64.py:285
        // for _i in urange(x):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store _i#0
        b test_array_for_header@2

    test_array_for_header@2:
        // array/uint64.py:285
        // for _i in urange(x):
        v-load _i#0                                                                  _i#0
        // array/uint64.py:27
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 3                                                                        _i#0,3
        // array/uint64.py:285
        // for _i in urange(x):
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_array_after_for@4 ; b test_array_for_body@3

    test_array_for_body@3:
        // array/uint64.py:286
        // popped = arr.pop()
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%0#1
        v-store slot_contents%0#1
        v-load slot_contents%0#1                                                     slot_contents%0#1
        len                                                                          len%0#0
        v-store len%0#0
        v-load len%0#0                                                               len%0#0
        int 8                                                                        len%0#0,8
        -                                                                            sub%0#0
        v-store sub%0#0
        v-load slot_contents%0#1                                                     slot_contents%0#1
        int 0                                                                        slot_contents%0#1,0
        v-load sub%0#0                                                               slot_contents%0#1,0,sub%0#0
        extract3                                                                     extract%0#0
        v-store extract%0#0
        v-load slot_contents%0#1                                                     slot_contents%0#1
        v-load sub%0#0                                                               slot_contents%0#1,sub%0#0
        v-load len%0#0                                                               slot_contents%0#1,sub%0#0,len%0#0
        substring3                                                                   extract_to_end%0#0
        v-store extract_to_end%0#0
        v-load extract_to_end%0#0                                                    extract_to_end%0#0
        btoi                                                                         popped#0
        v-store popped#0
        v-load arr#0                                                                 arr#0
        v-load extract%0#0                                                           arr#0,extract%0#0
        stores
        // array/uint64.py:287
        // assert popped == expected
        v-load popped#0                                                              popped#0
        v-load expected#0                                                            popped#0,expected#0
        ==                                                                           tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                               tmp%1#1
        assert
        // array/uint64.py:288
        // expected -= 1
        v-load expected#0                                                            expected#0
        int 1                                                                        expected#0,1
        -                                                                            expected#0
        v-store expected#0
        // array/uint64.py:285
        // for _i in urange(x):
        v-load _i#0                                                                  _i#0
        int 1                                                                        _i#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store _i#0
        b test_array_for_header@2

    test_array_after_for@4:
        // array/uint64.py:28
        // assert arr.length == 3
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%5#0
        v-store aggregate%slot_contents%5#0
        v-load aggregate%slot_contents%5#0                                           aggregate%slot_contents%5#0
        len                                                                          aggregate%bytes_len%5#0
        v-store aggregate%bytes_len%5#0
        v-load aggregate%bytes_len%5#0                                               aggregate%bytes_len%5#0
        int 8                                                                        aggregate%bytes_len%5#0,8
        /                                                                            aggregate%array_len%5#0
        v-store aggregate%array_len%5#0
        v-load aggregate%array_len%5#0                                               aggregate%array_len%5#0
        int 3                                                                        aggregate%array_len%5#0,3
        ==                                                                           tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                              tmp%14#0
        assert
        // array/uint64.py:29
        // assert arr[-1] == 1
        v-load aggregate%array_len%5#0                                               aggregate%array_len%5#0
        int 1                                                                        aggregate%array_len%5#0,1
        -                                                                            tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                              tmp%16#0
        int 8                                                                        tmp%16#0,8
        *                                                                            aggregate%bytes_offset%2#0
        v-store aggregate%bytes_offset%2#0
        v-load aggregate%slot_contents%5#0                                           aggregate%slot_contents%5#0
        v-load aggregate%bytes_offset%2#0                                            aggregate%slot_contents%5#0,aggregate%bytes_offset%2#0
        extract_uint64                                                               values%2#0
        v-store values%2#0
        v-load values%2#0                                                            values%2#0
        int 1                                                                        values%2#0,1
        ==                                                                           tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                              tmp%17#0
        assert
        // array/uint64.py:31
        // arr.append(UInt64(43))
        int 43                                                                       43
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%slot_contents%5#0                                           aggregate%slot_contents%5#0
        v-load aggregate%val_as_bytes%1#0                                            aggregate%slot_contents%5#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        v-load arr#0                                                                 arr#0
        v-load concat%1#0                                                            arr#0,concat%1#0
        stores
        // array/uint64.py:32
        // assert arr.length == 4
        v-load concat%1#0                                                            concat%1#0
        len                                                                          aggregate%bytes_len%7#0
        v-store aggregate%bytes_len%7#0
        v-load aggregate%bytes_len%7#0                                               aggregate%bytes_len%7#0
        int 8                                                                        aggregate%bytes_len%7#0,8
        /                                                                            aggregate%array_len%7#0
        v-store aggregate%array_len%7#0
        v-load aggregate%array_len%7#0                                               aggregate%array_len%7#0
        int 4                                                                        aggregate%array_len%7#0,4
        ==                                                                           tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                              tmp%20#0
        assert
        // array/uint64.py:33
        // assert arr[-1] == 43
        v-load aggregate%array_len%7#0                                               aggregate%array_len%7#0
        int 1                                                                        aggregate%array_len%7#0,1
        -                                                                            tmp%22#0
        v-store tmp%22#0
        v-load tmp%22#0                                                              tmp%22#0
        int 8                                                                        tmp%22#0,8
        *                                                                            aggregate%bytes_offset%3#0
        v-store aggregate%bytes_offset%3#0
        v-load concat%1#0                                                            concat%1#0
        v-load aggregate%bytes_offset%3#0                                            concat%1#0,aggregate%bytes_offset%3#0
        extract_uint64                                                               values%3#0
        v-store values%3#0
        v-load values%3#0                                                            values%3#0
        int 43                                                                       values%3#0,43
        ==                                                                           tmp%23#0
        v-store tmp%23#0
        v-load tmp%23#0                                                              tmp%23#0
        assert
        // array/uint64.py:34
        // assert arr[0] == 42
        v-load concat%1#0                                                            concat%1#0
        int 0                                                                        concat%1#0,0
        extract_uint64                                                               values%4#0
        v-store values%4#0
        v-load values%4#0                                                            values%4#0
        int 42                                                                       values%4#0,42
        ==                                                                           tmp%24#0
        v-store tmp%24#0
        v-load tmp%24#0                                                              tmp%24#0
        assert
        // array/uint64.py:36
        // add_x(arr, UInt64(10))
        v-load arr#0                                                                 arr#0
        int 10                                                                       arr#0,10
        callsub add_x
        // array/uint64.py:37
        // assert arr.length == 14
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%9#0
        v-store aggregate%slot_contents%9#0
        v-load aggregate%slot_contents%9#0                                           aggregate%slot_contents%9#0
        len                                                                          aggregate%bytes_len%9#0
        v-store aggregate%bytes_len%9#0
        v-load aggregate%bytes_len%9#0                                               aggregate%bytes_len%9#0
        int 8                                                                        aggregate%bytes_len%9#0,8
        /                                                                            aggregate%array_len%9#0
        v-store aggregate%array_len%9#0
        v-load aggregate%array_len%9#0                                               aggregate%array_len%9#0
        int 14                                                                       aggregate%array_len%9#0,14
        ==                                                                           tmp%26#0
        v-store tmp%26#0
        v-load tmp%26#0                                                              tmp%26#0
        assert
        // array/uint64.py:38
        // assert arr[-1] == 9
        v-load aggregate%array_len%9#0                                               aggregate%array_len%9#0
        int 1                                                                        aggregate%array_len%9#0,1
        -                                                                            tmp%28#0
        v-store tmp%28#0
        v-load tmp%28#0                                                              tmp%28#0
        int 8                                                                        tmp%28#0,8
        *                                                                            aggregate%bytes_offset%5#0
        v-store aggregate%bytes_offset%5#0
        v-load aggregate%slot_contents%9#0                                           aggregate%slot_contents%9#0
        v-load aggregate%bytes_offset%5#0                                            aggregate%slot_contents%9#0,aggregate%bytes_offset%5#0
        extract_uint64                                                               values%5#0
        v-store values%5#0
        v-load values%5#0                                                            values%5#0
        int 9                                                                        values%5#0,9
        ==                                                                           tmp%29#0
        v-store tmp%29#0
        v-load tmp%29#0                                                              tmp%29#0
        assert
        // array/uint64.py:40
        // arr.append(UInt64(44))
        int 44                                                                       44
        itob                                                                         aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load aggregate%slot_contents%9#0                                           aggregate%slot_contents%9#0
        v-load aggregate%val_as_bytes%2#0                                            aggregate%slot_contents%9#0,aggregate%val_as_bytes%2#0
        concat // on error: max array length exceeded                                concat%2#0
        v-store concat%2#0
        // array/uint64.py:41
        // assert arr.length == 15
        v-load concat%2#0                                                            concat%2#0
        len                                                                          aggregate%bytes_len%11#0
        v-store aggregate%bytes_len%11#0
        v-load aggregate%bytes_len%11#0                                              aggregate%bytes_len%11#0
        int 8                                                                        aggregate%bytes_len%11#0,8
        /                                                                            aggregate%array_len%11#0
        v-store aggregate%array_len%11#0
        v-load aggregate%array_len%11#0                                              aggregate%array_len%11#0
        int 15                                                                       aggregate%array_len%11#0,15
        ==                                                                           tmp%32#0
        v-store tmp%32#0
        v-load tmp%32#0                                                              tmp%32#0
        assert
        // array/uint64.py:42
        // assert arr[-1] == 44
        v-load aggregate%array_len%11#0                                              aggregate%array_len%11#0
        int 1                                                                        aggregate%array_len%11#0,1
        -                                                                            tmp%34#0
        v-store tmp%34#0
        v-load tmp%34#0                                                              tmp%34#0
        int 8                                                                        tmp%34#0,8
        *                                                                            aggregate%bytes_offset%6#0
        v-store aggregate%bytes_offset%6#0
        v-load concat%2#0                                                            concat%2#0
        v-load aggregate%bytes_offset%6#0                                            concat%2#0,aggregate%bytes_offset%6#0
        extract_uint64                                                               values%6#0
        v-store values%6#0
        v-load values%6#0                                                            values%6#0
        int 44                                                                       values%6#0,44
        ==                                                                           tmp%35#0
        v-store tmp%35#0
        v-load tmp%35#0                                                              tmp%35#0
        assert
        // array/uint64.py:272
        // arr.append(UInt64(99))
        int 99                                                                       99
        itob                                                                         aggregate%val_as_bytes%3#0
        v-store aggregate%val_as_bytes%3#0
        v-load concat%2#0                                                            concat%2#0
        v-load aggregate%val_as_bytes%3#0                                            concat%2#0,aggregate%val_as_bytes%3#0
        concat // on error: max array length exceeded                                concat%0#1
        v-store concat%0#1
        // array/uint64.py:273
        // arr2.append(UInt64(100))
        int 100                                                                      100
        itob                                                                         aggregate%val_as_bytes%4#0
        v-store aggregate%val_as_bytes%4#0
        v-load concat%0#1                                                            concat%0#1
        v-load aggregate%val_as_bytes%4#0                                            concat%0#1,aggregate%val_as_bytes%4#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        // array/uint64.py:44
        // return_ref(arr, arr)[0] += 2
        v-load concat%1#0                                                            concat%1#0
        int 0                                                                        concat%1#0,0
        extract_uint64                                                               values%7#0
        v-store values%7#0
        v-load values%7#0                                                            values%7#0
        int 2                                                                        values%7#0,2
        +                                                                            tmp%37#0
        v-store tmp%37#0
        v-load tmp%37#0                                                              tmp%37#0
        itob                                                                         aggregate%val_as_bytes%5#0
        v-store aggregate%val_as_bytes%5#0
        v-load concat%1#0                                                            concat%1#0
        v-load aggregate%val_as_bytes%5#0                                            concat%1#0,aggregate%val_as_bytes%5#0
        replace2 0 // on error: index access is out of bounds                        aggregate%updated_array%0#0
        v-store aggregate%updated_array%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%updated_array%0#0                                           arr#0,aggregate%updated_array%0#0
        stores
        // array/uint64.py:45
        // assert arr.length == 17
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        len                                                                          aggregate%bytes_len%13#0
        v-store aggregate%bytes_len%13#0
        v-load aggregate%bytes_len%13#0                                              aggregate%bytes_len%13#0
        int 8                                                                        aggregate%bytes_len%13#0,8
        /                                                                            aggregate%array_len%13#0
        v-store aggregate%array_len%13#0
        v-load aggregate%array_len%13#0                                              aggregate%array_len%13#0
        int 17                                                                       aggregate%array_len%13#0,17
        ==                                                                           tmp%39#0
        v-store tmp%39#0
        v-load tmp%39#0                                                              tmp%39#0
        assert
        // array/uint64.py:46
        // assert arr[0] == 44
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        int 0                                                                        aggregate%updated_array%0#0,0
        extract_uint64                                                               values%8#0
        v-store values%8#0
        v-load values%8#0                                                            values%8#0
        int 44                                                                       values%8#0,44
        ==                                                                           tmp%40#0
        v-store tmp%40#0
        v-load tmp%40#0                                                              tmp%40#0
        assert
        // array/uint64.py:47
        // assert arr[-2] == 99
        v-load aggregate%array_len%13#0                                              aggregate%array_len%13#0
        int 2                                                                        aggregate%array_len%13#0,2
        -                                                                            tmp%42#0
        v-store tmp%42#0
        v-load tmp%42#0                                                              tmp%42#0
        int 8                                                                        tmp%42#0,8
        *                                                                            aggregate%bytes_offset%10#0
        v-store aggregate%bytes_offset%10#0
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        v-load aggregate%bytes_offset%10#0                                           aggregate%updated_array%0#0,aggregate%bytes_offset%10#0
        extract_uint64                                                               values%9#0
        v-store values%9#0
        v-load values%9#0                                                            values%9#0
        int 99                                                                       values%9#0,99
        ==                                                                           tmp%43#0
        v-store tmp%43#0
        v-load tmp%43#0                                                              tmp%43#0
        assert
        // array/uint64.py:48
        // assert arr[-1] == 100
        v-load aggregate%array_len%13#0                                              aggregate%array_len%13#0
        int 1                                                                        aggregate%array_len%13#0,1
        -                                                                            tmp%45#0
        v-store tmp%45#0
        v-load tmp%45#0                                                              tmp%45#0
        int 8                                                                        tmp%45#0,8
        *                                                                            aggregate%bytes_offset%11#0
        v-store aggregate%bytes_offset%11#0
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        v-load aggregate%bytes_offset%11#0                                           aggregate%updated_array%0#0,aggregate%bytes_offset%11#0
        extract_uint64                                                               values%10#0
        v-store values%10#0
        v-load values%10#0                                                           values%10#0
        int 100                                                                      values%10#0,100
        ==                                                                           tmp%46#0
        v-store tmp%46#0
        v-load tmp%46#0                                                              tmp%46#0
        assert
        // array/uint64.py:14
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_extend[routing]() -> void:
subroutine test_array_extend:
    test_array_extend_block@0:
        // array/uint64.py:52
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        v-load arr#0                                                                 arr#0
        byte 0x                                                                      arr#0,0x
        stores
        // array/uint64.py:53
        // add_x(arr, UInt64(1))
        v-load arr#0                                                                 arr#0
        int 1                                                                        arr#0,1
        callsub add_x
        // array/uint64.py:57
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                      0x000000000000000100000000000000020000000000000003
        v-store slot%0
        // array/uint64.py:59
        // arr.extend(arr2)
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%4#0
        v-store slot_contents%4#0
        v-load slot_contents%4#0                                                     slot_contents%4#0
        // array/uint64.py:57
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                      slot_contents%4#0,0x000000000000000100000000000000020000000000000003
        // array/uint64.py:59
        // arr.extend(arr2)
        concat // on error: max array length exceeded                                concat%3#0
        v-store concat%3#0
        v-load arr#0                                                                 arr#0
        v-load concat%3#0                                                            arr#0,concat%3#0
        stores
        // array/uint64.py:60
        // assert arr.length == 4
        v-load concat%3#0                                                            concat%3#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 4                                                                        aggregate%array_len%0#0,4
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert
        // array/uint64.py:50
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_multiple_append[routing]() -> void:
subroutine test_array_multiple_append:
    test_array_multiple_append_block@0:
        // array/uint64.py:64
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        v-load arr#0                                                                 arr#0
        byte 0x                                                                      arr#0,0x
        stores
        // array/uint64.py:65
        // add_x(arr, UInt64(1))
        v-load arr#0                                                                 arr#0
        int 1                                                                        arr#0,1
        callsub add_x
        // array/uint64.py:66
        // arr.append(UInt64(1))
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%0#0
        v-store slot_contents%0#0
        int 1                                                                        1
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        // array/uint64.py:67
        // arr.append(UInt64(2))
        int 2                                                                        2
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load concat%0#0                                                            concat%0#0
        v-load aggregate%val_as_bytes%1#0                                            concat%0#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        // array/uint64.py:68
        // arr.append(UInt64(3))
        int 3                                                                        3
        itob                                                                         aggregate%val_as_bytes%2#0
        v-store aggregate%val_as_bytes%2#0
        v-load concat%1#0                                                            concat%1#0
        v-load aggregate%val_as_bytes%2#0                                            concat%1#0,aggregate%val_as_bytes%2#0
        concat // on error: max array length exceeded                                concat%2#0
        v-store concat%2#0
        v-load arr#0                                                                 arr#0
        v-load concat%2#0                                                            arr#0,concat%2#0
        stores
        // array/uint64.py:69
        // assert arr.length == 4
        v-load concat%2#0                                                            concat%2#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 4                                                                        aggregate%array_len%0#0,4
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert
        // array/uint64.py:62
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_too_long[routing]() -> void:
subroutine test_array_too_long:
    test_array_too_long_block@0:
        // array/uint64.py:77
        // array = ReferenceArray[UInt64]()
        byte 0x                                                                      0x
        v-store slot%0
        // array/uint64.py:78
        // for i in urange(512):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b test_array_too_long_for_header@2

    test_array_too_long_for_header@2:
        // array/uint64.py:78
        // for i in urange(512):
        v-load i#0                                                                   i#0
        int 512                                                                      i#0,512
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_array_too_long_after_for@5 ; b test_array_too_long_for_body@3

    test_array_too_long_for_body@3:
        v-load slot%0                                                                slot%0
        // array/uint64.py:79
        // array.append(i)
        v-store slot_contents%0#0
        v-load i#0                                                                   i#0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                            concat%0#0
        v-store slot%0
        // array/uint64.py:78
        // for i in urange(512):
        v-load i#0                                                                   i#0
        int 1                                                                        i#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b test_array_too_long_for_header@2

    test_array_too_long_after_for@5:
        v-load slot%0                                                                slot%0
        // array/uint64.py:80
        // assert array.length == 512, "array is expected length"
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 512                                                                      aggregate%array_len%0#0,512
        ==                                                                           tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                               tmp%2#0
        assert // array is expected length
        // array/uint64.py:82
        // array.append(UInt64(512))  # this will fail
        int 512                                                                      512
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        v-load aggregate%val_as_bytes%1#0                                            aggregate%slot_contents%0#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                            concat%1#0
        v-store slot%0
        // array/uint64.py:75
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_copy_and_extend[routing]() -> void:
subroutine test_array_copy_and_extend:
    test_array_copy_and_extend_block@0:
        // array/uint64.py:86
        // array = ReferenceArray[UInt64]()
        byte 0x                                                                      0x
        v-store slot%0
        // array/uint64.py:87
        // for i in urange(5):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b test_array_copy_and_extend_for_header@2

    test_array_copy_and_extend_for_header@2:
        // array/uint64.py:87
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 5                                                                        i#0,5
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_array_copy_and_extend_after_for@5 ; b test_array_copy_and_extend_for_body@3 

    test_array_copy_and_extend_for_body@3:
        v-load slot%0                                                                slot%0
        // array/uint64.py:88
        // array.append(i)
        v-store slot_contents%0#0
        v-load i#0                                                                   i#0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                            concat%0#0
        v-store slot%0
        // array/uint64.py:87
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 1                                                                        i#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store i#0
        b test_array_copy_and_extend_for_header@2

    test_array_copy_and_extend_after_for@5:
        v-load slot%0                                                                slot%0
        // array/uint64.py:89
        // array2 = array.copy()
        v-store slot_contents%1#0
        v-load slot_contents%1#0                                                     slot_contents%1#0
        v-store slot%1
        v-load slot%0                                                                slot%0
        // array/uint64.py:91
        // array.append(UInt64(5))
        v-store slot_contents%2#0
        int 5                                                                        5
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load slot_contents%2#0                                                     slot_contents%2#0
        v-load aggregate%val_as_bytes%1#0                                            slot_contents%2#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        v-load concat%1#0                                                            concat%1#0
        v-store slot%0
        // array/uint64.py:92
        // assert array.length == 6
        v-load concat%1#0                                                            concat%1#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 6                                                                        aggregate%array_len%0#0,6
        ==                                                                           tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                               tmp%3#0
        assert
        // array/uint64.py:93
        // assert array[-1] == 5, "expected 5"
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 1                                                                        aggregate%array_len%0#0,1
        -                                                                            tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                               tmp%5#0
        int 8                                                                        tmp%5#0,8
        *                                                                            aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load concat%1#0                                                            concat%1#0
        v-load aggregate%bytes_offset%0#0                                            concat%1#0,aggregate%bytes_offset%0#0
        extract_uint64                                                               values%0#0
        v-store values%0#0
        v-load values%0#0                                                            values%0#0
        int 5                                                                        values%0#0,5
        ==                                                                           tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                               tmp%6#0
        assert // expected 5
        v-load slot%1                                                                slot%1
        // array/uint64.py:95
        // assert array2.length == 5
        v-store aggregate%slot_contents%2#0
        v-load aggregate%slot_contents%2#0                                           aggregate%slot_contents%2#0
        len                                                                          aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        v-load aggregate%bytes_len%2#0                                               aggregate%bytes_len%2#0
        int 8                                                                        aggregate%bytes_len%2#0,8
        /                                                                            aggregate%array_len%2#0
        v-store aggregate%array_len%2#0
        v-load aggregate%array_len%2#0                                               aggregate%array_len%2#0
        int 5                                                                        aggregate%array_len%2#0,5
        ==                                                                           tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                               tmp%8#0
        assert
        // array/uint64.py:96
        // assert array2[-1] == 4, "expected 4"
        v-load aggregate%array_len%2#0                                               aggregate%array_len%2#0
        int 1                                                                        aggregate%array_len%2#0,1
        -                                                                            tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                              tmp%10#0
        int 8                                                                        tmp%10#0,8
        *                                                                            aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0
        v-load aggregate%slot_contents%2#0                                           aggregate%slot_contents%2#0
        v-load aggregate%bytes_offset%1#0                                            aggregate%slot_contents%2#0,aggregate%bytes_offset%1#0
        extract_uint64                                                               values%1#0
        v-store values%1#0
        v-load values%1#0                                                            values%1#0
        int 4                                                                        values%1#0,4
        ==                                                                           tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                              tmp%11#0
        assert // expected 4
        // array/uint64.py:98
        // array.extend(array2)
        v-load concat%1#0                                                            concat%1#0
        v-load aggregate%slot_contents%2#0                                           concat%1#0,aggregate%slot_contents%2#0
        concat // on error: max array length exceeded                                concat%2#0
        v-store concat%2#0
        v-load concat%2#0                                                            concat%2#0
        v-store slot%0
        // array/uint64.py:99
        // assert array.length == 11
        v-load concat%2#0                                                            concat%2#0
        len                                                                          aggregate%bytes_len%4#0
        v-store aggregate%bytes_len%4#0
        v-load aggregate%bytes_len%4#0                                               aggregate%bytes_len%4#0
        int 8                                                                        aggregate%bytes_len%4#0,8
        /                                                                            aggregate%array_len%4#0
        v-store aggregate%array_len%4#0
        v-load aggregate%array_len%4#0                                               aggregate%array_len%4#0
        int 11                                                                       aggregate%array_len%4#0,11
        ==                                                                           tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                              tmp%13#0
        assert
        v-load slot%1                                                                slot%1
        // array/uint64.py:100
        // assert array2.length == 5
        v-store aggregate%slot_contents%5#0
        v-load aggregate%slot_contents%5#0                                           aggregate%slot_contents%5#0
        len                                                                          aggregate%bytes_len%5#0
        v-store aggregate%bytes_len%5#0
        v-load aggregate%bytes_len%5#0                                               aggregate%bytes_len%5#0
        int 8                                                                        aggregate%bytes_len%5#0,8
        /                                                                            aggregate%array_len%5#0
        v-store aggregate%array_len%5#0
        v-load aggregate%array_len%5#0                                               aggregate%array_len%5#0
        int 5                                                                        aggregate%array_len%5#0,5
        ==                                                                           tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                              tmp%15#0
        assert
        // array/uint64.py:101
        // assert array[-1] == 4, "expected 4"
        v-load aggregate%array_len%4#0                                               aggregate%array_len%4#0
        int 1                                                                        aggregate%array_len%4#0,1
        -                                                                            tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                              tmp%17#0
        int 8                                                                        tmp%17#0,8
        *                                                                            aggregate%bytes_offset%2#0
        v-store aggregate%bytes_offset%2#0
        v-load concat%2#0                                                            concat%2#0
        v-load aggregate%bytes_offset%2#0                                            concat%2#0,aggregate%bytes_offset%2#0
        extract_uint64                                                               values%2#0
        v-store values%2#0
        v-load values%2#0                                                            values%2#0
        int 4                                                                        values%2#0,4
        ==                                                                           tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                              tmp%18#0
        assert // expected 4
        // array/uint64.py:102
        // assert array[4] == 4, "expected 4"
        v-load concat%2#0                                                            concat%2#0
        int 32                                                                       concat%2#0,32
        extract_uint64                                                               values%3#0
        v-store values%3#0
        v-load values%3#0                                                            values%3#0
        int 4                                                                        values%3#0,4
        ==                                                                           tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                              tmp%19#0
        assert // expected 4
        // array/uint64.py:103
        // assert array[5] == 5, "expected 4"
        v-load concat%2#0                                                            concat%2#0
        int 40                                                                       concat%2#0,40
        extract_uint64                                                               values%4#0
        v-store values%4#0
        v-load values%4#0                                                            values%4#0
        int 5                                                                        values%4#0,5
        ==                                                                           tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                              tmp%20#0
        assert // expected 4
        // array/uint64.py:104
        // assert array[6] == 0, "expected 4"
        v-load concat%2#0                                                            concat%2#0
        int 48                                                                       concat%2#0,48
        extract_uint64                                                               values%5#0
        v-store values%5#0
        v-load values%5#0                                                            values%5#0
        !                                                                            tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                              tmp%21#0
        assert // expected 4
        // array/uint64.py:84
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_evaluation_order[routing]() -> void:
subroutine test_array_evaluation_order:
    test_array_evaluation_order_block@0:
        // array/uint64.py:108
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        // array/uint64.py:109
        // arr.append(UInt64(3))
        int 3                                                                        3
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%val_as_bytes%0#0                                            arr#0,aggregate%val_as_bytes%0#0
        stores
        // array/uint64.py:110
        // append_length_and_return(arr).extend(append_length_and_return(arr))
        v-load arr#0                                                                 arr#0
        callsub append_length_and_return                                             tmp%1#0
        v-store tmp%1#0
        v-load arr#0                                                                 arr#0
        callsub append_length_and_return                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                               tmp%2#0
        loads                                                                        slot_contents%1#0
        v-store slot_contents%1#0
        v-load tmp%1#0                                                               tmp%1#0
        loads                                                                        slot_contents%2#0
        v-store slot_contents%2#0
        v-load slot_contents%2#0                                                     slot_contents%2#0
        v-load slot_contents%1#0                                                     slot_contents%2#0,slot_contents%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        v-load tmp%1#0                                                               tmp%1#0
        v-load concat%1#0                                                            tmp%1#0,concat%1#0
        stores
        // array/uint64.py:111
        // assert arr.length == 6
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 6                                                                        aggregate%array_len%0#0,6
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert
        // array/uint64.py:112
        // assert arr[0] == 3
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 0                                                                        aggregate%slot_contents%0#0,0
        extract_uint64                                                               values%0#0
        v-store values%0#0
        v-load values%0#0                                                            values%0#0
        int 3                                                                        values%0#0,3
        ==                                                                           tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                               tmp%5#0
        assert
        // array/uint64.py:113
        // assert arr[1] == 1
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 8                                                                        aggregate%slot_contents%0#0,8
        extract_uint64                                                               values%1#0
        v-store values%1#0
        v-load values%1#0                                                            values%1#0
        int 1                                                                        values%1#0,1
        ==                                                                           tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                               tmp%6#0
        assert
        // array/uint64.py:114
        // assert arr[2] == 2
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 16                                                                       aggregate%slot_contents%0#0,16
        extract_uint64                                                               values%2#0
        v-store values%2#0
        v-load values%2#0                                                            values%2#0
        int 2                                                                        values%2#0,2
        ==                                                                           tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                               tmp%7#0
        assert
        // array/uint64.py:115
        // assert arr[3] == 3
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 24                                                                       aggregate%slot_contents%0#0,24
        extract_uint64                                                               values%3#0
        v-store values%3#0
        v-load values%3#0                                                            values%3#0
        int 3                                                                        values%3#0,3
        ==                                                                           tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                               tmp%8#0
        assert
        // array/uint64.py:116
        // assert arr[4] == 1
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 32                                                                       aggregate%slot_contents%0#0,32
        extract_uint64                                                               values%4#0
        v-store values%4#0
        v-load values%4#0                                                            values%4#0
        int 1                                                                        values%4#0,1
        ==                                                                           tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                               tmp%9#0
        assert
        // array/uint64.py:117
        // assert arr[5] == 2
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 40                                                                       aggregate%slot_contents%0#0,40
        extract_uint64                                                               values%5#0
        v-store values%5#0
        v-load values%5#0                                                            values%5#0
        int 2                                                                        values%5#0,2
        ==                                                                           tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                              tmp%10#0
        assert
        // array/uint64.py:119
        // arr[append_length_and_return(arr)[0]] = append_length_and_return(arr)[-1]
        v-load arr#0                                                                 arr#0
        callsub append_length_and_return                                             tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                              tmp%11#0
        loads                                                                        aggregate%slot_contents%1#0
        v-store aggregate%slot_contents%1#0
        v-load aggregate%slot_contents%1#0                                           aggregate%slot_contents%1#0
        len                                                                          aggregate%bytes_len%1#0
        v-store aggregate%bytes_len%1#0
        v-load aggregate%bytes_len%1#0                                               aggregate%bytes_len%1#0
        int 8                                                                        aggregate%bytes_len%1#0,8
        /                                                                            aggregate%array_len%1#0
        v-store aggregate%array_len%1#0
        v-load aggregate%array_len%1#0                                               aggregate%array_len%1#0
        int 1                                                                        aggregate%array_len%1#0,1
        -                                                                            tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                              tmp%13#0
        int 8                                                                        tmp%13#0,8
        *                                                                            aggregate%bytes_offset%6#0
        v-store aggregate%bytes_offset%6#0
        v-load aggregate%slot_contents%1#0                                           aggregate%slot_contents%1#0
        v-load aggregate%bytes_offset%6#0                                            aggregate%slot_contents%1#0,aggregate%bytes_offset%6#0
        int 8                                                                        aggregate%slot_contents%1#0,aggregate%bytes_offset%6#0,8
        extract3 // on error: index access is out of bounds                          aggregate%encoded_element%6#0
        v-store aggregate%encoded_element%6#0
        v-load arr#0                                                                 arr#0
        callsub append_length_and_return                                             tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                              tmp%14#0
        loads                                                                        slot_contents%10#0
        v-store slot_contents%10#0
        v-load slot_contents%10#0                                                    slot_contents%10#0
        int 0                                                                        slot_contents%10#0,0
        extract_uint64                                                               values%7#0
        v-store values%7#0
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%11#0
        v-store slot_contents%11#0
        v-load values%7#0                                                            values%7#0
        int 8                                                                        values%7#0,8
        *                                                                            aggregate%write_offset%0#0
        v-store aggregate%write_offset%0#0
        v-load slot_contents%11#0                                                    slot_contents%11#0
        v-load aggregate%write_offset%0#0                                            slot_contents%11#0,aggregate%write_offset%0#0
        v-load aggregate%encoded_element%6#0                                         slot_contents%11#0,aggregate%write_offset%0#0,aggregate%encoded_element%6#0
        replace3 // on error: index access is out of bounds                          aggregate%updated_array%0#0
        v-store aggregate%updated_array%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%updated_array%0#0                                           arr#0,aggregate%updated_array%0#0
        stores
        // array/uint64.py:120
        // assert arr.length == 8
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        len                                                                          aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        v-load aggregate%bytes_len%2#0                                               aggregate%bytes_len%2#0
        int 8                                                                        aggregate%bytes_len%2#0,8
        /                                                                            aggregate%array_len%2#0
        v-store aggregate%array_len%2#0
        v-load aggregate%array_len%2#0                                               aggregate%array_len%2#0
        int 8                                                                        aggregate%array_len%2#0,8
        ==                                                                           tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                              tmp%16#0
        assert
        // array/uint64.py:121
        // assert arr[6] == 6
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        int 48                                                                       aggregate%updated_array%0#0,48
        extract_uint64                                                               values%8#0
        v-store values%8#0
        v-load values%8#0                                                            values%8#0
        int 6                                                                        values%8#0,6
        ==                                                                           tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                              tmp%17#0
        assert
        // array/uint64.py:122
        // assert arr[7] == 7
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        int 56                                                                       aggregate%updated_array%0#0,56
        extract_uint64                                                               values%9#0
        v-store values%9#0
        v-load values%9#0                                                            values%9#0
        int 7                                                                        values%9#0,7
        ==                                                                           tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                              tmp%18#0
        assert
        // array/uint64.py:123
        // assert arr[3] == 6
        v-load aggregate%updated_array%0#0                                           aggregate%updated_array%0#0
        int 24                                                                       aggregate%updated_array%0#0,24
        extract_uint64                                                               values%10#0
        v-store values%10#0
        v-load values%10#0                                                           values%10#0
        int 6                                                                        values%10#0,6
        ==                                                                           tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                              tmp%19#0
        assert
        // array/uint64.py:106
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage[routing]() -> void:
subroutine test_array_assignment_maximum_cursage:
    test_array_assignment_maximum_cursage_block@0:
        // array/uint64.py:127
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               arr#0
        v-store arr#0
        // array/uint64.py:128
        // arr.append(UInt64(3))
        int 3                                                                        3
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%val_as_bytes%0#0                                            arr#0,aggregate%val_as_bytes%0#0
        stores
        // array/uint64.py:129
        // append_length_and_return(arr)[0] = UInt64(42)
        v-load arr#0                                                                 arr#0
        callsub append_length_and_return                                             update_assignment_current_base_value%0#0
        v-store update_assignment_current_base_value%0#0
        int 42                                                                       42
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load update_assignment_current_base_value%0#0                              update_assignment_current_base_value%0#0
        loads                                                                        slot_contents%1#0
        v-store slot_contents%1#0
        v-load slot_contents%1#0                                                     slot_contents%1#0
        v-load aggregate%val_as_bytes%1#0                                            slot_contents%1#0,aggregate%val_as_bytes%1#0
        replace2 0 // on error: index access is out of bounds                        aggregate%updated_array%0#0
        v-store aggregate%updated_array%0#0
        v-load update_assignment_current_base_value%0#0                              update_assignment_current_base_value%0#0
        v-load aggregate%updated_array%0#0                                           update_assignment_current_base_value%0#0,aggregate%updated_array%0#0
        stores
        // array/uint64.py:130
        // assert arr.length == 2
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 2                                                                        aggregate%array_len%0#0,2
        ==                                                                           tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                               tmp%2#0
        assert
        // array/uint64.py:131
        // assert arr[0] == 42
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 0                                                                        aggregate%slot_contents%0#0,0
        extract_uint64                                                               values%0#0
        v-store values%0#0
        v-load values%0#0                                                            values%0#0
        int 42                                                                       values%0#0,42
        ==                                                                           tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                               tmp%3#0
        assert
        // array/uint64.py:132
        // assert arr[1] == 1
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        int 8                                                                        aggregate%slot_contents%0#0,8
        extract_uint64                                                               values%1#0
        v-store values%1#0
        v-load values%1#0                                                            values%1#0
        int 1                                                                        values%1#0,1
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert
        // array/uint64.py:125
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_allocations[routing]() -> void:
subroutine test_allocations:
    test_allocations_block@0:
        // array/uint64.py:134
        // @arc4.abimethod()
        txna ApplicationArgs 1                                                       reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                       reinterpret_Encoded(uint64)%0#0
        btoi                                                                         num#0
        v-store num#0
        // array/uint64.py:136
        // for _i in urange(num):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store _i#0
        b test_allocations_for_header@2

    test_allocations_for_header@2:
        // array/uint64.py:136
        // for _i in urange(num):
        v-load _i#0                                                                  _i#0
        v-load num#0                                                                 _i#0,num#0
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_allocations_after_for@5 ; b test_allocations_for_body@3

    test_allocations_for_body@3:
        // array/uint64.py:137
        // alloc_test = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               alloc_test#0
        v-store alloc_test#0
        v-load alloc_test#0                                                          alloc_test#0
        byte 0x                                                                      alloc_test#0,0x
        stores
        // array/uint64.py:138
        // add_x(alloc_test, UInt64(1))
        v-load alloc_test#0                                                          alloc_test#0
        int 1                                                                        alloc_test#0,1
        callsub add_x
        // array/uint64.py:136
        // for _i in urange(num):
        v-load _i#0                                                                  _i#0
        int 1                                                                        _i#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store _i#0
        b test_allocations_for_header@2

    test_allocations_after_for@5:
        // array/uint64.py:134
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_iteration[routing]() -> void:
subroutine test_iteration:
    test_iteration_block@0:
        // array/uint64.py:142
        // arr = ReferenceArray[UInt64]()
        byte 0x                                                                      0x
        v-store slot%0
        // array/uint64.py:143
        // for val in urange(5):
        int 0                                                                        0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store val#0
        b test_iteration_for_header@2

    test_iteration_for_header@2:
        // array/uint64.py:143
        // for val in urange(5):
        v-load val#0                                                                 val#0
        int 5                                                                        val#0,5
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_iteration_after_for@5 ; b test_iteration_for_body@3

    test_iteration_for_body@3:
        v-load slot%0                                                                slot%0
        // array/uint64.py:144
        // arr.append(val)
        v-store slot_contents%0#0
        v-load val#0                                                                 val#0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        v-load concat%0#0                                                            concat%0#0
        v-store slot%0
        // array/uint64.py:143
        // for val in urange(5):
        v-load val#0                                                                 val#0
        int 1                                                                        val#0,1
        +                                                                            value_internal%0#0
        v-store value_internal%0#0
        v-load value_internal%0#0                                                    value_internal%0#0
        v-store val#0
        b test_iteration_for_header@2

    test_iteration_after_for@5:
        v-load slot%0                                                                slot%0
        // array/uint64.py:145
        // assert arr.length == 5, "expected array of length 5"
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 5                                                                        aggregate%array_len%0#0,5
        ==                                                                           tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                               tmp%2#0
        assert // expected array of length 5
        // array/uint64.py:148
        // last = UInt64(0)
        int 0                                                                        0
        v-store last#0
        int 0                                                                        0
        v-store item_index_internal%0#0
        b test_iteration_for_header@6

    test_iteration_for_header@6:
        // array/uint64.py:149
        // for value in arr:
        v-load item_index_internal%0#0                                               item_index_internal%0#0
        v-load aggregate%array_len%0#0                                               item_index_internal%0#0,aggregate%array_len%0#0
        <                                                                            continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                  continue_looping%1#0
        bz test_iteration_after_for@9 ; b test_iteration_for_body@7

    test_iteration_for_body@7:
        v-load slot%0                                                                slot%0
        // array/uint64.py:149
        // for value in arr:
        v-store slot_contents%1#0
        v-load item_index_internal%0#0                                               item_index_internal%0#0
        int 8                                                                        item_index_internal%0#0,8
        *                                                                            aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load slot_contents%1#0                                                     slot_contents%1#0
        v-load aggregate%bytes_offset%0#0                                            slot_contents%1#0,aggregate%bytes_offset%0#0
        extract_uint64                                                               value#0
        v-store value#0
        // array/uint64.py:150
        // assert value >= last, "array is not sorted"
        v-load value#0                                                               value#0
        v-load last#0                                                                value#0,last#0
        >=                                                                           tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                               tmp%3#0
        assert // array is not sorted
        v-load item_index_internal%0#0                                               item_index_internal%0#0
        int 1                                                                        item_index_internal%0#0,1
        +                                                                            item_index_internal%0#0
        v-store item_index_internal%0#0
        v-load value#0                                                               value#0
        v-store last#0
        b test_iteration_for_header@6

    test_iteration_after_for@9:
        v-load slot%0                                                                slot%0
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        v-store aggregate%slot_contents%2#0
        v-load aggregate%slot_contents%2#0                                           aggregate%slot_contents%2#0
        len                                                                          aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        v-load aggregate%bytes_len%2#0                                               aggregate%bytes_len%2#0
        int 8                                                                        aggregate%bytes_len%2#0,8
        /                                                                            aggregate%array_len%2#0
        v-store aggregate%array_len%2#0
        int 0                                                                        0
        v-store item_index_internal%1#0
        v-load item_index_internal%1#0                                               item_index_internal%1#0
        v-store idx#0
        b test_iteration_for_header@10

    test_iteration_for_header@10:
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        v-load idx#0                                                                 idx#0
        v-load aggregate%array_len%2#0                                               idx#0,aggregate%array_len%2#0
        <                                                                            continue_looping%2#0
        v-store continue_looping%2#0
        v-load continue_looping%2#0                                                  continue_looping%2#0
        bz test_iteration_after_for@13 ; b test_iteration_for_body@11

    test_iteration_for_body@11:
        v-load slot%0                                                                slot%0
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        v-store slot_contents%2#0
        v-load idx#0                                                                 idx#0
        int 8                                                                        idx#0,8
        *                                                                            aggregate%bytes_offset%1#0
        v-store aggregate%bytes_offset%1#0
        v-load slot_contents%2#0                                                     slot_contents%2#0
        v-load aggregate%bytes_offset%1#0                                            slot_contents%2#0,aggregate%bytes_offset%1#0
        extract_uint64                                                               value#0
        v-store value#0
        // array/uint64.py:155
        // assert value == idx, "incorrect array value"
        v-load value#0                                                               value#0
        v-load idx#0                                                                 value#0,idx#0
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert // incorrect array value
        v-load idx#0                                                                 idx#0
        int 1                                                                        idx#0,1
        +                                                                            item_index_internal%1#0
        v-store item_index_internal%1#0
        v-load item_index_internal%1#0                                               item_index_internal%1#0
        v-store idx#0
        b test_iteration_for_header@10

    test_iteration_after_for@13:
        v-load slot%0                                                                slot%0
        // array/uint64.py:158
        // for value in reversed(arr):
        v-store aggregate%slot_contents%3#0
        v-load aggregate%slot_contents%3#0                                           aggregate%slot_contents%3#0
        len                                                                          aggregate%bytes_len%3#0
        v-store aggregate%bytes_len%3#0
        v-load aggregate%bytes_len%3#0                                               aggregate%bytes_len%3#0
        int 8                                                                        aggregate%bytes_len%3#0,8
        /                                                                            aggregate%array_len%3#0
        v-store aggregate%array_len%3#0
        v-load aggregate%array_len%3#0                                               aggregate%array_len%3#0
        v-store reverse_index_internal%2#1
        b test_iteration_for_header@14

    test_iteration_for_header@14:
        // array/uint64.py:158
        // for value in reversed(arr):
        v-load reverse_index_internal%2#1                                            reverse_index_internal%2#1
        bz test_iteration_after_for@17 ; b test_iteration_for_body@15

    test_iteration_for_body@15:
        v-load reverse_index_internal%2#1                                            reverse_index_internal%2#1
        int 1                                                                        reverse_index_internal%2#1,1
        -                                                                            reverse_index_internal%2#1
        v-store reverse_index_internal%2#1
        v-load slot%0                                                                slot%0
        // array/uint64.py:158
        // for value in reversed(arr):
        v-store slot_contents%3#0
        v-load reverse_index_internal%2#1                                            reverse_index_internal%2#1
        int 8                                                                        reverse_index_internal%2#1,8
        *                                                                            aggregate%bytes_offset%2#0
        v-store aggregate%bytes_offset%2#0
        v-load slot_contents%3#0                                                     slot_contents%3#0
        v-load aggregate%bytes_offset%2#0                                            slot_contents%3#0,aggregate%bytes_offset%2#0
        extract_uint64                                                               value#0
        v-store value#0
        // array/uint64.py:159
        // assert value <= last, "array is not sorted"
        v-load value#0                                                               value#0
        v-load last#0                                                                value#0,last#0
        <=                                                                           tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                               tmp%5#0
        assert // array is not sorted
        v-load value#0                                                               value#0
        v-store last#0
        b test_iteration_for_header@14

    test_iteration_after_for@17:
        // array/uint64.py:162
        // arc4_arr = arc4.DynamicArray[arc4.UInt64]()
        byte 0x0000                                                                  0x0000
        v-store arc4_arr#0
        // array/uint64.py:142
        // arr = ReferenceArray[UInt64]()
        byte 0x                                                                      0x
        v-store slot%1
        // array/uint64.py:164
        // for i in urange(5):
        int 0                                                                        0
        v-store value_internal%1#0
        v-load value_internal%1#0                                                    value_internal%1#0
        v-store i#0
        b test_iteration_for_header@18

    test_iteration_for_header@18:
        // array/uint64.py:164
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 5                                                                        i#0,5
        <                                                                            continue_looping%4#0
        v-store continue_looping%4#0
        v-load continue_looping%4#0                                                  continue_looping%4#0
        bz test_iteration_after_for@21 ; b test_iteration_for_body@19

    test_iteration_for_body@19:
        // array/uint64.py:165
        // arc4_arr.append(arc4.UInt64(i))
        v-load i#0                                                                   i#0
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load arc4_arr#0                                                            arc4_arr#0
        v-load aggregate%val_as_bytes%1#0                                            arc4_arr#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%1#0
        v-store concat%1#0
        v-load arc4_arr#0                                                            arc4_arr#0
        int 0                                                                        arc4_arr#0,0
        extract_uint16                                                               extract_uint16%0#0
        v-store extract_uint16%0#0
        v-load extract_uint16%0#0                                                    extract_uint16%0#0
        int 1                                                                        extract_uint16%0#0,1
        +                                                                            add%0#0
        v-store add%0#0
        v-load add%0#0                                                               add%0#0
        itob                                                                         as_bytes%0#0
        v-store as_bytes%0#0
        v-load as_bytes%0#0                                                          as_bytes%0#0
        extract 6 2                                                                  as_u16_bytes%0#0
        v-store as_u16_bytes%0#0
        v-load concat%1#0                                                            concat%1#0
        v-load as_u16_bytes%0#0                                                      concat%1#0,as_u16_bytes%0#0
        replace2 0                                                                   arc4_arr#0
        v-store arc4_arr#0
        v-load slot%1                                                                slot%1
        // array/uint64.py:166
        // native_arr.append(arc4.UInt64(i))
        v-store slot_contents%4#0
        v-load slot_contents%4#0                                                     slot_contents%4#0
        v-load aggregate%val_as_bytes%1#0                                            slot_contents%4#0,aggregate%val_as_bytes%1#0
        concat // on error: max array length exceeded                                concat%2#0
        v-store concat%2#0
        v-load concat%2#0                                                            concat%2#0
        v-store slot%1
        // array/uint64.py:164
        // for i in urange(5):
        v-load i#0                                                                   i#0
        int 1                                                                        i#0,1
        +                                                                            value_internal%1#0
        v-store value_internal%1#0
        v-load value_internal%1#0                                                    value_internal%1#0
        v-store i#0
        b test_iteration_for_header@18

    test_iteration_after_for@21:
        v-load slot%1                                                                slot%1
        // array/uint64.py:167
        // combined_arr = arc4_arr + native_arr
        v-store slot_contents%5#0
        v-load arc4_arr#0                                                            arc4_arr#0
        v-load slot_contents%5#0                                                     arc4_arr#0,slot_contents%5#0
        concat // on error: max array length exceeded                                concat%3#0
        v-store concat%3#0
        v-load concat%3#0                                                            concat%3#0
        extract 2 0                                                                  extract_to_end%0#0
        v-store extract_to_end%0#0
        v-load extract_to_end%0#0                                                    extract_to_end%0#0
        len                                                                          len%0#0
        v-store len%0#0
        v-load len%0#0                                                               len%0#0
        int 8                                                                        len%0#0,8
        /                                                                            div_floor%0#0
        v-store div_floor%0#0
        v-load div_floor%0#0                                                         div_floor%0#0
        itob                                                                         as_bytes%1#0
        v-store as_bytes%1#0
        v-load as_bytes%1#0                                                          as_bytes%1#0
        extract 6 2                                                                  as_u16_bytes%1#0
        v-store as_u16_bytes%1#0
        v-load concat%3#0                                                            concat%3#0
        v-load as_u16_bytes%1#0                                                      concat%3#0,as_u16_bytes%1#0
        replace2 0                                                                   combined_arr#0
        v-store combined_arr#0
        // array/uint64.py:168
        // assert combined_arr.length == 10
        v-load combined_arr#0                                                        combined_arr#0
        int 0                                                                        combined_arr#0,0
        extract_uint16                                                               aggregate%array_length%0#0
        v-store aggregate%array_length%0#0
        v-load aggregate%array_length%0#0                                            aggregate%array_length%0#0
        int 10                                                                       aggregate%array_length%0#0,10
        ==                                                                           tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                              tmp%11#0
        assert
        // array/uint64.py:169
        // assert combined_arr[0] == 0
        v-load combined_arr#0                                                        combined_arr#0
        extract 2 8                                                                  aggregate%encoded_element%3#0
        v-store aggregate%encoded_element%3#0
        v-load aggregate%encoded_element%3#0                                         aggregate%encoded_element%3#0
        byte 0x0000000000000000                                                      aggregate%encoded_element%3#0,0x0000000000000000
        b==                                                                          tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                              tmp%12#0
        assert
        // array/uint64.py:170
        // assert combined_arr[4] == 4
        v-load combined_arr#0                                                        combined_arr#0
        extract 34 8                                                                 aggregate%encoded_element%4#0
        v-store aggregate%encoded_element%4#0
        v-load aggregate%encoded_element%4#0                                         aggregate%encoded_element%4#0
        byte 0x0000000000000004                                                      aggregate%encoded_element%4#0,0x0000000000000004
        b==                                                                          tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                              tmp%13#0
        assert
        // array/uint64.py:171
        // assert combined_arr[5] == 0
        v-load combined_arr#0                                                        combined_arr#0
        extract 42 8                                                                 aggregate%encoded_element%5#0
        v-store aggregate%encoded_element%5#0
        v-load aggregate%encoded_element%5#0                                         aggregate%encoded_element%5#0
        byte 0x0000000000000000                                                      aggregate%encoded_element%5#0,0x0000000000000000
        b==                                                                          tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                              tmp%14#0
        assert
        // array/uint64.py:172
        // assert combined_arr[9] == 4
        v-load combined_arr#0                                                        combined_arr#0
        extract 74 8                                                                 aggregate%encoded_element%6#0
        v-store aggregate%encoded_element%6#0
        v-load aggregate%encoded_element%6#0                                         aggregate%encoded_element%6#0
        byte 0x0000000000000004                                                      aggregate%encoded_element%6#0,0x0000000000000004
        b==                                                                          tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                              tmp%15#0
        assert
        // array/uint64.py:140
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_quicksort[routing]() -> void:
subroutine test_quicksort:
    test_quicksort_block@0:
        // array/uint64.py:177
        // rnd = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                               rnd#0
        v-store rnd#0
        v-load rnd#0                                                                 rnd#0
        byte 0x                                                                      rnd#0,0x
        stores
        // array/uint64.py:178
        // for b in Txn.sender.bytes:
        txn Sender                                                                   tmp%0#0
        v-store tmp%0#0
        int 0                                                                        0
        v-store item_index_internal%0#0
        b test_quicksort_for_header@2

    test_quicksort_for_header@2:
        // array/uint64.py:178
        // for b in Txn.sender.bytes:
        v-load item_index_internal%0#0                                               item_index_internal%0#0
        int 32                                                                       item_index_internal%0#0,32
        <                                                                            continue_looping%0#0
        v-store continue_looping%0#0
        v-load continue_looping%0#0                                                  continue_looping%0#0
        bz test_quicksort_after_for@5 ; b test_quicksort_for_body@3

    test_quicksort_for_body@3:
        // array/uint64.py:179
        // rnd.append(op.btoi(b))
        v-load tmp%0#0                                                               tmp%0#0
        v-load item_index_internal%0#0                                               tmp%0#0,item_index_internal%0#0
        getbyte                                                                      tmp%1#0
        v-store tmp%1#0
        v-load rnd#0                                                                 rnd#0
        loads                                                                        slot_contents%0#0
        v-store slot_contents%0#0
        v-load tmp%1#0                                                               tmp%1#0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load slot_contents%0#0                                                     slot_contents%0#0
        v-load aggregate%val_as_bytes%0#0                                            slot_contents%0#0,aggregate%val_as_bytes%0#0
        concat // on error: max array length exceeded                                concat%0#0
        v-store concat%0#0
        v-load rnd#0                                                                 rnd#0
        v-load concat%0#0                                                            rnd#0,concat%0#0
        stores
        v-load item_index_internal%0#0                                               item_index_internal%0#0
        int 1                                                                        item_index_internal%0#0,1
        +                                                                            item_index_internal%0#0
        v-store item_index_internal%0#0
        b test_quicksort_for_header@2

    test_quicksort_after_for@5:
        // array/uint64.py:180
        // assert rnd.length == 32, "expected array of length 32"
        v-load rnd#0                                                                 rnd#0
        loads                                                                        aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 32                                                                       aggregate%array_len%0#0,32
        ==                                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                               tmp%4#0
        assert // expected array of length 32
        // array/uint64.py:183
        // quicksort_window(rnd, UInt64(0), rnd.length - 1)
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 1                                                                        aggregate%array_len%0#0,1
        -                                                                            tmp%6#0
        v-store tmp%6#0
        v-load rnd#0                                                                 rnd#0
        int 0                                                                        rnd#0,0
        v-load tmp%6#0                                                               rnd#0,0,tmp%6#0
        callsub quicksort_window
        // array/uint64.py:186
        // last = UInt64(0)
        int 0                                                                        0
        v-store last#0
        // array/uint64.py:187
        // for value in rnd:
        v-load rnd#0                                                                 rnd#0
        loads                                                                        aggregate%slot_contents%2#0
        v-store aggregate%slot_contents%2#0
        v-load aggregate%slot_contents%2#0                                           aggregate%slot_contents%2#0
        len                                                                          aggregate%bytes_len%2#0
        v-store aggregate%bytes_len%2#0
        v-load aggregate%bytes_len%2#0                                               aggregate%bytes_len%2#0
        int 8                                                                        aggregate%bytes_len%2#0,8
        /                                                                            aggregate%array_len%2#0
        v-store aggregate%array_len%2#0
        int 0                                                                        0
        v-store item_index_internal%1#0
        b test_quicksort_for_header@6

    test_quicksort_for_header@6:
        // array/uint64.py:187
        // for value in rnd:
        v-load item_index_internal%1#0                                               item_index_internal%1#0
        v-load aggregate%array_len%2#0                                               item_index_internal%1#0,aggregate%array_len%2#0
        <                                                                            continue_looping%1#0
        v-store continue_looping%1#0
        v-load continue_looping%1#0                                                  continue_looping%1#0
        bz test_quicksort_after_for@9 ; b test_quicksort_for_body@7

    test_quicksort_for_body@7:
        // array/uint64.py:187
        // for value in rnd:
        v-load rnd#0                                                                 rnd#0
        loads                                                                        slot_contents%1#0
        v-store slot_contents%1#0
        v-load item_index_internal%1#0                                               item_index_internal%1#0
        int 8                                                                        item_index_internal%1#0,8
        *                                                                            aggregate%bytes_offset%0#0
        v-store aggregate%bytes_offset%0#0
        v-load slot_contents%1#0                                                     slot_contents%1#0
        v-load aggregate%bytes_offset%0#0                                            slot_contents%1#0,aggregate%bytes_offset%0#0
        extract_uint64                                                               value#0
        v-store value#0
        // array/uint64.py:188
        // assert value >= last, "array is not sorted"
        v-load value#0                                                               value#0
        v-load last#0                                                                value#0,last#0
        >=                                                                           tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                               tmp%7#0
        assert // array is not sorted
        v-load item_index_internal%1#0                                               item_index_internal%1#0
        int 1                                                                        item_index_internal%1#0,1
        +                                                                            item_index_internal%1#0
        v-store item_index_internal%1#0
        v-load value#0                                                               value#0
        v-store last#0
        b test_quicksort_for_header@6

    test_quicksort_after_for@9:
        // array/uint64.py:174
        // @arc4.abimethod()
        int 1                                                                        1
        return


// test_cases.array.uint64.Contract.test_unobserved_write[routing]() -> void:
subroutine test_unobserved_write:
    test_unobserved_write_block@0:
        // array/uint64.py:193
        // arr = create_array()
        callsub create_array                                                         arr#0
        v-store arr#0
        // array/uint64.py:194
        // last = arr.length - 1
        v-load arr#0                                                                 arr#0
        loads                                                                        aggregate%slot_contents%0#0
        v-store aggregate%slot_contents%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        len                                                                          aggregate%bytes_len%0#0
        v-store aggregate%bytes_len%0#0
        v-load aggregate%bytes_len%0#0                                               aggregate%bytes_len%0#0
        int 8                                                                        aggregate%bytes_len%0#0,8
        /                                                                            aggregate%array_len%0#0
        v-store aggregate%array_len%0#0
        v-load aggregate%array_len%0#0                                               aggregate%array_len%0#0
        int 1                                                                        aggregate%array_len%0#0,1
        -                                                                            last#0
        v-store last#0
        // array/uint64.py:195
        // arr[last] = UInt64(0)  # write
        int 0                                                                        0
        itob                                                                         aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load last#0                                                                last#0
        int 8                                                                        last#0,8
        *                                                                            aggregate%write_offset%0#0
        v-store aggregate%write_offset%0#0
        v-load aggregate%slot_contents%0#0                                           aggregate%slot_contents%0#0
        v-load aggregate%write_offset%0#0                                            aggregate%slot_contents%0#0,aggregate%write_offset%0#0
        v-load aggregate%val_as_bytes%0#0                                            aggregate%slot_contents%0#0,aggregate%write_offset%0#0,aggregate%val_as_bytes%0#0
        replace3 // on error: index access is out of bounds                          aggregate%updated_array%0#0
        v-store aggregate%updated_array%0#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%updated_array%0#0                                           arr#0,aggregate%updated_array%0#0
        stores
        // array/uint64.py:196
        // assert_last_is_zero(arr)
        v-load arr#0                                                                 arr#0
        callsub assert_last_is_zero
        // array/uint64.py:197
        // arr[last] = UInt64(1)  # write
        int 1                                                                        1
        itob                                                                         aggregate%val_as_bytes%1#0
        v-store aggregate%val_as_bytes%1#0
        v-load arr#0                                                                 arr#0
        loads                                                                        slot_contents%1#0
        v-store slot_contents%1#0
        v-load slot_contents%1#0                                                     slot_contents%1#0
        v-load aggregate%write_offset%0#0                                            slot_contents%1#0,aggregate%write_offset%0#0
        v-load aggregate%val_as_bytes%1#0                                            slot_contents%1#0,aggregate%write_offset%0#0,aggregate%val_as_bytes%1#0
        replace3 // on error: index access is out of bounds                          aggregate%updated_array%1#0
        v-store aggregate%updated_array%1#0
        v-load arr#0                                                                 arr#0
        v-load aggregate%updated_array%1#0                                           arr#0,aggregate%updated_array%1#0
        stores
        // array/uint64.py:198
        // assert arr[last] == 1
        v-load aggregate%updated_array%1#0                                           aggregate%updated_array%1#0
        v-load aggregate%write_offset%0#0                                            aggregate%updated_array%1#0,aggregate%write_offset%0#0
        extract_uint64                                                               values%0#0
        v-store values%0#0
        v-load values%0#0                                                            values%0#0
        int 1                                                                        values%0#0,1
        ==                                                                           tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                               tmp%3#0
        assert
        // array/uint64.py:191
        // @arc4.abimethod()
        int 1                                                                        1
        return


// _puya_lib.mem.new_slot() -> uint64:
subroutine _puya_lib.mem.new_slot:
    _puya_lib.mem.new_slot@entry:
        load 0                                                                       slot_allocations
        bitlen                                                                       {bitlen}
        v-store free_slot#0
        load 0                                                                       slot_allocations
        int 256                                                                      slot_allocations,256
        v-load free_slot#0                                                           slot_allocations,256,free_slot#0
        -                                                                            slot_allocations,free_slot_idx
        int 0                                                                        slot_allocations,free_slot_idx,0
        setbit // on error: no available slots                                       new_slot_allocations
        store 0
        v-load free_slot#0                                                           free_slot#0
        retsub                                                                       free_slot#0


