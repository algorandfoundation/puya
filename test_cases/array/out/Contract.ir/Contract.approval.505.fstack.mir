// Op                                                                                                                    Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txn NumAppArgs                                                                                                   tmp%0#1
        bz main_bare_routing@17 ; b main_abi_routing@2

    main_abi_routing@2:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                                                           tmp%2#0
        method test_array()void                                                                                          tmp%2#0,Method(test_array()void)
        method test_array_extend()void                                                                                   tmp%2#0,Method(test_array()void),Method(test_array_extend()void)
        method test_array_multiple_append()void                                                                          tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void)
        method overhead()void                                                                                            tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void)
        method test_array_too_long()void                                                                                 tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void)
        method test_array_copy_and_extend()void                                                                          tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void)
        method test_array_evaluation_order()void                                                                         tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void)
        method test_array_assignment_maximum_cursage()void                                                               tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void)
        method test_allocations(uint64)void                                                                              tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void)
        method test_iteration()void                                                                                      tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void)
        method test_quicksort()void                                                                                      tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void)
        method test_unobserved_write()void                                                                               tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void),Method(test_unobserved_write()void)
        l-load tmp%2#0 12                                                                                                Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_array_assignment_maximum_cursage()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void),Method(test_unobserved_write()void),tmp%2#0
        match main_test_array_route@3 main_test_array_extend_route@4 main_test_array_multiple_append_route@5 main_overhead_route@6 main_test_array_too_long_route@7 main_test_array_copy_and_extend_route@8 main_test_array_evaluation_order_route@9 main_test_array_assignment_maximum_cursage_route@10 main_test_allocations_route@11 main_test_iteration_route@12 main_test_quicksort_route@13 main_test_unobserved_write_route@14 ; b main_after_if_else@21 

    main_test_array_route@3:
        // array/uint64.py:14
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%3#0
        !                                                                                                                tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%5#0
        assert // can only call when not creating
        callsub test_array
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_extend_route@4:
        // array/uint64.py:50
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%7#0
        !                                                                                                                tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%9#0
        assert // can only call when not creating
        callsub test_array_extend
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_multiple_append_route@5:
        // array/uint64.py:62
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%11#0
        !                                                                                                                tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%13#0
        assert // can only call when not creating
        callsub test_array_multiple_append
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_overhead_route@6:
        // array/uint64.py:71
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%15#0
        !                                                                                                                tmp%16#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%17#0
        assert // can only call when not creating
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_too_long_route@7:
        // array/uint64.py:75
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%19#0
        !                                                                                                                tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%21#0
        assert // can only call when not creating
        callsub test_array_too_long
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_copy_and_extend_route@8:
        // array/uint64.py:84
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%23#0
        !                                                                                                                tmp%24#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%25#0
        assert // can only call when not creating
        callsub test_array_copy_and_extend
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_evaluation_order_route@9:
        // array/uint64.py:106
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%27#0
        !                                                                                                                tmp%28#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%29#0
        assert // can only call when not creating
        callsub test_array_evaluation_order
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_array_assignment_maximum_cursage_route@10:
        // array/uint64.py:125
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%31#0
        !                                                                                                                tmp%32#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%33#0
        assert // can only call when not creating
        callsub test_array_assignment_maximum_cursage
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_allocations_route@11:
        // array/uint64.py:134
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%35#0
        !                                                                                                                tmp%36#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%37#0
        assert // can only call when not creating
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                                                           reinterpret_Encoded(uint64)%0#0
        btoi                                                                                                             tmp%39#0
        // array/uint64.py:134
        // @arc4.abimethod()
        callsub test_allocations
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_iteration_route@12:
        // array/uint64.py:140
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%40#0
        !                                                                                                                tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%42#0
        assert // can only call when not creating
        callsub test_iteration
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_quicksort_route@13:
        // array/uint64.py:174
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%44#0
        !                                                                                                                tmp%45#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%46#0
        assert // can only call when not creating
        callsub test_quicksort
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_test_unobserved_write_route@14:
        // array/uint64.py:191
        // @arc4.abimethod()
        txn OnCompletion                                                                                                 tmp%48#0
        !                                                                                                                tmp%49#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                                                                tmp%50#0
        assert // can only call when not creating
        callsub test_unobserved_write
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_bare_routing@17:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        txn OnCompletion                                                                                                 tmp%52#0
        bz main___algopy_default_create@18 ; b main_after_if_else@21

    main___algopy_default_create@18:
        txn ApplicationID                                                                                                tmp%53#0
        !                                                                                                                tmp%54#0
        assert // can only call when creating
        int 1                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_after_if_else@21:
        // array/uint64.py:13
        // class Contract(arc4.ARC4Contract):
        int 0                                                                                                            tmp%0#0
        x-store tmp%0#0                                                                                                  (ùïè) tmp%0#0 |
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22                                    (ùïè) tmp%0#0 |

    main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@22:                                         (ùïè) tmp%0#0 |
        x-load tmp%0#0                                                                                                   tmp%0#0
        return


// test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
subroutine quicksort_window:
    declare uint64 aggregate%bytes_offset%1#1, aggregate%bytes_offset%2#1, right#16
    quicksort_window_block@0:                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 |
        // array/uint64.py:207
        // pivot = arr[(window_left + window_right) // 2]
        p-load window_left#0                                                                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | window_left#0 (copy)
        p-load window_right#0                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | window_left#0 (copy),window_right#0 (copy)
        +                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | tmp%0#0
        int 2                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | tmp%0#0,2
        /                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | tmp%1#0
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | tmp%1#0,arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | tmp%1#0,slot_contents%0#0
        l-load tmp%1#0 1                                                                                                 (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | slot_contents%0#0,tmp%1#0
        int 8                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | slot_contents%0#0,tmp%1#0,8
        *                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | slot_contents%0#0,aggregate%bytes_offset%0#1
        l-load slot_contents%0#0 1                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | aggregate%bytes_offset%0#1,slot_contents%0#0
        l-load aggregate%bytes_offset%0#1 1                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | slot_contents%0#0,aggregate%bytes_offset%0#1
        extract_uint64                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16 | pivot#0
        f-store pivot#0                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0 |
        p-load window_right#0                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0 | window_right#0 (copy)
        f-store right#1                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1 |
        p-load window_left#0                                                                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1 | window_left#0 (copy)
        f-store left#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_while_top@3                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_while_top@3:                                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:212
        // while arr[left] < pivot:
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,left#1
        int 8                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,left#1,8
        *                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,aggregate%bytes_offset%1#1
        l-store-copy aggregate%bytes_offset%1#1 0                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,aggregate%bytes_offset%1#1,aggregate%bytes_offset%1#1 (copy)
        f-store aggregate%bytes_offset%1#1                                                                               (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,aggregate%bytes_offset%1#1
        l-load slot_contents%1#0 1                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%1#1,slot_contents%1#0
        l-load aggregate%bytes_offset%1#1 1                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%1#0,aggregate%bytes_offset%1#1
        extract_uint64                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | values%1#0
        f-load pivot#0                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | values%1#0,pivot#0
        <                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%2#0
        bz quicksort_window_while_top@6 ; b quicksort_window_while_body@4                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_while_body@4:                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:213
        // left += 1
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,1
        +                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        f-store left#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_while_top@3                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_while_top@6:                                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:215
        // while pivot < arr[right]:
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,right#1
        int 8                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,right#1,8
        *                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,aggregate%bytes_offset%2#1
        l-store-copy aggregate%bytes_offset%2#1 0                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,aggregate%bytes_offset%2#1,aggregate%bytes_offset%2#1 (copy)
        f-store aggregate%bytes_offset%2#1                                                                               (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,aggregate%bytes_offset%2#1
        l-load slot_contents%2#0 1                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%2#0
        l-load aggregate%bytes_offset%2#1 1                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%2#0,aggregate%bytes_offset%2#1
        extract_uint64                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | values%2#0
        f-load pivot#0                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | values%2#0,pivot#0
        l-load values%2#0 1                                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | pivot#0,values%2#0
        <                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%4#0
        bz quicksort_window_after_while@10 ; b quicksort_window_while_body@7                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_while_body@7:                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:217
        // if not right:
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@9                                          (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@9:                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:219
        // right -= 1
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,1
        -                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        f-store right#1                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_while_top@6                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_while@10:                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:222
        // if left < right:
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,right#1
        <                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%7#0
        bz quicksort_window_after_if_else@16 ; b quicksort_window_if_body@11                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_if_body@11:                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:223
        // arr[left], arr[right] = arr[right], arr[left]
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%3#0
        l-load-copy slot_contents%3#0 0                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%3#0,slot_contents%3#0 (copy)
        f-load aggregate%bytes_offset%2#1                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | slot_contents%3#0,slot_contents%3#0 (copy),aggregate%bytes_offset%2#1
        l-store-copy aggregate%bytes_offset%2#1 2                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,slot_contents%3#0 (copy),aggregate%bytes_offset%2#1 (copy)
        int 8                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,slot_contents%3#0 (copy),aggregate%bytes_offset%2#1 (copy),8
        extract3 // on error: index access is out of bounds                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%encoded_element%3#1
        l-load-copy slot_contents%3#0 1                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%encoded_element%3#1,slot_contents%3#0 (copy)
        f-load aggregate%bytes_offset%1#1                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%encoded_element%3#1,slot_contents%3#0 (copy),aggregate%bytes_offset%1#1
        l-store-copy aggregate%bytes_offset%1#1 2                                                                        (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%bytes_offset%1#1,aggregate%encoded_element%3#1,slot_contents%3#0 (copy),aggregate%bytes_offset%1#1 (copy)
        int 8                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%bytes_offset%1#1,aggregate%encoded_element%3#1,slot_contents%3#0 (copy),aggregate%bytes_offset%1#1 (copy),8
        extract3 // on error: index access is out of bounds                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,slot_contents%3#0,aggregate%bytes_offset%1#1,aggregate%encoded_element%3#1,aggregate%encoded_element%4#1
        l-load slot_contents%3#0 3                                                                                       (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,aggregate%bytes_offset%1#1,aggregate%encoded_element%3#1,aggregate%encoded_element%4#1,slot_contents%3#0
        l-load aggregate%bytes_offset%1#1 3                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,aggregate%encoded_element%3#1,aggregate%encoded_element%4#1,slot_contents%3#0,aggregate%bytes_offset%1#1
        l-load aggregate%encoded_element%3#1 3                                                                           (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,aggregate%encoded_element%4#1,slot_contents%3#0,aggregate%bytes_offset%1#1,aggregate%encoded_element%3#1
        replace3                                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%bytes_offset%2#1,aggregate%encoded_element%4#1,aggregate%updated_array%0#1
        l-load aggregate%bytes_offset%2#1 2                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%encoded_element%4#1,aggregate%updated_array%0#1,aggregate%bytes_offset%2#1
        l-load aggregate%encoded_element%4#1 2                                                                           (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%updated_array%0#1,aggregate%bytes_offset%2#1,aggregate%encoded_element%4#1
        replace3                                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%updated_array%1#1
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | aggregate%updated_array%1#1,arr#0 (copy)
        l-load aggregate%updated_array%1#1 1                                                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy),aggregate%updated_array%1#1
        stores                                                                                                           (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:224
        // left += 1
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,1
        +                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        f-store left#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:226
        // if not right:
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@13                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@13:                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:228
        // right -= 1
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,1
        -                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        l-store-copy right#1 0                                                                                           (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,right#1 (copy)
        f-store right#1                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        // array/uint64.py:230
        // if left <= right:
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,left#1
        l-load right#1 1                                                                                                 (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,right#1
        <=                                                                                                               (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%11#0
        bz quicksort_window_after_while@22 ; b quicksort_window_while_top@3                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@16:                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:236
        // if left == right:
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,right#1
        ==                                                                                                               (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%12#0
        bz quicksort_window_after_while@22 ; b quicksort_window_if_body@17                                               (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_if_body@17:                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:237
        // left += 1
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,1
        +                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        f-store left#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        l-store-copy right#1 0                                                                                           (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,right#1 (copy)
        f-store right#16                                                                                                 (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        // array/uint64.py:239
        // if right:
        l-load right#1 0                                                                                                 (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        bz quicksort_window_after_if_else@19 ; b quicksort_window_if_body@18                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_if_body@18:                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:240
        // right -= 1
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        int 1                                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1,1
        -                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#1
        f-store right#16                                                                                                 (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_after_if_else@19                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@19:                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        f-load right#16                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | right#16
        f-store right#1                                                                                                  (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:243
        // break
        b quicksort_window_after_while@22                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_while@22:                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:248
        // if window_left < right:
        p-load window_left#0                                                                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | window_left#0 (copy)
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | window_left#0 (copy),right#1
        <                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%16#0
        bz quicksort_window_after_if_else@24 ; b quicksort_window_if_body@23                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_if_body@23:                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:249
        // quicksort_window(arr, window_left, right)
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy)
        p-load window_left#0                                                                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy),window_left#0 (copy)
        f-load right#1                                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy),window_left#0 (copy),right#1
        callsub quicksort_window                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_after_if_else@24                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@24:                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:251
        // if left < window_right:
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1
        p-load window_right#0                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | left#1,window_right#0 (copy)
        <                                                                                                                (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | tmp%17#0
        bz quicksort_window_after_if_else@26 ; b quicksort_window_if_body@25                                             (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_if_body@25:                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        // array/uint64.py:252
        // quicksort_window(arr, left, window_right)
        p-load arr#0                                                                                                     (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy)
        f-load left#1                                                                                                    (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy),left#1
        p-load window_right#0                                                                                            (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 | arr#0 (copy),left#1,window_right#0 (copy)
        callsub quicksort_window                                                                                         (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        b quicksort_window_after_if_else@26                                                                              (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |

    quicksort_window_after_if_else@26:                                                                                   (ùï°) arr#0,window_left#0,window_right#0 | (ùïó) aggregate%bytes_offset%1#1,aggregate%bytes_offset%2#1,right#16,pivot#0,right#1,left#1 |
        retsub


// test_cases.array.uint64.create_array() -> uint64:
subroutine create_array:
    create_array_block@0:
        // array/uint64.py:257
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        l-store-copy arr#0 0                                                                                             arr#0,arr#0 (copy)
        f-store arr#0                                                                                                    (ùïó) arr#0 | arr#0
        l-load arr#0 0                                                                                                   (ùïó) arr#0 | arr#0
        byte 0x                                                                                                          (ùïó) arr#0 | arr#0,0x
        stores                                                                                                           (ùïó) arr#0 |
        // array/uint64.py:258
        // for i in urange(5):
        int 0                                                                                                            (ùïó) arr#0 | 0
        f-store i#0                                                                                                      (ùïó) arr#0,i#0 |
        b create_array_for_header@1                                                                                      (ùïó) arr#0,i#0 |

    create_array_for_header@1:                                                                                           (ùïó) arr#0,i#0 |
        // array/uint64.py:258
        // for i in urange(5):
        f-load i#0                                                                                                       (ùïó) arr#0,i#0 | i#0
        int 5                                                                                                            (ùïó) arr#0,i#0 | i#0,5
        <                                                                                                                (ùïó) arr#0,i#0 | continue_looping%0#0
        bz create_array_after_for@4 ; b create_array_for_body@2                                                          (ùïó) arr#0,i#0 |

    create_array_for_body@2:                                                                                             (ùïó) arr#0,i#0 |
        // array/uint64.py:259
        // arr.append(i)
        f-load arr#0                                                                                                     (ùïó) arr#0,i#0 | arr#0
        l-store-copy arr#0 0                                                                                             (ùïó) arr#0,i#0 | arr#0,arr#0 (copy)
        loads                                                                                                            (ùïó) arr#0,i#0 | arr#0,slot_contents%0#0
        f-load i#0                                                                                                       (ùïó) arr#0,i#0 | arr#0,slot_contents%0#0,i#0
        l-store-copy i#0 2                                                                                               (ùïó) arr#0,i#0 | i#0,arr#0,slot_contents%0#0,i#0 (copy)
        itob                                                                                                             (ùïó) arr#0,i#0 | i#0,arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùïó) arr#0,i#0 | i#0,arr#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) arr#0,i#0 | i#0,arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùïó) arr#0,i#0 | i#0,arr#0,concat%0#0
        l-load arr#0 1                                                                                                   (ùïó) arr#0,i#0 | i#0,concat%0#0,arr#0
        l-load concat%0#0 1                                                                                              (ùïó) arr#0,i#0 | i#0,arr#0,concat%0#0
        stores                                                                                                           (ùïó) arr#0,i#0 | i#0
        // array/uint64.py:258
        // for i in urange(5):
        l-load i#0 0                                                                                                     (ùïó) arr#0,i#0 | i#0
        int 1                                                                                                            (ùïó) arr#0,i#0 | i#0,1
        +                                                                                                                (ùïó) arr#0,i#0 | i#0
        f-store i#0                                                                                                      (ùïó) arr#0,i#0 |
        b create_array_for_header@1                                                                                      (ùïó) arr#0,i#0 |

    create_array_after_for@4:                                                                                            (ùïó) arr#0,i#0 |
        // array/uint64.py:260
        // return arr
        f-load arr#0                                                                                                     (ùïó) arr#0,i#0 | arr#0
        retsub                                                                                                           arr#0


// test_cases.array.uint64.assert_last_is_zero(arr: uint64) -> void:
subroutine assert_last_is_zero:
    assert_last_is_zero_block@0:                                                                                         (ùï°) arr#0 |
        // array/uint64.py:265
        // assert arr[arr.length - 1] == 0
        p-load arr#0                                                                                                     (ùï°) arr#0 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0 | slot_contents%0#0
        l-load-copy slot_contents%0#0 0                                                                                  (ùï°) arr#0 | slot_contents%0#0,slot_contents%0#0 (copy)
        len                                                                                                              (ùï°) arr#0 | slot_contents%0#0,bytes_len%0#0
        int 8                                                                                                            (ùï°) arr#0 | slot_contents%0#0,bytes_len%0#0,8
        /                                                                                                                (ùï°) arr#0 | slot_contents%0#0,array_len%0#0
        int 1                                                                                                            (ùï°) arr#0 | slot_contents%0#0,array_len%0#0,1
        -                                                                                                                (ùï°) arr#0 | slot_contents%0#0,tmp%0#0
        int 8                                                                                                            (ùï°) arr#0 | slot_contents%0#0,tmp%0#0,8
        *                                                                                                                (ùï°) arr#0 | slot_contents%0#0,aggregate%bytes_offset%0#1
        l-load slot_contents%0#0 1                                                                                       (ùï°) arr#0 | aggregate%bytes_offset%0#1,slot_contents%0#0
        l-load aggregate%bytes_offset%0#1 1                                                                              (ùï°) arr#0 | slot_contents%0#0,aggregate%bytes_offset%0#1
        extract_uint64                                                                                                   (ùï°) arr#0 | values%0#0
        !                                                                                                                (ùï°) arr#0 | tmp%1#0
        assert                                                                                                           (ùï°) arr#0 |
        retsub


// test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
subroutine add_x:
    add_x_block@0:                                                                                                       (ùï°) arr#0,x#0 |
        // array/uint64.py:279
        // for i in urange(x):
        int 0                                                                                                            (ùï°) arr#0,x#0 | 0
        f-store i#0                                                                                                      (ùï°) arr#0,x#0 | (ùïó) i#0 |
        b add_x_for_header@1                                                                                             (ùï°) arr#0,x#0 | (ùïó) i#0 |

    add_x_for_header@1:                                                                                                  (ùï°) arr#0,x#0 | (ùïó) i#0 |
        // array/uint64.py:279
        // for i in urange(x):
        f-load i#0                                                                                                       (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0
        p-load x#0                                                                                                       (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,x#0 (copy)
        <                                                                                                                (ùï°) arr#0,x#0 | (ùïó) i#0 | continue_looping%0#0
        bz add_x_after_for@4 ; b add_x_for_body@2                                                                        (ùï°) arr#0,x#0 | (ùïó) i#0 |

    add_x_for_body@2:                                                                                                    (ùï°) arr#0,x#0 | (ùïó) i#0 |
        // array/uint64.py:280
        // arr.append(i)
        p-load arr#0                                                                                                     (ùï°) arr#0,x#0 | (ùïó) i#0 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0,x#0 | (ùïó) i#0 | slot_contents%0#0
        f-load i#0                                                                                                       (ùï°) arr#0,x#0 | (ùïó) i#0 | slot_contents%0#0,i#0
        l-store-copy i#0 1                                                                                               (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,slot_contents%0#0,i#0 (copy)
        itob                                                                                                             (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,concat%0#0
        p-load arr#0                                                                                                     (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,concat%0#0,arr#0 (copy)
        l-load concat%0#0 1                                                                                              (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,arr#0 (copy),concat%0#0
        stores                                                                                                           (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0
        // array/uint64.py:279
        // for i in urange(x):
        l-load i#0 0                                                                                                     (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0
        int 1                                                                                                            (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0,1
        +                                                                                                                (ùï°) arr#0,x#0 | (ùïó) i#0 | i#0
        f-store i#0                                                                                                      (ùï°) arr#0,x#0 | (ùïó) i#0 |
        b add_x_for_header@1                                                                                             (ùï°) arr#0,x#0 | (ùïó) i#0 |

    add_x_after_for@4:                                                                                                   (ùï°) arr#0,x#0 | (ùïó) i#0 |
        retsub


// test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
subroutine append_length_and_return:
    append_length_and_return_block@0:                                                                                    (ùï°) arr#0 |
        // array/uint64.py:293
        // arr.append(arr.length)
        p-load arr#0                                                                                                     (ùï°) arr#0 | arr#0 (copy)
        loads                                                                                                            (ùï°) arr#0 | slot_contents%0#0
        l-load-copy slot_contents%0#0 0                                                                                  (ùï°) arr#0 | slot_contents%0#0,slot_contents%0#0 (copy)
        len                                                                                                              (ùï°) arr#0 | slot_contents%0#0,bytes_len%0#0
        int 8                                                                                                            (ùï°) arr#0 | slot_contents%0#0,bytes_len%0#0,8
        /                                                                                                                (ùï°) arr#0 | slot_contents%0#0,array_len%0#0
        itob                                                                                                             (ùï°) arr#0 | slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùï°) arr#0 | aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùï°) arr#0 | slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùï°) arr#0 | concat%0#0
        p-load arr#0                                                                                                     (ùï°) arr#0 | concat%0#0,arr#0 (copy)
        l-load concat%0#0 1                                                                                              (ùï°) arr#0 | arr#0 (copy),concat%0#0
        stores                                                                                                           (ùï°) arr#0 |
        // array/uint64.py:294
        // return arr
        p-load arr#0                                                                                                     (ùï°) arr#0 | arr#0 (copy)
        retsub                                                                                                           arr#0 (copy)


// test_cases.array.uint64.Contract.test_array() -> void:
subroutine test_array:
    test_array_block@0:
        // array/uint64.py:16
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        l-store-copy arr#0 0                                                                                             arr#0,arr#0 (copy)
        f-store arr#0                                                                                                    (ùïó) arr#0 | arr#0
        // array/uint64.py:19
        // arr.append(UInt64(42))
        int 42                                                                                                           (ùïó) arr#0 | arr#0,42
        itob                                                                                                             (ùïó) arr#0 | arr#0,aggregate%val_as_bytes%0#1
        l-load-copy arr#0 1                                                                                              (ùïó) arr#0 | arr#0,aggregate%val_as_bytes%0#1,arr#0 (copy)
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) arr#0 | arr#0,arr#0 (copy),aggregate%val_as_bytes%0#1
        stores                                                                                                           (ùïó) arr#0 | arr#0
        // array/uint64.py:23
        // add_x(arr, UInt64(5))
        l-load-copy arr#0 0                                                                                              (ùïó) arr#0 | arr#0,arr#0 (copy)
        int 5                                                                                                            (ùïó) arr#0 | arr#0,arr#0 (copy),5
        callsub add_x                                                                                                    (ùïó) arr#0 | arr#0
        // array/uint64.py:24
        // assert arr.length == 6
        l-load arr#0 0                                                                                                   (ùïó) arr#0 | arr#0
        loads                                                                                                            (ùïó) arr#0 | slot_contents%5#0
        l-load-copy slot_contents%5#0 0                                                                                  (ùïó) arr#0 | slot_contents%5#0,slot_contents%5#0 (copy)
        len                                                                                                              (ùïó) arr#0 | slot_contents%5#0,bytes_len%3#0
        int 8                                                                                                            (ùïó) arr#0 | slot_contents%5#0,bytes_len%3#0,8
        /                                                                                                                (ùïó) arr#0 | slot_contents%5#0,array_len%3#0
        l-load-copy array_len%3#0 0                                                                                      (ùïó) arr#0 | slot_contents%5#0,array_len%3#0,array_len%3#0 (copy)
        int 6                                                                                                            (ùïó) arr#0 | slot_contents%5#0,array_len%3#0,array_len%3#0 (copy),6
        ==                                                                                                               (ùïó) arr#0 | slot_contents%5#0,array_len%3#0,tmp%5#0
        assert                                                                                                           (ùïó) arr#0 | slot_contents%5#0,array_len%3#0
        // array/uint64.py:25
        // assert arr[-1] == 4
        l-load array_len%3#0 0                                                                                           (ùïó) arr#0 | slot_contents%5#0,array_len%3#0
        int 1                                                                                                            (ùïó) arr#0 | slot_contents%5#0,array_len%3#0,1
        -                                                                                                                (ùïó) arr#0 | slot_contents%5#0,tmp%6#0
        int 8                                                                                                            (ùïó) arr#0 | slot_contents%5#0,tmp%6#0,8
        *                                                                                                                (ùïó) arr#0 | slot_contents%5#0,aggregate%bytes_offset%1#1
        l-load slot_contents%5#0 1                                                                                       (ùïó) arr#0 | aggregate%bytes_offset%1#1,slot_contents%5#0
        l-load aggregate%bytes_offset%1#1 1                                                                              (ùïó) arr#0 | slot_contents%5#0,aggregate%bytes_offset%1#1
        extract_uint64                                                                                                   (ùïó) arr#0 | values%1#0
        int 4                                                                                                            (ùïó) arr#0 | values%1#0,4
        ==                                                                                                               (ùïó) arr#0 | tmp%7#0
        assert                                                                                                           (ùïó) arr#0 |
        // array/uint64.py:27
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 4                                                                                                            (ùïó) arr#0 | 4
        f-store expected#0                                                                                               (ùïó) arr#0,expected#0 |
        // array/uint64.py:285
        // for _i in urange(x):
        int 0                                                                                                            (ùïó) arr#0,expected#0 | 0
        f-store _i#0                                                                                                     (ùïó) arr#0,expected#0,_i#0 |
        b test_array_for_header@2                                                                                        (ùïó) arr#0,expected#0,_i#0 |

    test_array_for_header@2:                                                                                             (ùïó) arr#0,expected#0,_i#0 |
        // array/uint64.py:285
        // for _i in urange(x):
        f-load _i#0                                                                                                      (ùïó) arr#0,expected#0,_i#0 | _i#0
        // array/uint64.py:27
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 3                                                                                                            (ùïó) arr#0,expected#0,_i#0 | _i#0,3
        // array/uint64.py:285
        // for _i in urange(x):
        <                                                                                                                (ùïó) arr#0,expected#0,_i#0 | continue_looping%0#0
        bz test_array_after_for@4 ; b test_array_for_body@3                                                              (ùïó) arr#0,expected#0,_i#0 |

    test_array_for_body@3:                                                                                               (ùïó) arr#0,expected#0,_i#0 |
        // array/uint64.py:286
        // popped = arr.pop()
        f-load arr#0                                                                                                     (ùïó) arr#0,expected#0,_i#0 | arr#0
        l-store-copy arr#0 0                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,arr#0 (copy)
        loads                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1
        l-load-copy slot_contents%0#1 0                                                                                  (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,slot_contents%0#1 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0
        l-load-copy len%0#0 0                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0,len%0#0 (copy)
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0,len%0#0 (copy),8
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0,sub%0#0
        l-load-copy slot_contents%0#1 2                                                                                  (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0,sub%0#0,slot_contents%0#1 (copy)
        l-load-copy sub%0#0 1                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,len%0#0,sub%0#0,slot_contents%0#1 (copy),sub%0#0 (copy)
        l-load len%0#0 3                                                                                                 (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,sub%0#0,slot_contents%0#1 (copy),sub%0#0 (copy),len%0#0
        substring3                                                                                                       (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%0#1,sub%0#0,data%0#0
        l-load slot_contents%0#1 2                                                                                       (ùïó) arr#0,expected#0,_i#0 | arr#0,sub%0#0,data%0#0,slot_contents%0#1
        int 0                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,sub%0#0,data%0#0,slot_contents%0#1,0
        l-load sub%0#0 3                                                                                                 (ùïó) arr#0,expected#0,_i#0 | arr#0,data%0#0,slot_contents%0#1,0,sub%0#0
        extract3                                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,data%0#0,extract%0#0
        l-load data%0#0 1                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,extract%0#0,data%0#0
        btoi                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,extract%0#0,popped#0
        l-load arr#0 2                                                                                                   (ùïó) arr#0,expected#0,_i#0 | extract%0#0,popped#0,arr#0
        l-load extract%0#0 2                                                                                             (ùïó) arr#0,expected#0,_i#0 | popped#0,arr#0,extract%0#0
        stores                                                                                                           (ùïó) arr#0,expected#0,_i#0 | popped#0
        // array/uint64.py:287
        // assert popped == expected
        l-load popped#0 0                                                                                                (ùïó) arr#0,expected#0,_i#0 | popped#0
        f-load expected#0                                                                                                (ùïó) arr#0,expected#0,_i#0 | popped#0,expected#0
        l-store-copy expected#0 1                                                                                        (ùïó) arr#0,expected#0,_i#0 | expected#0,popped#0,expected#0 (copy)
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | expected#0,tmp%1#1
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | expected#0
        // array/uint64.py:288
        // expected -= 1
        l-load expected#0 0                                                                                              (ùïó) arr#0,expected#0,_i#0 | expected#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | expected#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | expected#0
        f-store expected#0                                                                                               (ùïó) arr#0,expected#0,_i#0 |
        // array/uint64.py:285
        // for _i in urange(x):
        f-load _i#0                                                                                                      (ùïó) arr#0,expected#0,_i#0 | _i#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | _i#0,1
        +                                                                                                                (ùïó) arr#0,expected#0,_i#0 | _i#0
        f-store _i#0                                                                                                     (ùïó) arr#0,expected#0,_i#0 |
        b test_array_for_header@2                                                                                        (ùïó) arr#0,expected#0,_i#0 |

    test_array_after_for@4:                                                                                              (ùïó) arr#0,expected#0,_i#0 |
        // array/uint64.py:28
        // assert arr.length == 3
        f-load arr#0                                                                                                     (ùïó) arr#0,expected#0,_i#0 | arr#0
        l-store-copy arr#0 0                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,arr#0 (copy)
        loads                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0
        l-load-copy slot_contents%8#0 0                                                                                  (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,slot_contents%8#0 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,bytes_len%5#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,bytes_len%5#0,8
        /                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0
        l-load-copy array_len%5#0 0                                                                                      (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0,array_len%5#0 (copy)
        int 3                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0,array_len%5#0 (copy),3
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0,tmp%8#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0
        // array/uint64.py:29
        // assert arr[-1] == 1
        l-load array_len%5#0 0                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,array_len%5#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,tmp%9#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,tmp%9#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,aggregate%bytes_offset%2#1
        l-load-copy slot_contents%8#0 1                                                                                  (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,aggregate%bytes_offset%2#1,slot_contents%8#0 (copy)
        l-load aggregate%bytes_offset%2#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,slot_contents%8#0 (copy),aggregate%bytes_offset%2#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,values%2#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,values%2#0,1
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,tmp%10#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0
        // array/uint64.py:31
        // arr.append(UInt64(43))
        int 43                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,43
        itob                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,aggregate%val_as_bytes%1#1
        l-load slot_contents%8#0 1                                                                                       (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%val_as_bytes%1#1,slot_contents%8#0
        l-load aggregate%val_as_bytes%1#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%8#0,aggregate%val_as_bytes%1#1
        concat // on error: max array length exceeded                                                                    (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0
        l-load-copy arr#0 1                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,arr#0 (copy)
        l-load-copy concat%1#0 1                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,arr#0 (copy),concat%1#0 (copy)
        stores                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0
        // array/uint64.py:32
        // assert arr.length == 4
        l-load-copy concat%1#0 0                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,concat%1#0 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,bytes_len%7#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,bytes_len%7#0,8
        /                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0
        l-load-copy array_len%7#0 0                                                                                      (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0,array_len%7#0 (copy)
        int 4                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0,array_len%7#0 (copy),4
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0,tmp%12#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0
        // array/uint64.py:33
        // assert arr[-1] == 43
        l-load array_len%7#0 0                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,array_len%7#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,tmp%13#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,tmp%13#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,aggregate%bytes_offset%3#1
        l-load-copy concat%1#0 1                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,aggregate%bytes_offset%3#1,concat%1#0 (copy)
        l-load aggregate%bytes_offset%3#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,concat%1#0 (copy),aggregate%bytes_offset%3#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,values%3#0
        int 43                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,values%3#0,43
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,tmp%14#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0
        // array/uint64.py:34
        // assert arr[0] == 42
        l-load concat%1#0 0                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0
        int 0                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,0
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,values%4#0
        int 42                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,values%4#0,42
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,tmp%15#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0
        // array/uint64.py:36
        // add_x(arr, UInt64(10))
        l-load-copy arr#0 0                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,arr#0 (copy)
        int 10                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,arr#0 (copy),10
        callsub add_x                                                                                                    (ùïó) arr#0,expected#0,_i#0 | arr#0
        // array/uint64.py:37
        // assert arr.length == 14
        l-load-copy arr#0 0                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,arr#0 (copy)
        loads                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0
        l-load-copy slot_contents%16#0 0                                                                                 (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,slot_contents%16#0 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,bytes_len%9#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,bytes_len%9#0,8
        /                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0
        l-load-copy array_len%9#0 0                                                                                      (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0,array_len%9#0 (copy)
        int 14                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0,array_len%9#0 (copy),14
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0,tmp%16#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0
        // array/uint64.py:38
        // assert arr[-1] == 9
        l-load array_len%9#0 0                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,array_len%9#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,tmp%17#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,tmp%17#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,aggregate%bytes_offset%5#1
        l-load-copy slot_contents%16#0 1                                                                                 (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,aggregate%bytes_offset%5#1,slot_contents%16#0 (copy)
        l-load aggregate%bytes_offset%5#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,slot_contents%16#0 (copy),aggregate%bytes_offset%5#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,values%5#0
        int 9                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,values%5#0,9
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,tmp%18#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0
        // array/uint64.py:40
        // arr.append(UInt64(44))
        int 44                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,44
        itob                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,aggregate%val_as_bytes%2#1
        l-load slot_contents%16#0 1                                                                                      (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%val_as_bytes%2#1,slot_contents%16#0
        l-load aggregate%val_as_bytes%2#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,slot_contents%16#0,aggregate%val_as_bytes%2#1
        concat // on error: max array length exceeded                                                                    (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0
        // array/uint64.py:41
        // assert arr.length == 15
        l-load-copy concat%2#0 0                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,concat%2#0 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,bytes_len%11#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,bytes_len%11#0,8
        /                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0
        l-load-copy array_len%11#0 0                                                                                     (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0,array_len%11#0 (copy)
        int 15                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0,array_len%11#0 (copy),15
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0,tmp%20#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0
        // array/uint64.py:42
        // assert arr[-1] == 44
        l-load array_len%11#0 0                                                                                          (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,array_len%11#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,tmp%21#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,tmp%21#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,aggregate%bytes_offset%6#1
        l-load-copy concat%2#0 1                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,aggregate%bytes_offset%6#1,concat%2#0 (copy)
        l-load aggregate%bytes_offset%6#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,concat%2#0 (copy),aggregate%bytes_offset%6#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,values%6#0
        int 44                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,values%6#0,44
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,tmp%22#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0
        // array/uint64.py:272
        // arr.append(UInt64(99))
        int 99                                                                                                           (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,99
        itob                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,aggregate%val_as_bytes%3#1
        l-load concat%2#0 1                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%val_as_bytes%3#1,concat%2#0
        l-load aggregate%val_as_bytes%3#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%2#0,aggregate%val_as_bytes%3#1
        concat // on error: max array length exceeded                                                                    (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%0#1
        // array/uint64.py:273
        // arr2.append(UInt64(100))
        int 100                                                                                                          (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%0#1,100
        itob                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%0#1,aggregate%val_as_bytes%4#1
        l-load concat%0#1 1                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%val_as_bytes%4#1,concat%0#1
        l-load aggregate%val_as_bytes%4#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%0#1,aggregate%val_as_bytes%4#1
        concat // on error: max array length exceeded                                                                    (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0
        // array/uint64.py:44
        // return_ref(arr, arr)[0] += 2
        l-load-copy concat%1#0 0                                                                                         (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,concat%1#0 (copy)
        int 0                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,concat%1#0 (copy),0
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,values%7#0
        int 2                                                                                                            (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,values%7#0,2
        +                                                                                                                (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,tmp%24#0
        itob                                                                                                             (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,aggregate%val_as_bytes%5#1
        l-load concat%1#0 1                                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%val_as_bytes%5#1,concat%1#0
        l-load aggregate%val_as_bytes%5#1 1                                                                              (ùïó) arr#0,expected#0,_i#0 | arr#0,concat%1#0,aggregate%val_as_bytes%5#1
        replace2 0                                                                                                       (ùïó) arr#0,expected#0,_i#0 | arr#0,aggregate%updated_array%0#1
        l-load arr#0 1                                                                                                   (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,arr#0
        l-load-copy aggregate%updated_array%0#1 1                                                                        (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,arr#0,aggregate%updated_array%0#1 (copy)
        stores                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1
        // array/uint64.py:45
        // assert arr.length == 17
        l-load-copy aggregate%updated_array%0#1 0                                                                        (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy)
        len                                                                                                              (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,bytes_len%13#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,bytes_len%13#0,8
        /                                                                                                                (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0
        l-load-copy array_len%13#0 0                                                                                     (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,array_len%13#0 (copy)
        int 17                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,array_len%13#0 (copy),17
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,tmp%25#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0
        // array/uint64.py:46
        // assert arr[0] == 44
        l-load-copy aggregate%updated_array%0#1 1                                                                        (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,aggregate%updated_array%0#1 (copy)
        int 0                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,aggregate%updated_array%0#1 (copy),0
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,values%8#0
        int 44                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,values%8#0,44
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,tmp%26#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0
        // array/uint64.py:47
        // assert arr[-2] == 99
        l-load-copy array_len%13#0 0                                                                                     (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,array_len%13#0 (copy)
        int 2                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,array_len%13#0 (copy),2
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,tmp%27#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,tmp%27#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,aggregate%bytes_offset%10#1
        l-load-copy aggregate%updated_array%0#1 2                                                                        (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,aggregate%bytes_offset%10#1,aggregate%updated_array%0#1 (copy)
        l-load aggregate%bytes_offset%10#1 1                                                                             (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,aggregate%updated_array%0#1 (copy),aggregate%bytes_offset%10#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,values%9#0
        int 99                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,values%9#0,99
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,tmp%28#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0
        // array/uint64.py:48
        // assert arr[-1] == 100
        l-load array_len%13#0 0                                                                                          (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0
        int 1                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,array_len%13#0,1
        -                                                                                                                (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,tmp%29#0
        int 8                                                                                                            (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,tmp%29#0,8
        *                                                                                                                (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,aggregate%bytes_offset%11#1
        l-load aggregate%updated_array%0#1 1                                                                             (ùïó) arr#0,expected#0,_i#0 | aggregate%bytes_offset%11#1,aggregate%updated_array%0#1
        l-load aggregate%bytes_offset%11#1 1                                                                             (ùïó) arr#0,expected#0,_i#0 | aggregate%updated_array%0#1,aggregate%bytes_offset%11#1
        extract_uint64                                                                                                   (ùïó) arr#0,expected#0,_i#0 | values%10#0
        int 100                                                                                                          (ùïó) arr#0,expected#0,_i#0 | values%10#0,100
        ==                                                                                                               (ùïó) arr#0,expected#0,_i#0 | tmp%30#0
        assert                                                                                                           (ùïó) arr#0,expected#0,_i#0 |
        retsub


// test_cases.array.uint64.Contract.test_array_extend() -> void:
subroutine test_array_extend:
    test_array_extend_block@0:
        // array/uint64.py:52
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        byte 0x                                                                                                          arr#0,arr#0 (copy),0x
        stores                                                                                                           arr#0
        // array/uint64.py:53
        // add_x(arr, UInt64(1))
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        int 1                                                                                                            arr#0,arr#0 (copy),1
        callsub add_x                                                                                                    arr#0
        // array/uint64.py:57
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                                                          arr#0,0x000000000000000100000000000000020000000000000003
        pop 1                                                                                                            arr#0
        // array/uint64.py:59
        // arr.extend(arr2)
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        loads                                                                                                            arr#0,slot_contents%4#0
        // array/uint64.py:57
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                                                          arr#0,slot_contents%4#0,0x000000000000000100000000000000020000000000000003
        // array/uint64.py:59
        // arr.extend(arr2)
        concat // on error: max array length exceeded                                                                    arr#0,concat%3#0
        l-load arr#0 1                                                                                                   concat%3#0,arr#0
        l-load-copy concat%3#0 1                                                                                         concat%3#0,arr#0,concat%3#0 (copy)
        stores                                                                                                           concat%3#0
        // array/uint64.py:60
        // assert arr.length == 4
        l-load concat%3#0 0                                                                                              concat%3#0
        len                                                                                                              bytes_len%1#0
        int 8                                                                                                            bytes_len%1#0,8
        /                                                                                                                array_len%1#0
        int 4                                                                                                            array_len%1#0,4
        ==                                                                                                               tmp%3#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_multiple_append() -> void:
subroutine test_array_multiple_append:
    test_array_multiple_append_block@0:
        // array/uint64.py:64
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        byte 0x                                                                                                          arr#0,arr#0 (copy),0x
        stores                                                                                                           arr#0
        // array/uint64.py:65
        // add_x(arr, UInt64(1))
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        int 1                                                                                                            arr#0,arr#0 (copy),1
        callsub add_x                                                                                                    arr#0
        // array/uint64.py:66
        // arr.append(UInt64(1))
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        loads                                                                                                            arr#0,slot_contents%0#0
        int 1                                                                                                            arr#0,slot_contents%0#0,1
        itob                                                                                                             arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       arr#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    arr#0,concat%0#0
        // array/uint64.py:67
        // arr.append(UInt64(2))
        int 2                                                                                                            arr#0,concat%0#0,2
        itob                                                                                                             arr#0,concat%0#0,aggregate%val_as_bytes%1#1
        l-load concat%0#0 1                                                                                              arr#0,aggregate%val_as_bytes%1#1,concat%0#0
        l-load aggregate%val_as_bytes%1#1 1                                                                              arr#0,concat%0#0,aggregate%val_as_bytes%1#1
        concat // on error: max array length exceeded                                                                    arr#0,concat%1#0
        // array/uint64.py:68
        // arr.append(UInt64(3))
        int 3                                                                                                            arr#0,concat%1#0,3
        itob                                                                                                             arr#0,concat%1#0,aggregate%val_as_bytes%2#1
        l-load concat%1#0 1                                                                                              arr#0,aggregate%val_as_bytes%2#1,concat%1#0
        l-load aggregate%val_as_bytes%2#1 1                                                                              arr#0,concat%1#0,aggregate%val_as_bytes%2#1
        concat // on error: max array length exceeded                                                                    arr#0,concat%2#0
        l-load arr#0 1                                                                                                   concat%2#0,arr#0
        l-load-copy concat%2#0 1                                                                                         concat%2#0,arr#0,concat%2#0 (copy)
        stores                                                                                                           concat%2#0
        // array/uint64.py:69
        // assert arr.length == 4
        l-load concat%2#0 0                                                                                              concat%2#0
        len                                                                                                              bytes_len%0#0
        int 8                                                                                                            bytes_len%0#0,8
        /                                                                                                                array_len%0#0
        int 4                                                                                                            array_len%0#0,4
        ==                                                                                                               tmp%3#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_too_long() -> void:
subroutine test_array_too_long:
    test_array_too_long_block@0:
        // array/uint64.py:77
        // array = ReferenceArray[UInt64]()
        byte 0x                                                                                                          0x
        f-store slot%0                                                                                                   (ùïó) slot%0 |
        // array/uint64.py:78
        // for i in urange(512):
        int 0                                                                                                            (ùïó) slot%0 | 0
        f-store i#0                                                                                                      (ùïó) slot%0,i#0 |
        b test_array_too_long_for_header@1                                                                               (ùïó) slot%0,i#0 |

    test_array_too_long_for_header@1:                                                                                    (ùïó) slot%0,i#0 |
        // array/uint64.py:78
        // for i in urange(512):
        f-load i#0                                                                                                       (ùïó) slot%0,i#0 | i#0
        int 512                                                                                                          (ùïó) slot%0,i#0 | i#0,512
        <                                                                                                                (ùïó) slot%0,i#0 | continue_looping%0#0
        bz test_array_too_long_after_for@4 ; b test_array_too_long_for_body@2                                            (ùïó) slot%0,i#0 |

    test_array_too_long_for_body@2:                                                                                      (ùïó) slot%0,i#0 |
        f-load slot%0                                                                                                    (ùïó) slot%0,i#0 | slot_contents%0#0
        // array/uint64.py:79
        // array.append(i)
        f-load i#0                                                                                                       (ùïó) slot%0,i#0 | slot_contents%0#0,i#0
        l-store-copy i#0 1                                                                                               (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,i#0 (copy)
        itob                                                                                                             (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùïó) slot%0,i#0 | i#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùïó) slot%0,i#0 | i#0,concat%0#0
        f-store slot%0                                                                                                   (ùïó) slot%0,i#0 | i#0
        // array/uint64.py:78
        // for i in urange(512):
        l-load i#0 0                                                                                                     (ùïó) slot%0,i#0 | i#0
        int 1                                                                                                            (ùïó) slot%0,i#0 | i#0,1
        +                                                                                                                (ùïó) slot%0,i#0 | i#0
        f-store i#0                                                                                                      (ùïó) slot%0,i#0 |
        b test_array_too_long_for_header@1                                                                               (ùïó) slot%0,i#0 |

    test_array_too_long_after_for@4:                                                                                     (ùïó) slot%0,i#0 |
        f-load slot%0                                                                                                    (ùïó) slot%0,i#0 | slot_contents%1#0
        // array/uint64.py:80
        // assert array.length == 512, "array is expected length"
        l-load-copy slot_contents%1#0 0                                                                                  (ùïó) slot%0,i#0 | slot_contents%1#0,slot_contents%1#0 (copy)
        len                                                                                                              (ùïó) slot%0,i#0 | slot_contents%1#0,bytes_len%0#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot_contents%1#0,bytes_len%0#0,8
        /                                                                                                                (ùïó) slot%0,i#0 | slot_contents%1#0,array_len%0#0
        int 512                                                                                                          (ùïó) slot%0,i#0 | slot_contents%1#0,array_len%0#0,512
        ==                                                                                                               (ùïó) slot%0,i#0 | slot_contents%1#0,tmp%1#0
        assert // array is expected length                                                                               (ùïó) slot%0,i#0 | slot_contents%1#0
        // array/uint64.py:82
        // array.append(UInt64(512))  # this will fail
        int 512                                                                                                          (ùïó) slot%0,i#0 | slot_contents%1#0,512
        itob                                                                                                             (ùïó) slot%0,i#0 | slot_contents%1#0,aggregate%val_as_bytes%1#1
        l-load slot_contents%1#0 1                                                                                       (ùïó) slot%0,i#0 | aggregate%val_as_bytes%1#1,slot_contents%1#0
        l-load aggregate%val_as_bytes%1#1 1                                                                              (ùïó) slot%0,i#0 | slot_contents%1#0,aggregate%val_as_bytes%1#1
        concat // on error: max array length exceeded                                                                    (ùïó) slot%0,i#0 | concat%1#0
        pop 1                                                                                                            (ùïó) slot%0,i#0 |
        retsub


// test_cases.array.uint64.Contract.test_array_copy_and_extend() -> void:
subroutine test_array_copy_and_extend:
    test_array_copy_and_extend_block@0:
        // array/uint64.py:86
        // array = ReferenceArray[UInt64]()
        byte 0x                                                                                                          0x
        f-store slot%0                                                                                                   (ùïó) slot%0 |
        // array/uint64.py:87
        // for i in urange(5):
        int 0                                                                                                            (ùïó) slot%0 | 0
        f-store i#0                                                                                                      (ùïó) slot%0,i#0 |
        b test_array_copy_and_extend_for_header@1                                                                        (ùïó) slot%0,i#0 |

    test_array_copy_and_extend_for_header@1:                                                                             (ùïó) slot%0,i#0 |
        // array/uint64.py:87
        // for i in urange(5):
        f-load i#0                                                                                                       (ùïó) slot%0,i#0 | i#0
        int 5                                                                                                            (ùïó) slot%0,i#0 | i#0,5
        <                                                                                                                (ùïó) slot%0,i#0 | continue_looping%0#0
        bz test_array_copy_and_extend_after_for@4 ; b test_array_copy_and_extend_for_body@2 (ùïó) slot%0,i#0 | 

    test_array_copy_and_extend_for_body@2:                                                                               (ùïó) slot%0,i#0 |
        f-load slot%0                                                                                                    (ùïó) slot%0,i#0 | slot_contents%0#0
        // array/uint64.py:88
        // array.append(i)
        f-load i#0                                                                                                       (ùïó) slot%0,i#0 | slot_contents%0#0,i#0
        l-store-copy i#0 1                                                                                               (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,i#0 (copy)
        itob                                                                                                             (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùïó) slot%0,i#0 | i#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) slot%0,i#0 | i#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùïó) slot%0,i#0 | i#0,concat%0#0
        f-store slot%0                                                                                                   (ùïó) slot%0,i#0 | i#0
        // array/uint64.py:87
        // for i in urange(5):
        l-load i#0 0                                                                                                     (ùïó) slot%0,i#0 | i#0
        int 1                                                                                                            (ùïó) slot%0,i#0 | i#0,1
        +                                                                                                                (ùïó) slot%0,i#0 | i#0
        f-store i#0                                                                                                      (ùïó) slot%0,i#0 |
        b test_array_copy_and_extend_for_header@1                                                                        (ùïó) slot%0,i#0 |

    test_array_copy_and_extend_after_for@4:                                                                              (ùïó) slot%0,i#0 |
        f-load slot%0                                                                                                    (ùïó) slot%0,i#0 | slot%0
        l-store-copy slot%0 0                                                                                            (ùïó) slot%0,i#0 | slot%0,slot%1
        l-store slot%1 1                                                                                                 (ùïó) slot%0,i#0 | slot%1,slot%0
        l-load slot%0 0                                                                                                  (ùïó) slot%0,i#0 | slot%1,slot_contents%2#0
        // array/uint64.py:91
        // array.append(UInt64(5))
        int 5                                                                                                            (ùïó) slot%0,i#0 | slot%1,slot_contents%2#0,5
        itob                                                                                                             (ùïó) slot%0,i#0 | slot%1,slot_contents%2#0,aggregate%val_as_bytes%1#1
        l-load slot_contents%2#0 1                                                                                       (ùïó) slot%0,i#0 | slot%1,aggregate%val_as_bytes%1#1,slot_contents%2#0
        l-load aggregate%val_as_bytes%1#1 1                                                                              (ùïó) slot%0,i#0 | slot%1,slot_contents%2#0,aggregate%val_as_bytes%1#1
        concat // on error: max array length exceeded                                                                    (ùïó) slot%0,i#0 | slot%1,concat%1#0
        l-load-copy concat%1#0 0                                                                                         (ùïó) slot%0,i#0 | slot%1,concat%1#0,concat%1#0 (copy)
        pop 1                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0
        // array/uint64.py:92
        // assert array.length == 6
        l-load-copy concat%1#0 0                                                                                         (ùïó) slot%0,i#0 | slot%1,concat%1#0,concat%1#0 (copy)
        len                                                                                                              (ùïó) slot%0,i#0 | slot%1,concat%1#0,bytes_len%0#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,bytes_len%0#0,8
        /                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0
        l-load-copy array_len%0#0 0                                                                                      (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0,array_len%0#0 (copy)
        int 6                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0,array_len%0#0 (copy),6
        ==                                                                                                               (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0,tmp%2#0
        assert                                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0
        // array/uint64.py:93
        // assert array[-1] == 5, "expected 5"
        l-load array_len%0#0 0                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0
        int 1                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,array_len%0#0,1
        -                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,tmp%3#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,tmp%3#0,8
        *                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,aggregate%bytes_offset%0#1
        l-load-copy concat%1#0 1                                                                                         (ùïó) slot%0,i#0 | slot%1,concat%1#0,aggregate%bytes_offset%0#1,concat%1#0 (copy)
        l-load aggregate%bytes_offset%0#1 1                                                                              (ùïó) slot%0,i#0 | slot%1,concat%1#0,concat%1#0 (copy),aggregate%bytes_offset%0#1
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | slot%1,concat%1#0,values%0#0
        int 5                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,values%0#0,5
        ==                                                                                                               (ùïó) slot%0,i#0 | slot%1,concat%1#0,tmp%4#0
        assert // expected 5                                                                                             (ùïó) slot%0,i#0 | slot%1,concat%1#0
        l-load-copy slot%1 1                                                                                             (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0
        // array/uint64.py:95
        // assert array2.length == 5
        l-load-copy slot_contents%6#0 0                                                                                  (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,slot_contents%6#0 (copy)
        len                                                                                                              (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,bytes_len%2#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,bytes_len%2#0,8
        /                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0
        l-load-copy array_len%2#0 0                                                                                      (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0,array_len%2#0 (copy)
        int 5                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0,array_len%2#0 (copy),5
        ==                                                                                                               (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0,tmp%5#0
        assert                                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0
        // array/uint64.py:96
        // assert array2[-1] == 4, "expected 4"
        l-load array_len%2#0 0                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0
        int 1                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,array_len%2#0,1
        -                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,tmp%6#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,tmp%6#0,8
        *                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,aggregate%bytes_offset%1#1
        l-load-copy slot_contents%6#0 1                                                                                  (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,aggregate%bytes_offset%1#1,slot_contents%6#0 (copy)
        l-load aggregate%bytes_offset%1#1 1                                                                              (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,slot_contents%6#0 (copy),aggregate%bytes_offset%1#1
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,values%1#0
        int 4                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,values%1#0,4
        ==                                                                                                               (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0,tmp%7#0
        assert // expected 4                                                                                             (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0
        // array/uint64.py:98
        // array.extend(array2)
        l-load concat%1#0 1                                                                                              (ùïó) slot%0,i#0 | slot%1,slot_contents%6#0,concat%1#0
        l-load slot_contents%6#0 1                                                                                       (ùïó) slot%0,i#0 | slot%1,concat%1#0,slot_contents%6#0
        concat // on error: max array length exceeded                                                                    (ùïó) slot%0,i#0 | slot%1,concat%2#0
        l-load-copy concat%2#0 0                                                                                         (ùïó) slot%0,i#0 | slot%1,concat%2#0,concat%2#0 (copy)
        pop 1                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%2#0
        // array/uint64.py:99
        // assert array.length == 11
        l-load-copy concat%2#0 0                                                                                         (ùïó) slot%0,i#0 | slot%1,concat%2#0,concat%2#0 (copy)
        len                                                                                                              (ùïó) slot%0,i#0 | slot%1,concat%2#0,bytes_len%5#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | slot%1,concat%2#0,bytes_len%5#0,8
        /                                                                                                                (ùïó) slot%0,i#0 | slot%1,concat%2#0,array_len%5#0
        l-load-copy array_len%5#0 0                                                                                      (ùïó) slot%0,i#0 | slot%1,concat%2#0,array_len%5#0,array_len%5#0 (copy)
        int 11                                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%2#0,array_len%5#0,array_len%5#0 (copy),11
        ==                                                                                                               (ùïó) slot%0,i#0 | slot%1,concat%2#0,array_len%5#0,tmp%8#0
        assert                                                                                                           (ùïó) slot%0,i#0 | slot%1,concat%2#0,array_len%5#0
        l-load slot%1 2                                                                                                  (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,slot_contents%12#0
        // array/uint64.py:100
        // assert array2.length == 5
        len                                                                                                              (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,bytes_len%6#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,bytes_len%6#0,8
        /                                                                                                                (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,array_len%6#0
        int 5                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,array_len%6#0,5
        ==                                                                                                               (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,tmp%9#0
        assert                                                                                                           (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0
        // array/uint64.py:101
        // assert array[-1] == 4, "expected 4"
        l-load array_len%5#0 0                                                                                           (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0
        int 1                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,array_len%5#0,1
        -                                                                                                                (ùïó) slot%0,i#0 | concat%2#0,tmp%10#0
        int 8                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,tmp%10#0,8
        *                                                                                                                (ùïó) slot%0,i#0 | concat%2#0,aggregate%bytes_offset%2#1
        l-load-copy concat%2#0 1                                                                                         (ùïó) slot%0,i#0 | concat%2#0,aggregate%bytes_offset%2#1,concat%2#0 (copy)
        l-load aggregate%bytes_offset%2#1 1                                                                              (ùïó) slot%0,i#0 | concat%2#0,concat%2#0 (copy),aggregate%bytes_offset%2#1
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | concat%2#0,values%2#0
        int 4                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,values%2#0,4
        ==                                                                                                               (ùïó) slot%0,i#0 | concat%2#0,tmp%11#0
        assert // expected 4                                                                                             (ùïó) slot%0,i#0 | concat%2#0
        // array/uint64.py:102
        // assert array[4] == 4, "expected 4"
        l-load-copy concat%2#0 0                                                                                         (ùïó) slot%0,i#0 | concat%2#0,concat%2#0 (copy)
        int 32                                                                                                           (ùïó) slot%0,i#0 | concat%2#0,concat%2#0 (copy),32
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | concat%2#0,values%3#0
        int 4                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,values%3#0,4
        ==                                                                                                               (ùïó) slot%0,i#0 | concat%2#0,tmp%12#0
        assert // expected 4                                                                                             (ùïó) slot%0,i#0 | concat%2#0
        // array/uint64.py:103
        // assert array[5] == 5, "expected 4"
        l-load-copy concat%2#0 0                                                                                         (ùïó) slot%0,i#0 | concat%2#0,concat%2#0 (copy)
        int 40                                                                                                           (ùïó) slot%0,i#0 | concat%2#0,concat%2#0 (copy),40
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | concat%2#0,values%4#0
        int 5                                                                                                            (ùïó) slot%0,i#0 | concat%2#0,values%4#0,5
        ==                                                                                                               (ùïó) slot%0,i#0 | concat%2#0,tmp%13#0
        assert // expected 4                                                                                             (ùïó) slot%0,i#0 | concat%2#0
        // array/uint64.py:104
        // assert array[6] == 0, "expected 4"
        l-load concat%2#0 0                                                                                              (ùïó) slot%0,i#0 | concat%2#0
        int 48                                                                                                           (ùïó) slot%0,i#0 | concat%2#0,48
        extract_uint64                                                                                                   (ùïó) slot%0,i#0 | values%5#0
        !                                                                                                                (ùïó) slot%0,i#0 | tmp%14#0
        assert // expected 4                                                                                             (ùïó) slot%0,i#0 |
        retsub


// test_cases.array.uint64.Contract.test_array_evaluation_order() -> void:
subroutine test_array_evaluation_order:
    test_array_evaluation_order_block@0:
        // array/uint64.py:108
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        // array/uint64.py:109
        // arr.append(UInt64(3))
        int 3                                                                                                            arr#0,3
        itob                                                                                                             arr#0,aggregate%val_as_bytes%0#1
        l-load-copy arr#0 1                                                                                              arr#0,aggregate%val_as_bytes%0#1,arr#0 (copy)
        l-load aggregate%val_as_bytes%0#1 1                                                                              arr#0,arr#0 (copy),aggregate%val_as_bytes%0#1
        stores                                                                                                           arr#0
        // array/uint64.py:110
        // append_length_and_return(arr).extend(append_length_and_return(arr))
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        callsub append_length_and_return                                                                                 arr#0,tmp%1#0
        l-load-copy arr#0 1                                                                                              arr#0,tmp%1#0,arr#0 (copy)
        callsub append_length_and_return                                                                                 arr#0,tmp%1#0,tmp%2#0
        loads                                                                                                            arr#0,tmp%1#0,slot_contents%1#0
        l-load-copy tmp%1#0 1                                                                                            arr#0,tmp%1#0,slot_contents%1#0,tmp%1#0 (copy)
        loads                                                                                                            arr#0,tmp%1#0,slot_contents%1#0,slot_contents%2#0
        l-load slot_contents%1#0 1                                                                                       arr#0,tmp%1#0,slot_contents%2#0,slot_contents%1#0
        concat // on error: max array length exceeded                                                                    arr#0,tmp%1#0,concat%1#0
        l-load tmp%1#0 1                                                                                                 arr#0,concat%1#0,tmp%1#0
        l-load concat%1#0 1                                                                                              arr#0,tmp%1#0,concat%1#0
        stores                                                                                                           arr#0
        // array/uint64.py:111
        // assert arr.length == 6
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        loads                                                                                                            arr#0,slot_contents%3#0
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        len                                                                                                              arr#0,slot_contents%3#0,bytes_len%1#0
        int 8                                                                                                            arr#0,slot_contents%3#0,bytes_len%1#0,8
        /                                                                                                                arr#0,slot_contents%3#0,array_len%1#0
        int 6                                                                                                            arr#0,slot_contents%3#0,array_len%1#0,6
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%3#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:112
        // assert arr[0] == 3
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        int 0                                                                                                            arr#0,slot_contents%3#0,slot_contents%3#0 (copy),0
        extract_uint64                                                                                                   arr#0,slot_contents%3#0,values%0#0
        int 3                                                                                                            arr#0,slot_contents%3#0,values%0#0,3
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%4#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:113
        // assert arr[1] == 1
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        int 8                                                                                                            arr#0,slot_contents%3#0,slot_contents%3#0 (copy),8
        extract_uint64                                                                                                   arr#0,slot_contents%3#0,values%1#0
        int 1                                                                                                            arr#0,slot_contents%3#0,values%1#0,1
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%5#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:114
        // assert arr[2] == 2
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        int 16                                                                                                           arr#0,slot_contents%3#0,slot_contents%3#0 (copy),16
        extract_uint64                                                                                                   arr#0,slot_contents%3#0,values%2#0
        int 2                                                                                                            arr#0,slot_contents%3#0,values%2#0,2
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%6#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:115
        // assert arr[3] == 3
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        int 24                                                                                                           arr#0,slot_contents%3#0,slot_contents%3#0 (copy),24
        extract_uint64                                                                                                   arr#0,slot_contents%3#0,values%3#0
        int 3                                                                                                            arr#0,slot_contents%3#0,values%3#0,3
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%7#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:116
        // assert arr[4] == 1
        l-load-copy slot_contents%3#0 0                                                                                  arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        int 32                                                                                                           arr#0,slot_contents%3#0,slot_contents%3#0 (copy),32
        extract_uint64                                                                                                   arr#0,slot_contents%3#0,values%4#0
        int 1                                                                                                            arr#0,slot_contents%3#0,values%4#0,1
        ==                                                                                                               arr#0,slot_contents%3#0,tmp%8#0
        assert                                                                                                           arr#0,slot_contents%3#0
        // array/uint64.py:117
        // assert arr[5] == 2
        l-load slot_contents%3#0 0                                                                                       arr#0,slot_contents%3#0
        int 40                                                                                                           arr#0,slot_contents%3#0,40
        extract_uint64                                                                                                   arr#0,values%5#0
        int 2                                                                                                            arr#0,values%5#0,2
        ==                                                                                                               arr#0,tmp%9#0
        assert                                                                                                           arr#0
        // array/uint64.py:119
        // arr[append_length_and_return(arr)[0]] = append_length_and_return(arr)[-1]
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        callsub append_length_and_return                                                                                 arr#0,tmp%10#0
        loads                                                                                                            arr#0,slot_contents%10#0
        l-load-copy slot_contents%10#0 0                                                                                 arr#0,slot_contents%10#0,slot_contents%10#0 (copy)
        len                                                                                                              arr#0,slot_contents%10#0,bytes_len%2#0
        int 8                                                                                                            arr#0,slot_contents%10#0,bytes_len%2#0,8
        /                                                                                                                arr#0,slot_contents%10#0,array_len%2#0
        int 1                                                                                                            arr#0,slot_contents%10#0,array_len%2#0,1
        -                                                                                                                arr#0,slot_contents%10#0,tmp%11#0
        int 8                                                                                                            arr#0,slot_contents%10#0,tmp%11#0,8
        *                                                                                                                arr#0,slot_contents%10#0,aggregate%bytes_offset%6#1
        l-load slot_contents%10#0 1                                                                                      arr#0,aggregate%bytes_offset%6#1,slot_contents%10#0
        l-load aggregate%bytes_offset%6#1 1                                                                              arr#0,slot_contents%10#0,aggregate%bytes_offset%6#1
        int 8                                                                                                            arr#0,slot_contents%10#0,aggregate%bytes_offset%6#1,8
        extract3 // on error: index access is out of bounds                                                              arr#0,aggregate%encoded_element%6#1
        l-load-copy arr#0 1                                                                                              arr#0,aggregate%encoded_element%6#1,arr#0 (copy)
        callsub append_length_and_return                                                                                 arr#0,aggregate%encoded_element%6#1,tmp%12#0
        loads                                                                                                            arr#0,aggregate%encoded_element%6#1,slot_contents%12#0
        int 0                                                                                                            arr#0,aggregate%encoded_element%6#1,slot_contents%12#0,0
        extract_uint64                                                                                                   arr#0,aggregate%encoded_element%6#1,values%7#0
        l-load-copy arr#0 2                                                                                              arr#0,aggregate%encoded_element%6#1,values%7#0,arr#0 (copy)
        loads                                                                                                            arr#0,aggregate%encoded_element%6#1,values%7#0,slot_contents%13#0
        l-load values%7#0 1                                                                                              arr#0,aggregate%encoded_element%6#1,slot_contents%13#0,values%7#0
        int 8                                                                                                            arr#0,aggregate%encoded_element%6#1,slot_contents%13#0,values%7#0,8
        *                                                                                                                arr#0,aggregate%encoded_element%6#1,slot_contents%13#0,aggregate%write_offset%0#1
        l-load slot_contents%13#0 1                                                                                      arr#0,aggregate%encoded_element%6#1,aggregate%write_offset%0#1,slot_contents%13#0
        l-load aggregate%write_offset%0#1 1                                                                              arr#0,aggregate%encoded_element%6#1,slot_contents%13#0,aggregate%write_offset%0#1
        l-load aggregate%encoded_element%6#1 2                                                                           arr#0,slot_contents%13#0,aggregate%write_offset%0#1,aggregate%encoded_element%6#1
        replace3                                                                                                         arr#0,aggregate%updated_array%0#1
        l-load arr#0 1                                                                                                   aggregate%updated_array%0#1,arr#0
        l-load-copy aggregate%updated_array%0#1 1                                                                        aggregate%updated_array%0#1,arr#0,aggregate%updated_array%0#1 (copy)
        stores                                                                                                           aggregate%updated_array%0#1
        // array/uint64.py:120
        // assert arr.length == 8
        l-load-copy aggregate%updated_array%0#1 0                                                                        aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy)
        len                                                                                                              aggregate%updated_array%0#1,bytes_len%3#0
        int 8                                                                                                            aggregate%updated_array%0#1,bytes_len%3#0,8
        /                                                                                                                aggregate%updated_array%0#1,array_len%3#0
        int 8                                                                                                            aggregate%updated_array%0#1,array_len%3#0,8
        ==                                                                                                               aggregate%updated_array%0#1,tmp%13#0
        assert                                                                                                           aggregate%updated_array%0#1
        // array/uint64.py:121
        // assert arr[6] == 6
        l-load-copy aggregate%updated_array%0#1 0                                                                        aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy)
        int 48                                                                                                           aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy),48
        extract_uint64                                                                                                   aggregate%updated_array%0#1,values%8#0
        int 6                                                                                                            aggregate%updated_array%0#1,values%8#0,6
        ==                                                                                                               aggregate%updated_array%0#1,tmp%14#0
        assert                                                                                                           aggregate%updated_array%0#1
        // array/uint64.py:122
        // assert arr[7] == 7
        l-load-copy aggregate%updated_array%0#1 0                                                                        aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy)
        int 56                                                                                                           aggregate%updated_array%0#1,aggregate%updated_array%0#1 (copy),56
        extract_uint64                                                                                                   aggregate%updated_array%0#1,values%9#0
        int 7                                                                                                            aggregate%updated_array%0#1,values%9#0,7
        ==                                                                                                               aggregate%updated_array%0#1,tmp%15#0
        assert                                                                                                           aggregate%updated_array%0#1
        // array/uint64.py:123
        // assert arr[3] == 6
        l-load aggregate%updated_array%0#1 0                                                                             aggregate%updated_array%0#1
        int 24                                                                                                           aggregate%updated_array%0#1,24
        extract_uint64                                                                                                   values%10#0
        int 6                                                                                                            values%10#0,6
        ==                                                                                                               tmp%16#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_assignment_maximum_cursage() -> void:
subroutine test_array_assignment_maximum_cursage:
    test_array_assignment_maximum_cursage_block@0:
        // array/uint64.py:127
        // arr = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   arr#0
        // array/uint64.py:128
        // arr.append(UInt64(3))
        int 3                                                                                                            arr#0,3
        itob                                                                                                             arr#0,aggregate%val_as_bytes%0#1
        l-load-copy arr#0 1                                                                                              arr#0,aggregate%val_as_bytes%0#1,arr#0 (copy)
        l-load aggregate%val_as_bytes%0#1 1                                                                              arr#0,arr#0 (copy),aggregate%val_as_bytes%0#1
        stores                                                                                                           arr#0
        // array/uint64.py:129
        // append_length_and_return(arr)[0] = UInt64(42)
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        callsub append_length_and_return                                                                                 arr#0,update_assignment_current_base_value%0#0
        int 42                                                                                                           arr#0,update_assignment_current_base_value%0#0,42
        itob                                                                                                             arr#0,update_assignment_current_base_value%0#0,aggregate%val_as_bytes%1#1
        l-load-copy update_assignment_current_base_value%0#0 1                                                           arr#0,update_assignment_current_base_value%0#0,aggregate%val_as_bytes%1#1,update_assignment_current_base_value%0#0 (copy)
        loads                                                                                                            arr#0,update_assignment_current_base_value%0#0,aggregate%val_as_bytes%1#1,slot_contents%1#0
        l-load aggregate%val_as_bytes%1#1 1                                                                              arr#0,update_assignment_current_base_value%0#0,slot_contents%1#0,aggregate%val_as_bytes%1#1
        replace2 0                                                                                                       arr#0,update_assignment_current_base_value%0#0,aggregate%updated_array%0#1
        l-load update_assignment_current_base_value%0#0 1                                                                arr#0,aggregate%updated_array%0#1,update_assignment_current_base_value%0#0
        l-load aggregate%updated_array%0#1 1                                                                             arr#0,update_assignment_current_base_value%0#0,aggregate%updated_array%0#1
        stores                                                                                                           arr#0
        // array/uint64.py:130
        // assert arr.length == 2
        l-load arr#0 0                                                                                                   arr#0
        loads                                                                                                            slot_contents%2#0
        l-load-copy slot_contents%2#0 0                                                                                  slot_contents%2#0,slot_contents%2#0 (copy)
        len                                                                                                              slot_contents%2#0,bytes_len%0#0
        int 8                                                                                                            slot_contents%2#0,bytes_len%0#0,8
        /                                                                                                                slot_contents%2#0,array_len%0#0
        int 2                                                                                                            slot_contents%2#0,array_len%0#0,2
        ==                                                                                                               slot_contents%2#0,tmp%1#0
        assert                                                                                                           slot_contents%2#0
        // array/uint64.py:131
        // assert arr[0] == 42
        l-load-copy slot_contents%2#0 0                                                                                  slot_contents%2#0,slot_contents%2#0 (copy)
        int 0                                                                                                            slot_contents%2#0,slot_contents%2#0 (copy),0
        extract_uint64                                                                                                   slot_contents%2#0,values%0#0
        int 42                                                                                                           slot_contents%2#0,values%0#0,42
        ==                                                                                                               slot_contents%2#0,tmp%2#0
        assert                                                                                                           slot_contents%2#0
        // array/uint64.py:132
        // assert arr[1] == 1
        l-load slot_contents%2#0 0                                                                                       slot_contents%2#0
        int 8                                                                                                            slot_contents%2#0,8
        extract_uint64                                                                                                   values%1#0
        int 1                                                                                                            values%1#0,1
        ==                                                                                                               tmp%3#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_allocations(num: uint64) -> void:
subroutine test_allocations:
    test_allocations_block@0:                                                                                            (ùï°) num#0 |
        // array/uint64.py:136
        // for _i in urange(num):
        int 0                                                                                                            (ùï°) num#0 | 0
        f-store _i#0                                                                                                     (ùï°) num#0 | (ùïó) _i#0 |
        b test_allocations_for_header@1                                                                                  (ùï°) num#0 | (ùïó) _i#0 |

    test_allocations_for_header@1:                                                                                       (ùï°) num#0 | (ùïó) _i#0 |
        // array/uint64.py:136
        // for _i in urange(num):
        f-load _i#0                                                                                                      (ùï°) num#0 | (ùïó) _i#0 | _i#0
        p-load num#0                                                                                                     (ùï°) num#0 | (ùïó) _i#0 | _i#0,num#0 (copy)
        <                                                                                                                (ùï°) num#0 | (ùïó) _i#0 | continue_looping%0#0
        bz test_allocations_after_for@4 ; b test_allocations_for_body@2                                                  (ùï°) num#0 | (ùïó) _i#0 |

    test_allocations_for_body@2:                                                                                         (ùï°) num#0 | (ùïó) _i#0 |
        // array/uint64.py:137
        // alloc_test = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0
        l-load-copy alloc_test#0 0                                                                                       (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0,alloc_test#0 (copy)
        byte 0x                                                                                                          (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0,alloc_test#0 (copy),0x
        stores                                                                                                           (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0
        // array/uint64.py:138
        // add_x(alloc_test, UInt64(1))
        l-load alloc_test#0 0                                                                                            (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0
        int 1                                                                                                            (ùï°) num#0 | (ùïó) _i#0 | alloc_test#0,1
        callsub add_x                                                                                                    (ùï°) num#0 | (ùïó) _i#0 |
        // array/uint64.py:136
        // for _i in urange(num):
        f-load _i#0                                                                                                      (ùï°) num#0 | (ùïó) _i#0 | _i#0
        int 1                                                                                                            (ùï°) num#0 | (ùïó) _i#0 | _i#0,1
        +                                                                                                                (ùï°) num#0 | (ùïó) _i#0 | _i#0
        f-store _i#0                                                                                                     (ùï°) num#0 | (ùïó) _i#0 |
        b test_allocations_for_header@1                                                                                  (ùï°) num#0 | (ùïó) _i#0 |

    test_allocations_after_for@4:                                                                                        (ùï°) num#0 | (ùïó) _i#0 |
        retsub


// test_cases.array.uint64.Contract.test_iteration() -> void:
subroutine test_iteration:
    declare bytes arc4_arr#0, slot%1
    declare uint64 array_len%0#0, array_len%2#0, i#0, idx#0, item_index_internal%0#0, last#0, reverse_index_internal%2#1
    test_iteration_block@0:                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1 |
        // array/uint64.py:142
        // arr = ReferenceArray[UInt64]()
        byte 0x                                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1 | 0x
        f-store slot%0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0 |
        // array/uint64.py:143
        // for val in urange(5):
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0 | 0
        f-store val#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@1                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_header@1:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:143
        // for val in urange(5):
        f-load val#0                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0
        int 5                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,5
        <                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | continue_looping%0#0
        bz test_iteration_after_for@4 ; b test_iteration_for_body@2                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_body@2:                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%0#0
        // array/uint64.py:144
        // arr.append(val)
        f-load val#0                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%0#0,val#0
        l-store-copy val#0 1                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,slot_contents%0#0,val#0 (copy)
        itob                                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,concat%0#0
        f-store slot%0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0
        // array/uint64.py:143
        // for val in urange(5):
        l-load val#0 0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0,1
        +                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | val#0
        f-store val#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@1                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_after_for@4:                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%1#0
        // array/uint64.py:145
        // assert arr.length == 5, "expected array of length 5"
        len                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%0#0
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%0#0,8
        /                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%0#0
        l-store-copy array_len%0#0 0                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%0#0,array_len%0#0 (copy)
        f-store array_len%0#0                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%0#0
        l-load array_len%0#0 0                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%0#0
        int 5                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%0#0,5
        ==                                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | tmp%1#0
        assert // expected array of length 5                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:148
        // last = UInt64(0)
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | 0
        f-store last#0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | 0
        f-store item_index_internal%0#0                                                                                  (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@5                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_header@5:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:149
        // for value in arr:
        f-load item_index_internal%0#0                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0
        f-load array_len%0#0                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,array_len%0#0
        <                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | continue_looping%1#0
        bz test_iteration_after_for@8 ; b test_iteration_for_body@6                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_body@6:                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%3#0
        // array/uint64.py:149
        // for value in arr:
        f-load item_index_internal%0#0                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%3#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,slot_contents%3#0,item_index_internal%0#0 (copy)
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,slot_contents%3#0,item_index_internal%0#0 (copy),8
        *                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,slot_contents%3#0,aggregate%bytes_offset%0#1
        l-load slot_contents%3#0 1                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,aggregate%bytes_offset%0#1,slot_contents%3#0
        l-load aggregate%bytes_offset%0#1 1                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,slot_contents%3#0,aggregate%bytes_offset%0#1
        extract_uint64                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,value#0
        // array/uint64.py:150
        // assert value >= last, "array is not sorted"
        l-load-copy value#0 0                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,value#0,value#0 (copy)
        f-load last#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,value#0,value#0 (copy),last#0
        >=                                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,value#0,tmp%2#0
        assert // array is not sorted                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%0#0,value#0
        l-load item_index_internal%0#0 1                                                                                 (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,item_index_internal%0#0
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,item_index_internal%0#0,1
        +                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,item_index_internal%0#0
        f-store item_index_internal%0#0                                                                                  (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0
        l-load value#0 0                                                                                                 (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0
        f-store last#0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@5                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_after_for@8:                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%4#0
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        len                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%2#0
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%2#0,8
        /                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%2#0
        f-store array_len%2#0                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%1#0
        f-store idx#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@9                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_header@9:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        f-load idx#0                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0
        f-load array_len%2#0                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,array_len%2#0
        <                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | continue_looping%2#0
        bz test_iteration_after_for@12 ; b test_iteration_for_body@10                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_body@10:                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%5#0
        // array/uint64.py:154
        // for idx, value in uenumerate(arr):
        f-load idx#0                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%5#0,idx#0
        l-store-copy idx#0 1                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,slot_contents%5#0,idx#0 (copy)
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,slot_contents%5#0,idx#0 (copy),8
        *                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,slot_contents%5#0,aggregate%bytes_offset%1#1
        l-load slot_contents%5#0 1                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,aggregate%bytes_offset%1#1,slot_contents%5#0
        l-load aggregate%bytes_offset%1#1 1                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,slot_contents%5#0,aggregate%bytes_offset%1#1
        extract_uint64                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,value#0
        // array/uint64.py:155
        // assert value == idx, "incorrect array value"
        l-load-copy idx#0 1                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,value#0,idx#0 (copy)
        ==                                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,tmp%3#0
        assert // incorrect array value                                                                                  (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0
        l-load idx#0 0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | idx#0,1
        +                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | item_index_internal%1#0
        f-store idx#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@9                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_after_for@12:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%6#0
        // array/uint64.py:158
        // for value in reversed(arr):
        len                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%3#0
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | bytes_len%3#0,8
        /                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | array_len%3#0
        f-store reverse_index_internal%2#1                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@13                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_header@13:                                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:158
        // for value in reversed(arr):
        f-load reverse_index_internal%2#1                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1
        bz test_iteration_after_for@16 ; b test_iteration_for_body@14                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_body@14:                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load reverse_index_internal%2#1                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1,1
        -                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1
        l-store-copy reverse_index_internal%2#1 0                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1,reverse_index_internal%2#1 (copy)
        f-store reverse_index_internal%2#1                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1
        f-load slot%0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | reverse_index_internal%2#1,slot_contents%7#0
        // array/uint64.py:158
        // for value in reversed(arr):
        l-store slot_contents%7#0 1                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%7#0,reverse_index_internal%2#1
        l-load reverse_index_internal%2#1 0                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%7#0,reverse_index_internal%2#1
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%7#0,reverse_index_internal%2#1,8
        *                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%7#0,aggregate%bytes_offset%2#1
        l-load slot_contents%7#0 1                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | aggregate%bytes_offset%2#1,slot_contents%7#0
        l-load aggregate%bytes_offset%2#1 1                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%7#0,aggregate%bytes_offset%2#1
        extract_uint64                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0
        // array/uint64.py:159
        // assert value <= last, "array is not sorted"
        l-load-copy value#0 0                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,value#0 (copy)
        f-load last#0                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,value#0 (copy),last#0
        <=                                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0,tmp%4#0
        assert // array is not sorted                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0
        l-load value#0 0                                                                                                 (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | value#0
        f-store last#0                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@13                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_after_for@16:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:162
        // arc4_arr = arc4.DynamicArray[arc4.UInt64]()
        byte 0x0000                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | 0x0000
        f-store arc4_arr#0                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:142
        // arr = ReferenceArray[UInt64]()
        byte 0x                                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | 0x
        f-store slot%1                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:164
        // for i in urange(5):
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | 0
        f-store i#0                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@17                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_header@17:                                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:164
        // for i in urange(5):
        f-load i#0                                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0
        int 5                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,5
        <                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | continue_looping%4#0
        bz test_iteration_after_for@20 ; b test_iteration_for_body@18                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_for_body@18:                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        // array/uint64.py:165
        // arc4_arr.append(arc4.UInt64(i))
        f-load i#0                                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0
        l-store-copy i#0 0                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,i#0 (copy)
        itob                                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1
        f-load arc4_arr#0                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,arc4_arr#0
        l-store-copy arc4_arr#0 1                                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,arc4_arr#0,aggregate%val_as_bytes%1#1,arc4_arr#0 (copy)
        l-load-copy aggregate%val_as_bytes%1#1 1                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,arc4_arr#0,aggregate%val_as_bytes%1#1,arc4_arr#0 (copy),aggregate%val_as_bytes%1#1 (copy)
        concat // on error: max array length exceeded                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,arc4_arr#0,aggregate%val_as_bytes%1#1,concat%1#0
        l-load arc4_arr#0 2                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,arc4_arr#0
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,arc4_arr#0,0
        extract_uint16                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,extract_uint16%0#0
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,extract_uint16%0#0,1
        +                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,add%0#0
        itob                                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,as_bytes%0#0
        extract 6 2                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,as_u16_bytes%0#0
        l-load concat%1#0 1                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,as_u16_bytes%0#0,concat%1#0
        l-load as_u16_bytes%0#0 1                                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,concat%1#0,as_u16_bytes%0#0
        replace2 0                                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,arc4_arr#0
        f-store arc4_arr#0                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1
        f-load slot%1                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,aggregate%val_as_bytes%1#1,slot_contents%8#0
        // array/uint64.py:166
        // native_arr.append(arc4.UInt64(i))
        l-load aggregate%val_as_bytes%1#1 1                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,slot_contents%8#0,aggregate%val_as_bytes%1#1
        concat // on error: max array length exceeded                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,concat%2#0
        f-store slot%1                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0
        // array/uint64.py:164
        // for i in urange(5):
        l-load i#0 0                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0
        int 1                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0,1
        +                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | i#0
        f-store i#0                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        b test_iteration_for_header@17                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |

    test_iteration_after_for@20:                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        f-load slot%1                                                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%9#0
        // array/uint64.py:167
        // combined_arr = arc4_arr + native_arr
        f-load arc4_arr#0                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | slot_contents%9#0,arc4_arr#0
        l-load slot_contents%9#0 1                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | arc4_arr#0,slot_contents%9#0
        concat // on error: max array length exceeded                                                                    (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0
        l-load-copy concat%3#0 0                                                                                         (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,concat%3#0 (copy)
        extract 2 0                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,extract_to_end%0#0
        len                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,len%0#0
        int 8                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,len%0#0,8
        /                                                                                                                (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,div_floor%0#0
        itob                                                                                                             (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,as_bytes%1#0
        extract 6 2                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,as_u16_bytes%1#0
        l-load concat%3#0 1                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | as_u16_bytes%1#0,concat%3#0
        l-load as_u16_bytes%1#0 1                                                                                        (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | concat%3#0,as_u16_bytes%1#0
        replace2 0                                                                                                       (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        // array/uint64.py:168
        // assert combined_arr.length == 10
        l-load-copy combined_arr#0 0                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,combined_arr#0 (copy)
        int 0                                                                                                            (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,combined_arr#0 (copy),0
        extract_uint16                                                                                                   (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,array_length%0#0
        int 10                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,array_length%0#0,10
        ==                                                                                                               (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,tmp%9#0
        assert                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        // array/uint64.py:169
        // assert combined_arr[0] == 0
        l-load-copy combined_arr#0 0                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,combined_arr#0 (copy)
        extract 2 8                                                                                                      (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%3#1
        byte 0x0000000000000000                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%3#1,0x0000000000000000
        b==                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,tmp%10#0
        assert                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        // array/uint64.py:170
        // assert combined_arr[4] == 4
        l-load-copy combined_arr#0 0                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,combined_arr#0 (copy)
        extract 34 8                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%4#1
        byte 0x0000000000000004                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%4#1,0x0000000000000004
        b==                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,tmp%11#0
        assert                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        // array/uint64.py:171
        // assert combined_arr[5] == 0
        l-load-copy combined_arr#0 0                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,combined_arr#0 (copy)
        extract 42 8                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%5#1
        byte 0x0000000000000000                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,aggregate%encoded_element%5#1,0x0000000000000000
        b==                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0,tmp%12#0
        assert                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        // array/uint64.py:172
        // assert combined_arr[9] == 4
        l-load combined_arr#0 0                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | combined_arr#0
        extract 74 8                                                                                                     (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | aggregate%encoded_element%6#1
        byte 0x0000000000000004                                                                                          (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | aggregate%encoded_element%6#1,0x0000000000000004
        b==                                                                                                              (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 | tmp%13#0
        assert                                                                                                           (ùïó) arc4_arr#0,slot%1,array_len%0#0,array_len%2#0,i#0,idx#0,item_index_internal%0#0,last#0,reverse_index_internal%2#1,slot%0,val#0 |
        retsub


// test_cases.array.uint64.Contract.test_quicksort() -> void:
subroutine test_quicksort:
    declare uint64 array_len%2#0, item_index_internal%1#0, last#0
    test_quicksort_block@0:                                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0 |
        // array/uint64.py:177
        // rnd = ReferenceArray[UInt64]()
        callsub _puya_lib.mem.new_slot                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0 | rnd#0
        l-store-copy rnd#0 0                                                                                             (ùïó) array_len%2#0,item_index_internal%1#0,last#0 | rnd#0,rnd#0 (copy)
        f-store rnd#0                                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0 | rnd#0
        l-load rnd#0 0                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0 | rnd#0
        byte 0x                                                                                                          (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0 | rnd#0,0x
        stores                                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0 |
        // array/uint64.py:178
        // for b in Txn.sender.bytes:
        txn Sender                                                                                                       (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0 | tmp%0#0
        f-store tmp%0#0                                                                                                  (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0 |
        int 0                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0 | 0
        f-store item_index_internal%0#0                                                                                  (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        b test_quicksort_for_header@1                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_for_header@1:                                                                                         (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        // array/uint64.py:178
        // for b in Txn.sender.bytes:
        f-load item_index_internal%0#0                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0
        int 32                                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,32
        <                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | continue_looping%0#0
        bz test_quicksort_after_for@4 ; b test_quicksort_for_body@2                                                      (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_for_body@2:                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        // array/uint64.py:179
        // rnd.append(op.btoi(b))
        f-load tmp%0#0                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | tmp%0#0
        f-load item_index_internal%0#0                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | tmp%0#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,tmp%0#0,item_index_internal%0#0 (copy)
        getbyte                                                                                                          (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,tmp%1#0
        f-load rnd#0                                                                                                     (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,tmp%1#0,rnd#0
        l-store-copy rnd#0 1                                                                                             (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,tmp%1#0,rnd#0 (copy)
        loads                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,tmp%1#0,slot_contents%0#0
        l-load tmp%1#0 1                                                                                                 (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,slot_contents%0#0,tmp%1#0
        itob                                                                                                             (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        l-load slot_contents%0#0 1                                                                                       (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,aggregate%val_as_bytes%0#1,slot_contents%0#0
        l-load aggregate%val_as_bytes%0#1 1                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,slot_contents%0#0,aggregate%val_as_bytes%0#1
        concat // on error: max array length exceeded                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,concat%0#0
        l-load rnd#0 1                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,concat%0#0,rnd#0
        l-load concat%0#0 1                                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,rnd#0,concat%0#0
        stores                                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0
        l-load item_index_internal%0#0 0                                                                                 (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0
        int 1                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0,1
        +                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%0#0
        f-store item_index_internal%0#0                                                                                  (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        b test_quicksort_for_header@1                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_after_for@4:                                                                                          (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        // array/uint64.py:180
        // assert rnd.length == 32, "expected array of length 32"
        f-load rnd#0                                                                                                     (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0
        l-store-copy rnd#0 0                                                                                             (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,rnd#0 (copy)
        loads                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,slot_contents%1#0
        len                                                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,bytes_len%0#0
        int 8                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,bytes_len%0#0,8
        /                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0
        l-load-copy array_len%0#0 0                                                                                      (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0,array_len%0#0 (copy)
        int 32                                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0,array_len%0#0 (copy),32
        ==                                                                                                               (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0,tmp%3#0
        assert // expected array of length 32                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0
        // array/uint64.py:183
        // quicksort_window(rnd, UInt64(0), rnd.length - 1)
        l-load array_len%0#0 0                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0
        int 1                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,array_len%0#0,1
        -                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,tmp%4#0
        l-load-copy rnd#0 1                                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,tmp%4#0,rnd#0 (copy)
        int 0                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,tmp%4#0,rnd#0 (copy),0
        l-load tmp%4#0 2                                                                                                 (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,rnd#0 (copy),0,tmp%4#0
        callsub quicksort_window                                                                                         (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0
        // array/uint64.py:186
        // last = UInt64(0)
        int 0                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0,0
        f-store last#0                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0
        // array/uint64.py:187
        // for value in rnd:
        l-load rnd#0 0                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0
        loads                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | slot_contents%3#0
        len                                                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | bytes_len%2#0
        int 8                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | bytes_len%2#0,8
        /                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | array_len%2#0
        f-store array_len%2#0                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        int 0                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | 0
        f-store item_index_internal%1#0                                                                                  (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        b test_quicksort_for_header@5                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_for_header@5:                                                                                         (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        // array/uint64.py:187
        // for value in rnd:
        f-load item_index_internal%1#0                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0
        f-load array_len%2#0                                                                                             (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,array_len%2#0
        <                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | continue_looping%1#0
        bz test_quicksort_after_for@8 ; b test_quicksort_for_body@6                                                      (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_for_body@6:                                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        // array/uint64.py:187
        // for value in rnd:
        f-load rnd#0                                                                                                     (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | rnd#0
        loads                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | slot_contents%4#0
        f-load item_index_internal%1#0                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | slot_contents%4#0,item_index_internal%1#0
        l-store-copy item_index_internal%1#0 1                                                                           (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,slot_contents%4#0,item_index_internal%1#0 (copy)
        int 8                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,slot_contents%4#0,item_index_internal%1#0 (copy),8
        *                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,slot_contents%4#0,aggregate%bytes_offset%0#1
        l-load slot_contents%4#0 1                                                                                       (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,aggregate%bytes_offset%0#1,slot_contents%4#0
        l-load aggregate%bytes_offset%0#1 1                                                                              (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,slot_contents%4#0,aggregate%bytes_offset%0#1
        extract_uint64                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,value#0
        // array/uint64.py:188
        // assert value >= last, "array is not sorted"
        l-load-copy value#0 0                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,value#0,value#0 (copy)
        f-load last#0                                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,value#0,value#0 (copy),last#0
        >=                                                                                                               (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,value#0,tmp%5#0
        assert // array is not sorted                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | item_index_internal%1#0,value#0
        l-load item_index_internal%1#0 1                                                                                 (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | value#0,item_index_internal%1#0
        int 1                                                                                                            (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | value#0,item_index_internal%1#0,1
        +                                                                                                                (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | value#0,item_index_internal%1#0
        f-store item_index_internal%1#0                                                                                  (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | value#0
        l-load value#0 0                                                                                                 (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 | value#0
        f-store last#0                                                                                                   (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        b test_quicksort_for_header@5                                                                                    (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |

    test_quicksort_after_for@8:                                                                                          (ùïó) array_len%2#0,item_index_internal%1#0,last#0,rnd#0,tmp%0#0,item_index_internal%0#0 |
        retsub


// test_cases.array.uint64.Contract.test_unobserved_write() -> void:
subroutine test_unobserved_write:
    test_unobserved_write_block@0:
        // array/uint64.py:193
        // arr = create_array()
        callsub create_array                                                                                             arr#0
        // array/uint64.py:194
        // last = arr.length - 1
        l-load-copy arr#0 0                                                                                              arr#0,arr#0 (copy)
        loads                                                                                                            arr#0,slot_contents%0#0
        l-load-copy slot_contents%0#0 0                                                                                  arr#0,slot_contents%0#0,slot_contents%0#0 (copy)
        len                                                                                                              arr#0,slot_contents%0#0,bytes_len%0#0
        int 8                                                                                                            arr#0,slot_contents%0#0,bytes_len%0#0,8
        /                                                                                                                arr#0,slot_contents%0#0,array_len%0#0
        int 1                                                                                                            arr#0,slot_contents%0#0,array_len%0#0,1
        -                                                                                                                arr#0,slot_contents%0#0,last#0
        // array/uint64.py:195
        // arr[last] = UInt64(0)  # write
        int 0                                                                                                            arr#0,slot_contents%0#0,last#0,0
        itob                                                                                                             arr#0,slot_contents%0#0,last#0,aggregate%val_as_bytes%0#1
        l-load last#0 1                                                                                                  arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1,last#0
        int 8                                                                                                            arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1,last#0,8
        *                                                                                                                arr#0,slot_contents%0#0,aggregate%val_as_bytes%0#1,aggregate%write_offset%0#1
        l-load slot_contents%0#0 2                                                                                       arr#0,aggregate%val_as_bytes%0#1,aggregate%write_offset%0#1,slot_contents%0#0
        l-load-copy aggregate%write_offset%0#1 1                                                                         arr#0,aggregate%val_as_bytes%0#1,aggregate%write_offset%0#1,slot_contents%0#0,aggregate%write_offset%0#1 (copy)
        l-load aggregate%val_as_bytes%0#1 3                                                                              arr#0,aggregate%write_offset%0#1,slot_contents%0#0,aggregate%write_offset%0#1 (copy),aggregate%val_as_bytes%0#1
        replace3                                                                                                         arr#0,aggregate%write_offset%0#1,aggregate%updated_array%0#1
        l-load-copy arr#0 2                                                                                              arr#0,aggregate%write_offset%0#1,aggregate%updated_array%0#1,arr#0 (copy)
        l-load aggregate%updated_array%0#1 1                                                                             arr#0,aggregate%write_offset%0#1,arr#0 (copy),aggregate%updated_array%0#1
        stores                                                                                                           arr#0,aggregate%write_offset%0#1
        // array/uint64.py:196
        // assert_last_is_zero(arr)
        l-load-copy arr#0 1                                                                                              arr#0,aggregate%write_offset%0#1,arr#0 (copy)
        callsub assert_last_is_zero                                                                                      arr#0,aggregate%write_offset%0#1
        // array/uint64.py:197
        // arr[last] = UInt64(1)  # write
        int 1                                                                                                            arr#0,aggregate%write_offset%0#1,1
        itob                                                                                                             arr#0,aggregate%write_offset%0#1,aggregate%val_as_bytes%1#1
        l-load-copy arr#0 2                                                                                              arr#0,aggregate%write_offset%0#1,aggregate%val_as_bytes%1#1,arr#0 (copy)
        loads                                                                                                            arr#0,aggregate%write_offset%0#1,aggregate%val_as_bytes%1#1,slot_contents%2#0
        l-load-copy aggregate%write_offset%0#1 2                                                                         arr#0,aggregate%write_offset%0#1,aggregate%val_as_bytes%1#1,slot_contents%2#0,aggregate%write_offset%0#1 (copy)
        l-load aggregate%val_as_bytes%1#1 2                                                                              arr#0,aggregate%write_offset%0#1,slot_contents%2#0,aggregate%write_offset%0#1 (copy),aggregate%val_as_bytes%1#1
        replace3                                                                                                         arr#0,aggregate%write_offset%0#1,aggregate%updated_array%1#1
        l-load arr#0 2                                                                                                   aggregate%write_offset%0#1,aggregate%updated_array%1#1,arr#0
        l-load-copy aggregate%updated_array%1#1 1                                                                        aggregate%write_offset%0#1,aggregate%updated_array%1#1,arr#0,aggregate%updated_array%1#1 (copy)
        stores                                                                                                           aggregate%write_offset%0#1,aggregate%updated_array%1#1
        // array/uint64.py:198
        // assert arr[last] == 1
        l-load aggregate%updated_array%1#1 0                                                                             aggregate%write_offset%0#1,aggregate%updated_array%1#1
        l-load aggregate%write_offset%0#1 1                                                                              aggregate%updated_array%1#1,aggregate%write_offset%0#1
        extract_uint64                                                                                                   values%0#0
        int 1                                                                                                            values%0#0,1
        ==                                                                                                               tmp%2#0
        assert
        retsub


// _puya_lib.mem.new_slot() -> uint64:
subroutine _puya_lib.mem.new_slot:
    _puya_lib.mem.new_slot@entry:
        load 0                                                                                                           slot_allocations
        bitlen                                                                                                           free_slot#0
        load 0                                                                                                           free_slot#0,slot_allocations
        int 256                                                                                                          free_slot#0,slot_allocations,256
        l-load-copy free_slot#0 2                                                                                        free_slot#0,slot_allocations,256,free_slot#0 (copy)
        -                                                                                                                free_slot#0,slot_allocations,free_slot_idx
        int 0                                                                                                            free_slot#0,slot_allocations,free_slot_idx,0
        setbit // on error: no available slots                                                                           free_slot#0,new_slot_allocations
        store 0                                                                                                          free_slot#0
        l-load free_slot#0 0                                                                                             free_slot#0
        retsub                                                                                                           free_slot#0


