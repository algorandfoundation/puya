// Op                                                                                 Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        // array/uint64.py:4
        // class Contract(arc4.ARC4Contract):
        txn NumAppArgs                                                                tmp%0#1
        l-load tmp%0#1 0                                                              tmp%0#1
        bz main_bare_routing@15 ; b main_abi_routing@2

    main_abi_routing@2:
        // array/uint64.py:4
        // class Contract(arc4.ARC4Contract):
        txna ApplicationArgs 0                                                        tmp%2#0
        method test_array()void                                                       tmp%2#0,Method(test_array()void)
        method test_array_extend()void                                                tmp%2#0,Method(test_array()void),Method(test_array_extend()void)
        method test_array_multiple_append()void                                       tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void)
        method overhead()void                                                         tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void)
        method test_array_too_long()void                                              tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void)
        method test_array_copy_and_extend()void                                       tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void)
        method test_array_evaluation_order()void                                      tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void)
        method test_allocations(uint64)void                                           tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_allocations(uint64)void)
        method test_iteration()void                                                   tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_allocations(uint64)void),Method(test_iteration()void)
        method test_quicksort()void                                                   tmp%2#0,Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void)
        l-load tmp%2#0 10                                                             Method(test_array()void),Method(test_array_extend()void),Method(test_array_multiple_append()void),Method(overhead()void),Method(test_array_too_long()void),Method(test_array_copy_and_extend()void),Method(test_array_evaluation_order()void),Method(test_allocations(uint64)void),Method(test_iteration()void),Method(test_quicksort()void),tmp%2#0
        match main_test_array_route@3 main_test_array_extend_route@4 main_test_array_multiple_append_route@5 main_overhead_route@6 main_test_array_too_long_route@7 main_test_array_copy_and_extend_route@8 main_test_array_evaluation_order_route@9 main_test_allocations_route@10 main_test_iteration_route@11 main_test_quicksort_route@12 ; b main_after_if_else@19 

    main_test_array_route@3:
        // array/uint64.py:5
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%3#0
        l-load tmp%3#0 0                                                              tmp%3#0
        !                                                                             tmp%4#0
        l-load tmp%4#0 0                                                              tmp%4#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%5#0
        l-load tmp%5#0 0                                                              tmp%5#0
        assert // can only call when not creating
        callsub test_array
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_array_extend_route@4:
        // array/uint64.py:41
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%7#0
        l-load tmp%7#0 0                                                              tmp%7#0
        !                                                                             tmp%8#0
        l-load tmp%8#0 0                                                              tmp%8#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%9#0
        l-load tmp%9#0 0                                                              tmp%9#0
        assert // can only call when not creating
        callsub test_array_extend
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_array_multiple_append_route@5:
        // array/uint64.py:53
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%11#0
        l-load tmp%11#0 0                                                             tmp%11#0
        !                                                                             tmp%12#0
        l-load tmp%12#0 0                                                             tmp%12#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%13#0
        l-load tmp%13#0 0                                                             tmp%13#0
        assert // can only call when not creating
        callsub test_array_multiple_append
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_overhead_route@6:
        // array/uint64.py:62
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%15#0
        l-load tmp%15#0 0                                                             tmp%15#0
        !                                                                             tmp%16#0
        l-load tmp%16#0 0                                                             tmp%16#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%17#0
        l-load tmp%17#0 0                                                             tmp%17#0
        assert // can only call when not creating
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_array_too_long_route@7:
        // array/uint64.py:66
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%19#0
        l-load tmp%19#0 0                                                             tmp%19#0
        !                                                                             tmp%20#0
        l-load tmp%20#0 0                                                             tmp%20#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%21#0
        l-load tmp%21#0 0                                                             tmp%21#0
        assert // can only call when not creating
        callsub test_array_too_long
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_array_copy_and_extend_route@8:
        // array/uint64.py:75
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%23#0
        l-load tmp%23#0 0                                                             tmp%23#0
        !                                                                             tmp%24#0
        l-load tmp%24#0 0                                                             tmp%24#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%25#0
        l-load tmp%25#0 0                                                             tmp%25#0
        assert // can only call when not creating
        callsub test_array_copy_and_extend
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_array_evaluation_order_route@9:
        // array/uint64.py:97
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%27#0
        l-load tmp%27#0 0                                                             tmp%27#0
        !                                                                             tmp%28#0
        l-load tmp%28#0 0                                                             tmp%28#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%29#0
        l-load tmp%29#0 0                                                             tmp%29#0
        assert // can only call when not creating
        callsub test_array_evaluation_order
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_allocations_route@10:
        // array/uint64.py:116
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%31#0
        l-load tmp%31#0 0                                                             tmp%31#0
        !                                                                             tmp%32#0
        l-load tmp%32#0 0                                                             tmp%32#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%33#0
        l-load tmp%33#0 0                                                             tmp%33#0
        assert // can only call when not creating
        // array/uint64.py:4
        // class Contract(arc4.ARC4Contract):
        txna ApplicationArgs 1                                                        reinterpret_bytes[8]%0#0
        l-load reinterpret_bytes[8]%0#0 0                                             reinterpret_bytes[8]%0#0
        btoi                                                                          tmp%35#0
        // array/uint64.py:116
        // @arc4.abimethod()
        l-load tmp%35#0 0                                                             tmp%35#0
        callsub test_allocations
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_iteration_route@11:
        // array/uint64.py:122
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%36#0
        l-load tmp%36#0 0                                                             tmp%36#0
        !                                                                             tmp%37#0
        l-load tmp%37#0 0                                                             tmp%37#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%38#0
        l-load tmp%38#0 0                                                             tmp%38#0
        assert // can only call when not creating
        callsub test_iteration
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_test_quicksort_route@12:
        // array/uint64.py:156
        // @arc4.abimethod()
        txn OnCompletion                                                              tmp%40#0
        l-load tmp%40#0 0                                                             tmp%40#0
        !                                                                             tmp%41#0
        l-load tmp%41#0 0                                                             tmp%41#0
        assert // OnCompletion is not NoOp
        txn ApplicationID                                                             tmp%42#0
        l-load tmp%42#0 0                                                             tmp%42#0
        assert // can only call when not creating
        callsub test_quicksort
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_bare_routing@15:
        // array/uint64.py:4
        // class Contract(arc4.ARC4Contract):
        txn OnCompletion                                                              tmp%44#0
        l-load tmp%44#0 0                                                             tmp%44#0
        bz main___algopy_default_create@16 ; b main_after_if_else@19

    main___algopy_default_create@16:
        txn ApplicationID                                                             tmp%45#0
        l-load tmp%45#0 0                                                             tmp%45#0
        !                                                                             tmp%46#0
        l-load tmp%46#0 0                                                             tmp%46#0
        assert // can only call when creating
        int 1                                                                         1
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_after_if_else@19:
        // array/uint64.py:4
        // class Contract(arc4.ARC4Contract):
        int 0                                                                         0
        l-store test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0           test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        l-load test_cases.array.uint64.Contract.__puya_arc4_router__%0#0 0            test_cases.array.uint64.Contract.__puya_arc4_router__%0#0
        v-store tmp%0#0
        b main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20

    main_after_inlined_test_cases.array.uint64.Contract.__puya_arc4_router__@20:
        v-load tmp%0#0                                                                tmp%0#0
        return


// test_cases.array.uint64.quicksort_window(arr: uint64, window_left: uint64, window_right: uint64) -> void:
subroutine quicksort_window:
    quicksort_window_block@0:                                                         (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:178
        // pivot = arr[(window_left + window_right) // 2]
        p-load window_left#0                                                          (𝕡) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        p-load window_right#0                                                         (𝕡) arr#0,window_left#0,window_right#0 | window_left#0 (copy),window_right#0 (copy)
        +                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%0#0
        l-load tmp%0#0 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | tmp%0#0
        int 2                                                                         (𝕡) arr#0,window_left#0,window_right#0 | tmp%0#0,2
        /                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%1#0
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | tmp%1#0,arr#0 (copy)
        loads                                                                         (𝕡) arr#0,window_left#0,window_right#0 | tmp%1#0,slot_contents%0#0
        l-load tmp%1#0 1                                                              (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%0#0,tmp%1#0
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%0#0,tmp%1#0,8
        *                                                                             (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%0#0,array%bytes_index%0#1
        l-load slot_contents%0#0 1                                                    (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%0#1,slot_contents%0#0
        l-load array%bytes_index%0#1 1                                                (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%0#0,array%bytes_index%0#1
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%0#0,array%bytes_index%0#1,8
        extract3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%0#1
        l-load array%value%0#1 0                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%0#1
        int 0                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%value%0#1,0
        extract_uint64                                                                (𝕡) arr#0,window_left#0,window_right#0 | pivot#0
        v-store pivot#0                                                               (𝕡) arr#0,window_left#0,window_right#0 |
        p-load window_right#0                                                         (𝕡) arr#0,window_left#0,window_right#0 | window_right#0 (copy)
        v-store right#1                                                               (𝕡) arr#0,window_left#0,window_right#0 |
        p-load window_left#0                                                          (𝕡) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        v-store left#1                                                                (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@3                                                (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_top@3:                                                     (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:183
        // while arr[left] < pivot:
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,left#1
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,left#1,8
        *                                                                             (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,array%bytes_index%1#1
        l-store-copy array%bytes_index%1#1 0                                          (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,array%bytes_index%1#1,array%bytes_index%1#1 (copy)
        v-store array%bytes_index%1#1                                                 (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,array%bytes_index%1#1
        l-load slot_contents%1#0 1                                                    (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%1#1,slot_contents%1#0
        l-load array%bytes_index%1#1 1                                                (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,array%bytes_index%1#1
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%1#0,array%bytes_index%1#1,8
        extract3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%1#1
        l-load array%value%1#1 0                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%1#1
        int 0                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%value%1#1,0
        extract_uint64                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%3#1
        l-load array%sub_item%3#1 0                                                   (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%3#1
        v-load pivot#0                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%3#1,pivot#0
        <                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%3#0
        l-load tmp%3#0 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | tmp%3#0
        bz quicksort_window_while_top@6 ; b quicksort_window_while_body@4             (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_body@4:                                                    (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:184
        // left += 1
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                             (𝕡) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                                (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@3                                                (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_top@6:                                                     (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:186
        // while pivot < arr[right]:
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,right#1
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,right#1,8
        *                                                                             (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,array%bytes_index%2#1
        l-store-copy array%bytes_index%2#1 0                                          (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,array%bytes_index%2#1,array%bytes_index%2#1 (copy)
        v-store array%bytes_index%2#1                                                 (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,array%bytes_index%2#1
        l-load slot_contents%2#0 1                                                    (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%2#0
        l-load array%bytes_index%2#1 1                                                (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,array%bytes_index%2#1
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%2#0,array%bytes_index%2#1,8
        extract3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%2#1
        l-load array%value%2#1 0                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%value%2#1
        int 0                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%value%2#1,0
        extract_uint64                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%5#1
        v-load pivot#0                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%5#1,pivot#0
        l-load array%sub_item%5#1 1                                                   (𝕡) arr#0,window_left#0,window_right#0 | pivot#0,array%sub_item%5#1
        <                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%5#0
        l-load tmp%5#0 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | tmp%5#0
        bz quicksort_window_after_while@10 ; b quicksort_window_while_body@7          (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_while_body@7:                                                    (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:188
        // if not right:
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@9       (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@9:                                                 (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:190
        // right -= 1
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                             (𝕡) arr#0,window_left#0,window_right#0 | right#1
        v-store right#1                                                               (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_while_top@6                                                (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_while@10:                                                  (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:193
        // if left < right:
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | left#1,right#1
        <                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%7#0
        l-load tmp%7#0 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | tmp%7#0
        bz quicksort_window_after_if_else@16 ; b quicksort_window_if_body@11          (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@11:                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:194
        // arr[left], arr[right] = arr[right], arr[left]
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        loads                                                                         (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%3#0
        l-load-copy slot_contents%3#0 0                                               (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%3#0,slot_contents%3#0 (copy)
        v-load array%bytes_index%2#1                                                  (𝕡) arr#0,window_left#0,window_right#0 | slot_contents%3#0,slot_contents%3#0 (copy),array%bytes_index%2#1
        l-store-copy array%bytes_index%2#1 2                                          (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,slot_contents%3#0 (copy),array%bytes_index%2#1 (copy)
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,slot_contents%3#0 (copy),array%bytes_index%2#1 (copy),8
        extract3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%value%3#1
        l-load array%value%3#1 0                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%value%3#1
        int 0                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%value%3#1,0
        extract_uint64                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%sub_item%7#1
        l-load-copy slot_contents%3#0 1                                               (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%sub_item%7#1,slot_contents%3#0 (copy)
        v-load array%bytes_index%1#1                                                  (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,slot_contents%3#0,array%sub_item%7#1,slot_contents%3#0 (copy),array%bytes_index%1#1
        l-store-copy array%bytes_index%1#1 3                                          (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,slot_contents%3#0 (copy),array%bytes_index%1#1 (copy)
        int 8                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,slot_contents%3#0 (copy),array%bytes_index%1#1 (copy),8
        extract3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,array%value%4#1
        l-load array%value%4#1 0                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,array%value%4#1
        int 0                                                                         (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,array%value%4#1,0
        extract_uint64                                                                (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%7#1,array%sub_item%9#1
        l-load array%sub_item%7#1 1                                                   (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%9#1,array%sub_item%7#1
        itob                                                                          (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,slot_contents%3#0,array%sub_item%9#1,array%sub_item%10#1
        l-load slot_contents%3#0 2                                                    (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%bytes_index%1#1,array%sub_item%9#1,array%sub_item%10#1,slot_contents%3#0
        l-load array%bytes_index%1#1 3                                                (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%sub_item%9#1,array%sub_item%10#1,slot_contents%3#0,array%bytes_index%1#1
        l-load array%sub_item%10#1 2                                                  (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%sub_item%9#1,slot_contents%3#0,array%bytes_index%1#1,array%sub_item%10#1
        replace3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%sub_item%9#1,array%updated_array%0#1
        l-load array%sub_item%9#1 1                                                   (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%updated_array%0#1,array%sub_item%9#1
        itob                                                                          (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%updated_array%0#1,array%sub_item%11#1
        l-load array%updated_array%0#1 1                                              (𝕡) arr#0,window_left#0,window_right#0 | array%bytes_index%2#1,array%sub_item%11#1,array%updated_array%0#1
        l-load array%bytes_index%2#1 2                                                (𝕡) arr#0,window_left#0,window_right#0 | array%sub_item%11#1,array%updated_array%0#1,array%bytes_index%2#1
        l-load array%sub_item%11#1 2                                                  (𝕡) arr#0,window_left#0,window_right#0 | array%updated_array%0#1,array%bytes_index%2#1,array%sub_item%11#1
        replace3                                                                      (𝕡) arr#0,window_left#0,window_right#0 | array%updated_array%1#1
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | array%updated_array%1#1,arr#0 (copy)
        l-load array%updated_array%1#1 1                                              (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy),array%updated_array%1#1
        stores                                                                        (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:195
        // left += 1
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                             (𝕡) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                                (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:197
        // if not right:
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_while@22 ; b quicksort_window_after_if_else@13      (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@13:                                                (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:199
        // right -= 1
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                             (𝕡) arr#0,window_left#0,window_right#0 | right#1
        l-store-copy right#1 0                                                        (𝕡) arr#0,window_left#0,window_right#0 | right#1,right#1 (copy)
        v-store right#1                                                               (𝕡) arr#0,window_left#0,window_right#0 | right#1
        // array/uint64.py:201
        // if left <= right:
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | right#1,left#1
        l-load right#1 1                                                              (𝕡) arr#0,window_left#0,window_right#0 | left#1,right#1
        <=                                                                            (𝕡) arr#0,window_left#0,window_right#0 | tmp%11#0
        l-load tmp%11#0 0                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%11#0
        bz quicksort_window_after_while@22 ; b quicksort_window_while_top@3           (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@16:                                                (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:207
        // if left == right:
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | left#1,right#1
        ==                                                                            (𝕡) arr#0,window_left#0,window_right#0 | tmp%12#0
        l-load tmp%12#0 0                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%12#0
        bz quicksort_window_after_while@22 ; b quicksort_window_if_body@17            (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@17:                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:208
        // left += 1
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | left#1,1
        +                                                                             (𝕡) arr#0,window_left#0,window_right#0 | left#1
        v-store left#1                                                                (𝕡) arr#0,window_left#0,window_right#0 |
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        l-store-copy right#1 0                                                        (𝕡) arr#0,window_left#0,window_right#0 | right#1,right#1 (copy)
        v-store right#16                                                              (𝕡) arr#0,window_left#0,window_right#0 | right#1
        // array/uint64.py:210
        // if right:
        l-load right#1 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | right#1
        bz quicksort_window_after_if_else@19 ; b quicksort_window_if_body@18          (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@18:                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:211
        // right -= 1
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | right#1
        int 1                                                                         (𝕡) arr#0,window_left#0,window_right#0 | right#1,1
        -                                                                             (𝕡) arr#0,window_left#0,window_right#0 | right#1
        l-load right#1 0                                                              (𝕡) arr#0,window_left#0,window_right#0 | right#1
        v-store right#16                                                              (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_if_else@19                                           (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@19:                                                (𝕡) arr#0,window_left#0,window_right#0 |
        v-load right#16                                                               (𝕡) arr#0,window_left#0,window_right#0 | right#16
        v-store right#1                                                               (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:214
        // break
        b quicksort_window_after_while@22                                             (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_while@22:                                                  (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:219
        // if window_left < right:
        p-load window_left#0                                                          (𝕡) arr#0,window_left#0,window_right#0 | window_left#0 (copy)
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | window_left#0 (copy),right#1
        <                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%14#0
        l-load tmp%14#0 0                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%14#0
        bz quicksort_window_after_if_else@24 ; b quicksort_window_if_body@23          (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@23:                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:220
        // quicksort_window(arr, window_left, right)
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        p-load window_left#0                                                          (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy),window_left#0 (copy)
        v-load right#1                                                                (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy),window_left#0 (copy),right#1
        callsub quicksort_window                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_if_else@24                                           (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@24:                                                (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:222
        // if left < window_right:
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | left#1
        p-load window_right#0                                                         (𝕡) arr#0,window_left#0,window_right#0 | left#1,window_right#0 (copy)
        <                                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%15#0
        l-load tmp%15#0 0                                                             (𝕡) arr#0,window_left#0,window_right#0 | tmp%15#0
        bz quicksort_window_after_if_else@26 ; b quicksort_window_if_body@25          (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_if_body@25:                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        // array/uint64.py:223
        // quicksort_window(arr, left, window_right)
        p-load arr#0                                                                  (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy)
        v-load left#1                                                                 (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy),left#1
        p-load window_right#0                                                         (𝕡) arr#0,window_left#0,window_right#0 | arr#0 (copy),left#1,window_right#0 (copy)
        callsub quicksort_window                                                      (𝕡) arr#0,window_left#0,window_right#0 |
        b quicksort_window_after_if_else@26                                           (𝕡) arr#0,window_left#0,window_right#0 |

    quicksort_window_after_if_else@26:                                                (𝕡) arr#0,window_left#0,window_right#0 |
        retsub


// test_cases.array.uint64.add_x(arr: uint64, x: uint64) -> void:
subroutine add_x:
    add_x_block@0:                                                                    (𝕡) arr#0,x#0 |
        // array/uint64.py:235
        // for i in urange(x):
        int 0                                                                         (𝕡) arr#0,x#0 | 0
        v-store i#0                                                                   (𝕡) arr#0,x#0 |
        b add_x_for_header@1                                                          (𝕡) arr#0,x#0 |

    add_x_for_header@1:                                                               (𝕡) arr#0,x#0 |
        // array/uint64.py:235
        // for i in urange(x):
        v-load i#0                                                                    (𝕡) arr#0,x#0 | i#0
        p-load x#0                                                                    (𝕡) arr#0,x#0 | i#0,x#0 (copy)
        <                                                                             (𝕡) arr#0,x#0 | continue_looping%0#0
        l-load continue_looping%0#0 0                                                 (𝕡) arr#0,x#0 | continue_looping%0#0
        bz add_x_after_for@4 ; b add_x_for_body@2                                     (𝕡) arr#0,x#0 |

    add_x_for_body@2:                                                                 (𝕡) arr#0,x#0 |
        // array/uint64.py:236
        // arr.append(i)
        v-load i#0                                                                    (𝕡) arr#0,x#0 | i#0
        l-store-copy i#0 0                                                            (𝕡) arr#0,x#0 | i#0,i#0 (copy)
        itob                                                                          (𝕡) arr#0,x#0 | i#0,array%sub_item%0#1
        p-load arr#0                                                                  (𝕡) arr#0,x#0 | i#0,array%sub_item%0#1,arr#0 (copy)
        loads                                                                         (𝕡) arr#0,x#0 | i#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    (𝕡) arr#0,x#0 | i#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   (𝕡) arr#0,x#0 | i#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 (𝕡) arr#0,x#0 | i#0,array%array_contents%0#1
        p-load arr#0                                                                  (𝕡) arr#0,x#0 | i#0,array%array_contents%0#1,arr#0 (copy)
        l-load array%array_contents%0#1 1                                             (𝕡) arr#0,x#0 | i#0,arr#0 (copy),array%array_contents%0#1
        stores                                                                        (𝕡) arr#0,x#0 | i#0
        // array/uint64.py:235
        // for i in urange(x):
        l-load i#0 0                                                                  (𝕡) arr#0,x#0 | i#0
        int 1                                                                         (𝕡) arr#0,x#0 | i#0,1
        +                                                                             (𝕡) arr#0,x#0 | i#0
        v-store i#0                                                                   (𝕡) arr#0,x#0 |
        b add_x_for_header@1                                                          (𝕡) arr#0,x#0 |

    add_x_after_for@4:                                                                (𝕡) arr#0,x#0 |
        retsub


// test_cases.array.uint64.append_length_and_return(arr: uint64) -> uint64:
subroutine append_length_and_return:
    append_length_and_return_block@0:                                                 (𝕡) arr#0 |
        // array/uint64.py:249
        // arr.append(arr.length)
        p-load arr#0                                                                  (𝕡) arr#0 | arr#0 (copy)
        loads                                                                         (𝕡) arr#0 | slot_contents%0#0
        l-load-copy slot_contents%0#0 0                                               (𝕡) arr#0 | slot_contents%0#0,slot_contents%0#0 (copy)
        len                                                                           (𝕡) arr#0 | slot_contents%0#0,array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  (𝕡) arr#0 | slot_contents%0#0,array%bytes_len%0#1
        int 8                                                                         (𝕡) arr#0 | slot_contents%0#0,array%bytes_len%0#1,8
        /                                                                             (𝕡) arr#0 | slot_contents%0#0,array%array_len%0#1
        l-load array%array_len%0#1 0                                                  (𝕡) arr#0 | slot_contents%0#0,array%array_len%0#1
        itob                                                                          (𝕡) arr#0 | slot_contents%0#0,array%sub_item%0#1
        l-load slot_contents%0#0 1                                                    (𝕡) arr#0 | array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   (𝕡) arr#0 | slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 (𝕡) arr#0 | array%array_contents%0#1
        p-load arr#0                                                                  (𝕡) arr#0 | array%array_contents%0#1,arr#0 (copy)
        l-load array%array_contents%0#1 1                                             (𝕡) arr#0 | arr#0 (copy),array%array_contents%0#1
        stores                                                                        (𝕡) arr#0 |
        // array/uint64.py:250
        // return arr
        p-load arr#0                                                                  (𝕡) arr#0 | arr#0 (copy)
        retsub                                                                        arr#0 (copy)


// test_cases.array.uint64.Contract.test_array() -> void:
subroutine test_array:
    test_array_block@0:
        // array/uint64.py:7
        // arr = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                arr#0
        l-store-copy arr#0 0                                                          arr#0,arr#0 (copy)
        v-store arr#0                                                                 arr#0
        // array/uint64.py:10
        // arr.append(UInt64(42))
        int 42                                                                        arr#0,42
        itob                                                                          arr#0,array%sub_item%0#1
        l-load-copy arr#0 1                                                           arr#0,array%sub_item%0#1,arr#0 (copy)
        l-load array%sub_item%0#1 1                                                   arr#0,arr#0 (copy),array%sub_item%0#1
        stores                                                                        arr#0
        // array/uint64.py:14
        // add_x(arr, UInt64(5))
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        int 5                                                                         arr#0,arr#0 (copy),5
        callsub add_x                                                                 arr#0
        // array/uint64.py:15
        // assert arr.length == 6
        l-load arr#0 0                                                                arr#0
        loads                                                                         slot_contents%5#0
        l-load-copy slot_contents%5#0 0                                               slot_contents%5#0,slot_contents%5#0 (copy)
        len                                                                           slot_contents%5#0,array%bytes_len%3#1
        l-load array%bytes_len%3#1 0                                                  slot_contents%5#0,array%bytes_len%3#1
        int 8                                                                         slot_contents%5#0,array%bytes_len%3#1,8
        /                                                                             slot_contents%5#0,array%array_len%3#1
        l-load-copy array%array_len%3#1 0                                             slot_contents%5#0,array%array_len%3#1,array%array_len%3#1 (copy)
        int 6                                                                         slot_contents%5#0,array%array_len%3#1,array%array_len%3#1 (copy),6
        ==                                                                            slot_contents%5#0,array%array_len%3#1,tmp%9#0
        l-load tmp%9#0 0                                                              slot_contents%5#0,array%array_len%3#1,tmp%9#0
        assert                                                                        slot_contents%5#0,array%array_len%3#1
        // array/uint64.py:16
        // assert arr[-1] == 4
        l-load array%array_len%3#1 0                                                  slot_contents%5#0,array%array_len%3#1
        int 1                                                                         slot_contents%5#0,array%array_len%3#1,1
        -                                                                             slot_contents%5#0,tmp%11#0
        l-load tmp%11#0 0                                                             slot_contents%5#0,tmp%11#0
        int 8                                                                         slot_contents%5#0,tmp%11#0,8
        *                                                                             slot_contents%5#0,array%bytes_index%1#1
        l-load slot_contents%5#0 1                                                    array%bytes_index%1#1,slot_contents%5#0
        l-load array%bytes_index%1#1 1                                                slot_contents%5#0,array%bytes_index%1#1
        int 8                                                                         slot_contents%5#0,array%bytes_index%1#1,8
        extract3                                                                      array%value%1#1
        l-load array%value%1#1 0                                                      array%value%1#1
        int 0                                                                         array%value%1#1,0
        extract_uint64                                                                array%sub_item%4#1
        l-load array%sub_item%4#1 0                                                   array%sub_item%4#1
        int 4                                                                         array%sub_item%4#1,4
        ==                                                                            tmp%13#0
        l-load tmp%13#0 0                                                             tmp%13#0
        assert
        // array/uint64.py:18
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 4                                                                         4
        v-store expected#0
        // array/uint64.py:241
        // for _i in urange(x):
        int 0                                                                         0
        v-store _i#0
        b test_array_for_header@2

    test_array_for_header@2:
        // array/uint64.py:241
        // for _i in urange(x):
        v-load _i#0                                                                   _i#0
        // array/uint64.py:18
        // pop_x(arr, x=UInt64(3), expected=UInt64(4))
        int 3                                                                         _i#0,3
        // array/uint64.py:241
        // for _i in urange(x):
        <                                                                             continue_looping%0#0
        l-load continue_looping%0#0 0                                                 continue_looping%0#0
        bz test_array_after_for@4 ; b test_array_for_body@3

    test_array_for_body@3:
        // array/uint64.py:242
        // popped = arr.pop()
        v-load arr#0                                                                  arr#0
        l-store-copy arr#0 0                                                          arr#0,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%0#1
        l-load-copy slot_contents%0#1 0                                               arr#0,slot_contents%0#1,slot_contents%0#1 (copy)
        len                                                                           arr#0,slot_contents%0#1,array%array_bytes_length%0#1
        l-load array%array_bytes_length%0#1 0                                         arr#0,slot_contents%0#1,array%array_bytes_length%0#1
        int 8                                                                         arr#0,slot_contents%0#1,array%array_bytes_length%0#1,8
        -                                                                             arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1
        l-load-copy array%array_bytes_new_length%0#1 0                                arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1,array%array_bytes_new_length%0#1 (copy)
        int 8                                                                         arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1,array%array_bytes_new_length%0#1 (copy),8
        /                                                                             arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1,array%array_new_length%0#1
        l-load-copy slot_contents%0#1 2                                               arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1,array%array_new_length%0#1,slot_contents%0#1 (copy)
        int 0                                                                         arr#0,slot_contents%0#1,array%array_bytes_new_length%0#1,array%array_new_length%0#1,slot_contents%0#1 (copy),0
        l-load array%array_bytes_new_length%0#1 3                                     arr#0,slot_contents%0#1,array%array_new_length%0#1,slot_contents%0#1 (copy),0,array%array_bytes_new_length%0#1
        extract3                                                                      arr#0,slot_contents%0#1,array%array_new_length%0#1,array%array_contents%1#1
        l-load array%array_new_length%0#1 1                                           arr#0,slot_contents%0#1,array%array_contents%1#1,array%array_new_length%0#1
        int 8                                                                         arr#0,slot_contents%0#1,array%array_contents%1#1,array%array_new_length%0#1,8
        *                                                                             arr#0,slot_contents%0#1,array%array_contents%1#1,array%bytes_index%2#1
        l-load slot_contents%0#1 2                                                    arr#0,array%array_contents%1#1,array%bytes_index%2#1,slot_contents%0#1
        l-load array%bytes_index%2#1 1                                                arr#0,array%array_contents%1#1,slot_contents%0#1,array%bytes_index%2#1
        int 8                                                                         arr#0,array%array_contents%1#1,slot_contents%0#1,array%bytes_index%2#1,8
        extract3                                                                      arr#0,array%array_contents%1#1,array%value%2#1
        l-load array%value%2#1 0                                                      arr#0,array%array_contents%1#1,array%value%2#1
        int 0                                                                         arr#0,array%array_contents%1#1,array%value%2#1,0
        extract_uint64                                                                arr#0,array%array_contents%1#1,popped#0
        l-load arr#0 2                                                                array%array_contents%1#1,popped#0,arr#0
        l-load array%array_contents%1#1 2                                             popped#0,arr#0,array%array_contents%1#1
        stores                                                                        popped#0
        // array/uint64.py:243
        // assert popped == expected
        l-load popped#0 0                                                             popped#0
        v-load expected#0                                                             popped#0,expected#0
        l-store-copy expected#0 1                                                     expected#0,popped#0,expected#0 (copy)
        ==                                                                            expected#0,tmp%0#1
        l-load tmp%0#1 0                                                              expected#0,tmp%0#1
        assert                                                                        expected#0
        // array/uint64.py:244
        // expected -= 1
        l-load expected#0 0                                                           expected#0
        int 1                                                                         expected#0,1
        -                                                                             expected#0
        v-store expected#0
        // array/uint64.py:241
        // for _i in urange(x):
        v-load _i#0                                                                   _i#0
        int 1                                                                         _i#0,1
        +                                                                             _i#0
        v-store _i#0
        b test_array_for_header@2

    test_array_after_for@4:
        // array/uint64.py:19
        // assert arr.length == 3
        v-load arr#0                                                                  arr#0
        l-store-copy arr#0 0                                                          arr#0,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%8#0
        l-load-copy slot_contents%8#0 0                                               arr#0,slot_contents%8#0,slot_contents%8#0 (copy)
        len                                                                           arr#0,slot_contents%8#0,array%bytes_len%5#1
        l-load array%bytes_len%5#1 0                                                  arr#0,slot_contents%8#0,array%bytes_len%5#1
        int 8                                                                         arr#0,slot_contents%8#0,array%bytes_len%5#1,8
        /                                                                             arr#0,slot_contents%8#0,array%array_len%5#1
        l-load-copy array%array_len%5#1 0                                             arr#0,slot_contents%8#0,array%array_len%5#1,array%array_len%5#1 (copy)
        int 3                                                                         arr#0,slot_contents%8#0,array%array_len%5#1,array%array_len%5#1 (copy),3
        ==                                                                            arr#0,slot_contents%8#0,array%array_len%5#1,tmp%15#0
        l-load tmp%15#0 0                                                             arr#0,slot_contents%8#0,array%array_len%5#1,tmp%15#0
        assert                                                                        arr#0,slot_contents%8#0,array%array_len%5#1
        // array/uint64.py:20
        // assert arr[-1] == 1
        l-load array%array_len%5#1 0                                                  arr#0,slot_contents%8#0,array%array_len%5#1
        int 1                                                                         arr#0,slot_contents%8#0,array%array_len%5#1,1
        -                                                                             arr#0,slot_contents%8#0,tmp%17#0
        l-load tmp%17#0 0                                                             arr#0,slot_contents%8#0,tmp%17#0
        int 8                                                                         arr#0,slot_contents%8#0,tmp%17#0,8
        *                                                                             arr#0,slot_contents%8#0,array%bytes_index%3#1
        l-load-copy slot_contents%8#0 1                                               arr#0,slot_contents%8#0,array%bytes_index%3#1,slot_contents%8#0 (copy)
        l-load array%bytes_index%3#1 1                                                arr#0,slot_contents%8#0,slot_contents%8#0 (copy),array%bytes_index%3#1
        int 8                                                                         arr#0,slot_contents%8#0,slot_contents%8#0 (copy),array%bytes_index%3#1,8
        extract3                                                                      arr#0,slot_contents%8#0,array%value%3#1
        l-load array%value%3#1 0                                                      arr#0,slot_contents%8#0,array%value%3#1
        int 0                                                                         arr#0,slot_contents%8#0,array%value%3#1,0
        extract_uint64                                                                arr#0,slot_contents%8#0,array%sub_item%8#1
        l-load array%sub_item%8#1 0                                                   arr#0,slot_contents%8#0,array%sub_item%8#1
        int 1                                                                         arr#0,slot_contents%8#0,array%sub_item%8#1,1
        ==                                                                            arr#0,slot_contents%8#0,tmp%19#0
        l-load tmp%19#0 0                                                             arr#0,slot_contents%8#0,tmp%19#0
        assert                                                                        arr#0,slot_contents%8#0
        // array/uint64.py:22
        // arr.append(UInt64(43))
        int 43                                                                        arr#0,slot_contents%8#0,43
        itob                                                                          arr#0,slot_contents%8#0,array%sub_item%9#1
        l-load slot_contents%8#0 1                                                    arr#0,array%sub_item%9#1,slot_contents%8#0
        l-load array%sub_item%9#1 1                                                   arr#0,slot_contents%8#0,array%sub_item%9#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%2#1
        l-load-copy arr#0 1                                                           arr#0,array%array_contents%2#1,arr#0 (copy)
        l-load-copy array%array_contents%2#1 1                                        arr#0,array%array_contents%2#1,arr#0 (copy),array%array_contents%2#1 (copy)
        stores                                                                        arr#0,array%array_contents%2#1
        // array/uint64.py:23
        // assert arr.length == 4
        l-load-copy array%array_contents%2#1 0                                        arr#0,array%array_contents%2#1,array%array_contents%2#1 (copy)
        len                                                                           arr#0,array%array_contents%2#1,array%bytes_len%7#1
        l-load array%bytes_len%7#1 0                                                  arr#0,array%array_contents%2#1,array%bytes_len%7#1
        int 8                                                                         arr#0,array%array_contents%2#1,array%bytes_len%7#1,8
        /                                                                             arr#0,array%array_contents%2#1,array%array_len%7#1
        l-load-copy array%array_len%7#1 0                                             arr#0,array%array_contents%2#1,array%array_len%7#1,array%array_len%7#1 (copy)
        int 4                                                                         arr#0,array%array_contents%2#1,array%array_len%7#1,array%array_len%7#1 (copy),4
        ==                                                                            arr#0,array%array_contents%2#1,array%array_len%7#1,tmp%21#0
        l-load tmp%21#0 0                                                             arr#0,array%array_contents%2#1,array%array_len%7#1,tmp%21#0
        assert                                                                        arr#0,array%array_contents%2#1,array%array_len%7#1
        // array/uint64.py:24
        // assert arr[-1] == 43
        l-load array%array_len%7#1 0                                                  arr#0,array%array_contents%2#1,array%array_len%7#1
        int 1                                                                         arr#0,array%array_contents%2#1,array%array_len%7#1,1
        -                                                                             arr#0,array%array_contents%2#1,tmp%23#0
        l-load tmp%23#0 0                                                             arr#0,array%array_contents%2#1,tmp%23#0
        int 8                                                                         arr#0,array%array_contents%2#1,tmp%23#0,8
        *                                                                             arr#0,array%array_contents%2#1,array%bytes_index%4#1
        l-load-copy array%array_contents%2#1 1                                        arr#0,array%array_contents%2#1,array%bytes_index%4#1,array%array_contents%2#1 (copy)
        l-load array%bytes_index%4#1 1                                                arr#0,array%array_contents%2#1,array%array_contents%2#1 (copy),array%bytes_index%4#1
        int 8                                                                         arr#0,array%array_contents%2#1,array%array_contents%2#1 (copy),array%bytes_index%4#1,8
        extract3                                                                      arr#0,array%array_contents%2#1,array%value%4#1
        l-load array%value%4#1 0                                                      arr#0,array%array_contents%2#1,array%value%4#1
        int 0                                                                         arr#0,array%array_contents%2#1,array%value%4#1,0
        extract_uint64                                                                arr#0,array%array_contents%2#1,array%sub_item%11#1
        l-load array%sub_item%11#1 0                                                  arr#0,array%array_contents%2#1,array%sub_item%11#1
        int 43                                                                        arr#0,array%array_contents%2#1,array%sub_item%11#1,43
        ==                                                                            arr#0,array%array_contents%2#1,tmp%25#0
        l-load tmp%25#0 0                                                             arr#0,array%array_contents%2#1,tmp%25#0
        assert                                                                        arr#0,array%array_contents%2#1
        // array/uint64.py:25
        // assert arr[0] == 42
        l-load array%array_contents%2#1 0                                             arr#0,array%array_contents%2#1
        extract 0 8                                                                   arr#0,array%value%5#1
        l-load array%value%5#1 0                                                      arr#0,array%value%5#1
        int 0                                                                         arr#0,array%value%5#1,0
        extract_uint64                                                                arr#0,array%sub_item%13#1
        l-load array%sub_item%13#1 0                                                  arr#0,array%sub_item%13#1
        int 42                                                                        arr#0,array%sub_item%13#1,42
        ==                                                                            arr#0,tmp%27#0
        l-load tmp%27#0 0                                                             arr#0,tmp%27#0
        assert                                                                        arr#0
        // array/uint64.py:27
        // add_x(arr, UInt64(10))
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        int 10                                                                        arr#0,arr#0 (copy),10
        callsub add_x                                                                 arr#0
        // array/uint64.py:28
        // assert arr.length == 14
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%16#0
        l-load-copy slot_contents%16#0 0                                              arr#0,slot_contents%16#0,slot_contents%16#0 (copy)
        len                                                                           arr#0,slot_contents%16#0,array%bytes_len%9#1
        l-load array%bytes_len%9#1 0                                                  arr#0,slot_contents%16#0,array%bytes_len%9#1
        int 8                                                                         arr#0,slot_contents%16#0,array%bytes_len%9#1,8
        /                                                                             arr#0,slot_contents%16#0,array%array_len%9#1
        l-load-copy array%array_len%9#1 0                                             arr#0,slot_contents%16#0,array%array_len%9#1,array%array_len%9#1 (copy)
        int 14                                                                        arr#0,slot_contents%16#0,array%array_len%9#1,array%array_len%9#1 (copy),14
        ==                                                                            arr#0,slot_contents%16#0,array%array_len%9#1,tmp%29#0
        l-load tmp%29#0 0                                                             arr#0,slot_contents%16#0,array%array_len%9#1,tmp%29#0
        assert                                                                        arr#0,slot_contents%16#0,array%array_len%9#1
        // array/uint64.py:29
        // assert arr[-1] == 9
        l-load array%array_len%9#1 0                                                  arr#0,slot_contents%16#0,array%array_len%9#1
        int 1                                                                         arr#0,slot_contents%16#0,array%array_len%9#1,1
        -                                                                             arr#0,slot_contents%16#0,tmp%31#0
        l-load tmp%31#0 0                                                             arr#0,slot_contents%16#0,tmp%31#0
        int 8                                                                         arr#0,slot_contents%16#0,tmp%31#0,8
        *                                                                             arr#0,slot_contents%16#0,array%bytes_index%6#1
        l-load-copy slot_contents%16#0 1                                              arr#0,slot_contents%16#0,array%bytes_index%6#1,slot_contents%16#0 (copy)
        l-load array%bytes_index%6#1 1                                                arr#0,slot_contents%16#0,slot_contents%16#0 (copy),array%bytes_index%6#1
        int 8                                                                         arr#0,slot_contents%16#0,slot_contents%16#0 (copy),array%bytes_index%6#1,8
        extract3                                                                      arr#0,slot_contents%16#0,array%value%6#1
        l-load array%value%6#1 0                                                      arr#0,slot_contents%16#0,array%value%6#1
        int 0                                                                         arr#0,slot_contents%16#0,array%value%6#1,0
        extract_uint64                                                                arr#0,slot_contents%16#0,array%sub_item%15#1
        l-load array%sub_item%15#1 0                                                  arr#0,slot_contents%16#0,array%sub_item%15#1
        int 9                                                                         arr#0,slot_contents%16#0,array%sub_item%15#1,9
        ==                                                                            arr#0,slot_contents%16#0,tmp%33#0
        l-load tmp%33#0 0                                                             arr#0,slot_contents%16#0,tmp%33#0
        assert                                                                        arr#0,slot_contents%16#0
        // array/uint64.py:31
        // arr.append(UInt64(44))
        int 44                                                                        arr#0,slot_contents%16#0,44
        itob                                                                          arr#0,slot_contents%16#0,array%sub_item%16#1
        l-load slot_contents%16#0 1                                                   arr#0,array%sub_item%16#1,slot_contents%16#0
        l-load array%sub_item%16#1 1                                                  arr#0,slot_contents%16#0,array%sub_item%16#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%3#1
        // array/uint64.py:32
        // assert arr.length == 15
        l-load-copy array%array_contents%3#1 0                                        arr#0,array%array_contents%3#1,array%array_contents%3#1 (copy)
        len                                                                           arr#0,array%array_contents%3#1,array%bytes_len%11#1
        l-load array%bytes_len%11#1 0                                                 arr#0,array%array_contents%3#1,array%bytes_len%11#1
        int 8                                                                         arr#0,array%array_contents%3#1,array%bytes_len%11#1,8
        /                                                                             arr#0,array%array_contents%3#1,array%array_len%11#1
        l-load-copy array%array_len%11#1 0                                            arr#0,array%array_contents%3#1,array%array_len%11#1,array%array_len%11#1 (copy)
        int 15                                                                        arr#0,array%array_contents%3#1,array%array_len%11#1,array%array_len%11#1 (copy),15
        ==                                                                            arr#0,array%array_contents%3#1,array%array_len%11#1,tmp%35#0
        l-load tmp%35#0 0                                                             arr#0,array%array_contents%3#1,array%array_len%11#1,tmp%35#0
        assert                                                                        arr#0,array%array_contents%3#1,array%array_len%11#1
        // array/uint64.py:33
        // assert arr[-1] == 44
        l-load array%array_len%11#1 0                                                 arr#0,array%array_contents%3#1,array%array_len%11#1
        int 1                                                                         arr#0,array%array_contents%3#1,array%array_len%11#1,1
        -                                                                             arr#0,array%array_contents%3#1,tmp%37#0
        l-load tmp%37#0 0                                                             arr#0,array%array_contents%3#1,tmp%37#0
        int 8                                                                         arr#0,array%array_contents%3#1,tmp%37#0,8
        *                                                                             arr#0,array%array_contents%3#1,array%bytes_index%7#1
        l-load-copy array%array_contents%3#1 1                                        arr#0,array%array_contents%3#1,array%bytes_index%7#1,array%array_contents%3#1 (copy)
        l-load array%bytes_index%7#1 1                                                arr#0,array%array_contents%3#1,array%array_contents%3#1 (copy),array%bytes_index%7#1
        int 8                                                                         arr#0,array%array_contents%3#1,array%array_contents%3#1 (copy),array%bytes_index%7#1,8
        extract3                                                                      arr#0,array%array_contents%3#1,array%value%7#1
        l-load array%value%7#1 0                                                      arr#0,array%array_contents%3#1,array%value%7#1
        int 0                                                                         arr#0,array%array_contents%3#1,array%value%7#1,0
        extract_uint64                                                                arr#0,array%array_contents%3#1,array%sub_item%18#1
        l-load array%sub_item%18#1 0                                                  arr#0,array%array_contents%3#1,array%sub_item%18#1
        int 44                                                                        arr#0,array%array_contents%3#1,array%sub_item%18#1,44
        ==                                                                            arr#0,array%array_contents%3#1,tmp%39#0
        l-load tmp%39#0 0                                                             arr#0,array%array_contents%3#1,tmp%39#0
        assert                                                                        arr#0,array%array_contents%3#1
        // array/uint64.py:228
        // arr.append(UInt64(99))
        int 99                                                                        arr#0,array%array_contents%3#1,99
        itob                                                                          arr#0,array%array_contents%3#1,array%sub_item%19#1
        l-load array%array_contents%3#1 1                                             arr#0,array%sub_item%19#1,array%array_contents%3#1
        l-load array%sub_item%19#1 1                                                  arr#0,array%array_contents%3#1,array%sub_item%19#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%4#1
        // array/uint64.py:229
        // arr2.append(UInt64(100))
        int 100                                                                       arr#0,array%array_contents%4#1,100
        itob                                                                          arr#0,array%array_contents%4#1,array%sub_item%20#1
        l-load array%array_contents%4#1 1                                             arr#0,array%sub_item%20#1,array%array_contents%4#1
        l-load array%sub_item%20#1 1                                                  arr#0,array%array_contents%4#1,array%sub_item%20#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%5#1
        // array/uint64.py:35
        // return_ref(arr, arr)[0] += 2
        l-load-copy array%array_contents%5#1 0                                        arr#0,array%array_contents%5#1,array%array_contents%5#1 (copy)
        extract 0 8                                                                   arr#0,array%array_contents%5#1,array%value%8#1
        l-load array%value%8#1 0                                                      arr#0,array%array_contents%5#1,array%value%8#1
        int 0                                                                         arr#0,array%array_contents%5#1,array%value%8#1,0
        extract_uint64                                                                arr#0,array%array_contents%5#1,array%sub_item%22#1
        l-load array%sub_item%22#1 0                                                  arr#0,array%array_contents%5#1,array%sub_item%22#1
        int 2                                                                         arr#0,array%array_contents%5#1,array%sub_item%22#1,2
        +                                                                             arr#0,array%array_contents%5#1,new_box_value%0#0
        l-load new_box_value%0#0 0                                                    arr#0,array%array_contents%5#1,new_box_value%0#0
        itob                                                                          arr#0,array%array_contents%5#1,array%sub_item%23#1
        l-load array%array_contents%5#1 1                                             arr#0,array%sub_item%23#1,array%array_contents%5#1
        l-load array%sub_item%23#1 1                                                  arr#0,array%array_contents%5#1,array%sub_item%23#1
        replace2 0                                                                    arr#0,array%updated_array%0#1
        l-load arr#0 1                                                                array%updated_array%0#1,arr#0
        l-load-copy array%updated_array%0#1 1                                         array%updated_array%0#1,arr#0,array%updated_array%0#1 (copy)
        stores                                                                        array%updated_array%0#1
        // array/uint64.py:36
        // assert arr.length == 17
        l-load-copy array%updated_array%0#1 0                                         array%updated_array%0#1,array%updated_array%0#1 (copy)
        len                                                                           array%updated_array%0#1,array%bytes_len%13#1
        l-load array%bytes_len%13#1 0                                                 array%updated_array%0#1,array%bytes_len%13#1
        int 8                                                                         array%updated_array%0#1,array%bytes_len%13#1,8
        /                                                                             array%updated_array%0#1,array%array_len%13#1
        l-load-copy array%array_len%13#1 0                                            array%updated_array%0#1,array%array_len%13#1,array%array_len%13#1 (copy)
        int 17                                                                        array%updated_array%0#1,array%array_len%13#1,array%array_len%13#1 (copy),17
        ==                                                                            array%updated_array%0#1,array%array_len%13#1,tmp%43#0
        l-load tmp%43#0 0                                                             array%updated_array%0#1,array%array_len%13#1,tmp%43#0
        assert                                                                        array%updated_array%0#1,array%array_len%13#1
        // array/uint64.py:37
        // assert arr[0] == 44
        l-load-copy array%updated_array%0#1 1                                         array%updated_array%0#1,array%array_len%13#1,array%updated_array%0#1 (copy)
        extract 0 8                                                                   array%updated_array%0#1,array%array_len%13#1,array%value%9#1
        l-load array%value%9#1 0                                                      array%updated_array%0#1,array%array_len%13#1,array%value%9#1
        int 0                                                                         array%updated_array%0#1,array%array_len%13#1,array%value%9#1,0
        extract_uint64                                                                array%updated_array%0#1,array%array_len%13#1,array%sub_item%25#1
        l-load array%sub_item%25#1 0                                                  array%updated_array%0#1,array%array_len%13#1,array%sub_item%25#1
        int 44                                                                        array%updated_array%0#1,array%array_len%13#1,array%sub_item%25#1,44
        ==                                                                            array%updated_array%0#1,array%array_len%13#1,tmp%45#0
        l-load tmp%45#0 0                                                             array%updated_array%0#1,array%array_len%13#1,tmp%45#0
        assert                                                                        array%updated_array%0#1,array%array_len%13#1
        // array/uint64.py:38
        // assert arr[-2] == 99
        l-load-copy array%array_len%13#1 0                                            array%updated_array%0#1,array%array_len%13#1,array%array_len%13#1 (copy)
        int 2                                                                         array%updated_array%0#1,array%array_len%13#1,array%array_len%13#1 (copy),2
        -                                                                             array%updated_array%0#1,array%array_len%13#1,tmp%47#0
        l-load tmp%47#0 0                                                             array%updated_array%0#1,array%array_len%13#1,tmp%47#0
        int 8                                                                         array%updated_array%0#1,array%array_len%13#1,tmp%47#0,8
        *                                                                             array%updated_array%0#1,array%array_len%13#1,array%bytes_index%11#1
        l-load-copy array%updated_array%0#1 2                                         array%updated_array%0#1,array%array_len%13#1,array%bytes_index%11#1,array%updated_array%0#1 (copy)
        l-load array%bytes_index%11#1 1                                               array%updated_array%0#1,array%array_len%13#1,array%updated_array%0#1 (copy),array%bytes_index%11#1
        int 8                                                                         array%updated_array%0#1,array%array_len%13#1,array%updated_array%0#1 (copy),array%bytes_index%11#1,8
        extract3                                                                      array%updated_array%0#1,array%array_len%13#1,array%value%10#1
        l-load array%value%10#1 0                                                     array%updated_array%0#1,array%array_len%13#1,array%value%10#1
        int 0                                                                         array%updated_array%0#1,array%array_len%13#1,array%value%10#1,0
        extract_uint64                                                                array%updated_array%0#1,array%array_len%13#1,array%sub_item%27#1
        l-load array%sub_item%27#1 0                                                  array%updated_array%0#1,array%array_len%13#1,array%sub_item%27#1
        int 99                                                                        array%updated_array%0#1,array%array_len%13#1,array%sub_item%27#1,99
        ==                                                                            array%updated_array%0#1,array%array_len%13#1,tmp%49#0
        l-load tmp%49#0 0                                                             array%updated_array%0#1,array%array_len%13#1,tmp%49#0
        assert                                                                        array%updated_array%0#1,array%array_len%13#1
        // array/uint64.py:39
        // assert arr[-1] == 100
        l-load array%array_len%13#1 0                                                 array%updated_array%0#1,array%array_len%13#1
        int 1                                                                         array%updated_array%0#1,array%array_len%13#1,1
        -                                                                             array%updated_array%0#1,tmp%51#0
        l-load tmp%51#0 0                                                             array%updated_array%0#1,tmp%51#0
        int 8                                                                         array%updated_array%0#1,tmp%51#0,8
        *                                                                             array%updated_array%0#1,array%bytes_index%12#1
        l-load array%updated_array%0#1 1                                              array%bytes_index%12#1,array%updated_array%0#1
        l-load array%bytes_index%12#1 1                                               array%updated_array%0#1,array%bytes_index%12#1
        int 8                                                                         array%updated_array%0#1,array%bytes_index%12#1,8
        extract3                                                                      array%value%11#1
        l-load array%value%11#1 0                                                     array%value%11#1
        int 0                                                                         array%value%11#1,0
        extract_uint64                                                                array%sub_item%29#1
        l-load array%sub_item%29#1 0                                                  array%sub_item%29#1
        int 100                                                                       array%sub_item%29#1,100
        ==                                                                            tmp%53#0
        l-load tmp%53#0 0                                                             tmp%53#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_extend() -> void:
subroutine test_array_extend:
    test_array_extend_block@0:
        // array/uint64.py:43
        // arr = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                arr#0
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        byte 0x                                                                       arr#0,arr#0 (copy),0x
        stores                                                                        arr#0
        // array/uint64.py:44
        // add_x(arr, UInt64(1))
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        int 1                                                                         arr#0,arr#0 (copy),1
        callsub add_x                                                                 arr#0
        // array/uint64.py:48
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                       arr#0,0x000000000000000100000000000000020000000000000003
        v-store slot%0                                                                arr#0
        // array/uint64.py:50
        // arr.extend(arr2)
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%4#0
        l-load slot_contents%4#0 0                                                    arr#0,slot_contents%4#0
        // array/uint64.py:48
        // arr2.append(UInt64(3))
        byte 0x000000000000000100000000000000020000000000000003                       arr#0,slot_contents%4#0,0x000000000000000100000000000000020000000000000003
        // array/uint64.py:50
        // arr.extend(arr2)
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%3#1
        l-load arr#0 1                                                                array%array_contents%3#1,arr#0
        l-load-copy array%array_contents%3#1 1                                        array%array_contents%3#1,arr#0,array%array_contents%3#1 (copy)
        stores                                                                        array%array_contents%3#1
        // array/uint64.py:51
        // assert arr.length == 4
        l-load array%array_contents%3#1 0                                             array%array_contents%3#1
        len                                                                           array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  array%bytes_len%0#1
        int 8                                                                         array%bytes_len%0#1,8
        /                                                                             array%array_len%0#1
        l-load array%array_len%0#1 0                                                  array%array_len%0#1
        int 4                                                                         array%array_len%0#1,4
        ==                                                                            tmp%1#0
        l-load tmp%1#0 0                                                              tmp%1#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_multiple_append() -> void:
subroutine test_array_multiple_append:
    test_array_multiple_append_block@0:
        // array/uint64.py:55
        // arr = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                arr#0
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        byte 0x                                                                       arr#0,arr#0 (copy),0x
        stores                                                                        arr#0
        // array/uint64.py:56
        // add_x(arr, UInt64(1))
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        int 1                                                                         arr#0,arr#0 (copy),1
        callsub add_x                                                                 arr#0
        // array/uint64.py:57
        // arr.append(UInt64(1))
        int 1                                                                         arr#0,1
        itob                                                                          arr#0,array%sub_item%0#1
        l-load-copy arr#0 1                                                           arr#0,array%sub_item%0#1,arr#0 (copy)
        loads                                                                         arr#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    arr#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   arr#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%0#1
        // array/uint64.py:58
        // arr.append(UInt64(2))
        int 2                                                                         arr#0,array%array_contents%0#1,2
        itob                                                                          arr#0,array%array_contents%0#1,array%sub_item%1#1
        l-load array%array_contents%0#1 1                                             arr#0,array%sub_item%1#1,array%array_contents%0#1
        l-load array%sub_item%1#1 1                                                   arr#0,array%array_contents%0#1,array%sub_item%1#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%1#1
        // array/uint64.py:59
        // arr.append(UInt64(3))
        int 3                                                                         arr#0,array%array_contents%1#1,3
        itob                                                                          arr#0,array%array_contents%1#1,array%sub_item%2#1
        l-load array%array_contents%1#1 1                                             arr#0,array%sub_item%2#1,array%array_contents%1#1
        l-load array%sub_item%2#1 1                                                   arr#0,array%array_contents%1#1,array%sub_item%2#1
        concat // on error: max array length exceeded                                 arr#0,array%array_contents%2#1
        l-load arr#0 1                                                                array%array_contents%2#1,arr#0
        l-load-copy array%array_contents%2#1 1                                        array%array_contents%2#1,arr#0,array%array_contents%2#1 (copy)
        stores                                                                        array%array_contents%2#1
        // array/uint64.py:60
        // assert arr.length == 4
        l-load array%array_contents%2#1 0                                             array%array_contents%2#1
        len                                                                           array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  array%bytes_len%0#1
        int 8                                                                         array%bytes_len%0#1,8
        /                                                                             array%array_len%0#1
        l-load array%array_len%0#1 0                                                  array%array_len%0#1
        int 4                                                                         array%array_len%0#1,4
        ==                                                                            tmp%1#0
        l-load tmp%1#0 0                                                              tmp%1#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_array_too_long() -> void:
subroutine test_array_too_long:
    test_array_too_long_block@0:
        // array/uint64.py:68
        // array = Array[UInt64]()
        byte 0x                                                                       0x
        v-store slot%0
        // array/uint64.py:69
        // for i in urange(512):
        int 0                                                                         0
        v-store i#0
        b test_array_too_long_for_header@1

    test_array_too_long_for_header@1:
        // array/uint64.py:69
        // for i in urange(512):
        v-load i#0                                                                    i#0
        int 512                                                                       i#0,512
        <                                                                             continue_looping%0#0
        l-load continue_looping%0#0 0                                                 continue_looping%0#0
        bz test_array_too_long_after_for@4 ; b test_array_too_long_for_body@2

    test_array_too_long_for_body@2:
        // array/uint64.py:70
        // array.append(i)
        v-load i#0                                                                    i#0
        l-store-copy i#0 0                                                            i#0,i#0 (copy)
        itob                                                                          i#0,array%sub_item%0#1
        v-load slot%0                                                                 i#0,array%sub_item%0#1,slot%0
        l-store slot_contents%0#0 0                                                   i#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    i#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   i#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 i#0,array%array_contents%0#1
        l-load array%array_contents%0#1 0                                             i#0,array%array_contents%0#1
        v-store slot%0                                                                i#0
        // array/uint64.py:69
        // for i in urange(512):
        l-load i#0 0                                                                  i#0
        int 1                                                                         i#0,1
        +                                                                             i#0
        v-store i#0
        b test_array_too_long_for_header@1

    test_array_too_long_after_for@4:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:71
        // assert array.length == 512, "array is expected length"
        l-store slot_contents%1#0 0                                                   slot_contents%1#0
        l-load-copy slot_contents%1#0 0                                               slot_contents%1#0,slot_contents%1#0 (copy)
        len                                                                           slot_contents%1#0,array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  slot_contents%1#0,array%bytes_len%0#1
        int 8                                                                         slot_contents%1#0,array%bytes_len%0#1,8
        /                                                                             slot_contents%1#0,array%array_len%0#1
        l-load array%array_len%0#1 0                                                  slot_contents%1#0,array%array_len%0#1
        int 512                                                                       slot_contents%1#0,array%array_len%0#1,512
        ==                                                                            slot_contents%1#0,tmp%1#0
        l-load tmp%1#0 0                                                              slot_contents%1#0,tmp%1#0
        assert // array is expected length                                            slot_contents%1#0
        // array/uint64.py:73
        // array.append(UInt64(512))  # this will fail
        int 512                                                                       slot_contents%1#0,512
        itob                                                                          slot_contents%1#0,array%sub_item%1#1
        l-load slot_contents%1#0 1                                                    array%sub_item%1#1,slot_contents%1#0
        l-load array%sub_item%1#1 1                                                   slot_contents%1#0,array%sub_item%1#1
        concat // on error: max array length exceeded                                 array%array_contents%1#1
        l-load array%array_contents%1#1 0                                             array%array_contents%1#1
        v-store slot%0
        retsub


// test_cases.array.uint64.Contract.test_array_copy_and_extend() -> void:
subroutine test_array_copy_and_extend:
    test_array_copy_and_extend_block@0:
        // array/uint64.py:77
        // array = Array[UInt64]()
        byte 0x                                                                       0x
        v-store slot%0
        // array/uint64.py:78
        // for i in urange(5):
        int 0                                                                         0
        v-store i#0
        b test_array_copy_and_extend_for_header@1

    test_array_copy_and_extend_for_header@1:
        // array/uint64.py:78
        // for i in urange(5):
        v-load i#0                                                                    i#0
        int 5                                                                         i#0,5
        <                                                                             continue_looping%0#0
        l-load continue_looping%0#0 0                                                 continue_looping%0#0
        bz test_array_copy_and_extend_after_for@4 ; b test_array_copy_and_extend_for_body@2 

    test_array_copy_and_extend_for_body@2:
        // array/uint64.py:79
        // array.append(i)
        v-load i#0                                                                    i#0
        l-store-copy i#0 0                                                            i#0,i#0 (copy)
        itob                                                                          i#0,array%sub_item%0#1
        v-load slot%0                                                                 i#0,array%sub_item%0#1,slot%0
        l-store slot_contents%0#0 0                                                   i#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    i#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   i#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 i#0,array%array_contents%0#1
        l-load array%array_contents%0#1 0                                             i#0,array%array_contents%0#1
        v-store slot%0                                                                i#0
        // array/uint64.py:78
        // for i in urange(5):
        l-load i#0 0                                                                  i#0
        int 1                                                                         i#0,1
        +                                                                             i#0
        v-store i#0
        b test_array_copy_and_extend_for_header@1

    test_array_copy_and_extend_after_for@4:
        v-load slot%0                                                                 slot%0
        l-store-copy slot%0 0                                                         slot%0,slot%0 (copy)
        // array/uint64.py:80
        // array2 = array.copy()
        l-store slot_contents%1#0 0                                                   slot%0,slot_contents%1#0
        l-load slot_contents%1#0 0                                                    slot%0,slot_contents%1#0
        l-store slot%1 1                                                              slot%1,slot%0
        // array/uint64.py:82
        // array.append(UInt64(5))
        int 5                                                                         slot%1,slot%0,5
        itob                                                                          slot%1,slot%0,array%sub_item%1#1
        l-load slot%0 1                                                               slot%1,array%sub_item%1#1,slot%0
        l-store slot_contents%2#0 0                                                   slot%1,array%sub_item%1#1,slot_contents%2#0
        l-load slot_contents%2#0 0                                                    slot%1,array%sub_item%1#1,slot_contents%2#0
        l-load array%sub_item%1#1 1                                                   slot%1,slot_contents%2#0,array%sub_item%1#1
        concat // on error: max array length exceeded                                 slot%1,array%array_contents%1#1
        l-load-copy array%array_contents%1#1 0                                        slot%1,array%array_contents%1#1,array%array_contents%1#1 (copy)
        v-store slot%0                                                                slot%1,array%array_contents%1#1
        // array/uint64.py:83
        // assert array.length == 6
        l-load-copy array%array_contents%1#1 0                                        slot%1,array%array_contents%1#1,array%array_contents%1#1 (copy)
        len                                                                           slot%1,array%array_contents%1#1,array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  slot%1,array%array_contents%1#1,array%bytes_len%0#1
        int 8                                                                         slot%1,array%array_contents%1#1,array%bytes_len%0#1,8
        /                                                                             slot%1,array%array_contents%1#1,array%array_len%0#1
        l-load-copy array%array_len%0#1 0                                             slot%1,array%array_contents%1#1,array%array_len%0#1,array%array_len%0#1 (copy)
        int 6                                                                         slot%1,array%array_contents%1#1,array%array_len%0#1,array%array_len%0#1 (copy),6
        ==                                                                            slot%1,array%array_contents%1#1,array%array_len%0#1,tmp%1#0
        l-load tmp%1#0 0                                                              slot%1,array%array_contents%1#1,array%array_len%0#1,tmp%1#0
        assert                                                                        slot%1,array%array_contents%1#1,array%array_len%0#1
        // array/uint64.py:84
        // assert array[-1] == 5, "expected 5"
        l-load array%array_len%0#1 0                                                  slot%1,array%array_contents%1#1,array%array_len%0#1
        int 1                                                                         slot%1,array%array_contents%1#1,array%array_len%0#1,1
        -                                                                             slot%1,array%array_contents%1#1,tmp%3#0
        l-load tmp%3#0 0                                                              slot%1,array%array_contents%1#1,tmp%3#0
        int 8                                                                         slot%1,array%array_contents%1#1,tmp%3#0,8
        *                                                                             slot%1,array%array_contents%1#1,array%bytes_index%0#1
        l-load-copy array%array_contents%1#1 1                                        slot%1,array%array_contents%1#1,array%bytes_index%0#1,array%array_contents%1#1 (copy)
        l-load array%bytes_index%0#1 1                                                slot%1,array%array_contents%1#1,array%array_contents%1#1 (copy),array%bytes_index%0#1
        int 8                                                                         slot%1,array%array_contents%1#1,array%array_contents%1#1 (copy),array%bytes_index%0#1,8
        extract3                                                                      slot%1,array%array_contents%1#1,array%value%0#1
        l-load array%value%0#1 0                                                      slot%1,array%array_contents%1#1,array%value%0#1
        int 0                                                                         slot%1,array%array_contents%1#1,array%value%0#1,0
        extract_uint64                                                                slot%1,array%array_contents%1#1,array%sub_item%3#1
        l-load array%sub_item%3#1 0                                                   slot%1,array%array_contents%1#1,array%sub_item%3#1
        int 5                                                                         slot%1,array%array_contents%1#1,array%sub_item%3#1,5
        ==                                                                            slot%1,array%array_contents%1#1,tmp%5#0
        l-load tmp%5#0 0                                                              slot%1,array%array_contents%1#1,tmp%5#0
        assert // expected 5                                                          slot%1,array%array_contents%1#1
        l-load-copy slot%1 1                                                          slot%1,array%array_contents%1#1,slot%1 (copy)
        // array/uint64.py:86
        // assert array2.length == 5
        l-store slot_contents%6#0 0                                                   slot%1,array%array_contents%1#1,slot_contents%6#0
        l-load-copy slot_contents%6#0 0                                               slot%1,array%array_contents%1#1,slot_contents%6#0,slot_contents%6#0 (copy)
        len                                                                           slot%1,array%array_contents%1#1,slot_contents%6#0,array%bytes_len%2#1
        l-load array%bytes_len%2#1 0                                                  slot%1,array%array_contents%1#1,slot_contents%6#0,array%bytes_len%2#1
        int 8                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,array%bytes_len%2#1,8
        /                                                                             slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1
        l-load-copy array%array_len%2#1 0                                             slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1,array%array_len%2#1 (copy)
        int 5                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1,array%array_len%2#1 (copy),5
        ==                                                                            slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1,tmp%7#0
        l-load tmp%7#0 0                                                              slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1,tmp%7#0
        assert                                                                        slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1
        // array/uint64.py:87
        // assert array2[-1] == 4, "expected 4"
        l-load array%array_len%2#1 0                                                  slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1
        int 1                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,array%array_len%2#1,1
        -                                                                             slot%1,array%array_contents%1#1,slot_contents%6#0,tmp%9#0
        l-load tmp%9#0 0                                                              slot%1,array%array_contents%1#1,slot_contents%6#0,tmp%9#0
        int 8                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,tmp%9#0,8
        *                                                                             slot%1,array%array_contents%1#1,slot_contents%6#0,array%bytes_index%1#1
        l-load-copy slot_contents%6#0 1                                               slot%1,array%array_contents%1#1,slot_contents%6#0,array%bytes_index%1#1,slot_contents%6#0 (copy)
        l-load array%bytes_index%1#1 1                                                slot%1,array%array_contents%1#1,slot_contents%6#0,slot_contents%6#0 (copy),array%bytes_index%1#1
        int 8                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,slot_contents%6#0 (copy),array%bytes_index%1#1,8
        extract3                                                                      slot%1,array%array_contents%1#1,slot_contents%6#0,array%value%1#1
        l-load array%value%1#1 0                                                      slot%1,array%array_contents%1#1,slot_contents%6#0,array%value%1#1
        int 0                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,array%value%1#1,0
        extract_uint64                                                                slot%1,array%array_contents%1#1,slot_contents%6#0,array%sub_item%5#1
        l-load array%sub_item%5#1 0                                                   slot%1,array%array_contents%1#1,slot_contents%6#0,array%sub_item%5#1
        int 4                                                                         slot%1,array%array_contents%1#1,slot_contents%6#0,array%sub_item%5#1,4
        ==                                                                            slot%1,array%array_contents%1#1,slot_contents%6#0,tmp%11#0
        l-load tmp%11#0 0                                                             slot%1,array%array_contents%1#1,slot_contents%6#0,tmp%11#0
        assert // expected 4                                                          slot%1,array%array_contents%1#1,slot_contents%6#0
        // array/uint64.py:89
        // array.extend(array2)
        l-load array%array_contents%1#1 1                                             slot%1,slot_contents%6#0,array%array_contents%1#1
        l-load slot_contents%6#0 1                                                    slot%1,array%array_contents%1#1,slot_contents%6#0
        concat // on error: max array length exceeded                                 slot%1,array%array_contents%2#1
        l-load-copy array%array_contents%2#1 0                                        slot%1,array%array_contents%2#1,array%array_contents%2#1 (copy)
        v-store slot%0                                                                slot%1,array%array_contents%2#1
        // array/uint64.py:90
        // assert array.length == 11
        l-load-copy array%array_contents%2#1 0                                        slot%1,array%array_contents%2#1,array%array_contents%2#1 (copy)
        len                                                                           slot%1,array%array_contents%2#1,array%bytes_len%4#1
        l-load array%bytes_len%4#1 0                                                  slot%1,array%array_contents%2#1,array%bytes_len%4#1
        int 8                                                                         slot%1,array%array_contents%2#1,array%bytes_len%4#1,8
        /                                                                             slot%1,array%array_contents%2#1,array%array_len%4#1
        l-load-copy array%array_len%4#1 0                                             slot%1,array%array_contents%2#1,array%array_len%4#1,array%array_len%4#1 (copy)
        int 11                                                                        slot%1,array%array_contents%2#1,array%array_len%4#1,array%array_len%4#1 (copy),11
        ==                                                                            slot%1,array%array_contents%2#1,array%array_len%4#1,tmp%13#0
        l-load tmp%13#0 0                                                             slot%1,array%array_contents%2#1,array%array_len%4#1,tmp%13#0
        assert                                                                        slot%1,array%array_contents%2#1,array%array_len%4#1
        l-load slot%1 2                                                               array%array_contents%2#1,array%array_len%4#1,slot%1
        // array/uint64.py:91
        // assert array2.length == 5
        l-store slot_contents%12#0 0                                                  array%array_contents%2#1,array%array_len%4#1,slot_contents%12#0
        l-load slot_contents%12#0 0                                                   array%array_contents%2#1,array%array_len%4#1,slot_contents%12#0
        len                                                                           array%array_contents%2#1,array%array_len%4#1,array%bytes_len%5#1
        l-load array%bytes_len%5#1 0                                                  array%array_contents%2#1,array%array_len%4#1,array%bytes_len%5#1
        int 8                                                                         array%array_contents%2#1,array%array_len%4#1,array%bytes_len%5#1,8
        /                                                                             array%array_contents%2#1,array%array_len%4#1,array%array_len%5#1
        l-load array%array_len%5#1 0                                                  array%array_contents%2#1,array%array_len%4#1,array%array_len%5#1
        int 5                                                                         array%array_contents%2#1,array%array_len%4#1,array%array_len%5#1,5
        ==                                                                            array%array_contents%2#1,array%array_len%4#1,tmp%15#0
        l-load tmp%15#0 0                                                             array%array_contents%2#1,array%array_len%4#1,tmp%15#0
        assert                                                                        array%array_contents%2#1,array%array_len%4#1
        // array/uint64.py:92
        // assert array[-1] == 4, "expected 4"
        l-load array%array_len%4#1 0                                                  array%array_contents%2#1,array%array_len%4#1
        int 1                                                                         array%array_contents%2#1,array%array_len%4#1,1
        -                                                                             array%array_contents%2#1,tmp%17#0
        l-load tmp%17#0 0                                                             array%array_contents%2#1,tmp%17#0
        int 8                                                                         array%array_contents%2#1,tmp%17#0,8
        *                                                                             array%array_contents%2#1,array%bytes_index%2#1
        l-load-copy array%array_contents%2#1 1                                        array%array_contents%2#1,array%bytes_index%2#1,array%array_contents%2#1 (copy)
        l-load array%bytes_index%2#1 1                                                array%array_contents%2#1,array%array_contents%2#1 (copy),array%bytes_index%2#1
        int 8                                                                         array%array_contents%2#1,array%array_contents%2#1 (copy),array%bytes_index%2#1,8
        extract3                                                                      array%array_contents%2#1,array%value%2#1
        l-load array%value%2#1 0                                                      array%array_contents%2#1,array%value%2#1
        int 0                                                                         array%array_contents%2#1,array%value%2#1,0
        extract_uint64                                                                array%array_contents%2#1,array%sub_item%7#1
        l-load array%sub_item%7#1 0                                                   array%array_contents%2#1,array%sub_item%7#1
        int 4                                                                         array%array_contents%2#1,array%sub_item%7#1,4
        ==                                                                            array%array_contents%2#1,tmp%19#0
        l-load tmp%19#0 0                                                             array%array_contents%2#1,tmp%19#0
        assert // expected 4                                                          array%array_contents%2#1
        // array/uint64.py:93
        // assert array[4] == 4, "expected 4"
        l-load-copy array%array_contents%2#1 0                                        array%array_contents%2#1,array%array_contents%2#1 (copy)
        extract 32 8                                                                  array%array_contents%2#1,array%value%3#1
        l-load array%value%3#1 0                                                      array%array_contents%2#1,array%value%3#1
        int 0                                                                         array%array_contents%2#1,array%value%3#1,0
        extract_uint64                                                                array%array_contents%2#1,array%sub_item%9#1
        l-load array%sub_item%9#1 0                                                   array%array_contents%2#1,array%sub_item%9#1
        int 4                                                                         array%array_contents%2#1,array%sub_item%9#1,4
        ==                                                                            array%array_contents%2#1,tmp%21#0
        l-load tmp%21#0 0                                                             array%array_contents%2#1,tmp%21#0
        assert // expected 4                                                          array%array_contents%2#1
        // array/uint64.py:94
        // assert array[5] == 5, "expected 4"
        l-load-copy array%array_contents%2#1 0                                        array%array_contents%2#1,array%array_contents%2#1 (copy)
        extract 40 8                                                                  array%array_contents%2#1,array%value%4#1
        l-load array%value%4#1 0                                                      array%array_contents%2#1,array%value%4#1
        int 0                                                                         array%array_contents%2#1,array%value%4#1,0
        extract_uint64                                                                array%array_contents%2#1,array%sub_item%11#1
        l-load array%sub_item%11#1 0                                                  array%array_contents%2#1,array%sub_item%11#1
        int 5                                                                         array%array_contents%2#1,array%sub_item%11#1,5
        ==                                                                            array%array_contents%2#1,tmp%23#0
        l-load tmp%23#0 0                                                             array%array_contents%2#1,tmp%23#0
        assert // expected 4                                                          array%array_contents%2#1
        // array/uint64.py:95
        // assert array[6] == 0, "expected 4"
        l-load array%array_contents%2#1 0                                             array%array_contents%2#1
        extract 48 8                                                                  array%value%5#1
        l-load array%value%5#1 0                                                      array%value%5#1
        int 0                                                                         array%value%5#1,0
        extract_uint64                                                                array%sub_item%13#1
        l-load array%sub_item%13#1 0                                                  array%sub_item%13#1
        !                                                                             tmp%25#0
        l-load tmp%25#0 0                                                             tmp%25#0
        assert // expected 4
        retsub


// test_cases.array.uint64.Contract.test_array_evaluation_order() -> void:
subroutine test_array_evaluation_order:
    test_array_evaluation_order_block@0:
        // array/uint64.py:99
        // arr = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                arr#0
        // array/uint64.py:100
        // arr.append(UInt64(3))
        int 3                                                                         arr#0,3
        itob                                                                          arr#0,array%sub_item%0#1
        l-load-copy arr#0 1                                                           arr#0,array%sub_item%0#1,arr#0 (copy)
        l-load array%sub_item%0#1 1                                                   arr#0,arr#0 (copy),array%sub_item%0#1
        stores                                                                        arr#0
        // array/uint64.py:101
        // append_length_and_return(arr).extend(append_length_and_return(arr))
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        callsub append_length_and_return                                              arr#0,tmp%0#0
        l-load-copy arr#0 1                                                           arr#0,tmp%0#0,arr#0 (copy)
        callsub append_length_and_return                                              arr#0,tmp%0#0,tmp%1#0
        l-load tmp%1#0 0                                                              arr#0,tmp%0#0,tmp%1#0
        loads                                                                         arr#0,tmp%0#0,slot_contents%1#0
        l-load-copy tmp%0#0 1                                                         arr#0,tmp%0#0,slot_contents%1#0,tmp%0#0 (copy)
        loads                                                                         arr#0,tmp%0#0,slot_contents%1#0,slot_contents%2#0
        l-load slot_contents%2#0 0                                                    arr#0,tmp%0#0,slot_contents%1#0,slot_contents%2#0
        l-load slot_contents%1#0 1                                                    arr#0,tmp%0#0,slot_contents%2#0,slot_contents%1#0
        concat // on error: max array length exceeded                                 arr#0,tmp%0#0,array%array_contents%1#1
        l-load tmp%0#0 1                                                              arr#0,array%array_contents%1#1,tmp%0#0
        l-load array%array_contents%1#1 1                                             arr#0,tmp%0#0,array%array_contents%1#1
        stores                                                                        arr#0
        // array/uint64.py:102
        // assert arr.length == 6
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%3#0
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        len                                                                           arr#0,slot_contents%3#0,array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  arr#0,slot_contents%3#0,array%bytes_len%0#1
        int 8                                                                         arr#0,slot_contents%3#0,array%bytes_len%0#1,8
        /                                                                             arr#0,slot_contents%3#0,array%array_len%0#1
        l-load array%array_len%0#1 0                                                  arr#0,slot_contents%3#0,array%array_len%0#1
        int 6                                                                         arr#0,slot_contents%3#0,array%array_len%0#1,6
        ==                                                                            arr#0,slot_contents%3#0,tmp%3#0
        l-load tmp%3#0 0                                                              arr#0,slot_contents%3#0,tmp%3#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:103
        // assert arr[0] == 3
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        extract 0 8                                                                   arr#0,slot_contents%3#0,array%value%0#1
        l-load array%value%0#1 0                                                      arr#0,slot_contents%3#0,array%value%0#1
        int 0                                                                         arr#0,slot_contents%3#0,array%value%0#1,0
        extract_uint64                                                                arr#0,slot_contents%3#0,array%sub_item%2#1
        l-load array%sub_item%2#1 0                                                   arr#0,slot_contents%3#0,array%sub_item%2#1
        int 3                                                                         arr#0,slot_contents%3#0,array%sub_item%2#1,3
        ==                                                                            arr#0,slot_contents%3#0,tmp%5#0
        l-load tmp%5#0 0                                                              arr#0,slot_contents%3#0,tmp%5#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:104
        // assert arr[1] == 1
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        extract 8 8                                                                   arr#0,slot_contents%3#0,array%value%1#1
        l-load array%value%1#1 0                                                      arr#0,slot_contents%3#0,array%value%1#1
        int 0                                                                         arr#0,slot_contents%3#0,array%value%1#1,0
        extract_uint64                                                                arr#0,slot_contents%3#0,array%sub_item%4#1
        l-load array%sub_item%4#1 0                                                   arr#0,slot_contents%3#0,array%sub_item%4#1
        int 1                                                                         arr#0,slot_contents%3#0,array%sub_item%4#1,1
        ==                                                                            arr#0,slot_contents%3#0,tmp%7#0
        l-load tmp%7#0 0                                                              arr#0,slot_contents%3#0,tmp%7#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:105
        // assert arr[2] == 2
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        extract 16 8                                                                  arr#0,slot_contents%3#0,array%value%2#1
        l-load array%value%2#1 0                                                      arr#0,slot_contents%3#0,array%value%2#1
        int 0                                                                         arr#0,slot_contents%3#0,array%value%2#1,0
        extract_uint64                                                                arr#0,slot_contents%3#0,array%sub_item%6#1
        l-load array%sub_item%6#1 0                                                   arr#0,slot_contents%3#0,array%sub_item%6#1
        int 2                                                                         arr#0,slot_contents%3#0,array%sub_item%6#1,2
        ==                                                                            arr#0,slot_contents%3#0,tmp%9#0
        l-load tmp%9#0 0                                                              arr#0,slot_contents%3#0,tmp%9#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:106
        // assert arr[3] == 3
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        extract 24 8                                                                  arr#0,slot_contents%3#0,array%value%3#1
        l-load array%value%3#1 0                                                      arr#0,slot_contents%3#0,array%value%3#1
        int 0                                                                         arr#0,slot_contents%3#0,array%value%3#1,0
        extract_uint64                                                                arr#0,slot_contents%3#0,array%sub_item%8#1
        l-load array%sub_item%8#1 0                                                   arr#0,slot_contents%3#0,array%sub_item%8#1
        int 3                                                                         arr#0,slot_contents%3#0,array%sub_item%8#1,3
        ==                                                                            arr#0,slot_contents%3#0,tmp%11#0
        l-load tmp%11#0 0                                                             arr#0,slot_contents%3#0,tmp%11#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:107
        // assert arr[4] == 1
        l-load-copy slot_contents%3#0 0                                               arr#0,slot_contents%3#0,slot_contents%3#0 (copy)
        extract 32 8                                                                  arr#0,slot_contents%3#0,array%value%4#1
        l-load array%value%4#1 0                                                      arr#0,slot_contents%3#0,array%value%4#1
        int 0                                                                         arr#0,slot_contents%3#0,array%value%4#1,0
        extract_uint64                                                                arr#0,slot_contents%3#0,array%sub_item%10#1
        l-load array%sub_item%10#1 0                                                  arr#0,slot_contents%3#0,array%sub_item%10#1
        int 1                                                                         arr#0,slot_contents%3#0,array%sub_item%10#1,1
        ==                                                                            arr#0,slot_contents%3#0,tmp%13#0
        l-load tmp%13#0 0                                                             arr#0,slot_contents%3#0,tmp%13#0
        assert                                                                        arr#0,slot_contents%3#0
        // array/uint64.py:108
        // assert arr[5] == 2
        l-load slot_contents%3#0 0                                                    arr#0,slot_contents%3#0
        extract 40 8                                                                  arr#0,array%value%5#1
        l-load array%value%5#1 0                                                      arr#0,array%value%5#1
        int 0                                                                         arr#0,array%value%5#1,0
        extract_uint64                                                                arr#0,array%sub_item%12#1
        l-load array%sub_item%12#1 0                                                  arr#0,array%sub_item%12#1
        int 2                                                                         arr#0,array%sub_item%12#1,2
        ==                                                                            arr#0,tmp%15#0
        l-load tmp%15#0 0                                                             arr#0,tmp%15#0
        assert                                                                        arr#0
        // array/uint64.py:110
        // arr[append_length_and_return(arr)[0]] = append_length_and_return(arr)[-1]
        l-load-copy arr#0 0                                                           arr#0,arr#0 (copy)
        callsub append_length_and_return                                              arr#0,tmp%16#0
        l-load tmp%16#0 0                                                             arr#0,tmp%16#0
        loads                                                                         arr#0,slot_contents%10#0
        l-load-copy slot_contents%10#0 0                                              arr#0,slot_contents%10#0,slot_contents%10#0 (copy)
        len                                                                           arr#0,slot_contents%10#0,array%bytes_len%1#1
        l-load array%bytes_len%1#1 0                                                  arr#0,slot_contents%10#0,array%bytes_len%1#1
        int 8                                                                         arr#0,slot_contents%10#0,array%bytes_len%1#1,8
        /                                                                             arr#0,slot_contents%10#0,array%array_len%1#1
        l-load array%array_len%1#1 0                                                  arr#0,slot_contents%10#0,array%array_len%1#1
        int 1                                                                         arr#0,slot_contents%10#0,array%array_len%1#1,1
        -                                                                             arr#0,slot_contents%10#0,tmp%18#0
        l-load-copy arr#0 2                                                           arr#0,slot_contents%10#0,tmp%18#0,arr#0 (copy)
        callsub append_length_and_return                                              arr#0,slot_contents%10#0,tmp%18#0,tmp%19#0
        l-load tmp%19#0 0                                                             arr#0,slot_contents%10#0,tmp%18#0,tmp%19#0
        loads                                                                         arr#0,slot_contents%10#0,tmp%18#0,slot_contents%12#0
        l-load slot_contents%12#0 0                                                   arr#0,slot_contents%10#0,tmp%18#0,slot_contents%12#0
        extract 0 8                                                                   arr#0,slot_contents%10#0,tmp%18#0,array%value%6#1
        l-load array%value%6#1 0                                                      arr#0,slot_contents%10#0,tmp%18#0,array%value%6#1
        int 0                                                                         arr#0,slot_contents%10#0,tmp%18#0,array%value%6#1,0
        extract_uint64                                                                arr#0,slot_contents%10#0,tmp%18#0,array%sub_item%14#1
        l-load-copy arr#0 3                                                           arr#0,slot_contents%10#0,tmp%18#0,array%sub_item%14#1,arr#0 (copy)
        loads                                                                         arr#0,slot_contents%10#0,tmp%18#0,array%sub_item%14#1,slot_contents%13#0
        l-load tmp%18#0 2                                                             arr#0,slot_contents%10#0,array%sub_item%14#1,slot_contents%13#0,tmp%18#0
        int 8                                                                         arr#0,slot_contents%10#0,array%sub_item%14#1,slot_contents%13#0,tmp%18#0,8
        *                                                                             arr#0,slot_contents%10#0,array%sub_item%14#1,slot_contents%13#0,array%bytes_index%7#1
        l-load slot_contents%10#0 3                                                   arr#0,array%sub_item%14#1,slot_contents%13#0,array%bytes_index%7#1,slot_contents%10#0
        l-load array%bytes_index%7#1 1                                                arr#0,array%sub_item%14#1,slot_contents%13#0,slot_contents%10#0,array%bytes_index%7#1
        int 8                                                                         arr#0,array%sub_item%14#1,slot_contents%13#0,slot_contents%10#0,array%bytes_index%7#1,8
        extract3                                                                      arr#0,array%sub_item%14#1,slot_contents%13#0,array%value%7#1
        l-load array%value%7#1 0                                                      arr#0,array%sub_item%14#1,slot_contents%13#0,array%value%7#1
        int 0                                                                         arr#0,array%sub_item%14#1,slot_contents%13#0,array%value%7#1,0
        extract_uint64                                                                arr#0,array%sub_item%14#1,slot_contents%13#0,array%sub_item%16#1
        l-load array%sub_item%14#1 2                                                  arr#0,slot_contents%13#0,array%sub_item%16#1,array%sub_item%14#1
        int 8                                                                         arr#0,slot_contents%13#0,array%sub_item%16#1,array%sub_item%14#1,8
        *                                                                             arr#0,slot_contents%13#0,array%sub_item%16#1,array%bytes_index%8#1
        l-load array%sub_item%16#1 1                                                  arr#0,slot_contents%13#0,array%bytes_index%8#1,array%sub_item%16#1
        itob                                                                          arr#0,slot_contents%13#0,array%bytes_index%8#1,array%sub_item%17#1
        l-load slot_contents%13#0 2                                                   arr#0,array%bytes_index%8#1,array%sub_item%17#1,slot_contents%13#0
        l-load array%bytes_index%8#1 2                                                arr#0,array%sub_item%17#1,slot_contents%13#0,array%bytes_index%8#1
        l-load array%sub_item%17#1 2                                                  arr#0,slot_contents%13#0,array%bytes_index%8#1,array%sub_item%17#1
        replace3                                                                      arr#0,array%updated_array%0#1
        l-load arr#0 1                                                                array%updated_array%0#1,arr#0
        l-load-copy array%updated_array%0#1 1                                         array%updated_array%0#1,arr#0,array%updated_array%0#1 (copy)
        stores                                                                        array%updated_array%0#1
        // array/uint64.py:111
        // assert arr.length == 8
        l-load-copy array%updated_array%0#1 0                                         array%updated_array%0#1,array%updated_array%0#1 (copy)
        len                                                                           array%updated_array%0#1,array%bytes_len%2#1
        l-load array%bytes_len%2#1 0                                                  array%updated_array%0#1,array%bytes_len%2#1
        int 8                                                                         array%updated_array%0#1,array%bytes_len%2#1,8
        /                                                                             array%updated_array%0#1,array%array_len%2#1
        l-load array%array_len%2#1 0                                                  array%updated_array%0#1,array%array_len%2#1
        int 8                                                                         array%updated_array%0#1,array%array_len%2#1,8
        ==                                                                            array%updated_array%0#1,tmp%21#0
        l-load tmp%21#0 0                                                             array%updated_array%0#1,tmp%21#0
        assert                                                                        array%updated_array%0#1
        // array/uint64.py:112
        // assert arr[6] == 6
        l-load-copy array%updated_array%0#1 0                                         array%updated_array%0#1,array%updated_array%0#1 (copy)
        extract 48 8                                                                  array%updated_array%0#1,array%value%8#1
        l-load array%value%8#1 0                                                      array%updated_array%0#1,array%value%8#1
        int 0                                                                         array%updated_array%0#1,array%value%8#1,0
        extract_uint64                                                                array%updated_array%0#1,array%sub_item%19#1
        l-load array%sub_item%19#1 0                                                  array%updated_array%0#1,array%sub_item%19#1
        int 6                                                                         array%updated_array%0#1,array%sub_item%19#1,6
        ==                                                                            array%updated_array%0#1,tmp%23#0
        l-load tmp%23#0 0                                                             array%updated_array%0#1,tmp%23#0
        assert                                                                        array%updated_array%0#1
        // array/uint64.py:113
        // assert arr[7] == 7
        l-load-copy array%updated_array%0#1 0                                         array%updated_array%0#1,array%updated_array%0#1 (copy)
        extract 56 8                                                                  array%updated_array%0#1,array%value%9#1
        l-load array%value%9#1 0                                                      array%updated_array%0#1,array%value%9#1
        int 0                                                                         array%updated_array%0#1,array%value%9#1,0
        extract_uint64                                                                array%updated_array%0#1,array%sub_item%21#1
        l-load array%sub_item%21#1 0                                                  array%updated_array%0#1,array%sub_item%21#1
        int 7                                                                         array%updated_array%0#1,array%sub_item%21#1,7
        ==                                                                            array%updated_array%0#1,tmp%25#0
        l-load tmp%25#0 0                                                             array%updated_array%0#1,tmp%25#0
        assert                                                                        array%updated_array%0#1
        // array/uint64.py:114
        // assert arr[3] == 6
        l-load array%updated_array%0#1 0                                              array%updated_array%0#1
        extract 24 8                                                                  array%value%10#1
        l-load array%value%10#1 0                                                     array%value%10#1
        int 0                                                                         array%value%10#1,0
        extract_uint64                                                                array%sub_item%23#1
        l-load array%sub_item%23#1 0                                                  array%sub_item%23#1
        int 6                                                                         array%sub_item%23#1,6
        ==                                                                            tmp%27#0
        l-load tmp%27#0 0                                                             tmp%27#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_allocations(num: uint64) -> void:
subroutine test_allocations:
    test_allocations_block@0:                                                         (𝕡) num#0 |
        // array/uint64.py:118
        // for _i in urange(num):
        int 0                                                                         (𝕡) num#0 | 0
        v-store _i#0                                                                  (𝕡) num#0 |
        b test_allocations_for_header@1                                               (𝕡) num#0 |

    test_allocations_for_header@1:                                                    (𝕡) num#0 |
        // array/uint64.py:118
        // for _i in urange(num):
        v-load _i#0                                                                   (𝕡) num#0 | _i#0
        p-load num#0                                                                  (𝕡) num#0 | _i#0,num#0 (copy)
        <                                                                             (𝕡) num#0 | continue_looping%0#0
        l-load continue_looping%0#0 0                                                 (𝕡) num#0 | continue_looping%0#0
        bz test_allocations_after_for@4 ; b test_allocations_for_body@2               (𝕡) num#0 |

    test_allocations_for_body@2:                                                      (𝕡) num#0 |
        // array/uint64.py:119
        // alloc_test = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                (𝕡) num#0 | alloc_test#0
        l-load-copy alloc_test#0 0                                                    (𝕡) num#0 | alloc_test#0,alloc_test#0 (copy)
        byte 0x                                                                       (𝕡) num#0 | alloc_test#0,alloc_test#0 (copy),0x
        stores                                                                        (𝕡) num#0 | alloc_test#0
        // array/uint64.py:120
        // add_x(alloc_test, UInt64(1))
        l-load alloc_test#0 0                                                         (𝕡) num#0 | alloc_test#0
        int 1                                                                         (𝕡) num#0 | alloc_test#0,1
        callsub add_x                                                                 (𝕡) num#0 |
        // array/uint64.py:118
        // for _i in urange(num):
        v-load _i#0                                                                   (𝕡) num#0 | _i#0
        int 1                                                                         (𝕡) num#0 | _i#0,1
        +                                                                             (𝕡) num#0 | _i#0
        v-store _i#0                                                                  (𝕡) num#0 |
        b test_allocations_for_header@1                                               (𝕡) num#0 |

    test_allocations_after_for@4:                                                     (𝕡) num#0 |
        retsub


// test_cases.array.uint64.Contract.test_iteration() -> void:
subroutine test_iteration:
    test_iteration_block@0:
        // array/uint64.py:124
        // arr = Array[UInt64]()
        byte 0x                                                                       0x
        v-store slot%0
        // array/uint64.py:125
        // for val in urange(5):
        int 0                                                                         0
        v-store val#0
        b test_iteration_for_header@1

    test_iteration_for_header@1:
        // array/uint64.py:125
        // for val in urange(5):
        v-load val#0                                                                  val#0
        int 5                                                                         val#0,5
        <                                                                             continue_looping%0#0
        l-load continue_looping%0#0 0                                                 continue_looping%0#0
        bz test_iteration_after_for@4 ; b test_iteration_for_body@2

    test_iteration_for_body@2:
        // array/uint64.py:126
        // arr.append(val)
        v-load val#0                                                                  val#0
        l-store-copy val#0 0                                                          val#0,val#0 (copy)
        itob                                                                          val#0,array%sub_item%0#1
        v-load slot%0                                                                 val#0,array%sub_item%0#1,slot%0
        l-store slot_contents%0#0 0                                                   val#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    val#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   val#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 val#0,array%array_contents%0#1
        l-load array%array_contents%0#1 0                                             val#0,array%array_contents%0#1
        v-store slot%0                                                                val#0
        // array/uint64.py:125
        // for val in urange(5):
        l-load val#0 0                                                                val#0
        int 1                                                                         val#0,1
        +                                                                             val#0
        v-store val#0
        b test_iteration_for_header@1

    test_iteration_after_for@4:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:127
        // assert arr.length == 5, "expected array of length 5"
        l-store slot_contents%1#0 0                                                   slot_contents%1#0
        l-load slot_contents%1#0 0                                                    slot_contents%1#0
        len                                                                           array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  array%bytes_len%0#1
        int 8                                                                         array%bytes_len%0#1,8
        /                                                                             array%array_len%0#1
        l-store-copy array%array_len%0#1 0                                            array%array_len%0#1,array%array_len%0#1 (copy)
        v-store array%array_len%0#1                                                   array%array_len%0#1
        l-load array%array_len%0#1 0                                                  array%array_len%0#1
        int 5                                                                         array%array_len%0#1,5
        ==                                                                            tmp%1#0
        l-load tmp%1#0 0                                                              tmp%1#0
        assert // expected array of length 5
        // array/uint64.py:130
        // last = UInt64(0)
        int 0                                                                         0
        v-store last#0
        int 0                                                                         0
        v-store item_index_internal%0#0
        b test_iteration_for_header@5

    test_iteration_for_header@5:
        // array/uint64.py:131
        // for value in arr:
        v-load item_index_internal%0#0                                                item_index_internal%0#0
        v-load array%array_len%0#1                                                    item_index_internal%0#0,array%array_len%0#1
        <                                                                             continue_looping%1#0
        l-load continue_looping%1#0 0                                                 continue_looping%1#0
        bz test_iteration_after_for@8 ; b test_iteration_for_body@6

    test_iteration_for_body@6:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:131
        // for value in arr:
        l-store slot_contents%3#0 0                                                   slot_contents%3#0
        v-load item_index_internal%0#0                                                slot_contents%3#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                        item_index_internal%0#0,slot_contents%3#0,item_index_internal%0#0 (copy)
        int 8                                                                         item_index_internal%0#0,slot_contents%3#0,item_index_internal%0#0 (copy),8
        *                                                                             item_index_internal%0#0,slot_contents%3#0,array%bytes_index%0#1
        l-load slot_contents%3#0 1                                                    item_index_internal%0#0,array%bytes_index%0#1,slot_contents%3#0
        l-load array%bytes_index%0#1 1                                                item_index_internal%0#0,slot_contents%3#0,array%bytes_index%0#1
        int 8                                                                         item_index_internal%0#0,slot_contents%3#0,array%bytes_index%0#1,8
        extract3                                                                      item_index_internal%0#0,array%value%0#1
        l-load array%value%0#1 0                                                      item_index_internal%0#0,array%value%0#1
        int 0                                                                         item_index_internal%0#0,array%value%0#1,0
        extract_uint64                                                                item_index_internal%0#0,value#0
        // array/uint64.py:132
        // assert value >= last, "array is not sorted"
        l-load-copy value#0 0                                                         item_index_internal%0#0,value#0,value#0 (copy)
        v-load last#0                                                                 item_index_internal%0#0,value#0,value#0 (copy),last#0
        >=                                                                            item_index_internal%0#0,value#0,tmp%2#0
        l-load tmp%2#0 0                                                              item_index_internal%0#0,value#0,tmp%2#0
        assert // array is not sorted                                                 item_index_internal%0#0,value#0
        l-load item_index_internal%0#0 1                                              value#0,item_index_internal%0#0
        int 1                                                                         value#0,item_index_internal%0#0,1
        +                                                                             value#0,item_index_internal%0#0
        v-store item_index_internal%0#0                                               value#0
        l-load value#0 0                                                              value#0
        v-store last#0
        b test_iteration_for_header@5

    test_iteration_after_for@8:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:136
        // for idx, value in uenumerate(arr):
        l-store slot_contents%4#0 0                                                   slot_contents%4#0
        l-load slot_contents%4#0 0                                                    slot_contents%4#0
        len                                                                           array%bytes_len%2#1
        l-load array%bytes_len%2#1 0                                                  array%bytes_len%2#1
        int 8                                                                         array%bytes_len%2#1,8
        /                                                                             array%array_len%2#1
        v-store array%array_len%2#1
        int 0                                                                         0
        l-store item_index_internal%1#0 0                                             item_index_internal%1#0
        l-load item_index_internal%1#0 0                                              item_index_internal%1#0
        v-store idx#0
        b test_iteration_for_header@9

    test_iteration_for_header@9:
        // array/uint64.py:136
        // for idx, value in uenumerate(arr):
        v-load idx#0                                                                  idx#0
        v-load array%array_len%2#1                                                    idx#0,array%array_len%2#1
        <                                                                             continue_looping%2#0
        l-load continue_looping%2#0 0                                                 continue_looping%2#0
        bz test_iteration_after_for@12 ; b test_iteration_for_body@10

    test_iteration_for_body@10:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:136
        // for idx, value in uenumerate(arr):
        l-store slot_contents%5#0 0                                                   slot_contents%5#0
        v-load idx#0                                                                  slot_contents%5#0,idx#0
        l-store-copy idx#0 1                                                          idx#0,slot_contents%5#0,idx#0 (copy)
        int 8                                                                         idx#0,slot_contents%5#0,idx#0 (copy),8
        *                                                                             idx#0,slot_contents%5#0,array%bytes_index%1#1
        l-load slot_contents%5#0 1                                                    idx#0,array%bytes_index%1#1,slot_contents%5#0
        l-load array%bytes_index%1#1 1                                                idx#0,slot_contents%5#0,array%bytes_index%1#1
        int 8                                                                         idx#0,slot_contents%5#0,array%bytes_index%1#1,8
        extract3                                                                      idx#0,array%value%1#1
        l-load array%value%1#1 0                                                      idx#0,array%value%1#1
        int 0                                                                         idx#0,array%value%1#1,0
        extract_uint64                                                                idx#0,value#0
        // array/uint64.py:137
        // assert value == idx, "incorrect array value"
        l-load value#0 0                                                              idx#0,value#0
        l-load-copy idx#0 1                                                           idx#0,value#0,idx#0 (copy)
        ==                                                                            idx#0,tmp%3#0
        l-load tmp%3#0 0                                                              idx#0,tmp%3#0
        assert // incorrect array value                                               idx#0
        l-load idx#0 0                                                                idx#0
        int 1                                                                         idx#0,1
        +                                                                             item_index_internal%1#0
        l-load item_index_internal%1#0 0                                              item_index_internal%1#0
        v-store idx#0
        b test_iteration_for_header@9

    test_iteration_after_for@12:
        v-load slot%0                                                                 slot%0
        // array/uint64.py:140
        // for value in reversed(arr):
        l-store slot_contents%6#0 0                                                   slot_contents%6#0
        l-load slot_contents%6#0 0                                                    slot_contents%6#0
        len                                                                           array%bytes_len%3#1
        l-load array%bytes_len%3#1 0                                                  array%bytes_len%3#1
        int 8                                                                         array%bytes_len%3#1,8
        /                                                                             array%array_len%3#1
        l-load array%array_len%3#1 0                                                  array%array_len%3#1
        v-store reverse_index_internal%2#1
        b test_iteration_for_header@13

    test_iteration_for_header@13:
        // array/uint64.py:140
        // for value in reversed(arr):
        v-load reverse_index_internal%2#1                                             reverse_index_internal%2#1
        bz test_iteration_after_for@16 ; b test_iteration_for_body@14

    test_iteration_for_body@14:
        v-load reverse_index_internal%2#1                                             reverse_index_internal%2#1
        int 1                                                                         reverse_index_internal%2#1,1
        -                                                                             reverse_index_internal%2#1
        l-store-copy reverse_index_internal%2#1 0                                     reverse_index_internal%2#1,reverse_index_internal%2#1 (copy)
        v-store reverse_index_internal%2#1                                            reverse_index_internal%2#1
        v-load slot%0                                                                 reverse_index_internal%2#1,slot%0
        // array/uint64.py:140
        // for value in reversed(arr):
        l-store slot_contents%7#0 1                                                   slot_contents%7#0,reverse_index_internal%2#1
        l-load reverse_index_internal%2#1 0                                           slot_contents%7#0,reverse_index_internal%2#1
        int 8                                                                         slot_contents%7#0,reverse_index_internal%2#1,8
        *                                                                             slot_contents%7#0,array%bytes_index%2#1
        l-load slot_contents%7#0 1                                                    array%bytes_index%2#1,slot_contents%7#0
        l-load array%bytes_index%2#1 1                                                slot_contents%7#0,array%bytes_index%2#1
        int 8                                                                         slot_contents%7#0,array%bytes_index%2#1,8
        extract3                                                                      array%value%2#1
        l-load array%value%2#1 0                                                      array%value%2#1
        int 0                                                                         array%value%2#1,0
        extract_uint64                                                                value#0
        // array/uint64.py:141
        // assert value <= last, "array is not sorted"
        l-load-copy value#0 0                                                         value#0,value#0 (copy)
        v-load last#0                                                                 value#0,value#0 (copy),last#0
        <=                                                                            value#0,tmp%4#0
        l-load tmp%4#0 0                                                              value#0,tmp%4#0
        assert // array is not sorted                                                 value#0
        l-load value#0 0                                                              value#0
        v-store last#0
        b test_iteration_for_header@13

    test_iteration_after_for@16:
        // array/uint64.py:144
        // arc4_arr = arc4.DynamicArray[arc4.UInt64]()
        byte 0x0000                                                                   0x0000
        v-store arc4_arr#0
        // array/uint64.py:145
        // native_arr = Array[arc4.UInt64]()
        byte 0x                                                                       0x
        v-store slot%1
        // array/uint64.py:146
        // for i in urange(5):
        int 0                                                                         0
        v-store i#0
        b test_iteration_for_header@17

    test_iteration_for_header@17:
        // array/uint64.py:146
        // for i in urange(5):
        v-load i#0                                                                    i#0
        int 5                                                                         i#0,5
        <                                                                             continue_looping%4#0
        l-load continue_looping%4#0 0                                                 continue_looping%4#0
        bz test_iteration_after_for@20 ; b test_iteration_for_body@18

    test_iteration_for_body@18:
        // array/uint64.py:147
        // arc4_arr.append(arc4.UInt64(i))
        v-load arc4_arr#0                                                             arc4_arr#0
        extract 2 0                                                                   expr_value_trimmed%0#0
        v-load i#0                                                                    expr_value_trimmed%0#0,i#0
        l-store-copy i#0 1                                                            i#0,expr_value_trimmed%0#0,i#0 (copy)
        itob                                                                          i#0,expr_value_trimmed%0#0,val_as_bytes%0#0
        l-load expr_value_trimmed%0#0 1                                               i#0,val_as_bytes%0#0,expr_value_trimmed%0#0
        l-load-copy val_as_bytes%0#0 1                                                i#0,val_as_bytes%0#0,expr_value_trimmed%0#0,val_as_bytes%0#0 (copy)
        concat                                                                        i#0,val_as_bytes%0#0,concatenated%0#0
        l-load-copy concatenated%0#0 0                                                i#0,val_as_bytes%0#0,concatenated%0#0,concatenated%0#0 (copy)
        len                                                                           i#0,val_as_bytes%0#0,concatenated%0#0,byte_len%0#0
        l-load byte_len%0#0 0                                                         i#0,val_as_bytes%0#0,concatenated%0#0,byte_len%0#0
        int 8                                                                         i#0,val_as_bytes%0#0,concatenated%0#0,byte_len%0#0,8
        /                                                                             i#0,val_as_bytes%0#0,concatenated%0#0,len_%0#0
        l-load len_%0#0 0                                                             i#0,val_as_bytes%0#0,concatenated%0#0,len_%0#0
        itob                                                                          i#0,val_as_bytes%0#0,concatenated%0#0,as_bytes%0#0
        l-load as_bytes%0#0 0                                                         i#0,val_as_bytes%0#0,concatenated%0#0,as_bytes%0#0
        extract 6 2                                                                   i#0,val_as_bytes%0#0,concatenated%0#0,len_16_bit%0#0
        l-load len_16_bit%0#0 0                                                       i#0,val_as_bytes%0#0,concatenated%0#0,len_16_bit%0#0
        l-load concatenated%0#0 1                                                     i#0,val_as_bytes%0#0,len_16_bit%0#0,concatenated%0#0
        concat                                                                        i#0,val_as_bytes%0#0,arc4_arr#0
        v-store arc4_arr#0                                                            i#0,val_as_bytes%0#0
        v-load slot%1                                                                 i#0,val_as_bytes%0#0,slot%1
        // array/uint64.py:148
        // native_arr.append(arc4.UInt64(i))
        l-store slot_contents%8#0 0                                                   i#0,val_as_bytes%0#0,slot_contents%8#0
        l-load slot_contents%8#0 0                                                    i#0,val_as_bytes%0#0,slot_contents%8#0
        l-load val_as_bytes%0#0 1                                                     i#0,slot_contents%8#0,val_as_bytes%0#0
        concat // on error: max array length exceeded                                 i#0,array%array_contents%1#1
        l-load array%array_contents%1#1 0                                             i#0,array%array_contents%1#1
        v-store slot%1                                                                i#0
        // array/uint64.py:146
        // for i in urange(5):
        l-load i#0 0                                                                  i#0
        int 1                                                                         i#0,1
        +                                                                             i#0
        v-store i#0
        b test_iteration_for_header@17

    test_iteration_after_for@20:
        // array/uint64.py:149
        // combined_arr = arc4_arr + native_arr
        v-load arc4_arr#0                                                             arc4_arr#0
        extract 2 0                                                                   expr_value_trimmed%1#0
        v-load slot%1                                                                 expr_value_trimmed%1#0,slot%1
        l-store slot_contents%9#0 0                                                   expr_value_trimmed%1#0,slot_contents%9#0
        l-load expr_value_trimmed%1#0 1                                               slot_contents%9#0,expr_value_trimmed%1#0
        l-load slot_contents%9#0 1                                                    expr_value_trimmed%1#0,slot_contents%9#0
        concat                                                                        concatenated%1#0
        l-load-copy concatenated%1#0 0                                                concatenated%1#0,concatenated%1#0 (copy)
        len                                                                           concatenated%1#0,byte_len%1#0
        l-load byte_len%1#0 0                                                         concatenated%1#0,byte_len%1#0
        int 8                                                                         concatenated%1#0,byte_len%1#0,8
        /                                                                             concatenated%1#0,len_%1#0
        l-load len_%1#0 0                                                             concatenated%1#0,len_%1#0
        itob                                                                          concatenated%1#0,as_bytes%1#0
        l-load as_bytes%1#0 0                                                         concatenated%1#0,as_bytes%1#0
        extract 6 2                                                                   concatenated%1#0,len_16_bit%1#0
        l-load len_16_bit%1#0 0                                                       concatenated%1#0,len_16_bit%1#0
        l-load concatenated%1#0 1                                                     len_16_bit%1#0,concatenated%1#0
        concat                                                                        combined_arr#0
        // array/uint64.py:150
        // assert combined_arr.length == 10
        l-load-copy combined_arr#0 0                                                  combined_arr#0,combined_arr#0 (copy)
        int 0                                                                         combined_arr#0,combined_arr#0 (copy),0
        extract_uint16                                                                combined_arr#0,tmp%5#0
        l-load tmp%5#0 0                                                              combined_arr#0,tmp%5#0
        int 10                                                                        combined_arr#0,tmp%5#0,10
        ==                                                                            combined_arr#0,tmp%6#0
        l-load tmp%6#0 0                                                              combined_arr#0,tmp%6#0
        assert                                                                        combined_arr#0
        // array/uint64.py:151
        // assert combined_arr[0] == 0
        l-load-copy combined_arr#0 0                                                  combined_arr#0,combined_arr#0 (copy)
        extract 2 8                                                                   combined_arr#0,reinterpret_biguint%0#0
        l-load reinterpret_biguint%0#0 0                                              combined_arr#0,reinterpret_biguint%0#0
        byte 0x0000000000000000                                                       combined_arr#0,reinterpret_biguint%0#0,0x0000000000000000
        b==                                                                           combined_arr#0,tmp%7#0
        l-load tmp%7#0 0                                                              combined_arr#0,tmp%7#0
        assert                                                                        combined_arr#0
        // array/uint64.py:152
        // assert combined_arr[4] == 4
        l-load-copy combined_arr#0 0                                                  combined_arr#0,combined_arr#0 (copy)
        extract 34 8                                                                  combined_arr#0,reinterpret_biguint%2#0
        l-load reinterpret_biguint%2#0 0                                              combined_arr#0,reinterpret_biguint%2#0
        byte 0x0000000000000004                                                       combined_arr#0,reinterpret_biguint%2#0,0x0000000000000004
        b==                                                                           combined_arr#0,tmp%8#0
        l-load tmp%8#0 0                                                              combined_arr#0,tmp%8#0
        assert                                                                        combined_arr#0
        // array/uint64.py:153
        // assert combined_arr[5] == 0
        l-load-copy combined_arr#0 0                                                  combined_arr#0,combined_arr#0 (copy)
        extract 42 8                                                                  combined_arr#0,reinterpret_biguint%4#0
        l-load reinterpret_biguint%4#0 0                                              combined_arr#0,reinterpret_biguint%4#0
        byte 0x0000000000000000                                                       combined_arr#0,reinterpret_biguint%4#0,0x0000000000000000
        b==                                                                           combined_arr#0,tmp%9#0
        l-load tmp%9#0 0                                                              combined_arr#0,tmp%9#0
        assert                                                                        combined_arr#0
        // array/uint64.py:154
        // assert combined_arr[9] == 4
        l-load combined_arr#0 0                                                       combined_arr#0
        extract 74 8                                                                  reinterpret_biguint%6#0
        l-load reinterpret_biguint%6#0 0                                              reinterpret_biguint%6#0
        byte 0x0000000000000004                                                       reinterpret_biguint%6#0,0x0000000000000004
        b==                                                                           tmp%10#0
        l-load tmp%10#0 0                                                             tmp%10#0
        assert
        retsub


// test_cases.array.uint64.Contract.test_quicksort() -> void:
subroutine test_quicksort:
    test_quicksort_block@0:
        // array/uint64.py:159
        // rnd = Array[UInt64]()
        callsub _puya_lib.mem.new_slot                                                rnd#0
        l-store-copy rnd#0 0                                                          rnd#0,rnd#0 (copy)
        v-store rnd#0                                                                 rnd#0
        l-load rnd#0 0                                                                rnd#0
        byte 0x                                                                       rnd#0,0x
        stores
        // array/uint64.py:160
        // for b in Txn.sender.bytes:
        txn Sender                                                                    tmp%0#0
        v-store tmp%0#0
        int 0                                                                         0
        v-store item_index_internal%0#0
        b test_quicksort_for_header@1

    test_quicksort_for_header@1:
        // array/uint64.py:160
        // for b in Txn.sender.bytes:
        v-load item_index_internal%0#0                                                item_index_internal%0#0
        int 32                                                                        item_index_internal%0#0,32
        <                                                                             continue_looping%0#0
        l-load continue_looping%0#0 0                                                 continue_looping%0#0
        bz test_quicksort_after_for@4 ; b test_quicksort_for_body@2

    test_quicksort_for_body@2:
        // array/uint64.py:161
        // rnd.append(op.btoi(b))
        v-load tmp%0#0                                                                tmp%0#0
        v-load item_index_internal%0#0                                                tmp%0#0,item_index_internal%0#0
        l-store-copy item_index_internal%0#0 1                                        item_index_internal%0#0,tmp%0#0,item_index_internal%0#0 (copy)
        getbyte                                                                       item_index_internal%0#0,tmp%1#0
        l-load tmp%1#0 0                                                              item_index_internal%0#0,tmp%1#0
        itob                                                                          item_index_internal%0#0,array%sub_item%0#1
        v-load rnd#0                                                                  item_index_internal%0#0,array%sub_item%0#1,rnd#0
        l-store-copy rnd#0 1                                                          item_index_internal%0#0,rnd#0,array%sub_item%0#1,rnd#0 (copy)
        loads                                                                         item_index_internal%0#0,rnd#0,array%sub_item%0#1,slot_contents%0#0
        l-load slot_contents%0#0 0                                                    item_index_internal%0#0,rnd#0,array%sub_item%0#1,slot_contents%0#0
        l-load array%sub_item%0#1 1                                                   item_index_internal%0#0,rnd#0,slot_contents%0#0,array%sub_item%0#1
        concat // on error: max array length exceeded                                 item_index_internal%0#0,rnd#0,array%array_contents%0#1
        l-load rnd#0 1                                                                item_index_internal%0#0,array%array_contents%0#1,rnd#0
        l-load array%array_contents%0#1 1                                             item_index_internal%0#0,rnd#0,array%array_contents%0#1
        stores                                                                        item_index_internal%0#0
        l-load item_index_internal%0#0 0                                              item_index_internal%0#0
        int 1                                                                         item_index_internal%0#0,1
        +                                                                             item_index_internal%0#0
        v-store item_index_internal%0#0
        b test_quicksort_for_header@1

    test_quicksort_after_for@4:
        // array/uint64.py:162
        // assert rnd.length == 32, "expected array of length 32"
        v-load rnd#0                                                                  rnd#0
        l-store-copy rnd#0 0                                                          rnd#0,rnd#0 (copy)
        loads                                                                         rnd#0,slot_contents%1#0
        l-load slot_contents%1#0 0                                                    rnd#0,slot_contents%1#0
        len                                                                           rnd#0,array%bytes_len%0#1
        l-load array%bytes_len%0#1 0                                                  rnd#0,array%bytes_len%0#1
        int 8                                                                         rnd#0,array%bytes_len%0#1,8
        /                                                                             rnd#0,array%array_len%0#1
        l-load-copy array%array_len%0#1 0                                             rnd#0,array%array_len%0#1,array%array_len%0#1 (copy)
        int 32                                                                        rnd#0,array%array_len%0#1,array%array_len%0#1 (copy),32
        ==                                                                            rnd#0,array%array_len%0#1,tmp%3#0
        l-load tmp%3#0 0                                                              rnd#0,array%array_len%0#1,tmp%3#0
        assert // expected array of length 32                                         rnd#0,array%array_len%0#1
        // array/uint64.py:165
        // quicksort_window(rnd, UInt64(0), rnd.length - 1)
        l-load array%array_len%0#1 0                                                  rnd#0,array%array_len%0#1
        int 1                                                                         rnd#0,array%array_len%0#1,1
        -                                                                             rnd#0,tmp%5#0
        l-load-copy rnd#0 1                                                           rnd#0,tmp%5#0,rnd#0 (copy)
        int 0                                                                         rnd#0,tmp%5#0,rnd#0 (copy),0
        l-load tmp%5#0 2                                                              rnd#0,rnd#0 (copy),0,tmp%5#0
        callsub quicksort_window                                                      rnd#0
        // array/uint64.py:168
        // last = UInt64(0)
        int 0                                                                         rnd#0,0
        v-store last#0                                                                rnd#0
        // array/uint64.py:169
        // for value in rnd:
        l-load rnd#0 0                                                                rnd#0
        loads                                                                         slot_contents%3#0
        l-load slot_contents%3#0 0                                                    slot_contents%3#0
        len                                                                           array%bytes_len%2#1
        l-load array%bytes_len%2#1 0                                                  array%bytes_len%2#1
        int 8                                                                         array%bytes_len%2#1,8
        /                                                                             array%array_len%2#1
        v-store array%array_len%2#1
        int 0                                                                         0
        v-store item_index_internal%1#0
        b test_quicksort_for_header@5

    test_quicksort_for_header@5:
        // array/uint64.py:169
        // for value in rnd:
        v-load item_index_internal%1#0                                                item_index_internal%1#0
        v-load array%array_len%2#1                                                    item_index_internal%1#0,array%array_len%2#1
        <                                                                             continue_looping%1#0
        l-load continue_looping%1#0 0                                                 continue_looping%1#0
        bz test_quicksort_after_for@8 ; b test_quicksort_for_body@6

    test_quicksort_for_body@6:
        // array/uint64.py:169
        // for value in rnd:
        v-load rnd#0                                                                  rnd#0
        loads                                                                         slot_contents%4#0
        v-load item_index_internal%1#0                                                slot_contents%4#0,item_index_internal%1#0
        l-store-copy item_index_internal%1#0 1                                        item_index_internal%1#0,slot_contents%4#0,item_index_internal%1#0 (copy)
        int 8                                                                         item_index_internal%1#0,slot_contents%4#0,item_index_internal%1#0 (copy),8
        *                                                                             item_index_internal%1#0,slot_contents%4#0,array%bytes_index%0#1
        l-load slot_contents%4#0 1                                                    item_index_internal%1#0,array%bytes_index%0#1,slot_contents%4#0
        l-load array%bytes_index%0#1 1                                                item_index_internal%1#0,slot_contents%4#0,array%bytes_index%0#1
        int 8                                                                         item_index_internal%1#0,slot_contents%4#0,array%bytes_index%0#1,8
        extract3                                                                      item_index_internal%1#0,array%value%0#1
        l-load array%value%0#1 0                                                      item_index_internal%1#0,array%value%0#1
        int 0                                                                         item_index_internal%1#0,array%value%0#1,0
        extract_uint64                                                                item_index_internal%1#0,value#0
        // array/uint64.py:170
        // assert value >= last, "array is not sorted"
        l-load-copy value#0 0                                                         item_index_internal%1#0,value#0,value#0 (copy)
        v-load last#0                                                                 item_index_internal%1#0,value#0,value#0 (copy),last#0
        >=                                                                            item_index_internal%1#0,value#0,tmp%6#0
        l-load tmp%6#0 0                                                              item_index_internal%1#0,value#0,tmp%6#0
        assert // array is not sorted                                                 item_index_internal%1#0,value#0
        l-load item_index_internal%1#0 1                                              value#0,item_index_internal%1#0
        int 1                                                                         value#0,item_index_internal%1#0,1
        +                                                                             value#0,item_index_internal%1#0
        v-store item_index_internal%1#0                                               value#0
        l-load value#0 0                                                              value#0
        v-store last#0
        b test_quicksort_for_header@5

    test_quicksort_after_for@8:
        retsub


// _puya_lib.mem.new_slot() -> uint64:
subroutine _puya_lib.mem.new_slot:
    _puya_lib.mem.new_slot@entry:
        load 0                                                                        slot_allocations
        bitlen                                                                        {bitlen}
        l-store free_slot#0 0                                                         free_slot#0
        load 0                                                                        free_slot#0,slot_allocations
        int 256                                                                       free_slot#0,slot_allocations,256
        l-load-copy free_slot#0 2                                                     free_slot#0,slot_allocations,256,free_slot#0 (copy)
        -                                                                             free_slot#0,slot_allocations,free_slot_idx
        int 0                                                                         free_slot#0,slot_allocations,free_slot_idx,0
        setbit // on error: no available slots                                        free_slot#0,new_slot_allocations
        store 0                                                                       free_slot#0
        l-load free_slot#0 0                                                          free_slot#0
        retsub                                                                        free_slot#0


