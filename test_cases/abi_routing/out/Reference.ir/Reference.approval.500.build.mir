// Op                                                                                              Stack (out)
// algopy.arc4.ARC4Contract.approval_program() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                          tmp%0#0
        v-store tmp%0#0
        v-load tmp%0#0                                                                             tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // abi_routing/contract.py:26
        // self.asa = Asset(123)
        byte "asa"                                                                                 "asa"
        int 123                                                                                    "asa",123
        app_global_put
        // abi_routing/contract.py:27
        // self.an_int = UInt64(2)
        byte "an_int"                                                                              "an_int"
        int 2                                                                                      "an_int",2
        app_global_put
        // abi_routing/contract.py:28
        // self.some_bytes = Bytes3(arc4.Byte(7), arc4.Byte(8), arc4.Byte(9))
        byte "some_bytes"                                                                          "some_bytes"
        byte 0x070809                                                                              "some_bytes",0x070809
        app_global_put
        // abi_routing/contract.py:29
        // self.creator = op.Txn.sender
        txn Sender                                                                                 tmp%0#2
        v-store tmp%0#2
        byte "creator"                                                                             "creator"
        v-load tmp%0#2                                                                             "creator",tmp%0#2
        app_global_put
        // abi_routing/contract.py:30
        // self.app = Application(123)
        byte "app"                                                                                 "app"
        int 123                                                                                    "app",123
        app_global_put
        b main_after_if_else@2

    main_after_if_else@2:
        // abi_routing/contract.py:24
        // class Reference(ARC4Contract):
        txn NumAppArgs                                                                             tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        bz main_bare_abi_config@25 ; b main_abi_routing@4

    main_abi_routing@4:
        // abi_routing/contract.py:24
        // class Reference(ARC4Contract):
        txna ApplicationArgs 0                                                                     tmp%2#0
        v-store tmp%2#0
        method opt_in(uint64,byte[])void                                                           Method(opt_in(uint64,byte[])void)
        method all_the_things(uint64)uint8                                                         Method(opt_in(uint64,byte[])void),Method(all_the_things(uint64)uint8)
        method mixed_oca(uint64)uint8                                                              Method(opt_in(uint64,byte[])void),Method(all_the_things(uint64)uint8),Method(mixed_oca(uint64)uint8)
        v-load tmp%2#0                                                                             Method(opt_in(uint64,byte[])void),Method(all_the_things(uint64)uint8),Method(mixed_oca(uint64)uint8),tmp%2#0
        match main_opt_in_route@5 main_all_the_things_route@6 main_mixed_oca_route@7 ; b main_switch_case_next@8 

    main_opt_in_route@5:
        // abi_routing/contract.py:45
        // @arc4.abimethod(allow_actions=[OnCompleteAction.OptIn])
        txn OnCompletion                                                                           tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                             tmp%3#0
        int OptIn                                                                                  tmp%3#0,OptIn
        ==                                                                                         tmp%4#0
        v-store tmp%4#0
        txn ApplicationID                                                                          tmp%5#0
        v-store tmp%5#0
        v-load tmp%4#0                                                                             tmp%4#0
        v-load tmp%5#0                                                                             tmp%4#0,tmp%5#0
        &&                                                                                         tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                             tmp%7#0
        assert // OnCompletion must be OptIn && can only call when not creating
        callsub opt_in
        b main_switch_case_next@8

    main_all_the_things_route@6:
        // abi_routing/contract.py:50-61
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         OnCompleteAction.OptIn,
        //         "CloseOut",
        //         OnCompleteAction.UpdateApplication,
        //         OnCompleteAction.DeleteApplication,
        //     ],
        //     name="all_the_things",
        //     create="allow",
        //     readonly=True,
        // )
        callsub full_abi_config
        b main_switch_case_next@8

    main_mixed_oca_route@7:
        // abi_routing/contract.py:66-74
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         "CloseOut",
        //         "DeleteApplication",
        //     ],
        //     create="disallow",
        //     readonly=True,
        // )
        txn OnCompletion                                                                           tmp%8#0
        v-store tmp%8#0
        int 1                                                                                      1
        v-load tmp%8#0                                                                             1,tmp%8#0
        shl                                                                                        tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                             tmp%9#0
        int 37                                                                                     tmp%9#0,37
        &                                                                                          tmp%10#0
        v-store tmp%10#0
        txn ApplicationID                                                                          tmp%11#0
        v-store tmp%11#0
        v-load tmp%10#0                                                                            tmp%10#0
        v-load tmp%11#0                                                                            tmp%10#0,tmp%11#0
        &&                                                                                         tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                            tmp%13#0
        assert // OnCompletion must be one of NoOp, CloseOut, DeleteApplication && can only call when not creating 
        callsub mixed_oca
        b main_switch_case_next@8

    main_switch_case_next@8:
        // abi_routing/contract.py:24
        // class Reference(ARC4Contract):
        txn OnCompletion                                                                           tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                            tmp%14#0
        !                                                                                          tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                            tmp%15#0
        assert // OnCompletion must be NoOp
        txn ApplicationID                                                                          tmp%16#0
        v-store tmp%16#0
        v-load tmp%16#0                                                                            tmp%16#0
        assert
        txna ApplicationArgs 0                                                                     tmp%18#0
        v-store tmp%18#0
        method noop_with_uint64(uint64)uint8                                                       Method(noop_with_uint64(uint64)uint8)
        method opt_into_asset(uint64)void                                                          Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void)
        method with_transactions(uint64,uint64,pay,uint64)void                                     Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void)
        method compare_assets(uint64,uint64)void                                                   Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void)
        method get_address()address                                                                Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address)
        method get_asset()uint64                                                                   Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64)
        method get_application()uint64                                                             Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64)
        method get_an_int()uint64                                                                  Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64)
        method method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64),Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void)
        method method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[] Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64),Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void),Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[])
        method method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64 Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64),Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void),Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]),Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64)
        method hello_with_algopy_string(string)string                                              Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64),Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void),Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]),Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64),Method(hello_with_algopy_string(string)string)
        v-load tmp%18#0                                                                            Method(noop_with_uint64(uint64)uint8),Method(opt_into_asset(uint64)void),Method(with_transactions(uint64,uint64,pay,uint64)void),Method(compare_assets(uint64,uint64)void),Method(get_address()address),Method(get_asset()uint64),Method(get_application()uint64),Method(get_an_int()uint64),Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void),Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]),Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64),Method(hello_with_algopy_string(string)string),tmp%18#0
        match main_noop_with_uint64_route@10 main_opt_into_asset_route@11 main_with_transactions_route@12 main_compare_assets_route@13 main_get_address_route@14 main_get_asset_route@15 main_get_application_route@16 main_get_an_int_route@17 main_method_with_default_args_route@18 main_method_with_15_args_route@19 main_method_with_more_than_15_args_route@20 main_hello_with_algopy_string_route@21 ; b main_after_if_else@24 

    main_noop_with_uint64_route@10:
        // abi_routing/contract.py:40
        // @arc4.abimethod
        callsub noop_with_uint64
        b main_after_if_else@24

    main_opt_into_asset_route@11:
        // abi_routing/contract.py:92
        // @arc4.abimethod
        callsub opt_into_asset
        b main_after_if_else@24

    main_with_transactions_route@12:
        // abi_routing/contract.py:109
        // @arc4.abimethod
        callsub with_transactions
        b main_after_if_else@24

    main_compare_assets_route@13:
        // abi_routing/contract.py:122
        // @arc4.abimethod
        callsub compare_assets
        b main_after_if_else@24

    main_get_address_route@14:
        // abi_routing/contract.py:126
        // @arc4.abimethod(readonly=True)
        byte CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA                            CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        log
        int 1                                                                                      1
        return

    main_get_asset_route@15:
        // abi_routing/contract.py:130
        // @arc4.abimethod(readonly=True)
        byte 0x151f7c7500000000000001c8                                                            0x151f7c7500000000000001c8
        log
        int 1                                                                                      1
        return

    main_get_application_route@16:
        // abi_routing/contract.py:134
        // @arc4.abimethod(readonly=True, name="get_application")
        byte 0x151f7c7500000000000001c8                                                            0x151f7c7500000000000001c8
        log
        int 1                                                                                      1
        return

    main_get_an_int_route@17:
        // abi_routing/contract.py:138
        // @arc4.abimethod(readonly=True, name="get_an_int")
        byte 0x151f7c750000000000000003                                                            0x151f7c750000000000000003
        log
        int 1                                                                                      1
        return

    main_method_with_default_args_route@18:
        // abi_routing/contract.py:142-158
        // @arc4.abimethod(
        //     default_args={
        //         "asset_from_storage": "asa",
        //         "asset_from_function": get_asset,
        //         "account_from_storage": "creator",
        //         "account_from_function": "get_address",
        //         "application_from_storage": "app",
        //         "application_from_function": get_app,
        //         "bytes_from_storage": "some_bytes",
        //         "int_from_storage": "an_int",
        //         "int_from_function": "get_a_int",
        //         "int_from_const": arc4.UInt32(123),
        //         "str_from_const": arc4.String("abc"),
        //         "int_from_local": "local_uint",
        //         "bytes_from_local": "local_bytes",
        //     }
        // )
        callsub method_with_default_args
        b main_after_if_else@24

    main_method_with_15_args_route@19:
        // abi_routing/contract.py:191
        // @arc4.abimethod
        callsub method_with_15_args
        b main_after_if_else@24

    main_method_with_more_than_15_args_route@20:
        // abi_routing/contract.py:229
        // @arc4.abimethod
        callsub method_with_more_than_15_args
        b main_after_if_else@24

    main_hello_with_algopy_string_route@21:
        // abi_routing/contract.py:295
        // @arc4.abimethod
        callsub hello_with_algopy_string
        b main_after_if_else@24

    main_after_if_else@24:
        // abi_routing/contract.py:24
        // class Reference(ARC4Contract):
        err

    main_bare_abi_config@25:
        // abi_routing/contract.py:79-88
        // @arc4.baremethod(
        //     allow_actions=[
        //         "NoOp",
        //         "OptIn",
        //         "CloseOut",
        //         "UpdateApplication",
        //         "DeleteApplication",
        //     ],
        //     create="require",
        // )
        txn ApplicationID                                                                          tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                            tmp%19#0
        !                                                                                          tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                                            tmp%20#0
        assert // can only call when creating
        // abi_routing/contract.py:90
        // log("Hello World")
        byte "Hello World"                                                                         "Hello World"
        log
        // abi_routing/contract.py:79-88
        // @arc4.baremethod(
        //     allow_actions=[
        //         "NoOp",
        //         "OptIn",
        //         "CloseOut",
        //         "UpdateApplication",
        //         "DeleteApplication",
        //     ],
        //     create="require",
        // )
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.noop_with_uint64[routing]() -> void:
subroutine noop_with_uint64:
    noop_with_uint64_block@0:
        // abi_routing/contract.py:40
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     a#0
        v-store a#0
        // abi_routing/contract.py:42
        // result = 1 + a.as_uint64()
        v-load a#0                                                                                 a#0
        btoi                                                                                       tmp%0#1
        v-store tmp%0#1
        int 1                                                                                      1
        v-load tmp%0#1                                                                             1,tmp%0#1
        +                                                                                          result#0
        v-store result#0
        // abi_routing/contract.py:43
        // return arc4.UInt8(result)
        v-load result#0                                                                            result#0
        itob                                                                                       aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        bitlen                                                                                     aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                aggregate%bitlen%0#0
        int 8                                                                                      aggregate%bitlen%0#0,8
        <=                                                                                         aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                           aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        extract 7 1                                                                                aggregate%uint8%0#0
        v-store aggregate%uint8%0#0
        // abi_routing/contract.py:40
        // @arc4.abimethod
        byte 0x151f7c75                                                                            0x151f7c75
        v-load aggregate%uint8%0#0                                                                 0x151f7c75,aggregate%uint8%0#0
        concat                                                                                     tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                             tmp%1#0
        log
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.opt_in[routing]() -> void:
subroutine opt_in:
    opt_in_block@0:
        // abi_routing/contract.py:45
        // @arc4.abimethod(allow_actions=[OnCompleteAction.OptIn])
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       uint#0
        v-store uint#0
        txna ApplicationArgs 2                                                                     reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                                reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                                bites#0
        v-store bites#0
        // abi_routing/contract.py:47
        // self.local_uint[Txn.sender] = uint
        txn Sender                                                                                 tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        byte "local_uint"                                                                          tmp%0#1,"local_uint"
        v-load uint#0                                                                              tmp%0#1,"local_uint",uint#0
        app_local_put
        // abi_routing/contract.py:48
        // self.local_bytes[Txn.sender] = bites
        txn Sender                                                                                 tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                             tmp%1#1
        byte "local_bytes"                                                                         tmp%1#1,"local_bytes"
        v-load bites#0                                                                             tmp%1#1,"local_bytes",bites#0
        app_local_put
        // abi_routing/contract.py:45
        // @arc4.abimethod(allow_actions=[OnCompleteAction.OptIn])
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.full_abi_config[routing]() -> void:
subroutine full_abi_config:
    full_abi_config_block@0:
        // abi_routing/contract.py:50-61
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         OnCompleteAction.OptIn,
        //         "CloseOut",
        //         OnCompleteAction.UpdateApplication,
        //         OnCompleteAction.DeleteApplication,
        //     ],
        //     name="all_the_things",
        //     create="allow",
        //     readonly=True,
        // )
        txna ApplicationArgs 1                                                                     a#0
        v-store a#0
        // abi_routing/contract.py:63
        // result = UInt64(1) + a.as_uint64()
        v-load a#0                                                                                 a#0
        btoi                                                                                       tmp%0#1
        v-store tmp%0#1
        int 1                                                                                      1
        v-load tmp%0#1                                                                             1,tmp%0#1
        +                                                                                          result#0
        v-store result#0
        // abi_routing/contract.py:64
        // return arc4.UInt8(result)
        v-load result#0                                                                            result#0
        itob                                                                                       aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        bitlen                                                                                     aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                aggregate%bitlen%0#0
        int 8                                                                                      aggregate%bitlen%0#0,8
        <=                                                                                         aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                           aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        extract 7 1                                                                                aggregate%uint8%0#0
        v-store aggregate%uint8%0#0
        // abi_routing/contract.py:50-61
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         OnCompleteAction.OptIn,
        //         "CloseOut",
        //         OnCompleteAction.UpdateApplication,
        //         OnCompleteAction.DeleteApplication,
        //     ],
        //     name="all_the_things",
        //     create="allow",
        //     readonly=True,
        // )
        byte 0x151f7c75                                                                            0x151f7c75
        v-load aggregate%uint8%0#0                                                                 0x151f7c75,aggregate%uint8%0#0
        concat                                                                                     tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                             tmp%1#0
        log
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.mixed_oca[routing]() -> void:
subroutine mixed_oca:
    mixed_oca_block@0:
        // abi_routing/contract.py:66-74
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         "CloseOut",
        //         "DeleteApplication",
        //     ],
        //     create="disallow",
        //     readonly=True,
        // )
        txna ApplicationArgs 1                                                                     a#0
        v-store a#0
        // abi_routing/contract.py:76
        // result = UInt64(1) + a.as_uint64()
        v-load a#0                                                                                 a#0
        btoi                                                                                       tmp%0#1
        v-store tmp%0#1
        int 1                                                                                      1
        v-load tmp%0#1                                                                             1,tmp%0#1
        +                                                                                          result#0
        v-store result#0
        // abi_routing/contract.py:77
        // return arc4.UInt8(result)
        v-load result#0                                                                            result#0
        itob                                                                                       aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        bitlen                                                                                     aggregate%bitlen%0#0
        v-store aggregate%bitlen%0#0
        v-load aggregate%bitlen%0#0                                                                aggregate%bitlen%0#0
        int 8                                                                                      aggregate%bitlen%0#0,8
        <=                                                                                         aggregate%no_overflow%0#0
        v-store aggregate%no_overflow%0#0
        v-load aggregate%no_overflow%0#0                                                           aggregate%no_overflow%0#0
        assert // overflow
        v-load aggregate%val_as_bytes%0#0                                                          aggregate%val_as_bytes%0#0
        extract 7 1                                                                                aggregate%uint8%0#0
        v-store aggregate%uint8%0#0
        // abi_routing/contract.py:66-74
        // @arc4.abimethod(
        //     allow_actions=[
        //         "NoOp",
        //         "CloseOut",
        //         "DeleteApplication",
        //     ],
        //     create="disallow",
        //     readonly=True,
        // )
        byte 0x151f7c75                                                                            0x151f7c75
        v-load aggregate%uint8%0#0                                                                 0x151f7c75,aggregate%uint8%0#0
        concat                                                                                     tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                             tmp%1#0
        log
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.opt_into_asset[routing]() -> void:
subroutine opt_into_asset:
    opt_into_asset_block@0:
        // abi_routing/contract.py:92
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       asset#0
        v-store asset#0
        // abi_routing/contract.py:95
        // assert op.Txn.sender == op.Global.creator_address, "Only creator can opt in to ASA"
        txn Sender                                                                                 tmp%0#1
        v-store tmp%0#1
        global CreatorAddress                                                                      tmp%1#0
        v-store tmp%1#0
        v-load tmp%0#1                                                                             tmp%0#1
        v-load tmp%1#0                                                                             tmp%0#1,tmp%1#0
        ==                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                             tmp%2#0
        assert // Only creator can opt in to ASA
        // abi_routing/contract.py:97
        // assert not self.asa, "ASA already opted in"
        int 0                                                                                      0
        byte "asa"                                                                                 0,"asa"
        app_global_get_ex                                                                          maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                   maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                    maybe_exists%0#0
        assert // check self.asa exists
        v-load maybe_value%0#0                                                                     maybe_value%0#0
        !                                                                                          tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                             tmp%3#0
        assert // ASA already opted in
        // abi_routing/contract.py:99
        // self.asa = asset
        byte "asa"                                                                                 "asa"
        v-load asset#0                                                                             "asa",asset#0
        app_global_put
        // abi_routing/contract.py:102
        // op.ITxnCreate.begin()
        itxn_begin
        // abi_routing/contract.py:103
        // op.ITxnCreate.set_type_enum(TransactionType.AssetTransfer)
        int axfer                                                                                  axfer
        itxn_field TypeEnum
        // abi_routing/contract.py:104
        // op.ITxnCreate.set_fee(UInt64(0))  # cover fee with outer txn
        int 0                                                                                      0
        itxn_field Fee
        // abi_routing/contract.py:105
        // op.ITxnCreate.set_asset_receiver(op.Global.current_application_address)
        global CurrentApplicationAddress                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%4#0                                                                             tmp%4#0
        itxn_field AssetReceiver
        // abi_routing/contract.py:106
        // op.ITxnCreate.set_xfer_asset(asset)
        v-load asset#0                                                                             asset#0
        itxn_field XferAsset
        // abi_routing/contract.py:107
        // op.ITxnCreate.submit()
        itxn_submit
        // abi_routing/contract.py:92
        // @arc4.abimethod
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.with_transactions[routing]() -> void:
subroutine with_transactions:
    with_transactions_block@0:
        // abi_routing/contract.py:109
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       asset#0
        v-store asset#0
        txna ApplicationArgs 2                                                                     an_int#0
        v-store an_int#0
        txn GroupIndex                                                                             tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                             tmp%1#0
        int 1                                                                                      tmp%1#0,1
        -                                                                                          pay#0
        v-store pay#0
        v-load pay#0                                                                               pay#0
        gtxns TypeEnum                                                                             gtxn_type%0#0
        v-store gtxn_type%0#0
        v-load gtxn_type%0#0                                                                       gtxn_type%0#0
        int pay                                                                                    gtxn_type%0#0,pay
        ==                                                                                         gtxn_type_matches%0#0
        v-store gtxn_type_matches%0#0
        v-load gtxn_type_matches%0#0                                                               gtxn_type_matches%0#0
        assert // transaction type is pay
        txna ApplicationArgs 3                                                                     another_int#0
        v-store another_int#0
        // abi_routing/contract.py:117
        // assert self.asa == asset, "is correct asset"
        int 0                                                                                      0
        byte "asa"                                                                                 0,"asa"
        app_global_get_ex                                                                          maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                   maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                    maybe_exists%0#0
        assert // check self.asa exists
        v-load maybe_value%0#0                                                                     maybe_value%0#0
        v-load asset#0                                                                             maybe_value%0#0,asset#0
        ==                                                                                         tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        assert // is correct asset
        // abi_routing/contract.py:118
        // assert an_int.as_uint64() == 1, "is correct int"
        v-load an_int#0                                                                            an_int#0
        btoi                                                                                       tmp%1#0
        v-store tmp%1#0
        v-load tmp%1#0                                                                             tmp%1#0
        int 1                                                                                      tmp%1#0,1
        ==                                                                                         tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                             tmp%2#0
        assert // is correct int
        // abi_routing/contract.py:119
        // assert pay.receiver == op.Global.current_application_address, "is payment to app"
        v-load pay#0                                                                               pay#0
        gtxns Receiver                                                                             tmp%3#0
        v-store tmp%3#0
        global CurrentApplicationAddress                                                           tmp%4#0
        v-store tmp%4#0
        v-load tmp%3#0                                                                             tmp%3#0
        v-load tmp%4#0                                                                             tmp%3#0,tmp%4#0
        ==                                                                                         tmp%5#0
        v-store tmp%5#0
        v-load tmp%5#0                                                                             tmp%5#0
        assert // is payment to app
        // abi_routing/contract.py:120
        // assert another_int.as_uint64() == 2, "is correct int"
        v-load another_int#0                                                                       another_int#0
        btoi                                                                                       tmp%6#0
        v-store tmp%6#0
        v-load tmp%6#0                                                                             tmp%6#0
        int 2                                                                                      tmp%6#0,2
        ==                                                                                         tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                             tmp%7#0
        assert // is correct int
        // abi_routing/contract.py:109
        // @arc4.abimethod
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.compare_assets[routing]() -> void:
subroutine compare_assets:
    compare_assets_block@0:
        // abi_routing/contract.py:122
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       asset_a#0
        v-store asset_a#0
        txna ApplicationArgs 2                                                                     reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                     reinterpret_Encoded(uint64)%1#0
        btoi                                                                                       asset_b#0
        v-store asset_b#0
        // abi_routing/contract.py:124
        // assert asset_a == asset_b, "asset a == b"
        v-load asset_a#0                                                                           asset_a#0
        v-load asset_b#0                                                                           asset_a#0,asset_b#0
        ==                                                                                         tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        assert // asset a == b
        // abi_routing/contract.py:122
        // @arc4.abimethod
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.method_with_default_args[routing]() -> void:
subroutine method_with_default_args:
    method_with_default_args_block@0:
        // abi_routing/contract.py:142-158
        // @arc4.abimethod(
        //     default_args={
        //         "asset_from_storage": "asa",
        //         "asset_from_function": get_asset,
        //         "account_from_storage": "creator",
        //         "account_from_function": "get_address",
        //         "application_from_storage": "app",
        //         "application_from_function": get_app,
        //         "bytes_from_storage": "some_bytes",
        //         "int_from_storage": "an_int",
        //         "int_from_function": "get_a_int",
        //         "int_from_const": arc4.UInt32(123),
        //         "str_from_const": arc4.String("abc"),
        //         "int_from_local": "local_uint",
        //         "bytes_from_local": "local_bytes",
        //     }
        // )
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       asset_from_storage#0
        v-store asset_from_storage#0
        txna ApplicationArgs 2                                                                     reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                     reinterpret_Encoded(uint64)%1#0
        btoi                                                                                       asset_from_function#0
        v-store asset_from_function#0
        txna ApplicationArgs 3                                                                     account_from_storage#0
        v-store account_from_storage#0
        txna ApplicationArgs 4                                                                     account_from_function#0
        v-store account_from_function#0
        txna ApplicationArgs 5                                                                     reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        v-load reinterpret_Encoded(uint64)%2#0                                                     reinterpret_Encoded(uint64)%2#0
        btoi                                                                                       application_from_storage#0
        v-store application_from_storage#0
        txna ApplicationArgs 6                                                                     reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                     reinterpret_Encoded(uint64)%3#0
        btoi                                                                                       application_from_function#0
        v-store application_from_function#0
        txna ApplicationArgs 7                                                                     bytes_from_storage#0
        v-store bytes_from_storage#0
        txna ApplicationArgs 8                                                                     int_from_storage#0
        v-store int_from_storage#0
        txna ApplicationArgs 9                                                                     int_from_function#0
        v-store int_from_function#0
        txna ApplicationArgs 10                                                                    int_from_const#0
        v-store int_from_const#0
        txna ApplicationArgs 11                                                                    str_from_const#0
        v-store str_from_const#0
        txna ApplicationArgs 12                                                                    reinterpret_Encoded(uint64)%6#0
        v-store reinterpret_Encoded(uint64)%6#0
        v-load reinterpret_Encoded(uint64)%6#0                                                     reinterpret_Encoded(uint64)%6#0
        btoi                                                                                       int_from_local#0
        v-store int_from_local#0
        txna ApplicationArgs 13                                                                    reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        v-load reinterpret_Encoded(len+uint8[])%0#0                                                reinterpret_Encoded(len+uint8[])%0#0
        extract 2 0                                                                                bytes_from_local#0
        v-store bytes_from_local#0
        // abi_routing/contract.py:175
        // assert asset_from_storage == Asset(123), "wrong asset from storage"
        v-load asset_from_storage#0                                                                asset_from_storage#0
        int 123                                                                                    asset_from_storage#0,123
        ==                                                                                         tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        assert // wrong asset from storage
        // abi_routing/contract.py:176
        // assert asset_from_function == Asset(456), "wrong asset from function"
        v-load asset_from_function#0                                                               asset_from_function#0
        int 456                                                                                    asset_from_function#0,456
        ==                                                                                         tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                             tmp%1#1
        assert // wrong asset from function
        // abi_routing/contract.py:177
        // assert account_from_storage == op.Global.creator_address, "wrong account from storage"
        global CreatorAddress                                                                      tmp%2#1
        v-store tmp%2#1
        v-load account_from_storage#0                                                              account_from_storage#0
        v-load tmp%2#1                                                                             account_from_storage#0,tmp%2#1
        ==                                                                                         tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                             tmp%3#1
        assert // wrong account from storage
        // abi_routing/contract.py:178
        // assert account_from_function == op.Global.zero_address, "wrong account from function"
        global ZeroAddress                                                                         tmp%4#1
        v-store tmp%4#1
        v-load account_from_function#0                                                             account_from_function#0
        v-load tmp%4#1                                                                             account_from_function#0,tmp%4#1
        ==                                                                                         tmp%5#1
        v-store tmp%5#1
        v-load tmp%5#1                                                                             tmp%5#1
        assert // wrong account from function
        // abi_routing/contract.py:179
        // assert application_from_storage == Application(123), "wrong application from storage"
        v-load application_from_storage#0                                                          application_from_storage#0
        int 123                                                                                    application_from_storage#0,123
        ==                                                                                         tmp%6#1
        v-store tmp%6#1
        v-load tmp%6#1                                                                             tmp%6#1
        assert // wrong application from storage
        // abi_routing/contract.py:180
        // assert application_from_function == Application(456), "wrong application from function"
        v-load application_from_function#0                                                         application_from_function#0
        int 456                                                                                    application_from_function#0,456
        ==                                                                                         tmp%7#1
        v-store tmp%7#1
        v-load tmp%7#1                                                                             tmp%7#1
        assert // wrong application from function
        // abi_routing/contract.py:181
        // assert bytes_from_storage[0] == arc4.Byte(7), "wrong 0th byte from storage"
        v-load bytes_from_storage#0                                                                bytes_from_storage#0
        extract 0 1 // on error: index access is out of bounds                                     aggregate%encoded_element%0#0
        v-store aggregate%encoded_element%0#0
        v-load aggregate%encoded_element%0#0                                                       aggregate%encoded_element%0#0
        byte 0x07                                                                                  aggregate%encoded_element%0#0,0x07
        b==                                                                                        tmp%8#0
        v-store tmp%8#0
        v-load tmp%8#0                                                                             tmp%8#0
        assert // wrong 0th byte from storage
        // abi_routing/contract.py:182
        // assert bytes_from_storage[1] == arc4.Byte(8), "wrong 1st byte from storage"
        v-load bytes_from_storage#0                                                                bytes_from_storage#0
        extract 1 1 // on error: index access is out of bounds                                     aggregate%encoded_element%1#0
        v-store aggregate%encoded_element%1#0
        v-load aggregate%encoded_element%1#0                                                       aggregate%encoded_element%1#0
        byte 0x08                                                                                  aggregate%encoded_element%1#0,0x08
        b==                                                                                        tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                             tmp%9#0
        assert // wrong 1st byte from storage
        // abi_routing/contract.py:183
        // assert bytes_from_storage[2] == arc4.Byte(9), "wrong 2nd byte from storage"
        v-load bytes_from_storage#0                                                                bytes_from_storage#0
        extract 2 1 // on error: index access is out of bounds                                     aggregate%encoded_element%2#0
        v-store aggregate%encoded_element%2#0
        v-load aggregate%encoded_element%2#0                                                       aggregate%encoded_element%2#0
        byte 0x09                                                                                  aggregate%encoded_element%2#0,0x09
        b==                                                                                        tmp%10#0
        v-store tmp%10#0
        v-load tmp%10#0                                                                            tmp%10#0
        assert // wrong 2nd byte from storage
        // abi_routing/contract.py:184
        // assert int_from_storage.as_uint64() == 2, "wrong int from storage"
        v-load int_from_storage#0                                                                  int_from_storage#0
        btoi                                                                                       tmp%11#0
        v-store tmp%11#0
        v-load tmp%11#0                                                                            tmp%11#0
        int 2                                                                                      tmp%11#0,2
        ==                                                                                         tmp%12#0
        v-store tmp%12#0
        v-load tmp%12#0                                                                            tmp%12#0
        assert // wrong int from storage
        // abi_routing/contract.py:185
        // assert int_from_function.as_uint64() == 3, "wrong int from function"
        v-load int_from_function#0                                                                 int_from_function#0
        btoi                                                                                       tmp%13#0
        v-store tmp%13#0
        v-load tmp%13#0                                                                            tmp%13#0
        int 3                                                                                      tmp%13#0,3
        ==                                                                                         tmp%14#0
        v-store tmp%14#0
        v-load tmp%14#0                                                                            tmp%14#0
        assert // wrong int from function
        // abi_routing/contract.py:186
        // assert int_from_const == 123
        v-load int_from_const#0                                                                    int_from_const#0
        byte 0x0000007b                                                                            int_from_const#0,0x0000007b
        b==                                                                                        tmp%15#0
        v-store tmp%15#0
        v-load tmp%15#0                                                                            tmp%15#0
        assert
        // abi_routing/contract.py:187
        // assert str_from_const == "abc"
        v-load str_from_const#0                                                                    str_from_const#0
        byte 0x0003616263                                                                          str_from_const#0,0x0003616263
        ==                                                                                         tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                            tmp%17#0
        assert
        // abi_routing/contract.py:188
        // assert int_from_local == self.local_uint[Txn.sender]
        txn Sender                                                                                 tmp%18#0
        v-store tmp%18#0
        v-load tmp%18#0                                                                            tmp%18#0
        int 0                                                                                      tmp%18#0,0
        byte "local_uint"                                                                          tmp%18#0,0,"local_uint"
        app_local_get_ex                                                                           maybe_value%0#0,maybe_exists%0#0
        v-store maybe_exists%0#0                                                                   maybe_value%0#0
        v-store maybe_value%0#0
        v-load maybe_exists%0#0                                                                    maybe_exists%0#0
        assert // check self.local_uint exists for account
        v-load int_from_local#0                                                                    int_from_local#0
        v-load maybe_value%0#0                                                                     int_from_local#0,maybe_value%0#0
        ==                                                                                         tmp%19#0
        v-store tmp%19#0
        v-load tmp%19#0                                                                            tmp%19#0
        assert
        // abi_routing/contract.py:189
        // assert bytes_from_local == self.local_bytes[Txn.sender]
        txn Sender                                                                                 tmp%20#0
        v-store tmp%20#0
        v-load tmp%20#0                                                                            tmp%20#0
        int 0                                                                                      tmp%20#0,0
        byte "local_bytes"                                                                         tmp%20#0,0,"local_bytes"
        app_local_get_ex                                                                           maybe_value%1#0,maybe_exists%1#0
        v-store maybe_exists%1#0                                                                   maybe_value%1#0
        v-store maybe_value%1#0
        v-load maybe_exists%1#0                                                                    maybe_exists%1#0
        assert // check self.local_bytes exists for account
        v-load bytes_from_local#0                                                                  bytes_from_local#0
        v-load maybe_value%1#0                                                                     bytes_from_local#0,maybe_value%1#0
        ==                                                                                         tmp%21#0
        v-store tmp%21#0
        v-load tmp%21#0                                                                            tmp%21#0
        assert
        // abi_routing/contract.py:142-158
        // @arc4.abimethod(
        //     default_args={
        //         "asset_from_storage": "asa",
        //         "asset_from_function": get_asset,
        //         "account_from_storage": "creator",
        //         "account_from_function": "get_address",
        //         "application_from_storage": "app",
        //         "application_from_function": get_app,
        //         "bytes_from_storage": "some_bytes",
        //         "int_from_storage": "an_int",
        //         "int_from_function": "get_a_int",
        //         "int_from_const": arc4.UInt32(123),
        //         "str_from_const": arc4.String("abc"),
        //         "int_from_local": "local_uint",
        //         "bytes_from_local": "local_bytes",
        //     }
        // )
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.method_with_15_args[routing]() -> void:
subroutine method_with_15_args:
    method_with_15_args_block@0:
        // abi_routing/contract.py:191
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(uint64)%0#0
        v-store reinterpret_Encoded(uint64)%0#0
        v-load reinterpret_Encoded(uint64)%0#0                                                     reinterpret_Encoded(uint64)%0#0
        btoi                                                                                       one#0
        v-store one#0
        txna ApplicationArgs 2                                                                     reinterpret_Encoded(uint64)%1#0
        v-store reinterpret_Encoded(uint64)%1#0
        v-load reinterpret_Encoded(uint64)%1#0                                                     reinterpret_Encoded(uint64)%1#0
        btoi                                                                                       two#0
        v-store two#0
        txna ApplicationArgs 3                                                                     reinterpret_Encoded(uint64)%2#0
        v-store reinterpret_Encoded(uint64)%2#0
        v-load reinterpret_Encoded(uint64)%2#0                                                     reinterpret_Encoded(uint64)%2#0
        btoi                                                                                       three#0
        v-store three#0
        txna ApplicationArgs 4                                                                     reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                     reinterpret_Encoded(uint64)%3#0
        btoi                                                                                       four#0
        v-store four#0
        txna ApplicationArgs 5                                                                     reinterpret_Encoded(uint64)%4#0
        v-store reinterpret_Encoded(uint64)%4#0
        v-load reinterpret_Encoded(uint64)%4#0                                                     reinterpret_Encoded(uint64)%4#0
        btoi                                                                                       five#0
        v-store five#0
        txna ApplicationArgs 6                                                                     reinterpret_Encoded(uint64)%5#0
        v-store reinterpret_Encoded(uint64)%5#0
        v-load reinterpret_Encoded(uint64)%5#0                                                     reinterpret_Encoded(uint64)%5#0
        btoi                                                                                       six#0
        v-store six#0
        txna ApplicationArgs 7                                                                     reinterpret_Encoded(uint64)%6#0
        v-store reinterpret_Encoded(uint64)%6#0
        v-load reinterpret_Encoded(uint64)%6#0                                                     reinterpret_Encoded(uint64)%6#0
        btoi                                                                                       seven#0
        v-store seven#0
        txna ApplicationArgs 8                                                                     reinterpret_Encoded(uint64)%7#0
        v-store reinterpret_Encoded(uint64)%7#0
        v-load reinterpret_Encoded(uint64)%7#0                                                     reinterpret_Encoded(uint64)%7#0
        btoi                                                                                       eight#0
        v-store eight#0
        txna ApplicationArgs 9                                                                     reinterpret_Encoded(uint64)%8#0
        v-store reinterpret_Encoded(uint64)%8#0
        v-load reinterpret_Encoded(uint64)%8#0                                                     reinterpret_Encoded(uint64)%8#0
        btoi                                                                                       nine#0
        v-store nine#0
        txna ApplicationArgs 10                                                                    reinterpret_Encoded(uint64)%9#0
        v-store reinterpret_Encoded(uint64)%9#0
        v-load reinterpret_Encoded(uint64)%9#0                                                     reinterpret_Encoded(uint64)%9#0
        btoi                                                                                       ten#0
        v-store ten#0
        txna ApplicationArgs 11                                                                    reinterpret_Encoded(uint64)%10#0
        v-store reinterpret_Encoded(uint64)%10#0
        v-load reinterpret_Encoded(uint64)%10#0                                                    reinterpret_Encoded(uint64)%10#0
        btoi                                                                                       eleven#0
        v-store eleven#0
        txna ApplicationArgs 12                                                                    reinterpret_Encoded(uint64)%11#0
        v-store reinterpret_Encoded(uint64)%11#0
        v-load reinterpret_Encoded(uint64)%11#0                                                    reinterpret_Encoded(uint64)%11#0
        btoi                                                                                       twelve#0
        v-store twelve#0
        txna ApplicationArgs 13                                                                    reinterpret_Encoded(uint64)%12#0
        v-store reinterpret_Encoded(uint64)%12#0
        v-load reinterpret_Encoded(uint64)%12#0                                                    reinterpret_Encoded(uint64)%12#0
        btoi                                                                                       thirteen#0
        v-store thirteen#0
        txna ApplicationArgs 14                                                                    reinterpret_Encoded(uint64)%13#0
        v-store reinterpret_Encoded(uint64)%13#0
        v-load reinterpret_Encoded(uint64)%13#0                                                    reinterpret_Encoded(uint64)%13#0
        btoi                                                                                       fourteen#0
        v-store fourteen#0
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(len+uint8[])%0#0
        v-store reinterpret_Encoded(len+uint8[])%0#0
        // abi_routing/contract.py:212-213
        // one
        // + two
        v-load one#0                                                                               one#0
        v-load two#0                                                                               one#0,two#0
        +                                                                                          tmp%0#1
        v-store tmp%0#1
        // abi_routing/contract.py:212-214
        // one
        // + two
        // + three
        v-load tmp%0#1                                                                             tmp%0#1
        v-load three#0                                                                             tmp%0#1,three#0
        +                                                                                          tmp%1#1
        v-store tmp%1#1
        // abi_routing/contract.py:212-215
        // one
        // + two
        // + three
        // + four
        v-load tmp%1#1                                                                             tmp%1#1
        v-load four#0                                                                              tmp%1#1,four#0
        +                                                                                          tmp%2#1
        v-store tmp%2#1
        // abi_routing/contract.py:212-216
        // one
        // + two
        // + three
        // + four
        // + five
        v-load tmp%2#1                                                                             tmp%2#1
        v-load five#0                                                                              tmp%2#1,five#0
        +                                                                                          tmp%3#1
        v-store tmp%3#1
        // abi_routing/contract.py:212-217
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        v-load tmp%3#1                                                                             tmp%3#1
        v-load six#0                                                                               tmp%3#1,six#0
        +                                                                                          tmp%4#1
        v-store tmp%4#1
        // abi_routing/contract.py:212-218
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        v-load tmp%4#1                                                                             tmp%4#1
        v-load seven#0                                                                             tmp%4#1,seven#0
        +                                                                                          tmp%5#1
        v-store tmp%5#1
        // abi_routing/contract.py:212-219
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        v-load tmp%5#1                                                                             tmp%5#1
        v-load eight#0                                                                             tmp%5#1,eight#0
        +                                                                                          tmp%6#1
        v-store tmp%6#1
        // abi_routing/contract.py:212-220
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        v-load tmp%6#1                                                                             tmp%6#1
        v-load nine#0                                                                              tmp%6#1,nine#0
        +                                                                                          tmp%7#1
        v-store tmp%7#1
        // abi_routing/contract.py:212-221
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        // + ten
        v-load tmp%7#1                                                                             tmp%7#1
        v-load ten#0                                                                               tmp%7#1,ten#0
        +                                                                                          tmp%8#1
        v-store tmp%8#1
        // abi_routing/contract.py:212-222
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        // + ten
        // + eleven
        v-load tmp%8#1                                                                             tmp%8#1
        v-load eleven#0                                                                            tmp%8#1,eleven#0
        +                                                                                          tmp%9#1
        v-store tmp%9#1
        // abi_routing/contract.py:212-223
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        // + ten
        // + eleven
        // + twelve
        v-load tmp%9#1                                                                             tmp%9#1
        v-load twelve#0                                                                            tmp%9#1,twelve#0
        +                                                                                          tmp%10#1
        v-store tmp%10#1
        // abi_routing/contract.py:212-224
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        // + ten
        // + eleven
        // + twelve
        // + thirteen
        v-load tmp%10#1                                                                            tmp%10#1
        v-load thirteen#0                                                                          tmp%10#1,thirteen#0
        +                                                                                          tmp%11#1
        v-store tmp%11#1
        // abi_routing/contract.py:212-225
        // one
        // + two
        // + three
        // + four
        // + five
        // + six
        // + seven
        // + eight
        // + nine
        // + ten
        // + eleven
        // + twelve
        // + thirteen
        // + fourteen
        v-load tmp%11#1                                                                            tmp%11#1
        v-load fourteen#0                                                                          tmp%11#1,fourteen#0
        +                                                                                          tmp%12#1
        v-store tmp%12#1
        // abi_routing/contract.py:211-226
        // assert (
        //     one
        //     + two
        //     + three
        //     + four
        //     + five
        //     + six
        //     + seven
        //     + eight
        //     + nine
        //     + ten
        //     + eleven
        //     + twelve
        //     + thirteen
        //     + fourteen
        // )
        v-load tmp%12#1                                                                            tmp%12#1
        assert
        // abi_routing/contract.py:191
        // @arc4.abimethod
        byte 0x151f7c75                                                                            0x151f7c75
        v-load reinterpret_Encoded(len+uint8[])%0#0                                                0x151f7c75,reinterpret_Encoded(len+uint8[])%0#0
        concat                                                                                     tmp%17#0
        v-store tmp%17#0
        v-load tmp%17#0                                                                            tmp%17#0
        log
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.method_with_more_than_15_args[routing]() -> void:
subroutine method_with_more_than_15_args:
    method_with_more_than_15_args_block@0:
        // abi_routing/contract.py:229
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     a#0
        v-store a#0
        txna ApplicationArgs 2                                                                     b#0
        v-store b#0
        txna ApplicationArgs 3                                                                     c#0
        v-store c#0
        txna ApplicationArgs 4                                                                     reinterpret_Encoded(uint64)%3#0
        v-store reinterpret_Encoded(uint64)%3#0
        v-load reinterpret_Encoded(uint64)%3#0                                                     reinterpret_Encoded(uint64)%3#0
        btoi                                                                                       d#0
        v-store d#0
        txna ApplicationArgs 5                                                                     reinterpret_Encoded(uint64)%4#0
        v-store reinterpret_Encoded(uint64)%4#0
        v-load reinterpret_Encoded(uint64)%4#0                                                     reinterpret_Encoded(uint64)%4#0
        btoi                                                                                       asset#0
        v-store asset#0
        txna ApplicationArgs 6                                                                     e#0
        v-store e#0
        txna ApplicationArgs 7                                                                     f#0
        v-store f#0
        txn GroupIndex                                                                             tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                             tmp%2#0
        int 2                                                                                      tmp%2#0,2
        -                                                                                          pay#0
        v-store pay#0
        v-load pay#0                                                                               pay#0
        gtxns TypeEnum                                                                             gtxn_type%0#0
        v-store gtxn_type%0#0
        v-load gtxn_type%0#0                                                                       gtxn_type%0#0
        int pay                                                                                    gtxn_type%0#0,pay
        ==                                                                                         gtxn_type_matches%0#0
        v-store gtxn_type_matches%0#0
        v-load gtxn_type_matches%0#0                                                               gtxn_type_matches%0#0
        assert // transaction type is pay
        txna ApplicationArgs 8                                                                     g#0
        v-store g#0
        txna ApplicationArgs 9                                                                     h#0
        v-store h#0
        txna ApplicationArgs 10                                                                    i#0
        v-store i#0
        txna ApplicationArgs 11                                                                    j#0
        v-store j#0
        txna ApplicationArgs 12                                                                    k#0
        v-store k#0
        txna ApplicationArgs 13                                                                    l#0
        v-store l#0
        txna ApplicationArgs 14                                                                    m#0
        v-store m#0
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0 
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0 
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0 
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0
        int 16                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0,16
        extract_uint64                                                                             p#0
        v-store p#0
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0 
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0 
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0
        int 40                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0,40
        extract_uint16                                                                             aggregate%extract_uint16%0#0
        v-store aggregate%extract_uint16%0#0
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0
        int 42                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0,42
        extract_uint16                                                                             aggregate%extract_uint16%1#0
        v-store aggregate%extract_uint16%1#0
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0
        v-load aggregate%extract_uint16%0#0                                                        reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0,aggregate%extract_uint16%0#0
        v-load aggregate%extract_uint16%1#0                                                        reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0,aggregate%extract_uint16%0#0,aggregate%extract_uint16%1#0
        substring3                                                                                 aggregate%substring3%0#0
        v-store aggregate%substring3%0#0
        v-load aggregate%substring3%0#0                                                            aggregate%substring3%0#0
        extract 2 0                                                                                s#0
        v-store s#0
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0
        int 42                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0,42
        extract_uint16                                                                             aggregate%extract_uint16%2#0
        v-store aggregate%extract_uint16%2#0
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0
        len                                                                                        aggregate%len%0#0
        v-store aggregate%len%0#0
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0
        v-load aggregate%extract_uint16%2#0                                                        reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0,aggregate%extract_uint16%2#0
        v-load aggregate%len%0#0                                                                   reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0,aggregate%extract_uint16%2#0,aggregate%len%0#0
        substring3                                                                                 aggregate%substring3%1#0
        v-store aggregate%substring3%1#0
        v-load aggregate%substring3%1#0                                                            aggregate%substring3%1#0
        extract 2 0                                                                                t#0
        v-store t#0
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0 
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0
        int 44                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0,44
        extract_uint64                                                                             asset2#0
        v-store asset2#0
        txn GroupIndex                                                                             tmp%7#0
        v-store tmp%7#0
        v-load tmp%7#0                                                                             tmp%7#0
        int 1                                                                                      tmp%7#0,1
        -                                                                                          pay2#0
        v-store pay2#0
        v-load pay2#0                                                                              pay2#0
        gtxns TypeEnum                                                                             gtxn_type%1#0
        v-store gtxn_type%1#0
        v-load gtxn_type%1#0                                                                       gtxn_type%1#0
        int pay                                                                                    gtxn_type%1#0,pay
        ==                                                                                         gtxn_type_matches%1#0
        v-store gtxn_type_matches%1#0
        v-load gtxn_type_matches%1#0                                                               gtxn_type_matches%1#0
        assert // transaction type is pay
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0 
        txna ApplicationArgs 15                                                                    reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0
        v-store reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0 
        // abi_routing/contract.py:264
        // assert op.Txn.num_app_args == 16
        txn NumAppArgs                                                                             tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        int 16                                                                                     tmp%0#1,16
        ==                                                                                         tmp%1#1
        v-store tmp%1#1
        v-load tmp%1#1                                                                             tmp%1#1
        assert
        // abi_routing/contract.py:265
        // assert pay.amount == 100000
        v-load pay#0                                                                               pay#0
        gtxns Amount                                                                               tmp%2#0
        v-store tmp%2#0
        v-load tmp%2#0                                                                             tmp%2#0
        int 100000                                                                                 tmp%2#0,100000
        ==                                                                                         tmp%3#1
        v-store tmp%3#1
        v-load tmp%3#1                                                                             tmp%3#1
        assert
        // abi_routing/contract.py:266
        // assert pay2.amount == 200000
        v-load pay2#0                                                                              pay2#0
        gtxns Amount                                                                               tmp%4#1
        v-store tmp%4#1
        v-load tmp%4#1                                                                             tmp%4#1
        int 200000                                                                                 tmp%4#1,200000
        ==                                                                                         tmp%5#1
        v-store tmp%5#1
        v-load tmp%5#1                                                                             tmp%5#1
        assert
        // abi_routing/contract.py:267
        // assert asset.id
        v-load asset#0                                                                             asset#0
        assert
        // abi_routing/contract.py:268
        // assert asset2.id
        v-load asset2#0                                                                            asset2#0
        assert
        // abi_routing/contract.py:270
        // log(s + t)
        v-load s#0                                                                                 s#0
        v-load t#0                                                                                 s#0,t#0
        concat                                                                                     tmp%8#1
        v-store tmp%8#1
        v-load tmp%8#1                                                                             tmp%8#1
        log
        // abi_routing/contract.py:273
        // a.as_uint64()
        v-load a#0                                                                                 a#0
        btoi                                                                                       tmp%9#1
        v-store tmp%9#1
        // abi_routing/contract.py:274
        // + b.as_uint64()
        v-load b#0                                                                                 b#0
        btoi                                                                                       tmp%10#0
        v-store tmp%10#0
        // abi_routing/contract.py:273-274
        // a.as_uint64()
        // + b.as_uint64()
        v-load tmp%9#1                                                                             tmp%9#1
        v-load tmp%10#0                                                                            tmp%9#1,tmp%10#0
        +                                                                                          tmp%11#0
        v-store tmp%11#0
        // abi_routing/contract.py:275
        // + c.as_uint64()
        v-load c#0                                                                                 c#0
        btoi                                                                                       tmp%12#0
        v-store tmp%12#0
        // abi_routing/contract.py:273-275
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        v-load tmp%11#0                                                                            tmp%11#0
        v-load tmp%12#0                                                                            tmp%11#0,tmp%12#0
        +                                                                                          tmp%13#0
        v-store tmp%13#0
        // abi_routing/contract.py:273-276
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        v-load tmp%13#0                                                                            tmp%13#0
        v-load d#0                                                                                 tmp%13#0,d#0
        +                                                                                          tmp%14#0
        v-store tmp%14#0
        // abi_routing/contract.py:277
        // + e.as_uint64()
        v-load e#0                                                                                 e#0
        btoi                                                                                       tmp%15#0
        v-store tmp%15#0
        // abi_routing/contract.py:273-277
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        v-load tmp%14#0                                                                            tmp%14#0
        v-load tmp%15#0                                                                            tmp%14#0,tmp%15#0
        +                                                                                          tmp%16#0
        v-store tmp%16#0
        // abi_routing/contract.py:278
        // + f.as_uint64()
        v-load f#0                                                                                 f#0
        btoi                                                                                       tmp%17#0
        v-store tmp%17#0
        // abi_routing/contract.py:273-278
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        v-load tmp%16#0                                                                            tmp%16#0
        v-load tmp%17#0                                                                            tmp%16#0,tmp%17#0
        +                                                                                          tmp%18#0
        v-store tmp%18#0
        // abi_routing/contract.py:279
        // + g.as_uint64()
        v-load g#0                                                                                 g#0
        btoi                                                                                       tmp%19#0
        v-store tmp%19#0
        // abi_routing/contract.py:273-279
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        v-load tmp%18#0                                                                            tmp%18#0
        v-load tmp%19#0                                                                            tmp%18#0,tmp%19#0
        +                                                                                          tmp%20#0
        v-store tmp%20#0
        // abi_routing/contract.py:280
        // + h.as_uint64()
        v-load h#0                                                                                 h#0
        btoi                                                                                       tmp%21#0
        v-store tmp%21#0
        // abi_routing/contract.py:273-280
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        v-load tmp%20#0                                                                            tmp%20#0
        v-load tmp%21#0                                                                            tmp%20#0,tmp%21#0
        +                                                                                          tmp%22#0
        v-store tmp%22#0
        // abi_routing/contract.py:281
        // + i.as_uint64()
        v-load i#0                                                                                 i#0
        btoi                                                                                       tmp%23#0
        v-store tmp%23#0
        // abi_routing/contract.py:273-281
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        v-load tmp%22#0                                                                            tmp%22#0
        v-load tmp%23#0                                                                            tmp%22#0,tmp%23#0
        +                                                                                          tmp%24#0
        v-store tmp%24#0
        // abi_routing/contract.py:282
        // + j.as_uint64()
        v-load j#0                                                                                 j#0
        btoi                                                                                       tmp%25#0
        v-store tmp%25#0
        // abi_routing/contract.py:273-282
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        v-load tmp%24#0                                                                            tmp%24#0
        v-load tmp%25#0                                                                            tmp%24#0,tmp%25#0
        +                                                                                          tmp%26#0
        v-store tmp%26#0
        // abi_routing/contract.py:283
        // + k.as_uint64()
        v-load k#0                                                                                 k#0
        btoi                                                                                       tmp%27#0
        v-store tmp%27#0
        // abi_routing/contract.py:273-283
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        v-load tmp%26#0                                                                            tmp%26#0
        v-load tmp%27#0                                                                            tmp%26#0,tmp%27#0
        +                                                                                          tmp%28#0
        v-store tmp%28#0
        // abi_routing/contract.py:284
        // + l.as_uint64()
        v-load l#0                                                                                 l#0
        btoi                                                                                       tmp%29#0
        v-store tmp%29#0
        // abi_routing/contract.py:273-284
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        v-load tmp%28#0                                                                            tmp%28#0
        v-load tmp%29#0                                                                            tmp%28#0,tmp%29#0
        +                                                                                          tmp%30#0
        v-store tmp%30#0
        // abi_routing/contract.py:285
        // + m.as_uint64()
        v-load m#0                                                                                 m#0
        btoi                                                                                       tmp%31#0
        v-store tmp%31#0
        // abi_routing/contract.py:273-285
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        v-load tmp%30#0                                                                            tmp%30#0
        v-load tmp%31#0                                                                            tmp%30#0,tmp%31#0
        +                                                                                          tmp%32#0
        v-store tmp%32#0
        // abi_routing/contract.py:286
        // + n.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 0                                                                                      reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0,0
        // abi_routing/contract.py:286
        // + n.as_uint64()
        extract_uint64                                                                             tmp%33#0
        v-store tmp%33#0
        // abi_routing/contract.py:273-286
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        v-load tmp%32#0                                                                            tmp%32#0
        v-load tmp%33#0                                                                            tmp%32#0,tmp%33#0
        +                                                                                          tmp%34#0
        v-store tmp%34#0
        // abi_routing/contract.py:287
        // + o.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 8                                                                                      reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0,8
        // abi_routing/contract.py:287
        // + o.as_uint64()
        extract_uint64                                                                             tmp%35#0
        v-store tmp%35#0
        // abi_routing/contract.py:273-287
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        v-load tmp%34#0                                                                            tmp%34#0
        v-load tmp%35#0                                                                            tmp%34#0,tmp%35#0
        +                                                                                          tmp%36#0
        v-store tmp%36#0
        // abi_routing/contract.py:273-288
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        // + p
        v-load tmp%36#0                                                                            tmp%36#0
        v-load p#0                                                                                 tmp%36#0,p#0
        +                                                                                          tmp%37#0
        v-store tmp%37#0
        // abi_routing/contract.py:289
        // + q.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 24                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0,24
        // abi_routing/contract.py:289
        // + q.as_uint64()
        extract_uint64                                                                             tmp%38#0
        v-store tmp%38#0
        // abi_routing/contract.py:273-289
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        // + p
        // + q.as_uint64()
        v-load tmp%37#0                                                                            tmp%37#0
        v-load tmp%38#0                                                                            tmp%37#0,tmp%38#0
        +                                                                                          tmp%39#0
        v-store tmp%39#0
        // abi_routing/contract.py:290
        // + r.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 32                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0,32
        // abi_routing/contract.py:290
        // + r.as_uint64()
        extract_uint64                                                                             tmp%40#0
        v-store tmp%40#0
        // abi_routing/contract.py:273-290
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        // + p
        // + q.as_uint64()
        // + r.as_uint64()
        v-load tmp%39#0                                                                            tmp%39#0
        v-load tmp%40#0                                                                            tmp%39#0,tmp%40#0
        +                                                                                          tmp%41#0
        v-store tmp%41#0
        // abi_routing/contract.py:291
        // + u.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 52                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0,52
        // abi_routing/contract.py:291
        // + u.as_uint64()
        extract_uint64                                                                             tmp%42#0
        v-store tmp%42#0
        // abi_routing/contract.py:273-291
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        // + p
        // + q.as_uint64()
        // + r.as_uint64()
        // + u.as_uint64()
        v-load tmp%41#0                                                                            tmp%41#0
        v-load tmp%42#0                                                                            tmp%41#0,tmp%42#0
        +                                                                                          tmp%43#0
        v-store tmp%43#0
        // abi_routing/contract.py:292
        // + v.as_uint64()
        v-load reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0 reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        int 60                                                                                     reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0,60
        // abi_routing/contract.py:292
        // + v.as_uint64()
        extract_uint64                                                                             tmp%44#0
        v-store tmp%44#0
        // abi_routing/contract.py:273-292
        // a.as_uint64()
        // + b.as_uint64()
        // + c.as_uint64()
        // + d
        // + e.as_uint64()
        // + f.as_uint64()
        // + g.as_uint64()
        // + h.as_uint64()
        // + i.as_uint64()
        // + j.as_uint64()
        // + k.as_uint64()
        // + l.as_uint64()
        // + m.as_uint64()
        // + n.as_uint64()
        // + o.as_uint64()
        // + p
        // + q.as_uint64()
        // + r.as_uint64()
        // + u.as_uint64()
        // + v.as_uint64()
        v-load tmp%43#0                                                                            tmp%43#0
        v-load tmp%44#0                                                                            tmp%43#0,tmp%44#0
        +                                                                                          tmp%45#0
        v-store tmp%45#0
        // abi_routing/contract.py:272-293
        // return arc4.UInt64(
        //     a.as_uint64()
        //     + b.as_uint64()
        //     + c.as_uint64()
        //     + d
        //     + e.as_uint64()
        //     + f.as_uint64()
        //     + g.as_uint64()
        //     + h.as_uint64()
        //     + i.as_uint64()
        //     + j.as_uint64()
        //     + k.as_uint64()
        //     + l.as_uint64()
        //     + m.as_uint64()
        //     + n.as_uint64()
        //     + o.as_uint64()
        //     + p
        //     + q.as_uint64()
        //     + r.as_uint64()
        //     + u.as_uint64()
        //     + v.as_uint64()
        // )
        v-load tmp%45#0                                                                            tmp%45#0
        itob                                                                                       aggregate%val_as_bytes%0#0
        v-store aggregate%val_as_bytes%0#0
        // abi_routing/contract.py:229
        // @arc4.abimethod
        byte 0x151f7c75                                                                            0x151f7c75
        v-load aggregate%val_as_bytes%0#0                                                          0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                                     tmp%9#0
        v-store tmp%9#0
        v-load tmp%9#0                                                                             tmp%9#0
        log
        int 1                                                                                      1
        return


// test_cases.abi_routing.contract.Reference.hello_with_algopy_string[routing]() -> void:
subroutine hello_with_algopy_string:
    hello_with_algopy_string_block@0:
        // abi_routing/contract.py:295
        // @arc4.abimethod
        txna ApplicationArgs 1                                                                     reinterpret_Encoded(len+utf8[])%0#0
        v-store reinterpret_Encoded(len+utf8[])%0#0
        v-load reinterpret_Encoded(len+utf8[])%0#0                                                 reinterpret_Encoded(len+utf8[])%0#0
        extract 2 0                                                                                name#0
        v-store name#0
        // abi_routing/contract.py:297
        // return "Hello " + name + "!"
        byte "Hello "                                                                              "Hello "
        v-load name#0                                                                              "Hello ",name#0
        concat                                                                                     tmp%0#1
        v-store tmp%0#1
        v-load tmp%0#1                                                                             tmp%0#1
        byte "!"                                                                                   tmp%0#1,"!"
        concat                                                                                     tmp%1#1
        v-store tmp%1#1
        // abi_routing/contract.py:295
        // @arc4.abimethod
        v-load tmp%1#1                                                                             tmp%1#1
        len                                                                                        aggregate%length%0#0
        v-store aggregate%length%0#0
        v-load aggregate%length%0#0                                                                aggregate%length%0#0
        itob                                                                                       aggregate%as_bytes%0#0
        v-store aggregate%as_bytes%0#0
        v-load aggregate%as_bytes%0#0                                                              aggregate%as_bytes%0#0
        extract 6 2                                                                                aggregate%length_uint16%0#0
        v-store aggregate%length_uint16%0#0
        v-load aggregate%length_uint16%0#0                                                         aggregate%length_uint16%0#0
        v-load tmp%1#1                                                                             aggregate%length_uint16%0#0,tmp%1#1
        concat                                                                                     aggregate%encoded_value%0#0
        v-store aggregate%encoded_value%0#0
        byte 0x151f7c75                                                                            0x151f7c75
        v-load aggregate%encoded_value%0#0                                                         0x151f7c75,aggregate%encoded_value%0#0
        concat                                                                                     tmp%3#0
        v-store tmp%3#0
        v-load tmp%3#0                                                                             tmp%3#0
        log
        int 1                                                                                      1
        return


