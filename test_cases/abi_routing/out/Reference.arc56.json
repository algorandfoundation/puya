{
    "name": "Reference",
    "structs": {},
    "methods": [
        {
            "name": "noop_with_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [
                {
                    "type": "uint64",
                    "name": "uint"
                },
                {
                    "type": "byte[]",
                    "name": "bites"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "all_the_things",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "OptIn",
                    "DeleteApplication"
                ],
                "call": [
                    "NoOp",
                    "OptIn",
                    "CloseOut",
                    "UpdateApplication",
                    "DeleteApplication"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mixed_oca",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "CloseOut",
                    "DeleteApplication"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_into_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_transactions",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "an_int"
                },
                {
                    "type": "pay",
                    "name": "pay"
                },
                {
                    "type": "uint64",
                    "name": "another_int"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "compare_assets",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_a"
                },
                {
                    "type": "uint64",
                    "name": "asset_b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_asset",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_application",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_an_int",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_default_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YXNh",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "asset_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_asset()uint64"
                    }
                },
                {
                    "type": "address",
                    "name": "account_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "Y3JlYXRvcg==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "address",
                    "name": "account_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_address()address"
                    }
                },
                {
                    "type": "uint64",
                    "name": "application_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YXBw",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "application_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_application()uint64"
                    }
                },
                {
                    "type": "byte[3]",
                    "name": "bytes_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "c29tZV9ieXRlcw==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YW5faW50",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_an_int()uint64"
                    }
                },
                {
                    "type": "uint32",
                    "name": "int_from_const",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAew==",
                        "type": "uint32"
                    }
                },
                {
                    "type": "string",
                    "name": "str_from_const",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AANhYmM=",
                        "type": "string"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_local",
                    "defaultValue": {
                        "source": "local",
                        "data": "bG9jYWxfdWludA==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "byte[]",
                    "name": "bytes_from_local",
                    "defaultValue": {
                        "source": "local",
                        "data": "bG9jYWxfYnl0ZXM=",
                        "type": "AVMString"
                    }
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_15_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "one"
                },
                {
                    "type": "uint64",
                    "name": "two"
                },
                {
                    "type": "uint64",
                    "name": "three"
                },
                {
                    "type": "uint64",
                    "name": "four"
                },
                {
                    "type": "uint64",
                    "name": "five"
                },
                {
                    "type": "uint64",
                    "name": "six"
                },
                {
                    "type": "uint64",
                    "name": "seven"
                },
                {
                    "type": "uint64",
                    "name": "eight"
                },
                {
                    "type": "uint64",
                    "name": "nine"
                },
                {
                    "type": "uint64",
                    "name": "ten"
                },
                {
                    "type": "uint64",
                    "name": "eleven"
                },
                {
                    "type": "uint64",
                    "name": "twelve"
                },
                {
                    "type": "uint64",
                    "name": "thirteen"
                },
                {
                    "type": "uint64",
                    "name": "fourteen"
                },
                {
                    "type": "byte[]",
                    "name": "fifteen"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Fifteen args should not encode the last argument as a tuple",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_more_than_15_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "c"
                },
                {
                    "type": "uint64",
                    "name": "d"
                },
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "e"
                },
                {
                    "type": "uint64",
                    "name": "f"
                },
                {
                    "type": "pay",
                    "name": "pay"
                },
                {
                    "type": "uint64",
                    "name": "g"
                },
                {
                    "type": "uint64",
                    "name": "h"
                },
                {
                    "type": "uint64",
                    "name": "i"
                },
                {
                    "type": "uint64",
                    "name": "j"
                },
                {
                    "type": "uint64",
                    "name": "k"
                },
                {
                    "type": "uint64",
                    "name": "l"
                },
                {
                    "type": "uint64",
                    "name": "m"
                },
                {
                    "type": "uint64",
                    "name": "n"
                },
                {
                    "type": "uint64",
                    "name": "o"
                },
                {
                    "type": "uint64",
                    "name": "p"
                },
                {
                    "type": "uint64",
                    "name": "q"
                },
                {
                    "type": "uint64",
                    "name": "r"
                },
                {
                    "type": "byte[]",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "t"
                },
                {
                    "type": "uint64",
                    "name": "asset2"
                },
                {
                    "type": "pay",
                    "name": "pay2"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint64",
                    "name": "v"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Application calls only support 16 args, and arc4 calls utilise the first arg for the method\nselector. Args beyond this number are packed into a tuple and placed in the 16th slot.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello_with_algopy_string",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "asa": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNh"
                },
                "an_int": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YW5faW50"
                },
                "some_bytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[3]",
                    "key": "c29tZV9ieXRlcw=="
                },
                "creator": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y3JlYXRvcg=="
                },
                "app": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXBw"
                }
            },
            "local": {
                "local_bytes": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bG9jYWxfYnl0ZXM="
                },
                "local_uint": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bG9jYWxfdWludA=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "DeleteApplication",
            "NoOp",
            "OptIn"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        471
                    ],
                    "errorMessage": "ASA already opted in"
                },
                {
                    "pc": [
                        146
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        322
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        311
                    ],
                    "errorMessage": "OnCompletion is not one of NoOp, CloseOut, DeleteApplication"
                },
                {
                    "pc": [
                        465
                    ],
                    "errorMessage": "Only creator can opt in to ASA"
                },
                {
                    "pc": [
                        549
                    ],
                    "errorMessage": "asset a == b"
                },
                {
                    "pc": [
                        349
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        314,
                        325
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        469,
                        516
                    ],
                    "errorMessage": "check self.asa exists"
                },
                {
                    "pc": [
                        715
                    ],
                    "errorMessage": "check self.local_bytes exists for account"
                },
                {
                    "pc": [
                        704
                    ],
                    "errorMessage": "check self.local_uint exists for account"
                },
                {
                    "pc": [
                        637,
                        647,
                        657
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        520
                    ],
                    "errorMessage": "is correct asset"
                },
                {
                    "pc": [
                        526,
                        537
                    ],
                    "errorMessage": "is correct int"
                },
                {
                    "pc": [
                        533
                    ],
                    "errorMessage": "is payment to app"
                },
                {
                    "pc": [
                        377,
                        424,
                        446
                    ],
                    "errorMessage": "overflow"
                },
                {
                    "pc": [
                        509,
                        859,
                        935
                    ],
                    "errorMessage": "transaction type is pay"
                },
                {
                    "pc": [
                        644
                    ],
                    "errorMessage": "wrong 0th byte from storage"
                },
                {
                    "pc": [
                        654
                    ],
                    "errorMessage": "wrong 1st byte from storage"
                },
                {
                    "pc": [
                        664
                    ],
                    "errorMessage": "wrong 2nd byte from storage"
                },
                {
                    "pc": [
                        622
                    ],
                    "errorMessage": "wrong account from function"
                },
                {
                    "pc": [
                        616
                    ],
                    "errorMessage": "wrong account from storage"
                },
                {
                    "pc": [
                        634
                    ],
                    "errorMessage": "wrong application from function"
                },
                {
                    "pc": [
                        627
                    ],
                    "errorMessage": "wrong application from storage"
                },
                {
                    "pc": [
                        610
                    ],
                    "errorMessage": "wrong asset from function"
                },
                {
                    "pc": [
                        603
                    ],
                    "errorMessage": "wrong asset from storage"
                },
                {
                    "pc": [
                        677
                    ],
                    "errorMessage": "wrong int from function"
                },
                {
                    "pc": [
                        670
                    ],
                    "errorMessage": "wrong int from storage"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAQB7AiYFBBUffHUDYXNhDBUffHUAAAAAAAAByApsb2NhbF91aW50C2xvY2FsX2J5dGVzIjEYQAAyKSRngAZhbl9pbnQlZ4ICCnNvbWVfYnl0ZXMDBwgJZ4AHY3JlYXRvcjEAZ4ADYXBwJGcxG0EA1oIDBAEEACMEOlNT/ATS8vU8NhoAjgMArwENAKExGRREMRhEggwE142zWwTY9i2aBLhDERkExBY3LQR/rZeABC/flaQEE5mCbAShMAghBGE33DcEVzIZWgT2CWyCBJAjuxk2GgCODAB8ANcA/AErABcAFAARAAEBNwHfAkoDPwCADBUffHUAAAAAAAAAA7BDKrBDKrBDgCQVH3x1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwQyIxGZCBJRpEMRhEQgB0MRkiEkQxGERCADoxGY0GAAEAAQABAAAAAQABADEYFESAC0hlbGxvIFdvcmxksEM2GgEXIggWSZOBCA5EVwcBKExQsCJDNhoBFzYaAlcCADEAK08DZjEAJwRPAmYiQzYaARciCBZJk4EIDkRXBwEoTFCwIkM2GgEXIggWSZOBCA5EVwcBKExQsCJDNhoBFzEAMgkSRCMpZUQURClLAWexgQSyECOyATIKshSyEbMiQzYaARc2GgIxFiIJSTgQIhJENhoDIyllRE8EEkRPAhciEkRMOAcyChJEFyUSRCJDNhoBFzYaAhcSRCJDNhoBFzYaAhc2GgM2GgQ2GgUXNhoGFzYaBzYaCDYaCTYaCjYaCzYaDBc2Gg1XAgBPDCQSRE8LgcgDEkQyCU8LEkQyA08KEkRPCCQSRE8HgcgDEkRLBlcAAYABB6hESwZXAQGAAQioRE8GVwIBgAEJqERPBRclEkRPBBeBAxJETwOABAAAAHuoRE8CgAUAA2FiYxJEMQAjK2NETwISRDEAIycEY0QSRCJDNhoBFzYaAhc2GgMXNhoEFzYaBRc2GgYXNhoHFzYaCBc2GgkXNhoKFzYaCxc2GgwXNhoNFzYaDhc2Gg9PDk8OCE8NCE8MCE8LCE8KCE8JCE8ICE8HCE8GCE8FCE8ECE8DCE8CCEQoTFCwIkM2GgE2GgI2GgM2GgQXNhoFFzYaBjYaBzEWJQlJOBAiEkQ2Ggg2Ggk2Ggo2Ggs2Ggw2Gg02Gg42Gg9HAoEQWzYaD0cDgShZSwGBKllSVwIANhoPSYEqWUsBFVJXAgA2Gg+BLFsxFiIJSTgQIhJENhoPSTEbgRASRE8SOAiBoI0GEkRPAjgIgcCaDBJETxNETwJETwNPA1CwTxMXTxMXCE8SFwhPEQhPEBcITw8XCE8OFwhPDRcITwwXCE8LFwhPChcITwkXCE8IFwhPByNbCE8GgQhbCE8FCE8EgRhbCE8DgSBbCE8CgTRbCEyBPFsIFihMULAiQzYaAVcCAIAGSGVsbG8gTFCAASFQSRUWVwYCTFAoTFCwIkM=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}