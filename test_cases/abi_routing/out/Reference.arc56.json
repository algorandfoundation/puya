{
    "name": "Reference",
    "structs": {},
    "methods": [
        {
            "name": "noop_with_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_in",
            "args": [
                {
                    "type": "uint64",
                    "name": "uint"
                },
                {
                    "type": "byte[]",
                    "name": "bites"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "all_the_things",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [
                    "NoOp",
                    "OptIn",
                    "DeleteApplication"
                ],
                "call": [
                    "NoOp",
                    "OptIn",
                    "CloseOut",
                    "UpdateApplication",
                    "DeleteApplication"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "mixed_oca",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "uint8"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "CloseOut",
                    "DeleteApplication"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "opt_into_asset",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "with_transactions",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "an_int"
                },
                {
                    "type": "pay",
                    "name": "pay"
                },
                {
                    "type": "uint64",
                    "name": "another_int"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "compare_assets",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_a"
                },
                {
                    "type": "uint64",
                    "name": "asset_b"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_address",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_asset",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_application",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_an_int",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_default_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "asset_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YXNh",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "asset_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_asset()uint64"
                    }
                },
                {
                    "type": "address",
                    "name": "account_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "Y3JlYXRvcg==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "address",
                    "name": "account_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_address()address"
                    }
                },
                {
                    "type": "uint64",
                    "name": "application_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YXBw",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "application_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_application()uint64"
                    }
                },
                {
                    "type": "byte[3]",
                    "name": "bytes_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "c29tZV9ieXRlcw==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_storage",
                    "defaultValue": {
                        "source": "global",
                        "data": "YW5faW50",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_function",
                    "defaultValue": {
                        "source": "method",
                        "data": "get_an_int()uint64"
                    }
                },
                {
                    "type": "uint32",
                    "name": "int_from_const",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AAAAew==",
                        "type": "uint32"
                    }
                },
                {
                    "type": "string",
                    "name": "str_from_const",
                    "defaultValue": {
                        "source": "literal",
                        "data": "AANhYmM=",
                        "type": "string"
                    }
                },
                {
                    "type": "uint64",
                    "name": "int_from_local",
                    "defaultValue": {
                        "source": "local",
                        "data": "bG9jYWxfdWludA==",
                        "type": "AVMString"
                    }
                },
                {
                    "type": "byte[]",
                    "name": "bytes_from_local",
                    "defaultValue": {
                        "source": "local",
                        "data": "bG9jYWxfYnl0ZXM=",
                        "type": "AVMString"
                    }
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_15_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "one"
                },
                {
                    "type": "uint64",
                    "name": "two"
                },
                {
                    "type": "uint64",
                    "name": "three"
                },
                {
                    "type": "uint64",
                    "name": "four"
                },
                {
                    "type": "uint64",
                    "name": "five"
                },
                {
                    "type": "uint64",
                    "name": "six"
                },
                {
                    "type": "uint64",
                    "name": "seven"
                },
                {
                    "type": "uint64",
                    "name": "eight"
                },
                {
                    "type": "uint64",
                    "name": "nine"
                },
                {
                    "type": "uint64",
                    "name": "ten"
                },
                {
                    "type": "uint64",
                    "name": "eleven"
                },
                {
                    "type": "uint64",
                    "name": "twelve"
                },
                {
                    "type": "uint64",
                    "name": "thirteen"
                },
                {
                    "type": "uint64",
                    "name": "fourteen"
                },
                {
                    "type": "byte[]",
                    "name": "fifteen"
                }
            ],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Fifteen args should not encode the last argument as a tuple",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "method_with_more_than_15_args",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                },
                {
                    "type": "uint64",
                    "name": "c"
                },
                {
                    "type": "uint64",
                    "name": "d"
                },
                {
                    "type": "uint64",
                    "name": "asset"
                },
                {
                    "type": "uint64",
                    "name": "e"
                },
                {
                    "type": "uint64",
                    "name": "f"
                },
                {
                    "type": "pay",
                    "name": "pay"
                },
                {
                    "type": "uint64",
                    "name": "g"
                },
                {
                    "type": "uint64",
                    "name": "h"
                },
                {
                    "type": "uint64",
                    "name": "i"
                },
                {
                    "type": "uint64",
                    "name": "j"
                },
                {
                    "type": "uint64",
                    "name": "k"
                },
                {
                    "type": "uint64",
                    "name": "l"
                },
                {
                    "type": "uint64",
                    "name": "m"
                },
                {
                    "type": "uint64",
                    "name": "n"
                },
                {
                    "type": "uint64",
                    "name": "o"
                },
                {
                    "type": "uint64",
                    "name": "p"
                },
                {
                    "type": "uint64",
                    "name": "q"
                },
                {
                    "type": "uint64",
                    "name": "r"
                },
                {
                    "type": "byte[]",
                    "name": "s"
                },
                {
                    "type": "byte[]",
                    "name": "t"
                },
                {
                    "type": "uint64",
                    "name": "asset2"
                },
                {
                    "type": "pay",
                    "name": "pay2"
                },
                {
                    "type": "uint64",
                    "name": "u"
                },
                {
                    "type": "uint64",
                    "name": "v"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Application calls only support 16 args, and arc4 calls utilise the first arg for the method\nselector. Args beyond this number are packed into a tuple and placed in the 16th slot.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "hello_with_algopy_string",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 3,
                "bytes": 2
            },
            "local": {
                "ints": 1,
                "bytes": 1
            }
        },
        "keys": {
            "global": {
                "asa": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNh"
                },
                "an_int": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YW5faW50"
                },
                "some_bytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[3]",
                    "key": "c29tZV9ieXRlcw=="
                },
                "creator": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y3JlYXRvcg=="
                },
                "app": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXBw"
                }
            },
            "local": {
                "local_bytes": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "bG9jYWxfYnl0ZXM="
                },
                "local_uint": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bG9jYWxfdWludA=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "DeleteApplication",
            "NoOp",
            "OptIn"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        492
                    ],
                    "errorMessage": "ASA already opted in"
                },
                {
                    "pc": [
                        147
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        330
                    ],
                    "errorMessage": "OnCompletion must be OptIn && can only call when not creating"
                },
                {
                    "pc": [
                        319
                    ],
                    "errorMessage": "OnCompletion must be one of NoOp, CloseOut, DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        486
                    ],
                    "errorMessage": "Only creator can opt in to ASA"
                },
                {
                    "pc": [
                        595
                    ],
                    "errorMessage": "asset a == b"
                },
                {
                    "pc": [
                        337
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        490,
                        552
                    ],
                    "errorMessage": "check self.asa exists"
                },
                {
                    "pc": [
                        842
                    ],
                    "errorMessage": "check self.local_bytes exists for account"
                },
                {
                    "pc": [
                        831
                    ],
                    "errorMessage": "check self.local_uint exists for account"
                },
                {
                    "pc": [
                        764,
                        774,
                        784
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        394,
                        691,
                        713,
                        976,
                        1181,
                        1199,
                        1232,
                        1250,
                        1283,
                        1301,
                        1337,
                        1355,
                        1388,
                        1406,
                        1440,
                        1461,
                        1497,
                        1516,
                        1554,
                        1572,
                        1618,
                        1636,
                        1669,
                        1687,
                        1831
                    ],
                    "errorMessage": "invalid array length header"
                },
                {
                    "pc": [
                        401,
                        698,
                        720,
                        983,
                        1838
                    ],
                    "errorMessage": "invalid number of bytes for arc4.dynamic_array<arc4.uint8>"
                },
                {
                    "pc": [
                        624,
                        633
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 32>"
                },
                {
                    "pc": [
                        660
                    ],
                    "errorMessage": "invalid number of bytes for arc4.static_array<arc4.uint8, 3>"
                },
                {
                    "pc": [
                        1206,
                        1257,
                        1308,
                        1362,
                        1413,
                        1468,
                        1525,
                        1579,
                        1643,
                        1694
                    ],
                    "errorMessage": "invalid number of bytes for arc4.tuple<arc4.uint64,arc4.uint64,arc4.uint64,arc4.uint64,arc4.uint64,arc4.dynamic_array<arc4.uint8>,arc4.dynamic_array<arc4.uint8>,arc4.uint64,arc4.uint64,arc4.uint64>"
                },
                {
                    "pc": [
                        685
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint32"
                },
                {
                    "pc": [
                        361,
                        387,
                        427,
                        453,
                        479,
                        521,
                        530,
                        548,
                        583,
                        592,
                        605,
                        614,
                        641,
                        650,
                        668,
                        676,
                        706,
                        852,
                        861,
                        870,
                        879,
                        888,
                        897,
                        906,
                        915,
                        924,
                        933,
                        942,
                        951,
                        960,
                        969,
                        1039,
                        1047,
                        1055,
                        1063,
                        1072,
                        1081,
                        1089,
                        1107,
                        1115,
                        1123,
                        1131,
                        1139,
                        1147,
                        1155
                    ],
                    "errorMessage": "invalid number of bytes for arc4.uint64"
                },
                {
                    "pc": [
                        1167,
                        1218,
                        1269,
                        1323,
                        1374,
                        1425,
                        1483,
                        1540,
                        1604,
                        1655
                    ],
                    "errorMessage": "invalid tail pointer at index 5 of (uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)"
                },
                {
                    "pc": [
                        1187,
                        1238,
                        1289,
                        1343,
                        1394,
                        1449,
                        1503,
                        1560,
                        1624,
                        1675
                    ],
                    "errorMessage": "invalid tail pointer at index 6 of (uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)"
                },
                {
                    "pc": [
                        1162,
                        1213,
                        1264,
                        1318,
                        1369,
                        1420,
                        1478,
                        1535,
                        1599,
                        1650
                    ],
                    "errorMessage": "invalid tuple encoding"
                },
                {
                    "pc": [
                        556
                    ],
                    "errorMessage": "is correct asset"
                },
                {
                    "pc": [
                        562,
                        573
                    ],
                    "errorMessage": "is correct int"
                },
                {
                    "pc": [
                        569
                    ],
                    "errorMessage": "is payment to app"
                },
                {
                    "pc": [
                        370,
                        436,
                        462
                    ],
                    "errorMessage": "overflow"
                },
                {
                    "pc": [
                        540,
                        1099,
                        1592
                    ],
                    "errorMessage": "transaction type is pay"
                },
                {
                    "pc": [
                        771
                    ],
                    "errorMessage": "wrong 0th byte from storage"
                },
                {
                    "pc": [
                        781
                    ],
                    "errorMessage": "wrong 1st byte from storage"
                },
                {
                    "pc": [
                        791
                    ],
                    "errorMessage": "wrong 2nd byte from storage"
                },
                {
                    "pc": [
                        748
                    ],
                    "errorMessage": "wrong account from function"
                },
                {
                    "pc": [
                        742
                    ],
                    "errorMessage": "wrong account from storage"
                },
                {
                    "pc": [
                        761
                    ],
                    "errorMessage": "wrong application from function"
                },
                {
                    "pc": [
                        754
                    ],
                    "errorMessage": "wrong application from storage"
                },
                {
                    "pc": [
                        736
                    ],
                    "errorMessage": "wrong asset from function"
                },
                {
                    "pc": [
                        729
                    ],
                    "errorMessage": "wrong asset from storage"
                },
                {
                    "pc": [
                        804
                    ],
                    "errorMessage": "wrong int from function"
                },
                {
                    "pc": [
                        797
                    ],
                    "errorMessage": "wrong int from storage"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "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",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 99,
            "minor": 99,
            "patch": 99
        }
    },
    "events": [],
    "templateVariables": {}
}