// Op                                                                          //                                              Op Description Stack (out)               X stack                          Source code                      Source line

#pragma version 10

// test_cases.abi_routing.minimal.MinimumARC4.approval_program() -> uint64:
main_block@0:
    txn ApplicationID                                                          //                                                             {txn}
    //                                                                         virtual: store app_id%0#0 to l-stack (no copy)  app_id%0#0
    //                                                                         virtual: load app_id%0#0 from l-stack (no copy) app_id%0#0
    bnz main_entrypoint@2                                                      //
    // Implicit fall through to main_on_create@1                               //

main_on_create@1:
    callsub __init__                                                           //
    // Implicit fall through to main_entrypoint@2                              //

main_entrypoint@2:
    callsub __puya_arc4_router__                                               //                                                             {__puya_arc4_router__}                                     class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: store tmp%0#0 to l-stack (no copy)     tmp%0#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: load tmp%0#0 from l-stack (no copy)    tmp%0#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    return                                                                     //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4


// test_cases.abi_routing.minimal.MinimumARC4.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1                                                                  //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4

__puya_arc4_router___block@0:
    txn NumAppArgs                                                             //                                                             {txn}                                                      class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: store tmp%0#0 to l-stack (no copy)     tmp%0#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: load tmp%0#0 from l-stack (no copy)    tmp%0#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    bnz __puya_arc4_router___after_if_else@6                                   //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    // Implicit fall through to __puya_arc4_router___bare_routing@2            //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4

__puya_arc4_router___bare_routing@2:
    txn OnCompletion                                                           //                                                             {txn}                                                      class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: store tmp%2#0 to l-stack (no copy)     tmp%2#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: load tmp%2#0 from l-stack (no copy)    tmp%2#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    bnz __puya_arc4_router___after_if_else@6                                   //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    // Implicit fall through to __puya_arc4_router_____algopy_default_create@3 //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4

__puya_arc4_router_____algopy_default_create@3:
    txn ApplicationID                                                          //                                                             {txn}                                                      class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: store tmp%3#0 to l-stack (no copy)     tmp%3#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: load tmp%3#0 from l-stack (no copy)    tmp%3#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    !                                                                          //                                                             {!}                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: store tmp%4#0 to l-stack (no copy)     tmp%4#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    //                                                                         virtual: load tmp%4#0 from l-stack (no copy)    tmp%4#0                                  class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    assert // is creating                                                      //                                                                                                                        class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    int 1                                                                      //                                                             1                                                          class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    retsub                                                                     //                                                             1                                                          class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4

__puya_arc4_router___after_if_else@6:
    int 0                                                                      //                                                             0                                                          class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4
    retsub                                                                     //                                                             0                                                          class MinimumARC4(ARC4Contract): abi_routing/minimal.py:4


// test_cases.abi_routing.minimal.MinimumARC4.__init__() -> void:
__init__:
    proto 0 0                                                                  //                                                                                                                        def __init__(self) -> None:      abi_routing/minimal.py:5

__init___block@0:
    byte "gvalue"                                                              //                                                             "gvalue"                                                   self.gvalue                      abi_routing/minimal.py:6
    int 4                                                                      //                                                             "gvalue",4                                                 UInt64(4)                        abi_routing/minimal.py:6
    app_global_put                                                             //                                                                                                                        self.gvalue = UInt64(4)          abi_routing/minimal.py:6
    retsub                                                                     //

