{
    "hints": {
        "noop_with_uint64(uint64)uint8": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "all_the_things(uint64)uint8": {
            "read_only": true,
            "call_config": {
                "no_op": "ALL",
                "opt_in": "ALL",
                "close_out": "ALL",
                "update_application": "ALL",
                "delete_application": "ALL"
            }
        },
        "mixed_oca(uint64)uint8": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL",
                "close_out": "CALL",
                "delete_application": "CALL"
            }
        },
        "opt_into_asset(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "with_transactions(asset,uint64,pay,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "compare_assets(asset,asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_address()address": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_asset()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_application()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_an_int()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "method_with_default_args(asset,asset,account,account,application,application,byte[3],uint64,uint64)void": {
            "default_arguments": {
                "asset_from_storage": {
                    "source": "global-state",
                    "data": "asa"
                },
                "asset_from_function": {
                    "source": "abi-method",
                    "data": {
                        "name": "get_asset",
                        "args": [],
                        "returns": {
                            "type": "uint64"
                        }
                    }
                },
                "account_from_storage": {
                    "source": "global-state",
                    "data": "creator"
                },
                "account_from_function": {
                    "source": "abi-method",
                    "data": {
                        "name": "get_address",
                        "args": [],
                        "returns": {
                            "type": "address"
                        }
                    }
                },
                "application_from_storage": {
                    "source": "global-state",
                    "data": "app"
                },
                "application_from_function": {
                    "source": "abi-method",
                    "data": {
                        "name": "get_application",
                        "args": [],
                        "returns": {
                            "type": "uint64"
                        }
                    }
                },
                "bytes_from_storage": {
                    "source": "global-state",
                    "data": "some_bytes"
                },
                "int_from_storage": {
                    "source": "global-state",
                    "data": "an_int"
                },
                "int_from_function": {
                    "source": "abi-method",
                    "data": {
                        "name": "get_an_int",
                        "args": [],
                        "returns": {
                            "type": "uint64"
                        }
                    }
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "method_with_more_than_15_args(uint64,uint64,uint64,uint64,asset,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],asset,pay,uint64,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "hello_with_puyapy_string(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgp0ZXN0X2Nhc2VzLmFiaV9yb3V0aW5nLmNvbnRyYWN0LlJlZmVyZW5jZS5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgLy8gYWJpX3JvdXRpbmcvY29udHJhY3QucHk6MjIKICAgIC8vIGNsYXNzIFJlZmVyZW5jZShBUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "an_int": {
                    "type": "uint64",
                    "key": "an_int"
                },
                "app": {
                    "type": "uint64",
                    "key": "app"
                },
                "asa": {
                    "type": "uint64",
                    "key": "asa"
                },
                "creator": {
                    "type": "bytes",
                    "key": "creator"
                },
                "some_bytes": {
                    "type": "bytes",
                    "key": "some_bytes"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Reference",
        "methods": [
            {
                "name": "noop_with_uint64",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    }
                ],
                "returns": {
                    "type": "uint8"
                }
            },
            {
                "name": "all_the_things",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    }
                ],
                "returns": {
                    "type": "uint8"
                }
            },
            {
                "name": "mixed_oca",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    }
                ],
                "returns": {
                    "type": "uint8"
                }
            },
            {
                "name": "opt_into_asset",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "with_transactions",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "an_int"
                    },
                    {
                        "type": "pay",
                        "name": "pay"
                    },
                    {
                        "type": "uint64",
                        "name": "another_int"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "compare_assets",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset_a"
                    },
                    {
                        "type": "asset",
                        "name": "asset_b"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_address",
                "args": [],
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "get_asset",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_application",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_an_int",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "method_with_default_args",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset_from_storage"
                    },
                    {
                        "type": "asset",
                        "name": "asset_from_function"
                    },
                    {
                        "type": "account",
                        "name": "account_from_storage"
                    },
                    {
                        "type": "account",
                        "name": "account_from_function"
                    },
                    {
                        "type": "application",
                        "name": "application_from_storage"
                    },
                    {
                        "type": "application",
                        "name": "application_from_function"
                    },
                    {
                        "type": "byte[3]",
                        "name": "bytes_from_storage"
                    },
                    {
                        "type": "uint64",
                        "name": "int_from_storage"
                    },
                    {
                        "type": "uint64",
                        "name": "int_from_function"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "method_with_more_than_15_args",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a"
                    },
                    {
                        "type": "uint64",
                        "name": "b"
                    },
                    {
                        "type": "uint64",
                        "name": "c"
                    },
                    {
                        "type": "uint64",
                        "name": "d"
                    },
                    {
                        "type": "asset",
                        "name": "asset"
                    },
                    {
                        "type": "uint64",
                        "name": "e"
                    },
                    {
                        "type": "uint64",
                        "name": "f"
                    },
                    {
                        "type": "pay",
                        "name": "pay"
                    },
                    {
                        "type": "uint64",
                        "name": "g"
                    },
                    {
                        "type": "uint64",
                        "name": "h"
                    },
                    {
                        "type": "uint64",
                        "name": "i"
                    },
                    {
                        "type": "uint64",
                        "name": "j"
                    },
                    {
                        "type": "uint64",
                        "name": "k"
                    },
                    {
                        "type": "uint64",
                        "name": "l"
                    },
                    {
                        "type": "uint64",
                        "name": "m"
                    },
                    {
                        "type": "uint64",
                        "name": "n"
                    },
                    {
                        "type": "uint64",
                        "name": "o"
                    },
                    {
                        "type": "uint64",
                        "name": "p"
                    },
                    {
                        "type": "uint64",
                        "name": "q"
                    },
                    {
                        "type": "uint64",
                        "name": "r"
                    },
                    {
                        "type": "byte[]",
                        "name": "s"
                    },
                    {
                        "type": "byte[]",
                        "name": "t"
                    },
                    {
                        "type": "asset",
                        "name": "asset2"
                    },
                    {
                        "type": "pay",
                        "name": "pay2"
                    },
                    {
                        "type": "uint64",
                        "name": "u"
                    },
                    {
                        "type": "uint64",
                        "name": "v"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Application calls only support 16 args, and arc4 calls utilise the first arg for the method\nselector. Args beyond this number are packed into a tuple and placed in the 16th slot."
            },
            {
                "name": "hello_with_puyapy_string",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CREATE",
        "close_out": "CREATE",
        "update_application": "CREATE",
        "delete_application": "CREATE"
    }
}