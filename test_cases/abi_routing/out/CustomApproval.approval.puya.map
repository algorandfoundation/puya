{
  "version": 3,
  "sources": [
    "../custom_approval.py"
  ],
  "mappings": ";;;;;;;;;AAQe;;AAAA;AAAP;AAIG;;AAAoB;;AAApB;AAAA;;;AAA0B;;;AAAmC;;AAAR;AAA3B;AAA1B;;;AACK;;;;;;;;;;;;;;AAAJ;AARZ;;AAAA;;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;;;;;AAUW;AAAA;;;AAEK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADJ;AAIJ;AAEH;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAEc;;AAAJ;AAFV;AAAA;;;;;;AAAA;AAAA;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.abi_routing.custom_approval.CustomApproval.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "pushbytes \"\"",
      "stack_out": [
        "%did_match_routing#0"
      ]
    },
    "3": {
      "op": "dup",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "4": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%0#0"
      ]
    },
    "6": {
      "op": "bnz main_after_if_else@2",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "9": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%0#2"
      ]
    },
    "11": {
      "op": "!",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%1#1"
      ]
    },
    "12": {
      "error": "nonsense assert just to generate an init method",
      "op": "assert // nonsense assert just to generate an init method",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "13": {
      "block": "main_after_if_else@2",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%1#0"
      ]
    },
    "15": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%1#0",
        "2"
      ]
    },
    "17": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%2#0"
      ]
    },
    "18": {
      "op": "bz main_after_if_else@5",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "21": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%3#0"
      ]
    },
    "24": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "tmp%3#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%3#0",
        "42"
      ]
    },
    "26": {
      "op": "itob",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "27": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%5#0"
      ]
    },
    "28": {
      "op": "bz main_after_if_else@5",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "31": {
      "op": "pushbytes \"\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\"",
      "defined_out": [
        "\"\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\""
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "\"\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\\xf0\\x9f\\x8e\\x89\""
      ]
    },
    "45": {
      "op": "log",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "46": {
      "block": "main_after_if_else@5",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "pushint 0 // 0",
      "defined_out": [
        "%did_match_routing#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "%did_match_routing#0"
      ]
    },
    "48": {
      "op": "bury 2",
      "defined_out": [
        "%did_match_routing#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "50": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "%did_match_routing#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%0#2"
      ]
    },
    "52": {
      "op": "bz main___algopy_default_create@12",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "55": {
      "op": "pushbytes 0x03b5c0af // method \"add_one(uint64)uint64\"",
      "defined_out": [
        "%did_match_routing#0",
        "Method(add_one(uint64)uint64)"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "Method(add_one(uint64)uint64)"
      ]
    },
    "61": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "%did_match_routing#0",
        "Method(add_one(uint64)uint64)",
        "tmp%2#1"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "Method(add_one(uint64)uint64)",
        "tmp%2#1"
      ]
    },
    "64": {
      "op": "match main_add_one_route@10",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "68": {
      "block": "main_switch_case_next@11",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "result#0"
      ]
    },
    "70": {
      "op": "bury 1",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "72": {
      "block": "main_after_if_else@13",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "dup",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "result#0"
      ]
    },
    "73": {
      "op": "bnz main_after_if_else@7",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "76": {
      "op": "pushbytes \"this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here\"",
      "defined_out": [
        "\"this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here\"",
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "\"this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here\""
      ]
    },
    "183": {
      "op": "log",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "184": {
      "block": "main_after_if_else@7",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "return",
      "defined_out": [
        "result#0"
      ]
    },
    "185": {
      "block": "main_add_one_route@10",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%3#1"
      ]
    },
    "187": {
      "op": "!",
      "defined_out": [
        "tmp%4#1"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%4#1"
      ]
    },
    "188": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#1",
        "tmp%5#1"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%4#1",
        "tmp%5#1"
      ]
    },
    "190": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%7#0"
      ]
    },
    "191": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "192": {
      "callsub": "test_cases.abi_routing.custom_approval.CustomApproval.add_one[routing]",
      "op": "callsub add_one"
    },
    "195": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "%did_match_routing#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "%did_match_routing#0"
      ]
    },
    "197": {
      "op": "bury 2",
      "defined_out": [
        "%did_match_routing#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "199": {
      "op": "b main_switch_case_next@11"
    },
    "202": {
      "block": "main___algopy_default_create@12",
      "stack_in": [
        "%did_match_routing#0",
        "result#0"
      ],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%8#0"
      ]
    },
    "204": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%9#0"
      ]
    },
    "205": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "207": {
      "op": "!",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "208": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "tmp%12#0"
      ]
    },
    "209": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "assert // OnCompletion must be NoOp && can only call when creating",
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "210": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0",
        "result#0"
      ]
    },
    "212": {
      "op": "bury 1",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "%did_match_routing#0",
        "result#0"
      ]
    },
    "214": {
      "op": "b main_after_if_else@13"
    },
    "217": {
      "subroutine": "test_cases.abi_routing.custom_approval.CustomApproval.add_one[routing]",
      "params": {},
      "block": "add_one",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "dup",
      "defined_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "221": {
      "op": "len",
      "defined_out": [
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0"
      ]
    },
    "222": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "len%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "len%0#0",
        "8"
      ]
    },
    "224": {
      "op": "==",
      "defined_out": [
        "eq%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "eq%0#0"
      ]
    },
    "225": {
      "error": "invalid number of bytes for uint64",
      "op": "assert // invalid number of bytes for uint64",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "226": {
      "op": "btoi",
      "defined_out": [
        "x#0"
      ],
      "stack_out": [
        "x#0"
      ]
    },
    "227": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "x#0"
      ],
      "stack_out": [
        "x#0",
        "1"
      ]
    },
    "229": {
      "op": "+",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "230": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "231": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "237": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "238": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "239": {
      "op": "log",
      "stack_out": []
    },
    "240": {
      "retsub": true,
      "op": "retsub"
    }
  }
}