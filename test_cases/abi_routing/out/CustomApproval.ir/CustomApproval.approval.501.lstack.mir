// Op                                                                                        Stack (out)
// test_cases.abi_routing.custom_approval.CustomApproval.approval_program() -> uint64:
subroutine main:
    main_block@0:
        txn ApplicationID                                                                    tmp%0#0
        l-load tmp%0#0 0                                                                     tmp%0#0
        bz main_call___init__@1 ; b main_after_if_else@2

    main_call___init__@1:
        // abi_routing/custom_approval.py:9
        // assert Txn.application_id == 0, "nonsense assert just to generate an init method"
        txn ApplicationID                                                                    tmp%0#2
        l-load tmp%0#2 0                                                                     tmp%0#2
        !                                                                                    tmp%1#1
        l-load tmp%1#1 0                                                                     tmp%1#1
        assert // nonsense assert just to generate an init method
        b main_after_if_else@2

    main_after_if_else@2:
        // abi_routing/custom_approval.py:13
        // if Txn.num_app_args == 2 and Txn.application_args(1) == op.itob(42):
        txn NumAppArgs                                                                       tmp%1#0
        l-load tmp%1#0 0                                                                     tmp%1#0
        int 2                                                                                tmp%1#0,2
        ==                                                                                   tmp%2#0
        l-load tmp%2#0 0                                                                     tmp%2#0
        bz main_after_if_else@5 ; b main_and_contd@3

    main_and_contd@3:
        // abi_routing/custom_approval.py:13
        // if Txn.num_app_args == 2 and Txn.application_args(1) == op.itob(42):
        txna ApplicationArgs 1                                                               tmp%3#0
        int 42                                                                               tmp%3#0,42
        itob                                                                                 tmp%3#0,tmp%4#0
        l-load tmp%3#0 1                                                                     tmp%4#0,tmp%3#0
        l-load tmp%4#0 1                                                                     tmp%3#0,tmp%4#0
        ==                                                                                   tmp%5#0
        l-load tmp%5#0 0                                                                     tmp%5#0
        bz main_after_if_else@5 ; b main_if_body@4

    main_if_body@4:
        // abi_routing/custom_approval.py:14
        // log("ðŸŽ‰ðŸŽ‰ðŸŽ‰")
        byte "\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89"                              "\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89"
        log
        b main_after_if_else@5

    main_after_if_else@5:
        // abi_routing/custom_approval.py:6
        // class CustomApproval(ARC4Contract):
        int 0                                                                                0
        v-store %did_match_routing#0
        txn NumAppArgs                                                                       tmp%0#2
        l-load tmp%0#2 0                                                                     tmp%0#2
        bz main___algopy_default_create@12 ; b main_abi_routing@9

    main_abi_routing@9:
        // abi_routing/custom_approval.py:6
        // class CustomApproval(ARC4Contract):
        txna ApplicationArgs 0                                                               tmp%2#1
        method add_one(uint64)uint64                                                         tmp%2#1,Method(add_one(uint64)uint64)
        l-load tmp%2#1 1                                                                     Method(add_one(uint64)uint64),tmp%2#1
        match main_add_one_route@10 ; b main_switch_case_next@11

    main_add_one_route@10:
        // abi_routing/custom_approval.py:23
        // @arc4.abimethod
        txn OnCompletion                                                                     tmp%3#1
        l-load tmp%3#1 0                                                                     tmp%3#1
        !                                                                                    tmp%4#1
        txn ApplicationID                                                                    tmp%4#1,tmp%5#1
        l-load tmp%4#1 1                                                                     tmp%5#1,tmp%4#1
        l-load tmp%5#1 1                                                                     tmp%4#1,tmp%5#1
        &&                                                                                   tmp%7#0
        l-load tmp%7#0 0                                                                     tmp%7#0
        assert // OnCompletion must be NoOp && can only call when not creating
        callsub add_one
        int 1                                                                                1
        v-store %did_match_routing#0
        b main_switch_case_next@11

    main_switch_case_next@11:
        v-load %did_match_routing#0                                                          %did_match_routing#0
        v-store result#0
        b main_after_if_else@13

    main___algopy_default_create@12:
        txn OnCompletion                                                                     tmp%8#0
        l-load tmp%8#0 0                                                                     tmp%8#0
        !                                                                                    tmp%9#0
        txn ApplicationID                                                                    tmp%9#0,tmp%10#0
        l-load tmp%10#0 0                                                                    tmp%9#0,tmp%10#0
        !                                                                                    tmp%9#0,tmp%11#0
        l-load tmp%9#0 1                                                                     tmp%11#0,tmp%9#0
        l-load tmp%11#0 1                                                                    tmp%9#0,tmp%11#0
        &&                                                                                   tmp%12#0
        l-load tmp%12#0 0                                                                    tmp%12#0
        assert // OnCompletion must be NoOp && can only call when creating
        int 1                                                                                1
        l-store %did_match_routing#0 0                                                       %did_match_routing#0
        l-load %did_match_routing#0 0                                                        %did_match_routing#0
        v-store result#0
        b main_after_if_else@13

    main_after_if_else@13:
        // abi_routing/custom_approval.py:16
        // if not result:
        v-load result#0                                                                      result#0
        bz main_if_body@6 ; b main_after_if_else@7

    main_if_body@6:
        // abi_routing/custom_approval.py:18-19
        // "this will never be seen unless you're running in simulation mode anyway"
        // " so I can say whatever I want here"
        byte "this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here" "this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here"
        // abi_routing/custom_approval.py:17-20
        // log(
        //     "this will never be seen unless you're running in simulation mode anyway"
        //     " so I can say whatever I want here"
        // )
        log
        b main_after_if_else@7

    main_after_if_else@7:
        // abi_routing/custom_approval.py:21
        // return result
        v-load result#0                                                                      result#0
        return


// test_cases.abi_routing.custom_approval.CustomApproval.add_one[routing]() -> void:
subroutine add_one:
    add_one_block@0:
        // abi_routing/custom_approval.py:23
        // @arc4.abimethod
        txna ApplicationArgs 1                                                               tmp%0#0
        l-load-copy tmp%0#0 0                                                                tmp%0#0,tmp%0#0 (copy)
        len                                                                                  tmp%0#0,len%0#0
        l-load len%0#0 0                                                                     tmp%0#0,len%0#0
        int 8                                                                                tmp%0#0,len%0#0,8
        ==                                                                                   tmp%0#0,eq%0#0
        l-load eq%0#0 0                                                                      tmp%0#0,eq%0#0
        assert // invalid number of bytes for arc4.uint64                                    tmp%0#0
        l-load tmp%0#0 0                                                                     tmp%0#0
        btoi                                                                                 x#0
        // abi_routing/custom_approval.py:25
        // return x + 1
        l-load x#0 0                                                                         x#0
        int 1                                                                                x#0,1
        +                                                                                    tmp%0#1
        // abi_routing/custom_approval.py:23
        // @arc4.abimethod
        l-load tmp%0#1 0                                                                     tmp%0#1
        itob                                                                                 aggregate%val_as_bytes%0#0
        byte 0x151f7c75                                                                      aggregate%val_as_bytes%0#0,0x151f7c75
        l-load aggregate%val_as_bytes%0#0 1                                                  0x151f7c75,aggregate%val_as_bytes%0#0
        concat                                                                               tmp%4#0
        l-load tmp%4#0 0                                                                     tmp%4#0
        log
        retsub


