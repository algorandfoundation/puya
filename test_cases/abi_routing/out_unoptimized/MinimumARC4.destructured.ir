contract test_cases.abi_routing.minimal.MinimumARC4:
    program approval:
        subroutine algopy.arc4.ARC4Contract.approval_program() -> bool:
            block@0: // L-1
                let app_id%0#0: uint64 = (txn ApplicationID)
                goto app_id%0#0 ? block@2 : block@1
            block@1: // on_create_L5
                test_cases.abi_routing.minimal.MinimumARC4.__init__()
                goto block@2
            block@2: // entrypoint_L5
                let tmp%0#0: bool = test_cases.abi_routing.minimal.MinimumARC4.__puya_arc4_router__()
                return tmp%0#0
        
        subroutine test_cases.abi_routing.minimal.MinimumARC4.__puya_arc4_router__() -> bool:
            block@0: // L4
                let tmp%0#0: uint64 = (txn NumAppArgs)
                let tmp%1#0: bool = (!= tmp%0#0 0u)
                goto tmp%1#0 ? block@1 : block@2
            block@1: // abi_routing_L4
                goto block@6
            block@2: // bare_routing_L4
                let tmp%2#0: uint64 = (txn OnCompletion)
                switch tmp%2#0 {0u => block@3, * => block@4}
            block@3: // __algopy_default_create_L4
                let tmp%3#0: uint64 = (txn ApplicationID)
                let tmp%4#0: bool = (== tmp%3#0 0u)
                (assert tmp%4#0) // is creating
                test_cases.abi_routing.minimal.MinimumARC4.__algopy_default_create()
                return 1u
            block@4: // switch_case_default_L4
                goto block@5
            block@5: // switch_case_next_L4
                goto block@6
            block@6: // after_if_else_L4
                return 0u
        
        subroutine test_cases.abi_routing.minimal.MinimumARC4.__algopy_default_create() -> void:
            block@0: // L4
                return 
        
        subroutine test_cases.abi_routing.minimal.MinimumARC4.__init__() -> void:
            block@0: // L5
                (app_global_put "gvalue" 4u)
                return 
    
    program clear-state:
        subroutine algopy.arc4.ARC4Contract.clear_state_program() -> bool:
            block@0: // L-1
                return 1u