#pragma version 10
#pragma typetrack false

// test_cases.abi_routing.custom_approval.CustomApproval2.__algopy_entrypoint_with_init() -> uint64:
main:
    txn ApplicationID
    bnz main_after_if_else@2

main_call___init__@1:
    callsub __init__

main_after_if_else@2:
    callsub approval_program
    return


// test_cases.abi_routing.custom_approval.CustomApproval2.approval_program() -> uint64:
approval_program:
    // abi_routing/custom_approval.py:29-30
    // @typing.override
    // def approval_program(self) -> bool:
    proto 0 1
    // abi_routing/custom_approval.py:31
    // return False
    pushint 0 // 0
    retsub


// test_cases.abi_routing.custom_approval.CustomApproval.__init__() -> void:
__init__:
    // abi_routing/custom_approval.py:7
    // def __init__(self) -> None:
    proto 0 0
    // abi_routing/custom_approval.py:9
    // assert Txn.application_id == 0, "nonsense assert just to generate an init method"
    txn ApplicationID
    pushint 0 // 0
    ==
    assert // nonsense assert just to generate an init method
    retsub
