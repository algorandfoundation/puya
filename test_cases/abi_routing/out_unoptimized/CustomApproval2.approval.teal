#pragma version 10
#pragma typetrack false

// test_cases.abi_routing.custom_approval.CustomApproval2.__algopy_entrypoint_with_init() -> uint64:
main:
    b block@0

block@0:
    txn ApplicationID
    bnz after_if_else@2
    b call___init__@1

call___init__@1:
    callsub __init__
    b after_if_else@2

after_if_else@2:
    callsub approval_program
    return


// test_cases.abi_routing.custom_approval.CustomApproval2.approval_program() -> uint64:
approval_program:
    b approval_program_block@0

approval_program_block@0:
    // abi_routing/custom_approval.py:31
    // return False
    pushint 0 // 0
    retsub


// test_cases.abi_routing.custom_approval.CustomApproval.__init__() -> void:
__init__:
    b __init___block@0

__init___block@0:
    // abi_routing/custom_approval.py:8
    // super().__init__()
    callsub algopy._contract.Contract.__init__
    // abi_routing/custom_approval.py:9
    // assert Txn.application_id == 0, "nonsense assert just to generate an init method"
    txn ApplicationID
    pushint 0 // 0
    ==
    assert // nonsense assert just to generate an init method
    retsub


// algopy._contract.Contract.__init__() -> void:
algopy._contract.Contract.__init__:
    b algopy._contract.Contract.__init___block@0

algopy._contract.Contract.__init___block@0:
    retsub
