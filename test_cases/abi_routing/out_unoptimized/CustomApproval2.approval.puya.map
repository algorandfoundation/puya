{
  "version": 3,
  "sources": [
    "../custom_approval.py"
  ],
  "mappings": ";;;;;;;;;;;;;AA4BA;;;AAEe;;AAAP;AAxBR;;;AAEe;;AAAsB;;AAAtB;AAAP;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.abi_routing.custom_approval.CustomApproval2.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "6": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.abi_routing.custom_approval.CustomApproval.__init__",
      "op": "callsub __init__"
    },
    "9": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "test_cases.abi_routing.custom_approval.CustomApproval2.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "12": {
      "op": "return",
      "stack_out": []
    },
    "13": {
      "subroutine": "test_cases.abi_routing.custom_approval.CustomApproval2.approval_program",
      "params": {},
      "block": "approval_program",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "16": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "18": {
      "retsub": true,
      "op": "retsub"
    },
    "19": {
      "subroutine": "test_cases.abi_routing.custom_approval.CustomApproval.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "22": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "pushint 0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "26": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "27": {
      "error": "nonsense assert just to generate an init method",
      "op": "assert // nonsense assert just to generate an init method",
      "stack_out": []
    },
    "28": {
      "retsub": true,
      "op": "retsub"
    }
  }
}