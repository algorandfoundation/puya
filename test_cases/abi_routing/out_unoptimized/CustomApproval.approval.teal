#pragma version 10

test_cases.abi_routing.custom_approval.CustomApproval.approval_program:
    intcblock 0 1
    pushbytes ""
    txn ApplicationID
    bnz main_after_if_else@2
    callsub __init__

main_after_if_else@2:
    // abi_routing/custom_approval.py:13
    // if Txn.num_app_args == 2 and Txn.application_args(1) == op.itob(42):
    txn NumAppArgs
    pushint 2 // 2
    ==
    bz main_after_if_else@5
    txna ApplicationArgs 1
    pushint 42 // 42
    itob
    ==
    bz main_after_if_else@5
    // abi_routing/custom_approval.py:14
    // log("ðŸŽ‰ðŸŽ‰ðŸŽ‰")
    pushbytes "\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89"
    log

main_after_if_else@5:
    // abi_routing/custom_approval.py:15
    // result = super().approval_program()
    callsub approval_program
    dup
    bury 2
    // abi_routing/custom_approval.py:16
    // if not result:
    bnz main_after_if_else@7
    // abi_routing/custom_approval.py:18-19
    // "this will never be seen unless you're running in simulation mode anyway"
    // " so I can say whatever I want here"
    pushbytes "this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here"
    // abi_routing/custom_approval.py:17-20
    // log(
    //     "this will never be seen unless you're running in simulation mode anyway"
    //     " so I can say whatever I want here"
    // )
    log

main_after_if_else@7:
    // abi_routing/custom_approval.py:21
    // return result
    dup
    return


// test_cases.abi_routing.custom_approval.CustomApproval.__init__() -> void:
__init__:
    // abi_routing/custom_approval.py:7
    // def __init__(self) -> None:
    proto 0 0
    // abi_routing/custom_approval.py:9
    // assert Txn.application_id == 0, "nonsense assert just to generate an init method"
    txn ApplicationID
    intc_0 // 0
    ==
    assert // nonsense assert just to generate an init method
    retsub


// algopy.arc4.ARC4Contract.approval_program() -> uint64:
approval_program:
    proto 0 1
    callsub __puya_arc4_router__
    retsub


// test_cases.abi_routing.custom_approval.CustomApproval.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    // abi_routing/custom_approval.py:6
    // class CustomApproval(ARC4Contract):
    proto 0 1
    txn NumAppArgs
    intc_0 // 0
    !=
    bz __puya_arc4_router___bare_routing@5
    txna ApplicationArgs 0
    pushbytes 0x03b5c0af // method "add_one(uint64)uint64"
    swap
    match __puya_arc4_router___add_one_route@2
    b __puya_arc4_router___switch_case_default@3

__puya_arc4_router___add_one_route@2:
    // abi_routing/custom_approval.py:23
    // @arc4.abimethod
    txn OnCompletion
    intc_0 // NoOp
    ==
    assert // OnCompletion is NoOp
    txn ApplicationID
    intc_0 // 0
    !=
    assert // is not creating
    // abi_routing/custom_approval.py:6
    // class CustomApproval(ARC4Contract):
    txna ApplicationArgs 1
    btoi
    // abi_routing/custom_approval.py:23
    // @arc4.abimethod
    callsub add_one
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@3:
    b __puya_arc4_router___after_if_else@9

__puya_arc4_router___bare_routing@5:
    // abi_routing/custom_approval.py:6
    // class CustomApproval(ARC4Contract):
    txn OnCompletion
    intc_0 // 0
    swap
    match __puya_arc4_router_____algopy_default_create@6
    b __puya_arc4_router___switch_case_default@7

__puya_arc4_router_____algopy_default_create@6:
    txn ApplicationID
    intc_0 // 0
    ==
    assert // is creating
    callsub __algopy_default_create
    intc_1 // 1
    retsub

__puya_arc4_router___switch_case_default@7:

__puya_arc4_router___after_if_else@9:
    // abi_routing/custom_approval.py:6
    // class CustomApproval(ARC4Contract):
    intc_0 // 0
    retsub


// test_cases.abi_routing.custom_approval.CustomApproval.add_one(x: uint64) -> uint64:
add_one:
    // abi_routing/custom_approval.py:23-24
    // @arc4.abimethod
    // def add_one(self, x: UInt64) -> UInt64:
    proto 1 1
    // abi_routing/custom_approval.py:25
    // return x + 1
    frame_dig -1
    intc_1 // 1
    +
    retsub


// test_cases.abi_routing.custom_approval.CustomApproval.__algopy_default_create() -> void:
__algopy_default_create:
    proto 0 0
    retsub
