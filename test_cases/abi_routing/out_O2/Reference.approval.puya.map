{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBQ;AAAW;AAAX;AACA;;;;;;;;AAAc;AAAd;AACA;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;AAAe;;AAAf;AACA;;;;;AAAW;AAAX;AANR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QK;;AAAA;AAAA;AAAA;;AAAA;AA/QL;;;AAAA;;;AAiRe;;;;;;;;AAAA;AAAA;AAAkB;;;AAAlB;AAFV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlEA;;AAAA;AAAA;AAAA;;AAAA;AA7ML;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAgPe;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAc;;;;AAAd;AAAP;AACO;;AAAA;;AAAe;;;;AAAf;AAAP;AACA;;AAAA;AACA;;AAAA;AAEI;;AAAA;;AAAA;AAAJ;AAGI;;AAAA;AACE;;AAAA;AADF;AAEE;;AAAA;AAFF;AAAA;;AAAA;AAIE;;AAAA;AAJF;AAKE;;AAAA;AALF;AAME;;AAAA;AANF;AAOE;;AAAA;AAPF;AAQE;;AAAA;AARF;AASE;;AAAA;AATF;AAUE;;AAAA;AAVF;AAWE;;AAAA;AAXF;AAYE;;AAAA;AAZF;AAaE;;AAtQd;AAsQc;AAbF;AAcE;;AAvQd;;AAuQc;AAdF;AAAA;;AAAA;AAgBE;;AAzQd;;AAyQc;AAhBF;AAiBE;;AA1Qd;;AA0Qc;AAjBF;AAkBE;;AA3Qd;;AA2Qc;AAlBF;AAmBE;AA5Qd;;AA4Qc;AAnBF;AADG;AA3CV;AAAA;AAAA;AAAA;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AAvKL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AA4LY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AADJ;AApBH;AAAA;AAAA;AAAA;AAAA;;AAjDA;;AAAA;AAAA;AAAA;;AAAA;AAtHL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAuJe;;AAAsB;AAAtB;AAAP;AACO;;AAAuB;;;AAAvB;AAAP;AAC+B;;AAAxB;;AAAA;AAAP;AACgC;;AAAzB;;AAAA;AAAP;AACO;;AAA4B;AAA5B;AAAP;AACO;;AAA6B;;;AAA7B;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;AAA2B;AAA3B;AAAP;AACO;;AAAA;AAA4B;;AAA5B;AAAP;AACO;;AAAkB;;;;;;AAAlB;AAAP;AACO;;AAAkB;;;;;;;AAAlB;AAAP;AACyC;;AAAhB;AAAA;AAAA;AAAA;AAAlB;;AAAA;AAAP;AAC4C;;AAAjB;AAAA;AAAA;AAAA;AAApB;AAAP;AA/CH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAlGL;;;AAAA;AAAA;;;AAAA;AAoGe;AAAP;AAFH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AArFL;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AA6Fe;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;;AAAgB;;AAAhB;AAAP;AACO;AAAsB;AAAtB;AAAP;AAXH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AApEL;;;AAAA;AAuEe;;AAAiB;;AAAjB;AAAP;AAEW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEA;AAAA;;AAAA;AAGA;AAC4B;;AAA5B;;AACsB;AAAtB;;AACiC;;AAAjC;;AACA;;AACA;AAfH;;AA1BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA1CL;;;AAoD6B;AAAZ;AAAA;AACF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAXV;AAAA;AAAA;AAAA;AAAA;;AA1CL;;;AAuC6B;AAAZ;AAAA;AACF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAdV;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AArBL;;;AAAA;AAAA;;;AAAA;;;AAuBwB;;AAAhB;AAAA;;AAAA;AACiB;;AAAjB;AAAA;;AAAA;AAHH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAhBL;;;AAkBqB;AAAJ;AAAA;AACF;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAHV;AAAA;AAAA;AAAA;AAAA;;AAhBL;;AAAA;;;;;;;;;;;;;;AAAA;;;AAuDK;;AAAA;AAAA;AAWO;;;;;;;;;;;;;AAAJ;AAXH;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.abi_routing.contract.Reference.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 123 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"asa\" \"local_uint\" \"local_bytes\" 0x151f7c7500000000000001c8"
    },
    "54": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "56": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "59": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\""
      ],
      "stack_out": [
        "\"asa\""
      ]
    },
    "60": {
      "op": "intc_2 // 123",
      "defined_out": [
        "\"asa\"",
        "123"
      ],
      "stack_out": [
        "\"asa\"",
        "123"
      ]
    },
    "61": {
      "op": "app_global_put",
      "stack_out": []
    },
    "62": {
      "op": "pushbytes \"an_int\"",
      "defined_out": [
        "\"an_int\""
      ],
      "stack_out": [
        "\"an_int\""
      ]
    },
    "70": {
      "op": "intc_3 // 2",
      "defined_out": [
        "\"an_int\"",
        "2"
      ],
      "stack_out": [
        "\"an_int\"",
        "2"
      ]
    },
    "71": {
      "op": "app_global_put",
      "stack_out": []
    },
    "72": {
      "op": "pushbytess \"some_bytes\" 0x070809 // \"some_bytes\", 0x070809",
      "defined_out": [
        "\"some_bytes\"",
        "0x070809"
      ],
      "stack_out": [
        "\"some_bytes\"",
        "0x070809"
      ]
    },
    "89": {
      "op": "app_global_put",
      "stack_out": []
    },
    "90": {
      "op": "pushbytes \"creator\"",
      "defined_out": [
        "\"creator\""
      ],
      "stack_out": [
        "\"creator\""
      ]
    },
    "99": {
      "op": "txn Sender",
      "defined_out": [
        "\"creator\"",
        "tmp%0#2"
      ],
      "stack_out": [
        "\"creator\"",
        "tmp%0#2"
      ]
    },
    "101": {
      "op": "app_global_put",
      "stack_out": []
    },
    "102": {
      "op": "pushbytes \"app\"",
      "defined_out": [
        "\"app\""
      ],
      "stack_out": [
        "\"app\""
      ]
    },
    "107": {
      "op": "intc_2 // 123",
      "stack_out": [
        "\"app\"",
        "123"
      ]
    },
    "108": {
      "op": "app_global_put",
      "stack_out": []
    },
    "109": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "111": {
      "op": "bz main_bare_routing@20",
      "stack_out": []
    },
    "114": {
      "op": "pushbytess 0xd78db35b 0x01040023 0x3a5353fc 0xd2f2f53c 0xd8f62d9a 0xb8431119 0xc416372d 0x7fad9780 0x2fdf95a4 0x1399826c 0xa1300821 0x6137dc37 0x5732195a 0xf6096c82 0x9023bb19 // method \"noop_with_uint64(uint64)uint8\", method \"opt_in(uint64,byte[])void\", method \"all_the_things(uint64)uint8\", method \"mixed_oca(uint64)uint8\", method \"opt_into_asset(uint64)void\", method \"with_transactions(uint64,uint64,pay,uint64)void\", method \"compare_assets(uint64,uint64)void\", method \"get_address()address\", method \"get_asset()uint64\", method \"get_application()uint64\", method \"get_an_int()uint64\", method \"method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void\", method \"method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]\", method \"method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64\", method \"hello_with_algopy_string(string)string\"",
      "defined_out": [
        "Method(all_the_things(uint64)uint8)",
        "Method(compare_assets(uint64,uint64)void)",
        "Method(get_address()address)",
        "Method(get_an_int()uint64)",
        "Method(get_application()uint64)",
        "Method(get_asset()uint64)",
        "Method(hello_with_algopy_string(string)string)",
        "Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[])",
        "Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void)",
        "Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64)",
        "Method(mixed_oca(uint64)uint8)",
        "Method(noop_with_uint64(uint64)uint8)",
        "Method(opt_in(uint64,byte[])void)",
        "Method(opt_into_asset(uint64)void)",
        "Method(with_transactions(uint64,uint64,pay,uint64)void)"
      ],
      "stack_out": [
        "Method(noop_with_uint64(uint64)uint8)",
        "Method(opt_in(uint64,byte[])void)",
        "Method(all_the_things(uint64)uint8)",
        "Method(mixed_oca(uint64)uint8)",
        "Method(opt_into_asset(uint64)void)",
        "Method(with_transactions(uint64,uint64,pay,uint64)void)",
        "Method(compare_assets(uint64,uint64)void)",
        "Method(get_address()address)",
        "Method(get_asset()uint64)",
        "Method(get_application()uint64)",
        "Method(get_an_int()uint64)",
        "Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void)",
        "Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[])",
        "Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64)",
        "Method(hello_with_algopy_string(string)string)"
      ]
    },
    "191": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(all_the_things(uint64)uint8)",
        "Method(compare_assets(uint64,uint64)void)",
        "Method(get_address()address)",
        "Method(get_an_int()uint64)",
        "Method(get_application()uint64)",
        "Method(get_asset()uint64)",
        "Method(hello_with_algopy_string(string)string)",
        "Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[])",
        "Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void)",
        "Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64)",
        "Method(mixed_oca(uint64)uint8)",
        "Method(noop_with_uint64(uint64)uint8)",
        "Method(opt_in(uint64,byte[])void)",
        "Method(opt_into_asset(uint64)void)",
        "Method(with_transactions(uint64,uint64,pay,uint64)void)",
        "tmp%2#1"
      ],
      "stack_out": [
        "Method(noop_with_uint64(uint64)uint8)",
        "Method(opt_in(uint64,byte[])void)",
        "Method(all_the_things(uint64)uint8)",
        "Method(mixed_oca(uint64)uint8)",
        "Method(opt_into_asset(uint64)void)",
        "Method(with_transactions(uint64,uint64,pay,uint64)void)",
        "Method(compare_assets(uint64,uint64)void)",
        "Method(get_address()address)",
        "Method(get_asset()uint64)",
        "Method(get_application()uint64)",
        "Method(get_an_int()uint64)",
        "Method(method_with_default_args(uint64,uint64,address,address,uint64,uint64,byte[3],uint64,uint64,uint32,string,uint64,byte[])void)",
        "Method(method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[])",
        "Method(method_with_more_than_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],uint64,pay,uint64,uint64)uint64)",
        "Method(hello_with_algopy_string(string)string)",
        "tmp%2#1"
      ]
    },
    "194": {
      "op": "match main_noop_with_uint64_route@5 main_opt_in_route@6 main_all_the_things_route@7 main_mixed_oca_route@8 main_opt_into_asset_route@9 main_with_transactions_route@10 main_compare_assets_route@11 main_get_address_route@12 main_get_asset_route@13 main_get_application_route@14 main_get_an_int_route@15 main_method_with_default_args_route@16 main_method_with_15_args_route@17 main_method_with_more_than_15_args_route@18 main_hello_with_algopy_string_route@19",
      "stack_out": []
    },
    "226": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "err",
      "defined_out": []
    },
    "227": {
      "block": "main_hello_with_algopy_string_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "229": {
      "op": "!",
      "defined_out": [
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%114#0"
      ]
    },
    "230": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "231": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "233": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "234": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%1#0"
      ]
    },
    "237": {
      "op": "extract 2 0",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "240": {
      "op": "pushbytes \"Hello \"",
      "defined_out": [
        "\"Hello \"",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "\"Hello \""
      ]
    },
    "248": {
      "op": "swap",
      "stack_out": [
        "\"Hello \"",
        "name#0"
      ]
    },
    "249": {
      "op": "concat",
      "defined_out": [
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4"
      ]
    },
    "250": {
      "op": "pushbytes \"!\"",
      "defined_out": [
        "\"!\"",
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4",
        "\"!\""
      ]
    },
    "253": {
      "op": "concat",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "254": {
      "op": "dup",
      "defined_out": [
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ],
      "stack_out": [
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ]
    },
    "255": {
      "op": "len",
      "defined_out": [
        "aggregate%length%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "aggregate%length%1#0"
      ]
    },
    "256": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "aggregate%as_bytes%1#0"
      ]
    },
    "257": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "aggregate%length_uint16%1#0"
      ]
    },
    "260": {
      "op": "swap",
      "stack_out": [
        "aggregate%length_uint16%1#0",
        "tmp%1#3"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%1#0"
      ]
    },
    "262": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%1#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "263": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%encoded_value%1#0"
      ]
    },
    "264": {
      "op": "concat",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "265": {
      "op": "log",
      "stack_out": []
    },
    "266": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "267": {
      "op": "return",
      "stack_out": []
    },
    "268": {
      "block": "main_method_with_more_than_15_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "270": {
      "op": "!",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "271": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "272": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "274": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "275": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "278": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "281": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "284": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "reinterpret_Encoded(uint64)%34#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "reinterpret_Encoded(uint64)%34#0"
      ]
    },
    "287": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ]
    },
    "288": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "reinterpret_Encoded(uint64)%35#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "reinterpret_Encoded(uint64)%35#0"
      ]
    },
    "291": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0"
      ]
    },
    "292": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0"
      ]
    },
    "295": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0"
      ]
    },
    "298": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%105#0"
      ]
    },
    "300": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%105#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%105#0",
        "2"
      ]
    },
    "301": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "302": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "303": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0"
      ]
    },
    "305": {
      "op": "intc_0 // pay",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "306": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type_matches%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "307": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "308": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0"
      ]
    },
    "311": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0"
      ]
    },
    "314": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0"
      ]
    },
    "317": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0"
      ]
    },
    "320": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "323": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0"
      ]
    },
    "326": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0"
      ]
    },
    "329": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0"
      ]
    },
    "332": {
      "op": "dupn 2",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0"
      ]
    },
    "334": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%2#0",
        "16"
      ]
    },
    "336": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0"
      ]
    },
    "337": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0"
      ]
    },
    "340": {
      "op": "dupn 3",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)"
      ]
    },
    "342": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)",
        "40"
      ]
    },
    "344": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%0#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "345": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)"
      ]
    },
    "347": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "a#0",
        "aggregate%extract_uint16%0#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "aggregate%extract_uint16%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0 (copy)",
        "42"
      ]
    },
    "349": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%5#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%extract_uint16%1#0"
      ]
    },
    "350": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%substring3%0#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "aggregate%substring3%0#0"
      ]
    },
    "351": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0"
      ]
    },
    "354": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0"
      ]
    },
    "357": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 (copy)",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 (copy)"
      ]
    },
    "358": {
      "op": "pushint 42 // 42",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 (copy)",
        "42"
      ]
    },
    "360": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%2#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "aggregate%extract_uint16%2#0"
      ]
    },
    "361": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "aggregate%extract_uint16%2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0 (copy)"
      ]
    },
    "363": {
      "op": "len",
      "defined_out": [
        "a#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%6#0",
        "aggregate%extract_uint16%2#0",
        "aggregate%len%0#0"
      ]
    },
    "364": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "aggregate%substring3%1#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "aggregate%substring3%1#0"
      ]
    },
    "365": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ]
    },
    "368": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0"
      ]
    },
    "371": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%7#0",
        "44"
      ]
    },
    "373": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0"
      ]
    },
    "374": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "tmp%110#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%110#0"
      ]
    },
    "376": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "tmp%110#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%110#0",
        "1"
      ]
    },
    "377": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "378": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "pay2#0 (copy)",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "pay2#0 (copy)"
      ]
    },
    "379": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0"
      ]
    },
    "381": {
      "op": "intc_0 // pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "382": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type_matches%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "383": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "384": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0"
      ]
    },
    "387": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "388": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%0#3"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%0#3"
      ]
    },
    "390": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%0#3",
        "16"
      ]
    },
    "392": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%1#4"
      ]
    },
    "393": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "394": {
      "op": "uncover 18",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "pay#0"
      ]
    },
    "396": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%2#2"
      ]
    },
    "398": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%2#2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%2#2",
        "100000"
      ]
    },
    "402": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%3#2"
      ]
    },
    "403": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "404": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "pay2#0"
      ]
    },
    "406": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%4#1"
      ]
    },
    "408": {
      "op": "pushint 200000 // 200000",
      "defined_out": [
        "200000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%4#1",
        "200000"
      ]
    },
    "412": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%5#1"
      ]
    },
    "413": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "414": {
      "op": "uncover 19",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "asset#0"
      ]
    },
    "416": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "asset2#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "417": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "asset2#0"
      ]
    },
    "419": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "s#0",
        "t#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "420": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "t#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0"
      ]
    },
    "422": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "s#0",
        "t#0"
      ]
    },
    "424": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%8#0"
      ]
    },
    "425": {
      "op": "log",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "426": {
      "op": "uncover 19",
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "a#0"
      ]
    },
    "428": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%9#0"
      ]
    },
    "429": {
      "op": "uncover 19",
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%9#0",
        "b#0"
      ]
    },
    "431": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%10#1",
        "tmp%9#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%9#0",
        "tmp%10#1"
      ]
    },
    "432": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%11#0"
      ]
    },
    "433": {
      "op": "uncover 18",
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "435": {
      "op": "btoi",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%11#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%11#0",
        "tmp%12#1"
      ]
    },
    "436": {
      "op": "+",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%13#1"
      ]
    },
    "437": {
      "op": "uncover 17",
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%13#1",
        "d#0"
      ]
    },
    "439": {
      "op": "+",
      "defined_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%14#1"
      ],
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%14#1"
      ]
    },
    "440": {
      "op": "uncover 16",
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%14#1",
        "e#0"
      ]
    },
    "442": {
      "op": "btoi",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%14#1",
        "tmp%15#1"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%14#1",
        "tmp%15#1"
      ]
    },
    "443": {
      "op": "+",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%16#1"
      ]
    },
    "444": {
      "op": "uncover 15",
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%16#1",
        "f#0"
      ]
    },
    "446": {
      "op": "btoi",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%16#1",
        "tmp%17#0"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%16#1",
        "tmp%17#0"
      ]
    },
    "447": {
      "op": "+",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%18#0"
      ]
    },
    "448": {
      "op": "uncover 14",
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%18#0",
        "g#0"
      ]
    },
    "450": {
      "op": "btoi",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "451": {
      "op": "+",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%20#0"
      ]
    },
    "452": {
      "op": "uncover 13",
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%20#0",
        "h#0"
      ]
    },
    "454": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%20#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%20#0",
        "tmp%21#1"
      ]
    },
    "455": {
      "op": "+",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%22#1"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%22#1"
      ]
    },
    "456": {
      "op": "uncover 12",
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%22#1",
        "i#0"
      ]
    },
    "458": {
      "op": "btoi",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%22#1",
        "tmp%23#1"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%22#1",
        "tmp%23#1"
      ]
    },
    "459": {
      "op": "+",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%24#0"
      ]
    },
    "460": {
      "op": "uncover 11",
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%24#0",
        "j#0"
      ]
    },
    "462": {
      "op": "btoi",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%24#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%24#0",
        "tmp%25#1"
      ]
    },
    "463": {
      "op": "+",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%26#0"
      ]
    },
    "464": {
      "op": "uncover 10",
      "stack_out": [
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%26#0",
        "k#0"
      ]
    },
    "466": {
      "op": "btoi",
      "defined_out": [
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%26#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%26#0",
        "tmp%27#1"
      ]
    },
    "467": {
      "op": "+",
      "defined_out": [
        "l#0",
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%28#1"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%28#1"
      ]
    },
    "468": {
      "op": "uncover 9",
      "stack_out": [
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%28#1",
        "l#0"
      ]
    },
    "470": {
      "op": "btoi",
      "defined_out": [
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%28#1",
        "tmp%29#0"
      ],
      "stack_out": [
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%28#1",
        "tmp%29#0"
      ]
    },
    "471": {
      "op": "+",
      "defined_out": [
        "m#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%30#1"
      ],
      "stack_out": [
        "m#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%30#1"
      ]
    },
    "472": {
      "op": "uncover 8",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%30#1",
        "m#0"
      ]
    },
    "474": {
      "op": "btoi",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%30#1",
        "tmp%31#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%30#1",
        "tmp%31#0"
      ]
    },
    "475": {
      "op": "+",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1"
      ]
    },
    "476": {
      "op": "uncover 7",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0"
      ]
    },
    "478": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%0#0",
        "0"
      ]
    },
    "479": {
      "op": "extract_uint64",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1",
        "tmp%33#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%32#1",
        "tmp%33#1"
      ]
    },
    "480": {
      "op": "+",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0"
      ]
    },
    "481": {
      "op": "uncover 6",
      "stack_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0"
      ]
    },
    "483": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%1#0",
        "8"
      ]
    },
    "485": {
      "op": "extract_uint64",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "486": {
      "op": "+",
      "defined_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "p#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%36#1"
      ]
    },
    "487": {
      "op": "uncover 5",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%36#1",
        "p#0"
      ]
    },
    "489": {
      "op": "+",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0"
      ]
    },
    "490": {
      "op": "uncover 4",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0"
      ]
    },
    "492": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%3#0",
        "24"
      ]
    },
    "494": {
      "op": "extract_uint64",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0",
        "tmp%38#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%37#0",
        "tmp%38#1"
      ]
    },
    "495": {
      "op": "+",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1"
      ]
    },
    "496": {
      "op": "uncover 3",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0"
      ]
    },
    "498": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%4#0",
        "32"
      ]
    },
    "500": {
      "op": "extract_uint64",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1",
        "tmp%40#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%39#1",
        "tmp%40#1"
      ]
    },
    "501": {
      "op": "+",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0"
      ]
    },
    "502": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0"
      ]
    },
    "504": {
      "op": "pushint 52 // 52",
      "defined_out": [
        "52",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%8#0",
        "52"
      ]
    },
    "506": {
      "op": "extract_uint64",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0",
        "tmp%42#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%41#0",
        "tmp%42#1"
      ]
    },
    "507": {
      "op": "+",
      "defined_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%43#0"
      ]
    },
    "508": {
      "op": "swap",
      "stack_out": [
        "tmp%43#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0"
      ]
    },
    "509": {
      "op": "pushint 60 // 60",
      "defined_out": [
        "60",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0",
        "reinterpret_Encoded(uint64,uint64,uint64,uint64,uint64,(len+uint8[]),(len+uint8[]),uint64,uint64,uint64)%9#0",
        "60"
      ]
    },
    "511": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%43#0",
        "tmp%44#1"
      ],
      "stack_out": [
        "tmp%43#0",
        "tmp%44#1"
      ]
    },
    "512": {
      "op": "+",
      "defined_out": [
        "tmp%45#1"
      ],
      "stack_out": [
        "tmp%45#1"
      ]
    },
    "513": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "514": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%3#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%3#0",
        "0x151f7c75"
      ]
    },
    "515": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%3#0"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "517": {
      "op": "log",
      "stack_out": []
    },
    "518": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "519": {
      "op": "return",
      "stack_out": []
    },
    "520": {
      "block": "main_method_with_15_args_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "522": {
      "op": "!",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "523": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "524": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "526": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "527": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%17#0"
      ]
    },
    "530": {
      "op": "btoi",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "one#0"
      ]
    },
    "531": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "one#0",
        "reinterpret_Encoded(uint64)%18#0"
      ],
      "stack_out": [
        "one#0",
        "reinterpret_Encoded(uint64)%18#0"
      ]
    },
    "534": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0"
      ]
    },
    "535": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "one#0",
        "reinterpret_Encoded(uint64)%19#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "reinterpret_Encoded(uint64)%19#0"
      ]
    },
    "538": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0"
      ]
    },
    "539": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "one#0",
        "reinterpret_Encoded(uint64)%20#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "reinterpret_Encoded(uint64)%20#0"
      ]
    },
    "542": {
      "op": "btoi",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0"
      ]
    },
    "543": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "four#0",
        "one#0",
        "reinterpret_Encoded(uint64)%21#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "reinterpret_Encoded(uint64)%21#0"
      ]
    },
    "546": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0"
      ]
    },
    "547": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_Encoded(uint64)%22#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "reinterpret_Encoded(uint64)%22#0"
      ]
    },
    "550": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0"
      ]
    },
    "551": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_Encoded(uint64)%23#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "reinterpret_Encoded(uint64)%23#0"
      ]
    },
    "554": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0"
      ]
    },
    "555": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_Encoded(uint64)%24#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "reinterpret_Encoded(uint64)%24#0"
      ]
    },
    "558": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0"
      ]
    },
    "559": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_Encoded(uint64)%25#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "reinterpret_Encoded(uint64)%25#0"
      ]
    },
    "562": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0"
      ]
    },
    "563": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(uint64)%26#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "reinterpret_Encoded(uint64)%26#0"
      ]
    },
    "566": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0"
      ]
    },
    "567": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(uint64)%27#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "reinterpret_Encoded(uint64)%27#0"
      ]
    },
    "570": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0"
      ]
    },
    "571": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(uint64)%28#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "reinterpret_Encoded(uint64)%28#0"
      ]
    },
    "574": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0"
      ]
    },
    "575": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(uint64)%29#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "reinterpret_Encoded(uint64)%29#0"
      ]
    },
    "578": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0"
      ]
    },
    "579": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(uint64)%30#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "reinterpret_Encoded(uint64)%30#0"
      ]
    },
    "582": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0"
      ]
    },
    "583": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0"
      ]
    },
    "586": {
      "op": "uncover 14",
      "stack_out": [
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "one#0"
      ]
    },
    "588": {
      "op": "uncover 14",
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "one#0",
        "two#0"
      ]
    },
    "590": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%0#3",
        "twelve#0"
      ],
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%0#3"
      ]
    },
    "591": {
      "op": "uncover 13",
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%0#3",
        "three#0"
      ]
    },
    "593": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%1#5",
        "twelve#0"
      ],
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%1#5"
      ]
    },
    "594": {
      "op": "uncover 12",
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%1#5",
        "four#0"
      ]
    },
    "596": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%2#2",
        "twelve#0"
      ],
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%2#2"
      ]
    },
    "597": {
      "op": "uncover 11",
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%2#2",
        "five#0"
      ]
    },
    "599": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%3#1",
        "twelve#0"
      ],
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%3#1"
      ]
    },
    "600": {
      "op": "uncover 10",
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%3#1",
        "six#0"
      ]
    },
    "602": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "seven#0",
        "ten#0",
        "thirteen#0",
        "tmp%4#1",
        "twelve#0"
      ],
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%4#1"
      ]
    },
    "603": {
      "op": "uncover 9",
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%4#1",
        "seven#0"
      ]
    },
    "605": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "ten#0",
        "thirteen#0",
        "tmp%5#0",
        "twelve#0"
      ],
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%5#0"
      ]
    },
    "606": {
      "op": "uncover 8",
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%5#0",
        "eight#0"
      ]
    },
    "608": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fourteen#0",
        "nine#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "ten#0",
        "thirteen#0",
        "tmp%6#2",
        "twelve#0"
      ],
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%6#2"
      ]
    },
    "609": {
      "op": "uncover 7",
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%6#2",
        "nine#0"
      ]
    },
    "611": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "ten#0",
        "thirteen#0",
        "tmp%7#2",
        "twelve#0"
      ],
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%7#2"
      ]
    },
    "612": {
      "op": "uncover 6",
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%7#2",
        "ten#0"
      ]
    },
    "614": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "thirteen#0",
        "tmp%8#2",
        "twelve#0"
      ],
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%8#2"
      ]
    },
    "615": {
      "op": "uncover 5",
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%8#2",
        "eleven#0"
      ]
    },
    "617": {
      "op": "+",
      "defined_out": [
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "thirteen#0",
        "tmp%9#0",
        "twelve#0"
      ],
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%9#0"
      ]
    },
    "618": {
      "op": "uncover 4",
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%9#0",
        "twelve#0"
      ]
    },
    "620": {
      "op": "+",
      "defined_out": [
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "thirteen#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%10#1"
      ]
    },
    "621": {
      "op": "uncover 3",
      "stack_out": [
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%10#1",
        "thirteen#0"
      ]
    },
    "623": {
      "op": "+",
      "defined_out": [
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fourteen#0",
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%11#0"
      ]
    },
    "624": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%11#0",
        "fourteen#0"
      ]
    },
    "626": {
      "op": "+",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%12#1"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%2#0",
        "tmp%12#1"
      ]
    },
    "627": {
      "op": "assert",
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%2#0"
      ]
    },
    "628": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "reinterpret_Encoded(len+uint8[])%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%2#0",
        "0x151f7c75"
      ]
    },
    "629": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "reinterpret_Encoded(len+uint8[])%2#0"
      ]
    },
    "630": {
      "op": "concat",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "631": {
      "op": "log",
      "stack_out": []
    },
    "632": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "633": {
      "op": "return",
      "stack_out": []
    },
    "634": {
      "block": "main_method_with_default_args_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "636": {
      "op": "!",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "637": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "638": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "640": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "641": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "644": {
      "op": "btoi",
      "defined_out": [
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0"
      ]
    },
    "645": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_from_storage#0",
        "reinterpret_Encoded(uint64)%11#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "648": {
      "op": "btoi",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0"
      ]
    },
    "649": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0"
      ]
    },
    "652": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0"
      ]
    },
    "655": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_Encoded(uint64)%12#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "reinterpret_Encoded(uint64)%12#0"
      ]
    },
    "658": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0"
      ]
    },
    "659": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_Encoded(uint64)%13#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "reinterpret_Encoded(uint64)%13#0"
      ]
    },
    "662": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0"
      ]
    },
    "663": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0"
      ]
    },
    "666": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ]
    },
    "669": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0"
      ]
    },
    "672": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0"
      ]
    },
    "675": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "678": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_Encoded(uint64)%16#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_Encoded(uint64)%16#0"
      ]
    },
    "681": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0"
      ]
    },
    "682": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_Encoded(len+uint8[])%1#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "reinterpret_Encoded(len+uint8[])%1#0"
      ]
    },
    "685": {
      "op": "extract 2 0",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "688": {
      "op": "uncover 12",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_storage#0"
      ]
    },
    "690": {
      "op": "intc_2 // 123",
      "defined_out": [
        "123",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_storage#0",
        "123"
      ]
    },
    "691": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%0#0"
      ]
    },
    "692": {
      "error": "wrong asset from storage",
      "op": "assert // wrong asset from storage",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "693": {
      "op": "uncover 11",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_function#0"
      ]
    },
    "695": {
      "op": "pushint 456 // 456",
      "defined_out": [
        "456",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_function#0",
        "456"
      ]
    },
    "698": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%1#4"
      ]
    },
    "699": {
      "error": "wrong asset from function",
      "op": "assert // wrong asset from function",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "700": {
      "op": "global CreatorAddress",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%2#4"
      ]
    },
    "702": {
      "op": "uncover 11",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%2#4",
        "account_from_storage#0"
      ]
    },
    "704": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%3#2"
      ]
    },
    "705": {
      "error": "wrong account from storage",
      "op": "assert // wrong account from storage",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "706": {
      "op": "global ZeroAddress",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%4#3"
      ]
    },
    "708": {
      "op": "uncover 10",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%4#3",
        "account_from_function#0"
      ]
    },
    "710": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%5#1"
      ]
    },
    "711": {
      "error": "wrong account from function",
      "op": "assert // wrong account from function",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "712": {
      "op": "uncover 8",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_storage#0"
      ]
    },
    "714": {
      "op": "intc_2 // 123",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_storage#0",
        "123"
      ]
    },
    "715": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%6#3"
      ]
    },
    "716": {
      "error": "wrong application from storage",
      "op": "assert // wrong application from storage",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "717": {
      "op": "uncover 7",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_function#0"
      ]
    },
    "719": {
      "op": "pushint 456 // 456",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_function#0",
        "456"
      ]
    },
    "722": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%7#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%7#3"
      ]
    },
    "723": {
      "error": "wrong application from function",
      "op": "assert // wrong application from function",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "724": {
      "op": "dig 6",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "bytes_from_storage#0 (copy)",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "726": {
      "error": "index access is out of bounds",
      "op": "extract 0 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%0#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "729": {
      "op": "pushbytes 0x07",
      "defined_out": [
        "0x07",
        "aggregate%encoded_element%0#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%0#0",
        "0x07"
      ]
    },
    "732": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%8#3"
      ]
    },
    "733": {
      "error": "wrong 0th byte from storage",
      "op": "assert // wrong 0th byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "734": {
      "op": "dig 6",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "736": {
      "error": "index access is out of bounds",
      "op": "extract 1 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%1#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%1#0"
      ]
    },
    "739": {
      "op": "pushbytes 0x08",
      "defined_out": [
        "0x08",
        "aggregate%encoded_element%1#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%1#0",
        "0x08"
      ]
    },
    "742": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%9#3"
      ]
    },
    "743": {
      "error": "wrong 1st byte from storage",
      "op": "assert // wrong 1st byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "744": {
      "op": "uncover 6",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0"
      ]
    },
    "746": {
      "error": "index access is out of bounds",
      "op": "extract 2 1 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%encoded_element%2#0",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%2#0"
      ]
    },
    "749": {
      "op": "pushbytes 0x09",
      "defined_out": [
        "0x09",
        "aggregate%encoded_element%2#0",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "aggregate%encoded_element%2#0",
        "0x09"
      ]
    },
    "752": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%10#0"
      ]
    },
    "753": {
      "error": "wrong 2nd byte from storage",
      "op": "assert // wrong 2nd byte from storage",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "754": {
      "op": "uncover 5",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_storage#0"
      ]
    },
    "756": {
      "op": "btoi",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%11#0"
      ]
    },
    "757": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%11#0",
        "2"
      ]
    },
    "758": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%12#3"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%12#3"
      ]
    },
    "759": {
      "error": "wrong int from storage",
      "op": "assert // wrong int from storage",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "760": {
      "op": "uncover 4",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_function#0"
      ]
    },
    "762": {
      "op": "btoi",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%13#1"
      ]
    },
    "763": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%13#1",
        "3"
      ]
    },
    "765": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%14#2"
      ]
    },
    "766": {
      "error": "wrong int from function",
      "op": "assert // wrong int from function",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "767": {
      "op": "uncover 3",
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_const#0"
      ]
    },
    "769": {
      "op": "pushbytes 0x0000007b",
      "defined_out": [
        "0x0000007b",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_const#0",
        "0x0000007b"
      ]
    },
    "775": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%15#2"
      ]
    },
    "776": {
      "op": "assert",
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "777": {
      "op": "uncover 2",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "str_from_const#0"
      ]
    },
    "779": {
      "op": "pushbytes 0x0003616263",
      "defined_out": [
        "0x0003616263",
        "bytes_from_local#0",
        "int_from_local#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "str_from_const#0",
        "0x0003616263"
      ]
    },
    "786": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%17#2"
      ]
    },
    "787": {
      "op": "assert",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "788": {
      "op": "txn Sender",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%18#2"
      ]
    },
    "790": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%18#2",
        "0"
      ]
    },
    "791": {
      "op": "bytec_2 // \"local_uint\"",
      "defined_out": [
        "\"local_uint\"",
        "0",
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%18#2",
        "0",
        "\"local_uint\""
      ]
    },
    "792": {
      "op": "app_local_get_ex",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "793": {
      "error": "check self.local_uint exists for account",
      "op": "assert // check self.local_uint exists for account",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "maybe_value%0#0"
      ]
    },
    "794": {
      "op": "uncover 2",
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%0#0",
        "int_from_local#0"
      ]
    },
    "796": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "tmp%19#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%19#2"
      ]
    },
    "797": {
      "op": "assert",
      "stack_out": [
        "bytes_from_local#0"
      ]
    },
    "798": {
      "op": "txn Sender",
      "defined_out": [
        "bytes_from_local#0",
        "tmp%20#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%20#2"
      ]
    },
    "800": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bytes_from_local#0",
        "tmp%20#2",
        "0"
      ]
    },
    "801": {
      "op": "bytec_3 // \"local_bytes\"",
      "defined_out": [
        "\"local_bytes\"",
        "0",
        "bytes_from_local#0",
        "tmp%20#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%20#2",
        "0",
        "\"local_bytes\""
      ]
    },
    "802": {
      "op": "app_local_get_ex",
      "defined_out": [
        "bytes_from_local#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "803": {
      "error": "check self.local_bytes exists for account",
      "op": "assert // check self.local_bytes exists for account",
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%1#0"
      ]
    },
    "804": {
      "op": "==",
      "defined_out": [
        "tmp%21#2"
      ],
      "stack_out": [
        "tmp%21#2"
      ]
    },
    "805": {
      "op": "assert",
      "stack_out": []
    },
    "806": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "807": {
      "op": "return",
      "stack_out": []
    },
    "808": {
      "block": "main_get_an_int_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "810": {
      "op": "!",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "811": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "812": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "814": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "815": {
      "op": "pushbytes 0x151f7c750000000000000003",
      "defined_out": [
        "0x151f7c750000000000000003"
      ],
      "stack_out": [
        "0x151f7c750000000000000003"
      ]
    },
    "829": {
      "op": "log",
      "stack_out": []
    },
    "830": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "831": {
      "op": "return",
      "stack_out": []
    },
    "832": {
      "block": "main_get_application_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "834": {
      "op": "!",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "835": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "836": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "838": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "839": {
      "op": "bytec 4 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "841": {
      "op": "log",
      "stack_out": []
    },
    "842": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "843": {
      "op": "return",
      "stack_out": []
    },
    "844": {
      "block": "main_get_asset_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "846": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "847": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "848": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "850": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "851": {
      "op": "bytec 4 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "853": {
      "op": "log",
      "stack_out": []
    },
    "854": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "855": {
      "op": "return",
      "stack_out": []
    },
    "856": {
      "block": "main_get_address_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "858": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "859": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "860": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "862": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "863": {
      "op": "pushbytes base32(CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ],
      "stack_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "901": {
      "op": "log",
      "stack_out": []
    },
    "902": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "903": {
      "op": "return",
      "stack_out": []
    },
    "904": {
      "block": "main_compare_assets_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "906": {
      "op": "!",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "907": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "908": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "910": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "911": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "914": {
      "op": "btoi",
      "defined_out": [
        "asset_a#0"
      ],
      "stack_out": [
        "asset_a#0"
      ]
    },
    "915": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_a#0",
        "reinterpret_Encoded(uint64)%9#0"
      ],
      "stack_out": [
        "asset_a#0",
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "918": {
      "op": "btoi",
      "defined_out": [
        "asset_a#0",
        "asset_b#0"
      ],
      "stack_out": [
        "asset_a#0",
        "asset_b#0"
      ]
    },
    "919": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "920": {
      "error": "asset a == b",
      "op": "assert // asset a == b",
      "stack_out": []
    },
    "921": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "922": {
      "op": "return",
      "stack_out": []
    },
    "923": {
      "block": "main_with_transactions_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "925": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "926": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "927": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "929": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "930": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "933": {
      "op": "btoi",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "934": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "an_int#0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0"
      ]
    },
    "937": {
      "op": "txn GroupIndex",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%34#0"
      ]
    },
    "939": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "an_int#0",
        "asset#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%34#0",
        "1"
      ]
    },
    "940": {
      "op": "-",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "941": {
      "op": "dup",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "942": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0"
      ]
    },
    "944": {
      "op": "intc_0 // pay",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "945": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type_matches%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "946": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "947": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "950": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0"
      ]
    },
    "951": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0",
        "\"asa\""
      ]
    },
    "952": {
      "op": "app_global_get_ex",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "953": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0"
      ]
    },
    "954": {
      "op": "uncover 4",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "asset#0"
      ]
    },
    "956": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "pay#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "tmp%0#0"
      ]
    },
    "957": {
      "error": "is correct asset",
      "op": "assert // is correct asset",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "958": {
      "op": "uncover 2",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "an_int#0"
      ]
    },
    "960": {
      "op": "btoi",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%1#5"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#5"
      ]
    },
    "961": {
      "op": "intc_0 // 1",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#5",
        "1"
      ]
    },
    "962": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%2#5"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%2#5"
      ]
    },
    "963": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": [
        "pay#0",
        "another_int#0"
      ]
    },
    "964": {
      "op": "swap",
      "stack_out": [
        "another_int#0",
        "pay#0"
      ]
    },
    "965": {
      "op": "gtxns Receiver",
      "defined_out": [
        "another_int#0",
        "tmp%3#5"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#5"
      ]
    },
    "967": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "another_int#0",
        "tmp%3#5",
        "tmp%4#3"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#5",
        "tmp%4#3"
      ]
    },
    "969": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%5#1"
      ]
    },
    "970": {
      "error": "is payment to app",
      "op": "assert // is payment to app",
      "stack_out": [
        "another_int#0"
      ]
    },
    "971": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2"
      ]
    },
    "972": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2",
        "2"
      ]
    },
    "973": {
      "op": "==",
      "defined_out": [
        "tmp%7#3"
      ],
      "stack_out": [
        "tmp%7#3"
      ]
    },
    "974": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": []
    },
    "975": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "976": {
      "op": "return",
      "stack_out": []
    },
    "977": {
      "block": "main_opt_into_asset_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "979": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "980": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "981": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "983": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "984": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "987": {
      "op": "btoi",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "988": {
      "op": "txn Sender",
      "defined_out": [
        "asset#0",
        "tmp%0#2"
      ],
      "stack_out": [
        "asset#0",
        "tmp%0#2"
      ]
    },
    "990": {
      "op": "global CreatorAddress",
      "defined_out": [
        "asset#0",
        "tmp%0#2",
        "tmp%1#8"
      ],
      "stack_out": [
        "asset#0",
        "tmp%0#2",
        "tmp%1#8"
      ]
    },
    "992": {
      "op": "==",
      "defined_out": [
        "asset#0",
        "tmp%2#5"
      ],
      "stack_out": [
        "asset#0",
        "tmp%2#5"
      ]
    },
    "993": {
      "error": "Only creator can opt in to ASA",
      "op": "assert // Only creator can opt in to ASA",
      "stack_out": [
        "asset#0"
      ]
    },
    "994": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "995": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0",
        "\"asa\""
      ]
    },
    "996": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "asset#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "997": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "maybe_value%0#0"
      ]
    },
    "998": {
      "op": "!",
      "defined_out": [
        "asset#0",
        "tmp%3#2"
      ],
      "stack_out": [
        "asset#0",
        "tmp%3#2"
      ]
    },
    "999": {
      "error": "ASA already opted in",
      "op": "assert // ASA already opted in",
      "stack_out": [
        "asset#0"
      ]
    },
    "1000": {
      "op": "bytec_1 // \"asa\"",
      "stack_out": [
        "asset#0",
        "\"asa\""
      ]
    },
    "1001": {
      "op": "dig 1",
      "defined_out": [
        "\"asa\"",
        "asset#0",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "\"asa\"",
        "asset#0 (copy)"
      ]
    },
    "1003": {
      "op": "app_global_put",
      "stack_out": [
        "asset#0"
      ]
    },
    "1004": {
      "op": "itxn_begin"
    },
    "1005": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "asset#0",
        "axfer"
      ],
      "stack_out": [
        "asset#0",
        "axfer"
      ]
    },
    "1007": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset#0"
      ]
    },
    "1009": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "1010": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset#0"
      ]
    },
    "1012": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "asset#0",
        "tmp%4#3"
      ]
    },
    "1014": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "asset#0"
      ]
    },
    "1016": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1018": {
      "op": "itxn_submit"
    },
    "1019": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1020": {
      "op": "return",
      "stack_out": []
    },
    "1021": {
      "block": "main_mixed_oca_route@8",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1022": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%17#0"
      ],
      "stack_out": [
        "1",
        "tmp%17#0"
      ]
    },
    "1024": {
      "op": "shl",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1025": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "37"
      ]
    },
    "1027": {
      "op": "&",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1028": {
      "error": "OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "op": "assert // OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "stack_out": []
    },
    "1029": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1031": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1032": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1035": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1036": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1037": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1038": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1039": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%val_as_bytes%2#0 (copy)"
      ]
    },
    "1040": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%2#0"
      ]
    },
    "1041": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%bitlen%2#0",
        "8"
      ]
    },
    "1043": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%2#0",
        "aggregate%val_as_bytes%2#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%2#0",
        "aggregate%no_overflow%2#0"
      ]
    },
    "1044": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "1045": {
      "op": "extract 7 1",
      "defined_out": [
        "aggregate%uint8%2#0"
      ],
      "stack_out": [
        "aggregate%uint8%2#0"
      ]
    },
    "1048": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%uint8%2#0"
      ],
      "stack_out": [
        "aggregate%uint8%2#0",
        "0x151f7c75"
      ]
    },
    "1049": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%uint8%2#0"
      ]
    },
    "1050": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1051": {
      "op": "log",
      "stack_out": []
    },
    "1052": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1053": {
      "op": "return",
      "stack_out": []
    },
    "1054": {
      "block": "main_all_the_things_route@7",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1057": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1058": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1059": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1060": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1061": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%val_as_bytes%1#0 (copy)"
      ]
    },
    "1062": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0"
      ]
    },
    "1063": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%bitlen%1#0",
        "8"
      ]
    },
    "1065": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%1#0",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%1#0",
        "aggregate%no_overflow%1#0"
      ]
    },
    "1066": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "1067": {
      "op": "extract 7 1",
      "defined_out": [
        "aggregate%uint8%1#0"
      ],
      "stack_out": [
        "aggregate%uint8%1#0"
      ]
    },
    "1070": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%uint8%1#0"
      ],
      "stack_out": [
        "aggregate%uint8%1#0",
        "0x151f7c75"
      ]
    },
    "1071": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%uint8%1#0"
      ]
    },
    "1072": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1073": {
      "op": "log",
      "stack_out": []
    },
    "1074": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1075": {
      "op": "return",
      "stack_out": []
    },
    "1076": {
      "block": "main_opt_in_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1078": {
      "op": "intc_0 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "OptIn"
      ]
    },
    "1079": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1080": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "1081": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1083": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1084": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "1087": {
      "op": "btoi",
      "defined_out": [
        "uint#0"
      ],
      "stack_out": [
        "uint#0"
      ]
    },
    "1088": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "1091": {
      "op": "extract 2 0",
      "defined_out": [
        "bites#0",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0"
      ]
    },
    "1094": {
      "op": "txn Sender",
      "defined_out": [
        "bites#0",
        "tmp%0#2",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0",
        "tmp%0#2"
      ]
    },
    "1096": {
      "op": "bytec_2 // \"local_uint\"",
      "defined_out": [
        "\"local_uint\"",
        "bites#0",
        "tmp%0#2",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0",
        "tmp%0#2",
        "\"local_uint\""
      ]
    },
    "1097": {
      "op": "uncover 3",
      "stack_out": [
        "bites#0",
        "tmp%0#2",
        "\"local_uint\"",
        "uint#0"
      ]
    },
    "1099": {
      "op": "app_local_put",
      "stack_out": [
        "bites#0"
      ]
    },
    "1100": {
      "op": "txn Sender",
      "defined_out": [
        "bites#0",
        "tmp%1#8"
      ],
      "stack_out": [
        "bites#0",
        "tmp%1#8"
      ]
    },
    "1102": {
      "op": "bytec_3 // \"local_bytes\"",
      "defined_out": [
        "\"local_bytes\"",
        "bites#0",
        "tmp%1#8"
      ],
      "stack_out": [
        "bites#0",
        "tmp%1#8",
        "\"local_bytes\""
      ]
    },
    "1103": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#8",
        "\"local_bytes\"",
        "bites#0"
      ]
    },
    "1105": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1106": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1107": {
      "op": "return",
      "stack_out": []
    },
    "1108": {
      "block": "main_noop_with_uint64_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#1"
      ],
      "stack_out": [
        "tmp%3#1"
      ]
    },
    "1110": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1111": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1112": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1114": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1115": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1118": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1119": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1120": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1121": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1122": {
      "op": "dup",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%0#0 (copy)"
      ]
    },
    "1123": {
      "op": "bitlen",
      "defined_out": [
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0"
      ]
    },
    "1124": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "aggregate%bitlen%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%bitlen%0#0",
        "8"
      ]
    },
    "1126": {
      "op": "<=",
      "defined_out": [
        "aggregate%no_overflow%0#0",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%no_overflow%0#0"
      ]
    },
    "1127": {
      "error": "overflow",
      "op": "assert // overflow",
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "1128": {
      "op": "extract 7 1",
      "defined_out": [
        "aggregate%uint8%0#0"
      ],
      "stack_out": [
        "aggregate%uint8%0#0"
      ]
    },
    "1131": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%uint8%0#0"
      ],
      "stack_out": [
        "aggregate%uint8%0#0",
        "0x151f7c75"
      ]
    },
    "1132": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%uint8%0#0"
      ]
    },
    "1133": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1134": {
      "op": "log",
      "stack_out": []
    },
    "1135": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1136": {
      "op": "return",
      "stack_out": []
    },
    "1137": {
      "block": "main_bare_routing@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "1139": {
      "op": "switch main_bare_abi_config@21 main_bare_abi_config@21 main_bare_abi_config@21 main_after_if_else@22 main_bare_abi_config@21 main_bare_abi_config@21",
      "stack_out": []
    },
    "1153": {
      "op": "b main_after_if_else@22"
    },
    "1156": {
      "block": "main_bare_abi_config@21",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "1158": {
      "op": "!",
      "defined_out": [
        "tmp%123#0"
      ],
      "stack_out": [
        "tmp%123#0"
      ]
    },
    "1159": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1160": {
      "op": "pushbytes \"Hello World\"",
      "defined_out": [
        "\"Hello World\""
      ],
      "stack_out": [
        "\"Hello World\""
      ]
    },
    "1173": {
      "op": "log",
      "stack_out": []
    },
    "1174": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1175": {
      "op": "return",
      "stack_out": []
    }
  }
}