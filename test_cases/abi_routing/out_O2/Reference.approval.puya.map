{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBQ;AAAW;AAAX;AACA;;;;;;;;AAAc;AAAd;AACA;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;AAAe;;AAAf;AACA;;;;;AAAW;AAAX;AANR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA8PK;;AAAA;AAAA;AAAA;;AAAA;AA9PL;;;AAAA;;;AAgQe;;;;;;;;AAAA;AAAA;AAAkB;;;AAAlB;AAFV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlEA;;AAAA;AAAA;AAAA;;AAAA;AA5LL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AA+Ne;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAc;;;;AAAd;AAAP;AACO;;AAAA;;AAAe;;;;AAAf;AAAP;AACA;;AAAA;AACA;;AAAA;AAEI;;AAAA;;AAAA;AAAJ;AAGI;;AAAA;AACE;;AAAA;AADF;AAEE;;AAAA;AAFF;AAAA;;AAAA;AAIE;;AAAA;AAJF;AAKE;;AAAA;AALF;AAME;;AAAA;AANF;AAOE;;AAAA;AAPF;AAQE;;AAAA;AARF;AASE;;AAAA;AATF;AAUE;;AAAA;AAVF;AAWE;;AAAA;AAXF;AAYE;;AAAA;AAZF;AAaE;;AArPd;AAqPc;AAbF;AAcE;;AAtPd;;AAsPc;AAdF;AAAA;;AAAA;AAgBE;;AAxPd;;AAwPc;AAhBF;AAiBE;;AAzPd;;AAyPc;AAjBF;AAkBE;;AA1Pd;;AA0Pc;AAlBF;AAmBE;AA3Pd;;AA2Pc;AAnBF;AADG;AA3CV;AAAA;AAAA;AAAA;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AAtJL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AA2KY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AADJ;AApBH;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3CA;;AAAA;AAAA;AAAA;;AAAA;AA3GL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAwIe;;AAAsB;AAAtB;AAAP;AACO;;AAAuB;;;AAAvB;AAAP;AAC+B;;AAAxB;;AAAA;AAAP;AACgC;;AAAzB;;AAAA;AAAP;AACO;;AAA4B;AAA5B;AAAP;AACO;;AAA6B;;;AAA7B;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;AAA2B;AAA3B;AAAP;AACO;;AAAA;AAA4B;;AAA5B;AAAP;AACO;AAAkB;;;;;;AAAlB;AAAP;AACyB;;;;;;;AAAlB;AAAP;AAzCH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAvFL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAyFe;AAAP;AAFH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AA1EL;;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAkFe;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;;AAAgB;;AAAhB;AAAP;AACO;AAAsB;AAAtB;AAAP;AAXH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAzDL;;;AAAA;AAAA;;AA4De;;AAAiB;;AAAjB;AAAP;AAEW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEA;AAAA;;AAAA;AAGA;AAC4B;;AAA5B;;AACsB;AAAtB;;AACiC;;AAAjC;;AACA;;AACA;AAfH;;AA1BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AA/BL;;;AAyC6B;AAAZ;AAAA;AACF;AAAA;;;AAXV;AAAA;AAAA;AAAA;AAAA;;AA/BL;;;AA4B6B;AAAZ;AAAA;AACF;AAAA;;;AAdV;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAVL;;;AAYqB;AAAJ;AAAA;AACF;AAAA;;;AAHV;AAAA;AAAA;AAAA;AAAA;;AAVL;;AAAA;;;;;;;;;;;;;;AAAA;;;AA4CK;;AAAA;AAAA;AAWO;;;;;;;;;;;;;AAAJ;AAXH;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.abi_routing.contract.Reference.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 123 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"asa\" 0x151f7c7500000000000001c8"
    },
    "31": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "36": {
      "op": "bytec_1 // \"asa\""
    },
    "37": {
      "op": "intc_2 // 123"
    },
    "38": {
      "op": "app_global_put"
    },
    "39": {
      "op": "pushbytes \"an_int\""
    },
    "47": {
      "op": "intc_3 // 2"
    },
    "48": {
      "op": "app_global_put"
    },
    "49": {
      "op": "pushbytess \"some_bytes\" 0x070809 // \"some_bytes\", 0x070809"
    },
    "66": {
      "op": "app_global_put"
    },
    "67": {
      "op": "pushbytes \"creator\""
    },
    "76": {
      "op": "txn Sender"
    },
    "78": {
      "op": "app_global_put"
    },
    "79": {
      "op": "pushbytes \"app\""
    },
    "84": {
      "op": "intc_2 // 123"
    },
    "85": {
      "op": "app_global_put"
    },
    "86": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "88": {
      "op": "bz main_bare_routing@19",
      "stack_out": []
    },
    "91": {
      "op": "pushbytess 0xd78db35b 0x3a5353fc 0xd2f2f53c 0x2826b202 0x6f8e94cd 0x17dc68f0 0x7fad9780 0x2fdf95a4 0x1399826c 0xa1300821 0xb05559ba 0x5732195a 0xd17552fb 0x9023bb19 // method \"noop_with_uint64(uint64)uint8\", method \"all_the_things(uint64)uint8\", method \"mixed_oca(uint64)uint8\", method \"opt_into_asset(asset)void\", method \"with_transactions(asset,uint64,pay,uint64)void\", method \"compare_assets(asset,asset)void\", method \"get_address()address\", method \"get_asset()uint64\", method \"get_application()uint64\", method \"get_an_int()uint64\", method \"method_with_default_args(asset,asset,account,account,application,application,byte[3],uint64,uint64,uint32,string)void\", method \"method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]\", method \"method_with_more_than_15_args(uint64,uint64,uint64,uint64,asset,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],asset,pay,uint64,uint64)uint64\", method \"hello_with_algopy_string(string)string\""
    },
    "163": {
      "op": "txna ApplicationArgs 0"
    },
    "166": {
      "op": "match main_noop_with_uint64_route@5 main_all_the_things_route@6 main_mixed_oca_route@7 main_opt_into_asset_route@8 main_with_transactions_route@9 main_compare_assets_route@10 main_get_address_route@11 main_get_asset_route@12 main_get_application_route@13 main_get_an_int_route@14 main_method_with_default_args_route@15 main_method_with_15_args_route@16 main_method_with_more_than_15_args_route@17 main_hello_with_algopy_string_route@18"
    },
    "196": {
      "block": "main_after_if_else@21",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "197": {
      "op": "return"
    },
    "198": {
      "block": "main_hello_with_algopy_string_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%137#0"
      ]
    },
    "200": {
      "op": "!",
      "defined_out": [
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%138#0"
      ]
    },
    "201": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "202": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%139#0"
      ]
    },
    "204": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "205": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "208": {
      "op": "extract 2 0",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "211": {
      "op": "pushbytes \"Hello \"",
      "defined_out": [
        "\"Hello \"",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "\"Hello \""
      ]
    },
    "219": {
      "op": "swap",
      "stack_out": [
        "\"Hello \"",
        "name#0"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4"
      ]
    },
    "221": {
      "op": "pushbytes \"!\"",
      "defined_out": [
        "\"!\"",
        "tmp%0#4"
      ],
      "stack_out": [
        "tmp%0#4",
        "\"!\""
      ]
    },
    "224": {
      "op": "concat",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "225": {
      "op": "dup",
      "defined_out": [
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ],
      "stack_out": [
        "tmp%1#3",
        "tmp%1#3 (copy)"
      ]
    },
    "226": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "length%1#0"
      ]
    },
    "227": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "as_bytes%1#0"
      ]
    },
    "228": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "length_uint16%1#0"
      ]
    },
    "231": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "tmp%1#3"
      ]
    },
    "232": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "233": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "235": {
      "op": "concat",
      "defined_out": [
        "tmp%143#0"
      ],
      "stack_out": [
        "tmp%143#0"
      ]
    },
    "236": {
      "op": "log",
      "stack_out": []
    },
    "237": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "238": {
      "op": "return"
    },
    "239": {
      "block": "main_method_with_more_than_15_args_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%101#0"
      ],
      "stack_out": [
        "tmp%101#0"
      ]
    },
    "241": {
      "op": "!",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "242": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "243": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "245": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "246": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "249": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "252": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "255": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "reinterpret_bytes[8]%24#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "reinterpret_bytes[8]%24#0"
      ]
    },
    "258": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ]
    },
    "259": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "reinterpret_bytes[1]%10#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "262": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%106#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%106#0"
      ]
    },
    "263": {
      "op": "txnas Assets",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0"
      ]
    },
    "265": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0"
      ]
    },
    "268": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0"
      ]
    },
    "271": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%108#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%108#0"
      ]
    },
    "273": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%108#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%108#0",
        "2"
      ]
    },
    "274": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "275": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "276": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0"
      ]
    },
    "278": {
      "op": "intc_0 // pay",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "279": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type_matches%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "280": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "281": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0"
      ]
    },
    "284": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0"
      ]
    },
    "287": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0"
      ]
    },
    "290": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0"
      ]
    },
    "293": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "296": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0"
      ]
    },
    "299": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0"
      ]
    },
    "302": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "tmp%109#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0"
      ]
    },
    "305": {
      "op": "dupn 2",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%113#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%113#0"
      ]
    },
    "307": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%113#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%113#0",
        "16"
      ]
    },
    "309": {
      "op": "extract_uint64",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0"
      ]
    },
    "310": {
      "op": "txna ApplicationArgs 15"
    },
    "313": {
      "op": "dupn 3"
    },
    "315": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "tmp%120#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "tmp%120#0 (copy)",
        "40"
      ]
    },
    "317": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "item_start_offset%0#0"
      ]
    },
    "318": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "item_start_offset%0#0",
        "tmp%120#0 (copy)"
      ]
    },
    "320": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "tmp%120#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "item_start_offset%0#0",
        "tmp%120#0 (copy)",
        "42"
      ]
    },
    "322": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%120#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "323": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%121#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%121#0"
      ]
    },
    "324": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0"
      ]
    },
    "327": {
      "op": "txna ApplicationArgs 15"
    },
    "330": {
      "op": "dup"
    },
    "331": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%123#0",
        "tmp%123#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "tmp%123#0",
        "tmp%123#0 (copy)",
        "42"
      ]
    },
    "333": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%1#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%123#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "tmp%123#0",
        "item_start_offset%1#0"
      ]
    },
    "334": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "tmp%123#0",
        "item_start_offset%1#0",
        "tmp%123#0 (copy)"
      ]
    },
    "336": {
      "op": "len",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%123#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "tmp%123#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "337": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%124#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "tmp%124#0"
      ]
    },
    "338": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0"
      ]
    },
    "341": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%126#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "tmp%126#0"
      ]
    },
    "344": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%126#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "tmp%126#0",
        "44"
      ]
    },
    "346": {
      "op": "getbyte",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "tmp%128#0"
      ]
    },
    "347": {
      "op": "txnas Assets",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0"
      ]
    },
    "349": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%130#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%130#0"
      ]
    },
    "351": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%130#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%130#0",
        "1"
      ]
    },
    "352": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "353": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "pay2#0 (copy)",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "pay2#0 (copy)"
      ]
    },
    "354": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0"
      ]
    },
    "356": {
      "op": "intc_0 // pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "357": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type_matches%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "358": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "359": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0"
      ]
    },
    "362": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "363": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%0#3",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%0#3"
      ]
    },
    "365": {
      "op": "pushint 16 // 16",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%0#3",
        "16"
      ]
    },
    "367": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%1#4",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%1#4"
      ]
    },
    "368": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "369": {
      "op": "uncover 18",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "pay#0"
      ]
    },
    "371": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%2#1"
      ]
    },
    "373": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%2#1",
        "100000"
      ]
    },
    "377": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "pay2#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%3#1"
      ]
    },
    "378": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "379": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0",
        "pay2#0"
      ]
    },
    "381": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%4#1"
      ]
    },
    "383": {
      "op": "pushint 200000 // 200000",
      "defined_out": [
        "200000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%4#1",
        "200000"
      ]
    },
    "387": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "s#0",
        "t#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%5#1"
      ]
    },
    "388": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "389": {
      "op": "uncover 19",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0",
        "asset#0"
      ]
    },
    "391": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "392": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "tmp%131#0",
        "tmp%133#0",
        "asset2#0"
      ]
    },
    "394": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "s#0",
        "t#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "395": {
      "op": "uncover 3"
    },
    "397": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "s#0",
        "t#0"
      ]
    },
    "399": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%8#0"
      ]
    },
    "400": {
      "op": "log",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0"
      ]
    },
    "401": {
      "op": "uncover 19",
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "a#0"
      ]
    },
    "403": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%9#1"
      ]
    },
    "404": {
      "op": "uncover 19",
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%9#1",
        "b#0"
      ]
    },
    "406": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%10#1",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%9#1"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%9#1",
        "tmp%10#1"
      ]
    },
    "407": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%11#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%11#0"
      ]
    },
    "408": {
      "op": "uncover 18",
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%11#0",
        "c#0"
      ]
    },
    "410": {
      "op": "btoi",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%11#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%12#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "411": {
      "op": "+",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%13#0",
        "tmp%131#0",
        "tmp%133#0"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%13#0"
      ]
    },
    "412": {
      "op": "uncover 17",
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%13#0",
        "d#0"
      ]
    },
    "414": {
      "op": "+",
      "defined_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%14#0"
      ]
    },
    "415": {
      "op": "uncover 16",
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%14#0",
        "e#0"
      ]
    },
    "417": {
      "op": "btoi",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%14#0",
        "tmp%15#1"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%14#0",
        "tmp%15#1"
      ]
    },
    "418": {
      "op": "+",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%16#1"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%16#1"
      ]
    },
    "419": {
      "op": "uncover 15",
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%16#1",
        "f#0"
      ]
    },
    "421": {
      "op": "btoi",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%16#1",
        "tmp%17#1"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%16#1",
        "tmp%17#1"
      ]
    },
    "422": {
      "op": "+",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%18#0"
      ]
    },
    "423": {
      "op": "uncover 14",
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%18#0",
        "g#0"
      ]
    },
    "425": {
      "op": "btoi",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%18#0",
        "tmp%19#1"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%18#0",
        "tmp%19#1"
      ]
    },
    "426": {
      "op": "+",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%20#0"
      ]
    },
    "427": {
      "op": "uncover 13",
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%20#0",
        "h#0"
      ]
    },
    "429": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%20#0",
        "tmp%21#1"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%20#0",
        "tmp%21#1"
      ]
    },
    "430": {
      "op": "+",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%22#0"
      ]
    },
    "431": {
      "op": "uncover 12",
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%22#0",
        "i#0"
      ]
    },
    "433": {
      "op": "btoi",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%22#0",
        "tmp%23#1"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%22#0",
        "tmp%23#1"
      ]
    },
    "434": {
      "op": "+",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%24#0"
      ]
    },
    "435": {
      "op": "uncover 11",
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%24#0",
        "j#0"
      ]
    },
    "437": {
      "op": "btoi",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%24#0",
        "tmp%25#1"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%24#0",
        "tmp%25#1"
      ]
    },
    "438": {
      "op": "+",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%26#0"
      ]
    },
    "439": {
      "op": "uncover 10",
      "stack_out": [
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%26#0",
        "k#0"
      ]
    },
    "441": {
      "op": "btoi",
      "defined_out": [
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%26#0",
        "tmp%27#1"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%26#0",
        "tmp%27#1"
      ]
    },
    "442": {
      "op": "+",
      "defined_out": [
        "l#0",
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%28#0"
      ]
    },
    "443": {
      "op": "uncover 9",
      "stack_out": [
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%28#0",
        "l#0"
      ]
    },
    "445": {
      "op": "btoi",
      "defined_out": [
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%28#0",
        "tmp%29#1"
      ],
      "stack_out": [
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%28#0",
        "tmp%29#1"
      ]
    },
    "446": {
      "op": "+",
      "defined_out": [
        "m#0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%30#0"
      ]
    },
    "447": {
      "op": "uncover 8",
      "stack_out": [
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%30#0",
        "m#0"
      ]
    },
    "449": {
      "op": "btoi",
      "defined_out": [
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "450": {
      "op": "+",
      "defined_out": [
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "tmp%109#0",
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1"
      ]
    },
    "451": {
      "op": "uncover 7",
      "stack_out": [
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1",
        "tmp%109#0"
      ]
    },
    "453": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "p#0",
        "tmp%109#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1"
      ],
      "stack_out": [
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1",
        "tmp%109#0",
        "0"
      ]
    },
    "454": {
      "op": "extract_uint64",
      "defined_out": [
        "p#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%32#1",
        "tmp%33#0"
      ]
    },
    "455": {
      "op": "+",
      "defined_out": [
        "p#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1"
      ],
      "stack_out": [
        "tmp%111#0",
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1"
      ]
    },
    "456": {
      "op": "uncover 6",
      "stack_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1",
        "tmp%111#0"
      ]
    },
    "458": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "p#0",
        "tmp%111#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1"
      ],
      "stack_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1",
        "tmp%111#0",
        "8"
      ]
    },
    "460": {
      "op": "extract_uint64",
      "defined_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1",
        "tmp%35#0"
      ],
      "stack_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%34#1",
        "tmp%35#0"
      ]
    },
    "461": {
      "op": "+",
      "defined_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%36#1"
      ],
      "stack_out": [
        "p#0",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%36#1"
      ]
    },
    "462": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%36#1",
        "p#0"
      ]
    },
    "464": {
      "op": "+",
      "defined_out": [
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0"
      ]
    },
    "465": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0",
        "tmp%116#0"
      ]
    },
    "467": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "tmp%116#0",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0",
        "tmp%116#0",
        "24"
      ]
    },
    "469": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0",
        "tmp%38#1"
      ],
      "stack_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%37#0",
        "tmp%38#1"
      ]
    },
    "470": {
      "op": "+",
      "defined_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0"
      ]
    },
    "471": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0",
        "tmp%118#0"
      ]
    },
    "473": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "tmp%118#0",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0",
        "tmp%118#0",
        "32"
      ]
    },
    "475": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0",
        "tmp%40#1"
      ],
      "stack_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%39#0",
        "tmp%40#1"
      ]
    },
    "476": {
      "op": "+",
      "defined_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%131#0",
        "tmp%133#0",
        "tmp%41#0"
      ]
    },
    "477": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%133#0",
        "tmp%41#0",
        "tmp%131#0"
      ]
    },
    "479": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "45",
        "tmp%131#0",
        "tmp%133#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%41#0",
        "tmp%131#0",
        "45"
      ]
    },
    "481": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%133#0",
        "tmp%41#0",
        "tmp%42#1"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%41#0",
        "tmp%42#1"
      ]
    },
    "482": {
      "op": "+",
      "defined_out": [
        "tmp%133#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%43#1"
      ]
    },
    "483": {
      "op": "swap",
      "stack_out": [
        "tmp%43#1",
        "tmp%133#0"
      ]
    },
    "484": {
      "op": "pushint 53 // 53",
      "defined_out": [
        "53",
        "tmp%133#0",
        "tmp%43#1"
      ],
      "stack_out": [
        "tmp%43#1",
        "tmp%133#0",
        "53"
      ]
    },
    "486": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%43#1",
        "tmp%44#1"
      ],
      "stack_out": [
        "tmp%43#1",
        "tmp%44#1"
      ]
    },
    "487": {
      "op": "+",
      "defined_out": [
        "to_encode%0#1"
      ],
      "stack_out": [
        "to_encode%0#1"
      ]
    },
    "488": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "489": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "490": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "491": {
      "op": "concat",
      "defined_out": [
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%136#0"
      ]
    },
    "492": {
      "op": "log",
      "stack_out": []
    },
    "493": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "494": {
      "op": "return"
    },
    "495": {
      "block": "main_method_with_15_args_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "497": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "498": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "499": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "501": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "502": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "505": {
      "op": "btoi",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "one#0"
      ]
    },
    "506": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "one#0",
        "reinterpret_bytes[8]%8#0"
      ],
      "stack_out": [
        "one#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "509": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0"
      ]
    },
    "510": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "one#0",
        "reinterpret_bytes[8]%9#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "reinterpret_bytes[8]%9#0"
      ]
    },
    "513": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0"
      ]
    },
    "514": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "one#0",
        "reinterpret_bytes[8]%10#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "reinterpret_bytes[8]%10#0"
      ]
    },
    "517": {
      "op": "btoi",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0"
      ]
    },
    "518": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "four#0",
        "one#0",
        "reinterpret_bytes[8]%11#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "reinterpret_bytes[8]%11#0"
      ]
    },
    "521": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0"
      ]
    },
    "522": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_bytes[8]%12#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "reinterpret_bytes[8]%12#0"
      ]
    },
    "525": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0"
      ]
    },
    "526": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_bytes[8]%13#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "reinterpret_bytes[8]%13#0"
      ]
    },
    "529": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0"
      ]
    },
    "530": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_bytes[8]%14#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "reinterpret_bytes[8]%14#0"
      ]
    },
    "533": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0"
      ]
    },
    "534": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "reinterpret_bytes[8]%15#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "reinterpret_bytes[8]%15#0"
      ]
    },
    "537": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0"
      ]
    },
    "538": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_bytes[8]%16#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "reinterpret_bytes[8]%16#0"
      ]
    },
    "541": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0"
      ]
    },
    "542": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_bytes[8]%17#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "reinterpret_bytes[8]%17#0"
      ]
    },
    "545": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0"
      ]
    },
    "546": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_bytes[8]%18#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "reinterpret_bytes[8]%18#0"
      ]
    },
    "549": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0"
      ]
    },
    "550": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_bytes[8]%19#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "reinterpret_bytes[8]%19#0"
      ]
    },
    "553": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0"
      ]
    },
    "554": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "reinterpret_bytes[8]%20#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "reinterpret_bytes[8]%20#0"
      ]
    },
    "557": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0"
      ]
    },
    "558": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%98#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "tmp%98#0"
      ]
    },
    "561": {
      "op": "extract 2 0",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0"
      ]
    },
    "564": {
      "op": "uncover 14"
    },
    "566": {
      "op": "uncover 14",
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "one#0",
        "two#0"
      ]
    },
    "568": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%0#3",
        "twelve#0"
      ],
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%0#3"
      ]
    },
    "569": {
      "op": "uncover 13",
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%0#3",
        "three#0"
      ]
    },
    "571": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%1#5",
        "twelve#0"
      ],
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%1#5"
      ]
    },
    "572": {
      "op": "uncover 12",
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%1#5",
        "four#0"
      ]
    },
    "574": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%2#1",
        "twelve#0"
      ],
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%2#1"
      ]
    },
    "575": {
      "op": "uncover 11",
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%2#1",
        "five#0"
      ]
    },
    "577": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%3#0",
        "twelve#0"
      ],
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%3#0"
      ]
    },
    "578": {
      "op": "uncover 10",
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%3#0",
        "six#0"
      ]
    },
    "580": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "ten#0",
        "thirteen#0",
        "tmp%4#1",
        "twelve#0"
      ],
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%4#1"
      ]
    },
    "581": {
      "op": "uncover 9",
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%4#1",
        "seven#0"
      ]
    },
    "583": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "ten#0",
        "thirteen#0",
        "tmp%5#0",
        "twelve#0"
      ],
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%5#0"
      ]
    },
    "584": {
      "op": "uncover 8",
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%5#0",
        "eight#0"
      ]
    },
    "586": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "ten#0",
        "thirteen#0",
        "tmp%6#2",
        "twelve#0"
      ],
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%6#2"
      ]
    },
    "587": {
      "op": "uncover 7",
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%6#2",
        "nine#0"
      ]
    },
    "589": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "ten#0",
        "thirteen#0",
        "tmp%7#2",
        "twelve#0"
      ],
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%7#2"
      ]
    },
    "590": {
      "op": "uncover 6",
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%7#2",
        "ten#0"
      ]
    },
    "592": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%8#2",
        "twelve#0"
      ],
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%8#2"
      ]
    },
    "593": {
      "op": "uncover 5",
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%8#2",
        "eleven#0"
      ]
    },
    "595": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%9#1",
        "twelve#0"
      ],
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%9#1"
      ]
    },
    "596": {
      "op": "uncover 4",
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%9#1",
        "twelve#0"
      ]
    },
    "598": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%10#1"
      ],
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%10#1"
      ]
    },
    "599": {
      "op": "uncover 3",
      "stack_out": [
        "fourteen#0",
        "fifteen#0",
        "tmp%10#1",
        "thirteen#0"
      ]
    },
    "601": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "fourteen#0",
        "fifteen#0",
        "tmp%11#0"
      ]
    },
    "602": {
      "op": "uncover 2",
      "stack_out": [
        "fifteen#0",
        "tmp%11#0",
        "fourteen#0"
      ]
    },
    "604": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fifteen#0",
        "tmp%12#0"
      ]
    },
    "605": {
      "op": "assert",
      "stack_out": [
        "fifteen#0"
      ]
    },
    "606": {
      "op": "dup",
      "defined_out": [
        "fifteen#0",
        "fifteen#0 (copy)"
      ],
      "stack_out": [
        "fifteen#0",
        "fifteen#0 (copy)"
      ]
    },
    "607": {
      "op": "len",
      "defined_out": [
        "fifteen#0",
        "length%0#0"
      ],
      "stack_out": [
        "fifteen#0",
        "length%0#0"
      ]
    },
    "608": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "fifteen#0"
      ],
      "stack_out": [
        "fifteen#0",
        "as_bytes%0#0"
      ]
    },
    "609": {
      "op": "extract 6 2",
      "defined_out": [
        "fifteen#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "fifteen#0",
        "length_uint16%0#0"
      ]
    },
    "612": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "fifteen#0"
      ]
    },
    "613": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "614": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "615": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "616": {
      "op": "concat",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "617": {
      "op": "log",
      "stack_out": []
    },
    "618": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "619": {
      "op": "return"
    },
    "620": {
      "block": "main_method_with_default_args_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "622": {
      "op": "!",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "623": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "624": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "626": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "627": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%4#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "630": {
      "op": "btoi",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "631": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0"
      ]
    },
    "633": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_from_storage#0",
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "636": {
      "op": "btoi",
      "defined_out": [
        "asset_from_storage#0",
        "tmp%69#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "tmp%69#0"
      ]
    },
    "637": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0"
      ]
    },
    "639": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_bytes[1]%6#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "642": {
      "op": "btoi",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%71#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "tmp%71#0"
      ]
    },
    "643": {
      "op": "txnas Accounts",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0"
      ]
    },
    "645": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "648": {
      "op": "btoi",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "tmp%73#0"
      ]
    },
    "649": {
      "op": "txnas Accounts",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0"
      ]
    },
    "651": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "654": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "tmp%75#0"
      ]
    },
    "655": {
      "op": "txnas Applications",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0"
      ]
    },
    "657": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "660": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%77#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "tmp%77#0"
      ]
    },
    "661": {
      "op": "txnas Applications",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0"
      ]
    },
    "663": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0"
      ]
    },
    "666": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ]
    },
    "669": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0"
      ]
    },
    "672": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0"
      ]
    },
    "675": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "678": {
      "op": "uncover 10",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "asset_from_storage#0"
      ]
    },
    "680": {
      "op": "intc_2 // 123",
      "defined_out": [
        "123",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "asset_from_storage#0",
        "123"
      ]
    },
    "681": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%0#0"
      ]
    },
    "682": {
      "error": "wrong asset from storage",
      "op": "assert // wrong asset from storage",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "683": {
      "op": "uncover 9",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "asset_from_function#0"
      ]
    },
    "685": {
      "op": "pushint 456 // 456",
      "defined_out": [
        "456",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "asset_from_function#0",
        "456"
      ]
    },
    "688": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%1#4"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%1#4"
      ]
    },
    "689": {
      "error": "wrong asset from function",
      "op": "assert // wrong asset from function",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "690": {
      "op": "global CreatorAddress",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%2#3"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%2#3"
      ]
    },
    "692": {
      "op": "uncover 9",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%2#3",
        "account_from_storage#0"
      ]
    },
    "694": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%3#1"
      ]
    },
    "695": {
      "error": "wrong account from storage",
      "op": "assert // wrong account from storage",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "696": {
      "op": "global ZeroAddress",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%4#3"
      ]
    },
    "698": {
      "op": "uncover 8",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%4#3",
        "account_from_function#0"
      ]
    },
    "700": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%5#1"
      ]
    },
    "701": {
      "error": "wrong account from function",
      "op": "assert // wrong account from function",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "702": {
      "op": "uncover 6",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "application_from_storage#0"
      ]
    },
    "704": {
      "op": "intc_2 // 123",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "application_from_storage#0",
        "123"
      ]
    },
    "705": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%6#3"
      ]
    },
    "706": {
      "error": "wrong application from storage",
      "op": "assert // wrong application from storage",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "707": {
      "op": "uncover 5",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "application_from_function#0"
      ]
    },
    "709": {
      "op": "pushint 456 // 456",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "application_from_function#0",
        "456"
      ]
    },
    "712": {
      "op": "==",
      "defined_out": [
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%7#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%7#3"
      ]
    },
    "713": {
      "error": "wrong application from function",
      "op": "assert // wrong application from function",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "714": {
      "op": "dig 4",
      "defined_out": [
        "bytes_from_storage#0",
        "bytes_from_storage#0 (copy)",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "716": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%0#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "719": {
      "op": "pushbytes 0x07",
      "defined_out": [
        "0x07",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%0#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%0#0",
        "0x07"
      ]
    },
    "722": {
      "op": "b==",
      "defined_out": [
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%8#3"
      ]
    },
    "723": {
      "error": "wrong 0th byte from storage",
      "op": "assert // wrong 0th byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "724": {
      "op": "dig 4",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "726": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%2#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "729": {
      "op": "pushbytes 0x08",
      "defined_out": [
        "0x08",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%2#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%2#0",
        "0x08"
      ]
    },
    "732": {
      "op": "b==",
      "defined_out": [
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%9#3"
      ]
    },
    "733": {
      "error": "wrong 1st byte from storage",
      "op": "assert // wrong 1st byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "734": {
      "op": "uncover 4",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "bytes_from_storage#0"
      ]
    },
    "736": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%4#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "739": {
      "op": "pushbytes 0x09",
      "defined_out": [
        "0x09",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "reinterpret_biguint%4#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "reinterpret_biguint%4#0",
        "0x09"
      ]
    },
    "742": {
      "op": "b==",
      "defined_out": [
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%10#3"
      ]
    },
    "743": {
      "error": "wrong 2nd byte from storage",
      "op": "assert // wrong 2nd byte from storage",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "744": {
      "op": "uncover 3",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_storage#0"
      ]
    },
    "746": {
      "op": "btoi",
      "defined_out": [
        "int_from_const#0",
        "int_from_function#0",
        "str_from_const#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%11#0"
      ]
    },
    "747": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "int_from_const#0",
        "int_from_function#0",
        "str_from_const#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%11#0",
        "2"
      ]
    },
    "748": {
      "op": "==",
      "defined_out": [
        "int_from_const#0",
        "int_from_function#0",
        "str_from_const#0",
        "tmp%12#3"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%12#3"
      ]
    },
    "749": {
      "error": "wrong int from storage",
      "op": "assert // wrong int from storage",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "750": {
      "op": "uncover 2",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_function#0"
      ]
    },
    "752": {
      "op": "btoi",
      "defined_out": [
        "int_from_const#0",
        "str_from_const#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "tmp%13#0"
      ]
    },
    "753": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "tmp%13#0",
        "3"
      ]
    },
    "755": {
      "op": "==",
      "defined_out": [
        "int_from_const#0",
        "str_from_const#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "tmp%14#2"
      ]
    },
    "756": {
      "error": "wrong int from function",
      "op": "assert // wrong int from function",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "757": {
      "op": "swap",
      "stack_out": [
        "str_from_const#0",
        "int_from_const#0"
      ]
    },
    "758": {
      "op": "pushbytes 0x0000007b",
      "defined_out": [
        "0x0000007b",
        "int_from_const#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "str_from_const#0",
        "int_from_const#0",
        "0x0000007b"
      ]
    },
    "764": {
      "op": "b==",
      "defined_out": [
        "str_from_const#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "str_from_const#0",
        "tmp%15#2"
      ]
    },
    "765": {
      "op": "assert",
      "stack_out": [
        "str_from_const#0"
      ]
    },
    "766": {
      "op": "pushbytes 0x0003616263",
      "defined_out": [
        "0x0003616263",
        "str_from_const#0"
      ],
      "stack_out": [
        "str_from_const#0",
        "0x0003616263"
      ]
    },
    "773": {
      "op": "==",
      "defined_out": [
        "tmp%16#2"
      ],
      "stack_out": [
        "tmp%16#2"
      ]
    },
    "774": {
      "op": "assert",
      "stack_out": []
    },
    "775": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "776": {
      "op": "return"
    },
    "777": {
      "block": "main_get_an_int_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "779": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "780": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "781": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "783": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "784": {
      "op": "pushbytes 0x151f7c750000000000000003",
      "defined_out": [
        "0x151f7c750000000000000003"
      ],
      "stack_out": [
        "0x151f7c750000000000000003"
      ]
    },
    "798": {
      "op": "log",
      "stack_out": []
    },
    "799": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "800": {
      "op": "return"
    },
    "801": {
      "block": "main_get_application_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "803": {
      "op": "!",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "804": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "805": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "807": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "808": {
      "op": "bytec_2 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "809": {
      "op": "log",
      "stack_out": []
    },
    "810": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "811": {
      "op": "return"
    },
    "812": {
      "block": "main_get_asset_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "814": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "815": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "816": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "818": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "819": {
      "op": "bytec_2 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "820": {
      "op": "log",
      "stack_out": []
    },
    "821": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "822": {
      "op": "return"
    },
    "823": {
      "block": "main_get_address_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "825": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "826": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "827": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "829": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "830": {
      "op": "pushbytes base32(CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ],
      "stack_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "868": {
      "op": "log",
      "stack_out": []
    },
    "869": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "870": {
      "op": "return"
    },
    "871": {
      "block": "main_compare_assets_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "873": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "874": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "875": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "877": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "878": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "881": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "882": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_a#0"
      ],
      "stack_out": [
        "asset_a#0"
      ]
    },
    "884": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_a#0",
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "asset_a#0",
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "887": {
      "op": "btoi",
      "defined_out": [
        "asset_a#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "asset_a#0",
        "tmp%37#0"
      ]
    },
    "888": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_a#0",
        "asset_b#0"
      ],
      "stack_out": [
        "asset_a#0",
        "asset_b#0"
      ]
    },
    "890": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "891": {
      "error": "asset a == b",
      "op": "assert // asset a == b",
      "stack_out": []
    },
    "892": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "893": {
      "op": "return"
    },
    "894": {
      "block": "main_with_transactions_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "896": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "897": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "898": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "900": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "901": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "904": {
      "op": "btoi",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "905": {
      "op": "txnas Assets",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "907": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "an_int#0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0"
      ]
    },
    "910": {
      "op": "txn GroupIndex",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%30#0"
      ]
    },
    "912": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "an_int#0",
        "asset#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%30#0",
        "1"
      ]
    },
    "913": {
      "op": "-",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "914": {
      "op": "dup",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "915": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0"
      ]
    },
    "917": {
      "op": "intc_0 // pay",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "918": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type_matches%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "919": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "920": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "923": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0"
      ]
    },
    "924": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0",
        "\"asa\""
      ]
    },
    "925": {
      "op": "app_global_get_ex",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "926": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0"
      ]
    },
    "927": {
      "op": "uncover 4",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "asset#0"
      ]
    },
    "929": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "pay#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "tmp%0#0"
      ]
    },
    "930": {
      "error": "is correct asset",
      "op": "assert // is correct asset",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "931": {
      "op": "uncover 2",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "an_int#0"
      ]
    },
    "933": {
      "op": "btoi",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%1#5"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#5"
      ]
    },
    "934": {
      "op": "intc_0 // 1",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#5",
        "1"
      ]
    },
    "935": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%2#4"
      ]
    },
    "936": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": [
        "pay#0",
        "another_int#0"
      ]
    },
    "937": {
      "op": "swap",
      "stack_out": [
        "another_int#0",
        "pay#0"
      ]
    },
    "938": {
      "op": "gtxns Receiver",
      "defined_out": [
        "another_int#0",
        "tmp%3#4"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#4"
      ]
    },
    "940": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "another_int#0",
        "tmp%3#4",
        "tmp%4#3"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#4",
        "tmp%4#3"
      ]
    },
    "942": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%5#1"
      ]
    },
    "943": {
      "error": "is payment to app",
      "op": "assert // is payment to app",
      "stack_out": [
        "another_int#0"
      ]
    },
    "944": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2"
      ]
    },
    "945": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2",
        "2"
      ]
    },
    "946": {
      "op": "==",
      "defined_out": [
        "tmp%7#3"
      ],
      "stack_out": [
        "tmp%7#3"
      ]
    },
    "947": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": []
    },
    "948": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "949": {
      "op": "return"
    },
    "950": {
      "block": "main_opt_into_asset_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "952": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "953": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "954": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "956": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "957": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "960": {
      "op": "btoi",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "961": {
      "op": "txnas Assets",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "963": {
      "op": "txn Sender"
    },
    "965": {
      "op": "global CreatorAddress",
      "defined_out": [
        "asset#0",
        "tmp%0#11",
        "tmp%1#8"
      ],
      "stack_out": [
        "asset#0",
        "tmp%0#11",
        "tmp%1#8"
      ]
    },
    "967": {
      "op": "==",
      "defined_out": [
        "asset#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "asset#0",
        "tmp%2#4"
      ]
    },
    "968": {
      "error": "Only creator can opt in to ASA",
      "op": "assert // Only creator can opt in to ASA",
      "stack_out": [
        "asset#0"
      ]
    },
    "969": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "970": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0",
        "\"asa\""
      ]
    },
    "971": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "asset#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "972": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "maybe_value%0#0"
      ]
    },
    "973": {
      "op": "!",
      "defined_out": [
        "asset#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "asset#0",
        "tmp%3#1"
      ]
    },
    "974": {
      "error": "ASA already opted in",
      "op": "assert // ASA already opted in",
      "stack_out": [
        "asset#0"
      ]
    },
    "975": {
      "op": "bytec_1 // \"asa\"",
      "stack_out": [
        "asset#0",
        "\"asa\""
      ]
    },
    "976": {
      "op": "dig 1",
      "defined_out": [
        "\"asa\"",
        "asset#0",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "\"asa\"",
        "asset#0 (copy)"
      ]
    },
    "978": {
      "op": "app_global_put",
      "stack_out": [
        "asset#0"
      ]
    },
    "979": {
      "op": "itxn_begin"
    },
    "980": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "asset#0",
        "axfer"
      ],
      "stack_out": [
        "asset#0",
        "axfer"
      ]
    },
    "982": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset#0"
      ]
    },
    "984": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "985": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset#0"
      ]
    },
    "987": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "asset#0",
        "tmp%4#3"
      ]
    },
    "989": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "asset#0"
      ]
    },
    "991": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "993": {
      "op": "itxn_submit"
    },
    "994": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "995": {
      "op": "return"
    },
    "996": {
      "block": "main_mixed_oca_route@7",
      "stack_in": [],
      "op": "intc_0 // 1"
    },
    "997": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%11#0"
      ],
      "stack_out": [
        "1",
        "tmp%11#0"
      ]
    },
    "999": {
      "op": "shl",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1000": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "37"
      ]
    },
    "1002": {
      "op": "&",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1003": {
      "error": "OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "op": "assert // OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "stack_out": []
    },
    "1004": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1006": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1007": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1010": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1011": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1012": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1013": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1014": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "1017": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "0x151f7c75"
      ]
    },
    "1018": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#3"
      ]
    },
    "1019": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1020": {
      "op": "log",
      "stack_out": []
    },
    "1021": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1022": {
      "op": "return"
    },
    "1023": {
      "block": "main_all_the_things_route@6",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1026": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1027": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1028": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1029": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1030": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "1033": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "0x151f7c75"
      ]
    },
    "1034": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#3"
      ]
    },
    "1035": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1036": {
      "op": "log",
      "stack_out": []
    },
    "1037": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1038": {
      "op": "return"
    },
    "1039": {
      "block": "main_noop_with_uint64_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1041": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1042": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1043": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1045": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1046": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1049": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "1050": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3",
        "1"
      ]
    },
    "1051": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1052": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1053": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3"
      ]
    },
    "1056": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#3"
      ],
      "stack_out": [
        "tmp%1#3",
        "0x151f7c75"
      ]
    },
    "1057": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#3"
      ]
    },
    "1058": {
      "op": "concat",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1059": {
      "op": "log",
      "stack_out": []
    },
    "1060": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1061": {
      "op": "return"
    },
    "1062": {
      "block": "main_bare_routing@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "1064": {
      "op": "switch main_bare_abi_config@20 main_bare_abi_config@20 main_bare_abi_config@20 main_after_if_else@21 main_bare_abi_config@20 main_bare_abi_config@20",
      "stack_out": []
    },
    "1078": {
      "op": "b main_after_if_else@21"
    },
    "1081": {
      "block": "main_bare_abi_config@20",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "1083": {
      "op": "!",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "1084": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1085": {
      "op": "pushbytes \"Hello World\"",
      "defined_out": [
        "\"Hello World\""
      ],
      "stack_out": [
        "\"Hello World\""
      ]
    },
    "1098": {
      "op": "log",
      "stack_out": []
    },
    "1099": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1100": {
      "op": "return"
    }
  }
}