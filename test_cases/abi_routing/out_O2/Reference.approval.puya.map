{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": "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",
  "op_pc_offset": 0,
  "pc_events": {
    "134": {
      "error": "OnCompletion must be NoOp"
    },
    "242": {
      "error": "invalid number of bytes for (len+utf8[])"
    },
    "281": {
      "error": "invalid number of bytes for uint64"
    },
    "289": {
      "error": "invalid number of bytes for uint64"
    },
    "297": {
      "error": "invalid number of bytes for uint64"
    },
    "305": {
      "error": "invalid number of bytes for uint64"
    },
    "314": {
      "error": "invalid number of bytes for uint64"
    },
    "323": {
      "error": "invalid number of bytes for uint64"
    },
    "331": {
      "error": "invalid number of bytes for uint64"
    },
    "341": {
      "error": "transaction type is pay"
    },
    "349": {
      "error": "invalid number of bytes for uint64"
    },
    "357": {
      "error": "invalid number of bytes for uint64"
    },
    "365": {
      "error": "invalid number of bytes for uint64"
    },
    "373": {
      "error": "invalid number of bytes for uint64"
    },
    "381": {
      "error": "invalid number of bytes for uint64"
    },
    "389": {
      "error": "invalid number of bytes for uint64"
    },
    "397": {
      "error": "invalid number of bytes for uint64"
    },
    "452": {
      "error": "transaction type is pay"
    },
    "595": {
      "error": "invalid number of bytes for uint64"
    },
    "604": {
      "error": "invalid number of bytes for uint64"
    },
    "613": {
      "error": "invalid number of bytes for uint64"
    },
    "622": {
      "error": "invalid number of bytes for uint64"
    },
    "631": {
      "error": "invalid number of bytes for uint64"
    },
    "640": {
      "error": "invalid number of bytes for uint64"
    },
    "649": {
      "error": "invalid number of bytes for uint64"
    },
    "658": {
      "error": "invalid number of bytes for uint64"
    },
    "667": {
      "error": "invalid number of bytes for uint64"
    },
    "676": {
      "error": "invalid number of bytes for uint64"
    },
    "685": {
      "error": "invalid number of bytes for uint64"
    },
    "694": {
      "error": "invalid number of bytes for uint64"
    },
    "703": {
      "error": "invalid number of bytes for uint64"
    },
    "712": {
      "error": "invalid number of bytes for uint64"
    },
    "726": {
      "error": "invalid number of bytes for (len+uint8[])"
    },
    "782": {
      "error": "invalid number of bytes for uint64"
    },
    "791": {
      "error": "invalid number of bytes for uint64"
    },
    "801": {
      "error": "invalid number of bytes for uint8[32]"
    },
    "810": {
      "error": "invalid number of bytes for uint8[32]"
    },
    "818": {
      "error": "invalid number of bytes for uint64"
    },
    "827": {
      "error": "invalid number of bytes for uint64"
    },
    "837": {
      "error": "invalid number of bytes for uint8[3]"
    },
    "845": {
      "error": "invalid number of bytes for uint64"
    },
    "853": {
      "error": "invalid number of bytes for uint64"
    },
    "862": {
      "error": "invalid number of bytes for uint32"
    },
    "875": {
      "error": "invalid number of bytes for (len+utf8[])"
    },
    "883": {
      "error": "invalid number of bytes for uint64"
    },
    "897": {
      "error": "invalid number of bytes for (len+uint8[])"
    },
    "906": {
      "error": "wrong asset from storage"
    },
    "913": {
      "error": "wrong asset from function"
    },
    "919": {
      "error": "wrong account from storage"
    },
    "925": {
      "error": "wrong account from function"
    },
    "931": {
      "error": "wrong application from storage"
    },
    "938": {
      "error": "wrong application from function"
    },
    "941": {
      "error": "index access is out of bounds"
    },
    "948": {
      "error": "wrong 0th byte from storage"
    },
    "951": {
      "error": "index access is out of bounds"
    },
    "958": {
      "error": "wrong 1st byte from storage"
    },
    "961": {
      "error": "index access is out of bounds"
    },
    "968": {
      "error": "wrong 2nd byte from storage"
    },
    "974": {
      "error": "wrong int from storage"
    },
    "981": {
      "error": "wrong int from function"
    },
    "1008": {
      "error": "check self.local_uint exists for account"
    },
    "1018": {
      "error": "check self.local_bytes exists for account"
    },
    "1103": {
      "error": "invalid number of bytes for uint64"
    },
    "1112": {
      "error": "invalid number of bytes for uint64"
    },
    "1115": {
      "error": "asset a == b"
    },
    "1123": {
      "error": "invalid number of bytes for uint64"
    },
    "1132": {
      "error": "invalid number of bytes for uint64"
    },
    "1142": {
      "error": "transaction type is pay"
    },
    "1150": {
      "error": "invalid number of bytes for uint64"
    },
    "1154": {
      "error": "check self.asa exists"
    },
    "1158": {
      "error": "is correct asset"
    },
    "1164": {
      "error": "is correct int"
    },
    "1171": {
      "error": "is payment to app"
    },
    "1175": {
      "error": "is correct int"
    },
    "1183": {
      "error": "invalid number of bytes for uint64"
    },
    "1190": {
      "error": "Only creator can opt in to ASA"
    },
    "1194": {
      "error": "check self.asa exists"
    },
    "1196": {
      "error": "ASA already opted in"
    },
    "1225": {
      "error": "invalid number of bytes for uint64"
    },
    "1234": {
      "error": "overflow"
    },
    "1254": {
      "error": "OnCompletion must be one of NoOp, CloseOut, DeleteApplication && can only call when not creating"
    },
    "1262": {
      "error": "invalid number of bytes for uint64"
    },
    "1271": {
      "error": "overflow"
    },
    "1288": {
      "error": "invalid number of bytes for uint64"
    },
    "1297": {
      "error": "overflow"
    },
    "1314": {
      "error": "OnCompletion must be OptIn && can only call when not creating"
    },
    "1322": {
      "error": "invalid number of bytes for uint64"
    },
    "1336": {
      "error": "invalid number of bytes for (len+uint8[])"
    },
    "1357": {
      "error": "can only call when creating"
    }
  }
}