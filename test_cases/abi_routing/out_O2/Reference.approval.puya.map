{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBQ;AAAW;AAAX;AACA;;;;;;;;AAAc;AAAd;AACA;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;AAAe;;AAAf;AACA;;;;;AAAW;AAAX;AANR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA2QK;;AAAA;AAAA;AAAA;;AAAA;AA3QL;;;AAAA;;;AA6Qe;;;;;;;;AAAA;AAAA;AAAkB;;;AAAlB;AAFV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlEA;;AAAA;AAAA;AAAA;;AAAA;AAzML;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AA4Oe;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAc;;;;AAAd;AAAP;AACO;;AAAA;;AAAe;;;;AAAf;AAAP;AACA;;AAAA;AACA;;AAAA;AAEI;;AAAA;;AAAA;AAAJ;AAGI;;AAAA;AACE;;AAAA;AADF;AAEE;;AAAA;AAFF;AAAA;;AAAA;AAIE;;AAAA;AAJF;AAKE;;AAAA;AALF;AAME;;AAAA;AANF;AAOE;;AAAA;AAPF;AAQE;;AAAA;AARF;AASE;;AAAA;AATF;AAUE;;AAAA;AAVF;AAWE;;AAAA;AAXF;AAYE;;AAAA;AAZF;AAaE;;AAAA;AAbF;AAcE;;AAAA;AAdF;AAAA;;AAAA;AAgBE;;AAAA;AAhBF;AAiBE;;AAAA;AAjBF;AAkBE;;AAAA;AAlBF;AAmBE;AAAA;AAnBF;AADG;AA3CV;AAAA;AAAA;AAAA;AAAA;;AAtCA;;AAAA;AAAA;AAAA;;AAAA;AAnKL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAwLY;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AADJ;AApBH;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjDA;;AAAA;AAAA;AAAA;;AAAA;AAlHL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAmJe;;AAAsB;AAAtB;AAAP;AACO;;AAAuB;;;AAAvB;AAAP;AAC+B;;AAAxB;;AAAA;AAAP;AACgC;;AAAzB;;AAAA;AAAP;AACO;;AAA4B;AAA5B;AAAP;AACO;;AAA6B;;;AAA7B;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;;;AAAyB;;;AAAzB;AAAP;AACO;;AAAA;AAA2B;AAA3B;AAAP;AACO;;AAAA;AAA4B;;AAA5B;AAAP;AACO;;AAAkB;;;;;;AAAlB;AAAP;AACO;;AAAkB;;;;;;;AAAlB;AAAP;AACyC;;AAAhB;AAAA;AAAA;AAAA;AAAlB;;AAAA;AAAP;AAC4C;;AAAjB;AAAA;AAAA;AAAA;AAApB;AAAP;AA/CH;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAJA;;AAAA;AAAA;AAAA;;AAAA;AA9FL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAgGe;AAAP;AAFH;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAjFL;;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAyFe;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAiB;AAAjB;AAAP;AACO;AAAA;;AAAgB;;AAAhB;AAAP;AACO;AAAsB;AAAtB;AAAP;AAXH;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAhEL;;;AAAA;AAAA;;AAmEe;;AAAiB;;AAAjB;AAAP;AAEW;AAAA;AAAA;AAAA;AAAJ;AAAP;AAEA;AAAA;;AAAA;AAGA;AAC4B;;AAA5B;;AACsB;AAAtB;;AACiC;;AAAjC;;AACA;;AACA;AAfH;;AA1BA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAtCL;;;AAgD6B;AAAZ;AAAA;AACF;AAAA;;;AAXV;AAAA;AAAA;AAAA;AAAA;;AAtCL;;;AAmC6B;AAAZ;AAAA;AACF;AAAA;;;AAdV;AAAA;AAAA;AAAA;AAAA;;AALA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAjBL;;;AAAA;AAAA;;;AAAA;;;AAmBwB;;AAAhB;AAAA;;AAAA;AACiB;;AAAjB;AAAA;;AAAA;AAHH;;AALA;;AAAA;AAAA;AAAA;;AAAA;AAZL;;;AAcqB;AAAJ;AAAA;AACF;AAAA;;;AAHV;AAAA;AAAA;AAAA;AAAA;;AAZL;;AAAA;;;;;;;;;;;;;;AAAA;;;AAmDK;;AAAA;AAAA;AAWO;;;;;;;;;;;;;AAAJ;AAXH;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.abi_routing.contract.Reference.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 123 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 \"asa\" \"local_uint\" \"local_bytes\" 0x151f7c7500000000000001c8"
    },
    "54": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "56": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "59": {
      "op": "bytec_1 // \"asa\""
    },
    "60": {
      "op": "intc_2 // 123"
    },
    "61": {
      "op": "app_global_put"
    },
    "62": {
      "op": "pushbytes \"an_int\""
    },
    "70": {
      "op": "intc_3 // 2"
    },
    "71": {
      "op": "app_global_put"
    },
    "72": {
      "op": "pushbytess \"some_bytes\" 0x070809 // \"some_bytes\", 0x070809"
    },
    "89": {
      "op": "app_global_put"
    },
    "90": {
      "op": "pushbytes \"creator\""
    },
    "99": {
      "op": "txn Sender"
    },
    "101": {
      "op": "app_global_put"
    },
    "102": {
      "op": "pushbytes \"app\""
    },
    "107": {
      "op": "intc_2 // 123"
    },
    "108": {
      "op": "app_global_put"
    },
    "109": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "111": {
      "op": "bz main_bare_routing@20",
      "stack_out": []
    },
    "114": {
      "op": "pushbytess 0xd78db35b 0x01040023 0x3a5353fc 0xd2f2f53c 0x2826b202 0x6f8e94cd 0x17dc68f0 0x7fad9780 0x2fdf95a4 0x1399826c 0xa1300821 0x670dc055 0x5732195a 0xd17552fb 0x9023bb19 // method \"noop_with_uint64(uint64)uint8\", method \"opt_in(uint64,byte[])void\", method \"all_the_things(uint64)uint8\", method \"mixed_oca(uint64)uint8\", method \"opt_into_asset(asset)void\", method \"with_transactions(asset,uint64,pay,uint64)void\", method \"compare_assets(asset,asset)void\", method \"get_address()address\", method \"get_asset()uint64\", method \"get_application()uint64\", method \"get_an_int()uint64\", method \"method_with_default_args(asset,asset,account,account,application,application,byte[3],uint64,uint64,uint32,string,uint64,byte[])void\", method \"method_with_15_args(uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[])byte[]\", method \"method_with_more_than_15_args(uint64,uint64,uint64,uint64,asset,uint64,uint64,pay,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,uint64,byte[],byte[],asset,pay,uint64,uint64)uint64\", method \"hello_with_algopy_string(string)string\""
    },
    "191": {
      "op": "txna ApplicationArgs 0"
    },
    "194": {
      "op": "match main_noop_with_uint64_route@5 main_opt_in_route@6 main_all_the_things_route@7 main_mixed_oca_route@8 main_opt_into_asset_route@9 main_with_transactions_route@10 main_compare_assets_route@11 main_get_address_route@12 main_get_asset_route@13 main_get_application_route@14 main_get_an_int_route@15 main_method_with_default_args_route@16 main_method_with_15_args_route@17 main_method_with_more_than_15_args_route@18 main_hello_with_algopy_string_route@19"
    },
    "226": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "227": {
      "op": "return"
    },
    "228": {
      "block": "main_hello_with_algopy_string_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%196#0"
      ],
      "stack_out": [
        "tmp%196#0"
      ]
    },
    "230": {
      "op": "!",
      "defined_out": [
        "tmp%197#0"
      ],
      "stack_out": [
        "tmp%197#0"
      ]
    },
    "231": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "232": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%198#0"
      ],
      "stack_out": [
        "tmp%198#0"
      ]
    },
    "234": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "235": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%200#0"
      ],
      "stack_out": [
        "tmp%200#0"
      ]
    },
    "238": {
      "op": "extract 2 0",
      "defined_out": [
        "name#0"
      ],
      "stack_out": [
        "name#0"
      ]
    },
    "241": {
      "op": "pushbytes \"Hello \"",
      "defined_out": [
        "\"Hello \"",
        "name#0"
      ],
      "stack_out": [
        "name#0",
        "\"Hello \""
      ]
    },
    "249": {
      "op": "swap",
      "stack_out": [
        "\"Hello \"",
        "name#0"
      ]
    },
    "250": {
      "op": "concat",
      "defined_out": [
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3"
      ]
    },
    "251": {
      "op": "pushbytes \"!\"",
      "defined_out": [
        "\"!\"",
        "tmp%0#3"
      ],
      "stack_out": [
        "tmp%0#3",
        "\"!\""
      ]
    },
    "254": {
      "op": "concat",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "255": {
      "op": "dup",
      "defined_out": [
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ],
      "stack_out": [
        "tmp%1#1",
        "tmp%1#1 (copy)"
      ]
    },
    "256": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "length%1#0"
      ]
    },
    "257": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "as_bytes%1#0"
      ]
    },
    "258": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "length_uint16%1#0"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "tmp%1#1"
      ]
    },
    "262": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "263": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "264": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "265": {
      "op": "concat",
      "defined_out": [
        "tmp%202#0"
      ],
      "stack_out": [
        "tmp%202#0"
      ]
    },
    "266": {
      "op": "log",
      "stack_out": []
    },
    "267": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "268": {
      "op": "return"
    },
    "269": {
      "block": "main_method_with_more_than_15_args_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "271": {
      "op": "!",
      "defined_out": [
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%147#0"
      ]
    },
    "272": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "273": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%148#0"
      ]
    },
    "275": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "276": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "279": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "a#0",
        "b#0"
      ],
      "stack_out": [
        "a#0",
        "b#0"
      ]
    },
    "282": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "285": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%153#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "tmp%153#0"
      ]
    },
    "288": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0"
      ]
    },
    "289": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%155#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%155#0"
      ]
    },
    "292": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%156#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "tmp%156#0"
      ]
    },
    "293": {
      "op": "txnas Assets",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0"
      ]
    },
    "295": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0"
      ]
    },
    "298": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0"
      ]
    },
    "301": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%160#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%160#0"
      ]
    },
    "303": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "tmp%160#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "tmp%160#0",
        "2"
      ]
    },
    "304": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "305": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "306": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0"
      ]
    },
    "308": {
      "op": "intc_0 // pay",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type%1#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "309": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "gtxn_type_matches%1#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "310": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0"
      ]
    },
    "311": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0"
      ]
    },
    "314": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0"
      ]
    },
    "317": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0"
      ]
    },
    "320": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0"
      ]
    },
    "323": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0"
      ]
    },
    "326": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0"
      ]
    },
    "329": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0"
      ]
    },
    "332": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "pay#0",
        "tmp%168#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "tmp%168#0"
      ]
    },
    "335": {
      "error": "Index access is out of bounds",
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0"
      ]
    },
    "338": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "pay#0",
        "tmp%170#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "tmp%170#0"
      ]
    },
    "341": {
      "error": "Index access is out of bounds",
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0"
      ]
    },
    "344": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "pay#0",
        "tmp%172#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "tmp%172#0"
      ]
    },
    "347": {
      "error": "Index access is out of bounds",
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "pay#0",
        "tmp%173#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "tmp%173#0"
      ]
    },
    "350": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0"
      ]
    },
    "351": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "tmp%175#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "tmp%175#0"
      ]
    },
    "354": {
      "error": "Index access is out of bounds",
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0"
      ]
    },
    "357": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "tmp%177#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "tmp%177#0"
      ]
    },
    "360": {
      "error": "Index access is out of bounds",
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0"
      ]
    },
    "363": {
      "op": "txna ApplicationArgs 15"
    },
    "366": {
      "op": "dup"
    },
    "367": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "tmp%179#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "tmp%179#0 (copy)",
        "40"
      ]
    },
    "369": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "tmp%179#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "item_start_offset%0#0"
      ]
    },
    "370": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "item_start_offset%0#0",
        "tmp%179#0 (copy)"
      ]
    },
    "372": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "tmp%179#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "item_start_offset%0#0",
        "tmp%179#0 (copy)",
        "42"
      ]
    },
    "374": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "tmp%179#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%179#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "375": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "tmp%180#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%180#0"
      ]
    },
    "376": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0"
      ]
    },
    "379": {
      "op": "txna ApplicationArgs 15"
    },
    "382": {
      "op": "dup"
    },
    "383": {
      "op": "pushint 42 // 42",
      "defined_out": [
        "42",
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0",
        "tmp%182#0 (copy)"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0",
        "tmp%182#0 (copy)",
        "42"
      ]
    },
    "385": {
      "op": "extract_uint16",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_start_offset%1#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0",
        "item_start_offset%1#0"
      ]
    },
    "386": {
      "op": "dig 1",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0",
        "item_start_offset%1#0",
        "tmp%182#0 (copy)"
      ]
    },
    "388": {
      "op": "len",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%182#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "389": {
      "op": "substring3",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%183#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "tmp%183#0"
      ]
    },
    "390": {
      "op": "extract 2 0",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ]
    },
    "393": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%185#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%185#0"
      ]
    },
    "396": {
      "error": "Index access is out of bounds",
      "op": "extract 44 1 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%186#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%186#0"
      ]
    },
    "399": {
      "op": "btoi",
      "defined_out": [
        "a#0",
        "asset#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%187#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%187#0"
      ]
    },
    "400": {
      "op": "txnas Assets",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0"
      ]
    },
    "402": {
      "op": "txn GroupIndex",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%189#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%189#0"
      ]
    },
    "404": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%189#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "tmp%189#0",
        "1"
      ]
    },
    "405": {
      "op": "-",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "406": {
      "op": "dup",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "pay2#0 (copy)",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "pay2#0 (copy)"
      ]
    },
    "407": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0"
      ]
    },
    "409": {
      "op": "intc_0 // pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "410": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "gtxn_type_matches%2#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "411": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0"
      ]
    },
    "412": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%190#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "tmp%190#0"
      ]
    },
    "415": {
      "error": "Index access is out of bounds",
      "op": "extract 45 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "u#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0"
      ]
    },
    "418": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%192#0",
        "u#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "tmp%192#0"
      ]
    },
    "421": {
      "error": "Index access is out of bounds",
      "op": "extract 53 8 // on error: Index access is out of bounds",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0"
      ]
    },
    "424": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%0#2",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%0#2"
      ]
    },
    "426": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%0#2",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%0#2",
        "16"
      ]
    },
    "428": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%1#2",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%1#2"
      ]
    },
    "429": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "pay#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0"
      ]
    },
    "430": {
      "op": "uncover 18",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "pay#0"
      ]
    },
    "432": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%2#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%2#1"
      ]
    },
    "434": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%2#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%2#1",
        "100000"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "pay2#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%3#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0",
        "tmp%3#1"
      ]
    },
    "439": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "pay2#0",
        "u#0",
        "v#0"
      ]
    },
    "440": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0",
        "pay2#0"
      ]
    },
    "442": {
      "op": "gtxns Amount",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%4#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0",
        "tmp%4#1"
      ]
    },
    "444": {
      "op": "pushint 200000 // 200000",
      "defined_out": [
        "200000",
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%4#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0",
        "tmp%4#1",
        "200000"
      ]
    },
    "448": {
      "op": "==",
      "defined_out": [
        "a#0",
        "asset#0",
        "asset2#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "tmp%5#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0",
        "tmp%5#1"
      ]
    },
    "449": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "asset#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0"
      ]
    },
    "450": {
      "op": "uncover 19",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0",
        "asset#0"
      ]
    },
    "452": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "asset2#0",
        "u#0",
        "v#0"
      ]
    },
    "453": {
      "op": "uncover 2",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "u#0",
        "v#0",
        "asset2#0"
      ]
    },
    "455": {
      "op": "assert",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "s#0",
        "t#0",
        "u#0",
        "v#0"
      ]
    },
    "456": {
      "op": "uncover 3"
    },
    "458": {
      "op": "uncover 3",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "s#0",
        "t#0"
      ]
    },
    "460": {
      "op": "concat",
      "defined_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%8#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%8#1"
      ]
    },
    "461": {
      "op": "log",
      "stack_out": [
        "a#0",
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0"
      ]
    },
    "462": {
      "op": "uncover 19",
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "a#0"
      ]
    },
    "464": {
      "op": "btoi",
      "defined_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%9#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "b#0",
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%9#1"
      ]
    },
    "465": {
      "op": "uncover 19",
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%9#1",
        "b#0"
      ]
    },
    "467": {
      "op": "btoi",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%10#0",
        "tmp%9#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%9#1",
        "tmp%10#0"
      ]
    },
    "468": {
      "op": "+",
      "defined_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%11#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%11#1"
      ]
    },
    "469": {
      "op": "uncover 18",
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%11#1",
        "c#0"
      ]
    },
    "471": {
      "op": "btoi",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%11#1",
        "tmp%12#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%11#1",
        "tmp%12#0"
      ]
    },
    "472": {
      "op": "+",
      "defined_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%13#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "d#0",
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%13#1"
      ]
    },
    "473": {
      "op": "uncover 17",
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%13#1",
        "d#0"
      ]
    },
    "475": {
      "op": "+",
      "defined_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%14#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "e#0",
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%14#1"
      ]
    },
    "476": {
      "op": "uncover 16",
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%14#1",
        "e#0"
      ]
    },
    "478": {
      "op": "btoi",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%14#1",
        "tmp%15#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%14#1",
        "tmp%15#1"
      ]
    },
    "479": {
      "op": "+",
      "defined_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%16#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "f#0",
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%16#1"
      ]
    },
    "480": {
      "op": "uncover 15",
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%16#1",
        "f#0"
      ]
    },
    "482": {
      "op": "btoi",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%16#1",
        "tmp%17#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%16#1",
        "tmp%17#1"
      ]
    },
    "483": {
      "op": "+",
      "defined_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%18#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "g#0",
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%18#1"
      ]
    },
    "484": {
      "op": "uncover 14",
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%18#1",
        "g#0"
      ]
    },
    "486": {
      "op": "btoi",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%18#1",
        "tmp%19#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%18#1",
        "tmp%19#1"
      ]
    },
    "487": {
      "op": "+",
      "defined_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%20#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "h#0",
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%20#1"
      ]
    },
    "488": {
      "op": "uncover 13",
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%20#1",
        "h#0"
      ]
    },
    "490": {
      "op": "btoi",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%20#1",
        "tmp%21#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%20#1",
        "tmp%21#0"
      ]
    },
    "491": {
      "op": "+",
      "defined_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%22#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "i#0",
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%22#0"
      ]
    },
    "492": {
      "op": "uncover 12",
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%22#0",
        "i#0"
      ]
    },
    "494": {
      "op": "btoi",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%22#0",
        "tmp%23#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "495": {
      "op": "+",
      "defined_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%24#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "j#0",
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%24#0"
      ]
    },
    "496": {
      "op": "uncover 11",
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%24#0",
        "j#0"
      ]
    },
    "498": {
      "op": "btoi",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%24#0",
        "tmp%25#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%24#0",
        "tmp%25#1"
      ]
    },
    "499": {
      "op": "+",
      "defined_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%26#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "k#0",
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%26#1"
      ]
    },
    "500": {
      "op": "uncover 10",
      "stack_out": [
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%26#1",
        "k#0"
      ]
    },
    "502": {
      "op": "btoi",
      "defined_out": [
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%26#1",
        "tmp%27#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%26#1",
        "tmp%27#1"
      ]
    },
    "503": {
      "op": "+",
      "defined_out": [
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%28#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "l#0",
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%28#1"
      ]
    },
    "504": {
      "op": "uncover 9",
      "stack_out": [
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%28#1",
        "l#0"
      ]
    },
    "506": {
      "op": "btoi",
      "defined_out": [
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%28#1",
        "tmp%29#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%28#1",
        "tmp%29#0"
      ]
    },
    "507": {
      "op": "+",
      "defined_out": [
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%30#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "m#0",
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%30#1"
      ]
    },
    "508": {
      "op": "uncover 8",
      "stack_out": [
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%30#1",
        "m#0"
      ]
    },
    "510": {
      "op": "btoi",
      "defined_out": [
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%30#1",
        "tmp%31#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%30#1",
        "tmp%31#0"
      ]
    },
    "511": {
      "op": "+",
      "defined_out": [
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%32#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "n#0",
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%32#1"
      ]
    },
    "512": {
      "op": "uncover 7",
      "stack_out": [
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%32#1",
        "n#0"
      ]
    },
    "514": {
      "op": "btoi",
      "defined_out": [
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%32#1",
        "tmp%33#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%32#1",
        "tmp%33#1"
      ]
    },
    "515": {
      "op": "+",
      "defined_out": [
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "tmp%34#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "o#0",
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%34#0"
      ]
    },
    "516": {
      "op": "uncover 6",
      "stack_out": [
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%34#0",
        "o#0"
      ]
    },
    "518": {
      "op": "btoi",
      "defined_out": [
        "p#0",
        "q#0",
        "r#0",
        "tmp%34#0",
        "tmp%35#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%34#0",
        "tmp%35#1"
      ]
    },
    "519": {
      "op": "+",
      "defined_out": [
        "p#0",
        "q#0",
        "r#0",
        "tmp%36#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "p#0",
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%36#0"
      ]
    },
    "520": {
      "op": "uncover 5",
      "stack_out": [
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%36#0",
        "p#0"
      ]
    },
    "522": {
      "op": "+",
      "defined_out": [
        "q#0",
        "r#0",
        "tmp%37#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "q#0",
        "r#0",
        "u#0",
        "v#0",
        "tmp%37#1"
      ]
    },
    "523": {
      "op": "uncover 4",
      "stack_out": [
        "r#0",
        "u#0",
        "v#0",
        "tmp%37#1",
        "q#0"
      ]
    },
    "525": {
      "op": "btoi",
      "defined_out": [
        "r#0",
        "tmp%37#1",
        "tmp%38#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "r#0",
        "u#0",
        "v#0",
        "tmp%37#1",
        "tmp%38#0"
      ]
    },
    "526": {
      "op": "+",
      "defined_out": [
        "r#0",
        "tmp%39#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "r#0",
        "u#0",
        "v#0",
        "tmp%39#1"
      ]
    },
    "527": {
      "op": "uncover 3",
      "stack_out": [
        "u#0",
        "v#0",
        "tmp%39#1",
        "r#0"
      ]
    },
    "529": {
      "op": "btoi",
      "defined_out": [
        "tmp%39#1",
        "tmp%40#1",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "u#0",
        "v#0",
        "tmp%39#1",
        "tmp%40#1"
      ]
    },
    "530": {
      "op": "+",
      "defined_out": [
        "tmp%41#0",
        "u#0",
        "v#0"
      ],
      "stack_out": [
        "u#0",
        "v#0",
        "tmp%41#0"
      ]
    },
    "531": {
      "op": "uncover 2",
      "stack_out": [
        "v#0",
        "tmp%41#0",
        "u#0"
      ]
    },
    "533": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0",
        "tmp%42#1",
        "v#0"
      ],
      "stack_out": [
        "v#0",
        "tmp%41#0",
        "tmp%42#1"
      ]
    },
    "534": {
      "op": "+",
      "defined_out": [
        "tmp%43#1",
        "v#0"
      ],
      "stack_out": [
        "v#0",
        "tmp%43#1"
      ]
    },
    "535": {
      "op": "swap",
      "stack_out": [
        "tmp%43#1",
        "v#0"
      ]
    },
    "536": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#1",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%43#1",
        "tmp%44#0"
      ]
    },
    "537": {
      "op": "+",
      "defined_out": [
        "to_encode%0#1"
      ],
      "stack_out": [
        "to_encode%0#1"
      ]
    },
    "538": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "539": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "540": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "541": {
      "op": "concat",
      "defined_out": [
        "tmp%195#0"
      ],
      "stack_out": [
        "tmp%195#0"
      ]
    },
    "542": {
      "op": "log",
      "stack_out": []
    },
    "543": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "544": {
      "op": "return"
    },
    "545": {
      "block": "main_method_with_15_args_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "547": {
      "op": "!",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "548": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "549": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "551": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "552": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%115#0"
      ]
    },
    "555": {
      "op": "btoi",
      "defined_out": [
        "one#0"
      ],
      "stack_out": [
        "one#0"
      ]
    },
    "556": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "one#0",
        "tmp%117#0"
      ],
      "stack_out": [
        "one#0",
        "tmp%117#0"
      ]
    },
    "559": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0"
      ]
    },
    "560": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "one#0",
        "tmp%119#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "tmp%119#0"
      ]
    },
    "563": {
      "op": "btoi",
      "defined_out": [
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0"
      ]
    },
    "564": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "one#0",
        "three#0",
        "tmp%121#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "tmp%121#0"
      ]
    },
    "567": {
      "op": "btoi",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0"
      ]
    },
    "568": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "four#0",
        "one#0",
        "three#0",
        "tmp%123#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "tmp%123#0"
      ]
    },
    "571": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0"
      ]
    },
    "572": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "three#0",
        "tmp%125#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "tmp%125#0"
      ]
    },
    "575": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0"
      ]
    },
    "576": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "six#0",
        "three#0",
        "tmp%127#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "tmp%127#0"
      ]
    },
    "579": {
      "op": "btoi",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0"
      ]
    },
    "580": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "tmp%129#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "tmp%129#0"
      ]
    },
    "583": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0"
      ]
    },
    "584": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "tmp%131#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "tmp%131#0"
      ]
    },
    "587": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0"
      ]
    },
    "588": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "three#0",
        "tmp%133#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "tmp%133#0"
      ]
    },
    "591": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0"
      ]
    },
    "592": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "eight#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "tmp%135#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "tmp%135#0"
      ]
    },
    "595": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0"
      ]
    },
    "596": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "tmp%137#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "tmp%137#0"
      ]
    },
    "599": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0"
      ]
    },
    "600": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "three#0",
        "tmp%139#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "tmp%139#0"
      ]
    },
    "603": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0"
      ]
    },
    "604": {
      "op": "txna ApplicationArgs 14",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%141#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "tmp%141#0"
      ]
    },
    "607": {
      "op": "btoi",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0"
      ]
    },
    "608": {
      "op": "txna ApplicationArgs 15",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%143#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "tmp%143#0"
      ]
    },
    "611": {
      "op": "extract 2 0",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "one#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "twelve#0",
        "two#0"
      ],
      "stack_out": [
        "one#0",
        "two#0",
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0"
      ]
    },
    "614": {
      "op": "uncover 14"
    },
    "616": {
      "op": "uncover 14",
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "one#0",
        "two#0"
      ]
    },
    "618": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "three#0",
        "tmp%0#2",
        "twelve#0"
      ],
      "stack_out": [
        "three#0",
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%0#2"
      ]
    },
    "619": {
      "op": "uncover 13",
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%0#2",
        "three#0"
      ]
    },
    "621": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "four#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%1#3",
        "twelve#0"
      ],
      "stack_out": [
        "four#0",
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%1#3"
      ]
    },
    "622": {
      "op": "uncover 12",
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%1#3",
        "four#0"
      ]
    },
    "624": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "five#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%2#1",
        "twelve#0"
      ],
      "stack_out": [
        "five#0",
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%2#1"
      ]
    },
    "625": {
      "op": "uncover 11",
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%2#1",
        "five#0"
      ]
    },
    "627": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "six#0",
        "ten#0",
        "thirteen#0",
        "tmp%3#0",
        "twelve#0"
      ],
      "stack_out": [
        "six#0",
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%3#0"
      ]
    },
    "628": {
      "op": "uncover 10",
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%3#0",
        "six#0"
      ]
    },
    "630": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "seven#0",
        "ten#0",
        "thirteen#0",
        "tmp%4#1",
        "twelve#0"
      ],
      "stack_out": [
        "seven#0",
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%4#1"
      ]
    },
    "631": {
      "op": "uncover 9",
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%4#1",
        "seven#0"
      ]
    },
    "633": {
      "op": "+",
      "defined_out": [
        "eight#0",
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "ten#0",
        "thirteen#0",
        "tmp%5#0",
        "twelve#0"
      ],
      "stack_out": [
        "eight#0",
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%5#0"
      ]
    },
    "634": {
      "op": "uncover 8",
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%5#0",
        "eight#0"
      ]
    },
    "636": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "nine#0",
        "ten#0",
        "thirteen#0",
        "tmp%6#2",
        "twelve#0"
      ],
      "stack_out": [
        "nine#0",
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%6#2"
      ]
    },
    "637": {
      "op": "uncover 7",
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%6#2",
        "nine#0"
      ]
    },
    "639": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "ten#0",
        "thirteen#0",
        "tmp%7#2",
        "twelve#0"
      ],
      "stack_out": [
        "ten#0",
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%7#2"
      ]
    },
    "640": {
      "op": "uncover 6",
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%7#2",
        "ten#0"
      ]
    },
    "642": {
      "op": "+",
      "defined_out": [
        "eleven#0",
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%8#2",
        "twelve#0"
      ],
      "stack_out": [
        "eleven#0",
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%8#2"
      ]
    },
    "643": {
      "op": "uncover 5",
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%8#2",
        "eleven#0"
      ]
    },
    "645": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%9#1",
        "twelve#0"
      ],
      "stack_out": [
        "twelve#0",
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%9#1"
      ]
    },
    "646": {
      "op": "uncover 4",
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%9#1",
        "twelve#0"
      ]
    },
    "648": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "thirteen#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "thirteen#0",
        "fourteen#0",
        "fifteen#0",
        "tmp%10#0"
      ]
    },
    "649": {
      "op": "uncover 3",
      "stack_out": [
        "fourteen#0",
        "fifteen#0",
        "tmp%10#0",
        "thirteen#0"
      ]
    },
    "651": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "fourteen#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "fourteen#0",
        "fifteen#0",
        "tmp%11#1"
      ]
    },
    "652": {
      "op": "uncover 2",
      "stack_out": [
        "fifteen#0",
        "tmp%11#1",
        "fourteen#0"
      ]
    },
    "654": {
      "op": "+",
      "defined_out": [
        "fifteen#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "fifteen#0",
        "tmp%12#0"
      ]
    },
    "655": {
      "op": "assert",
      "stack_out": [
        "fifteen#0"
      ]
    },
    "656": {
      "op": "dup",
      "defined_out": [
        "fifteen#0",
        "fifteen#0 (copy)"
      ],
      "stack_out": [
        "fifteen#0",
        "fifteen#0 (copy)"
      ]
    },
    "657": {
      "op": "len",
      "defined_out": [
        "fifteen#0",
        "length%0#0"
      ],
      "stack_out": [
        "fifteen#0",
        "length%0#0"
      ]
    },
    "658": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "fifteen#0"
      ],
      "stack_out": [
        "fifteen#0",
        "as_bytes%0#0"
      ]
    },
    "659": {
      "op": "extract 6 2",
      "defined_out": [
        "fifteen#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "fifteen#0",
        "length_uint16%0#0"
      ]
    },
    "662": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "fifteen#0"
      ]
    },
    "663": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "664": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "665": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "666": {
      "op": "concat",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "667": {
      "op": "log",
      "stack_out": []
    },
    "668": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "669": {
      "op": "return"
    },
    "670": {
      "block": "main_method_with_default_args_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "672": {
      "op": "!",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "673": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "674": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "676": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "677": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "680": {
      "op": "btoi",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "681": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0"
      ]
    },
    "683": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_from_storage#0",
        "tmp%87#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "tmp%87#0"
      ]
    },
    "686": {
      "op": "btoi",
      "defined_out": [
        "asset_from_storage#0",
        "tmp%88#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "tmp%88#0"
      ]
    },
    "687": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0"
      ]
    },
    "689": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%90#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "tmp%90#0"
      ]
    },
    "692": {
      "op": "btoi",
      "defined_out": [
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%91#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "tmp%91#0"
      ]
    },
    "693": {
      "op": "txnas Accounts",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0"
      ]
    },
    "695": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%93#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "tmp%93#0"
      ]
    },
    "698": {
      "op": "btoi",
      "defined_out": [
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%94#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "tmp%94#0"
      ]
    },
    "699": {
      "op": "txnas Accounts",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0"
      ]
    },
    "701": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%96#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "tmp%96#0"
      ]
    },
    "704": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%97#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "tmp%97#0"
      ]
    },
    "705": {
      "op": "txnas Applications",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0"
      ]
    },
    "707": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%99#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "tmp%99#0"
      ]
    },
    "710": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "tmp%100#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "tmp%100#0"
      ]
    },
    "711": {
      "op": "txnas Applications",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0"
      ]
    },
    "713": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0"
      ]
    },
    "716": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0"
      ]
    },
    "719": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0"
      ]
    },
    "722": {
      "op": "txna ApplicationArgs 10",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0"
      ]
    },
    "725": {
      "op": "txna ApplicationArgs 11",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0"
      ]
    },
    "728": {
      "op": "txna ApplicationArgs 12",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%107#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "tmp%107#0"
      ]
    },
    "731": {
      "op": "btoi",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0"
      ]
    },
    "732": {
      "op": "txna ApplicationArgs 13",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%109#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "tmp%109#0"
      ]
    },
    "735": {
      "op": "extract 2 0",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_storage#0",
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "738": {
      "op": "uncover 12",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_storage#0"
      ]
    },
    "740": {
      "op": "intc_2 // 123",
      "defined_out": [
        "123",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "asset_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_storage#0",
        "123"
      ]
    },
    "741": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%0#0"
      ]
    },
    "742": {
      "error": "wrong asset from storage",
      "op": "assert // wrong asset from storage",
      "stack_out": [
        "asset_from_function#0",
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "743": {
      "op": "uncover 11",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_function#0"
      ]
    },
    "745": {
      "op": "pushint 456 // 456",
      "defined_out": [
        "456",
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "asset_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "asset_from_function#0",
        "456"
      ]
    },
    "748": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%1#2"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%1#2"
      ]
    },
    "749": {
      "error": "wrong asset from function",
      "op": "assert // wrong asset from function",
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "750": {
      "op": "global CreatorAddress",
      "defined_out": [
        "account_from_function#0",
        "account_from_storage#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "account_from_storage#0",
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%2#0"
      ]
    },
    "752": {
      "op": "uncover 11",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%2#0",
        "account_from_storage#0"
      ]
    },
    "754": {
      "op": "==",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%3#1"
      ]
    },
    "755": {
      "error": "wrong account from storage",
      "op": "assert // wrong account from storage",
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "756": {
      "op": "global ZeroAddress",
      "defined_out": [
        "account_from_function#0",
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "account_from_function#0",
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%4#3"
      ]
    },
    "758": {
      "op": "uncover 10",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%4#3",
        "account_from_function#0"
      ]
    },
    "760": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "application_from_storage#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%5#1"
      ]
    },
    "761": {
      "error": "wrong account from function",
      "op": "assert // wrong account from function",
      "stack_out": [
        "application_from_storage#0",
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "762": {
      "op": "uncover 8",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_storage#0"
      ]
    },
    "764": {
      "op": "intc_2 // 123",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_storage#0",
        "123"
      ]
    },
    "765": {
      "op": "==",
      "defined_out": [
        "application_from_function#0",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%6#3"
      ],
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%6#3"
      ]
    },
    "766": {
      "error": "wrong application from storage",
      "op": "assert // wrong application from storage",
      "stack_out": [
        "application_from_function#0",
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "767": {
      "op": "uncover 7",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_function#0"
      ]
    },
    "769": {
      "op": "pushint 456 // 456",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "application_from_function#0",
        "456"
      ]
    },
    "772": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%7#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%7#3"
      ]
    },
    "773": {
      "error": "wrong application from function",
      "op": "assert // wrong application from function",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "774": {
      "op": "dig 6",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "bytes_from_storage#0 (copy)",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "776": {
      "error": "Index access is out of bounds",
      "op": "extract 0 1 // on error: Index access is out of bounds",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%0#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "779": {
      "op": "pushbytes 0x07",
      "defined_out": [
        "0x07",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%0#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%0#0",
        "0x07"
      ]
    },
    "782": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%8#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%8#3"
      ]
    },
    "783": {
      "error": "wrong 0th byte from storage",
      "op": "assert // wrong 0th byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "784": {
      "op": "dig 6",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0 (copy)"
      ]
    },
    "786": {
      "error": "Index access is out of bounds",
      "op": "extract 1 1 // on error: Index access is out of bounds",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%2#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "789": {
      "op": "pushbytes 0x08",
      "defined_out": [
        "0x08",
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%2#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%2#0",
        "0x08"
      ]
    },
    "792": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "bytes_from_storage#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%9#3"
      ],
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%9#3"
      ]
    },
    "793": {
      "error": "wrong 1st byte from storage",
      "op": "assert // wrong 1st byte from storage",
      "stack_out": [
        "bytes_from_storage#0",
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "794": {
      "op": "uncover 6",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "bytes_from_storage#0"
      ]
    },
    "796": {
      "error": "Index access is out of bounds",
      "op": "extract 2 1 // on error: Index access is out of bounds",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%4#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "799": {
      "op": "pushbytes 0x09",
      "defined_out": [
        "0x09",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "reinterpret_biguint%4#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "reinterpret_biguint%4#0",
        "0x09"
      ]
    },
    "802": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "int_from_storage#0",
        "str_from_const#0",
        "tmp%10#3"
      ],
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%10#3"
      ]
    },
    "803": {
      "error": "wrong 2nd byte from storage",
      "op": "assert // wrong 2nd byte from storage",
      "stack_out": [
        "int_from_storage#0",
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "804": {
      "op": "uncover 5",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_storage#0"
      ]
    },
    "806": {
      "op": "btoi",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%11#1"
      ]
    },
    "807": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%11#1"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%11#1",
        "2"
      ]
    },
    "808": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_function#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%12#3"
      ],
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%12#3"
      ]
    },
    "809": {
      "error": "wrong int from storage",
      "op": "assert // wrong int from storage",
      "stack_out": [
        "int_from_function#0",
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "810": {
      "op": "uncover 4",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_function#0"
      ]
    },
    "812": {
      "op": "btoi",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%13#1"
      ]
    },
    "813": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%13#1"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%13#1",
        "3"
      ]
    },
    "815": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%14#2"
      ],
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%14#2"
      ]
    },
    "816": {
      "error": "wrong int from function",
      "op": "assert // wrong int from function",
      "stack_out": [
        "int_from_const#0",
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "817": {
      "op": "uncover 3",
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_const#0"
      ]
    },
    "819": {
      "op": "pushbytes 0x0000007b",
      "defined_out": [
        "0x0000007b",
        "bytes_from_local#0",
        "int_from_const#0",
        "int_from_local#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "int_from_const#0",
        "0x0000007b"
      ]
    },
    "825": {
      "op": "b==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "str_from_const#0",
        "tmp%15#2"
      ],
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%15#2"
      ]
    },
    "826": {
      "op": "assert",
      "stack_out": [
        "str_from_const#0",
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "827": {
      "op": "uncover 2",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "str_from_const#0"
      ]
    },
    "829": {
      "op": "pushbytes 0x0003616263",
      "defined_out": [
        "0x0003616263",
        "bytes_from_local#0",
        "int_from_local#0",
        "str_from_const#0"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "str_from_const#0",
        "0x0003616263"
      ]
    },
    "836": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%16#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%16#2"
      ]
    },
    "837": {
      "op": "assert",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0"
      ]
    },
    "838": {
      "op": "txn Sender",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%17#2"
      ]
    },
    "840": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%17#2",
        "0"
      ]
    },
    "841": {
      "op": "bytec_2 // \"local_uint\"",
      "defined_out": [
        "\"local_uint\"",
        "0",
        "bytes_from_local#0",
        "int_from_local#0",
        "tmp%17#2"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "tmp%17#2",
        "0",
        "\"local_uint\""
      ]
    },
    "842": {
      "op": "app_local_get_ex",
      "defined_out": [
        "bytes_from_local#0",
        "int_from_local#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "843": {
      "error": "check self.local_uint exists for account",
      "op": "assert // check self.local_uint exists for account",
      "stack_out": [
        "int_from_local#0",
        "bytes_from_local#0",
        "maybe_value%0#0"
      ]
    },
    "844": {
      "op": "uncover 2",
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%0#0",
        "int_from_local#0"
      ]
    },
    "846": {
      "op": "==",
      "defined_out": [
        "bytes_from_local#0",
        "tmp%18#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%18#2"
      ]
    },
    "847": {
      "op": "assert",
      "stack_out": [
        "bytes_from_local#0"
      ]
    },
    "848": {
      "op": "txn Sender",
      "defined_out": [
        "bytes_from_local#0",
        "tmp%19#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%19#2"
      ]
    },
    "850": {
      "op": "intc_1 // 0",
      "stack_out": [
        "bytes_from_local#0",
        "tmp%19#2",
        "0"
      ]
    },
    "851": {
      "op": "bytec_3 // \"local_bytes\"",
      "defined_out": [
        "\"local_bytes\"",
        "0",
        "bytes_from_local#0",
        "tmp%19#2"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "tmp%19#2",
        "0",
        "\"local_bytes\""
      ]
    },
    "852": {
      "op": "app_local_get_ex",
      "defined_out": [
        "bytes_from_local#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "853": {
      "error": "check self.local_bytes exists for account",
      "op": "assert // check self.local_bytes exists for account",
      "stack_out": [
        "bytes_from_local#0",
        "maybe_value%1#0"
      ]
    },
    "854": {
      "op": "==",
      "defined_out": [
        "tmp%20#2"
      ],
      "stack_out": [
        "tmp%20#2"
      ]
    },
    "855": {
      "op": "assert",
      "stack_out": []
    },
    "856": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "857": {
      "op": "return"
    },
    "858": {
      "block": "main_get_an_int_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "860": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "861": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "862": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "864": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "865": {
      "op": "pushbytes 0x151f7c750000000000000003",
      "defined_out": [
        "0x151f7c750000000000000003"
      ],
      "stack_out": [
        "0x151f7c750000000000000003"
      ]
    },
    "879": {
      "op": "log",
      "stack_out": []
    },
    "880": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "881": {
      "op": "return"
    },
    "882": {
      "block": "main_get_application_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "884": {
      "op": "!",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "885": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "886": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "888": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "889": {
      "op": "bytec 4 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "891": {
      "op": "log",
      "stack_out": []
    },
    "892": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "893": {
      "op": "return"
    },
    "894": {
      "block": "main_get_asset_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "896": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "897": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "898": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "900": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "901": {
      "op": "bytec 4 // 0x151f7c7500000000000001c8",
      "defined_out": [
        "0x151f7c7500000000000001c8"
      ],
      "stack_out": [
        "0x151f7c7500000000000001c8"
      ]
    },
    "903": {
      "op": "log",
      "stack_out": []
    },
    "904": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "905": {
      "op": "return"
    },
    "906": {
      "block": "main_get_address_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "908": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "909": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "910": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "912": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "913": {
      "op": "pushbytes base32(CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA)",
      "defined_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ],
      "stack_out": [
        "CUPXY5IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
      ]
    },
    "951": {
      "op": "log",
      "stack_out": []
    },
    "952": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "953": {
      "op": "return"
    },
    "954": {
      "block": "main_compare_assets_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "956": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "957": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "958": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "960": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "961": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "964": {
      "op": "btoi",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "965": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_a#0"
      ],
      "stack_out": [
        "asset_a#0"
      ]
    },
    "967": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "asset_a#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "asset_a#0",
        "tmp%53#0"
      ]
    },
    "970": {
      "op": "btoi",
      "defined_out": [
        "asset_a#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "asset_a#0",
        "tmp%54#0"
      ]
    },
    "971": {
      "op": "txnas Assets",
      "defined_out": [
        "asset_a#0",
        "asset_b#0"
      ],
      "stack_out": [
        "asset_a#0",
        "asset_b#0"
      ]
    },
    "973": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "974": {
      "error": "asset a == b",
      "op": "assert // asset a == b",
      "stack_out": []
    },
    "975": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "976": {
      "op": "return"
    },
    "977": {
      "block": "main_with_transactions_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "979": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "980": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "981": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "983": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "984": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "987": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "988": {
      "op": "txnas Assets",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "990": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "an_int#0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0"
      ]
    },
    "993": {
      "op": "txn GroupIndex",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%44#0"
      ]
    },
    "995": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "an_int#0",
        "asset#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "tmp%44#0",
        "1"
      ]
    },
    "996": {
      "op": "-",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "997": {
      "op": "dup",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "pay#0",
        "pay#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "pay#0 (copy)"
      ]
    },
    "998": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0"
      ]
    },
    "1000": {
      "op": "intc_0 // pay",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type%0#0",
        "pay",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1001": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "asset#0",
        "gtxn_type_matches%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1002": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0"
      ]
    },
    "1003": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "1006": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0"
      ]
    },
    "1007": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "an_int#0",
        "another_int#0",
        "asset#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "0",
        "\"asa\""
      ]
    },
    "1008": {
      "op": "app_global_get_ex",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "pay#0"
      ],
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1009": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0"
      ]
    },
    "1010": {
      "op": "uncover 4",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "maybe_value%0#0",
        "asset#0"
      ]
    },
    "1012": {
      "op": "==",
      "defined_out": [
        "an_int#0",
        "another_int#0",
        "pay#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0",
        "tmp%0#0"
      ]
    },
    "1013": {
      "error": "is correct asset",
      "op": "assert // is correct asset",
      "stack_out": [
        "an_int#0",
        "pay#0",
        "another_int#0"
      ]
    },
    "1014": {
      "op": "uncover 2",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "an_int#0"
      ]
    },
    "1016": {
      "op": "btoi",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%1#3"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#3"
      ]
    },
    "1017": {
      "op": "intc_0 // 1",
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%1#3",
        "1"
      ]
    },
    "1018": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "pay#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "pay#0",
        "another_int#0",
        "tmp%2#4"
      ]
    },
    "1019": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": [
        "pay#0",
        "another_int#0"
      ]
    },
    "1020": {
      "op": "swap",
      "stack_out": [
        "another_int#0",
        "pay#0"
      ]
    },
    "1021": {
      "op": "gtxns Receiver",
      "defined_out": [
        "another_int#0",
        "tmp%3#4"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#4"
      ]
    },
    "1023": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "another_int#0",
        "tmp%3#4",
        "tmp%4#3"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%3#4",
        "tmp%4#3"
      ]
    },
    "1025": {
      "op": "==",
      "defined_out": [
        "another_int#0",
        "tmp%5#1"
      ],
      "stack_out": [
        "another_int#0",
        "tmp%5#1"
      ]
    },
    "1026": {
      "error": "is payment to app",
      "op": "assert // is payment to app",
      "stack_out": [
        "another_int#0"
      ]
    },
    "1027": {
      "op": "btoi",
      "defined_out": [
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2"
      ]
    },
    "1028": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "tmp%6#2"
      ],
      "stack_out": [
        "tmp%6#2",
        "2"
      ]
    },
    "1029": {
      "op": "==",
      "defined_out": [
        "tmp%7#3"
      ],
      "stack_out": [
        "tmp%7#3"
      ]
    },
    "1030": {
      "error": "is correct int",
      "op": "assert // is correct int",
      "stack_out": []
    },
    "1031": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1032": {
      "op": "return"
    },
    "1033": {
      "block": "main_opt_into_asset_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1035": {
      "op": "!",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "1036": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1037": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1039": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1040": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1043": {
      "op": "btoi",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1044": {
      "op": "txnas Assets",
      "defined_out": [
        "asset#0"
      ],
      "stack_out": [
        "asset#0"
      ]
    },
    "1046": {
      "op": "txn Sender"
    },
    "1048": {
      "op": "global CreatorAddress",
      "defined_out": [
        "asset#0",
        "tmp%0#3",
        "tmp%1#1"
      ],
      "stack_out": [
        "asset#0",
        "tmp%0#3",
        "tmp%1#1"
      ]
    },
    "1050": {
      "op": "==",
      "defined_out": [
        "asset#0",
        "tmp%2#4"
      ],
      "stack_out": [
        "asset#0",
        "tmp%2#4"
      ]
    },
    "1051": {
      "error": "Only creator can opt in to ASA",
      "op": "assert // Only creator can opt in to ASA",
      "stack_out": [
        "asset#0"
      ]
    },
    "1052": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "1053": {
      "op": "bytec_1 // \"asa\"",
      "defined_out": [
        "\"asa\"",
        "0",
        "asset#0"
      ],
      "stack_out": [
        "asset#0",
        "0",
        "\"asa\""
      ]
    },
    "1054": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "asset#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1055": {
      "error": "check self.asa exists",
      "op": "assert // check self.asa exists",
      "stack_out": [
        "asset#0",
        "maybe_value%0#0"
      ]
    },
    "1056": {
      "op": "!",
      "defined_out": [
        "asset#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "asset#0",
        "tmp%3#1"
      ]
    },
    "1057": {
      "error": "ASA already opted in",
      "op": "assert // ASA already opted in",
      "stack_out": [
        "asset#0"
      ]
    },
    "1058": {
      "op": "bytec_1 // \"asa\"",
      "stack_out": [
        "asset#0",
        "\"asa\""
      ]
    },
    "1059": {
      "op": "dig 1",
      "defined_out": [
        "\"asa\"",
        "asset#0",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0",
        "\"asa\"",
        "asset#0 (copy)"
      ]
    },
    "1061": {
      "op": "app_global_put",
      "stack_out": [
        "asset#0"
      ]
    },
    "1062": {
      "op": "itxn_begin"
    },
    "1063": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "asset#0",
        "axfer"
      ],
      "stack_out": [
        "asset#0",
        "axfer"
      ]
    },
    "1065": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "asset#0"
      ]
    },
    "1067": {
      "op": "intc_1 // 0",
      "stack_out": [
        "asset#0",
        "0"
      ]
    },
    "1068": {
      "op": "itxn_field Fee",
      "stack_out": [
        "asset#0"
      ]
    },
    "1070": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "asset#0",
        "tmp%4#3"
      ],
      "stack_out": [
        "asset#0",
        "tmp%4#3"
      ]
    },
    "1072": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "asset#0"
      ]
    },
    "1074": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1076": {
      "op": "itxn_submit"
    },
    "1077": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1078": {
      "op": "return"
    },
    "1079": {
      "block": "main_mixed_oca_route@8",
      "stack_in": [],
      "op": "intc_0 // 1"
    },
    "1080": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%21#0"
      ],
      "stack_out": [
        "1",
        "tmp%21#0"
      ]
    },
    "1082": {
      "op": "shl",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "1083": {
      "op": "pushint 37 // 37",
      "defined_out": [
        "37",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "37"
      ]
    },
    "1085": {
      "op": "&",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "1086": {
      "error": "OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "op": "assert // OnCompletion is not one of NoOp, CloseOut, DeleteApplication",
      "stack_out": []
    },
    "1087": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "1089": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1090": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1093": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "1094": {
      "op": "intc_0 // 1",
      "stack_out": [
        "tmp%0#2",
        "1"
      ]
    },
    "1095": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1096": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1097": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1100": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1101": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#1"
      ]
    },
    "1102": {
      "op": "concat",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1103": {
      "op": "log",
      "stack_out": []
    },
    "1104": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1105": {
      "op": "return"
    },
    "1106": {
      "block": "main_all_the_things_route@7",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1109": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "1110": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "1"
      ]
    },
    "1111": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1112": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1113": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1116": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1117": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#1"
      ]
    },
    "1118": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1119": {
      "op": "log",
      "stack_out": []
    },
    "1120": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1121": {
      "op": "return"
    },
    "1122": {
      "block": "main_opt_in_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1124": {
      "op": "intc_0 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "OptIn"
      ]
    },
    "1125": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1126": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "1127": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1129": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1130": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1133": {
      "op": "btoi",
      "defined_out": [
        "uint#0"
      ],
      "stack_out": [
        "uint#0"
      ]
    },
    "1134": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%16#0",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "tmp%16#0"
      ]
    },
    "1137": {
      "op": "extract 2 0",
      "defined_out": [
        "bites#0",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0"
      ]
    },
    "1140": {
      "op": "txn Sender",
      "defined_out": [
        "bites#0",
        "tmp%0#3",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0",
        "tmp%0#3"
      ]
    },
    "1142": {
      "op": "bytec_2 // \"local_uint\"",
      "defined_out": [
        "\"local_uint\"",
        "bites#0",
        "tmp%0#3",
        "uint#0"
      ],
      "stack_out": [
        "uint#0",
        "bites#0",
        "tmp%0#3",
        "\"local_uint\""
      ]
    },
    "1143": {
      "op": "uncover 3",
      "stack_out": [
        "bites#0",
        "tmp%0#3",
        "\"local_uint\"",
        "uint#0"
      ]
    },
    "1145": {
      "op": "app_local_put",
      "stack_out": [
        "bites#0"
      ]
    },
    "1146": {
      "op": "txn Sender",
      "defined_out": [
        "bites#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "bites#0",
        "tmp%1#1"
      ]
    },
    "1148": {
      "op": "bytec_3 // \"local_bytes\"",
      "defined_out": [
        "\"local_bytes\"",
        "bites#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "bites#0",
        "tmp%1#1",
        "\"local_bytes\""
      ]
    },
    "1149": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#1",
        "\"local_bytes\"",
        "bites#0"
      ]
    },
    "1151": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1152": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1153": {
      "op": "return"
    },
    "1154": {
      "block": "main_noop_with_uint64_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1156": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1157": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1158": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1160": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1161": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "a#0"
      ],
      "stack_out": [
        "a#0"
      ]
    },
    "1164": {
      "op": "btoi",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "1165": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2",
        "1"
      ]
    },
    "1166": {
      "op": "+",
      "defined_out": [
        "result#0"
      ],
      "stack_out": [
        "result#0"
      ]
    },
    "1167": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1168": {
      "op": "extract 7 1",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "1171": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1",
        "0x151f7c75"
      ]
    },
    "1172": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%1#1"
      ]
    },
    "1173": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1174": {
      "op": "log",
      "stack_out": []
    },
    "1175": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1176": {
      "op": "return"
    },
    "1177": {
      "block": "main_bare_routing@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%203#0"
      ],
      "stack_out": [
        "tmp%203#0"
      ]
    },
    "1179": {
      "op": "switch main_bare_abi_config@21 main_bare_abi_config@21 main_bare_abi_config@21 main_after_if_else@22 main_bare_abi_config@21 main_bare_abi_config@21",
      "stack_out": []
    },
    "1193": {
      "op": "b main_after_if_else@22"
    },
    "1196": {
      "block": "main_bare_abi_config@21",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%204#0"
      ],
      "stack_out": [
        "tmp%204#0"
      ]
    },
    "1198": {
      "op": "!",
      "defined_out": [
        "tmp%205#0"
      ],
      "stack_out": [
        "tmp%205#0"
      ]
    },
    "1199": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1200": {
      "op": "pushbytes \"Hello World\"",
      "defined_out": [
        "\"Hello World\""
      ],
      "stack_out": [
        "\"Hello World\""
      ]
    },
    "1213": {
      "op": "log",
      "stack_out": []
    },
    "1214": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1215": {
      "op": "return"
    }
  }
}