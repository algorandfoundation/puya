#pragma version 10
#pragma typetrack false

// test_cases.abi_routing.custom_approval.CustomApproval.approval_program() -> uint64:
main:
    pushbytes ""
    dup
    txn ApplicationID
    bnz main_after_if_else@2
    txn ApplicationID
    !
    assert // nonsense assert just to generate an init method

main_after_if_else@2:
    txn NumAppArgs
    pushint 2 // 2
    ==
    bz main_after_if_else@5
    txna ApplicationArgs 1
    pushint 42 // 42
    itob
    ==
    bz main_after_if_else@5
    pushbytes "\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89\xf0\x9f\x8e\x89"
    log

main_after_if_else@5:
    pushint 0 // 0
    bury 2
    txn NumAppArgs
    bz main___algopy_default_create@12
    pushbytes 0x03b5c0af // method "add_one(uint64)uint64"
    txna ApplicationArgs 0
    match main_add_one_route@10

main_switch_case_next@11:
    dig 1
    bury 1

main_after_if_else@13:
    dup
    bnz main_after_if_else@7
    pushbytes "this will never be seen unless you're running in simulation mode anyway so I can say whatever I want here"
    log

main_after_if_else@7:
    return

main_add_one_route@10:
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    txna ApplicationArgs 1
    btoi
    pushint 1 // 1
    +
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    bury 2
    b main_switch_case_next@11

main___algopy_default_create@12:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    assert // OnCompletion must be NoOp && can only call when creating
    pushint 1 // 1
    bury 1
    b main_after_if_else@13
