#pragma version 8

// test_cases.nested_loops.contract.Nested.approval_program() -> uint64:
main:
        byte ""
        dupn 7

main_block@0:
        int 0
        int 0

main_for_header@2:
        dup
        int 2
        <
        bz main_after_for@36

main_for_body@3:
        int 0
        bury 10

main_for_header@5:
        dig 9
        int 2
        <
        bz main_after_for@33

main_for_body@6:
        int 0
        bury 9

main_for_header@8:
        dig 8
        int 2
        <
        bz main_after_for@30

main_for_body@9:
        int 0
        bury 8

main_for_header@11:
        dig 7
        int 2
        <
        bz main_after_for@27

main_for_body@12:
        int 0
        bury 7

main_for_header@14:
        dig 6
        int 2
        <
        bz main_after_for@24

main_for_body@15:
        int 0
        bury 6

main_for_header@17:
        dig 5
        int 2
        <
        bz main_after_for@21

main_for_body@18:
        dup
        dig 10
        +
        dig 9
        +
        dig 8
        +
        dig 7
        +
        dig 6
        dup
        cover 2
        +
        dig 3
        +
        bury 3
        int 1
        +
        bury 6
        b main_for_header@17

main_after_for@21:
        dig 6
        int 1
        +
        bury 7
        b main_for_header@14

main_after_for@24:
        dig 7
        int 1
        +
        bury 8
        b main_for_header@11

main_after_for@27:
        dig 8
        int 1
        +
        bury 9
        b main_for_header@8

main_after_for@30:
        dig 9
        int 1
        +
        bury 10
        b main_for_header@5

main_after_for@33:
        dup
        dup
        int 2
        +
        pop
        int 1
        +
        bury 1
        b main_for_header@2

main_after_for@36:
        dig 1
        itob
        log
        int 0
        bury 3
        int 0
        int 0
        swap
        bury 5
        bury 5

main_for_header@38:
        dig 3
        int 10
        <
        bz main_after_for@42

main_for_body@39:
        dig 3
        dup
        dig 6
        dup
        cover 3
        *
        dig 5
        +
        bury 5
        int 1
        +
        swap
        int 1
        +
        swap
        bury 5
        bury 5
        b main_for_header@38

main_after_for@42:
        dig 2
        itob
        log
        dig 1
        return

