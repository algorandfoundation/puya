// Op                                                                                // Op Description                                               Stack (out)                                                                                                          X stack       Source code                                                                         Source line

#pragma version 10

// test_cases.boolean_binary_ops.contract.BooleanBinaryOps.approval_program() -> uint64:
main_block@0:
    int 1                                                                            //                                                              1                                                                                                                                  True                                                                                boolean_binary_ops/contract.py:7
    int 0                                                                            //                                                              1,0                                                                                                                                False                                                                               boolean_binary_ops/contract.py:7
    callsub test_boolean_binary_ops                                                  //                                                                                                                                                                                                 test_boolean_binary_ops(true=True, false=False)                                     boolean_binary_ops/contract.py:7
    callsub test_boolean_shortcircuit_binary_ops                                     //                                                                                                                                                                                                 test_boolean_shortcircuit_binary_ops()                                              boolean_binary_ops/contract.py:8
    callsub test_union_boolean_binary_ops                                            //                                                                                                                                                                                                 test_union_boolean_binary_ops()                                                     boolean_binary_ops/contract.py:10
    callsub test_literal_boolean_binary_ops                                          //                                                                                                                                                                                                 test_literal_boolean_binary_ops()                                                   boolean_binary_ops/contract.py:11
    int 1                                                                            //                                                              1                                                                                                                                  True                                                                                boolean_binary_ops/contract.py:12
    int 0                                                                            //                                                              1,0                                                                                                                                False                                                                               boolean_binary_ops/contract.py:12
    callsub test_literal_conditionals                                                //                                                                                                                                                                                                 test_literal_conditionals(true=True, false=False)                                   boolean_binary_ops/contract.py:12
    int 1                                                                            //                                                              1                                                                                                                                  True                                                                                boolean_binary_ops/contract.py:13
    return                                                                           //                                                                                                                                                                                                 return True                                                                         boolean_binary_ops/contract.py:13


// test_cases.boolean_binary_ops.contract.test_boolean_binary_ops(true: uint64, false: uint64) -> void:
test_boolean_binary_ops:
    proto 2 0                                                                        //                                                              (洧도) true#0,false#0 |                                                                                                               @subroutine\ndef test_boolean_binary_ops(*, true: bool, false: bool) -> None:       boolean_binary_ops/contract.py:20-21

test_boolean_binary_ops_block@0:
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0                                                                                                        true and false                                                                      boolean_binary_ops/contract.py:22
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | true#0,false#0                                                                                                true and false                                                                      boolean_binary_ops/contract.py:22
    &&                                                                               //                                                              (洧도) true#0,false#0 | {&&}                                                                                                          true and false                                                                      boolean_binary_ops/contract.py:22
                                                                                     // virtual: store tmp%0#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%0#0                                                                                                       true and false                                                                      boolean_binary_ops/contract.py:22
                                                                                     // virtual: load tmp%0#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%0#0                                                                                                       not (true and false)                                                                boolean_binary_ops/contract.py:22
    !                                                                                //                                                              (洧도) true#0,false#0 | {!}                                                                                                           not (true and false)                                                                boolean_binary_ops/contract.py:22
                                                                                     // virtual: store tmp%1#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%1#0                                                                                                       not (true and false)                                                                boolean_binary_ops/contract.py:22
                                                                                     // virtual: load tmp%1#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%1#0                                                                                                       assert not (true and false)                                                         boolean_binary_ops/contract.py:22
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert not (true and false)                                                         boolean_binary_ops/contract.py:22
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0                                                                                                       false and true                                                                      boolean_binary_ops/contract.py:23
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | false#0,true#0                                                                                                false and true                                                                      boolean_binary_ops/contract.py:23
    &&                                                                               //                                                              (洧도) true#0,false#0 | {&&}                                                                                                          false and true                                                                      boolean_binary_ops/contract.py:23
                                                                                     // virtual: store tmp%2#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%2#0                                                                                                       false and true                                                                      boolean_binary_ops/contract.py:23
                                                                                     // virtual: load tmp%2#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%2#0                                                                                                       not (false and true)                                                                boolean_binary_ops/contract.py:23
    !                                                                                //                                                              (洧도) true#0,false#0 | {!}                                                                                                           not (false and true)                                                                boolean_binary_ops/contract.py:23
                                                                                     // virtual: store tmp%3#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%3#0                                                                                                       not (false and true)                                                                boolean_binary_ops/contract.py:23
                                                                                     // virtual: load tmp%3#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%3#0                                                                                                       assert not (false and true)                                                         boolean_binary_ops/contract.py:23
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert not (false and true)                                                         boolean_binary_ops/contract.py:23
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0                                                                                                        true and true                                                                       boolean_binary_ops/contract.py:24
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0,true#0                                                                                                 true and true                                                                       boolean_binary_ops/contract.py:24
    &&                                                                               //                                                              (洧도) true#0,false#0 | {&&}                                                                                                          true and true                                                                       boolean_binary_ops/contract.py:24
                                                                                     // virtual: store tmp%4#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%4#0                                                                                                       true and true                                                                       boolean_binary_ops/contract.py:24
                                                                                     // virtual: load tmp%4#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%4#0                                                                                                       assert true and true                                                                boolean_binary_ops/contract.py:24
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert true and true                                                                boolean_binary_ops/contract.py:24
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0                                                                                                       false and false                                                                     boolean_binary_ops/contract.py:25
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0,false#0                                                                                               false and false                                                                     boolean_binary_ops/contract.py:25
    &&                                                                               //                                                              (洧도) true#0,false#0 | {&&}                                                                                                          false and false                                                                     boolean_binary_ops/contract.py:25
                                                                                     // virtual: store tmp%5#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%5#0                                                                                                       false and false                                                                     boolean_binary_ops/contract.py:25
                                                                                     // virtual: load tmp%5#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%5#0                                                                                                       not (false and false)                                                               boolean_binary_ops/contract.py:25
    !                                                                                //                                                              (洧도) true#0,false#0 | {!}                                                                                                           not (false and false)                                                               boolean_binary_ops/contract.py:25
                                                                                     // virtual: store tmp%6#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%6#0                                                                                                       not (false and false)                                                               boolean_binary_ops/contract.py:25
                                                                                     // virtual: load tmp%6#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%6#0                                                                                                       assert not (false and false)                                                        boolean_binary_ops/contract.py:25
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert not (false and false)                                                        boolean_binary_ops/contract.py:25
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0                                                                                                        true or false                                                                       boolean_binary_ops/contract.py:27
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | true#0,false#0                                                                                                true or false                                                                       boolean_binary_ops/contract.py:27
    ||                                                                               //                                                              (洧도) true#0,false#0 | {||}                                                                                                          true or false                                                                       boolean_binary_ops/contract.py:27
                                                                                     // virtual: store tmp%7#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%7#0                                                                                                       true or false                                                                       boolean_binary_ops/contract.py:27
                                                                                     // virtual: load tmp%7#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%7#0                                                                                                       assert true or false                                                                boolean_binary_ops/contract.py:27
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert true or false                                                                boolean_binary_ops/contract.py:27
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0                                                                                                       false or true                                                                       boolean_binary_ops/contract.py:28
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | false#0,true#0                                                                                                false or true                                                                       boolean_binary_ops/contract.py:28
    ||                                                                               //                                                              (洧도) true#0,false#0 | {||}                                                                                                          false or true                                                                       boolean_binary_ops/contract.py:28
                                                                                     // virtual: store tmp%8#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%8#0                                                                                                       false or true                                                                       boolean_binary_ops/contract.py:28
                                                                                     // virtual: load tmp%8#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%8#0                                                                                                       assert false or true                                                                boolean_binary_ops/contract.py:28
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert false or true                                                                boolean_binary_ops/contract.py:28
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0                                                                                                        true or true                                                                        boolean_binary_ops/contract.py:29
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | true#0,true#0                                                                                                 true or true                                                                        boolean_binary_ops/contract.py:29
    ||                                                                               //                                                              (洧도) true#0,false#0 | {||}                                                                                                          true or true                                                                        boolean_binary_ops/contract.py:29
                                                                                     // virtual: store tmp%9#0 to l-stack (no copy)                  (洧도) true#0,false#0 | tmp%9#0                                                                                                       true or true                                                                        boolean_binary_ops/contract.py:29
                                                                                     // virtual: load tmp%9#0 from l-stack (no copy)                 (洧도) true#0,false#0 | tmp%9#0                                                                                                       assert true or true                                                                 boolean_binary_ops/contract.py:29
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert true or true                                                                 boolean_binary_ops/contract.py:29
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0                                                                                                       false or false                                                                      boolean_binary_ops/contract.py:30
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | false#0,false#0                                                                                               false or false                                                                      boolean_binary_ops/contract.py:30
    ||                                                                               //                                                              (洧도) true#0,false#0 | {||}                                                                                                          false or false                                                                      boolean_binary_ops/contract.py:30
                                                                                     // virtual: store tmp%10#0 to l-stack (no copy)                 (洧도) true#0,false#0 | tmp%10#0                                                                                                      false or false                                                                      boolean_binary_ops/contract.py:30
                                                                                     // virtual: load tmp%10#0 from l-stack (no copy)                (洧도) true#0,false#0 | tmp%10#0                                                                                                      not (false or false)                                                                boolean_binary_ops/contract.py:30
    !                                                                                //                                                              (洧도) true#0,false#0 | {!}                                                                                                           not (false or false)                                                                boolean_binary_ops/contract.py:30
                                                                                     // virtual: store tmp%11#0 to l-stack (no copy)                 (洧도) true#0,false#0 | tmp%11#0                                                                                                      not (false or false)                                                                boolean_binary_ops/contract.py:30
                                                                                     // virtual: load tmp%11#0 from l-stack (no copy)                (洧도) true#0,false#0 | tmp%11#0                                                                                                      assert not (false or false)                                                         boolean_binary_ops/contract.py:30
    assert                                                                           //                                                              (洧도) true#0,false#0 |                                                                                                               assert not (false or false)                                                         boolean_binary_ops/contract.py:30
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.test_boolean_shortcircuit_binary_ops() -> void:
test_boolean_shortcircuit_binary_ops:
    proto 0 0                                                                        //                                                                                                                                                                                                 @subroutine\ndef test_boolean_shortcircuit_binary_ops() -> None:                    boolean_binary_ops/contract.py:38-39
    int 0
    dup
    byte ""
    dup                                                                              // allocate 4 to stack                                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0 |

test_boolean_shortcircuit_binary_ops_block@0:
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0 | 0
                                                                                     // virtual: store loop_counter%0#0 to f-stack                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0 |
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0 | 1                                                                 True                                                                                boolean_binary_ops/contract.py:40
                                                                                     // virtual: store lhs#0 to f-stack                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             lhs                                                                                 boolean_binary_ops/contract.py:40
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@1      //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_for_body@1:
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
    frame_bury 2                                                                     // store loop_counter%1#0 to f-stack                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1                                                           True                                                                                boolean_binary_ops/contract.py:41
    frame_bury 3                                                                     // store rhs#0 to f-stack                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             rhs                                                                                 boolean_binary_ops/contract.py:41
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@2      //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_for_body@2:
    frame_dig 5                                                                      // load lhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0                                                       bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:42
    dup                                                                              // store lhs#0 to l-stack (copy)                                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,lhs#0                                                 bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:42
    callsub bool_to_bytes                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{bool_to_bytes}                                       bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:42
                                                                                     // virtual: store tmp%0#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%0#0                                               bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:42
    byte 0x5f                                                                        //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%0#0,0x5f                                          b"_"                                                                                boolean_binary_ops/contract.py:42
    uncover 1                                                                        // load tmp%0#0 from l-stack (no copy)                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x5f,tmp%0#0                                          b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:42
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:42
                                                                                     // virtual: store tmp%1#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0                                               b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:42
                                                                                     // virtual: load tmp%1#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0                                               b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:42
    byte 0x5f616e645f                                                                //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0,0x5f616e645f                                  b"_and_"                                                                            boolean_binary_ops/contract.py:42
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:42
                                                                                     // virtual: store tmp%2#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0                                               b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:42
    frame_dig 3                                                                      // load rhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,rhs#0                                         bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:42
    callsub bool_to_bytes                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,{bool_to_bytes}                               bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:42
                                                                                     // virtual: store tmp%3#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,tmp%3#0                                       bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:42
                                                                                     // virtual: load tmp%2#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%3#0,tmp%2#0                                       and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:42
                                                                                     // virtual: load tmp%3#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,tmp%3#0                                       and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:42
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                           boolean_binary_ops/contract.py:42
    dup                                                                              // store and_msg#0 to l-stack (copy)                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0,and_msg#0                                   and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:42
    frame_bury 0                                                                     // store and_msg#0 to f-stack                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0                                             and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:42
    byte 0x6c6873                                                                    //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0,0x6c6873                                    b"lhs"                                                                              boolean_binary_ops/contract.py:43
    uncover 1                                                                        // load and_msg#0 from l-stack (no copy)                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x6c6873,and_msg#0                                    b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:43
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:43
                                                                                     // virtual: store tmp%4#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%4#0                                               b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:43
                                                                                     // virtual: load lhs#0 from l-stack (no copy)                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%4#0,lhs#0                                               log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:43
                                                                                     // virtual: load tmp%4#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%4#0                                               log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:43
    callsub log_and_return                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                            log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:43
                                                                                     // virtual: store tmp%5#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%5#0                                                     log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:43
                                                                                     // virtual: load tmp%5#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%5#0                                                     log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45
    bz test_boolean_shortcircuit_binary_ops_bool_false@5                             //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_and_contd@3     //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45

test_boolean_shortcircuit_binary_ops_and_contd@3:
    byte 0x726873                                                                    //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873                                                    b"rhs"                                                                              boolean_binary_ops/contract.py:44
    frame_dig 0                                                                      // load and_msg#0 from f-stack                                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873,and_msg#0                                          b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:44
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {concat}                                                    b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:44
                                                                                     // virtual: store tmp%6#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%6#0                                                     b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:44
    frame_dig 3                                                                      // load rhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%6#0,rhs#0                                               log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:43-45
    uncover 1                                                                        // load tmp%6#0 from l-stack (no copy)                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,tmp%6#0                                               log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:43-45
    callsub log_and_return                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                            log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:43-45
                                                                                     // virtual: store tmp%7#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%7#0                                                     log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:43-45
                                                                                     // virtual: load tmp%7#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%7#0                                                     log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45
    bz test_boolean_shortcircuit_binary_ops_bool_false@5                             //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@4     //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:43-45

test_boolean_shortcircuit_binary_ops_bool_true@4:
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
                                                                                     // virtual: store and_result%0#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
                                                                                     // virtual: load and_result%0#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
                                                                                     // virtual: store and_result#0 to x-stack                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |
    b test_boolean_shortcircuit_binary_ops_bool_merge@6                              //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |                            and_result#0

test_boolean_shortcircuit_binary_ops_bool_false@5:
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
                                                                                     // virtual: store and_result%0#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
                                                                                     // virtual: load and_result%0#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
                                                                                     // virtual: store and_result#0 to x-stack                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@6    //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |                            and_result#0

test_boolean_shortcircuit_binary_ops_bool_merge@6:
    frame_dig 5                                                                      // load lhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0                      and_result#0  lhs and rhs                                                                         boolean_binary_ops/contract.py:46
    dup                                                                              // store lhs#0 to l-stack (copy)                                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0,lhs#0                              lhs and rhs                                                                         boolean_binary_ops/contract.py:46
    frame_dig 3                                                                      // load rhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0,lhs#0,rhs#0                        lhs and rhs                                                                         boolean_binary_ops/contract.py:46
    dup
    cover 3                                                                          // store rhs#0 to l-stack (copy)                                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,lhs#0,rhs#0                  lhs and rhs                                                                         boolean_binary_ops/contract.py:46
    &&                                                                               //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,{&&}                         lhs and rhs                                                                         boolean_binary_ops/contract.py:46
                                                                                     // virtual: store tmp%8#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,tmp%8#0                      lhs and rhs                                                                         boolean_binary_ops/contract.py:46
    uncover 3                                                                        // load and_result#0 from x-stack                               (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%8#0,and_result#0                            and_result == (lhs and rhs                                                          boolean_binary_ops/contract.py:46
    uncover 1                                                                        // load tmp%8#0 from l-stack (no copy)                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,and_result#0,tmp%8#0                            and_result == (lhs and rhs                                                          boolean_binary_ops/contract.py:46
    ==                                                                               //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{==}                                            and_result == (lhs and rhs                                                          boolean_binary_ops/contract.py:46
                                                                                     // virtual: store tmp%9#0 to l-stack (no copy)                  (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%9#0                                         and_result == (lhs and rhs                                                          boolean_binary_ops/contract.py:46
                                                                                     // virtual: load tmp%9#0 from l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%9#0                                         assert and_result == (lhs and rhs)                                                  boolean_binary_ops/contract.py:46
    assert                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0                                                 assert and_result == (lhs and rhs)                                                  boolean_binary_ops/contract.py:46
    dup                                                                              // load lhs#0 from l-stack (copy)                               (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,lhs#0                                           bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:47
    callsub bool_to_bytes                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{bool_to_bytes}                                 bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:47
                                                                                     // virtual: store tmp%10#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%10#0                                        bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:47
    byte 0x5f                                                                        //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%10#0,0x5f                                   b"_"                                                                                boolean_binary_ops/contract.py:47
    uncover 1                                                                        // load tmp%10#0 from l-stack (no copy)                         (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,0x5f,tmp%10#0                                   b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:47
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{concat}                                        b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:47
                                                                                     // virtual: store tmp%11#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0                                        b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:47
                                                                                     // virtual: load tmp%11#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0                                        b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:47
    byte 0x5f6f725f                                                                  //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0,0x5f6f725f                             b"_or_"                                                                             boolean_binary_ops/contract.py:47
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{concat}                                        b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:47
                                                                                     // virtual: store tmp%12#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%12#0                                        b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:47
    uncover 2                                                                        // load rhs#0 from l-stack (no copy)                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,rhs#0                                        bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:47
    callsub bool_to_bytes                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,{bool_to_bytes}                              bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:47
                                                                                     // virtual: store tmp%13#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,tmp%13#0                                     bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:47
                                                                                     // virtual: load tmp%12#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%13#0,tmp%12#0                                     or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:47
                                                                                     // virtual: load tmp%13#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,tmp%13#0                                     or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:47
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                            boolean_binary_ops/contract.py:47
    dup                                                                              // store or_msg#0 to l-stack (copy)                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0,or_msg#0                                     or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:47
    frame_bury 1                                                                     // store or_msg#0 to f-stack                                    (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0                                              or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:47
    byte 0x6c6873                                                                    //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0,0x6c6873                                     b"lhs"                                                                              boolean_binary_ops/contract.py:48
    uncover 1                                                                        // load or_msg#0 from l-stack (no copy)                         (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x6c6873,or_msg#0                                     b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:48
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                              b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:48
                                                                                     // virtual: store tmp%14#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%14#0                                              b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:48
                                                                                     // virtual: load lhs#0 from l-stack (no copy)                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%14#0,lhs#0                                              log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:48
                                                                                     // virtual: load tmp%14#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%14#0                                              log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:48
    callsub log_and_return                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                            log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:48
                                                                                     // virtual: store tmp%15#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%15#0                                                    log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:48
                                                                                     // virtual: load tmp%15#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%15#0                                                    log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50
    bnz test_boolean_shortcircuit_binary_ops_bool_true@8                             //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_or_contd@7      //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50

test_boolean_shortcircuit_binary_ops_or_contd@7:
    byte 0x726873                                                                    //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873                                                    b"rhs"                                                                              boolean_binary_ops/contract.py:49
    frame_dig 1                                                                      // load or_msg#0 from f-stack                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873,or_msg#0                                           b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:49
    concat                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {concat}                                                    b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:49
                                                                                     // virtual: store tmp%16#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%16#0                                                    b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:49
    frame_dig 3                                                                      // load rhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%16#0,rhs#0                                              log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:48-50
    uncover 1                                                                        // load tmp%16#0 from l-stack (no copy)                         (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,tmp%16#0                                              log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:48-50
    callsub log_and_return                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                            log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:48-50
                                                                                     // virtual: store tmp%17#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%17#0                                                    log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:48-50
                                                                                     // virtual: load tmp%17#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%17#0                                                    log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50
    bz test_boolean_shortcircuit_binary_ops_bool_false@9                             //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@8     //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:48-50

test_boolean_shortcircuit_binary_ops_bool_true@8:
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
                                                                                     // virtual: store or_result%0#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
                                                                                     // virtual: load or_result%0#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
                                                                                     // virtual: store or_result#0 to x-stack                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |
    b test_boolean_shortcircuit_binary_ops_bool_merge@10                             //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |                             or_result#0

test_boolean_shortcircuit_binary_ops_bool_false@9:
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
                                                                                     // virtual: store or_result%0#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
                                                                                     // virtual: load or_result%0#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
                                                                                     // virtual: store or_result#0 to x-stack                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@10   //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |                             or_result#0

test_boolean_shortcircuit_binary_ops_bool_merge@10:
    frame_dig 5                                                                      // load lhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | lhs#0                       or_result#0   lhs or rhs                                                                          boolean_binary_ops/contract.py:51
    frame_dig 3                                                                      // load rhs#0 from f-stack                                      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | lhs#0,rhs#0                               lhs or rhs                                                                          boolean_binary_ops/contract.py:51
    ||                                                                               //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | {||}                                      lhs or rhs                                                                          boolean_binary_ops/contract.py:51
                                                                                     // virtual: store tmp%18#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | tmp%18#0                                  lhs or rhs                                                                          boolean_binary_ops/contract.py:51
                                                                                     // virtual: load or_result#0 from x-stack                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%18#0,or_result#0                                        or_result == (lhs or rhs                                                            boolean_binary_ops/contract.py:51
                                                                                     // virtual: load tmp%18#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result#0,tmp%18#0                                        or_result == (lhs or rhs                                                            boolean_binary_ops/contract.py:51
    ==                                                                               //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {==}                                                        or_result == (lhs or rhs                                                            boolean_binary_ops/contract.py:51
                                                                                     // virtual: store tmp%19#0 to l-stack (no copy)                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%19#0                                                    or_result == (lhs or rhs                                                            boolean_binary_ops/contract.py:51
                                                                                     // virtual: load tmp%19#0 from l-stack (no copy)                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%19#0                                                    assert or_result == (lhs or rhs)                                                    boolean_binary_ops/contract.py:51
    assert                                                                           //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             assert or_result == (lhs or rhs)                                                    boolean_binary_ops/contract.py:51
    frame_dig 2                                                                      // load loop_counter%1#0 from f-stack                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | loop_counter%1#0                                            for rhs in (True, False):                                                           boolean_binary_ops/contract.py:41
    bnz test_boolean_shortcircuit_binary_ops_after_for@13                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             for rhs in (True, False):                                                           boolean_binary_ops/contract.py:41
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_1@12 //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             for rhs in (True, False):                                                           boolean_binary_ops/contract.py:41

test_boolean_shortcircuit_binary_ops_for_header_1@12:
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    frame_bury 2                                                                     // store loop_counter%1#0 to f-stack                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0                                                           False                                                                               boolean_binary_ops/contract.py:41
    frame_bury 3                                                                     // store rhs#0 to f-stack                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             rhs                                                                                 boolean_binary_ops/contract.py:41
    b test_boolean_shortcircuit_binary_ops_for_body@2                                //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_after_for@13:
    frame_dig 4                                                                      // load loop_counter%0#0 from f-stack                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | loop_counter%0#0                                            for lhs in (True, False):                                                           boolean_binary_ops/contract.py:40
    bnz test_boolean_shortcircuit_binary_ops_after_for@16                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             for lhs in (True, False):                                                           boolean_binary_ops/contract.py:40
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_1@15 //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             for lhs in (True, False):                                                           boolean_binary_ops/contract.py:40

test_boolean_shortcircuit_binary_ops_for_header_1@15:
    int 1                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    frame_bury 4                                                                     // store loop_counter%0#0 to f-stack                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 0                                                                            //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0                                                           False                                                                               boolean_binary_ops/contract.py:40
    frame_bury 5                                                                     // store lhs#0 to f-stack                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                             lhs                                                                                 boolean_binary_ops/contract.py:40
    b test_boolean_shortcircuit_binary_ops_for_body@1                                //                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_after_for@16:
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.bool_to_bytes(x: uint64) -> bytes:
bool_to_bytes:
    proto 1 1                                                                        //                                                              (洧도) x#0 |                                                                                                                          @subroutine\ndef bool_to_bytes(x: bool) -> Bytes:                                   boolean_binary_ops/contract.py:33-34

bool_to_bytes_block@0:
    byte 0x66616c7365                                                                //                                                              (洧도) x#0 | 0x66616c7365                                                                                                             Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:35
    byte 0x74727565                                                                  //                                                              (洧도) x#0 | 0x66616c7365,0x74727565                                                                                                  Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:35
    frame_dig -1                                                                     // load x#0 from parameters                                     (洧도) x#0 | 0x66616c7365,0x74727565,x#0                                                                                              b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:35
    select                                                                           //                                                              (洧도) x#0 | {select}                                                                                                                 b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:35
                                                                                     // virtual: store tmp%0#0 to l-stack (no copy)                  (洧도) x#0 | tmp%0#0                                                                                                                  b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:35
                                                                                     // virtual: load tmp%0#0 from l-stack (no copy)                 (洧도) x#0 | tmp%0#0                                                                                                                  return Bytes(b"true" if x else b"false")                                            boolean_binary_ops/contract.py:35
    retsub                                                                           //                                                              tmp%0#0                                                                                                                            return Bytes(b"true" if x else b"false")                                            boolean_binary_ops/contract.py:35


// test_cases.boolean_binary_ops.contract.log_and_return(x: uint64, msg: bytes) -> uint64:
log_and_return:
    proto 2 1                                                                        //                                                              (洧도) x#0,msg#0 |                                                                                                                    @subroutine\ndef log_and_return(x: bool, msg: Bytes) -> bool:                       boolean_binary_ops/contract.py:54-55

log_and_return_block@0:
    frame_dig -1                                                                     // load msg#0 from parameters                                   (洧도) x#0,msg#0 | msg#0                                                                                                              log(msg)                                                                            boolean_binary_ops/contract.py:56
    log                                                                              //                                                              (洧도) x#0,msg#0 |                                                                                                                    log(msg)                                                                            boolean_binary_ops/contract.py:56
    frame_dig -2                                                                     // load x#0 from parameters                                     (洧도) x#0,msg#0 | x#0                                                                                                                return x                                                                            boolean_binary_ops/contract.py:57
    retsub                                                                           //                                                              x#0                                                                                                                                return x                                                                            boolean_binary_ops/contract.py:57


// test_cases.boolean_binary_ops.contract.test_union_boolean_binary_ops() -> void:
test_union_boolean_binary_ops:
    proto 0 0                                                                        //                                                                                                                                                                                                 @subroutine\ndef test_union_boolean_binary_ops() -> None:                           boolean_binary_ops/contract.py:68-69

test_union_boolean_binary_ops_block@0:
    int 0                                                                            //                                                              0
                                                                                     // virtual: store item_index_internal%0#0 to l-stack (no copy)  item_index_internal%0#0
                                                                                     // virtual: load item_index_internal%0#0 from l-stack (no copy) item_index_internal%0#0
                                                                                     // virtual: store idx#0 to f-stack                              (洧뎽) idx#0 |
    // Implicit fall through to test_union_boolean_binary_ops_for_header@45          //                                                              (洧뎽) idx#0 |

test_union_boolean_binary_ops_for_header@45:
    frame_dig 0                                                                      // load idx#0 from f-stack                                      (洧뎽) idx#0 | idx#0                                                                                                                  for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
    int 3                                                                            //                                                              (洧뎽) idx#0 | idx#0,3                                                                                                                for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
    <                                                                                //                                                              (洧뎽) idx#0 | {<}                                                                                                                    for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
                                                                                     // virtual: store continue_looping%0#0 to l-stack (no copy)     (洧뎽) idx#0 | continue_looping%0#0                                                                                                   for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
                                                                                     // virtual: load continue_looping%0#0 from l-stack (no copy)    (洧뎽) idx#0 | continue_looping%0#0                                                                                                   for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
    bz test_union_boolean_binary_ops_after_for@48                                    //                                                              (洧뎽) idx#0 |                                                                                                                        for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85
    // Implicit fall through to test_union_boolean_binary_ops_for_body@46            //                                                              (洧뎽) idx#0 |                                                                                                                        for idx, b in uenumerate(Bytes(b"never seen") and bytes_to_iterate):                boolean_binary_ops/contract.py:85

test_union_boolean_binary_ops_for_body@46:
    byte 0x616263                                                                    //                                                              (洧뎽) idx#0 | 0x616263                                                                                                               Bytes(b"abc")                                                                       boolean_binary_ops/contract.py:84
    frame_dig 0                                                                      // load idx#0 from f-stack                                      (洧뎽) idx#0 | 0x616263,idx#0                                                                                                         idx, b                                                                              boolean_binary_ops/contract.py:85
    dup
    cover 2                                                                          // store idx#0 to l-stack (copy)                                (洧뎽) idx#0 | idx#0,0x616263,idx#0                                                                                                   idx, b                                                                              boolean_binary_ops/contract.py:85
    int 1                                                                            //                                                              (洧뎽) idx#0 | idx#0,0x616263,idx#0,1
    extract3                                                                         //                                                              (洧뎽) idx#0 | idx#0,{extract3}                                                                                                       idx, b                                                                              boolean_binary_ops/contract.py:85
    cover 1                                                                          // store b#0 to l-stack (no copy)                               (洧뎽) idx#0 | b#0,idx#0                                                                                                              idx, b                                                                              boolean_binary_ops/contract.py:85
    dup                                                                              // load idx#0 from l-stack (copy)                               (洧뎽) idx#0 | b#0,idx#0,idx#0                                                                                                        bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    int 1                                                                            //                                                              (洧뎽) idx#0 | b#0,idx#0,idx#0,1                                                                                                      bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    +                                                                                //                                                              (洧뎽) idx#0 | b#0,idx#0,{+}                                                                                                          bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
                                                                                     // virtual: store index_plus_1%0#0 to l-stack (no copy)         (洧뎽) idx#0 | b#0,idx#0,index_plus_1%0#0                                                                                             bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    byte 0x616263                                                                    //                                                              (洧뎽) idx#0 | b#0,idx#0,index_plus_1%0#0,0x616263                                                                                    Bytes(b"abc")                                                                       boolean_binary_ops/contract.py:84
    uncover 2                                                                        // load idx#0 from l-stack (no copy)                            (洧뎽) idx#0 | b#0,index_plus_1%0#0,0x616263,idx#0                                                                                    bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    dig 2                                                                            // load index_plus_1%0#0 from l-stack (copy)                    (洧뎽) idx#0 | b#0,index_plus_1%0#0,0x616263,idx#0,index_plus_1%0#0                                                                   bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    substring3                                                                       //                                                              (洧뎽) idx#0 | b#0,index_plus_1%0#0,{substring3}                                                                                      bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
                                                                                     // virtual: store tmp%47#0 to l-stack (no copy)                 (洧뎽) idx#0 | b#0,index_plus_1%0#0,tmp%47#0                                                                                          bytes_to_iterate[idx]                                                               boolean_binary_ops/contract.py:86
    uncover 2                                                                        // load b#0 from l-stack (no copy)                              (洧뎽) idx#0 | index_plus_1%0#0,tmp%47#0,b#0                                                                                          b == bytes_to_iterate[idx]                                                          boolean_binary_ops/contract.py:86
    uncover 1                                                                        // load tmp%47#0 from l-stack (no copy)                         (洧뎽) idx#0 | index_plus_1%0#0,b#0,tmp%47#0                                                                                          b == bytes_to_iterate[idx]                                                          boolean_binary_ops/contract.py:86
    ==                                                                               //                                                              (洧뎽) idx#0 | index_plus_1%0#0,{==}                                                                                                  b == bytes_to_iterate[idx]                                                          boolean_binary_ops/contract.py:86
                                                                                     // virtual: store tmp%48#0 to l-stack (no copy)                 (洧뎽) idx#0 | index_plus_1%0#0,tmp%48#0                                                                                              b == bytes_to_iterate[idx]                                                          boolean_binary_ops/contract.py:86
                                                                                     // virtual: load tmp%48#0 from l-stack (no copy)                (洧뎽) idx#0 | index_plus_1%0#0,tmp%48#0                                                                                              assert b == bytes_to_iterate[idx]                                                   boolean_binary_ops/contract.py:86
    assert                                                                           //                                                              (洧뎽) idx#0 | index_plus_1%0#0                                                                                                       assert b == bytes_to_iterate[idx]                                                   boolean_binary_ops/contract.py:86
                                                                                     // virtual: load index_plus_1%0#0 from l-stack (no copy)        (洧뎽) idx#0 | index_plus_1%0#0
    frame_bury 0                                                                     // store idx#0 to f-stack                                       (洧뎽) idx#0 |
    b test_union_boolean_binary_ops_for_header@45                                    //                                                              (洧뎽) idx#0 |

test_union_boolean_binary_ops_after_for@48:
    byte "ight"                                                                      //                                                              (洧뎽) idx#0 | "ight"                                                                                                                 "ight"                                                                              boolean_binary_ops/contract.py:89
    byte "right"                                                                     //                                                              (洧뎽) idx#0 | "ight","right"                                                                                                         String("right")                                                                     boolean_binary_ops/contract.py:89
    callsub is_substring                                                             //                                                              (洧뎽) idx#0 | {is_substring}                                                                                                         "ight" in (String("left") and String("right")                                       boolean_binary_ops/contract.py:89
                                                                                     // virtual: store tmp%61#0 to l-stack (no copy)                 (洧뎽) idx#0 | tmp%61#0                                                                                                               "ight" in (String("left") and String("right")                                       boolean_binary_ops/contract.py:89
                                                                                     // virtual: load tmp%61#0 from l-stack (no copy)                (洧뎽) idx#0 | tmp%61#0                                                                                                               assert "ight" in (String("left") and String("right"))                               boolean_binary_ops/contract.py:89
    assert                                                                           //                                                              (洧뎽) idx#0 |                                                                                                                        assert "ight" in (String("left") and String("right"))                               boolean_binary_ops/contract.py:89
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.test_literal_boolean_binary_ops() -> void:
test_literal_boolean_binary_ops:
    proto 0 0                                                                        //                                                                                                                                                                                                 @subroutine\ndef test_literal_boolean_binary_ops() -> None:                         boolean_binary_ops/contract.py:95-96

test_literal_boolean_binary_ops_block@0:
    int 4                                                                            //                                                              4                                                                                                                                  one and 4                                                                           boolean_binary_ops/contract.py:120
    bitlen                                                                           //                                                              {bitlen}                                                                                                                           op.bitlen(one and 4)                                                                boolean_binary_ops/contract.py:120
                                                                                     // virtual: store tmp%13#0 to l-stack (no copy)                 tmp%13#0                                                                                                                           op.bitlen(one and 4)                                                                boolean_binary_ops/contract.py:120
                                                                                     // virtual: load tmp%13#0 from l-stack (no copy)                tmp%13#0                                                                                                                           op.bitlen(one and 4) == 3                                                           boolean_binary_ops/contract.py:120
    int 3                                                                            //                                                              tmp%13#0,3                                                                                                                         3                                                                                   boolean_binary_ops/contract.py:120
    ==                                                                               //                                                              {==}                                                                                                                               op.bitlen(one and 4) == 3                                                           boolean_binary_ops/contract.py:120
                                                                                     // virtual: store tmp%14#0 to l-stack (no copy)                 tmp%14#0                                                                                                                           op.bitlen(one and 4) == 3                                                           boolean_binary_ops/contract.py:120
                                                                                     // virtual: load tmp%14#0 from l-stack (no copy)                tmp%14#0                                                                                                                           assert op.bitlen(one and 4) == 3                                                    boolean_binary_ops/contract.py:120
    assert                                                                           //                                                                                                                                                                                                 assert op.bitlen(one and 4) == 3                                                    boolean_binary_ops/contract.py:120
    byte 0x68656c6c6f                                                                //                                                              0x68656c6c6f                                                                                                                       empty_bytes or b"hello"                                                             boolean_binary_ops/contract.py:122
    bitlen                                                                           //                                                              {bitlen}                                                                                                                           op.bitlen(empty_bytes or b"hello")                                                  boolean_binary_ops/contract.py:122
                                                                                     // virtual: store tmp%18#0 to l-stack (no copy)                 tmp%18#0                                                                                                                           op.bitlen(empty_bytes or b"hello")                                                  boolean_binary_ops/contract.py:122
                                                                                     // virtual: load tmp%18#0 from l-stack (no copy)                tmp%18#0                                                                                                                           assert op.bitlen(empty_bytes or b"hello") > 0                                       boolean_binary_ops/contract.py:122
    assert                                                                           //                                                                                                                                                                                                 assert op.bitlen(empty_bytes or b"hello") > 0                                       boolean_binary_ops/contract.py:122
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.test_literal_conditionals(true: uint64, false: uint64) -> void:
test_literal_conditionals:
    proto 2 0                                                                        //                                                              (洧도) true#0,false#0 |                                                                                                               @subroutine\ndef test_literal_conditionals(*, true: bool, false: bool) -> None:     boolean_binary_ops/contract.py:125-126
    byte ""                                                                          // allocate 1 to stack                                          (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |

test_literal_conditionals_block@0:
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | false#0                                                                                    (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:127
    int 1                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | false#0,1                                                                                  4                                                                                   boolean_binary_ops/contract.py:127
    ||                                                                               //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | {||}                                                                                       (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:127
                                                                                     // virtual: store tmp%1#0 to l-stack (no copy)                  (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%1#0                                                                                    (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:127
                                                                                     // virtual: load tmp%1#0 from l-stack (no copy)                 (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%1#0                                                                                    assert (3 if false else 0) or 4                                                     boolean_binary_ops/contract.py:127
    assert                                                                           //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            assert (3 if false else 0) or 4                                                     boolean_binary_ops/contract.py:127
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | true#0                                                                                     0 or (3 if true else 0)                                                             boolean_binary_ops/contract.py:128
    bz test_literal_conditionals_bool_false@3                                        //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            0 or (3 if true else 0)                                                             boolean_binary_ops/contract.py:128
    // Implicit fall through to test_literal_conditionals_bool_true@2                //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            0 or (3 if true else 0)                                                             boolean_binary_ops/contract.py:128

test_literal_conditionals_bool_true@2:
    int 1                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | 1
                                                                                     // virtual: store or_result%0#0 to x-stack                      (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) or_result%0#0 |
    b test_literal_conditionals_bool_merge@4                                         //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) or_result%0#0 |                                                          or_result%0#0

test_literal_conditionals_bool_false@3:
    int 0                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | 0
                                                                                     // virtual: store or_result%0#0 to x-stack                      (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) or_result%0#0 |
    // Implicit fall through to test_literal_conditionals_bool_merge@4               //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) or_result%0#0 |                                                          or_result%0#0

test_literal_conditionals_bool_merge@4:
                                                                                     // virtual: load or_result%0#0 from x-stack                     (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | or_result%0#0                                                                or_result%0#0 assert 0 or (3 if true else 0)                                                      boolean_binary_ops/contract.py:128
    assert                                                                           //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            assert 0 or (3 if true else 0)                                                      boolean_binary_ops/contract.py:128
    frame_dig -1                                                                     // load false#0 from parameters                                 (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | false#0                                                                                    3 if false else 0                                                                   boolean_binary_ops/contract.py:131
    int 3                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | false#0,3                                                                                  UInt64((3 if false else 0) or 4)                                                    boolean_binary_ops/contract.py:131
    *                                                                                //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | {*}                                                                                        3 if false else 0                                                                   boolean_binary_ops/contract.py:131
    dup                                                                              // store awst_tmp%0#0 to l-stack (copy)                         (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | awst_tmp%0#0,awst_tmp%0#0                                                                  3 if false else 0                                                                   boolean_binary_ops/contract.py:131
    frame_bury 0                                                                     // store awst_tmp%0#0 to f-stack                                (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | awst_tmp%0#0                                                                               3 if false else 0                                                                   boolean_binary_ops/contract.py:131
                                                                                     // virtual: load awst_tmp%0#0 from l-stack (no copy)            (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | awst_tmp%0#0                                                                               (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:131
    bz test_literal_conditionals_ternary_false@10                                    //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:131
    // Implicit fall through to test_literal_conditionals_ternary_true@9             //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            (3 if false else 0) or 4                                                            boolean_binary_ops/contract.py:131

test_literal_conditionals_ternary_true@9:
    frame_dig 0                                                                      // load awst_tmp%0#0 from f-stack                               (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | awst_tmp%0#0
                                                                                     // virtual: store y#0 to x-stack                                (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) y#0 |
    b test_literal_conditionals_ternary_merge@11                                     //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) y#0 |                                                                    y#0

test_literal_conditionals_ternary_false@10:
    int 4                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | 4                                                                                          UInt64((3 if false else 0) or 4)                                                    boolean_binary_ops/contract.py:131
                                                                                     // virtual: store ternary_result%0#1 to l-stack (no copy)       (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | ternary_result%0#1                                                                         UInt64((3 if false else 0) or 4)                                                    boolean_binary_ops/contract.py:131
                                                                                     // virtual: load ternary_result%0#1 from l-stack (no copy)      (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | ternary_result%0#1
                                                                                     // virtual: store y#0 to x-stack                                (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) y#0 |
    // Implicit fall through to test_literal_conditionals_ternary_merge@11           //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | (洧뎶) y#0 |                                                                    y#0

test_literal_conditionals_ternary_merge@11:
                                                                                     // virtual: load y#0 from x-stack                               (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | y#0                                                                          y#0           y == 4                                                                              boolean_binary_ops/contract.py:132
    int 4                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | y#0,4                                                                                      4                                                                                   boolean_binary_ops/contract.py:132
    ==                                                                               //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | {==}                                                                                       y == 4                                                                              boolean_binary_ops/contract.py:132
                                                                                     // virtual: store tmp%7#0 to l-stack (no copy)                  (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%7#0                                                                                    y == 4                                                                              boolean_binary_ops/contract.py:132
                                                                                     // virtual: load tmp%7#0 from l-stack (no copy)                 (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%7#0                                                                                    assert y == 4                                                                       boolean_binary_ops/contract.py:132
    assert                                                                           //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            assert y == 4                                                                       boolean_binary_ops/contract.py:132
    frame_dig -2                                                                     // load true#0 from parameters                                  (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | true#0                                                                                     3 if true else 0                                                                    boolean_binary_ops/contract.py:133
    int 3                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | true#0,3                                                                                   UInt64(0 or (3 if true else 0))                                                     boolean_binary_ops/contract.py:133
    *                                                                                //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | {*}                                                                                        3 if true else 0                                                                    boolean_binary_ops/contract.py:133
                                                                                     // virtual: store ternary_result%1#1 to l-stack (no copy)       (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | ternary_result%1#1                                                                         3 if true else 0                                                                    boolean_binary_ops/contract.py:133
                                                                                     // virtual: load ternary_result%1#1 from l-stack (no copy)      (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | ternary_result%1#1                                                                         z == 3                                                                              boolean_binary_ops/contract.py:134
    int 3                                                                            //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | ternary_result%1#1,3                                                                       3                                                                                   boolean_binary_ops/contract.py:134
    ==                                                                               //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | {==}                                                                                       z == 3                                                                              boolean_binary_ops/contract.py:134
                                                                                     // virtual: store tmp%9#0 to l-stack (no copy)                  (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%9#0                                                                                    z == 3                                                                              boolean_binary_ops/contract.py:134
                                                                                     // virtual: load tmp%9#0 from l-stack (no copy)                 (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 | tmp%9#0                                                                                    assert z == 3                                                                       boolean_binary_ops/contract.py:134
    assert                                                                           //                                                              (洧도) true#0,false#0 | (洧뎽) awst_tmp%0#0 |                                                                                            assert z == 3                                                                       boolean_binary_ops/contract.py:134
    retsub                                                                           //


// _puya_lib.bytes_.is_substring(item: bytes, sequence: bytes) -> uint64:
is_substring:
    proto 2 1                                                                        //                                                              (洧도) item#0,sequence#0 |                                                                                                                                                                                                INTERNAL:4-5
    byte ""                                                                          // allocate 1 to stack                                          (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 |

is_substring_block@0:
    int 0                                                                            //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0 | 0                                                                                                                                                                                INTERNAL:10
                                                                                     // virtual: store start#0 to f-stack                            (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:10
    // Implicit fall through to is_substring_while_top@1                             //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_while_top@1:
    frame_dig -2                                                                     // load item#0 from parameters                                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0                                                                                                                                                                   INTERNAL:11
    len                                                                              //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {len}                                                                                                                                                                    INTERNAL:11
                                                                                     // virtual: store tmp%0#0 to l-stack (no copy)                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0                                                                                                                                                                  INTERNAL:11
    frame_dig 1                                                                      // load start#0 from f-stack                                    (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%0#0,start#0                                                                                                                                                          INTERNAL:11
    uncover 1                                                                        // load tmp%0#0 from l-stack (no copy)                          (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,tmp%0#0                                                                                                                                                          INTERNAL:11
    +                                                                                //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                                                                                                                      INTERNAL:11
    dup                                                                              // store tmp%1#0 to l-stack (copy)                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%1#0                                                                                                                                                          INTERNAL:11
    frame_bury 0                                                                     // store tmp%1#0 to f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0                                                                                                                                                                  INTERNAL:11
    frame_dig -1                                                                     // load sequence#0 from parameters                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,sequence#0                                                                                                                                                       INTERNAL:11
    len                                                                              //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,{len}                                                                                                                                                            INTERNAL:11
                                                                                     // virtual: store tmp%2#0 to l-stack (no copy)                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                                          INTERNAL:11
                                                                                     // virtual: load tmp%1#0 from l-stack (no copy)                 (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%2#0,tmp%1#0                                                                                                                                                          INTERNAL:11
                                                                                     // virtual: load tmp%2#0 from l-stack (no copy)                 (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%1#0,tmp%2#0                                                                                                                                                          INTERNAL:11
    <=                                                                               //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {<=}                                                                                                                                                                     INTERNAL:11
                                                                                     // virtual: store tmp%3#0 to l-stack (no copy)                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                                  INTERNAL:11
                                                                                     // virtual: load tmp%3#0 from l-stack (no copy)                 (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%3#0                                                                                                                                                                  INTERNAL:11
    bz is_substring_after_while@5                                                    //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:11
    // Implicit fall through to is_substring_while_body@2                            //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:11

is_substring_while_body@2:
    frame_dig -1                                                                     // load sequence#0 from parameters                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0                                                                                                                                                               INTERNAL:12
    frame_dig 1                                                                      // load start#0 from f-stack                                    (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0                                                                                                                                                       INTERNAL:12
    frame_dig 0                                                                      // load tmp%1#0 from f-stack                                    (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | sequence#0,start#0,tmp%1#0                                                                                                                                               INTERNAL:12
    substring3                                                                       //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {substring3}                                                                                                                                                             INTERNAL:12
                                                                                     // virtual: store tmp%6#0 to l-stack (no copy)                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0                                                                                                                                                                  INTERNAL:12
    frame_dig -2                                                                     // load item#0 from parameters                                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%6#0,item#0                                                                                                                                                           INTERNAL:12
    uncover 1                                                                        // load tmp%6#0 from l-stack (no copy)                          (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | item#0,tmp%6#0                                                                                                                                                           INTERNAL:12
    ==                                                                               //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {==}                                                                                                                                                                     INTERNAL:12
                                                                                     // virtual: store tmp%7#0 to l-stack (no copy)                  (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                                  INTERNAL:12
                                                                                     // virtual: load tmp%7#0 from l-stack (no copy)                 (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | tmp%7#0                                                                                                                                                                  INTERNAL:12
    bz is_substring_after_if_else@4                                                  //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:12
    // Implicit fall through to is_substring_if_body@3                               //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:12

is_substring_if_body@3:
    int 1                                                                            //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 1                                                                                                                                                                        INTERNAL:13
    frame_bury 0
    retsub                                                                           //                                                              1                                                                                                                                                                                                                      INTERNAL:13

is_substring_after_if_else@4:
    frame_dig 1                                                                      // load start#0 from f-stack                                    (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0                                                                                                                                                                  INTERNAL:14
    int 1                                                                            //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | start#0,1                                                                                                                                                                INTERNAL:14
    +                                                                                //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | {+}                                                                                                                                                                      INTERNAL:14
    frame_bury 1                                                                     // store start#0 to f-stack                                     (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |                                                                                                                                                                          INTERNAL:14
    b is_substring_while_top@1                                                       //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 |

is_substring_after_while@5:
    int 0                                                                            //                                                              (洧도) item#0,sequence#0 | (洧뎽) tmp%1#0,start#0 | 0                                                                                                                                                                        INTERNAL:15
    frame_bury 0
    retsub                                                                           //                                                              0                                                                                                                                                                                                                      INTERNAL:15

