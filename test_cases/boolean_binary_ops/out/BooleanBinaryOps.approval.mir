// Op                                                                                //                                                     Op Description                                                                                                Stack (out)                                                                                                          Live (out)            X stack                                                                             Source code                                                                         Source line

#pragma version 10

// test_cases.boolean_binary_ops.contract.BooleanBinaryOps.approval_program() -> uint64:
main_block@0:
    int 1                                                                            //                                                                                                                                                                   1                                                                                                                                                                                                                              True                                                                                boolean_binary_ops/contract.py:6
    int 0                                                                            //                                                                                                                                                                   1,0                                                                                                                                                                                                                            False                                                                               boolean_binary_ops/contract.py:6
    callsub test_boolean_binary_ops                                                  //                                                                                                                                                                                                                                                                                                                                                                                                  test_boolean_binary_ops(true=True, false=False)                                     boolean_binary_ops/contract.py:6
    callsub test_boolean_shortcircuit_binary_ops                                     //                                                                                                                                                                                                                                                                                                                                                                                                  test_boolean_shortcircuit_binary_ops()                                              boolean_binary_ops/contract.py:7
    callsub type_coercion                                                            //                                                                                                                                                                                                                                                                                                                                                                                                  type_coercion()                                                                     boolean_binary_ops/contract.py:8
    int 1                                                                            //                                                                                                                                                                   1                                                                                                                                                                                                                              True                                                                                boolean_binary_ops/contract.py:9
    return                                                                           //                                                                                                                                                                                                                                                                                                                                                                                                  return True                                                                         boolean_binary_ops/contract.py:9


// test_cases.boolean_binary_ops.contract.test_boolean_binary_ops(true: uint64, false: uint64) -> void:
test_boolean_binary_ops:
    proto 2 0                                                                        //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           @subroutine\ndef test_boolean_binary_ops(*, true: bool, false: bool) -> None:       boolean_binary_ops/contract.py:16-17

test_boolean_binary_ops_block@0:
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0                                                                                                                                                                                                    true and false                                                                      boolean_binary_ops/contract.py:18
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | true#0,false#0                                                                                                                                                                                            true and false                                                                      boolean_binary_ops/contract.py:18
    &&                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {&&}                                                                                                                                                                                                      true and false                                                                      boolean_binary_ops/contract.py:18
    //                                                                               virtual: store tmp%0#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%0#0                                                                                                                                                                                                                             true and false                                                                      boolean_binary_ops/contract.py:18
    //                                                                               virtual: load tmp%0#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%0#0                                                                                                                                                                                                                             not (true and false)                                                                boolean_binary_ops/contract.py:18
    !                                                                                //                                                                                                                                                                   (洧도) true#0,false#0 | {!}                                                                                                                                                                                                       not (true and false)                                                                boolean_binary_ops/contract.py:18
    //                                                                               virtual: store tmp%1#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%1#0                                                                                                                                                                                                                             not (true and false)                                                                boolean_binary_ops/contract.py:18
    //                                                                               virtual: load tmp%1#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%1#0                                                                                                                                                                                                                             assert not (true and false)                                                         boolean_binary_ops/contract.py:18
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert not (true and false)                                                         boolean_binary_ops/contract.py:18
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0                                                                                                                                                                                                   false and true                                                                      boolean_binary_ops/contract.py:19
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | false#0,true#0                                                                                                                                                                                            false and true                                                                      boolean_binary_ops/contract.py:19
    &&                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {&&}                                                                                                                                                                                                      false and true                                                                      boolean_binary_ops/contract.py:19
    //                                                                               virtual: store tmp%2#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%2#0                                                                                                                                                                                                                             false and true                                                                      boolean_binary_ops/contract.py:19
    //                                                                               virtual: load tmp%2#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%2#0                                                                                                                                                                                                                             not (false and true)                                                                boolean_binary_ops/contract.py:19
    !                                                                                //                                                                                                                                                                   (洧도) true#0,false#0 | {!}                                                                                                                                                                                                       not (false and true)                                                                boolean_binary_ops/contract.py:19
    //                                                                               virtual: store tmp%3#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%3#0                                                                                                                                                                                                                             not (false and true)                                                                boolean_binary_ops/contract.py:19
    //                                                                               virtual: load tmp%3#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%3#0                                                                                                                                                                                                                             assert not (false and true)                                                         boolean_binary_ops/contract.py:19
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert not (false and true)                                                         boolean_binary_ops/contract.py:19
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0                                                                                                                                                                                                    true and true                                                                       boolean_binary_ops/contract.py:20
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0,true#0                                                                                                                                                                                             true and true                                                                       boolean_binary_ops/contract.py:20
    &&                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {&&}                                                                                                                                                                                                      true and true                                                                       boolean_binary_ops/contract.py:20
    //                                                                               virtual: store tmp%4#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%4#0                                                                                                                                                                                                                             true and true                                                                       boolean_binary_ops/contract.py:20
    //                                                                               virtual: load tmp%4#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%4#0                                                                                                                                                                                                                             assert true and true                                                                boolean_binary_ops/contract.py:20
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert true and true                                                                boolean_binary_ops/contract.py:20
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0                                                                                                                                                                                                   false and false                                                                     boolean_binary_ops/contract.py:21
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0,false#0                                                                                                                                                                                           false and false                                                                     boolean_binary_ops/contract.py:21
    &&                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {&&}                                                                                                                                                                                                      false and false                                                                     boolean_binary_ops/contract.py:21
    //                                                                               virtual: store tmp%5#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%5#0                                                                                                                                                                                                                             false and false                                                                     boolean_binary_ops/contract.py:21
    //                                                                               virtual: load tmp%5#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%5#0                                                                                                                                                                                                                             not (false and false)                                                               boolean_binary_ops/contract.py:21
    !                                                                                //                                                                                                                                                                   (洧도) true#0,false#0 | {!}                                                                                                                                                                                                       not (false and false)                                                               boolean_binary_ops/contract.py:21
    //                                                                               virtual: store tmp%6#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%6#0                                                                                                                                                                                                                             not (false and false)                                                               boolean_binary_ops/contract.py:21
    //                                                                               virtual: load tmp%6#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%6#0                                                                                                                                                                                                                             assert not (false and false)                                                        boolean_binary_ops/contract.py:21
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert not (false and false)                                                        boolean_binary_ops/contract.py:21
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0                                                                                                                                                                                                    true or false                                                                       boolean_binary_ops/contract.py:23
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | true#0,false#0                                                                                                                                                                                            true or false                                                                       boolean_binary_ops/contract.py:23
    ||                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {||}                                                                                                                                                                                                      true or false                                                                       boolean_binary_ops/contract.py:23
    //                                                                               virtual: store tmp%7#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%7#0                                                                                                                                                                                                                             true or false                                                                       boolean_binary_ops/contract.py:23
    //                                                                               virtual: load tmp%7#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%7#0                                                                                                                                                                                                                             assert true or false                                                                boolean_binary_ops/contract.py:23
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert true or false                                                                boolean_binary_ops/contract.py:23
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0                                                                                                                                                                                                   false or true                                                                       boolean_binary_ops/contract.py:24
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | false#0,true#0                                                                                                                                                                                            false or true                                                                       boolean_binary_ops/contract.py:24
    ||                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {||}                                                                                                                                                                                                      false or true                                                                       boolean_binary_ops/contract.py:24
    //                                                                               virtual: store tmp%8#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%8#0                                                                                                                                                                                                                             false or true                                                                       boolean_binary_ops/contract.py:24
    //                                                                               virtual: load tmp%8#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%8#0                                                                                                                                                                                                                             assert false or true                                                                boolean_binary_ops/contract.py:24
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert false or true                                                                boolean_binary_ops/contract.py:24
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0                                                                                                                                                                                                    true or true                                                                        boolean_binary_ops/contract.py:25
    frame_dig -2                                                                     //                                                     load true#0 from parameters                                                                                   (洧도) true#0,false#0 | true#0,true#0                                                                                                                                                                                             true or true                                                                        boolean_binary_ops/contract.py:25
    ||                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {||}                                                                                                                                                                                                      true or true                                                                        boolean_binary_ops/contract.py:25
    //                                                                               virtual: store tmp%9#0 to l-stack (no copy)            (洧도) true#0,false#0 | tmp%9#0                                                                                                                                                                                                                             true or true                                                                        boolean_binary_ops/contract.py:25
    //                                                                               virtual: load tmp%9#0 from l-stack (no copy)           (洧도) true#0,false#0 | tmp%9#0                                                                                                                                                                                                                             assert true or true                                                                 boolean_binary_ops/contract.py:25
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert true or true                                                                 boolean_binary_ops/contract.py:25
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0                                                                                                                                                                                                   false or false                                                                      boolean_binary_ops/contract.py:26
    frame_dig -1                                                                     //                                                     load false#0 from parameters                                                                                  (洧도) true#0,false#0 | false#0,false#0                                                                                                                                                                                           false or false                                                                      boolean_binary_ops/contract.py:26
    ||                                                                               //                                                                                                                                                                   (洧도) true#0,false#0 | {||}                                                                                                                                                                                                      false or false                                                                      boolean_binary_ops/contract.py:26
    //                                                                               virtual: store tmp%10#0 to l-stack (no copy)           (洧도) true#0,false#0 | tmp%10#0                                                                                                                                                                                                                            false or false                                                                      boolean_binary_ops/contract.py:26
    //                                                                               virtual: load tmp%10#0 from l-stack (no copy)          (洧도) true#0,false#0 | tmp%10#0                                                                                                                                                                                                                            not (false or false)                                                                boolean_binary_ops/contract.py:26
    !                                                                                //                                                                                                                                                                   (洧도) true#0,false#0 | {!}                                                                                                                                                                                                       not (false or false)                                                                boolean_binary_ops/contract.py:26
    //                                                                               virtual: store tmp%11#0 to l-stack (no copy)           (洧도) true#0,false#0 | tmp%11#0                                                                                                                                                                                                                            not (false or false)                                                                boolean_binary_ops/contract.py:26
    //                                                                               virtual: load tmp%11#0 from l-stack (no copy)          (洧도) true#0,false#0 | tmp%11#0                                                                                                                                                                                                                            assert not (false or false)                                                         boolean_binary_ops/contract.py:26
    assert                                                                           //                                                                                                                                                                   (洧도) true#0,false#0 |                                                                                                                                                                                                           assert not (false or false)                                                         boolean_binary_ops/contract.py:26
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.test_boolean_shortcircuit_binary_ops() -> void:
test_boolean_shortcircuit_binary_ops:
    proto 0 0                                                                        //                                                                                                                                                                                                                                                                                                                                                                                                  @subroutine\ndef test_boolean_shortcircuit_binary_ops() -> None:                    boolean_binary_ops/contract.py:34-35
    int 0
    dup
    byte ""
    dup                                                                              //                                                     allocate 4 to stack                                                                                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0 |

test_boolean_shortcircuit_binary_ops_block@0:
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0 | 0
    //                                                                               virtual: store loop_counter%0#0 to f-stack             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0 |
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0 | 1                                                                                                                                                             True                                                                                boolean_binary_ops/contract.py:36
    //                                                                               virtual: store lhs#0 to f-stack                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                                                   lhs                                                                                 boolean_binary_ops/contract.py:36
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@1      //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_for_body@1:
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
    frame_bury 2                                                                     //                                                     store loop_counter%1#0 to f-stack                                                                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1                                                                                                                                                       True                                                                                boolean_binary_ops/contract.py:37
    frame_bury 3                                                                     //                                                     store rhs#0 to f-stack                                                                                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         rhs                                                                                 boolean_binary_ops/contract.py:37
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@2      //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_for_body@2:
    frame_dig 5                                                                      //                                                     load lhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0                                                                                                                                                   bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:38
    dup                                                                              //                                                     store lhs#0 to l-stack (copy)                                                                                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,lhs#0                                                                                                                                             bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:38
    callsub bool_to_bytes                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{bool_to_bytes}                                                                                                                                   bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:38
    //                                                                               virtual: store tmp%0#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%0#0                                                                                                                                                                     bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:38
    byte 0x5f                                                                        //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%0#0,0x5f                                                                                                                                      b"_"                                                                                boolean_binary_ops/contract.py:38
    uncover 1                                                                        //                                                     load tmp%0#0 from l-stack (no copy)                                                                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x5f,tmp%0#0                                                                                                                                      b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:38
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:38
    //                                                                               virtual: store tmp%1#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0                                                                                                                                                                     b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:38
    //                                                                               virtual: load tmp%1#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0                                                                                                                                                                     b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:38
    byte 0x5f616e645f                                                                //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%1#0,0x5f616e645f                                                                                                                              b"_and_"                                                                            boolean_binary_ops/contract.py:38
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:38
    //                                                                               virtual: store tmp%2#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0                                                                                                                                                                     b"_" + bool_to_bytes(lhs) + b"_and_"                                                boolean_binary_ops/contract.py:38
    frame_dig 3                                                                      //                                                     load rhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,rhs#0                                                                                                                                     bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:38
    callsub bool_to_bytes                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,{bool_to_bytes}                                                                                                                           bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:38
    //                                                                               virtual: store tmp%3#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,tmp%3#0                                                                                                                                                             bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:38
    //                                                                               virtual: load tmp%2#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%3#0,tmp%2#0                                                                                                                                                             and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:38
    //                                                                               virtual: load tmp%3#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%2#0,tmp%3#0                                                                                                                                                             and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:38
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                           boolean_binary_ops/contract.py:38
    dup                                                                              //                                                     store and_msg#0 to l-stack (copy)                                                                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0,and_msg#0                                                                                                                               and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:38
    frame_bury 0                                                                     //                                                     store and_msg#0 to f-stack                                                                                    (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0                                                                                                                                         and_msg = b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)                 boolean_binary_ops/contract.py:38
    byte 0x6c6873                                                                    //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,and_msg#0,0x6c6873                                                                                                                                b"lhs"                                                                              boolean_binary_ops/contract.py:39
    uncover 1                                                                        //                                                     load and_msg#0 from l-stack (no copy)                                                                         (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x6c6873,and_msg#0                                                                                                                                b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:39
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:39
    //                                                                               virtual: store tmp%4#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%4#0                                                                                                                                                                     b"lhs" + and_msg                                                                    boolean_binary_ops/contract.py:39
    //                                                                               virtual: load lhs#0 from l-stack (no copy)             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%4#0,lhs#0                                                                                                                                                                     log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:39
    //                                                                               virtual: load tmp%4#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%4#0                                                                                                                                                                     log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:39
    callsub log_and_return                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                                                                                                                        log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:39
    //                                                                               virtual: store tmp%5#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%5#0                                                                                                                                                                           log_and_return(lhs, b"lhs" + and_msg)                                               boolean_binary_ops/contract.py:39
    //                                                                               virtual: load tmp%5#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%5#0                                                                                                                                                                           log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41
    bz test_boolean_shortcircuit_binary_ops_bool_false@5                             //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_and_contd@3     //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41

test_boolean_shortcircuit_binary_ops_and_contd@3:
    byte 0x726873                                                                    //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873                                                                                                                                                b"rhs"                                                                              boolean_binary_ops/contract.py:40
    frame_dig 0                                                                      //                                                     load and_msg#0 from f-stack                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873,and_msg#0                                                                                                                                      b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:40
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {concat}                                                                                                                                                b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:40
    //                                                                               virtual: store tmp%6#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%6#0                                                                                                                                                                           b"rhs" + and_msg                                                                    boolean_binary_ops/contract.py:40
    frame_dig 3                                                                      //                                                     load rhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%6#0,rhs#0                                                                                                                                           log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:39-41
    uncover 1                                                                        //                                                     load tmp%6#0 from l-stack (no copy)                                                                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,tmp%6#0                                                                                                                                           log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:39-41
    callsub log_and_return                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                                                                                                                        log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:39-41
    //                                                                               virtual: store tmp%7#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%7#0                                                                                                                                                                           log_and_return(\nrhs, b"rhs" + and_msg\n)                                           boolean_binary_ops/contract.py:39-41
    //                                                                               virtual: load tmp%7#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%7#0                                                                                                                                                                           log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41
    bz test_boolean_shortcircuit_binary_ops_bool_false@5                             //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@4     //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + and_msg) and log_and_return(\nrhs, b"rhs" + and_msg\n) boolean_binary_ops/contract.py:39-41

test_boolean_shortcircuit_binary_ops_bool_true@4:
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    //                                                                               virtual: store and_result%0#0 to l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
    //                                                                               virtual: load and_result%0#0 from l-stack (no copy)    (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
    //                                                                               virtual: store and_result#0 to x-stack (no copy)       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |
    b test_boolean_shortcircuit_binary_ops_bool_merge@6                              //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |                                                  and_result#0

test_boolean_shortcircuit_binary_ops_bool_false@5:
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
    //                                                                               virtual: store and_result%0#0 to l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
    //                                                                               virtual: load and_result%0#0 from l-stack (no copy)    (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | and_result%0#0
    //                                                                               virtual: store and_result#0 to x-stack (no copy)       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@6    //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 |                                                  and_result#0

test_boolean_shortcircuit_binary_ops_bool_merge@6:
    frame_dig 5                                                                      //                                                     load lhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0                                            and_result#0                                                                        lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    dup                                                                              //                                                     store lhs#0 to l-stack (copy)                                                                                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0,lhs#0                                                                                                                          lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    frame_dig 3                                                                      //                                                     load rhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | lhs#0,lhs#0,rhs#0                                                                                                                    lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    dup
    cover 3                                                                          //                                                     store rhs#0 to l-stack (copy)                                                                                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,lhs#0,rhs#0                                                                                                              lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    &&                                                                               //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,{&&}                                                                                                                     lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    //                                                                               virtual: store tmp%8#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) and_result#0 | rhs#0,lhs#0,tmp%8#0                                                                                                                                            lhs and rhs                                                                         boolean_binary_ops/contract.py:42
    uncover 3                                                                        //                                                     load and_result#0 from x-stack                                                                                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%8#0,and_result#0                                                                                                                        and_result == (lhs and rhs)                                                         boolean_binary_ops/contract.py:42
    uncover 1                                                                        //                                                     load tmp%8#0 from l-stack (no copy)                                                                           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,and_result#0,tmp%8#0                                                                                                                        and_result == (lhs and rhs)                                                         boolean_binary_ops/contract.py:42
    ==                                                                               //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{==}                                                                                                                                        and_result == (lhs and rhs)                                                         boolean_binary_ops/contract.py:42
    //                                                                               virtual: store tmp%9#0 to l-stack (no copy)            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%9#0                                                                                                                                                               and_result == (lhs and rhs)                                                         boolean_binary_ops/contract.py:42
    //                                                                               virtual: load tmp%9#0 from l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%9#0                                                                                                                                                               assert and_result == (lhs and rhs)                                                  boolean_binary_ops/contract.py:42
    assert                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0                                                                                                                                             assert and_result == (lhs and rhs)                                                  boolean_binary_ops/contract.py:42
    dup                                                                              //                                                     load lhs#0 from l-stack (copy)                                                                                (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,lhs#0                                                                                                                                       bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:43
    callsub bool_to_bytes                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{bool_to_bytes}                                                                                                                             bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:43
    //                                                                               virtual: store tmp%10#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%10#0                                                                                                                                                              bool_to_bytes(lhs)                                                                  boolean_binary_ops/contract.py:43
    byte 0x5f                                                                        //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%10#0,0x5f                                                                                                                               b"_"                                                                                boolean_binary_ops/contract.py:43
    uncover 1                                                                        //                                                     load tmp%10#0 from l-stack (no copy)                                                                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,0x5f,tmp%10#0                                                                                                                               b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:43
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{concat}                                                                                                                                    b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:43
    //                                                                               virtual: store tmp%11#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0                                                                                                                                                              b"_" + bool_to_bytes(lhs)                                                           boolean_binary_ops/contract.py:43
    //                                                                               virtual: load tmp%11#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0                                                                                                                                                              b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:43
    byte 0x5f6f725f                                                                  //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%11#0,0x5f6f725f                                                                                                                         b"_or_"                                                                             boolean_binary_ops/contract.py:43
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,{concat}                                                                                                                                    b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:43
    //                                                                               virtual: store tmp%12#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,lhs#0,tmp%12#0                                                                                                                                                              b"_" + bool_to_bytes(lhs) + b"_or_"                                                 boolean_binary_ops/contract.py:43
    uncover 2                                                                        //                                                     load rhs#0 from l-stack (no copy)                                                                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,rhs#0                                                                                                                                    bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:43
    callsub bool_to_bytes                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,{bool_to_bytes}                                                                                                                          bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:43
    //                                                                               virtual: store tmp%13#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,tmp%13#0                                                                                                                                                           bool_to_bytes(rhs)                                                                  boolean_binary_ops/contract.py:43
    //                                                                               virtual: load tmp%12#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%13#0,tmp%12#0                                                                                                                                                           or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:43
    //                                                                               virtual: load tmp%13#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%12#0,tmp%13#0                                                                                                                                                           or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:43
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                            boolean_binary_ops/contract.py:43
    dup                                                                              //                                                     store or_msg#0 to l-stack (copy)                                                                              (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0,or_msg#0                                                                                                                                 or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:43
    frame_bury 1                                                                     //                                                     store or_msg#0 to f-stack                                                                                     (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0                                                                                                                                          or_msg = b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)                   boolean_binary_ops/contract.py:43
    byte 0x6c6873                                                                    //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,or_msg#0,0x6c6873                                                                                                                                 b"lhs"                                                                              boolean_binary_ops/contract.py:44
    uncover 1                                                                        //                                                     load or_msg#0 from l-stack (no copy)                                                                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,0x6c6873,or_msg#0                                                                                                                                 b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:44
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,{concat}                                                                                                                                          b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:44
    //                                                                               virtual: store tmp%14#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%14#0                                                                                                                                                                    b"lhs" + or_msg                                                                     boolean_binary_ops/contract.py:44
    //                                                                               virtual: load lhs#0 from l-stack (no copy)             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%14#0,lhs#0                                                                                                                                                                    log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:44
    //                                                                               virtual: load tmp%14#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | lhs#0,tmp%14#0                                                                                                                                                                    log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:44
    callsub log_and_return                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                                                                                                                        log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:44
    //                                                                               virtual: store tmp%15#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%15#0                                                                                                                                                                          log_and_return(lhs, b"lhs" + or_msg)                                                boolean_binary_ops/contract.py:44
    //                                                                               virtual: load tmp%15#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%15#0                                                                                                                                                                          log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46
    bnz test_boolean_shortcircuit_binary_ops_bool_true@8                             //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_or_contd@7      //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46

test_boolean_shortcircuit_binary_ops_or_contd@7:
    byte 0x726873                                                                    //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873                                                                                                                                                b"rhs"                                                                              boolean_binary_ops/contract.py:45
    frame_dig 1                                                                      //                                                     load or_msg#0 from f-stack                                                                                    (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0x726873,or_msg#0                                                                                                                                       b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:45
    concat                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {concat}                                                                                                                                                b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:45
    //                                                                               virtual: store tmp%16#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%16#0                                                                                                                                                                          b"rhs" + or_msg                                                                     boolean_binary_ops/contract.py:45
    frame_dig 3                                                                      //                                                     load rhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%16#0,rhs#0                                                                                                                                          log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:44-46
    uncover 1                                                                        //                                                     load tmp%16#0 from l-stack (no copy)                                                                          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | rhs#0,tmp%16#0                                                                                                                                          log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:44-46
    callsub log_and_return                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {log_and_return}                                                                                                                                        log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:44-46
    //                                                                               virtual: store tmp%17#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%17#0                                                                                                                                                                          log_and_return(\nrhs, b"rhs" + or_msg\n)                                            boolean_binary_ops/contract.py:44-46
    //                                                                               virtual: load tmp%17#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%17#0                                                                                                                                                                          log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46
    bz test_boolean_shortcircuit_binary_ops_bool_false@9                             //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@8     //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         log_and_return(lhs, b"lhs" + or_msg) or log_and_return(\nrhs, b"rhs" + or_msg\n)    boolean_binary_ops/contract.py:44-46

test_boolean_shortcircuit_binary_ops_bool_true@8:
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    //                                                                               virtual: store or_result%0#0 to l-stack (no copy)      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
    //                                                                               virtual: load or_result%0#0 from l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
    //                                                                               virtual: store or_result#0 to x-stack (no copy)        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |
    b test_boolean_shortcircuit_binary_ops_bool_merge@10                             //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |                                                   or_result#0

test_boolean_shortcircuit_binary_ops_bool_false@9:
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0
    //                                                                               virtual: store or_result%0#0 to l-stack (no copy)      (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
    //                                                                               virtual: load or_result%0#0 from l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result%0#0
    //                                                                               virtual: store or_result#0 to x-stack (no copy)        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@10   //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 |                                                   or_result#0

test_boolean_shortcircuit_binary_ops_bool_merge@10:
    frame_dig 5                                                                      //                                                     load lhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | lhs#0                                             or_result#0                                                                         lhs or rhs                                                                          boolean_binary_ops/contract.py:47
    frame_dig 3                                                                      //                                                     load rhs#0 from f-stack                                                                                       (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | lhs#0,rhs#0                                                                                                                           lhs or rhs                                                                          boolean_binary_ops/contract.py:47
    ||                                                                               //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | {||}                                                                                                                                  lhs or rhs                                                                          boolean_binary_ops/contract.py:47
    //                                                                               virtual: store tmp%18#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | (洧뎶) or_result#0 | tmp%18#0                                                                                                                                                        lhs or rhs                                                                          boolean_binary_ops/contract.py:47
    //                                                                               virtual: load or_result#0 from x-stack                 (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%18#0,or_result#0                                                                                                                                                              or_result == (lhs or rhs)                                                           boolean_binary_ops/contract.py:47
    //                                                                               virtual: load tmp%18#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | or_result#0,tmp%18#0                                                                                                                                                              or_result == (lhs or rhs)                                                           boolean_binary_ops/contract.py:47
    ==                                                                               //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | {==}                                                                                                                                                    or_result == (lhs or rhs)                                                           boolean_binary_ops/contract.py:47
    //                                                                               virtual: store tmp%19#0 to l-stack (no copy)           (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%19#0                                                                                                                                                                          or_result == (lhs or rhs)                                                           boolean_binary_ops/contract.py:47
    //                                                                               virtual: load tmp%19#0 from l-stack (no copy)          (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | tmp%19#0                                                                                                                                                                          assert or_result == (lhs or rhs)                                                    boolean_binary_ops/contract.py:47
    assert                                                                           //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         assert or_result == (lhs or rhs)                                                    boolean_binary_ops/contract.py:47
    frame_dig 2                                                                      //                                                     load loop_counter%1#0 from f-stack                                                                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | loop_counter%1#0                                                                                                                                        for rhs in (True, False):                                                           boolean_binary_ops/contract.py:37
    bnz test_boolean_shortcircuit_binary_ops_after_for@13                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         for rhs in (True, False):                                                           boolean_binary_ops/contract.py:37
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_1@12 //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         for rhs in (True, False):                                                           boolean_binary_ops/contract.py:37

test_boolean_shortcircuit_binary_ops_for_header_1@12:
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    frame_bury 2                                                                     //                                                     store loop_counter%1#0 to f-stack                                                                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0                                                                                                                                                       False                                                                               boolean_binary_ops/contract.py:37
    frame_bury 3                                                                     //                                                     store rhs#0 to f-stack                                                                                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         rhs                                                                                 boolean_binary_ops/contract.py:37
    b test_boolean_shortcircuit_binary_ops_for_body@2                                //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_after_for@13:
    frame_dig 4                                                                      //                                                     load loop_counter%0#0 from f-stack                                                                            (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | loop_counter%0#0                                                                                                                                        for lhs in (True, False):                                                           boolean_binary_ops/contract.py:36
    bnz test_boolean_shortcircuit_binary_ops_after_for@16                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         for lhs in (True, False):                                                           boolean_binary_ops/contract.py:36
    // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_1@15 //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         for lhs in (True, False):                                                           boolean_binary_ops/contract.py:36

test_boolean_shortcircuit_binary_ops_for_header_1@15:
    int 1                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 1
    frame_bury 4                                                                     //                                                     store loop_counter%0#0 to f-stack                                                                             (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |
    int 0                                                                            //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 | 0                                                                                                                                                       False                                                                               boolean_binary_ops/contract.py:36
    frame_bury 5                                                                     //                                                     store lhs#0 to f-stack                                                                                        (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |                                                                                                                                                         lhs                                                                                 boolean_binary_ops/contract.py:36
    b test_boolean_shortcircuit_binary_ops_for_body@1                                //                                                                                                                                                                   (洧뎽) and_msg#0,or_msg#0,loop_counter%1#0,rhs#0,loop_counter%0#0,lhs#0 |

test_boolean_shortcircuit_binary_ops_after_for@16:
    retsub                                                                           //


// test_cases.boolean_binary_ops.contract.bool_to_bytes(x: uint64) -> bytes:
bool_to_bytes:
    proto 1 1                                                                        //                                                                                                                                                                   (洧도) x#0 |                                                                                                                                                                                                                      @subroutine\ndef bool_to_bytes(x: bool) -> Bytes:                                   boolean_binary_ops/contract.py:29-30

bool_to_bytes_block@0:
    frame_dig -1                                                                     //                                                     load x#0 from parameters                                                                                      (洧도) x#0 | x#0                                                                                                                                                                                                                  b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:31
    bz bool_to_bytes_ternary_false@2                                                 //                                                                                                                                                                   (洧도) x#0 |                                                                                                                                                                                                                      b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:31
    // Implicit fall through to bool_to_bytes_ternary_true@1                         //                                                                                                                                                                   (洧도) x#0 |                                                                                                                                                                                                                      b"true" if x else b"false"                                                          boolean_binary_ops/contract.py:31

bool_to_bytes_ternary_true@1:
    byte 0x74727565                                                                  //                                                                                                                                                                   (洧도) x#0 | 0x74727565                                                                                                                                                                                                           Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:31
    //                                                                               virtual: store ternary_result%0#0 to x-stack (no copy) (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                                                                                                                                       Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:31
    b bool_to_bytes_ternary_merge@3                                                  //                                                                                                                                                                   (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                         ternary_result%0#0

bool_to_bytes_ternary_false@2:
    byte 0x66616c7365                                                                //                                                                                                                                                                   (洧도) x#0 | 0x66616c7365                                                                                                                                                                                                         Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:31
    //                                                                               virtual: store ternary_result%0#0 to x-stack (no copy) (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                                                                                                                                       Bytes(b"true" if x else b"false")                                                   boolean_binary_ops/contract.py:31
    // Implicit fall through to bool_to_bytes_ternary_merge@3                        //                                                                                                                                                                   (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                         ternary_result%0#0

bool_to_bytes_ternary_merge@3:
    //                                                                               virtual: load ternary_result%0#0 from x-stack          (洧도) x#0 | ternary_result%0#0                                                                                                                                                                                                       ternary_result%0#0    return Bytes(b"true" if x else b"false")                                            boolean_binary_ops/contract.py:31
    retsub                                                                           //                                                                                                                                                                   ternary_result%0#0                                                                                                                                                                                                             return Bytes(b"true" if x else b"false")                                            boolean_binary_ops/contract.py:31


// test_cases.boolean_binary_ops.contract.log_and_return(x: uint64, msg: bytes) -> uint64:
log_and_return:
    proto 2 1                                                                        //                                                                                                                                                                   (洧도) x#0,msg#0 |                                                                                                                                                                                                                @subroutine\ndef log_and_return(x: bool, msg: Bytes) -> bool:                       boolean_binary_ops/contract.py:50-51

log_and_return_block@0:
    frame_dig -1                                                                     //                                                     load msg#0 from parameters                                                                                    (洧도) x#0,msg#0 | msg#0                                                                                                                                                                                                          log(msg)                                                                            boolean_binary_ops/contract.py:52
    log                                                                              //                                                                                                                                                                   (洧도) x#0,msg#0 |                                                                                                                                                                                                                log(msg)                                                                            boolean_binary_ops/contract.py:52
    frame_dig -2                                                                     //                                                     load x#0 from parameters                                                                                      (洧도) x#0,msg#0 | x#0                                                                                                                                                                                                            return x                                                                            boolean_binary_ops/contract.py:53
    retsub                                                                           //                                                                                                                                                                   x#0                                                                                                                                                                                                                            return x                                                                            boolean_binary_ops/contract.py:53


// test_cases.boolean_binary_ops.contract.type_coercion() -> void:
type_coercion:
    proto 0 0                                                                        //                                                                                                                                                                                                                                                                                                                                                                                                  @subroutine\ndef type_coercion() -> None:                                           boolean_binary_ops/contract.py:56-57

type_coercion_block@0:
    retsub                                                                           //

