// Op                                                                                   // Op Description                          Stack (out)                                                                                                                                  X stack            Source code                                                      Source line

#pragma version 10

// test_cases.boolean_binary_ops.contract.BooleanBinaryOps.approval_program() -> uint64:
main_block@0:
        int 1                                                                           //                                         1                                                                                                                                                               True                                                             File "boolean_binary_ops/contract.py", line 6
        int 0                                                                           //                                         1,0                                                                                                                                                             False                                                            File "boolean_binary_ops/contract.py", line 6
        callsub test_boolean_binary_ops                                                 //                                                                                                                                                                                                         test_boolean_binary_ops(true=True, false=False)                  File "boolean_binary_ops/contract.py", line 6
        callsub test_boolean_shortcircuit_binary_ops                                    //                                                                                                                                                                                                         test_boolean_shortcircuit_binary_ops()                           File "boolean_binary_ops/contract.py", line 7
        int 1                                                                           //                                         1                                                                                                                                                               True                                                             File "boolean_binary_ops/contract.py", line 8
        return                                                                          //                                                                                                                                                                                                         return True                                                      File "boolean_binary_ops/contract.py", line 8


// test_cases.boolean_binary_ops.contract.test_boolean_binary_ops(true#0: uint64, false#0: uint64) -> void:
test_boolean_binary_ops:
        proto 2 0                                                                       //                                         (洧도) true#0,false#0 |                                                                                                                                            def test_boolean_binary_ops(*, true: bool, false: bool) -> None: File "boolean_binary_ops/contract.py", line 15

test_boolean_binary_ops_block@0:
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0                                                                                                                                     true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | true#0,false#0                                                                                                                             false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        &&                                                                              //                                         (洧도) true#0,false#0 | {&&}                                                                                                                                       true and false                                                   File "boolean_binary_ops/contract.py", line 16
        !                                                                               //                                         (洧도) true#0,false#0 | {!}                                                                                                                                        not (true and false)                                             File "boolean_binary_ops/contract.py", line 16
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert not (true and false)                                      File "boolean_binary_ops/contract.py", line 16
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0                                                                                                                                    false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | false#0,true#0                                                                                                                             true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        &&                                                                              //                                         (洧도) true#0,false#0 | {&&}                                                                                                                                       false and true                                                   File "boolean_binary_ops/contract.py", line 17
        !                                                                               //                                         (洧도) true#0,false#0 | {!}                                                                                                                                        not (false and true)                                             File "boolean_binary_ops/contract.py", line 17
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert not (false and true)                                      File "boolean_binary_ops/contract.py", line 17
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0                                                                                                                                     true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0,true#0                                                                                                                              true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        &&                                                                              //                                         (洧도) true#0,false#0 | {&&}                                                                                                                                       true and true                                                    File "boolean_binary_ops/contract.py", line 18
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert true and true                                             File "boolean_binary_ops/contract.py", line 18
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0                                                                                                                                    false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0,false#0                                                                                                                            false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        &&                                                                              //                                         (洧도) true#0,false#0 | {&&}                                                                                                                                       false and false                                                  File "boolean_binary_ops/contract.py", line 19
        !                                                                               //                                         (洧도) true#0,false#0 | {!}                                                                                                                                        not (false and false)                                            File "boolean_binary_ops/contract.py", line 19
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert not (false and false)                                     File "boolean_binary_ops/contract.py", line 19
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0                                                                                                                                     true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | true#0,false#0                                                                                                                             false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        ||                                                                              //                                         (洧도) true#0,false#0 | {||}                                                                                                                                       true or false                                                    File "boolean_binary_ops/contract.py", line 21
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert true or false                                             File "boolean_binary_ops/contract.py", line 21
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0                                                                                                                                    false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | false#0,true#0                                                                                                                             true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        ||                                                                              //                                         (洧도) true#0,false#0 | {||}                                                                                                                                       false or true                                                    File "boolean_binary_ops/contract.py", line 22
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert false or true                                             File "boolean_binary_ops/contract.py", line 22
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0                                                                                                                                     true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        frame_dig -2                                                                    // load true#0 from parameters             (洧도) true#0,false#0 | true#0,true#0                                                                                                                              true: bool                                                       File "boolean_binary_ops/contract.py", line 15
        ||                                                                              //                                         (洧도) true#0,false#0 | {||}                                                                                                                                       true or true                                                     File "boolean_binary_ops/contract.py", line 23
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert true or true                                              File "boolean_binary_ops/contract.py", line 23
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0                                                                                                                                    false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        frame_dig -1                                                                    // load false#0 from parameters            (洧도) true#0,false#0 | false#0,false#0                                                                                                                            false: bool                                                      File "boolean_binary_ops/contract.py", line 15
        ||                                                                              //                                         (洧도) true#0,false#0 | {||}                                                                                                                                       false or false                                                   File "boolean_binary_ops/contract.py", line 24
        !                                                                               //                                         (洧도) true#0,false#0 | {!}                                                                                                                                        not (false or false)                                             File "boolean_binary_ops/contract.py", line 24
        assert                                                                          //                                         (洧도) true#0,false#0 |                                                                                                                                            assert not (false or false)                                      File "boolean_binary_ops/contract.py", line 24
        retsub                                                                          //


// test_cases.boolean_binary_ops.contract.test_boolean_shortcircuit_binary_ops() -> void:
test_boolean_shortcircuit_binary_ops:
        proto 0 0                                                                       //                                                                                                                                                                                                         def test_boolean_shortcircuit_binary_ops() -> None:              File "boolean_binary_ops/contract.py", line 33
        int 0
        dup
        byte ""
        dupn 5                                                                          // allocate 8 to stack                     (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_block@0:
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_0@1 //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_header_0@1:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0
        frame_bury 4                                                                    // store tuple_index%0#0 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 1                                                          True                                                             File "boolean_binary_ops/contract.py", line 34
        frame_bury 2                                                                    // store lhs#0 to f-stack                  (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            lhs                                                              File "boolean_binary_ops/contract.py", line 34
        b test_boolean_shortcircuit_binary_ops_for_body@3                               //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_header_1@2:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0                                                          False                                                            File "boolean_binary_ops/contract.py", line 34
        frame_bury 2                                                                    // store lhs#0 to f-stack                  (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            lhs                                                              File "boolean_binary_ops/contract.py", line 34
        frame_dig 5                                                                     // load tuple_index%0#8 from f-stack       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#8
        frame_bury 4                                                                    // store tuple_index%0#0 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@3     //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_body@3:
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_header_0@4 //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_header_0@4:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0
        frame_bury 6                                                                    // store tuple_index%1#0 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 1                                                          True                                                             File "boolean_binary_ops/contract.py", line 35
        frame_bury 3                                                                    // store rhs#0 to f-stack                  (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            rhs                                                              File "boolean_binary_ops/contract.py", line 35
        b test_boolean_shortcircuit_binary_ops_for_body@6                               //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_header_1@5:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0                                                          False                                                            File "boolean_binary_ops/contract.py", line 35
        frame_bury 3                                                                    // store rhs#0 to f-stack                  (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            rhs                                                              File "boolean_binary_ops/contract.py", line 35
        frame_dig 7                                                                     // load tuple_index%1#7 from f-stack       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#7
        frame_bury 6                                                                    // store tuple_index%1#0 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_body@6     //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_body@6:
        frame_dig 2                                                                     // load lhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0                                                      lhs                                                              File "boolean_binary_ops/contract.py", line 34
        dup                                                                             // store lhs#0 to l-stack (copy)           (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,lhs#0                                                lhs                                                              File "boolean_binary_ops/contract.py", line 34
        callsub bool_to_bytes                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{bool_to_bytes}                                      bool_to_bytes(lhs)                                               File "boolean_binary_ops/contract.py", line 36
        byte "_"                                                                        //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%2#0,"_"                                          b"_"                                                             File "boolean_binary_ops/contract.py", line 36
        swap                                                                            // load tmp%2#0 from l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,"_",tmp%2#0                                          bool_to_bytes(lhs)                                               File "boolean_binary_ops/contract.py", line 36
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"_" + bool_to_bytes(lhs)                                        File "boolean_binary_ops/contract.py", line 36
        byte "_and_"                                                                    //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%3#0,"_and_"                                      b"_and_"                                                         File "boolean_binary_ops/contract.py", line 36
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"_" + bool_to_bytes(lhs) + b"_and_"                             File "boolean_binary_ops/contract.py", line 36
        frame_dig 3                                                                     // load rhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%4#0,rhs#0                                        rhs                                                              File "boolean_binary_ops/contract.py", line 35
        callsub bool_to_bytes                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%4#0,{bool_to_bytes}                              bool_to_bytes(rhs)                                               File "boolean_binary_ops/contract.py", line 36
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"_" + bool_to_bytes(lhs) + b"_and_" + bool_to_bytes(rhs)        File "boolean_binary_ops/contract.py", line 36
        dup                                                                             // store and_msg#0 to l-stack (copy)       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,and_msg#0,and_msg#0                                  and_msg                                                          File "boolean_binary_ops/contract.py", line 36
        frame_bury 0                                                                    // store and_msg#0 to f-stack              (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,and_msg#0                                            and_msg                                                          File "boolean_binary_ops/contract.py", line 36
        byte "lhs"                                                                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,and_msg#0,"lhs"                                      b"lhs"                                                           File "boolean_binary_ops/contract.py", line 37
        swap                                                                            // load and_msg#0 from l-stack (no copy)   (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,"lhs",and_msg#0                                      and_msg                                                          File "boolean_binary_ops/contract.py", line 36
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"lhs" + and_msg                                                 File "boolean_binary_ops/contract.py", line 37
        callsub log_and_return                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {log_and_return}                                           log_and_return(lhs, b"lhs" + and_msg)                            File "boolean_binary_ops/contract.py", line 37
        bz test_boolean_shortcircuit_binary_ops_bool_false@9                            //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + and_msg) and log_and_return(        File "boolean_binary_ops/contract.py", line 37
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_and_contd@7    //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + and_msg) and log_and_return(        File "boolean_binary_ops/contract.py", line 37

test_boolean_shortcircuit_binary_ops_and_contd@7:
        byte "rhs"                                                                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | "rhs"                                                      b"rhs"                                                           File "boolean_binary_ops/contract.py", line 38
        frame_dig 0                                                                     // load and_msg#0 from f-stack             (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | "rhs",and_msg#0                                            and_msg                                                          File "boolean_binary_ops/contract.py", line 36
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {concat}                                                   b"rhs" + and_msg                                                 File "boolean_binary_ops/contract.py", line 38
        frame_dig 3                                                                     // load rhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tmp%8#0,rhs#0                                              rhs                                                              File "boolean_binary_ops/contract.py", line 35
        swap                                                                            // load tmp%8#0 from l-stack (no copy)     (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,tmp%8#0                                              b"rhs" + and_msg                                                 File "boolean_binary_ops/contract.py", line 38
        callsub log_and_return                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {log_and_return}                                           log_and_return(                                                  File "boolean_binary_ops/contract.py", line 37
        bz test_boolean_shortcircuit_binary_ops_bool_false@9                            //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + and_msg) and log_and_return(        File "boolean_binary_ops/contract.py", line 37
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@8    //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + and_msg) and log_and_return(        File "boolean_binary_ops/contract.py", line 37

test_boolean_shortcircuit_binary_ops_bool_true@8:
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 1
        b test_boolean_shortcircuit_binary_ops_bool_merge@10                            //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | (洧뎶) and_result%10#0 |                   and_result%10#0

test_boolean_shortcircuit_binary_ops_bool_false@9:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@10  //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | (洧뎶) and_result%10#0 |                   and_result%10#0

test_boolean_shortcircuit_binary_ops_bool_merge@10:
        frame_dig 2                                                                     // load lhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | and_result#0,lhs#0                      and_result%10#0    lhs                                                              File "boolean_binary_ops/contract.py", line 34
        dup
        cover 2                                                                         // store lhs#0 to l-stack (copy)           (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,and_result#0,lhs#0                                   lhs                                                              File "boolean_binary_ops/contract.py", line 34
        frame_dig 3                                                                     // load rhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,and_result#0,lhs#0,rhs#0                             rhs                                                              File "boolean_binary_ops/contract.py", line 35
        dup
        cover 4                                                                         // store rhs#0 to l-stack (copy)           (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,and_result#0,lhs#0,rhs#0                       rhs                                                              File "boolean_binary_ops/contract.py", line 35
        &&                                                                              //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,and_result#0,{&&}                              lhs and rhs                                                      File "boolean_binary_ops/contract.py", line 40
        ==                                                                              //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,{==}                                           and_result == (lhs and rhs)                                      File "boolean_binary_ops/contract.py", line 40
        assert                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0                                                assert and_result == (lhs and rhs)                               File "boolean_binary_ops/contract.py", line 40
        dup                                                                             // load lhs#0 from l-stack (copy)          (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,lhs#0                                          lhs                                                              File "boolean_binary_ops/contract.py", line 34
        callsub bool_to_bytes                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,{bool_to_bytes}                                bool_to_bytes(lhs)                                               File "boolean_binary_ops/contract.py", line 41
        byte "_"                                                                        //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,tmp%13#0,"_"                                   b"_"                                                             File "boolean_binary_ops/contract.py", line 41
        swap                                                                            // load tmp%13#0 from l-stack (no copy)    (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,"_",tmp%13#0                                   bool_to_bytes(lhs)                                               File "boolean_binary_ops/contract.py", line 41
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,{concat}                                       b"_" + bool_to_bytes(lhs)                                        File "boolean_binary_ops/contract.py", line 41
        byte "_or_"                                                                     //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,tmp%14#0,"_or_"                                b"_or_"                                                          File "boolean_binary_ops/contract.py", line 41
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,lhs#0,{concat}                                       b"_" + bool_to_bytes(lhs) + b"_or_"                              File "boolean_binary_ops/contract.py", line 41
        uncover 2                                                                       // load rhs#0 from l-stack (no copy)       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%15#0,rhs#0                                       rhs                                                              File "boolean_binary_ops/contract.py", line 35
        callsub bool_to_bytes                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,tmp%15#0,{bool_to_bytes}                             bool_to_bytes(rhs)                                               File "boolean_binary_ops/contract.py", line 41
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"_" + bool_to_bytes(lhs) + b"_or_" + bool_to_bytes(rhs)         File "boolean_binary_ops/contract.py", line 41
        dup                                                                             // store or_msg#0 to l-stack (copy)        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,or_msg#0,or_msg#0                                    or_msg                                                           File "boolean_binary_ops/contract.py", line 41
        frame_bury 1                                                                    // store or_msg#0 to f-stack               (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,or_msg#0                                             or_msg                                                           File "boolean_binary_ops/contract.py", line 41
        byte "lhs"                                                                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,or_msg#0,"lhs"                                       b"lhs"                                                           File "boolean_binary_ops/contract.py", line 42
        swap                                                                            // load or_msg#0 from l-stack (no copy)    (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,"lhs",or_msg#0                                       or_msg                                                           File "boolean_binary_ops/contract.py", line 41
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | lhs#0,{concat}                                             b"lhs" + or_msg                                                  File "boolean_binary_ops/contract.py", line 42
        callsub log_and_return                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {log_and_return}                                           log_and_return(lhs, b"lhs" + or_msg)                             File "boolean_binary_ops/contract.py", line 42
        bnz test_boolean_shortcircuit_binary_ops_bool_true@12                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + or_msg) or log_and_return(          File "boolean_binary_ops/contract.py", line 42
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_or_contd@11    //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + or_msg) or log_and_return(          File "boolean_binary_ops/contract.py", line 42

test_boolean_shortcircuit_binary_ops_or_contd@11:
        byte "rhs"                                                                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | "rhs"                                                      b"rhs"                                                           File "boolean_binary_ops/contract.py", line 43
        frame_dig 1                                                                     // load or_msg#0 from f-stack              (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | "rhs",or_msg#0                                             or_msg                                                           File "boolean_binary_ops/contract.py", line 41
        concat                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {concat}                                                   b"rhs" + or_msg                                                  File "boolean_binary_ops/contract.py", line 43
        frame_dig 3                                                                     // load rhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tmp%19#0,rhs#0                                             rhs                                                              File "boolean_binary_ops/contract.py", line 35
        swap                                                                            // load tmp%19#0 from l-stack (no copy)    (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | rhs#0,tmp%19#0                                             b"rhs" + or_msg                                                  File "boolean_binary_ops/contract.py", line 43
        callsub log_and_return                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {log_and_return}                                           log_and_return(                                                  File "boolean_binary_ops/contract.py", line 42
        bz test_boolean_shortcircuit_binary_ops_bool_false@13                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + or_msg) or log_and_return(          File "boolean_binary_ops/contract.py", line 42
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_true@12   //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            log_and_return(lhs, b"lhs" + or_msg) or log_and_return(          File "boolean_binary_ops/contract.py", line 42

test_boolean_shortcircuit_binary_ops_bool_true@12:
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 1
        b test_boolean_shortcircuit_binary_ops_bool_merge@14                            //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | (洧뎶) or_result%21#0 |                    or_result%21#0

test_boolean_shortcircuit_binary_ops_bool_false@13:
        int 0                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | 0
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_bool_merge@14  //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | (洧뎶) or_result%21#0 |                    or_result%21#0

test_boolean_shortcircuit_binary_ops_bool_merge@14:
        frame_dig 2                                                                     // load lhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | or_result#0,lhs#0                       or_result%21#0     lhs                                                              File "boolean_binary_ops/contract.py", line 34
        frame_dig 3                                                                     // load rhs#0 from f-stack                 (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | or_result#0,lhs#0,rhs#0                                    rhs                                                              File "boolean_binary_ops/contract.py", line 35
        ||                                                                              //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | or_result#0,{||}                                           lhs or rhs                                                       File "boolean_binary_ops/contract.py", line 45
        ==                                                                              //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | {==}                                                       or_result == (lhs or rhs)                                        File "boolean_binary_ops/contract.py", line 45
        assert                                                                          //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            assert or_result == (lhs or rhs)                                 File "boolean_binary_ops/contract.py", line 45
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_footer@15  //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_footer@15:
        frame_dig 6                                                                     // load tuple_index%1#0 from f-stack       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#0
        dup                                                                             // store tuple_index%1#0 to l-stack (copy) (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#0,tuple_index%1#0
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#0,tuple_index%1#0,1
        +                                                                               //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#0,{+}
        frame_bury 7                                                                    // store tuple_index%1#7 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%1#0
        switch test_boolean_shortcircuit_binary_ops_for_header_1@5                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            for rhs in (True, False):                                        File "boolean_binary_ops/contract.py", line 35
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_after_for@16   //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            for rhs in (True, False):                                        File "boolean_binary_ops/contract.py", line 35

test_boolean_shortcircuit_binary_ops_after_for@16:
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_for_footer@17  //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |

test_boolean_shortcircuit_binary_ops_for_footer@17:
        frame_dig 4                                                                     // load tuple_index%0#0 from f-stack       (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#0
        dup                                                                             // store tuple_index%0#0 to l-stack (copy) (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#0,tuple_index%0#0
        int 1                                                                           //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#0,tuple_index%0#0,1
        +                                                                               //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#0,{+}
        frame_bury 5                                                                    // store tuple_index%0#8 to f-stack        (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 | tuple_index%0#0
        switch test_boolean_shortcircuit_binary_ops_for_header_1@2                      //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            for lhs in (True, False):                                        File "boolean_binary_ops/contract.py", line 34
        // Implicit fall through to test_boolean_shortcircuit_binary_ops_after_for@18   //                                         (洧뎽) and_msg#0,or_msg#0,lhs#0,rhs#0,tuple_index%0#0,tuple_index%0#8,tuple_index%1#0,tuple_index%1#7 |                                                            for lhs in (True, False):                                        File "boolean_binary_ops/contract.py", line 34

test_boolean_shortcircuit_binary_ops_after_for@18:
        retsub                                                                          //


// test_cases.boolean_binary_ops.contract.bool_to_bytes(x#0: uint64) -> bytes:
bool_to_bytes:
        proto 1 1                                                                       //                                         (洧도) x#0 |                                                                                                                                                       def bool_to_bytes(x: bool) -> Bytes:                             File "boolean_binary_ops/contract.py", line 28

bool_to_bytes_block@0:
        frame_dig -1                                                                    // load x#0 from parameters                (洧도) x#0 | x#0                                                                                                                                                   x: bool                                                          File "boolean_binary_ops/contract.py", line 28
        bz bool_to_bytes_ternary_false@2                                                //                                         (洧도) x#0 |                                                                                                                                                       Bytes(b"true") if x else Bytes(b"false")                         File "boolean_binary_ops/contract.py", line 29
        // Implicit fall through to bool_to_bytes_ternary_true@1                        //                                         (洧도) x#0 |                                                                                                                                                       Bytes(b"true") if x else Bytes(b"false")                         File "boolean_binary_ops/contract.py", line 29

bool_to_bytes_ternary_true@1:
        byte "true"                                                                     //                                         (洧도) x#0 | "true"                                                                                                                                                b"true"                                                          File "boolean_binary_ops/contract.py", line 29
        b bool_to_bytes_ternary_merge@3                                                 //                                         (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                           ternary_result%0#0

bool_to_bytes_ternary_false@2:
        byte "false"                                                                    //                                         (洧도) x#0 | "false"                                                                                                                                               b"false"                                                         File "boolean_binary_ops/contract.py", line 29
        // Implicit fall through to bool_to_bytes_ternary_merge@3                       //                                         (洧도) x#0 | (洧뎶) ternary_result%0#0 |                                                                                                           ternary_result%0#0

bool_to_bytes_ternary_merge@3:
        retsub                                                                          //                                         ternary_result%0#0                                                                                                                           ternary_result%0#0 return Bytes(b"true") if x else Bytes(b"false")                  File "boolean_binary_ops/contract.py", line 29


// test_cases.boolean_binary_ops.contract.log_and_return(x#0: uint64, msg#0: bytes) -> uint64:
log_and_return:
        proto 2 1                                                                       //                                         (洧도) x#0,msg#0 |                                                                                                                                                 def log_and_return(x: bool, msg: Bytes) -> bool:                 File "boolean_binary_ops/contract.py", line 49

log_and_return_block@0:
        frame_dig -1                                                                    // load msg#0 from parameters              (洧도) x#0,msg#0 | msg#0                                                                                                                                           msg: Bytes                                                       File "boolean_binary_ops/contract.py", line 49
        log                                                                             //                                         (洧도) x#0,msg#0 |                                                                                                                                                 log(msg)                                                         File "boolean_binary_ops/contract.py", line 50
        frame_dig -2                                                                    // load x#0 from parameters                (洧도) x#0,msg#0 | x#0                                                                                                                                             x: bool                                                          File "boolean_binary_ops/contract.py", line 49
        retsub                                                                          //                                         x#0                                                                                                                                                             return x                                                         File "boolean_binary_ops/contract.py", line 51

