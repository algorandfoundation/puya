{
  "version": 3,
  "sources": [
    "../contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMqC;AAAY;AAAzC;;;AACA;;;AACA;;;AACA;;;AACA;;;AAC+B;AAAY;AAA3C;;;AACO;AAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOR;;;AAEgB;;AAAA;;AAAA;AAAL;AAAP;AACY;;AAAA;;AAAA;AAAL;AAAP;AACO;;AAAA;AAAA;AAAP;AACY;;AAAA;AAAA;AAAL;AAAP;AAEO;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAP;AACY;;AAAA;AAAA;AAAL;AAAP;;AAGJ;;;AAEW;;;;;;;AAAA;;;;;;AAAM;;AAAA;AAAb;AAGJ;;;;;;;;AAEgB;;;;AACI;AAAR;;AACiB;;AAAA;AAAA;;;AAAP;;;AAAA;AAAA;AAA4B;;;;;;;AAA5B;AAAuC;;AAAA;;;AAAvC;AAAV;AAAA;;AACiC;;AAAA;AAAA;AAApB;;;AAAA;;;AACJ;;AAAA;;AAAA;AAD8C;;AAAA;AAAA;;;AAA1C;;;;AAGS;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAf;AAAP;AACgB;AAAA;;;AAAP;;;AAAA;AAAA;AAA4B;;;;;;AAA5B;AAAsC;;AAAA;;;AAAtC;AAAT;AAAA;;AACgC;;AAAA;AAAA;AAApB;;;AAAA;;;AACH;;AAAA;;AAAA;AAD2C;;AAAA;AAAA;;;AAAxC;;;;AAGS;;AAAA;;AAAA;AAAd;AAAP;AAVZ;;AAAA;;;;AADA;;AAAA;;;;;;;;AAAsB;AAAd;;;;;;;;AACkB;AAAd;;;;;;;;;;;;;AAaZ;;;AAEI;;AAAA;AACA;;AAAA;AAKI;AAAA;AAAA;AAAa;AAAb;AAAA;;AAAA;AACO;AAAJ;AAAP;AACI;;AAAA;AAAA;AAAA;;;AAAA;;AACQ;;AAAL;AAAP;;AADuC;AAAnC;AAAA;AAAgD;AAAb;AAAnC;;AAAA;;;;AAIR;;;;;;;AAEc;;AAAA;AAAA;AAAA;AAAL;;;AAAgB;AAAA;AAAA;AAAhB;;;;AACL;AAEI;AAGI;AAAA;AAAA;;;AAFJ;AAES;AAAA;AAAA;AAAL;;;AAFJ;AAEgB;AAAA;AAAA;AAAA;;;AADhB;;AACqB;AAAA;AAAA;AAAL;;;;AAApB;AAHI;AAII;AAAA;AAAA;;;AAHJ;AAGS;AAAA;AAAA;AAAL;;;AAJJ;AAIiB;AAAA;AAAA;;;AAHjB;AAGsB;AAAA;AAAA;AAAL;;;;AAArB;AAJI;AAKG;AAAA;AAAA;;;AAJH;AAIS;AAAA;AAAA;AAAA;;;AAHT;;AAGc;AAAA;AAAA;AAAL;;;;AAAb;AALI;AAMI;AAAA;AAAA;;;AALJ;AAKS;AAAA;AAAA;AAAL;;;AAJJ;;AAIe;AAAA;AAAA;AAAZ;;;;AAAP;AAEuD;;AAAhD;AAAA;;AAAC;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAD;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAP;AACkC;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAA3B;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAP;AAGyB;;AAAA;AAAA;AAAA;AADN;;AACM;;AAAA;;AAAA;AAAA;AAAA;;AAA7B;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAQ;;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AADe;;AAEH;AAAA;AAAA;AAAL;AAAP;;;;;;;;;;AACI;AAAA;AAAA;AAAA;AAAmB;AAAnB;AAAA;;AAAA;AAAD;;;AAA2C;;;AAA3C;AAAP;AACQ;AAAA;AAAA;AAAA;AAAkB;AAAlB;AAAA;;AAAA;AAAD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA4C;;AAA5C;AAAP;AACkB;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAX;;;;;;AAAA;AAAA;;;AAAP;AAEQ;AAAA;AAAA;AAAc;AAAd;AAAA;;AAAA;AAA2B;AAA5B;AAAiC;;AAAjC;AAAP;AACS;AAAA;AAAA;AAAa;AAAb;AAAA;;AAAA;AAAF;AAA8B;AAAD;AAA7B;AAAP;;AAHqC;;;;AAP9B;AAAA;AAAA;;AAAA;AAAA;;AAA2B;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAA3B;;AAAA;;;;AAA4C;;;;;AAAA;;;;;AAD3C;;AAAD;AAAC;;AAAA;AAA+C;;AAAhD;;;;AAAoB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAc/B;;;;;AAIW;AAAA;AAAA;AAAa;AAAb;AAAP;AACO;AAAA;;;AAAS;;AAAA;AAAA;AAAA;AAAT;;;;AAAP;AAIS;AAAA;AAAA;AAAa;AAAlB;AAAJ;;AACS;AAAL;;;AAAc;;AAAA;AAAA;AAAA;AAAd;;;;AAAJ;;AAHI;AAIG;;;AAHH;AAGG;;;AAAA;;AAAA;;;AAAA;;AAAA;;;;AAAP;AAEG;AAAP;;;AACQ;AACD;AAAP;;;AACQ;AACD;AAAA;AAAA;AAAA;;;AAAa;AAAb;;;AACC;AACD;AAAA;;;AAAS;AAAA;AAAA;AAAA;AAAT;;;AACC;AAEG;AAAmB;AAAnB;AAAP;AAEM;AACW;AAAA;AAAA;;AADX;AACW;;AAAA;AAAV;AAAwB;AAAxB;AAAP;AACc;AACG;AAAA;AAAA;AAAA;;;;;;;AADH;AACG;;AAAA;AAAV;AAAqC;AAArC;AAAP;;;;;;;;;;;;;;AAGJ;;;;AAEY;AAAA;AAAA;;AAAA;AAAsB;AAAvB;AAAP;AACO;AAAA;;;AAAM;AAAA;AAAA;;AAAA;AAAN;;;;AAAP;AACO;AAAA;;;AAAW;AAAA;AAAA;;AAAA;AAAX;;;;AAAP;AACQ;AAAA;AAAA;;AAAA;AAAsB;AAAvB;AAAP;AACI;AAAA;AAAQ;;AAAA;AAAA;AAAA;;AAAD;AAAA;AAAA;;;AAAC;;AACA;;AAAL;AAAP;AACI;AAAO;AAAA;AAAA;;;AAAP;AACQ;AAAL;AAAP;;AADI;AAAA;AAAa;;AAAA;;;;AAFb;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.boolean_binary_ops.contract.BooleanBinaryOps.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 2 3"
    },
    "7": {
      "op": "bytecblock 0x6c656674 0x 0x79 0x7269676874 0x6c65 \"ri\" 0x616263 \"z\" 0x6c6873 0x726873 0x6e65766572207365656e"
    },
    "54": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "55": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "1",
        "0"
      ]
    },
    "56": {
      "callsub": "test_cases.boolean_binary_ops.contract.test_boolean_binary_ops",
      "op": "callsub test_boolean_binary_ops",
      "stack_out": []
    },
    "59": {
      "callsub": "test_cases.boolean_binary_ops.contract.test_boolean_shortcircuit_binary_ops",
      "op": "callsub test_boolean_shortcircuit_binary_ops"
    },
    "62": {
      "callsub": "test_cases.boolean_binary_ops.contract.type_coercion",
      "op": "callsub type_coercion"
    },
    "65": {
      "callsub": "test_cases.boolean_binary_ops.contract.test_union_boolean_binary_ops",
      "op": "callsub test_union_boolean_binary_ops"
    },
    "68": {
      "callsub": "test_cases.boolean_binary_ops.contract.test_literal_boolean_binary_ops",
      "op": "callsub test_literal_boolean_binary_ops"
    },
    "71": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "72": {
      "op": "intc_0 // 0",
      "stack_out": [
        "1",
        "0"
      ]
    },
    "73": {
      "callsub": "test_cases.boolean_binary_ops.contract.test_literal_conditionals",
      "op": "callsub test_literal_conditionals",
      "stack_out": []
    },
    "76": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "77": {
      "op": "return",
      "stack_out": []
    },
    "78": {
      "subroutine": "_puya_lib.bytes_.is_substring",
      "params": {
        "item#0": "bytes",
        "sequence#0": "bytes"
      },
      "block": "is_substring",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "81": {
      "op": "intc_0 // 0",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "start#0"
      ]
    },
    "82": {
      "block": "is_substring_while_top@1",
      "stack_in": [
        "start#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "item#0 (copy)"
      ],
      "stack_out": [
        "start#0",
        "item#0 (copy)"
      ]
    },
    "84": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%0#0"
      ]
    },
    "85": {
      "op": "frame_dig 0",
      "defined_out": [
        "start#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%0#0",
        "start#0"
      ]
    },
    "87": {
      "op": "+",
      "defined_out": [
        "start#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%1#0"
      ]
    },
    "88": {
      "op": "frame_dig -1",
      "defined_out": [
        "sequence#0 (copy)",
        "start#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%1#0",
        "sequence#0 (copy)"
      ]
    },
    "90": {
      "op": "len",
      "defined_out": [
        "start#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "91": {
      "op": "<=",
      "defined_out": [
        "start#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%3#0"
      ]
    },
    "92": {
      "op": "bz is_substring_after_while@5",
      "stack_out": [
        "start#0"
      ]
    },
    "95": {
      "block": "is_substring_while_body@2",
      "stack_in": [
        "start#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "item#0 (copy)"
      ],
      "stack_out": [
        "start#0",
        "item#0 (copy)"
      ]
    },
    "97": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%4#0"
      ]
    },
    "98": {
      "op": "frame_dig 0",
      "defined_out": [
        "start#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%4#0",
        "start#0"
      ]
    },
    "100": {
      "op": "dup",
      "defined_out": [
        "start#0",
        "start#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%4#0",
        "start#0 (copy)",
        "start#0 (copy)"
      ]
    },
    "101": {
      "op": "cover 2",
      "stack_out": [
        "start#0",
        "start#0",
        "tmp%4#0",
        "start#0 (copy)"
      ]
    },
    "103": {
      "op": "+",
      "defined_out": [
        "start#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "start#0",
        "start#0",
        "tmp%5#0"
      ]
    },
    "104": {
      "op": "frame_dig -1",
      "defined_out": [
        "sequence#0 (copy)",
        "start#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "start#0",
        "start#0",
        "tmp%5#0",
        "sequence#0 (copy)"
      ]
    },
    "106": {
      "op": "uncover 2",
      "stack_out": [
        "start#0",
        "tmp%5#0",
        "sequence#0 (copy)",
        "start#0"
      ]
    },
    "108": {
      "op": "uncover 2",
      "stack_out": [
        "start#0",
        "sequence#0 (copy)",
        "start#0",
        "tmp%5#0"
      ]
    },
    "110": {
      "op": "substring3",
      "defined_out": [
        "start#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%6#0"
      ]
    },
    "111": {
      "op": "frame_dig -2",
      "stack_out": [
        "start#0",
        "tmp%6#0",
        "item#0 (copy)"
      ]
    },
    "113": {
      "op": "==",
      "defined_out": [
        "start#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "start#0",
        "tmp%7#0"
      ]
    },
    "114": {
      "op": "bz is_substring_after_if_else@4",
      "stack_out": [
        "start#0"
      ]
    },
    "117": {
      "block": "is_substring_if_body@3",
      "stack_in": [
        "start#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "start#0",
        "1"
      ]
    },
    "118": {
      "op": "swap"
    },
    "119": {
      "retsub": true,
      "op": "retsub"
    },
    "120": {
      "block": "is_substring_after_if_else@4",
      "stack_in": [
        "start#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "start#0",
        "start#0"
      ]
    },
    "122": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "start#0"
      ],
      "stack_out": [
        "start#0",
        "start#0",
        "1"
      ]
    },
    "123": {
      "op": "+",
      "stack_out": [
        "start#0",
        "start#0"
      ]
    },
    "124": {
      "op": "frame_bury 0",
      "defined_out": [
        "start#0"
      ],
      "stack_out": [
        "start#0"
      ]
    },
    "126": {
      "op": "b is_substring_while_top@1"
    },
    "129": {
      "block": "is_substring_after_while@5",
      "stack_in": [
        "start#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "start#0",
        "0"
      ]
    },
    "130": {
      "op": "swap"
    },
    "131": {
      "retsub": true,
      "op": "retsub"
    },
    "132": {
      "subroutine": "test_cases.boolean_binary_ops.contract.test_boolean_binary_ops",
      "params": {
        "true#0": "uint64",
        "false#0": "uint64"
      },
      "block": "test_boolean_binary_ops",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "135": {
      "op": "frame_dig -2",
      "defined_out": [
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "137": {
      "op": "frame_dig -1",
      "defined_out": [
        "false#0 (copy)",
        "true#0 (copy)"
      ],
      "stack_out": [
        "true#0 (copy)",
        "false#0 (copy)"
      ]
    },
    "139": {
      "op": "&&",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "140": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "141": {
      "op": "assert",
      "stack_out": []
    },
    "142": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "144": {
      "op": "frame_dig -2",
      "stack_out": [
        "false#0 (copy)",
        "true#0 (copy)"
      ]
    },
    "146": {
      "op": "&&",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "147": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "148": {
      "op": "assert",
      "stack_out": []
    },
    "149": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "151": {
      "op": "dup",
      "stack_out": [
        "true#0 (copy)",
        "true#0 (copy)"
      ]
    },
    "152": {
      "op": "&&",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "153": {
      "op": "assert",
      "stack_out": []
    },
    "154": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "156": {
      "op": "dup",
      "stack_out": [
        "false#0 (copy)",
        "false#0 (copy)"
      ]
    },
    "157": {
      "op": "&&",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "158": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "159": {
      "op": "assert",
      "stack_out": []
    },
    "160": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "162": {
      "op": "frame_dig -1",
      "stack_out": [
        "true#0 (copy)",
        "false#0 (copy)"
      ]
    },
    "164": {
      "op": "||",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "165": {
      "op": "assert",
      "stack_out": []
    },
    "166": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "168": {
      "op": "frame_dig -2",
      "stack_out": [
        "false#0 (copy)",
        "true#0 (copy)"
      ]
    },
    "170": {
      "op": "||",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "171": {
      "op": "assert",
      "stack_out": []
    },
    "172": {
      "op": "frame_dig -2",
      "stack_out": [
        "true#0 (copy)"
      ]
    },
    "174": {
      "op": "dup",
      "stack_out": [
        "true#0 (copy)",
        "true#0 (copy)"
      ]
    },
    "175": {
      "op": "||",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "176": {
      "op": "assert",
      "stack_out": []
    },
    "177": {
      "op": "frame_dig -1",
      "stack_out": [
        "false#0 (copy)"
      ]
    },
    "179": {
      "op": "dup",
      "stack_out": [
        "false#0 (copy)",
        "false#0 (copy)"
      ]
    },
    "180": {
      "op": "||",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "182": {
      "op": "assert",
      "stack_out": []
    },
    "183": {
      "retsub": true,
      "op": "retsub"
    },
    "184": {
      "subroutine": "test_cases.boolean_binary_ops.contract.bool_to_bytes",
      "params": {
        "x#0": "uint64"
      },
      "block": "bool_to_bytes",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "187": {
      "op": "pushbytes 0x66616c7365",
      "defined_out": [
        "0x66616c7365"
      ],
      "stack_out": [
        "0x66616c7365"
      ]
    },
    "194": {
      "op": "pushbytes 0x74727565",
      "defined_out": [
        "0x66616c7365",
        "0x74727565"
      ],
      "stack_out": [
        "0x66616c7365",
        "0x74727565"
      ]
    },
    "200": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x66616c7365",
        "0x74727565",
        "x#0 (copy)"
      ],
      "stack_out": [
        "0x66616c7365",
        "0x74727565",
        "x#0 (copy)"
      ]
    },
    "202": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0"
      ]
    },
    "203": {
      "retsub": true,
      "op": "retsub"
    },
    "204": {
      "subroutine": "test_cases.boolean_binary_ops.contract.test_boolean_shortcircuit_binary_ops",
      "params": {},
      "block": "test_boolean_shortcircuit_binary_ops",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "207": {
      "op": "intc_0 // 0",
      "stack_out": [
        "and_msg#0"
      ]
    },
    "208": {
      "op": "dup",
      "stack_out": [
        "and_msg#0",
        "or_msg#0"
      ]
    },
    "209": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0"
      ]
    },
    "210": {
      "op": "dup",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0"
      ]
    },
    "211": {
      "op": "intc_0 // 0",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0"
      ]
    },
    "212": {
      "op": "intc_1 // 1",
      "defined_out": [
        "lhs#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "213": {
      "block": "test_boolean_shortcircuit_binary_ops_for_body@1",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "loop_counter%1#0"
      ]
    },
    "214": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "216": {
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%1#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0"
      ]
    },
    "217": {
      "op": "frame_bury 3",
      "defined_out": [
        "loop_counter%1#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "219": {
      "block": "test_boolean_shortcircuit_binary_ops_for_body@2",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "lhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0"
      ]
    },
    "221": {
      "op": "dup",
      "defined_out": [
        "lhs#0",
        "lhs#0 (copy)"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "lhs#0 (copy)"
      ]
    },
    "222": {
      "callsub": "test_cases.boolean_binary_ops.contract.bool_to_bytes",
      "op": "callsub bool_to_bytes",
      "defined_out": [
        "lhs#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%0#0"
      ]
    },
    "225": {
      "op": "pushbytes 0x5f",
      "defined_out": [
        "0x5f",
        "lhs#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%0#0",
        "0x5f"
      ]
    },
    "228": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "0x5f",
        "tmp%0#0"
      ]
    },
    "229": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%1#0"
      ]
    },
    "230": {
      "op": "pushbytes 0x5f616e645f",
      "defined_out": [
        "0x5f616e645f",
        "lhs#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%1#0",
        "0x5f616e645f"
      ]
    },
    "237": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%2#0"
      ]
    },
    "238": {
      "op": "frame_dig 3",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%2#0",
        "rhs#0"
      ]
    },
    "240": {
      "callsub": "test_cases.boolean_binary_ops.contract.bool_to_bytes",
      "op": "callsub bool_to_bytes",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "243": {
      "op": "concat",
      "defined_out": [
        "and_msg#0",
        "lhs#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_msg#0"
      ]
    },
    "244": {
      "op": "dup",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_msg#0",
        "and_msg#0"
      ]
    },
    "245": {
      "op": "frame_bury 0",
      "defined_out": [
        "and_msg#0",
        "lhs#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_msg#0"
      ]
    },
    "247": {
      "op": "bytec 8 // 0x6c6873",
      "defined_out": [
        "0x6c6873",
        "and_msg#0",
        "lhs#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_msg#0",
        "0x6c6873"
      ]
    },
    "249": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "0x6c6873",
        "and_msg#0"
      ]
    },
    "250": {
      "op": "concat",
      "defined_out": [
        "and_msg#0",
        "lhs#0",
        "rhs#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%4#0"
      ]
    },
    "251": {
      "callsub": "test_cases.boolean_binary_ops.contract.log_and_return",
      "op": "callsub log_and_return",
      "defined_out": [
        "and_msg#0",
        "lhs#0",
        "rhs#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%5#0"
      ]
    },
    "254": {
      "op": "bz test_boolean_shortcircuit_binary_ops_bool_false@5",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "257": {
      "block": "test_boolean_shortcircuit_binary_ops_and_contd@3",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "bytec 9 // 0x726873",
      "defined_out": [
        "0x726873"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "0x726873"
      ]
    },
    "259": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x726873",
        "and_msg#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "0x726873",
        "and_msg#0"
      ]
    },
    "261": {
      "op": "concat",
      "defined_out": [
        "and_msg#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%6#0"
      ]
    },
    "262": {
      "op": "frame_dig 3",
      "defined_out": [
        "and_msg#0",
        "rhs#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%6#0",
        "rhs#0"
      ]
    },
    "264": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "tmp%6#0"
      ]
    },
    "265": {
      "callsub": "test_cases.boolean_binary_ops.contract.log_and_return",
      "op": "callsub log_and_return",
      "defined_out": [
        "and_msg#0",
        "rhs#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%7#0"
      ]
    },
    "268": {
      "op": "bz test_boolean_shortcircuit_binary_ops_bool_false@5",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "271": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_true@4",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "and_result%0#0"
      ]
    },
    "272": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_merge@6",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "and_result%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "and_result%0#0",
        "lhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0"
      ]
    },
    "274": {
      "op": "dup",
      "defined_out": [
        "and_result%0#0",
        "lhs#0",
        "lhs#0 (copy)"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0 (copy)",
        "lhs#0 (copy)"
      ]
    },
    "275": {
      "op": "cover 2",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0 (copy)"
      ]
    },
    "277": {
      "op": "frame_dig 3",
      "defined_out": [
        "and_result%0#0",
        "lhs#0",
        "lhs#0 (copy)",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0 (copy)",
        "rhs#0"
      ]
    },
    "279": {
      "op": "dup",
      "defined_out": [
        "and_result%0#0",
        "lhs#0",
        "lhs#0 (copy)",
        "rhs#0",
        "rhs#0 (copy)"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0 (copy)",
        "rhs#0 (copy)",
        "rhs#0 (copy)"
      ]
    },
    "280": {
      "op": "cover 4",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "and_result%0#0",
        "lhs#0 (copy)",
        "rhs#0 (copy)"
      ]
    },
    "282": {
      "op": "&&",
      "defined_out": [
        "and_result#0",
        "lhs#0",
        "rhs#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "and_result#0",
        "tmp%8#0"
      ]
    },
    "283": {
      "op": "==",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%9#0"
      ]
    },
    "284": {
      "op": "assert",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0"
      ]
    },
    "285": {
      "op": "dup",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "lhs#0 (copy)"
      ]
    },
    "286": {
      "callsub": "test_cases.boolean_binary_ops.contract.bool_to_bytes",
      "op": "callsub bool_to_bytes",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%10#0"
      ]
    },
    "289": {
      "op": "pushbytes 0x5f",
      "defined_out": [
        "0x5f",
        "lhs#0",
        "rhs#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%10#0",
        "0x5f"
      ]
    },
    "292": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "0x5f",
        "tmp%10#0"
      ]
    },
    "293": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%11#0"
      ]
    },
    "294": {
      "op": "pushbytes 0x5f6f725f",
      "defined_out": [
        "0x5f6f725f",
        "lhs#0",
        "rhs#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%11#0",
        "0x5f6f725f"
      ]
    },
    "300": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "lhs#0",
        "tmp%12#0"
      ]
    },
    "301": {
      "op": "uncover 2",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%12#0",
        "rhs#0"
      ]
    },
    "303": {
      "callsub": "test_cases.boolean_binary_ops.contract.bool_to_bytes",
      "op": "callsub bool_to_bytes",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "306": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "or_msg#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "or_msg#0"
      ]
    },
    "307": {
      "op": "dup",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "or_msg#0",
        "or_msg#0"
      ]
    },
    "308": {
      "op": "frame_bury 1",
      "defined_out": [
        "lhs#0",
        "or_msg#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "or_msg#0"
      ]
    },
    "310": {
      "op": "bytec 8 // 0x6c6873",
      "defined_out": [
        "0x6c6873",
        "lhs#0",
        "or_msg#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "or_msg#0",
        "0x6c6873"
      ]
    },
    "312": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "0x6c6873",
        "or_msg#0"
      ]
    },
    "313": {
      "op": "concat",
      "defined_out": [
        "lhs#0",
        "or_msg#0",
        "rhs#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0",
        "tmp%14#0"
      ]
    },
    "314": {
      "callsub": "test_cases.boolean_binary_ops.contract.log_and_return",
      "op": "callsub log_and_return",
      "defined_out": [
        "lhs#0",
        "or_msg#0",
        "rhs#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%15#0"
      ]
    },
    "317": {
      "op": "bnz test_boolean_shortcircuit_binary_ops_bool_true@8",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "320": {
      "block": "test_boolean_shortcircuit_binary_ops_or_contd@7",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "bytec 9 // 0x726873",
      "defined_out": [
        "0x726873"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "0x726873"
      ]
    },
    "322": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x726873",
        "or_msg#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "0x726873",
        "or_msg#0"
      ]
    },
    "324": {
      "op": "concat",
      "defined_out": [
        "or_msg#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%16#0"
      ]
    },
    "325": {
      "op": "frame_dig 3",
      "defined_out": [
        "or_msg#0",
        "rhs#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%16#0",
        "rhs#0"
      ]
    },
    "327": {
      "op": "swap",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0",
        "tmp%16#0"
      ]
    },
    "328": {
      "callsub": "test_cases.boolean_binary_ops.contract.log_and_return",
      "op": "callsub log_and_return",
      "defined_out": [
        "or_msg#0",
        "rhs#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%17#0"
      ]
    },
    "331": {
      "op": "bz test_boolean_shortcircuit_binary_ops_bool_false@9",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "334": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_true@8",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result%0#0"
      ]
    },
    "335": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_merge@10",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result%0#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "lhs#0",
        "or_result%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result%0#0",
        "lhs#0"
      ]
    },
    "337": {
      "op": "frame_dig 3",
      "defined_out": [
        "lhs#0",
        "or_result%0#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result%0#0",
        "lhs#0",
        "rhs#0"
      ]
    },
    "339": {
      "op": "||",
      "defined_out": [
        "lhs#0",
        "or_result#0",
        "rhs#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result#0",
        "tmp%18#0"
      ]
    },
    "340": {
      "op": "==",
      "defined_out": [
        "lhs#0",
        "rhs#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "tmp%19#0"
      ]
    },
    "341": {
      "op": "assert",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "342": {
      "block": "test_boolean_shortcircuit_binary_ops_for_footer@11",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "loop_counter%1#0"
      ]
    },
    "344": {
      "op": "switch test_boolean_shortcircuit_binary_ops_for_header_1@12",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "348": {
      "block": "test_boolean_shortcircuit_binary_ops_for_footer@14",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "loop_counter%0#0"
      ]
    },
    "350": {
      "op": "switch test_boolean_shortcircuit_binary_ops_for_header_1@15",
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "354": {
      "block": "test_boolean_shortcircuit_binary_ops_after_for@16",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "355": {
      "block": "test_boolean_shortcircuit_binary_ops_for_header_1@15",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "loop_counter%0#0"
      ]
    },
    "356": {
      "op": "frame_bury 4",
      "defined_out": [
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "358": {
      "op": "intc_0 // 0",
      "defined_out": [
        "lhs#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "lhs#0"
      ]
    },
    "359": {
      "op": "frame_bury 5",
      "defined_out": [
        "lhs#0",
        "loop_counter%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "361": {
      "op": "b test_boolean_shortcircuit_binary_ops_for_body@1"
    },
    "364": {
      "block": "test_boolean_shortcircuit_binary_ops_for_header_1@12",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "loop_counter%1#0"
      ]
    },
    "365": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_counter%1#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "367": {
      "op": "intc_0 // 0",
      "defined_out": [
        "loop_counter%1#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "rhs#0"
      ]
    },
    "368": {
      "op": "frame_bury 3",
      "defined_out": [
        "loop_counter%1#0",
        "rhs#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ]
    },
    "370": {
      "op": "b test_boolean_shortcircuit_binary_ops_for_body@2"
    },
    "373": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_false@9",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "or_result%0#0"
      ]
    },
    "374": {
      "op": "b test_boolean_shortcircuit_binary_ops_bool_merge@10"
    },
    "377": {
      "block": "test_boolean_shortcircuit_binary_ops_bool_false@5",
      "stack_in": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_msg#0",
        "or_msg#0",
        "loop_counter%1#0",
        "rhs#0",
        "loop_counter%0#0",
        "lhs#0",
        "and_result%0#0"
      ]
    },
    "378": {
      "op": "b test_boolean_shortcircuit_binary_ops_bool_merge@6"
    },
    "381": {
      "subroutine": "test_cases.boolean_binary_ops.contract.log_and_return",
      "params": {
        "x#0": "uint64",
        "msg#0": "bytes"
      },
      "block": "log_and_return",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "384": {
      "op": "frame_dig -1",
      "defined_out": [
        "msg#0 (copy)"
      ],
      "stack_out": [
        "msg#0 (copy)"
      ]
    },
    "386": {
      "op": "log",
      "stack_out": []
    },
    "387": {
      "op": "frame_dig -2",
      "defined_out": [
        "x#0 (copy)"
      ],
      "stack_out": [
        "x#0 (copy)"
      ]
    },
    "389": {
      "retsub": true,
      "op": "retsub"
    },
    "390": {
      "subroutine": "test_cases.boolean_binary_ops.contract.type_coercion",
      "params": {},
      "block": "type_coercion",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "391": {
      "op": "dup",
      "stack_out": [
        "0",
        "0"
      ]
    },
    "392": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "393": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "OptIn"
      ]
    },
    "394": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "OptIn",
        "0"
      ]
    },
    "395": {
      "op": "uncover 2",
      "stack_out": [
        "OptIn",
        "0",
        "tmp%0#0"
      ]
    },
    "397": {
      "op": "select",
      "defined_out": [
        "b#0"
      ],
      "stack_out": [
        "b#0"
      ]
    },
    "398": {
      "op": "intc_0 // 0",
      "stack_out": [
        "b#0",
        "0"
      ]
    },
    "399": {
      "op": ">",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "400": {
      "op": "assert",
      "stack_out": []
    },
    "401": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "403": {
      "op": "intc_0 // 0",
      "stack_out": [
        "appl",
        "0"
      ]
    },
    "404": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "405": {
      "op": "bz type_coercion_ternary_false@2",
      "stack_out": []
    },
    "408": {
      "block": "type_coercion_ternary_true@1",
      "stack_in": [],
      "op": "pushint 6 // appl",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "410": {
      "block": "type_coercion_ternary_merge@3",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "appl"
      ]
    },
    "412": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "413": {
      "op": "assert",
      "stack_out": []
    },
    "414": {
      "retsub": true,
      "op": "retsub"
    },
    "415": {
      "block": "type_coercion_ternary_false@2",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "416": {
      "op": "dup",
      "stack_out": [
        "0",
        "0"
      ]
    },
    "417": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "418": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "OptIn"
      ]
    },
    "419": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "OptIn",
        "0"
      ]
    },
    "420": {
      "op": "uncover 2",
      "stack_out": [
        "OptIn",
        "0",
        "tmp%3#0"
      ]
    },
    "422": {
      "op": "select",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "423": {
      "op": "b type_coercion_ternary_merge@3"
    },
    "426": {
      "subroutine": "test_cases.boolean_binary_ops.contract.test_union_boolean_binary_ops",
      "params": {},
      "block": "test_union_boolean_binary_ops",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "429": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0"
      ]
    },
    "430": {
      "op": "dupn 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0"
      ]
    },
    "432": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0"
      ]
    },
    "433": {
      "op": "dupn 4",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x"
      ]
    },
    "435": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%0#0"
      ]
    },
    "436": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%0#0",
        "0"
      ]
    },
    "437": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%1#0"
      ]
    },
    "438": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "441": {
      "block": "test_union_boolean_binary_ops_or_contd@1",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1"
      ]
    },
    "442": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1",
        "0"
      ]
    },
    "443": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%2#0"
      ]
    },
    "444": {
      "op": "bz test_union_boolean_binary_ops_bool_false@3",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "447": {
      "block": "test_union_boolean_binary_ops_bool_true@2",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%0#0"
      ]
    },
    "448": {
      "block": "test_union_boolean_binary_ops_bool_merge@4",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "449": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0"
      ]
    },
    "450": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0",
        "0"
      ]
    },
    "451": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%3#0"
      ]
    },
    "452": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@8",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "455": {
      "block": "test_union_boolean_binary_ops_or_contd@5",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "456": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%4#0"
      ]
    },
    "457": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%4#0",
        "0"
      ]
    },
    "458": {
      "op": "!=",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%5#0"
      ]
    },
    "459": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@8",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "462": {
      "block": "test_union_boolean_binary_ops_or_contd@6",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "463": {
      "op": "len",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%6#0"
      ]
    },
    "464": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%6#0",
        "0"
      ]
    },
    "465": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%7#0"
      ]
    },
    "466": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@8",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "469": {
      "block": "test_union_boolean_binary_ops_or_contd@7",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 7 // \"z\"",
      "defined_out": [
        "\"z\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"z\""
      ]
    },
    "471": {
      "op": "len",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%8#0"
      ]
    },
    "472": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%8#0",
        "0"
      ]
    },
    "473": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%9#0"
      ]
    },
    "474": {
      "op": "bz test_union_boolean_binary_ops_bool_false@9",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "477": {
      "block": "test_union_boolean_binary_ops_bool_true@8",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%1#0"
      ]
    },
    "478": {
      "block": "test_union_boolean_binary_ops_bool_merge@10",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%1#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "479": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0"
      ]
    },
    "480": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0",
        "0"
      ]
    },
    "481": {
      "op": "!=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%10#0"
      ]
    },
    "482": {
      "op": "bnz test_union_boolean_binary_ops_and_contd@12",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "485": {
      "block": "test_union_boolean_binary_ops_or_contd@11",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "486": {
      "op": "len",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%11#0"
      ]
    },
    "487": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%11#0",
        "0"
      ]
    },
    "488": {
      "op": "!=",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%12#0"
      ]
    },
    "489": {
      "op": "bz test_union_boolean_binary_ops_bool_false@15",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "492": {
      "block": "test_union_boolean_binary_ops_and_contd@12",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0"
      ]
    },
    "493": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0",
        "0"
      ]
    },
    "494": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%13#0"
      ]
    },
    "495": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@14",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "498": {
      "block": "test_union_boolean_binary_ops_or_contd@13",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "499": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%14#0"
      ]
    },
    "500": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%14#0",
        "0"
      ]
    },
    "501": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%15#0"
      ]
    },
    "502": {
      "op": "bz test_union_boolean_binary_ops_bool_false@15",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "505": {
      "block": "test_union_boolean_binary_ops_bool_true@14",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "and_result%0#0"
      ]
    },
    "506": {
      "block": "test_union_boolean_binary_ops_bool_merge@16",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "and_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "507": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0"
      ]
    },
    "508": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0",
        "0"
      ]
    },
    "509": {
      "op": "!=",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%16#0"
      ]
    },
    "510": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@19",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "513": {
      "block": "test_union_boolean_binary_ops_or_contd@17",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "514": {
      "op": "len",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%17#0"
      ]
    },
    "515": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%17#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%17#0",
        "0"
      ]
    },
    "516": {
      "op": "!=",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%18#0"
      ]
    },
    "517": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@19",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "520": {
      "block": "test_union_boolean_binary_ops_or_contd@18",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 7 // \"z\"",
      "defined_out": [
        "\"z\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"z\""
      ]
    },
    "522": {
      "op": "len",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%19#0"
      ]
    },
    "523": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%19#0",
        "0"
      ]
    },
    "524": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%20#0"
      ]
    },
    "525": {
      "op": "bz test_union_boolean_binary_ops_bool_false@20",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "528": {
      "block": "test_union_boolean_binary_ops_bool_true@19",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%2#0"
      ]
    },
    "529": {
      "block": "test_union_boolean_binary_ops_bool_merge@21",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%2#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "530": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0"
      ]
    },
    "531": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0",
        "0"
      ]
    },
    "532": {
      "op": "!=",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%21#0"
      ]
    },
    "533": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@24",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "536": {
      "block": "test_union_boolean_binary_ops_or_contd@22",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_2 // 0x79",
      "defined_out": [
        "0x79"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x79"
      ]
    },
    "537": {
      "op": "len",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%22#0"
      ]
    },
    "538": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%22#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%22#0",
        "0"
      ]
    },
    "539": {
      "op": "!=",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%23#0"
      ]
    },
    "540": {
      "op": "bnz test_union_boolean_binary_ops_bool_true@24",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "543": {
      "block": "test_union_boolean_binary_ops_or_contd@23",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 7 // \"z\"",
      "defined_out": [
        "\"z\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"z\""
      ]
    },
    "545": {
      "op": "len",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%24#0"
      ]
    },
    "546": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%24#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%24#0",
        "0"
      ]
    },
    "547": {
      "op": "!=",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%25#0"
      ]
    },
    "548": {
      "op": "bz test_union_boolean_binary_ops_bool_false@25",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "551": {
      "block": "test_union_boolean_binary_ops_bool_true@24",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%3#0"
      ]
    },
    "552": {
      "block": "test_union_boolean_binary_ops_bool_merge@26",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%3#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "553": {
      "op": "bytec 5 // \"ri\"",
      "defined_out": [
        "\"ri\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"ri\""
      ]
    },
    "555": {
      "op": "len",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%26#0"
      ]
    },
    "556": {
      "op": "frame_bury 5",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "558": {
      "op": "bytec_0 // \"left\"",
      "defined_out": [
        "\"left\"",
        "tmp%26#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"left\""
      ]
    },
    "559": {
      "op": "len",
      "defined_out": [
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%27#0"
      ]
    },
    "560": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%27#0",
        "0"
      ]
    },
    "561": {
      "op": "==",
      "defined_out": [
        "tmp%26#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%28#0"
      ]
    },
    "562": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@28",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "565": {
      "block": "test_union_boolean_binary_ops_ternary_true@27",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_0 // \"left\"",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0"
      ]
    },
    "566": {
      "op": "frame_bury 1",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "568": {
      "block": "test_union_boolean_binary_ops_ternary_merge@29",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0"
      ]
    },
    "570": {
      "op": "len",
      "defined_out": [
        "ternary_result%1#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%29#0"
      ]
    },
    "571": {
      "op": "frame_dig 5",
      "defined_out": [
        "ternary_result%1#0",
        "tmp%26#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%29#0",
        "tmp%26#0"
      ]
    },
    "573": {
      "op": "<",
      "defined_out": [
        "ternary_result%1#0",
        "tmp%26#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%30#0"
      ]
    },
    "574": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@31",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "577": {
      "block": "test_union_boolean_binary_ops_ternary_true@30",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%0#0"
      ]
    },
    "578": {
      "block": "test_union_boolean_binary_ops_ternary_merge@32",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "579": {
      "op": "bytec 4 // \"le\"",
      "defined_out": [
        "\"le\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"le\""
      ]
    },
    "581": {
      "op": "len",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%32#0"
      ]
    },
    "582": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%32#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%32#0",
        "0"
      ]
    },
    "583": {
      "op": "==",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%33#0"
      ]
    },
    "584": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@34",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "587": {
      "block": "test_union_boolean_binary_ops_ternary_true@33",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 4 // \"le\"",
      "defined_out": [
        "ternary_result%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%3#0"
      ]
    },
    "589": {
      "block": "test_union_boolean_binary_ops_ternary_merge@35",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%3#0"
      ],
      "op": "len",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%34#0"
      ]
    },
    "590": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%34#0",
        "tmp%34#0"
      ]
    },
    "591": {
      "op": "frame_bury 6",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%34#0"
      ]
    },
    "593": {
      "op": "bytec_3 // \"right\"",
      "defined_out": [
        "\"right\"",
        "tmp%34#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%34#0",
        "\"right\""
      ]
    },
    "594": {
      "op": "len",
      "defined_out": [
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "595": {
      "op": ">",
      "defined_out": [
        "tmp%34#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%36#0"
      ]
    },
    "596": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@37",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "599": {
      "block": "test_union_boolean_binary_ops_ternary_true@36",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%2#0"
      ]
    },
    "600": {
      "block": "test_union_boolean_binary_ops_ternary_merge@41",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%2#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "601": {
      "op": "bytec 10 // 0x6e65766572207365656e",
      "defined_out": [
        "0x6e65766572207365656e"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x6e65766572207365656e"
      ]
    },
    "603": {
      "op": "len",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%40#0"
      ]
    },
    "604": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%40#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%40#0",
        "0"
      ]
    },
    "605": {
      "op": "==",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%41#0"
      ]
    },
    "606": {
      "op": "bytec 6 // 0x616263",
      "defined_out": [
        "0x616263",
        "tmp%41#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%41#0",
        "0x616263"
      ]
    },
    "608": {
      "op": "bytec 10 // 0x6e65766572207365656e",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%41#0",
        "0x616263",
        "0x6e65766572207365656e"
      ]
    },
    "610": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x616263",
        "0x6e65766572207365656e",
        "tmp%41#0"
      ]
    },
    "612": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0"
      ]
    },
    "613": {
      "op": "dup",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0",
        "select%0#0"
      ]
    },
    "614": {
      "op": "frame_bury 0",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0"
      ]
    },
    "616": {
      "op": "len",
      "defined_out": [
        "bytes_length%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "bytes_length%0#0"
      ]
    },
    "617": {
      "op": "frame_bury 3",
      "defined_out": [
        "bytes_length%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "619": {
      "op": "intc_0 // 0",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0"
      ]
    },
    "620": {
      "op": "frame_bury 4",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "622": {
      "block": "test_union_boolean_binary_ops_for_header@42",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0"
      ]
    },
    "624": {
      "op": "frame_dig 3",
      "defined_out": [
        "bytes_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0",
        "bytes_length%0#0"
      ]
    },
    "626": {
      "op": "<",
      "defined_out": [
        "bytes_length%0#0",
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "continue_looping%0#0"
      ]
    },
    "627": {
      "op": "bz test_union_boolean_binary_ops_after_for@45",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "630": {
      "block": "test_union_boolean_binary_ops_for_body@43",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0"
      ]
    },
    "632": {
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0",
        "item_index_internal%0#0"
      ]
    },
    "634": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "635": {
      "op": "cover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0",
        "select%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "637": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0",
        "select%0#0",
        "item_index_internal%0#0 (copy)",
        "1"
      ]
    },
    "638": {
      "op": "extract3",
      "defined_out": [
        "b#0",
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0",
        "b#0"
      ]
    },
    "639": {
      "op": "swap",
      "defined_out": [
        "b#0",
        "idx#0",
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "b#0",
        "idx#0"
      ]
    },
    "640": {
      "op": "bytec 6 // 0x616263",
      "defined_out": [
        "0x616263",
        "b#0",
        "idx#0",
        "item_index_internal%0#0",
        "select%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "b#0",
        "idx#0",
        "0x616263"
      ]
    },
    "642": {
      "op": "swap",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "b#0",
        "0x616263",
        "idx#0"
      ]
    },
    "643": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "b#0",
        "0x616263",
        "idx#0",
        "1"
      ]
    },
    "644": {
      "op": "extract3",
      "defined_out": [
        "b#0",
        "item_index_internal%0#0",
        "select%0#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "b#0",
        "tmp%42#0"
      ]
    },
    "645": {
      "op": "==",
      "defined_out": [
        "item_index_internal%0#0",
        "select%0#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%43#0"
      ]
    },
    "646": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "647": {
      "block": "test_union_boolean_binary_ops_for_footer@44",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0"
      ]
    },
    "649": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "650": {
      "op": "+",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "item_index_internal%0#0"
      ]
    },
    "651": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "653": {
      "op": "b test_union_boolean_binary_ops_for_header@42"
    },
    "656": {
      "block": "test_union_boolean_binary_ops_after_for@45",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_0 // 0x6c656674",
      "defined_out": [
        "0x6c656674"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x6c656674"
      ]
    },
    "657": {
      "op": "len",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%44#0"
      ]
    },
    "658": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%44#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%44#0",
        "0"
      ]
    },
    "659": {
      "op": "==",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%45#0"
      ]
    },
    "660": {
      "op": "bytec_3 // 0x7269676874",
      "defined_out": [
        "0x7269676874",
        "tmp%45#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%45#0",
        "0x7269676874"
      ]
    },
    "661": {
      "op": "bytec_0 // 0x6c656674",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%45#0",
        "0x7269676874",
        "0x6c656674"
      ]
    },
    "662": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x7269676874",
        "0x6c656674",
        "tmp%45#0"
      ]
    },
    "664": {
      "op": "select",
      "defined_out": [
        "select%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%1#0"
      ]
    },
    "665": {
      "op": "extract 1 1",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%46#0"
      ]
    },
    "668": {
      "op": "pushbytes 0x69",
      "defined_out": [
        "0x69",
        "tmp%46#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%46#0",
        "0x69"
      ]
    },
    "671": {
      "op": "==",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%47#0"
      ]
    },
    "672": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "673": {
      "op": "bytec_0 // 0x6c656674",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x6c656674"
      ]
    },
    "674": {
      "op": "len",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%48#0"
      ]
    },
    "675": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%48#0",
        "0"
      ]
    },
    "676": {
      "op": "!=",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%49#0"
      ]
    },
    "677": {
      "op": "bytec_3 // 0x7269676874",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%49#0",
        "0x7269676874"
      ]
    },
    "678": {
      "op": "bytec_0 // 0x6c656674",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%49#0",
        "0x7269676874",
        "0x6c656674"
      ]
    },
    "679": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "0x7269676874",
        "0x6c656674",
        "tmp%49#0"
      ]
    },
    "681": {
      "op": "select",
      "defined_out": [
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0"
      ]
    },
    "682": {
      "op": "dup",
      "defined_out": [
        "select%2#0",
        "select%2#0 (copy)"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "select%2#0 (copy)"
      ]
    },
    "683": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0"
      ]
    },
    "684": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "0"
      ]
    },
    "685": {
      "op": "dig 1",
      "defined_out": [
        "0",
        "length%0#0",
        "length%0#0 (copy)",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "0",
        "length%0#0 (copy)"
      ]
    },
    "687": {
      "op": ">=",
      "defined_out": [
        "is_out_of_bounds%0#0",
        "length%0#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "is_out_of_bounds%0#0"
      ]
    },
    "688": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "0"
      ]
    },
    "689": {
      "op": "dig 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "is_out_of_bounds%0#0",
        "0",
        "length%0#0 (copy)"
      ]
    },
    "691": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "0",
        "length%0#0 (copy)",
        "is_out_of_bounds%0#0"
      ]
    },
    "693": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "length%0#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "length%0#0",
        "bounded_index%0#0"
      ]
    },
    "694": {
      "op": "swap",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "length%0#0"
      ]
    },
    "695": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "bounded_index%0#0",
        "length%0#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "length%0#0",
        "2"
      ]
    },
    "696": {
      "op": "dig 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "length%0#0",
        "2",
        "length%0#0 (copy)"
      ]
    },
    "698": {
      "op": ">=",
      "defined_out": [
        "bounded_index%0#0",
        "is_out_of_bounds%1#0",
        "length%0#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "length%0#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "699": {
      "op": "intc_2 // 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "length%0#0",
        "is_out_of_bounds%1#0",
        "2"
      ]
    },
    "700": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "is_out_of_bounds%1#0",
        "2",
        "length%0#0"
      ]
    },
    "702": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "2",
        "length%0#0",
        "is_out_of_bounds%1#0"
      ]
    },
    "704": {
      "op": "select",
      "defined_out": [
        "bounded_index%0#0",
        "bounded_index%1#0",
        "select%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "bounded_index%1#0"
      ]
    },
    "705": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "bounded_index%0#0",
        "bounded_index%1#0",
        "select%2#0"
      ]
    },
    "707": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "bounded_index%1#0",
        "select%2#0",
        "bounded_index%0#0"
      ]
    },
    "709": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%2#0",
        "bounded_index%0#0",
        "bounded_index%1#0"
      ]
    },
    "711": {
      "op": "substring3",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%50#0"
      ]
    },
    "712": {
      "op": "bytec 4 // 0x6c65",
      "defined_out": [
        "0x6c65",
        "tmp%50#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%50#0",
        "0x6c65"
      ]
    },
    "714": {
      "op": "==",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%51#0"
      ]
    },
    "715": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "716": {
      "op": "bytec_0 // \"left\"",
      "defined_out": [
        "\"left\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"left\""
      ]
    },
    "717": {
      "op": "len",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%52#0"
      ]
    },
    "718": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%52#0",
        "0"
      ]
    },
    "719": {
      "op": "==",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%53#0"
      ]
    },
    "720": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@47",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "723": {
      "block": "test_union_boolean_binary_ops_ternary_true@46",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_0 // \"left\"",
      "defined_out": [
        "ternary_result%5#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%5#0"
      ]
    },
    "724": {
      "block": "test_union_boolean_binary_ops_ternary_merge@48",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%5#0"
      ],
      "op": "pushbytes \"ight\"",
      "defined_out": [
        "\"ight\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%5#0",
        "\"ight\""
      ]
    },
    "730": {
      "op": "swap",
      "defined_out": [
        "\"ight\"",
        "ternary_result%5#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"ight\"",
        "ternary_result%5#0"
      ]
    },
    "731": {
      "callsub": "_puya_lib.bytes_.is_substring",
      "op": "callsub is_substring",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%54#0"
      ]
    },
    "734": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "735": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1"
      ]
    },
    "736": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1",
        "0"
      ]
    },
    "737": {
      "op": "==",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%55#0"
      ]
    },
    "738": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "tmp%55#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%55#0",
        "2"
      ]
    },
    "739": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%55#0",
        "2",
        "1"
      ]
    },
    "740": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "2",
        "1",
        "tmp%55#0"
      ]
    },
    "742": {
      "op": "select",
      "defined_out": [
        "select%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%3#0"
      ]
    },
    "743": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "select%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%3#0",
        "3"
      ]
    },
    "744": {
      "op": "+",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%56#0"
      ]
    },
    "745": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%56#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%56#0",
        "5"
      ]
    },
    "747": {
      "op": "==",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%57#0"
      ]
    },
    "748": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "749": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1"
      ]
    },
    "750": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "1",
        "0"
      ]
    },
    "751": {
      "op": "!=",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%58#0"
      ]
    },
    "752": {
      "op": "intc_2 // 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%58#0",
        "2"
      ]
    },
    "753": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%58#0",
        "2",
        "1"
      ]
    },
    "754": {
      "op": "uncover 2",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "2",
        "1",
        "tmp%58#0"
      ]
    },
    "756": {
      "op": "select",
      "defined_out": [
        "select%4#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "select%4#0"
      ]
    },
    "757": {
      "op": "~",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%59#0"
      ]
    },
    "758": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%59#0",
        "1"
      ]
    },
    "759": {
      "op": "~",
      "defined_out": [
        "tmp%59#0",
        "tmp%60#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%59#0",
        "tmp%60#0"
      ]
    },
    "760": {
      "op": "==",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%61#0"
      ]
    },
    "761": {
      "op": "assert",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "762": {
      "retsub": true,
      "op": "retsub"
    },
    "763": {
      "block": "test_union_boolean_binary_ops_ternary_false@47",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_3 // \"right\"",
      "defined_out": [
        "ternary_result%5#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%5#0"
      ]
    },
    "764": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@48"
    },
    "767": {
      "block": "test_union_boolean_binary_ops_ternary_false@37",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_3 // \"right\"",
      "defined_out": [
        "\"right\""
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"right\""
      ]
    },
    "768": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"right\"",
        "0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"right\"",
        "0"
      ]
    },
    "769": {
      "op": "frame_dig 6",
      "defined_out": [
        "\"right\"",
        "0",
        "tmp%34#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"right\"",
        "0",
        "tmp%34#0"
      ]
    },
    "771": {
      "op": "extract3",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%37#0"
      ]
    },
    "772": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "774": {
      "op": "bytec 4 // \"le\"",
      "defined_out": [
        "\"le\"",
        "tmp%34#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "\"le\""
      ]
    },
    "776": {
      "op": "len",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%38#0"
      ]
    },
    "777": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%38#0",
        "0"
      ]
    },
    "778": {
      "op": "==",
      "defined_out": [
        "tmp%34#0",
        "tmp%37#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%39#0"
      ]
    },
    "779": {
      "op": "bz test_union_boolean_binary_ops_ternary_false@39",
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "782": {
      "block": "test_union_boolean_binary_ops_ternary_true@38",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 4 // \"le\"",
      "defined_out": [
        "ternary_result%4#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%4#0"
      ]
    },
    "784": {
      "block": "test_union_boolean_binary_ops_ternary_merge@40",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%4#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%4#0",
        "tmp%37#0"
      ]
    },
    "786": {
      "op": "==",
      "defined_out": [
        "ternary_result%2#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%2#0"
      ]
    },
    "787": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@41"
    },
    "790": {
      "block": "test_union_boolean_binary_ops_ternary_false@39",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 5 // \"ri\"",
      "defined_out": [
        "ternary_result%4#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%4#0"
      ]
    },
    "792": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@40"
    },
    "795": {
      "block": "test_union_boolean_binary_ops_ternary_false@34",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec 5 // \"ri\"",
      "defined_out": [
        "ternary_result%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%3#0"
      ]
    },
    "797": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@35"
    },
    "800": {
      "block": "test_union_boolean_binary_ops_ternary_false@31",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0"
      ]
    },
    "802": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0",
        "0"
      ]
    },
    "803": {
      "op": "frame_dig 5",
      "defined_out": [
        "0",
        "ternary_result%1#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0",
        "0",
        "tmp%26#0"
      ]
    },
    "805": {
      "op": "extract3",
      "defined_out": [
        "ternary_result%1#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%31#0"
      ]
    },
    "806": {
      "op": "bytec 5 // \"ri\"",
      "defined_out": [
        "\"ri\"",
        "ternary_result%1#0",
        "tmp%26#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "tmp%31#0",
        "\"ri\""
      ]
    },
    "808": {
      "op": "==",
      "defined_out": [
        "ternary_result%0#0",
        "ternary_result%1#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%0#0"
      ]
    },
    "809": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@32"
    },
    "812": {
      "block": "test_union_boolean_binary_ops_ternary_false@28",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "bytec_3 // \"right\"",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "ternary_result%1#0"
      ]
    },
    "813": {
      "op": "frame_bury 1",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ]
    },
    "815": {
      "op": "b test_union_boolean_binary_ops_ternary_merge@29"
    },
    "818": {
      "block": "test_union_boolean_binary_ops_bool_false@25",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%3#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%3#0"
      ]
    },
    "819": {
      "op": "b test_union_boolean_binary_ops_bool_merge@26"
    },
    "822": {
      "block": "test_union_boolean_binary_ops_bool_false@20",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%2#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%2#0"
      ]
    },
    "823": {
      "op": "b test_union_boolean_binary_ops_bool_merge@21"
    },
    "826": {
      "block": "test_union_boolean_binary_ops_bool_false@15",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "and_result%0#0"
      ]
    },
    "827": {
      "op": "b test_union_boolean_binary_ops_bool_merge@16"
    },
    "830": {
      "block": "test_union_boolean_binary_ops_bool_false@9",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%1#0"
      ]
    },
    "831": {
      "op": "b test_union_boolean_binary_ops_bool_merge@10"
    },
    "834": {
      "block": "test_union_boolean_binary_ops_bool_false@3",
      "stack_in": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "select%0#0",
        "ternary_result%1#0",
        "tmp%37#0",
        "bytes_length%0#0",
        "item_index_internal%0#0",
        "tmp%26#0",
        "tmp%34#0",
        "or_result%0#0"
      ]
    },
    "835": {
      "op": "b test_union_boolean_binary_ops_bool_merge@4"
    },
    "838": {
      "subroutine": "test_cases.boolean_binary_ops.contract.test_literal_boolean_binary_ops",
      "params": {},
      "block": "test_literal_boolean_binary_ops",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "841": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "c#0"
      ]
    },
    "842": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "843": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "844": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "d#0",
        "0",
        "0"
      ]
    },
    "845": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%0#0"
      ]
    },
    "846": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%0#0",
        "1"
      ]
    },
    "847": {
      "op": "||",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%1#0"
      ]
    },
    "848": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "849": {
      "op": "intc_0 // 0",
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "850": {
      "op": "bnz test_literal_boolean_binary_ops_bool_true@2",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "853": {
      "block": "test_literal_boolean_binary_ops_or_contd@1",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "bytec 6 // 0x616263",
      "defined_out": [
        "0x616263"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0x616263"
      ]
    },
    "855": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%2#0"
      ]
    },
    "856": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%2#0",
        "0"
      ]
    },
    "857": {
      "op": "!=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%3#0"
      ]
    },
    "858": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@3",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "861": {
      "block": "test_literal_boolean_binary_ops_bool_true@2",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "or_result%0#0"
      ]
    },
    "862": {
      "block": "test_literal_boolean_binary_ops_bool_merge@4",
      "stack_in": [
        "c#0",
        "d#0",
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "863": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "864": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "d#0",
        "0",
        "0"
      ]
    },
    "865": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%4#0"
      ]
    },
    "866": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%4#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%4#0",
        "1"
      ]
    },
    "867": {
      "op": "||",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "c#0"
      ]
    },
    "868": {
      "op": "frame_bury 0",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "870": {
      "op": "intc_0 // 0",
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "871": {
      "op": "bnz test_literal_boolean_binary_ops_bool_true@6",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "874": {
      "block": "test_literal_boolean_binary_ops_or_contd@5",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "bytec 6 // 0x616263",
      "defined_out": [
        "0x616263"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0x616263"
      ]
    },
    "876": {
      "op": "len",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%5#0"
      ]
    },
    "877": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%5#0",
        "0"
      ]
    },
    "878": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%6#0"
      ]
    },
    "879": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@7",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "882": {
      "block": "test_literal_boolean_binary_ops_bool_true@6",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "or_result%1#0"
      ]
    },
    "883": {
      "block": "test_literal_boolean_binary_ops_bool_merge@8",
      "stack_in": [
        "c#0",
        "d#0",
        "or_result%1#0"
      ],
      "op": "frame_bury 1",
      "defined_out": [
        "d#0"
      ],
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "885": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "d#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "1"
      ]
    },
    "886": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@13",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "889": {
      "block": "test_literal_boolean_binary_ops_and_contd@9",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "1"
      ]
    },
    "890": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@13",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "893": {
      "block": "test_literal_boolean_binary_ops_and_contd@10",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "c#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "c#0"
      ]
    },
    "895": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@13",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "898": {
      "block": "test_literal_boolean_binary_ops_and_contd@11",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "d#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "d#0"
      ]
    },
    "900": {
      "op": "bz test_literal_boolean_binary_ops_bool_false@13",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "903": {
      "block": "test_literal_boolean_binary_ops_bool_true@12",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "and_result%0#0"
      ]
    },
    "904": {
      "block": "test_literal_boolean_binary_ops_bool_merge@14",
      "stack_in": [
        "c#0",
        "d#0",
        "and_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "905": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "906": {
      "op": "bz test_literal_boolean_binary_ops_after_if_else@16",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "909": {
      "block": "test_literal_boolean_binary_ops_if_body@15",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "err"
    },
    "910": {
      "block": "test_literal_boolean_binary_ops_after_if_else@16",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "911": {
      "op": "bz test_literal_boolean_binary_ops_after_if_else@18",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "914": {
      "block": "test_literal_boolean_binary_ops_if_body@17",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "err"
    },
    "915": {
      "block": "test_literal_boolean_binary_ops_after_if_else@18",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "916": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "d#0",
        "0",
        "0"
      ]
    },
    "917": {
      "op": "!=",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%7#0"
      ]
    },
    "918": {
      "op": "bnz test_literal_boolean_binary_ops_if_body@20",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "921": {
      "block": "test_literal_boolean_binary_ops_or_contd@19",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "922": {
      "op": "bz test_literal_boolean_binary_ops_after_if_else@21",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "925": {
      "block": "test_literal_boolean_binary_ops_if_body@20",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "err"
    },
    "926": {
      "block": "test_literal_boolean_binary_ops_after_if_else@21",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0"
      ]
    },
    "927": {
      "op": "bnz test_literal_boolean_binary_ops_if_body@23",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "930": {
      "block": "test_literal_boolean_binary_ops_or_contd@22",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0x"
      ]
    },
    "931": {
      "op": "len",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%8#0"
      ]
    },
    "932": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%8#0",
        "0"
      ]
    },
    "933": {
      "op": "!=",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%9#0"
      ]
    },
    "934": {
      "op": "bz test_literal_boolean_binary_ops_after_if_else@24",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "937": {
      "block": "test_literal_boolean_binary_ops_if_body@23",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "err"
    },
    "938": {
      "block": "test_literal_boolean_binary_ops_after_if_else@24",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "2"
      ]
    },
    "939": {
      "op": "dup",
      "stack_out": [
        "c#0",
        "d#0",
        "2",
        "2"
      ]
    },
    "940": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%10#0"
      ]
    },
    "941": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "942": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "1"
      ]
    },
    "943": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "1",
        "0"
      ]
    },
    "944": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%11#0"
      ]
    },
    "945": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "tmp%11#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%11#0",
        "4"
      ]
    },
    "947": {
      "op": "intc_1 // 1",
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%11#0",
        "4",
        "1"
      ]
    },
    "948": {
      "op": "uncover 2",
      "stack_out": [
        "c#0",
        "d#0",
        "4",
        "1",
        "tmp%11#0"
      ]
    },
    "950": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "select%0#0"
      ]
    },
    "951": {
      "op": "bitlen",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%12#0"
      ]
    },
    "952": {
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "tmp%12#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%12#0",
        "3"
      ]
    },
    "953": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%13#0"
      ]
    },
    "954": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "955": {
      "op": "bytec_1 // 0x",
      "defined_out": [
        "0x"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "0x"
      ]
    },
    "956": {
      "op": "len",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%14#0"
      ]
    },
    "957": {
      "op": "intc_0 // 0",
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%14#0",
        "0"
      ]
    },
    "958": {
      "op": "!=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%15#0"
      ]
    },
    "959": {
      "op": "pushbytes 0x68656c6c6f",
      "defined_out": [
        "0x68656c6c6f",
        "tmp%15#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%15#0",
        "0x68656c6c6f"
      ]
    },
    "966": {
      "op": "bytec_1 // 0x",
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%15#0",
        "0x68656c6c6f",
        "0x"
      ]
    },
    "967": {
      "op": "uncover 2",
      "stack_out": [
        "c#0",
        "d#0",
        "0x68656c6c6f",
        "0x",
        "tmp%15#0"
      ]
    },
    "969": {
      "op": "select",
      "defined_out": [
        "select%1#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "select%1#0"
      ]
    },
    "970": {
      "op": "bitlen",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%16#0"
      ]
    },
    "971": {
      "op": "intc_0 // 0",
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%16#0",
        "0"
      ]
    },
    "972": {
      "op": ">",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "tmp%17#0"
      ]
    },
    "973": {
      "op": "assert",
      "stack_out": [
        "c#0",
        "d#0"
      ]
    },
    "974": {
      "retsub": true,
      "op": "retsub"
    },
    "975": {
      "block": "test_literal_boolean_binary_ops_bool_false@13",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "and_result%0#0"
      ]
    },
    "976": {
      "op": "b test_literal_boolean_binary_ops_bool_merge@14"
    },
    "979": {
      "block": "test_literal_boolean_binary_ops_bool_false@7",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "or_result%1#0"
      ]
    },
    "980": {
      "op": "b test_literal_boolean_binary_ops_bool_merge@8"
    },
    "983": {
      "block": "test_literal_boolean_binary_ops_bool_false@3",
      "stack_in": [
        "c#0",
        "d#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "c#0",
        "d#0",
        "or_result%0#0"
      ]
    },
    "984": {
      "op": "b test_literal_boolean_binary_ops_bool_merge@4"
    },
    "987": {
      "subroutine": "test_cases.boolean_binary_ops.contract.test_literal_conditionals",
      "params": {
        "true#0": "uint64",
        "false#0": "uint64"
      },
      "block": "test_literal_conditionals",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "990": {
      "op": "bytec_1 // \"\"",
      "stack_out": [
        "select%4#0"
      ]
    },
    "991": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "992": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1"
      ]
    },
    "993": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "1",
        "false#0 (copy)"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1",
        "false#0 (copy)"
      ]
    },
    "995": {
      "op": "select",
      "defined_out": [
        "select%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%0#0"
      ]
    },
    "996": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%4#0",
        "select%0#0",
        "1"
      ]
    },
    "997": {
      "op": "||",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%0#0"
      ]
    },
    "998": {
      "op": "assert",
      "stack_out": [
        "select%4#0"
      ]
    },
    "999": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1000": {
      "op": "bnz test_literal_conditionals_bool_true@2",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1003": {
      "block": "test_literal_conditionals_or_contd@1",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1004": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1"
      ]
    },
    "1005": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "1",
        "true#0 (copy)"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1",
        "true#0 (copy)"
      ]
    },
    "1007": {
      "op": "select",
      "defined_out": [
        "select%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%1#0"
      ]
    },
    "1008": {
      "op": "bz test_literal_conditionals_bool_false@3",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1011": {
      "block": "test_literal_conditionals_bool_true@2",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "or_result%0#0"
      ]
    },
    "1012": {
      "block": "test_literal_conditionals_bool_merge@4",
      "stack_in": [
        "select%4#0",
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%4#0"
      ]
    },
    "1013": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "select%4#0",
        "1"
      ]
    },
    "1014": {
      "op": "bnz test_literal_conditionals_bool_true@6",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1017": {
      "block": "test_literal_conditionals_or_contd@5",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1018": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1"
      ]
    },
    "1019": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "1",
        "true#0 (copy)"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1",
        "true#0 (copy)"
      ]
    },
    "1021": {
      "op": "select",
      "defined_out": [
        "select%2#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%2#0"
      ]
    },
    "1022": {
      "op": "bz test_literal_conditionals_bool_false@7",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1025": {
      "block": "test_literal_conditionals_bool_true@6",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "or_result%1#0"
      ]
    },
    "1026": {
      "block": "test_literal_conditionals_bool_merge@8",
      "stack_in": [
        "select%4#0",
        "or_result%1#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "select%4#0"
      ]
    },
    "1027": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1028": {
      "op": "intc_1 // 1",
      "defined_out": [
        "0",
        "1"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1"
      ]
    },
    "1029": {
      "op": "frame_dig -1",
      "defined_out": [
        "0",
        "1",
        "false#0 (copy)"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "1",
        "false#0 (copy)"
      ]
    },
    "1031": {
      "op": "select",
      "defined_out": [
        "select%3#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%3#0"
      ]
    },
    "1032": {
      "op": "intc_1 // 1",
      "stack_out": [
        "select%4#0",
        "select%3#0",
        "1"
      ]
    },
    "1033": {
      "op": "||",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%1#0"
      ]
    },
    "1034": {
      "op": "assert",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1035": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1036": {
      "op": "intc_3 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "3"
      ]
    },
    "1037": {
      "op": "frame_dig -1",
      "stack_out": [
        "select%4#0",
        "0",
        "3",
        "false#0 (copy)"
      ]
    },
    "1039": {
      "op": "select",
      "defined_out": [
        "select%4#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%4#0"
      ]
    },
    "1040": {
      "op": "dup",
      "stack_out": [
        "select%4#0",
        "select%4#0",
        "select%4#0"
      ]
    },
    "1041": {
      "op": "frame_bury 0",
      "defined_out": [
        "select%4#0"
      ],
      "stack_out": [
        "select%4#0",
        "select%4#0"
      ]
    },
    "1043": {
      "op": "intc_0 // 0",
      "stack_out": [
        "select%4#0",
        "select%4#0",
        "0"
      ]
    },
    "1044": {
      "op": "!=",
      "defined_out": [
        "select%4#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%2#0"
      ]
    },
    "1045": {
      "op": "bz test_literal_conditionals_ternary_false@10",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1048": {
      "block": "test_literal_conditionals_ternary_true@9",
      "stack_in": [
        "select%4#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%0#0"
      ]
    },
    "1050": {
      "block": "test_literal_conditionals_ternary_merge@11",
      "stack_in": [
        "select%4#0",
        "ternary_result%0#0"
      ],
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%0#0",
        "4"
      ]
    },
    "1052": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%3#0"
      ]
    },
    "1053": {
      "op": "assert",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1054": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1055": {
      "op": "dup",
      "stack_out": [
        "select%4#0",
        "0",
        "0"
      ]
    },
    "1056": {
      "op": "!=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%4#0"
      ]
    },
    "1057": {
      "op": "bz test_literal_conditionals_ternary_false@13",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1060": {
      "block": "test_literal_conditionals_ternary_true@12",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%1#0"
      ]
    },
    "1061": {
      "block": "test_literal_conditionals_ternary_merge@14",
      "stack_in": [
        "select%4#0",
        "ternary_result%1#0"
      ],
      "op": "intc_3 // 3",
      "defined_out": [
        "3",
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%1#0",
        "3"
      ]
    },
    "1062": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "select%4#0",
        "tmp%5#0"
      ]
    },
    "1063": {
      "op": "assert",
      "stack_out": [
        "select%4#0"
      ]
    },
    "1064": {
      "retsub": true,
      "op": "retsub"
    },
    "1065": {
      "block": "test_literal_conditionals_ternary_false@13",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "select%4#0",
        "0"
      ]
    },
    "1066": {
      "op": "intc_3 // 3",
      "defined_out": [
        "0",
        "3"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "3"
      ]
    },
    "1067": {
      "op": "frame_dig -2",
      "defined_out": [
        "0",
        "3",
        "true#0 (copy)"
      ],
      "stack_out": [
        "select%4#0",
        "0",
        "3",
        "true#0 (copy)"
      ]
    },
    "1069": {
      "op": "select",
      "defined_out": [
        "ternary_result%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%1#0"
      ]
    },
    "1070": {
      "op": "b test_literal_conditionals_ternary_merge@14"
    },
    "1073": {
      "block": "test_literal_conditionals_ternary_false@10",
      "stack_in": [
        "select%4#0"
      ],
      "op": "pushint 4 // 4",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "ternary_result%0#0"
      ]
    },
    "1075": {
      "op": "b test_literal_conditionals_ternary_merge@11"
    },
    "1078": {
      "block": "test_literal_conditionals_bool_false@7",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%1#0"
      ],
      "stack_out": [
        "select%4#0",
        "or_result%1#0"
      ]
    },
    "1079": {
      "op": "b test_literal_conditionals_bool_merge@8"
    },
    "1082": {
      "block": "test_literal_conditionals_bool_false@3",
      "stack_in": [
        "select%4#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "select%4#0",
        "or_result%0#0"
      ]
    },
    "1083": {
      "op": "b test_literal_conditionals_bool_merge@4"
    }
  }
}