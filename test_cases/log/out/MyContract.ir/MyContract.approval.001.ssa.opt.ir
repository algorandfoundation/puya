main test_cases.log.contract.MyContract.approval_program:
    block@0: // L5
        let tmp%0#0: bytes = (itob 0u)
        (log tmp%0#0)
        (log 0x31)
        (log "2")
        let tmp%1#0: uint64 = (txn NumAppArgs)
        let tmp%2#0: uint64 = (+ tmp%1#0 3u)
        let tmp%3#0: bytes = (itob tmp%2#0)
        (log tmp%3#0)
        let tmp%4#0: uint64 = (txn NumAppArgs)
        let tmp%5#0: bool = (!= tmp%4#0 0u)
        let select%0#0: bytes = (select 0x 0x34 tmp%4#0)
        (log select%0#0)
        let tmp%6#0: bytes = 0x35
        let tmp%7#0: bytes = (itob 6u)
        let tmp%8#0: bytes = 0x350000000000000006
        let tmp%9#0: bytes = 0x350000000000000006
        let tmp%10#0: uint64 = (txn NumAppArgs)
        let tmp%11#0: uint64 = (+ tmp%10#0 7u)
        let tmp%12#0: bytes = (itob tmp%11#0)
        let tmp%13#0: bytes = (concat 0x350000000000000006 tmp%12#0)
        let tmp%15#0: bytes = (concat tmp%13#0 8b)
        let tmp%17#0: uint64 = (txn NumAppArgs)
        let tmp%18#0: bool = (!= tmp%17#0 0u)
        let select%1#0: bytes = (select 0x 0x39 tmp%17#0)
        let tmp%19#0: bytes = (concat tmp%15#0 select%1#0)
        (log tmp%19#0)
        let tmp%20#0: bytes = 0x355f
        let tmp%22#0: bytes = 0x355f0000000000000006
        let tmp%23#0: bytes = 0x355f00000000000000065f
        let tmp%24#0: uint64 = (txn NumAppArgs)
        let tmp%25#0: uint64 = (+ tmp%24#0 7u)
        let tmp%26#0: bytes = (itob tmp%25#0)
        let tmp%27#0: bytes = (concat 0x355f00000000000000065f tmp%26#0)
        let tmp%28#0: bytes = (concat tmp%27#0 0x5f)
        let tmp%29#0: bytes = (concat tmp%27#0 0x5f08)
        let tmp%30#0: bytes = (concat tmp%27#0 0x5f085f)
        let tmp%31#0: uint64 = (txn NumAppArgs)
        let tmp%32#0: bool = (!= tmp%31#0 0u)
        let select%2#0: bytes = (select 0x 0x39 tmp%31#0)
        let tmp%33#0: bytes = (concat tmp%30#0 select%2#0)
        (log tmp%33#0)
        let tmp%34#0: bytes = 0x355f
        let tmp%36#0: bytes = 0x355f0000000000000006
        let tmp%37#0: bytes = 0x355f00000000000000065f
        let tmp%38#0: uint64 = (txn NumAppArgs)
        let tmp%39#0: uint64 = (+ tmp%38#0 7u)
        let tmp%40#0: bytes = (itob tmp%39#0)
        let tmp%41#0: bytes = (concat 0x355f00000000000000065f tmp%40#0)
        let tmp%42#0: bytes = (concat tmp%41#0 "_")
        let tmp%43#0: bytes = (concat tmp%41#0 0x5f08)
        let tmp%44#0: bytes = (concat tmp%41#0 0x5f085f)
        let tmp%45#0: uint64 = (txn NumAppArgs)
        let tmp%46#0: bool = (!= tmp%45#0 0u)
        let select%3#0: bytes = (select 0x 0x39 tmp%45#0)
        let tmp%47#0: bytes = (concat tmp%44#0 select%3#0)
        (log tmp%47#0)
        return 1u