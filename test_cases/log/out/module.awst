contract MyContract
{
  method_resolution_order: (
    algopy._contract.Contract,
  )
  
  subroutine test_cases.log.contract.MyContract.approval_program(): bool
  {
    log(itob(0u))
    log(hex<"31">)
    log('2')
    log(itob(txn<NumAppArgs>() + 3u))
    log((txn<NumAppArgs>() != 0u) ? (hex<"34">) : (hex<"">))
    log(concat(concat(concat(concat(concat(concat(concat(concat(hex<"35">, ''), itob(6u)), ''), itob(txn<NumAppArgs>() + 7u)), ''), reinterpret_cast<bytes>(8n)), ''), (txn<NumAppArgs>() != 0u) ? (hex<"39">) : (hex<"">)))
    log(concat(concat(concat(concat(concat(concat(concat(concat(hex<"35">, hex<"5F">), itob(6u)), hex<"5F">), itob(txn<NumAppArgs>() + 7u)), hex<"5F">), reinterpret_cast<bytes>(8n)), hex<"5F">), (txn<NumAppArgs>() != 0u) ? (hex<"39">) : (hex<"">)))
    log(concat(concat(concat(concat(concat(concat(concat(concat(hex<"35">, '_'), itob(6u)), '_'), itob(txn<NumAppArgs>() + 7u)), '_'), reinterpret_cast<bytes>(8n)), '_'), (txn<NumAppArgs>() != 0u) ? (hex<"39">) : (hex<"">)))
    return true
  }
  
  subroutine test_cases.log.contract.MyContract.clear_state_program(): bool
  {
    return true
  }
  
  subroutine algopy._contract.Contract.__init__(): void
  {
  }
}