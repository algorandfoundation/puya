#pragma version 10

test_cases.log.contract.MyContract.approval_program:
    int 0
    // log/contract.py:6
    // log(0)
    dupn 3
    itob
    log
    // log/contract.py:7
    // log(b"1")
    byte 0x31
    log
    // log/contract.py:8
    // log("2")
    byte "2"
    log
    // log/contract.py:9
    // log(op.Txn.num_app_args + 3)
    txn NumAppArgs
    int 3
    +
    itob
    log
    // log/contract.py:10
    // log(Bytes(b"4") if op.Txn.num_app_args else Bytes())
    txn NumAppArgs
    bz main_ternary_false@2
    byte 0x34
    b main_ternary_merge@3

main_ternary_false@2:
    // log/contract.py:10
    // log(Bytes(b"4") if op.Txn.num_app_args else Bytes())
    byte 0x

main_ternary_merge@3:
    // log/contract.py:10
    // log(Bytes(b"4") if op.Txn.num_app_args else Bytes())
    log
    // log/contract.py:14
    // op.Txn.num_app_args + 7,
    txn NumAppArgs
    int 7
    +
    itob
    // log/contract.py:13
    // 6,
    byte 0x350000000000000006
    // log/contract.py:14
    // op.Txn.num_app_args + 7,
    swap
    concat
    // log/contract.py:15
    // BigUInt(8),
    byte 0x08
    concat
    bury 3
    // log/contract.py:16
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    txn NumAppArgs
    bz main_ternary_false@5
    byte 0x39
    b main_ternary_merge@6

main_ternary_false@5:
    // log/contract.py:16
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    byte 0x

main_ternary_merge@6:
    // log/contract.py:16
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    dig 3
    swap
    concat
    // log/contract.py:11-17
    // log(
    //     b"5",
    //     6,
    //     op.Txn.num_app_args + 7,
    //     BigUInt(8),
    //     Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    // )
    log
    // log/contract.py:21
    // op.Txn.num_app_args + 7,
    txn NumAppArgs
    int 7
    +
    itob
    byte 0x355f00000000000000065f
    swap
    concat
    // log/contract.py:24
    // sep=b"_",
    byte "_"
    // log/contract.py:22
    // BigUInt(8),
    concat
    byte 0x08
    concat
    // log/contract.py:24
    // sep=b"_",
    byte "_"
    // log/contract.py:23
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    concat
    bury 2
    txn NumAppArgs
    bz main_ternary_false@8
    byte 0x39
    b main_ternary_merge@9

main_ternary_false@8:
    // log/contract.py:23
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    byte 0x

main_ternary_merge@9:
    // log/contract.py:23
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    dig 2
    swap
    concat
    // log/contract.py:18-25
    // log(
    //     b"5",
    //     6,
    //     op.Txn.num_app_args + 7,
    //     BigUInt(8),
    //     Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    //     sep=b"_",
    // )
    log
    // log/contract.py:29
    // op.Txn.num_app_args + 7,
    txn NumAppArgs
    int 7
    +
    itob
    byte 0x355f00000000000000065f
    swap
    concat
    // log/contract.py:32
    // sep="_",
    byte "_"
    // log/contract.py:30
    // BigUInt(8),
    concat
    byte 0x08
    concat
    // log/contract.py:32
    // sep="_",
    byte "_"
    // log/contract.py:31
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    concat
    bury 1
    txn NumAppArgs
    bz main_ternary_false@11
    byte 0x39
    b main_ternary_merge@12

main_ternary_false@11:
    // log/contract.py:31
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    byte 0x

main_ternary_merge@12:
    // log/contract.py:31
    // Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    dig 1
    swap
    concat
    // log/contract.py:26-33
    // log(
    //     b"5",
    //     6,
    //     op.Txn.num_app_args + 7,
    //     BigUInt(8),
    //     Bytes(b"9") if op.Txn.num_app_args else Bytes(),
    //     sep="_",
    // )
    log
    // log/contract.py:34
    // return True
    int 1
    return
