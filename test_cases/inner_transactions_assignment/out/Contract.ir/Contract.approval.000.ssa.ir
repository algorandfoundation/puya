main algopy.arc4.ARC4Contract.approval_program:
    block@0: // L1
        let tmp%0#0: bool = test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__()
        return tmp%0#0

subroutine test_cases.inner_transactions_assignment.contract.echo(value: bytes) -> bytes:
    block@0: // L76
        return value#0

subroutine test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__() -> bool:
    block@0: // L11
        let tmp%0#0: uint64 = (txn NumAppArgs)
        let tmp%1#0: bool = (!= tmp%0#0 0u)
        goto tmp%1#0 ? block@1 : block@9
    block@1: // abi_routing_L11
        let tmp%2#0: uint64 = (txn OnCompletion)
        let tmp%3#0: bool = (== tmp%2#0 NoOp)
        (assert tmp%3#0) // OnCompletion is not NoOp
        let tmp%4#0: bool = (txn ApplicationID)
        goto tmp%4#0 ? block@2 : block@7
    block@2: // call_NoOp_L11
        let tmp%5#0: bytes = (txna ApplicationArgs 0)
        switch tmp%5#0 {method "test_itxn_slice()void" => block@3, method "test_itxn_nested()void" => block@4, * => block@5}
    block@3: // test_itxn_slice_route_L12
        test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice[routing]()
        goto block@6
    block@4: // test_itxn_nested_route_L29
        test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested[routing]()
        goto block@6
    block@5: // switch_case_default_L11
        goto block@6
    block@6: // switch_case_next_L11
        goto block@8
    block@7: // create_NoOp_L11
        goto block@8
    block@8: // after_if_else_L11
        goto block@10
    block@9: // __algopy_default_create_L1
        let tmp%6#0: uint64 = (txn OnCompletion)
        let tmp%7#0: bool = (== tmp%6#0 NoOp)
        let tmp%8#0: uint64 = (txn ApplicationID)
        let tmp%9#0: bool = (== tmp%8#0 0u)
        let tmp%10#0: bool = (&& tmp%7#0 tmp%9#0)
        (assert tmp%10#0) // OnCompletion must be NoOp && can only call when creating
        test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create()
        exit 1u
    block@10: // after_if_else_L11
        exit 0u

subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice[routing]() -> void:
    block@0: // L12
        test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice()
        exit 1u

subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested[routing]() -> void:
    block@0: // L29
        test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested()
        exit 1u

subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice() -> void:
    block@0: // L12
        let acfg#0: itxn_field_set = itxn_field_set(0)
        let acfg%%param_Fee_idx_0#0: uint64 = 0u
        let acfg%%Fee_length#0: uint64 = 1u
        let acfg%%param_TypeEnum_idx_0#0: uint64 = acfg
        let acfg%%TypeEnum_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let acfg%%ConfigAssetUnitName_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let acfg%%ConfigAssetName_length#0: uint64 = 1u
        let acfg%%param_Note_idx_0#0: string = "acfg"
        let acfg%%Note_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let acfg%%ConfigAssetTotal_length#0: uint64 = 1u
        let acfg%%Sender_length#0: uint64 = 0u
        let acfg%%Receiver_length#0: uint64 = 0u
        let acfg%%Amount_length#0: uint64 = 0u
        let acfg%%CloseRemainderTo_length#0: uint64 = 0u
        let acfg%%VotePK_length#0: uint64 = 0u
        let acfg%%SelectionPK_length#0: uint64 = 0u
        let acfg%%VoteFirst_length#0: uint64 = 0u
        let acfg%%VoteLast_length#0: uint64 = 0u
        let acfg%%VoteKeyDilution_length#0: uint64 = 0u
        let acfg%%Type_length#0: uint64 = 0u
        let acfg%%XferAsset_length#0: uint64 = 0u
        let acfg%%AssetAmount_length#0: uint64 = 0u
        let acfg%%AssetSender_length#0: uint64 = 0u
        let acfg%%AssetReceiver_length#0: uint64 = 0u
        let acfg%%AssetCloseTo_length#0: uint64 = 0u
        let acfg%%ApplicationID_length#0: uint64 = 0u
        let acfg%%OnCompletion_length#0: uint64 = 0u
        let acfg%%ApprovalProgram_length#0: uint64 = 0u
        let acfg%%ClearStateProgram_length#0: uint64 = 0u
        let acfg%%RekeyTo_length#0: uint64 = 0u
        let acfg%%ConfigAsset_length#0: uint64 = 0u
        let acfg%%ConfigAssetDecimals_length#0: uint64 = 0u
        let acfg%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let acfg%%ConfigAssetURL_length#0: uint64 = 0u
        let acfg%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let acfg%%ConfigAssetManager_length#0: uint64 = 0u
        let acfg%%ConfigAssetReserve_length#0: uint64 = 0u
        let acfg%%ConfigAssetFreeze_length#0: uint64 = 0u
        let acfg%%ConfigAssetClawback_length#0: uint64 = 0u
        let acfg%%FreezeAsset_length#0: uint64 = 0u
        let acfg%%FreezeAssetAccount_length#0: uint64 = 0u
        let acfg%%FreezeAssetFrozen_length#0: uint64 = 0u
        let acfg%%GlobalNumUint_length#0: uint64 = 0u
        let acfg%%GlobalNumByteSlice_length#0: uint64 = 0u
        let acfg%%LocalNumUint_length#0: uint64 = 0u
        let acfg%%LocalNumByteSlice_length#0: uint64 = 0u
        let acfg%%ExtraProgramPages_length#0: uint64 = 0u
        let acfg%%Nonparticipation_length#0: uint64 = 0u
        let acfg%%StateProofPK_length#0: uint64 = 0u
        let acfg%%ApplicationArgs_length#0: uint64 = 0u
        let acfg%%Accounts_length#0: uint64 = 0u
        let acfg%%Assets_length#0: uint64 = 0u
        let acfg%%Applications_length#0: uint64 = 0u
        let acfg%%ApprovalProgramPages_length#0: uint64 = 0u
        let acfg%%ClearStateProgramPages_length#0: uint64 = 0u
        let pay1#0: itxn_field_set = itxn_field_set(1)
        let pay1%%param_Fee_idx_0#0: uint64 = 0u
        let pay1%%Fee_length#0: uint64 = 1u
        let pay1%%param_TypeEnum_idx_0#0: uint64 = pay
        let pay1%%TypeEnum_length#0: uint64 = 1u
        let pay1%%param_Receiver_idx_0#0: account = (txn Sender)
        let pay1%%Receiver_length#0: uint64 = 1u
        let pay1%%param_Amount_idx_0#0: uint64 = 0u
        let pay1%%Amount_length#0: uint64 = 1u
        let pay1%%param_Note_idx_0#0: string = "pay1"
        let pay1%%Note_length#0: uint64 = 1u
        let pay1%%Sender_length#0: uint64 = 0u
        let pay1%%CloseRemainderTo_length#0: uint64 = 0u
        let pay1%%VotePK_length#0: uint64 = 0u
        let pay1%%SelectionPK_length#0: uint64 = 0u
        let pay1%%VoteFirst_length#0: uint64 = 0u
        let pay1%%VoteLast_length#0: uint64 = 0u
        let pay1%%VoteKeyDilution_length#0: uint64 = 0u
        let pay1%%Type_length#0: uint64 = 0u
        let pay1%%XferAsset_length#0: uint64 = 0u
        let pay1%%AssetAmount_length#0: uint64 = 0u
        let pay1%%AssetSender_length#0: uint64 = 0u
        let pay1%%AssetReceiver_length#0: uint64 = 0u
        let pay1%%AssetCloseTo_length#0: uint64 = 0u
        let pay1%%ApplicationID_length#0: uint64 = 0u
        let pay1%%OnCompletion_length#0: uint64 = 0u
        let pay1%%ApprovalProgram_length#0: uint64 = 0u
        let pay1%%ClearStateProgram_length#0: uint64 = 0u
        let pay1%%RekeyTo_length#0: uint64 = 0u
        let pay1%%ConfigAsset_length#0: uint64 = 0u
        let pay1%%ConfigAssetTotal_length#0: uint64 = 0u
        let pay1%%ConfigAssetDecimals_length#0: uint64 = 0u
        let pay1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let pay1%%ConfigAssetUnitName_length#0: uint64 = 0u
        let pay1%%ConfigAssetName_length#0: uint64 = 0u
        let pay1%%ConfigAssetURL_length#0: uint64 = 0u
        let pay1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let pay1%%ConfigAssetManager_length#0: uint64 = 0u
        let pay1%%ConfigAssetReserve_length#0: uint64 = 0u
        let pay1%%ConfigAssetFreeze_length#0: uint64 = 0u
        let pay1%%ConfigAssetClawback_length#0: uint64 = 0u
        let pay1%%FreezeAsset_length#0: uint64 = 0u
        let pay1%%FreezeAssetAccount_length#0: uint64 = 0u
        let pay1%%FreezeAssetFrozen_length#0: uint64 = 0u
        let pay1%%GlobalNumUint_length#0: uint64 = 0u
        let pay1%%GlobalNumByteSlice_length#0: uint64 = 0u
        let pay1%%LocalNumUint_length#0: uint64 = 0u
        let pay1%%LocalNumByteSlice_length#0: uint64 = 0u
        let pay1%%ExtraProgramPages_length#0: uint64 = 0u
        let pay1%%Nonparticipation_length#0: uint64 = 0u
        let pay1%%StateProofPK_length#0: uint64 = 0u
        let pay1%%ApplicationArgs_length#0: uint64 = 0u
        let pay1%%Accounts_length#0: uint64 = 0u
        let pay1%%Assets_length#0: uint64 = 0u
        let pay1%%Applications_length#0: uint64 = 0u
        let pay1%%ApprovalProgramPages_length#0: uint64 = 0u
        let pay1%%ClearStateProgramPages_length#0: uint64 = 0u
        let pay2%%Sender_length#0: uint64 = pay1%%Sender_length#0
        let pay2%%param_Fee_idx_0#0: uint64 = pay1%%param_Fee_idx_0#0
        let pay2%%Fee_length#0: uint64 = pay1%%Fee_length#0
        let pay2%%param_Note_idx_0#0: string = pay1%%param_Note_idx_0#0
        let pay2%%Note_length#0: uint64 = pay1%%Note_length#0
        let pay2%%param_Receiver_idx_0#0: account = pay1%%param_Receiver_idx_0#0
        let pay2%%Receiver_length#0: uint64 = pay1%%Receiver_length#0
        let pay2%%param_Amount_idx_0#0: uint64 = pay1%%param_Amount_idx_0#0
        let pay2%%Amount_length#0: uint64 = pay1%%Amount_length#0
        let pay2%%CloseRemainderTo_length#0: uint64 = pay1%%CloseRemainderTo_length#0
        let pay2%%VotePK_length#0: uint64 = pay1%%VotePK_length#0
        let pay2%%SelectionPK_length#0: uint64 = pay1%%SelectionPK_length#0
        let pay2%%VoteFirst_length#0: uint64 = pay1%%VoteFirst_length#0
        let pay2%%VoteLast_length#0: uint64 = pay1%%VoteLast_length#0
        let pay2%%VoteKeyDilution_length#0: uint64 = pay1%%VoteKeyDilution_length#0
        let pay2%%Type_length#0: uint64 = pay1%%Type_length#0
        let pay2%%param_TypeEnum_idx_0#0: uint64 = pay1%%param_TypeEnum_idx_0#0
        let pay2%%TypeEnum_length#0: uint64 = pay1%%TypeEnum_length#0
        let pay2%%XferAsset_length#0: uint64 = pay1%%XferAsset_length#0
        let pay2%%AssetAmount_length#0: uint64 = pay1%%AssetAmount_length#0
        let pay2%%AssetSender_length#0: uint64 = pay1%%AssetSender_length#0
        let pay2%%AssetReceiver_length#0: uint64 = pay1%%AssetReceiver_length#0
        let pay2%%AssetCloseTo_length#0: uint64 = pay1%%AssetCloseTo_length#0
        let pay2%%ApplicationID_length#0: uint64 = pay1%%ApplicationID_length#0
        let pay2%%OnCompletion_length#0: uint64 = pay1%%OnCompletion_length#0
        let pay2%%ApprovalProgram_length#0: uint64 = pay1%%ApprovalProgram_length#0
        let pay2%%ClearStateProgram_length#0: uint64 = pay1%%ClearStateProgram_length#0
        let pay2%%RekeyTo_length#0: uint64 = pay1%%RekeyTo_length#0
        let pay2%%ConfigAsset_length#0: uint64 = pay1%%ConfigAsset_length#0
        let pay2%%ConfigAssetTotal_length#0: uint64 = pay1%%ConfigAssetTotal_length#0
        let pay2%%ConfigAssetDecimals_length#0: uint64 = pay1%%ConfigAssetDecimals_length#0
        let pay2%%ConfigAssetDefaultFrozen_length#0: uint64 = pay1%%ConfigAssetDefaultFrozen_length#0
        let pay2%%ConfigAssetUnitName_length#0: uint64 = pay1%%ConfigAssetUnitName_length#0
        let pay2%%ConfigAssetName_length#0: uint64 = pay1%%ConfigAssetName_length#0
        let pay2%%ConfigAssetURL_length#0: uint64 = pay1%%ConfigAssetURL_length#0
        let pay2%%ConfigAssetMetadataHash_length#0: uint64 = pay1%%ConfigAssetMetadataHash_length#0
        let pay2%%ConfigAssetManager_length#0: uint64 = pay1%%ConfigAssetManager_length#0
        let pay2%%ConfigAssetReserve_length#0: uint64 = pay1%%ConfigAssetReserve_length#0
        let pay2%%ConfigAssetFreeze_length#0: uint64 = pay1%%ConfigAssetFreeze_length#0
        let pay2%%ConfigAssetClawback_length#0: uint64 = pay1%%ConfigAssetClawback_length#0
        let pay2%%FreezeAsset_length#0: uint64 = pay1%%FreezeAsset_length#0
        let pay2%%FreezeAssetAccount_length#0: uint64 = pay1%%FreezeAssetAccount_length#0
        let pay2%%FreezeAssetFrozen_length#0: uint64 = pay1%%FreezeAssetFrozen_length#0
        let pay2%%GlobalNumUint_length#0: uint64 = pay1%%GlobalNumUint_length#0
        let pay2%%GlobalNumByteSlice_length#0: uint64 = pay1%%GlobalNumByteSlice_length#0
        let pay2%%LocalNumUint_length#0: uint64 = pay1%%LocalNumUint_length#0
        let pay2%%LocalNumByteSlice_length#0: uint64 = pay1%%LocalNumByteSlice_length#0
        let pay2%%ExtraProgramPages_length#0: uint64 = pay1%%ExtraProgramPages_length#0
        let pay2%%Nonparticipation_length#0: uint64 = pay1%%Nonparticipation_length#0
        let pay2%%StateProofPK_length#0: uint64 = pay1%%StateProofPK_length#0
        let pay2%%ApplicationArgs_length#0: uint64 = pay1%%ApplicationArgs_length#0
        let pay2%%Accounts_length#0: uint64 = pay1%%Accounts_length#0
        let pay2%%Assets_length#0: uint64 = pay1%%Assets_length#0
        let pay2%%Applications_length#0: uint64 = pay1%%Applications_length#0
        let pay2%%ApprovalProgramPages_length#0: uint64 = pay1%%ApprovalProgramPages_length#0
        let pay2%%ClearStateProgramPages_length#0: uint64 = pay1%%ClearStateProgramPages_length#0
        let pay2#0: itxn_field_set = itxn_field_set(2)
        let pay2%%param_Note_idx_0#1: string = "pay2"
        let pay2%%Note_length#1: uint64 = 1u
        let pay3%%Sender_length#0: uint64 = pay2%%Sender_length#0
        let pay3%%param_Fee_idx_0#0: uint64 = pay2%%param_Fee_idx_0#0
        let pay3%%Fee_length#0: uint64 = pay2%%Fee_length#0
        let pay3%%param_Note_idx_0#0: string = pay2%%param_Note_idx_0#1
        let pay3%%Note_length#0: uint64 = pay2%%Note_length#1
        let pay3%%param_Receiver_idx_0#0: account = pay2%%param_Receiver_idx_0#0
        let pay3%%Receiver_length#0: uint64 = pay2%%Receiver_length#0
        let pay3%%param_Amount_idx_0#0: uint64 = pay2%%param_Amount_idx_0#0
        let pay3%%Amount_length#0: uint64 = pay2%%Amount_length#0
        let pay3%%CloseRemainderTo_length#0: uint64 = pay2%%CloseRemainderTo_length#0
        let pay3%%VotePK_length#0: uint64 = pay2%%VotePK_length#0
        let pay3%%SelectionPK_length#0: uint64 = pay2%%SelectionPK_length#0
        let pay3%%VoteFirst_length#0: uint64 = pay2%%VoteFirst_length#0
        let pay3%%VoteLast_length#0: uint64 = pay2%%VoteLast_length#0
        let pay3%%VoteKeyDilution_length#0: uint64 = pay2%%VoteKeyDilution_length#0
        let pay3%%Type_length#0: uint64 = pay2%%Type_length#0
        let pay3%%param_TypeEnum_idx_0#0: uint64 = pay2%%param_TypeEnum_idx_0#0
        let pay3%%TypeEnum_length#0: uint64 = pay2%%TypeEnum_length#0
        let pay3%%XferAsset_length#0: uint64 = pay2%%XferAsset_length#0
        let pay3%%AssetAmount_length#0: uint64 = pay2%%AssetAmount_length#0
        let pay3%%AssetSender_length#0: uint64 = pay2%%AssetSender_length#0
        let pay3%%AssetReceiver_length#0: uint64 = pay2%%AssetReceiver_length#0
        let pay3%%AssetCloseTo_length#0: uint64 = pay2%%AssetCloseTo_length#0
        let pay3%%ApplicationID_length#0: uint64 = pay2%%ApplicationID_length#0
        let pay3%%OnCompletion_length#0: uint64 = pay2%%OnCompletion_length#0
        let pay3%%ApprovalProgram_length#0: uint64 = pay2%%ApprovalProgram_length#0
        let pay3%%ClearStateProgram_length#0: uint64 = pay2%%ClearStateProgram_length#0
        let pay3%%RekeyTo_length#0: uint64 = pay2%%RekeyTo_length#0
        let pay3%%ConfigAsset_length#0: uint64 = pay2%%ConfigAsset_length#0
        let pay3%%ConfigAssetTotal_length#0: uint64 = pay2%%ConfigAssetTotal_length#0
        let pay3%%ConfigAssetDecimals_length#0: uint64 = pay2%%ConfigAssetDecimals_length#0
        let pay3%%ConfigAssetDefaultFrozen_length#0: uint64 = pay2%%ConfigAssetDefaultFrozen_length#0
        let pay3%%ConfigAssetUnitName_length#0: uint64 = pay2%%ConfigAssetUnitName_length#0
        let pay3%%ConfigAssetName_length#0: uint64 = pay2%%ConfigAssetName_length#0
        let pay3%%ConfigAssetURL_length#0: uint64 = pay2%%ConfigAssetURL_length#0
        let pay3%%ConfigAssetMetadataHash_length#0: uint64 = pay2%%ConfigAssetMetadataHash_length#0
        let pay3%%ConfigAssetManager_length#0: uint64 = pay2%%ConfigAssetManager_length#0
        let pay3%%ConfigAssetReserve_length#0: uint64 = pay2%%ConfigAssetReserve_length#0
        let pay3%%ConfigAssetFreeze_length#0: uint64 = pay2%%ConfigAssetFreeze_length#0
        let pay3%%ConfigAssetClawback_length#0: uint64 = pay2%%ConfigAssetClawback_length#0
        let pay3%%FreezeAsset_length#0: uint64 = pay2%%FreezeAsset_length#0
        let pay3%%FreezeAssetAccount_length#0: uint64 = pay2%%FreezeAssetAccount_length#0
        let pay3%%FreezeAssetFrozen_length#0: uint64 = pay2%%FreezeAssetFrozen_length#0
        let pay3%%GlobalNumUint_length#0: uint64 = pay2%%GlobalNumUint_length#0
        let pay3%%GlobalNumByteSlice_length#0: uint64 = pay2%%GlobalNumByteSlice_length#0
        let pay3%%LocalNumUint_length#0: uint64 = pay2%%LocalNumUint_length#0
        let pay3%%LocalNumByteSlice_length#0: uint64 = pay2%%LocalNumByteSlice_length#0
        let pay3%%ExtraProgramPages_length#0: uint64 = pay2%%ExtraProgramPages_length#0
        let pay3%%Nonparticipation_length#0: uint64 = pay2%%Nonparticipation_length#0
        let pay3%%StateProofPK_length#0: uint64 = pay2%%StateProofPK_length#0
        let pay3%%ApplicationArgs_length#0: uint64 = pay2%%ApplicationArgs_length#0
        let pay3%%Accounts_length#0: uint64 = pay2%%Accounts_length#0
        let pay3%%Assets_length#0: uint64 = pay2%%Assets_length#0
        let pay3%%Applications_length#0: uint64 = pay2%%Applications_length#0
        let pay3%%ApprovalProgramPages_length#0: uint64 = pay2%%ApprovalProgramPages_length#0
        let pay3%%ClearStateProgramPages_length#0: uint64 = pay2%%ClearStateProgramPages_length#0
        let pay3#0: itxn_field_set = itxn_field_set(3)
        let pay3%%param_Note_idx_0#1: string = "pay3"
        let pay3%%Note_length#1: uint64 = 1u
        itxn_begin
        ((itxn_field Note) pay1%%param_Note_idx_0#0)
        ((itxn_field Amount) pay1%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay1%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) pay1%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) pay1%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L25
        itxn_next
        ((itxn_field ConfigAssetTotal) acfg%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field Note) acfg%%param_Note_idx_0#0)
        ((itxn_field ConfigAssetName) acfg%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) acfg%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) acfg%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) acfg%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L25
        itxn_next
        ((itxn_field TypeEnum) pay2%%param_TypeEnum_idx_0#0)
        ((itxn_field Amount) pay2%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay2%%param_Receiver_idx_0#0)
        ((itxn_field Note) pay2%%param_Note_idx_0#1)
        ((itxn_field Fee) pay2%%param_Fee_idx_0#0)
        goto block@3
    block@3: // next_txn_L25
        itxn_next
        ((itxn_field TypeEnum) pay3%%param_TypeEnum_idx_0#0)
        ((itxn_field Amount) pay3%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay3%%param_Receiver_idx_0#0)
        ((itxn_field Note) pay3%%param_Note_idx_0#1)
        ((itxn_field Fee) pay3%%param_Fee_idx_0#0)
        goto block@4
    block@4: // next_txn_L25
        itxn_submit
        let (sliced_txns.0#0: itxn_group_idx, sliced_txns.1#0: itxn_group_idx) = (itxn_group_idx(1), itxn_group_idx(2))
        let sliced_txns.0._is_last#0: bool = 0u
        let sliced_txns.0.Sender#0: account = itxn[sliced_txns.0#0].Sender
        let sliced_txns.0.Fee#0: uint64 = itxn[sliced_txns.0#0].Fee
        let sliced_txns.0.FirstValid#0: uint64 = itxn[sliced_txns.0#0].FirstValid
        let sliced_txns.0.FirstValidTime#0: uint64 = itxn[sliced_txns.0#0].FirstValidTime
        let sliced_txns.0.LastValid#0: uint64 = itxn[sliced_txns.0#0].LastValid
        let sliced_txns.0.Note#0: bytes = itxn[sliced_txns.0#0].Note
        let sliced_txns.0.Lease#0: bytes[32] = itxn[sliced_txns.0#0].Lease
        let sliced_txns.0.Receiver#0: account = itxn[sliced_txns.0#0].Receiver
        let sliced_txns.0.Amount#0: uint64 = itxn[sliced_txns.0#0].Amount
        let sliced_txns.0.CloseRemainderTo#0: account = itxn[sliced_txns.0#0].CloseRemainderTo
        let sliced_txns.0.VotePK#0: bytes[32] = itxn[sliced_txns.0#0].VotePK
        let sliced_txns.0.SelectionPK#0: bytes[32] = itxn[sliced_txns.0#0].SelectionPK
        let sliced_txns.0.VoteFirst#0: uint64 = itxn[sliced_txns.0#0].VoteFirst
        let sliced_txns.0.VoteLast#0: uint64 = itxn[sliced_txns.0#0].VoteLast
        let sliced_txns.0.VoteKeyDilution#0: uint64 = itxn[sliced_txns.0#0].VoteKeyDilution
        let sliced_txns.0.Type#0: bytes = itxn[sliced_txns.0#0].Type
        let sliced_txns.0.TypeEnum#0: uint64 = itxn[sliced_txns.0#0].TypeEnum
        let sliced_txns.0.XferAsset#0: uint64 = itxn[sliced_txns.0#0].XferAsset
        let sliced_txns.0.AssetAmount#0: uint64 = itxn[sliced_txns.0#0].AssetAmount
        let sliced_txns.0.AssetSender#0: account = itxn[sliced_txns.0#0].AssetSender
        let sliced_txns.0.AssetReceiver#0: account = itxn[sliced_txns.0#0].AssetReceiver
        let sliced_txns.0.AssetCloseTo#0: account = itxn[sliced_txns.0#0].AssetCloseTo
        let sliced_txns.0.GroupIndex#0: uint64 = itxn[sliced_txns.0#0].GroupIndex
        let sliced_txns.0.TxID#0: bytes[32] = itxn[sliced_txns.0#0].TxID
        let sliced_txns.0.ApplicationID#0: uint64 = itxn[sliced_txns.0#0].ApplicationID
        let sliced_txns.0.OnCompletion#0: uint64 = itxn[sliced_txns.0#0].OnCompletion
        let sliced_txns.0.NumAppArgs#0: uint64 = itxn[sliced_txns.0#0].NumAppArgs
        let sliced_txns.0.NumAccounts#0: uint64 = itxn[sliced_txns.0#0].NumAccounts
        let sliced_txns.0.ApprovalProgram#0: bytes = itxn[sliced_txns.0#0].ApprovalProgram
        let sliced_txns.0.ClearStateProgram#0: bytes = itxn[sliced_txns.0#0].ClearStateProgram
        let sliced_txns.0.RekeyTo#0: account = itxn[sliced_txns.0#0].RekeyTo
        let sliced_txns.0.ConfigAsset#0: uint64 = itxn[sliced_txns.0#0].ConfigAsset
        let sliced_txns.0.ConfigAssetTotal#0: uint64 = itxn[sliced_txns.0#0].ConfigAssetTotal
        let sliced_txns.0.ConfigAssetDecimals#0: uint64 = itxn[sliced_txns.0#0].ConfigAssetDecimals
        let sliced_txns.0.ConfigAssetDefaultFrozen#0: bool = itxn[sliced_txns.0#0].ConfigAssetDefaultFrozen
        let sliced_txns.0.ConfigAssetUnitName#0: bytes = itxn[sliced_txns.0#0].ConfigAssetUnitName
        let sliced_txns.0.ConfigAssetName#0: bytes = itxn[sliced_txns.0#0].ConfigAssetName
        let sliced_txns.0.ConfigAssetURL#0: bytes = itxn[sliced_txns.0#0].ConfigAssetURL
        let sliced_txns.0.ConfigAssetMetadataHash#0: bytes[32] = itxn[sliced_txns.0#0].ConfigAssetMetadataHash
        let sliced_txns.0.ConfigAssetManager#0: account = itxn[sliced_txns.0#0].ConfigAssetManager
        let sliced_txns.0.ConfigAssetReserve#0: account = itxn[sliced_txns.0#0].ConfigAssetReserve
        let sliced_txns.0.ConfigAssetFreeze#0: account = itxn[sliced_txns.0#0].ConfigAssetFreeze
        let sliced_txns.0.ConfigAssetClawback#0: account = itxn[sliced_txns.0#0].ConfigAssetClawback
        let sliced_txns.0.FreezeAsset#0: uint64 = itxn[sliced_txns.0#0].FreezeAsset
        let sliced_txns.0.FreezeAssetAccount#0: account = itxn[sliced_txns.0#0].FreezeAssetAccount
        let sliced_txns.0.FreezeAssetFrozen#0: bool = itxn[sliced_txns.0#0].FreezeAssetFrozen
        let sliced_txns.0.NumAssets#0: uint64 = itxn[sliced_txns.0#0].NumAssets
        let sliced_txns.0.NumApplications#0: uint64 = itxn[sliced_txns.0#0].NumApplications
        let sliced_txns.0.GlobalNumUint#0: uint64 = itxn[sliced_txns.0#0].GlobalNumUint
        let sliced_txns.0.GlobalNumByteSlice#0: uint64 = itxn[sliced_txns.0#0].GlobalNumByteSlice
        let sliced_txns.0.LocalNumUint#0: uint64 = itxn[sliced_txns.0#0].LocalNumUint
        let sliced_txns.0.LocalNumByteSlice#0: uint64 = itxn[sliced_txns.0#0].LocalNumByteSlice
        let sliced_txns.0.ExtraProgramPages#0: uint64 = itxn[sliced_txns.0#0].ExtraProgramPages
        let sliced_txns.0.Nonparticipation#0: bool = itxn[sliced_txns.0#0].Nonparticipation
        let sliced_txns.0.NumLogs#0: uint64 = itxn[sliced_txns.0#0].NumLogs
        let sliced_txns.0.CreatedAssetID#0: uint64 = itxn[sliced_txns.0#0].CreatedAssetID
        let sliced_txns.0.CreatedApplicationID#0: uint64 = itxn[sliced_txns.0#0].CreatedApplicationID
        let sliced_txns.0.LastLog#0: bytes = itxn[sliced_txns.0#0].LastLog
        let sliced_txns.0.StateProofPK#0: bytes = itxn[sliced_txns.0#0].StateProofPK
        let sliced_txns.0.NumApprovalProgramPages#0: uint64 = itxn[sliced_txns.0#0].NumApprovalProgramPages
        let sliced_txns.0.NumClearStateProgramPages#0: uint64 = itxn[sliced_txns.0#0].NumClearStateProgramPages
        let sliced_txns.1._is_last#0: bool = 0u
        let sliced_txns.1.Sender#0: account = itxn[sliced_txns.1#0].Sender
        let sliced_txns.1.Fee#0: uint64 = itxn[sliced_txns.1#0].Fee
        let sliced_txns.1.FirstValid#0: uint64 = itxn[sliced_txns.1#0].FirstValid
        let sliced_txns.1.FirstValidTime#0: uint64 = itxn[sliced_txns.1#0].FirstValidTime
        let sliced_txns.1.LastValid#0: uint64 = itxn[sliced_txns.1#0].LastValid
        let sliced_txns.1.Note#0: bytes = itxn[sliced_txns.1#0].Note
        let sliced_txns.1.Lease#0: bytes[32] = itxn[sliced_txns.1#0].Lease
        let sliced_txns.1.Receiver#0: account = itxn[sliced_txns.1#0].Receiver
        let sliced_txns.1.Amount#0: uint64 = itxn[sliced_txns.1#0].Amount
        let sliced_txns.1.CloseRemainderTo#0: account = itxn[sliced_txns.1#0].CloseRemainderTo
        let sliced_txns.1.VotePK#0: bytes[32] = itxn[sliced_txns.1#0].VotePK
        let sliced_txns.1.SelectionPK#0: bytes[32] = itxn[sliced_txns.1#0].SelectionPK
        let sliced_txns.1.VoteFirst#0: uint64 = itxn[sliced_txns.1#0].VoteFirst
        let sliced_txns.1.VoteLast#0: uint64 = itxn[sliced_txns.1#0].VoteLast
        let sliced_txns.1.VoteKeyDilution#0: uint64 = itxn[sliced_txns.1#0].VoteKeyDilution
        let sliced_txns.1.Type#0: bytes = itxn[sliced_txns.1#0].Type
        let sliced_txns.1.TypeEnum#0: uint64 = itxn[sliced_txns.1#0].TypeEnum
        let sliced_txns.1.XferAsset#0: uint64 = itxn[sliced_txns.1#0].XferAsset
        let sliced_txns.1.AssetAmount#0: uint64 = itxn[sliced_txns.1#0].AssetAmount
        let sliced_txns.1.AssetSender#0: account = itxn[sliced_txns.1#0].AssetSender
        let sliced_txns.1.AssetReceiver#0: account = itxn[sliced_txns.1#0].AssetReceiver
        let sliced_txns.1.AssetCloseTo#0: account = itxn[sliced_txns.1#0].AssetCloseTo
        let sliced_txns.1.GroupIndex#0: uint64 = itxn[sliced_txns.1#0].GroupIndex
        let sliced_txns.1.TxID#0: bytes[32] = itxn[sliced_txns.1#0].TxID
        let sliced_txns.1.ApplicationID#0: uint64 = itxn[sliced_txns.1#0].ApplicationID
        let sliced_txns.1.OnCompletion#0: uint64 = itxn[sliced_txns.1#0].OnCompletion
        let sliced_txns.1.NumAppArgs#0: uint64 = itxn[sliced_txns.1#0].NumAppArgs
        let sliced_txns.1.NumAccounts#0: uint64 = itxn[sliced_txns.1#0].NumAccounts
        let sliced_txns.1.ApprovalProgram#0: bytes = itxn[sliced_txns.1#0].ApprovalProgram
        let sliced_txns.1.ClearStateProgram#0: bytes = itxn[sliced_txns.1#0].ClearStateProgram
        let sliced_txns.1.RekeyTo#0: account = itxn[sliced_txns.1#0].RekeyTo
        let sliced_txns.1.ConfigAsset#0: uint64 = itxn[sliced_txns.1#0].ConfigAsset
        let sliced_txns.1.ConfigAssetTotal#0: uint64 = itxn[sliced_txns.1#0].ConfigAssetTotal
        let sliced_txns.1.ConfigAssetDecimals#0: uint64 = itxn[sliced_txns.1#0].ConfigAssetDecimals
        let sliced_txns.1.ConfigAssetDefaultFrozen#0: bool = itxn[sliced_txns.1#0].ConfigAssetDefaultFrozen
        let sliced_txns.1.ConfigAssetUnitName#0: bytes = itxn[sliced_txns.1#0].ConfigAssetUnitName
        let sliced_txns.1.ConfigAssetName#0: bytes = itxn[sliced_txns.1#0].ConfigAssetName
        let sliced_txns.1.ConfigAssetURL#0: bytes = itxn[sliced_txns.1#0].ConfigAssetURL
        let sliced_txns.1.ConfigAssetMetadataHash#0: bytes[32] = itxn[sliced_txns.1#0].ConfigAssetMetadataHash
        let sliced_txns.1.ConfigAssetManager#0: account = itxn[sliced_txns.1#0].ConfigAssetManager
        let sliced_txns.1.ConfigAssetReserve#0: account = itxn[sliced_txns.1#0].ConfigAssetReserve
        let sliced_txns.1.ConfigAssetFreeze#0: account = itxn[sliced_txns.1#0].ConfigAssetFreeze
        let sliced_txns.1.ConfigAssetClawback#0: account = itxn[sliced_txns.1#0].ConfigAssetClawback
        let sliced_txns.1.FreezeAsset#0: uint64 = itxn[sliced_txns.1#0].FreezeAsset
        let sliced_txns.1.FreezeAssetAccount#0: account = itxn[sliced_txns.1#0].FreezeAssetAccount
        let sliced_txns.1.FreezeAssetFrozen#0: bool = itxn[sliced_txns.1#0].FreezeAssetFrozen
        let sliced_txns.1.NumAssets#0: uint64 = itxn[sliced_txns.1#0].NumAssets
        let sliced_txns.1.NumApplications#0: uint64 = itxn[sliced_txns.1#0].NumApplications
        let sliced_txns.1.GlobalNumUint#0: uint64 = itxn[sliced_txns.1#0].GlobalNumUint
        let sliced_txns.1.GlobalNumByteSlice#0: uint64 = itxn[sliced_txns.1#0].GlobalNumByteSlice
        let sliced_txns.1.LocalNumUint#0: uint64 = itxn[sliced_txns.1#0].LocalNumUint
        let sliced_txns.1.LocalNumByteSlice#0: uint64 = itxn[sliced_txns.1#0].LocalNumByteSlice
        let sliced_txns.1.ExtraProgramPages#0: uint64 = itxn[sliced_txns.1#0].ExtraProgramPages
        let sliced_txns.1.Nonparticipation#0: bool = itxn[sliced_txns.1#0].Nonparticipation
        let sliced_txns.1.NumLogs#0: uint64 = itxn[sliced_txns.1#0].NumLogs
        let sliced_txns.1.CreatedAssetID#0: uint64 = itxn[sliced_txns.1#0].CreatedAssetID
        let sliced_txns.1.CreatedApplicationID#0: uint64 = itxn[sliced_txns.1#0].CreatedApplicationID
        let sliced_txns.1.LastLog#0: bytes = itxn[sliced_txns.1#0].LastLog
        let sliced_txns.1.StateProofPK#0: bytes = itxn[sliced_txns.1#0].StateProofPK
        let sliced_txns.1.NumApprovalProgramPages#0: uint64 = itxn[sliced_txns.1#0].NumApprovalProgramPages
        let sliced_txns.1.NumClearStateProgramPages#0: uint64 = itxn[sliced_txns.1#0].NumClearStateProgramPages
        let tmp%0#0: bool = (== sliced_txns.0.Note#0 0x61636667)
        (assert tmp%0#0)
        let tmp%1#0: bool = (== sliced_txns.1.Note#0 0x70617932)
        (assert tmp%1#0)
        return 

subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested() -> void:
    block@0: // L29
        let acfg#0: itxn_field_set = itxn_field_set(0)
        let acfg%%param_Fee_idx_0#0: uint64 = 0u
        let acfg%%Fee_length#0: uint64 = 1u
        let acfg%%param_TypeEnum_idx_0#0: uint64 = acfg
        let acfg%%TypeEnum_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetUnitName_idx_0#0: string = "TST"
        let acfg%%ConfigAssetUnitName_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetName_idx_0#0: string = "TEST"
        let acfg%%ConfigAssetName_length#0: uint64 = 1u
        let acfg%%param_Note_idx_0#0: string = "acfg"
        let acfg%%Note_length#0: uint64 = 1u
        let acfg%%param_ConfigAssetTotal_idx_0#0: uint64 = 1u
        let acfg%%ConfigAssetTotal_length#0: uint64 = 1u
        let acfg%%Sender_length#0: uint64 = 0u
        let acfg%%Receiver_length#0: uint64 = 0u
        let acfg%%Amount_length#0: uint64 = 0u
        let acfg%%CloseRemainderTo_length#0: uint64 = 0u
        let acfg%%VotePK_length#0: uint64 = 0u
        let acfg%%SelectionPK_length#0: uint64 = 0u
        let acfg%%VoteFirst_length#0: uint64 = 0u
        let acfg%%VoteLast_length#0: uint64 = 0u
        let acfg%%VoteKeyDilution_length#0: uint64 = 0u
        let acfg%%Type_length#0: uint64 = 0u
        let acfg%%XferAsset_length#0: uint64 = 0u
        let acfg%%AssetAmount_length#0: uint64 = 0u
        let acfg%%AssetSender_length#0: uint64 = 0u
        let acfg%%AssetReceiver_length#0: uint64 = 0u
        let acfg%%AssetCloseTo_length#0: uint64 = 0u
        let acfg%%ApplicationID_length#0: uint64 = 0u
        let acfg%%OnCompletion_length#0: uint64 = 0u
        let acfg%%ApprovalProgram_length#0: uint64 = 0u
        let acfg%%ClearStateProgram_length#0: uint64 = 0u
        let acfg%%RekeyTo_length#0: uint64 = 0u
        let acfg%%ConfigAsset_length#0: uint64 = 0u
        let acfg%%ConfigAssetDecimals_length#0: uint64 = 0u
        let acfg%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let acfg%%ConfigAssetURL_length#0: uint64 = 0u
        let acfg%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let acfg%%ConfigAssetManager_length#0: uint64 = 0u
        let acfg%%ConfigAssetReserve_length#0: uint64 = 0u
        let acfg%%ConfigAssetFreeze_length#0: uint64 = 0u
        let acfg%%ConfigAssetClawback_length#0: uint64 = 0u
        let acfg%%FreezeAsset_length#0: uint64 = 0u
        let acfg%%FreezeAssetAccount_length#0: uint64 = 0u
        let acfg%%FreezeAssetFrozen_length#0: uint64 = 0u
        let acfg%%GlobalNumUint_length#0: uint64 = 0u
        let acfg%%GlobalNumByteSlice_length#0: uint64 = 0u
        let acfg%%LocalNumUint_length#0: uint64 = 0u
        let acfg%%LocalNumByteSlice_length#0: uint64 = 0u
        let acfg%%ExtraProgramPages_length#0: uint64 = 0u
        let acfg%%Nonparticipation_length#0: uint64 = 0u
        let acfg%%StateProofPK_length#0: uint64 = 0u
        let acfg%%ApplicationArgs_length#0: uint64 = 0u
        let acfg%%Accounts_length#0: uint64 = 0u
        let acfg%%Assets_length#0: uint64 = 0u
        let acfg%%Applications_length#0: uint64 = 0u
        let acfg%%ApprovalProgramPages_length#0: uint64 = 0u
        let acfg%%ClearStateProgramPages_length#0: uint64 = 0u
        let pay1#0: itxn_field_set = itxn_field_set(1)
        let pay1%%param_Fee_idx_0#0: uint64 = 0u
        let pay1%%Fee_length#0: uint64 = 1u
        let pay1%%param_TypeEnum_idx_0#0: uint64 = pay
        let pay1%%TypeEnum_length#0: uint64 = 1u
        let pay1%%param_Receiver_idx_0#0: account = (txn Sender)
        let pay1%%Receiver_length#0: uint64 = 1u
        let pay1%%param_Amount_idx_0#0: uint64 = 0u
        let pay1%%Amount_length#0: uint64 = 1u
        let pay1%%param_Note_idx_0#0: string = "pay1"
        let pay1%%Note_length#0: uint64 = 1u
        let pay1%%Sender_length#0: uint64 = 0u
        let pay1%%CloseRemainderTo_length#0: uint64 = 0u
        let pay1%%VotePK_length#0: uint64 = 0u
        let pay1%%SelectionPK_length#0: uint64 = 0u
        let pay1%%VoteFirst_length#0: uint64 = 0u
        let pay1%%VoteLast_length#0: uint64 = 0u
        let pay1%%VoteKeyDilution_length#0: uint64 = 0u
        let pay1%%Type_length#0: uint64 = 0u
        let pay1%%XferAsset_length#0: uint64 = 0u
        let pay1%%AssetAmount_length#0: uint64 = 0u
        let pay1%%AssetSender_length#0: uint64 = 0u
        let pay1%%AssetReceiver_length#0: uint64 = 0u
        let pay1%%AssetCloseTo_length#0: uint64 = 0u
        let pay1%%ApplicationID_length#0: uint64 = 0u
        let pay1%%OnCompletion_length#0: uint64 = 0u
        let pay1%%ApprovalProgram_length#0: uint64 = 0u
        let pay1%%ClearStateProgram_length#0: uint64 = 0u
        let pay1%%RekeyTo_length#0: uint64 = 0u
        let pay1%%ConfigAsset_length#0: uint64 = 0u
        let pay1%%ConfigAssetTotal_length#0: uint64 = 0u
        let pay1%%ConfigAssetDecimals_length#0: uint64 = 0u
        let pay1%%ConfigAssetDefaultFrozen_length#0: uint64 = 0u
        let pay1%%ConfigAssetUnitName_length#0: uint64 = 0u
        let pay1%%ConfigAssetName_length#0: uint64 = 0u
        let pay1%%ConfigAssetURL_length#0: uint64 = 0u
        let pay1%%ConfigAssetMetadataHash_length#0: uint64 = 0u
        let pay1%%ConfigAssetManager_length#0: uint64 = 0u
        let pay1%%ConfigAssetReserve_length#0: uint64 = 0u
        let pay1%%ConfigAssetFreeze_length#0: uint64 = 0u
        let pay1%%ConfigAssetClawback_length#0: uint64 = 0u
        let pay1%%FreezeAsset_length#0: uint64 = 0u
        let pay1%%FreezeAssetAccount_length#0: uint64 = 0u
        let pay1%%FreezeAssetFrozen_length#0: uint64 = 0u
        let pay1%%GlobalNumUint_length#0: uint64 = 0u
        let pay1%%GlobalNumByteSlice_length#0: uint64 = 0u
        let pay1%%LocalNumUint_length#0: uint64 = 0u
        let pay1%%LocalNumByteSlice_length#0: uint64 = 0u
        let pay1%%ExtraProgramPages_length#0: uint64 = 0u
        let pay1%%Nonparticipation_length#0: uint64 = 0u
        let pay1%%StateProofPK_length#0: uint64 = 0u
        let pay1%%ApplicationArgs_length#0: uint64 = 0u
        let pay1%%Accounts_length#0: uint64 = 0u
        let pay1%%Assets_length#0: uint64 = 0u
        let pay1%%Applications_length#0: uint64 = 0u
        let pay1%%ApprovalProgramPages_length#0: uint64 = 0u
        let pay1%%ClearStateProgramPages_length#0: uint64 = 0u
        let pay2%%Sender_length#0: uint64 = pay1%%Sender_length#0
        let pay2%%param_Fee_idx_0#0: uint64 = pay1%%param_Fee_idx_0#0
        let pay2%%Fee_length#0: uint64 = pay1%%Fee_length#0
        let pay2%%param_Note_idx_0#0: string = pay1%%param_Note_idx_0#0
        let pay2%%Note_length#0: uint64 = pay1%%Note_length#0
        let pay2%%param_Receiver_idx_0#0: account = pay1%%param_Receiver_idx_0#0
        let pay2%%Receiver_length#0: uint64 = pay1%%Receiver_length#0
        let pay2%%param_Amount_idx_0#0: uint64 = pay1%%param_Amount_idx_0#0
        let pay2%%Amount_length#0: uint64 = pay1%%Amount_length#0
        let pay2%%CloseRemainderTo_length#0: uint64 = pay1%%CloseRemainderTo_length#0
        let pay2%%VotePK_length#0: uint64 = pay1%%VotePK_length#0
        let pay2%%SelectionPK_length#0: uint64 = pay1%%SelectionPK_length#0
        let pay2%%VoteFirst_length#0: uint64 = pay1%%VoteFirst_length#0
        let pay2%%VoteLast_length#0: uint64 = pay1%%VoteLast_length#0
        let pay2%%VoteKeyDilution_length#0: uint64 = pay1%%VoteKeyDilution_length#0
        let pay2%%Type_length#0: uint64 = pay1%%Type_length#0
        let pay2%%param_TypeEnum_idx_0#0: uint64 = pay1%%param_TypeEnum_idx_0#0
        let pay2%%TypeEnum_length#0: uint64 = pay1%%TypeEnum_length#0
        let pay2%%XferAsset_length#0: uint64 = pay1%%XferAsset_length#0
        let pay2%%AssetAmount_length#0: uint64 = pay1%%AssetAmount_length#0
        let pay2%%AssetSender_length#0: uint64 = pay1%%AssetSender_length#0
        let pay2%%AssetReceiver_length#0: uint64 = pay1%%AssetReceiver_length#0
        let pay2%%AssetCloseTo_length#0: uint64 = pay1%%AssetCloseTo_length#0
        let pay2%%ApplicationID_length#0: uint64 = pay1%%ApplicationID_length#0
        let pay2%%OnCompletion_length#0: uint64 = pay1%%OnCompletion_length#0
        let pay2%%ApprovalProgram_length#0: uint64 = pay1%%ApprovalProgram_length#0
        let pay2%%ClearStateProgram_length#0: uint64 = pay1%%ClearStateProgram_length#0
        let pay2%%RekeyTo_length#0: uint64 = pay1%%RekeyTo_length#0
        let pay2%%ConfigAsset_length#0: uint64 = pay1%%ConfigAsset_length#0
        let pay2%%ConfigAssetTotal_length#0: uint64 = pay1%%ConfigAssetTotal_length#0
        let pay2%%ConfigAssetDecimals_length#0: uint64 = pay1%%ConfigAssetDecimals_length#0
        let pay2%%ConfigAssetDefaultFrozen_length#0: uint64 = pay1%%ConfigAssetDefaultFrozen_length#0
        let pay2%%ConfigAssetUnitName_length#0: uint64 = pay1%%ConfigAssetUnitName_length#0
        let pay2%%ConfigAssetName_length#0: uint64 = pay1%%ConfigAssetName_length#0
        let pay2%%ConfigAssetURL_length#0: uint64 = pay1%%ConfigAssetURL_length#0
        let pay2%%ConfigAssetMetadataHash_length#0: uint64 = pay1%%ConfigAssetMetadataHash_length#0
        let pay2%%ConfigAssetManager_length#0: uint64 = pay1%%ConfigAssetManager_length#0
        let pay2%%ConfigAssetReserve_length#0: uint64 = pay1%%ConfigAssetReserve_length#0
        let pay2%%ConfigAssetFreeze_length#0: uint64 = pay1%%ConfigAssetFreeze_length#0
        let pay2%%ConfigAssetClawback_length#0: uint64 = pay1%%ConfigAssetClawback_length#0
        let pay2%%FreezeAsset_length#0: uint64 = pay1%%FreezeAsset_length#0
        let pay2%%FreezeAssetAccount_length#0: uint64 = pay1%%FreezeAssetAccount_length#0
        let pay2%%FreezeAssetFrozen_length#0: uint64 = pay1%%FreezeAssetFrozen_length#0
        let pay2%%GlobalNumUint_length#0: uint64 = pay1%%GlobalNumUint_length#0
        let pay2%%GlobalNumByteSlice_length#0: uint64 = pay1%%GlobalNumByteSlice_length#0
        let pay2%%LocalNumUint_length#0: uint64 = pay1%%LocalNumUint_length#0
        let pay2%%LocalNumByteSlice_length#0: uint64 = pay1%%LocalNumByteSlice_length#0
        let pay2%%ExtraProgramPages_length#0: uint64 = pay1%%ExtraProgramPages_length#0
        let pay2%%Nonparticipation_length#0: uint64 = pay1%%Nonparticipation_length#0
        let pay2%%StateProofPK_length#0: uint64 = pay1%%StateProofPK_length#0
        let pay2%%ApplicationArgs_length#0: uint64 = pay1%%ApplicationArgs_length#0
        let pay2%%Accounts_length#0: uint64 = pay1%%Accounts_length#0
        let pay2%%Assets_length#0: uint64 = pay1%%Assets_length#0
        let pay2%%Applications_length#0: uint64 = pay1%%Applications_length#0
        let pay2%%ApprovalProgramPages_length#0: uint64 = pay1%%ApprovalProgramPages_length#0
        let pay2%%ClearStateProgramPages_length#0: uint64 = pay1%%ClearStateProgramPages_length#0
        let pay2#0: itxn_field_set = itxn_field_set(2)
        let pay2%%param_Note_idx_0#1: string = "pay2"
        let pay2%%Note_length#1: uint64 = 1u
        let pay3%%Sender_length#0: uint64 = pay2%%Sender_length#0
        let pay3%%param_Fee_idx_0#0: uint64 = pay2%%param_Fee_idx_0#0
        let pay3%%Fee_length#0: uint64 = pay2%%Fee_length#0
        let pay3%%param_Note_idx_0#0: string = pay2%%param_Note_idx_0#1
        let pay3%%Note_length#0: uint64 = pay2%%Note_length#1
        let pay3%%param_Receiver_idx_0#0: account = pay2%%param_Receiver_idx_0#0
        let pay3%%Receiver_length#0: uint64 = pay2%%Receiver_length#0
        let pay3%%param_Amount_idx_0#0: uint64 = pay2%%param_Amount_idx_0#0
        let pay3%%Amount_length#0: uint64 = pay2%%Amount_length#0
        let pay3%%CloseRemainderTo_length#0: uint64 = pay2%%CloseRemainderTo_length#0
        let pay3%%VotePK_length#0: uint64 = pay2%%VotePK_length#0
        let pay3%%SelectionPK_length#0: uint64 = pay2%%SelectionPK_length#0
        let pay3%%VoteFirst_length#0: uint64 = pay2%%VoteFirst_length#0
        let pay3%%VoteLast_length#0: uint64 = pay2%%VoteLast_length#0
        let pay3%%VoteKeyDilution_length#0: uint64 = pay2%%VoteKeyDilution_length#0
        let pay3%%Type_length#0: uint64 = pay2%%Type_length#0
        let pay3%%param_TypeEnum_idx_0#0: uint64 = pay2%%param_TypeEnum_idx_0#0
        let pay3%%TypeEnum_length#0: uint64 = pay2%%TypeEnum_length#0
        let pay3%%XferAsset_length#0: uint64 = pay2%%XferAsset_length#0
        let pay3%%AssetAmount_length#0: uint64 = pay2%%AssetAmount_length#0
        let pay3%%AssetSender_length#0: uint64 = pay2%%AssetSender_length#0
        let pay3%%AssetReceiver_length#0: uint64 = pay2%%AssetReceiver_length#0
        let pay3%%AssetCloseTo_length#0: uint64 = pay2%%AssetCloseTo_length#0
        let pay3%%ApplicationID_length#0: uint64 = pay2%%ApplicationID_length#0
        let pay3%%OnCompletion_length#0: uint64 = pay2%%OnCompletion_length#0
        let pay3%%ApprovalProgram_length#0: uint64 = pay2%%ApprovalProgram_length#0
        let pay3%%ClearStateProgram_length#0: uint64 = pay2%%ClearStateProgram_length#0
        let pay3%%RekeyTo_length#0: uint64 = pay2%%RekeyTo_length#0
        let pay3%%ConfigAsset_length#0: uint64 = pay2%%ConfigAsset_length#0
        let pay3%%ConfigAssetTotal_length#0: uint64 = pay2%%ConfigAssetTotal_length#0
        let pay3%%ConfigAssetDecimals_length#0: uint64 = pay2%%ConfigAssetDecimals_length#0
        let pay3%%ConfigAssetDefaultFrozen_length#0: uint64 = pay2%%ConfigAssetDefaultFrozen_length#0
        let pay3%%ConfigAssetUnitName_length#0: uint64 = pay2%%ConfigAssetUnitName_length#0
        let pay3%%ConfigAssetName_length#0: uint64 = pay2%%ConfigAssetName_length#0
        let pay3%%ConfigAssetURL_length#0: uint64 = pay2%%ConfigAssetURL_length#0
        let pay3%%ConfigAssetMetadataHash_length#0: uint64 = pay2%%ConfigAssetMetadataHash_length#0
        let pay3%%ConfigAssetManager_length#0: uint64 = pay2%%ConfigAssetManager_length#0
        let pay3%%ConfigAssetReserve_length#0: uint64 = pay2%%ConfigAssetReserve_length#0
        let pay3%%ConfigAssetFreeze_length#0: uint64 = pay2%%ConfigAssetFreeze_length#0
        let pay3%%ConfigAssetClawback_length#0: uint64 = pay2%%ConfigAssetClawback_length#0
        let pay3%%FreezeAsset_length#0: uint64 = pay2%%FreezeAsset_length#0
        let pay3%%FreezeAssetAccount_length#0: uint64 = pay2%%FreezeAssetAccount_length#0
        let pay3%%FreezeAssetFrozen_length#0: uint64 = pay2%%FreezeAssetFrozen_length#0
        let pay3%%GlobalNumUint_length#0: uint64 = pay2%%GlobalNumUint_length#0
        let pay3%%GlobalNumByteSlice_length#0: uint64 = pay2%%GlobalNumByteSlice_length#0
        let pay3%%LocalNumUint_length#0: uint64 = pay2%%LocalNumUint_length#0
        let pay3%%LocalNumByteSlice_length#0: uint64 = pay2%%LocalNumByteSlice_length#0
        let pay3%%ExtraProgramPages_length#0: uint64 = pay2%%ExtraProgramPages_length#0
        let pay3%%Nonparticipation_length#0: uint64 = pay2%%Nonparticipation_length#0
        let pay3%%StateProofPK_length#0: uint64 = pay2%%StateProofPK_length#0
        let pay3%%ApplicationArgs_length#0: uint64 = pay2%%ApplicationArgs_length#0
        let pay3%%Accounts_length#0: uint64 = pay2%%Accounts_length#0
        let pay3%%Assets_length#0: uint64 = pay2%%Assets_length#0
        let pay3%%Applications_length#0: uint64 = pay2%%Applications_length#0
        let pay3%%ApprovalProgramPages_length#0: uint64 = pay2%%ApprovalProgramPages_length#0
        let pay3%%ClearStateProgramPages_length#0: uint64 = pay2%%ClearStateProgramPages_length#0
        let pay3#0: itxn_field_set = itxn_field_set(3)
        let pay3%%param_Note_idx_0#1: string = "pay3"
        let pay3%%Note_length#1: uint64 = 1u
        let tmp%0#0: bytes = test_cases.inner_transactions_assignment.contract.echo(0x6869)
        itxn_begin
        ((itxn_field Note) pay1%%param_Note_idx_0#0)
        ((itxn_field Amount) pay1%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay1%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) pay1%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) pay1%%param_Fee_idx_0#0)
        goto block@1
    block@1: // next_txn_L44
        itxn_next
        ((itxn_field ConfigAssetTotal) acfg%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field Note) acfg%%param_Note_idx_0#0)
        ((itxn_field ConfigAssetName) acfg%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) acfg%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) acfg%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) acfg%%param_Fee_idx_0#0)
        goto block@2
    block@2: // next_txn_L44
        itxn_next
        ((itxn_field TypeEnum) pay2%%param_TypeEnum_idx_0#0)
        ((itxn_field Amount) pay2%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay2%%param_Receiver_idx_0#0)
        ((itxn_field Note) pay2%%param_Note_idx_0#1)
        ((itxn_field Fee) pay2%%param_Fee_idx_0#0)
        goto block@3
    block@3: // next_txn_L44
        itxn_next
        ((itxn_field TypeEnum) pay3%%param_TypeEnum_idx_0#0)
        ((itxn_field Amount) pay3%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay3%%param_Receiver_idx_0#0)
        ((itxn_field Note) pay3%%param_Note_idx_0#1)
        ((itxn_field Fee) pay3%%param_Fee_idx_0#0)
        goto block@4
    block@4: // next_txn_L44
        itxn_submit
        let tmp%1#0: bytes = test_cases.inner_transactions_assignment.contract.echo(0x7468657265)
        let (nested_tuple.0#0: bytes, nested_tuple.1.0#0: itxn_group_idx, nested_tuple.1.1#0: itxn_group_idx, nested_tuple.2#0: bytes) = (tmp%0#0, itxn_group_idx(1), itxn_group_idx(2), tmp%1#0)
        let nested_tuple.1.0._is_last#0: bool = 0u
        let nested_tuple.1.0.Sender#0: account = itxn[nested_tuple.1.0#0].Sender
        let nested_tuple.1.0.Fee#0: uint64 = itxn[nested_tuple.1.0#0].Fee
        let nested_tuple.1.0.FirstValid#0: uint64 = itxn[nested_tuple.1.0#0].FirstValid
        let nested_tuple.1.0.FirstValidTime#0: uint64 = itxn[nested_tuple.1.0#0].FirstValidTime
        let nested_tuple.1.0.LastValid#0: uint64 = itxn[nested_tuple.1.0#0].LastValid
        let nested_tuple.1.0.Note#0: bytes = itxn[nested_tuple.1.0#0].Note
        let nested_tuple.1.0.Lease#0: bytes[32] = itxn[nested_tuple.1.0#0].Lease
        let nested_tuple.1.0.Receiver#0: account = itxn[nested_tuple.1.0#0].Receiver
        let nested_tuple.1.0.Amount#0: uint64 = itxn[nested_tuple.1.0#0].Amount
        let nested_tuple.1.0.CloseRemainderTo#0: account = itxn[nested_tuple.1.0#0].CloseRemainderTo
        let nested_tuple.1.0.VotePK#0: bytes[32] = itxn[nested_tuple.1.0#0].VotePK
        let nested_tuple.1.0.SelectionPK#0: bytes[32] = itxn[nested_tuple.1.0#0].SelectionPK
        let nested_tuple.1.0.VoteFirst#0: uint64 = itxn[nested_tuple.1.0#0].VoteFirst
        let nested_tuple.1.0.VoteLast#0: uint64 = itxn[nested_tuple.1.0#0].VoteLast
        let nested_tuple.1.0.VoteKeyDilution#0: uint64 = itxn[nested_tuple.1.0#0].VoteKeyDilution
        let nested_tuple.1.0.Type#0: bytes = itxn[nested_tuple.1.0#0].Type
        let nested_tuple.1.0.TypeEnum#0: uint64 = itxn[nested_tuple.1.0#0].TypeEnum
        let nested_tuple.1.0.XferAsset#0: uint64 = itxn[nested_tuple.1.0#0].XferAsset
        let nested_tuple.1.0.AssetAmount#0: uint64 = itxn[nested_tuple.1.0#0].AssetAmount
        let nested_tuple.1.0.AssetSender#0: account = itxn[nested_tuple.1.0#0].AssetSender
        let nested_tuple.1.0.AssetReceiver#0: account = itxn[nested_tuple.1.0#0].AssetReceiver
        let nested_tuple.1.0.AssetCloseTo#0: account = itxn[nested_tuple.1.0#0].AssetCloseTo
        let nested_tuple.1.0.GroupIndex#0: uint64 = itxn[nested_tuple.1.0#0].GroupIndex
        let nested_tuple.1.0.TxID#0: bytes[32] = itxn[nested_tuple.1.0#0].TxID
        let nested_tuple.1.0.ApplicationID#0: uint64 = itxn[nested_tuple.1.0#0].ApplicationID
        let nested_tuple.1.0.OnCompletion#0: uint64 = itxn[nested_tuple.1.0#0].OnCompletion
        let nested_tuple.1.0.NumAppArgs#0: uint64 = itxn[nested_tuple.1.0#0].NumAppArgs
        let nested_tuple.1.0.NumAccounts#0: uint64 = itxn[nested_tuple.1.0#0].NumAccounts
        let nested_tuple.1.0.ApprovalProgram#0: bytes = itxn[nested_tuple.1.0#0].ApprovalProgram
        let nested_tuple.1.0.ClearStateProgram#0: bytes = itxn[nested_tuple.1.0#0].ClearStateProgram
        let nested_tuple.1.0.RekeyTo#0: account = itxn[nested_tuple.1.0#0].RekeyTo
        let nested_tuple.1.0.ConfigAsset#0: uint64 = itxn[nested_tuple.1.0#0].ConfigAsset
        let nested_tuple.1.0.ConfigAssetTotal#0: uint64 = itxn[nested_tuple.1.0#0].ConfigAssetTotal
        let nested_tuple.1.0.ConfigAssetDecimals#0: uint64 = itxn[nested_tuple.1.0#0].ConfigAssetDecimals
        let nested_tuple.1.0.ConfigAssetDefaultFrozen#0: bool = itxn[nested_tuple.1.0#0].ConfigAssetDefaultFrozen
        let nested_tuple.1.0.ConfigAssetUnitName#0: bytes = itxn[nested_tuple.1.0#0].ConfigAssetUnitName
        let nested_tuple.1.0.ConfigAssetName#0: bytes = itxn[nested_tuple.1.0#0].ConfigAssetName
        let nested_tuple.1.0.ConfigAssetURL#0: bytes = itxn[nested_tuple.1.0#0].ConfigAssetURL
        let nested_tuple.1.0.ConfigAssetMetadataHash#0: bytes[32] = itxn[nested_tuple.1.0#0].ConfigAssetMetadataHash
        let nested_tuple.1.0.ConfigAssetManager#0: account = itxn[nested_tuple.1.0#0].ConfigAssetManager
        let nested_tuple.1.0.ConfigAssetReserve#0: account = itxn[nested_tuple.1.0#0].ConfigAssetReserve
        let nested_tuple.1.0.ConfigAssetFreeze#0: account = itxn[nested_tuple.1.0#0].ConfigAssetFreeze
        let nested_tuple.1.0.ConfigAssetClawback#0: account = itxn[nested_tuple.1.0#0].ConfigAssetClawback
        let nested_tuple.1.0.FreezeAsset#0: uint64 = itxn[nested_tuple.1.0#0].FreezeAsset
        let nested_tuple.1.0.FreezeAssetAccount#0: account = itxn[nested_tuple.1.0#0].FreezeAssetAccount
        let nested_tuple.1.0.FreezeAssetFrozen#0: bool = itxn[nested_tuple.1.0#0].FreezeAssetFrozen
        let nested_tuple.1.0.NumAssets#0: uint64 = itxn[nested_tuple.1.0#0].NumAssets
        let nested_tuple.1.0.NumApplications#0: uint64 = itxn[nested_tuple.1.0#0].NumApplications
        let nested_tuple.1.0.GlobalNumUint#0: uint64 = itxn[nested_tuple.1.0#0].GlobalNumUint
        let nested_tuple.1.0.GlobalNumByteSlice#0: uint64 = itxn[nested_tuple.1.0#0].GlobalNumByteSlice
        let nested_tuple.1.0.LocalNumUint#0: uint64 = itxn[nested_tuple.1.0#0].LocalNumUint
        let nested_tuple.1.0.LocalNumByteSlice#0: uint64 = itxn[nested_tuple.1.0#0].LocalNumByteSlice
        let nested_tuple.1.0.ExtraProgramPages#0: uint64 = itxn[nested_tuple.1.0#0].ExtraProgramPages
        let nested_tuple.1.0.Nonparticipation#0: bool = itxn[nested_tuple.1.0#0].Nonparticipation
        let nested_tuple.1.0.NumLogs#0: uint64 = itxn[nested_tuple.1.0#0].NumLogs
        let nested_tuple.1.0.CreatedAssetID#0: uint64 = itxn[nested_tuple.1.0#0].CreatedAssetID
        let nested_tuple.1.0.CreatedApplicationID#0: uint64 = itxn[nested_tuple.1.0#0].CreatedApplicationID
        let nested_tuple.1.0.LastLog#0: bytes = itxn[nested_tuple.1.0#0].LastLog
        let nested_tuple.1.0.StateProofPK#0: bytes = itxn[nested_tuple.1.0#0].StateProofPK
        let nested_tuple.1.0.NumApprovalProgramPages#0: uint64 = itxn[nested_tuple.1.0#0].NumApprovalProgramPages
        let nested_tuple.1.0.NumClearStateProgramPages#0: uint64 = itxn[nested_tuple.1.0#0].NumClearStateProgramPages
        let nested_tuple.1.1._is_last#0: bool = 0u
        let nested_tuple.1.1.Sender#0: account = itxn[nested_tuple.1.1#0].Sender
        let nested_tuple.1.1.Fee#0: uint64 = itxn[nested_tuple.1.1#0].Fee
        let nested_tuple.1.1.FirstValid#0: uint64 = itxn[nested_tuple.1.1#0].FirstValid
        let nested_tuple.1.1.FirstValidTime#0: uint64 = itxn[nested_tuple.1.1#0].FirstValidTime
        let nested_tuple.1.1.LastValid#0: uint64 = itxn[nested_tuple.1.1#0].LastValid
        let nested_tuple.1.1.Note#0: bytes = itxn[nested_tuple.1.1#0].Note
        let nested_tuple.1.1.Lease#0: bytes[32] = itxn[nested_tuple.1.1#0].Lease
        let nested_tuple.1.1.Receiver#0: account = itxn[nested_tuple.1.1#0].Receiver
        let nested_tuple.1.1.Amount#0: uint64 = itxn[nested_tuple.1.1#0].Amount
        let nested_tuple.1.1.CloseRemainderTo#0: account = itxn[nested_tuple.1.1#0].CloseRemainderTo
        let nested_tuple.1.1.VotePK#0: bytes[32] = itxn[nested_tuple.1.1#0].VotePK
        let nested_tuple.1.1.SelectionPK#0: bytes[32] = itxn[nested_tuple.1.1#0].SelectionPK
        let nested_tuple.1.1.VoteFirst#0: uint64 = itxn[nested_tuple.1.1#0].VoteFirst
        let nested_tuple.1.1.VoteLast#0: uint64 = itxn[nested_tuple.1.1#0].VoteLast
        let nested_tuple.1.1.VoteKeyDilution#0: uint64 = itxn[nested_tuple.1.1#0].VoteKeyDilution
        let nested_tuple.1.1.Type#0: bytes = itxn[nested_tuple.1.1#0].Type
        let nested_tuple.1.1.TypeEnum#0: uint64 = itxn[nested_tuple.1.1#0].TypeEnum
        let nested_tuple.1.1.XferAsset#0: uint64 = itxn[nested_tuple.1.1#0].XferAsset
        let nested_tuple.1.1.AssetAmount#0: uint64 = itxn[nested_tuple.1.1#0].AssetAmount
        let nested_tuple.1.1.AssetSender#0: account = itxn[nested_tuple.1.1#0].AssetSender
        let nested_tuple.1.1.AssetReceiver#0: account = itxn[nested_tuple.1.1#0].AssetReceiver
        let nested_tuple.1.1.AssetCloseTo#0: account = itxn[nested_tuple.1.1#0].AssetCloseTo
        let nested_tuple.1.1.GroupIndex#0: uint64 = itxn[nested_tuple.1.1#0].GroupIndex
        let nested_tuple.1.1.TxID#0: bytes[32] = itxn[nested_tuple.1.1#0].TxID
        let nested_tuple.1.1.ApplicationID#0: uint64 = itxn[nested_tuple.1.1#0].ApplicationID
        let nested_tuple.1.1.OnCompletion#0: uint64 = itxn[nested_tuple.1.1#0].OnCompletion
        let nested_tuple.1.1.NumAppArgs#0: uint64 = itxn[nested_tuple.1.1#0].NumAppArgs
        let nested_tuple.1.1.NumAccounts#0: uint64 = itxn[nested_tuple.1.1#0].NumAccounts
        let nested_tuple.1.1.ApprovalProgram#0: bytes = itxn[nested_tuple.1.1#0].ApprovalProgram
        let nested_tuple.1.1.ClearStateProgram#0: bytes = itxn[nested_tuple.1.1#0].ClearStateProgram
        let nested_tuple.1.1.RekeyTo#0: account = itxn[nested_tuple.1.1#0].RekeyTo
        let nested_tuple.1.1.ConfigAsset#0: uint64 = itxn[nested_tuple.1.1#0].ConfigAsset
        let nested_tuple.1.1.ConfigAssetTotal#0: uint64 = itxn[nested_tuple.1.1#0].ConfigAssetTotal
        let nested_tuple.1.1.ConfigAssetDecimals#0: uint64 = itxn[nested_tuple.1.1#0].ConfigAssetDecimals
        let nested_tuple.1.1.ConfigAssetDefaultFrozen#0: bool = itxn[nested_tuple.1.1#0].ConfigAssetDefaultFrozen
        let nested_tuple.1.1.ConfigAssetUnitName#0: bytes = itxn[nested_tuple.1.1#0].ConfigAssetUnitName
        let nested_tuple.1.1.ConfigAssetName#0: bytes = itxn[nested_tuple.1.1#0].ConfigAssetName
        let nested_tuple.1.1.ConfigAssetURL#0: bytes = itxn[nested_tuple.1.1#0].ConfigAssetURL
        let nested_tuple.1.1.ConfigAssetMetadataHash#0: bytes[32] = itxn[nested_tuple.1.1#0].ConfigAssetMetadataHash
        let nested_tuple.1.1.ConfigAssetManager#0: account = itxn[nested_tuple.1.1#0].ConfigAssetManager
        let nested_tuple.1.1.ConfigAssetReserve#0: account = itxn[nested_tuple.1.1#0].ConfigAssetReserve
        let nested_tuple.1.1.ConfigAssetFreeze#0: account = itxn[nested_tuple.1.1#0].ConfigAssetFreeze
        let nested_tuple.1.1.ConfigAssetClawback#0: account = itxn[nested_tuple.1.1#0].ConfigAssetClawback
        let nested_tuple.1.1.FreezeAsset#0: uint64 = itxn[nested_tuple.1.1#0].FreezeAsset
        let nested_tuple.1.1.FreezeAssetAccount#0: account = itxn[nested_tuple.1.1#0].FreezeAssetAccount
        let nested_tuple.1.1.FreezeAssetFrozen#0: bool = itxn[nested_tuple.1.1#0].FreezeAssetFrozen
        let nested_tuple.1.1.NumAssets#0: uint64 = itxn[nested_tuple.1.1#0].NumAssets
        let nested_tuple.1.1.NumApplications#0: uint64 = itxn[nested_tuple.1.1#0].NumApplications
        let nested_tuple.1.1.GlobalNumUint#0: uint64 = itxn[nested_tuple.1.1#0].GlobalNumUint
        let nested_tuple.1.1.GlobalNumByteSlice#0: uint64 = itxn[nested_tuple.1.1#0].GlobalNumByteSlice
        let nested_tuple.1.1.LocalNumUint#0: uint64 = itxn[nested_tuple.1.1#0].LocalNumUint
        let nested_tuple.1.1.LocalNumByteSlice#0: uint64 = itxn[nested_tuple.1.1#0].LocalNumByteSlice
        let nested_tuple.1.1.ExtraProgramPages#0: uint64 = itxn[nested_tuple.1.1#0].ExtraProgramPages
        let nested_tuple.1.1.Nonparticipation#0: bool = itxn[nested_tuple.1.1#0].Nonparticipation
        let nested_tuple.1.1.NumLogs#0: uint64 = itxn[nested_tuple.1.1#0].NumLogs
        let nested_tuple.1.1.CreatedAssetID#0: uint64 = itxn[nested_tuple.1.1#0].CreatedAssetID
        let nested_tuple.1.1.CreatedApplicationID#0: uint64 = itxn[nested_tuple.1.1#0].CreatedApplicationID
        let nested_tuple.1.1.LastLog#0: bytes = itxn[nested_tuple.1.1#0].LastLog
        let nested_tuple.1.1.StateProofPK#0: bytes = itxn[nested_tuple.1.1#0].StateProofPK
        let nested_tuple.1.1.NumApprovalProgramPages#0: uint64 = itxn[nested_tuple.1.1#0].NumApprovalProgramPages
        let nested_tuple.1.1.NumClearStateProgramPages#0: uint64 = itxn[nested_tuple.1.1#0].NumClearStateProgramPages
        let tmp%2#0: bool = (== nested_tuple.0#0 0x6869)
        (assert tmp%2#0)
        let tmp%3#0: bool = (== nested_tuple.1.0.Note#0 0x61636667)
        (assert tmp%3#0)
        let tmp%4#0: bool = (== nested_tuple.1.1.Note#0 0x70617932)
        (assert tmp%4#0)
        let tmp%5#0: bool = (== nested_tuple.2#0 0x7468657265)
        (assert tmp%5#0)
        let (nested_tuple_copy.0#0: bytes, nested_tuple_copy.1.0#0: itxn_group_idx, nested_tuple_copy.1.1#0: itxn_group_idx, nested_tuple_copy.2#0: bytes) = (nested_tuple.0#0, nested_tuple.1.0#0, nested_tuple.1.1#0, nested_tuple.2#0)
        let nested_tuple_copy.1.0.Sender#0: account = nested_tuple.1.0.Sender#0
        let nested_tuple_copy.1.0.Fee#0: uint64 = nested_tuple.1.0.Fee#0
        let nested_tuple_copy.1.0.FirstValid#0: uint64 = nested_tuple.1.0.FirstValid#0
        let nested_tuple_copy.1.0.FirstValidTime#0: uint64 = nested_tuple.1.0.FirstValidTime#0
        let nested_tuple_copy.1.0.LastValid#0: uint64 = nested_tuple.1.0.LastValid#0
        let nested_tuple_copy.1.0.Note#0: bytes = nested_tuple.1.0.Note#0
        let nested_tuple_copy.1.0.Lease#0: bytes[32] = nested_tuple.1.0.Lease#0
        let nested_tuple_copy.1.0.Receiver#0: account = nested_tuple.1.0.Receiver#0
        let nested_tuple_copy.1.0.Amount#0: uint64 = nested_tuple.1.0.Amount#0
        let nested_tuple_copy.1.0.CloseRemainderTo#0: account = nested_tuple.1.0.CloseRemainderTo#0
        let nested_tuple_copy.1.0.VotePK#0: bytes[32] = nested_tuple.1.0.VotePK#0
        let nested_tuple_copy.1.0.SelectionPK#0: bytes[32] = nested_tuple.1.0.SelectionPK#0
        let nested_tuple_copy.1.0.VoteFirst#0: uint64 = nested_tuple.1.0.VoteFirst#0
        let nested_tuple_copy.1.0.VoteLast#0: uint64 = nested_tuple.1.0.VoteLast#0
        let nested_tuple_copy.1.0.VoteKeyDilution#0: uint64 = nested_tuple.1.0.VoteKeyDilution#0
        let nested_tuple_copy.1.0.Type#0: bytes = nested_tuple.1.0.Type#0
        let nested_tuple_copy.1.0.TypeEnum#0: uint64 = nested_tuple.1.0.TypeEnum#0
        let nested_tuple_copy.1.0.XferAsset#0: uint64 = nested_tuple.1.0.XferAsset#0
        let nested_tuple_copy.1.0.AssetAmount#0: uint64 = nested_tuple.1.0.AssetAmount#0
        let nested_tuple_copy.1.0.AssetSender#0: account = nested_tuple.1.0.AssetSender#0
        let nested_tuple_copy.1.0.AssetReceiver#0: account = nested_tuple.1.0.AssetReceiver#0
        let nested_tuple_copy.1.0.AssetCloseTo#0: account = nested_tuple.1.0.AssetCloseTo#0
        let nested_tuple_copy.1.0.GroupIndex#0: uint64 = nested_tuple.1.0.GroupIndex#0
        let nested_tuple_copy.1.0.TxID#0: bytes[32] = nested_tuple.1.0.TxID#0
        let nested_tuple_copy.1.0.ApplicationID#0: uint64 = nested_tuple.1.0.ApplicationID#0
        let nested_tuple_copy.1.0.OnCompletion#0: uint64 = nested_tuple.1.0.OnCompletion#0
        let nested_tuple_copy.1.0.NumAppArgs#0: uint64 = nested_tuple.1.0.NumAppArgs#0
        let nested_tuple_copy.1.0.NumAccounts#0: uint64 = nested_tuple.1.0.NumAccounts#0
        let nested_tuple_copy.1.0.ApprovalProgram#0: bytes = nested_tuple.1.0.ApprovalProgram#0
        let nested_tuple_copy.1.0.ClearStateProgram#0: bytes = nested_tuple.1.0.ClearStateProgram#0
        let nested_tuple_copy.1.0.RekeyTo#0: account = nested_tuple.1.0.RekeyTo#0
        let nested_tuple_copy.1.0.ConfigAsset#0: uint64 = nested_tuple.1.0.ConfigAsset#0
        let nested_tuple_copy.1.0.ConfigAssetTotal#0: uint64 = nested_tuple.1.0.ConfigAssetTotal#0
        let nested_tuple_copy.1.0.ConfigAssetDecimals#0: uint64 = nested_tuple.1.0.ConfigAssetDecimals#0
        let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0: bool = nested_tuple.1.0.ConfigAssetDefaultFrozen#0
        let nested_tuple_copy.1.0.ConfigAssetUnitName#0: bytes = nested_tuple.1.0.ConfigAssetUnitName#0
        let nested_tuple_copy.1.0.ConfigAssetName#0: bytes = nested_tuple.1.0.ConfigAssetName#0
        let nested_tuple_copy.1.0.ConfigAssetURL#0: bytes = nested_tuple.1.0.ConfigAssetURL#0
        let nested_tuple_copy.1.0.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple.1.0.ConfigAssetMetadataHash#0
        let nested_tuple_copy.1.0.ConfigAssetManager#0: account = nested_tuple.1.0.ConfigAssetManager#0
        let nested_tuple_copy.1.0.ConfigAssetReserve#0: account = nested_tuple.1.0.ConfigAssetReserve#0
        let nested_tuple_copy.1.0.ConfigAssetFreeze#0: account = nested_tuple.1.0.ConfigAssetFreeze#0
        let nested_tuple_copy.1.0.ConfigAssetClawback#0: account = nested_tuple.1.0.ConfigAssetClawback#0
        let nested_tuple_copy.1.0.FreezeAsset#0: uint64 = nested_tuple.1.0.FreezeAsset#0
        let nested_tuple_copy.1.0.FreezeAssetAccount#0: account = nested_tuple.1.0.FreezeAssetAccount#0
        let nested_tuple_copy.1.0.FreezeAssetFrozen#0: bool = nested_tuple.1.0.FreezeAssetFrozen#0
        let nested_tuple_copy.1.0.NumAssets#0: uint64 = nested_tuple.1.0.NumAssets#0
        let nested_tuple_copy.1.0.NumApplications#0: uint64 = nested_tuple.1.0.NumApplications#0
        let nested_tuple_copy.1.0.GlobalNumUint#0: uint64 = nested_tuple.1.0.GlobalNumUint#0
        let nested_tuple_copy.1.0.GlobalNumByteSlice#0: uint64 = nested_tuple.1.0.GlobalNumByteSlice#0
        let nested_tuple_copy.1.0.LocalNumUint#0: uint64 = nested_tuple.1.0.LocalNumUint#0
        let nested_tuple_copy.1.0.LocalNumByteSlice#0: uint64 = nested_tuple.1.0.LocalNumByteSlice#0
        let nested_tuple_copy.1.0.ExtraProgramPages#0: uint64 = nested_tuple.1.0.ExtraProgramPages#0
        let nested_tuple_copy.1.0.Nonparticipation#0: bool = nested_tuple.1.0.Nonparticipation#0
        let nested_tuple_copy.1.0.NumLogs#0: uint64 = nested_tuple.1.0.NumLogs#0
        let nested_tuple_copy.1.0.CreatedAssetID#0: uint64 = nested_tuple.1.0.CreatedAssetID#0
        let nested_tuple_copy.1.0.CreatedApplicationID#0: uint64 = nested_tuple.1.0.CreatedApplicationID#0
        let nested_tuple_copy.1.0.LastLog#0: bytes = nested_tuple.1.0.LastLog#0
        let nested_tuple_copy.1.0.StateProofPK#0: bytes = nested_tuple.1.0.StateProofPK#0
        let nested_tuple_copy.1.0.NumApprovalProgramPages#0: uint64 = nested_tuple.1.0.NumApprovalProgramPages#0
        let nested_tuple_copy.1.0.NumClearStateProgramPages#0: uint64 = nested_tuple.1.0.NumClearStateProgramPages#0
        let nested_tuple_copy.1.1.Sender#0: account = nested_tuple.1.1.Sender#0
        let nested_tuple_copy.1.1.Fee#0: uint64 = nested_tuple.1.1.Fee#0
        let nested_tuple_copy.1.1.FirstValid#0: uint64 = nested_tuple.1.1.FirstValid#0
        let nested_tuple_copy.1.1.FirstValidTime#0: uint64 = nested_tuple.1.1.FirstValidTime#0
        let nested_tuple_copy.1.1.LastValid#0: uint64 = nested_tuple.1.1.LastValid#0
        let nested_tuple_copy.1.1.Note#0: bytes = nested_tuple.1.1.Note#0
        let nested_tuple_copy.1.1.Lease#0: bytes[32] = nested_tuple.1.1.Lease#0
        let nested_tuple_copy.1.1.Receiver#0: account = nested_tuple.1.1.Receiver#0
        let nested_tuple_copy.1.1.Amount#0: uint64 = nested_tuple.1.1.Amount#0
        let nested_tuple_copy.1.1.CloseRemainderTo#0: account = nested_tuple.1.1.CloseRemainderTo#0
        let nested_tuple_copy.1.1.VotePK#0: bytes[32] = nested_tuple.1.1.VotePK#0
        let nested_tuple_copy.1.1.SelectionPK#0: bytes[32] = nested_tuple.1.1.SelectionPK#0
        let nested_tuple_copy.1.1.VoteFirst#0: uint64 = nested_tuple.1.1.VoteFirst#0
        let nested_tuple_copy.1.1.VoteLast#0: uint64 = nested_tuple.1.1.VoteLast#0
        let nested_tuple_copy.1.1.VoteKeyDilution#0: uint64 = nested_tuple.1.1.VoteKeyDilution#0
        let nested_tuple_copy.1.1.Type#0: bytes = nested_tuple.1.1.Type#0
        let nested_tuple_copy.1.1.TypeEnum#0: uint64 = nested_tuple.1.1.TypeEnum#0
        let nested_tuple_copy.1.1.XferAsset#0: uint64 = nested_tuple.1.1.XferAsset#0
        let nested_tuple_copy.1.1.AssetAmount#0: uint64 = nested_tuple.1.1.AssetAmount#0
        let nested_tuple_copy.1.1.AssetSender#0: account = nested_tuple.1.1.AssetSender#0
        let nested_tuple_copy.1.1.AssetReceiver#0: account = nested_tuple.1.1.AssetReceiver#0
        let nested_tuple_copy.1.1.AssetCloseTo#0: account = nested_tuple.1.1.AssetCloseTo#0
        let nested_tuple_copy.1.1.GroupIndex#0: uint64 = nested_tuple.1.1.GroupIndex#0
        let nested_tuple_copy.1.1.TxID#0: bytes[32] = nested_tuple.1.1.TxID#0
        let nested_tuple_copy.1.1.ApplicationID#0: uint64 = nested_tuple.1.1.ApplicationID#0
        let nested_tuple_copy.1.1.OnCompletion#0: uint64 = nested_tuple.1.1.OnCompletion#0
        let nested_tuple_copy.1.1.NumAppArgs#0: uint64 = nested_tuple.1.1.NumAppArgs#0
        let nested_tuple_copy.1.1.NumAccounts#0: uint64 = nested_tuple.1.1.NumAccounts#0
        let nested_tuple_copy.1.1.ApprovalProgram#0: bytes = nested_tuple.1.1.ApprovalProgram#0
        let nested_tuple_copy.1.1.ClearStateProgram#0: bytes = nested_tuple.1.1.ClearStateProgram#0
        let nested_tuple_copy.1.1.RekeyTo#0: account = nested_tuple.1.1.RekeyTo#0
        let nested_tuple_copy.1.1.ConfigAsset#0: uint64 = nested_tuple.1.1.ConfigAsset#0
        let nested_tuple_copy.1.1.ConfigAssetTotal#0: uint64 = nested_tuple.1.1.ConfigAssetTotal#0
        let nested_tuple_copy.1.1.ConfigAssetDecimals#0: uint64 = nested_tuple.1.1.ConfigAssetDecimals#0
        let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0: bool = nested_tuple.1.1.ConfigAssetDefaultFrozen#0
        let nested_tuple_copy.1.1.ConfigAssetUnitName#0: bytes = nested_tuple.1.1.ConfigAssetUnitName#0
        let nested_tuple_copy.1.1.ConfigAssetName#0: bytes = nested_tuple.1.1.ConfigAssetName#0
        let nested_tuple_copy.1.1.ConfigAssetURL#0: bytes = nested_tuple.1.1.ConfigAssetURL#0
        let nested_tuple_copy.1.1.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple.1.1.ConfigAssetMetadataHash#0
        let nested_tuple_copy.1.1.ConfigAssetManager#0: account = nested_tuple.1.1.ConfigAssetManager#0
        let nested_tuple_copy.1.1.ConfigAssetReserve#0: account = nested_tuple.1.1.ConfigAssetReserve#0
        let nested_tuple_copy.1.1.ConfigAssetFreeze#0: account = nested_tuple.1.1.ConfigAssetFreeze#0
        let nested_tuple_copy.1.1.ConfigAssetClawback#0: account = nested_tuple.1.1.ConfigAssetClawback#0
        let nested_tuple_copy.1.1.FreezeAsset#0: uint64 = nested_tuple.1.1.FreezeAsset#0
        let nested_tuple_copy.1.1.FreezeAssetAccount#0: account = nested_tuple.1.1.FreezeAssetAccount#0
        let nested_tuple_copy.1.1.FreezeAssetFrozen#0: bool = nested_tuple.1.1.FreezeAssetFrozen#0
        let nested_tuple_copy.1.1.NumAssets#0: uint64 = nested_tuple.1.1.NumAssets#0
        let nested_tuple_copy.1.1.NumApplications#0: uint64 = nested_tuple.1.1.NumApplications#0
        let nested_tuple_copy.1.1.GlobalNumUint#0: uint64 = nested_tuple.1.1.GlobalNumUint#0
        let nested_tuple_copy.1.1.GlobalNumByteSlice#0: uint64 = nested_tuple.1.1.GlobalNumByteSlice#0
        let nested_tuple_copy.1.1.LocalNumUint#0: uint64 = nested_tuple.1.1.LocalNumUint#0
        let nested_tuple_copy.1.1.LocalNumByteSlice#0: uint64 = nested_tuple.1.1.LocalNumByteSlice#0
        let nested_tuple_copy.1.1.ExtraProgramPages#0: uint64 = nested_tuple.1.1.ExtraProgramPages#0
        let nested_tuple_copy.1.1.Nonparticipation#0: bool = nested_tuple.1.1.Nonparticipation#0
        let nested_tuple_copy.1.1.NumLogs#0: uint64 = nested_tuple.1.1.NumLogs#0
        let nested_tuple_copy.1.1.CreatedAssetID#0: uint64 = nested_tuple.1.1.CreatedAssetID#0
        let nested_tuple_copy.1.1.CreatedApplicationID#0: uint64 = nested_tuple.1.1.CreatedApplicationID#0
        let nested_tuple_copy.1.1.LastLog#0: bytes = nested_tuple.1.1.LastLog#0
        let nested_tuple_copy.1.1.StateProofPK#0: bytes = nested_tuple.1.1.StateProofPK#0
        let nested_tuple_copy.1.1.NumApprovalProgramPages#0: uint64 = nested_tuple.1.1.NumApprovalProgramPages#0
        let nested_tuple_copy.1.1.NumClearStateProgramPages#0: uint64 = nested_tuple.1.1.NumClearStateProgramPages#0
        let acfg#1: itxn_field_set = itxn_field_set(4)
        let acfg%%param_Note_idx_0#1: string = "acfg2"
        let acfg%%Note_length#1: uint64 = 1u
        let pay2#1: itxn_field_set = itxn_field_set(5)
        let pay2%%param_Note_idx_0#2: string = "pay4"
        let pay2%%Note_length#2: uint64 = 1u
        let pay3#1: itxn_field_set = itxn_field_set(6)
        let pay3%%param_Note_idx_0#2: string = "pay5"
        let pay3%%Note_length#2: uint64 = 1u
        let tmp%6#0: bytes = test_cases.inner_transactions_assignment.contract.echo(0x6d61796265)
        let tmp%7#0: bool = (== tmp%6#0 0x6d61796265)
        goto tmp%7#0 ? block@5 : block@9
    block@5: // if_body_L58
        let tmp%8#0: bytes = test_cases.inner_transactions_assignment.contract.echo(0x686932)
        itxn_begin
        ((itxn_field Note) pay1%%param_Note_idx_0#0)
        ((itxn_field Amount) pay1%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay1%%param_Receiver_idx_0#0)
        ((itxn_field TypeEnum) pay1%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) pay1%%param_Fee_idx_0#0)
        goto block@6
    block@6: // next_txn_L60
        itxn_next
        ((itxn_field ConfigAssetTotal) acfg%%param_ConfigAssetTotal_idx_0#0)
        ((itxn_field Note) acfg%%param_Note_idx_0#1)
        ((itxn_field ConfigAssetName) acfg%%param_ConfigAssetName_idx_0#0)
        ((itxn_field ConfigAssetUnitName) acfg%%param_ConfigAssetUnitName_idx_0#0)
        ((itxn_field TypeEnum) acfg%%param_TypeEnum_idx_0#0)
        ((itxn_field Fee) acfg%%param_Fee_idx_0#0)
        goto block@7
    block@7: // next_txn_L60
        itxn_next
        ((itxn_field TypeEnum) pay3%%param_TypeEnum_idx_0#0)
        ((itxn_field Amount) pay3%%param_Amount_idx_0#0)
        ((itxn_field Receiver) pay3%%param_Receiver_idx_0#0)
        ((itxn_field Note) pay3%%param_Note_idx_0#2)
        ((itxn_field Fee) pay3%%param_Fee_idx_0#0)
        goto block@8
    block@8: // next_txn_L60
        itxn_submit
        let tmp%9#0: bytes = test_cases.inner_transactions_assignment.contract.echo(0x746865726532)
        let (nested_tuple.0#1: bytes, nested_tuple.1.0#1: itxn_group_idx, nested_tuple.1.1#1: itxn_group_idx, nested_tuple.2#1: bytes) = (tmp%8#0, itxn_group_idx(1), itxn_group_idx(2), tmp%9#0)
        let nested_tuple.1.0._is_last#1: bool = 0u
        let nested_tuple.1.0.Sender#1: account = itxn[nested_tuple.1.0#1].Sender
        let nested_tuple.1.0.Fee#1: uint64 = itxn[nested_tuple.1.0#1].Fee
        let nested_tuple.1.0.FirstValid#1: uint64 = itxn[nested_tuple.1.0#1].FirstValid
        let nested_tuple.1.0.FirstValidTime#1: uint64 = itxn[nested_tuple.1.0#1].FirstValidTime
        let nested_tuple.1.0.LastValid#1: uint64 = itxn[nested_tuple.1.0#1].LastValid
        let nested_tuple.1.0.Note#1: bytes = itxn[nested_tuple.1.0#1].Note
        let nested_tuple.1.0.Lease#1: bytes[32] = itxn[nested_tuple.1.0#1].Lease
        let nested_tuple.1.0.Receiver#1: account = itxn[nested_tuple.1.0#1].Receiver
        let nested_tuple.1.0.Amount#1: uint64 = itxn[nested_tuple.1.0#1].Amount
        let nested_tuple.1.0.CloseRemainderTo#1: account = itxn[nested_tuple.1.0#1].CloseRemainderTo
        let nested_tuple.1.0.VotePK#1: bytes[32] = itxn[nested_tuple.1.0#1].VotePK
        let nested_tuple.1.0.SelectionPK#1: bytes[32] = itxn[nested_tuple.1.0#1].SelectionPK
        let nested_tuple.1.0.VoteFirst#1: uint64 = itxn[nested_tuple.1.0#1].VoteFirst
        let nested_tuple.1.0.VoteLast#1: uint64 = itxn[nested_tuple.1.0#1].VoteLast
        let nested_tuple.1.0.VoteKeyDilution#1: uint64 = itxn[nested_tuple.1.0#1].VoteKeyDilution
        let nested_tuple.1.0.Type#1: bytes = itxn[nested_tuple.1.0#1].Type
        let nested_tuple.1.0.TypeEnum#1: uint64 = itxn[nested_tuple.1.0#1].TypeEnum
        let nested_tuple.1.0.XferAsset#1: uint64 = itxn[nested_tuple.1.0#1].XferAsset
        let nested_tuple.1.0.AssetAmount#1: uint64 = itxn[nested_tuple.1.0#1].AssetAmount
        let nested_tuple.1.0.AssetSender#1: account = itxn[nested_tuple.1.0#1].AssetSender
        let nested_tuple.1.0.AssetReceiver#1: account = itxn[nested_tuple.1.0#1].AssetReceiver
        let nested_tuple.1.0.AssetCloseTo#1: account = itxn[nested_tuple.1.0#1].AssetCloseTo
        let nested_tuple.1.0.GroupIndex#1: uint64 = itxn[nested_tuple.1.0#1].GroupIndex
        let nested_tuple.1.0.TxID#1: bytes[32] = itxn[nested_tuple.1.0#1].TxID
        let nested_tuple.1.0.ApplicationID#1: uint64 = itxn[nested_tuple.1.0#1].ApplicationID
        let nested_tuple.1.0.OnCompletion#1: uint64 = itxn[nested_tuple.1.0#1].OnCompletion
        let nested_tuple.1.0.NumAppArgs#1: uint64 = itxn[nested_tuple.1.0#1].NumAppArgs
        let nested_tuple.1.0.NumAccounts#1: uint64 = itxn[nested_tuple.1.0#1].NumAccounts
        let nested_tuple.1.0.ApprovalProgram#1: bytes = itxn[nested_tuple.1.0#1].ApprovalProgram
        let nested_tuple.1.0.ClearStateProgram#1: bytes = itxn[nested_tuple.1.0#1].ClearStateProgram
        let nested_tuple.1.0.RekeyTo#1: account = itxn[nested_tuple.1.0#1].RekeyTo
        let nested_tuple.1.0.ConfigAsset#1: uint64 = itxn[nested_tuple.1.0#1].ConfigAsset
        let nested_tuple.1.0.ConfigAssetTotal#1: uint64 = itxn[nested_tuple.1.0#1].ConfigAssetTotal
        let nested_tuple.1.0.ConfigAssetDecimals#1: uint64 = itxn[nested_tuple.1.0#1].ConfigAssetDecimals
        let nested_tuple.1.0.ConfigAssetDefaultFrozen#1: bool = itxn[nested_tuple.1.0#1].ConfigAssetDefaultFrozen
        let nested_tuple.1.0.ConfigAssetUnitName#1: bytes = itxn[nested_tuple.1.0#1].ConfigAssetUnitName
        let nested_tuple.1.0.ConfigAssetName#1: bytes = itxn[nested_tuple.1.0#1].ConfigAssetName
        let nested_tuple.1.0.ConfigAssetURL#1: bytes = itxn[nested_tuple.1.0#1].ConfigAssetURL
        let nested_tuple.1.0.ConfigAssetMetadataHash#1: bytes[32] = itxn[nested_tuple.1.0#1].ConfigAssetMetadataHash
        let nested_tuple.1.0.ConfigAssetManager#1: account = itxn[nested_tuple.1.0#1].ConfigAssetManager
        let nested_tuple.1.0.ConfigAssetReserve#1: account = itxn[nested_tuple.1.0#1].ConfigAssetReserve
        let nested_tuple.1.0.ConfigAssetFreeze#1: account = itxn[nested_tuple.1.0#1].ConfigAssetFreeze
        let nested_tuple.1.0.ConfigAssetClawback#1: account = itxn[nested_tuple.1.0#1].ConfigAssetClawback
        let nested_tuple.1.0.FreezeAsset#1: uint64 = itxn[nested_tuple.1.0#1].FreezeAsset
        let nested_tuple.1.0.FreezeAssetAccount#1: account = itxn[nested_tuple.1.0#1].FreezeAssetAccount
        let nested_tuple.1.0.FreezeAssetFrozen#1: bool = itxn[nested_tuple.1.0#1].FreezeAssetFrozen
        let nested_tuple.1.0.NumAssets#1: uint64 = itxn[nested_tuple.1.0#1].NumAssets
        let nested_tuple.1.0.NumApplications#1: uint64 = itxn[nested_tuple.1.0#1].NumApplications
        let nested_tuple.1.0.GlobalNumUint#1: uint64 = itxn[nested_tuple.1.0#1].GlobalNumUint
        let nested_tuple.1.0.GlobalNumByteSlice#1: uint64 = itxn[nested_tuple.1.0#1].GlobalNumByteSlice
        let nested_tuple.1.0.LocalNumUint#1: uint64 = itxn[nested_tuple.1.0#1].LocalNumUint
        let nested_tuple.1.0.LocalNumByteSlice#1: uint64 = itxn[nested_tuple.1.0#1].LocalNumByteSlice
        let nested_tuple.1.0.ExtraProgramPages#1: uint64 = itxn[nested_tuple.1.0#1].ExtraProgramPages
        let nested_tuple.1.0.Nonparticipation#1: bool = itxn[nested_tuple.1.0#1].Nonparticipation
        let nested_tuple.1.0.NumLogs#1: uint64 = itxn[nested_tuple.1.0#1].NumLogs
        let nested_tuple.1.0.CreatedAssetID#1: uint64 = itxn[nested_tuple.1.0#1].CreatedAssetID
        let nested_tuple.1.0.CreatedApplicationID#1: uint64 = itxn[nested_tuple.1.0#1].CreatedApplicationID
        let nested_tuple.1.0.LastLog#1: bytes = itxn[nested_tuple.1.0#1].LastLog
        let nested_tuple.1.0.StateProofPK#1: bytes = itxn[nested_tuple.1.0#1].StateProofPK
        let nested_tuple.1.0.NumApprovalProgramPages#1: uint64 = itxn[nested_tuple.1.0#1].NumApprovalProgramPages
        let nested_tuple.1.0.NumClearStateProgramPages#1: uint64 = itxn[nested_tuple.1.0#1].NumClearStateProgramPages
        let nested_tuple.1.1._is_last#1: bool = 1u
        let nested_tuple.1.1.Sender#1: account = itxn[nested_tuple.1.1#1].Sender
        let nested_tuple.1.1.Fee#1: uint64 = itxn[nested_tuple.1.1#1].Fee
        let nested_tuple.1.1.FirstValid#1: uint64 = itxn[nested_tuple.1.1#1].FirstValid
        let nested_tuple.1.1.FirstValidTime#1: uint64 = itxn[nested_tuple.1.1#1].FirstValidTime
        let nested_tuple.1.1.LastValid#1: uint64 = itxn[nested_tuple.1.1#1].LastValid
        let nested_tuple.1.1.Note#1: bytes = itxn[nested_tuple.1.1#1].Note
        let nested_tuple.1.1.Lease#1: bytes[32] = itxn[nested_tuple.1.1#1].Lease
        let nested_tuple.1.1.Receiver#1: account = itxn[nested_tuple.1.1#1].Receiver
        let nested_tuple.1.1.Amount#1: uint64 = itxn[nested_tuple.1.1#1].Amount
        let nested_tuple.1.1.CloseRemainderTo#1: account = itxn[nested_tuple.1.1#1].CloseRemainderTo
        let nested_tuple.1.1.VotePK#1: bytes[32] = itxn[nested_tuple.1.1#1].VotePK
        let nested_tuple.1.1.SelectionPK#1: bytes[32] = itxn[nested_tuple.1.1#1].SelectionPK
        let nested_tuple.1.1.VoteFirst#1: uint64 = itxn[nested_tuple.1.1#1].VoteFirst
        let nested_tuple.1.1.VoteLast#1: uint64 = itxn[nested_tuple.1.1#1].VoteLast
        let nested_tuple.1.1.VoteKeyDilution#1: uint64 = itxn[nested_tuple.1.1#1].VoteKeyDilution
        let nested_tuple.1.1.Type#1: bytes = itxn[nested_tuple.1.1#1].Type
        let nested_tuple.1.1.TypeEnum#1: uint64 = itxn[nested_tuple.1.1#1].TypeEnum
        let nested_tuple.1.1.XferAsset#1: uint64 = itxn[nested_tuple.1.1#1].XferAsset
        let nested_tuple.1.1.AssetAmount#1: uint64 = itxn[nested_tuple.1.1#1].AssetAmount
        let nested_tuple.1.1.AssetSender#1: account = itxn[nested_tuple.1.1#1].AssetSender
        let nested_tuple.1.1.AssetReceiver#1: account = itxn[nested_tuple.1.1#1].AssetReceiver
        let nested_tuple.1.1.AssetCloseTo#1: account = itxn[nested_tuple.1.1#1].AssetCloseTo
        let nested_tuple.1.1.GroupIndex#1: uint64 = itxn[nested_tuple.1.1#1].GroupIndex
        let nested_tuple.1.1.TxID#1: bytes[32] = itxn[nested_tuple.1.1#1].TxID
        let nested_tuple.1.1.ApplicationID#1: uint64 = itxn[nested_tuple.1.1#1].ApplicationID
        let nested_tuple.1.1.OnCompletion#1: uint64 = itxn[nested_tuple.1.1#1].OnCompletion
        let nested_tuple.1.1.NumAppArgs#1: uint64 = itxn[nested_tuple.1.1#1].NumAppArgs
        let nested_tuple.1.1.NumAccounts#1: uint64 = itxn[nested_tuple.1.1#1].NumAccounts
        let nested_tuple.1.1.ApprovalProgram#1: bytes = itxn[nested_tuple.1.1#1].ApprovalProgram
        let nested_tuple.1.1.ClearStateProgram#1: bytes = itxn[nested_tuple.1.1#1].ClearStateProgram
        let nested_tuple.1.1.RekeyTo#1: account = itxn[nested_tuple.1.1#1].RekeyTo
        let nested_tuple.1.1.ConfigAsset#1: uint64 = itxn[nested_tuple.1.1#1].ConfigAsset
        let nested_tuple.1.1.ConfigAssetTotal#1: uint64 = itxn[nested_tuple.1.1#1].ConfigAssetTotal
        let nested_tuple.1.1.ConfigAssetDecimals#1: uint64 = itxn[nested_tuple.1.1#1].ConfigAssetDecimals
        let nested_tuple.1.1.ConfigAssetDefaultFrozen#1: bool = itxn[nested_tuple.1.1#1].ConfigAssetDefaultFrozen
        let nested_tuple.1.1.ConfigAssetUnitName#1: bytes = itxn[nested_tuple.1.1#1].ConfigAssetUnitName
        let nested_tuple.1.1.ConfigAssetName#1: bytes = itxn[nested_tuple.1.1#1].ConfigAssetName
        let nested_tuple.1.1.ConfigAssetURL#1: bytes = itxn[nested_tuple.1.1#1].ConfigAssetURL
        let nested_tuple.1.1.ConfigAssetMetadataHash#1: bytes[32] = itxn[nested_tuple.1.1#1].ConfigAssetMetadataHash
        let nested_tuple.1.1.ConfigAssetManager#1: account = itxn[nested_tuple.1.1#1].ConfigAssetManager
        let nested_tuple.1.1.ConfigAssetReserve#1: account = itxn[nested_tuple.1.1#1].ConfigAssetReserve
        let nested_tuple.1.1.ConfigAssetFreeze#1: account = itxn[nested_tuple.1.1#1].ConfigAssetFreeze
        let nested_tuple.1.1.ConfigAssetClawback#1: account = itxn[nested_tuple.1.1#1].ConfigAssetClawback
        let nested_tuple.1.1.FreezeAsset#1: uint64 = itxn[nested_tuple.1.1#1].FreezeAsset
        let nested_tuple.1.1.FreezeAssetAccount#1: account = itxn[nested_tuple.1.1#1].FreezeAssetAccount
        let nested_tuple.1.1.FreezeAssetFrozen#1: bool = itxn[nested_tuple.1.1#1].FreezeAssetFrozen
        let nested_tuple.1.1.NumAssets#1: uint64 = itxn[nested_tuple.1.1#1].NumAssets
        let nested_tuple.1.1.NumApplications#1: uint64 = itxn[nested_tuple.1.1#1].NumApplications
        let nested_tuple.1.1.GlobalNumUint#1: uint64 = itxn[nested_tuple.1.1#1].GlobalNumUint
        let nested_tuple.1.1.GlobalNumByteSlice#1: uint64 = itxn[nested_tuple.1.1#1].GlobalNumByteSlice
        let nested_tuple.1.1.LocalNumUint#1: uint64 = itxn[nested_tuple.1.1#1].LocalNumUint
        let nested_tuple.1.1.LocalNumByteSlice#1: uint64 = itxn[nested_tuple.1.1#1].LocalNumByteSlice
        let nested_tuple.1.1.ExtraProgramPages#1: uint64 = itxn[nested_tuple.1.1#1].ExtraProgramPages
        let nested_tuple.1.1.Nonparticipation#1: bool = itxn[nested_tuple.1.1#1].Nonparticipation
        let nested_tuple.1.1.NumLogs#1: uint64 = itxn[nested_tuple.1.1#1].NumLogs
        let nested_tuple.1.1.CreatedAssetID#1: uint64 = itxn[nested_tuple.1.1#1].CreatedAssetID
        let nested_tuple.1.1.CreatedApplicationID#1: uint64 = itxn[nested_tuple.1.1#1].CreatedApplicationID
        let nested_tuple.1.1.LastLog#1: bytes = itxn[nested_tuple.1.1#1].LastLog
        let nested_tuple.1.1.StateProofPK#1: bytes = itxn[nested_tuple.1.1#1].StateProofPK
        let nested_tuple.1.1.NumApprovalProgramPages#1: uint64 = itxn[nested_tuple.1.1#1].NumApprovalProgramPages
        let nested_tuple.1.1.NumClearStateProgramPages#1: uint64 = itxn[nested_tuple.1.1#1].NumClearStateProgramPages
        goto block@9
    block@9: // after_if_else_L57
        let nested_tuple.0#2: bytes = φ(nested_tuple.0#0 <- block@4, nested_tuple.0#1 <- block@8)
        let nested_tuple.1.0#2: itxn_group_idx = φ(nested_tuple.1.0#0 <- block@4, nested_tuple.1.0#1 <- block@8)
        let nested_tuple.1.1#2: itxn_group_idx = φ(nested_tuple.1.1#0 <- block@4, nested_tuple.1.1#1 <- block@8)
        let nested_tuple.2#2: bytes = φ(nested_tuple.2#0 <- block@4, nested_tuple.2#1 <- block@8)
        let nested_tuple.1.0.Note#2: bytes = φ(nested_tuple.1.0.Note#0 <- block@4, nested_tuple.1.0.Note#1 <- block@8)
        let nested_tuple.1.1.Note#2: bytes = φ(nested_tuple.1.1.Note#0 <- block@4, nested_tuple.1.1.Note#1 <- block@8)
        let nested_tuple.1.0.Sender#2: account = φ(nested_tuple.1.0.Sender#0 <- block@4, nested_tuple.1.0.Sender#1 <- block@8)
        let nested_tuple.1.0.Fee#2: uint64 = φ(nested_tuple.1.0.Fee#0 <- block@4, nested_tuple.1.0.Fee#1 <- block@8)
        let nested_tuple.1.0.FirstValid#2: uint64 = φ(nested_tuple.1.0.FirstValid#0 <- block@4, nested_tuple.1.0.FirstValid#1 <- block@8)
        let nested_tuple.1.0.FirstValidTime#2: uint64 = φ(nested_tuple.1.0.FirstValidTime#0 <- block@4, nested_tuple.1.0.FirstValidTime#1 <- block@8)
        let nested_tuple.1.0.LastValid#2: uint64 = φ(nested_tuple.1.0.LastValid#0 <- block@4, nested_tuple.1.0.LastValid#1 <- block@8)
        let nested_tuple.1.0.Lease#2: bytes[32] = φ(nested_tuple.1.0.Lease#0 <- block@4, nested_tuple.1.0.Lease#1 <- block@8)
        let nested_tuple.1.0.Receiver#2: account = φ(nested_tuple.1.0.Receiver#0 <- block@4, nested_tuple.1.0.Receiver#1 <- block@8)
        let nested_tuple.1.0.Amount#2: uint64 = φ(nested_tuple.1.0.Amount#0 <- block@4, nested_tuple.1.0.Amount#1 <- block@8)
        let nested_tuple.1.0.CloseRemainderTo#2: account = φ(nested_tuple.1.0.CloseRemainderTo#0 <- block@4, nested_tuple.1.0.CloseRemainderTo#1 <- block@8)
        let nested_tuple.1.0.VotePK#2: bytes[32] = φ(nested_tuple.1.0.VotePK#0 <- block@4, nested_tuple.1.0.VotePK#1 <- block@8)
        let nested_tuple.1.0.SelectionPK#2: bytes[32] = φ(nested_tuple.1.0.SelectionPK#0 <- block@4, nested_tuple.1.0.SelectionPK#1 <- block@8)
        let nested_tuple.1.0.VoteFirst#2: uint64 = φ(nested_tuple.1.0.VoteFirst#0 <- block@4, nested_tuple.1.0.VoteFirst#1 <- block@8)
        let nested_tuple.1.0.VoteLast#2: uint64 = φ(nested_tuple.1.0.VoteLast#0 <- block@4, nested_tuple.1.0.VoteLast#1 <- block@8)
        let nested_tuple.1.0.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.0.VoteKeyDilution#0 <- block@4, nested_tuple.1.0.VoteKeyDilution#1 <- block@8)
        let nested_tuple.1.0.Type#2: bytes = φ(nested_tuple.1.0.Type#0 <- block@4, nested_tuple.1.0.Type#1 <- block@8)
        let nested_tuple.1.0.TypeEnum#2: uint64 = φ(nested_tuple.1.0.TypeEnum#0 <- block@4, nested_tuple.1.0.TypeEnum#1 <- block@8)
        let nested_tuple.1.0.XferAsset#2: uint64 = φ(nested_tuple.1.0.XferAsset#0 <- block@4, nested_tuple.1.0.XferAsset#1 <- block@8)
        let nested_tuple.1.0.AssetAmount#2: uint64 = φ(nested_tuple.1.0.AssetAmount#0 <- block@4, nested_tuple.1.0.AssetAmount#1 <- block@8)
        let nested_tuple.1.0.AssetSender#2: account = φ(nested_tuple.1.0.AssetSender#0 <- block@4, nested_tuple.1.0.AssetSender#1 <- block@8)
        let nested_tuple.1.0.AssetReceiver#2: account = φ(nested_tuple.1.0.AssetReceiver#0 <- block@4, nested_tuple.1.0.AssetReceiver#1 <- block@8)
        let nested_tuple.1.0.AssetCloseTo#2: account = φ(nested_tuple.1.0.AssetCloseTo#0 <- block@4, nested_tuple.1.0.AssetCloseTo#1 <- block@8)
        let nested_tuple.1.0.GroupIndex#2: uint64 = φ(nested_tuple.1.0.GroupIndex#0 <- block@4, nested_tuple.1.0.GroupIndex#1 <- block@8)
        let nested_tuple.1.0.TxID#2: bytes[32] = φ(nested_tuple.1.0.TxID#0 <- block@4, nested_tuple.1.0.TxID#1 <- block@8)
        let nested_tuple.1.0.ApplicationID#2: uint64 = φ(nested_tuple.1.0.ApplicationID#0 <- block@4, nested_tuple.1.0.ApplicationID#1 <- block@8)
        let nested_tuple.1.0.OnCompletion#2: uint64 = φ(nested_tuple.1.0.OnCompletion#0 <- block@4, nested_tuple.1.0.OnCompletion#1 <- block@8)
        let nested_tuple.1.0.NumAppArgs#2: uint64 = φ(nested_tuple.1.0.NumAppArgs#0 <- block@4, nested_tuple.1.0.NumAppArgs#1 <- block@8)
        let nested_tuple.1.0.NumAccounts#2: uint64 = φ(nested_tuple.1.0.NumAccounts#0 <- block@4, nested_tuple.1.0.NumAccounts#1 <- block@8)
        let nested_tuple.1.0.ApprovalProgram#2: bytes = φ(nested_tuple.1.0.ApprovalProgram#0 <- block@4, nested_tuple.1.0.ApprovalProgram#1 <- block@8)
        let nested_tuple.1.0.ClearStateProgram#2: bytes = φ(nested_tuple.1.0.ClearStateProgram#0 <- block@4, nested_tuple.1.0.ClearStateProgram#1 <- block@8)
        let nested_tuple.1.0.RekeyTo#2: account = φ(nested_tuple.1.0.RekeyTo#0 <- block@4, nested_tuple.1.0.RekeyTo#1 <- block@8)
        let nested_tuple.1.0.ConfigAsset#2: uint64 = φ(nested_tuple.1.0.ConfigAsset#0 <- block@4, nested_tuple.1.0.ConfigAsset#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple.1.0.ConfigAssetTotal#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple.1.0.ConfigAssetDecimals#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple.1.0.ConfigAssetDefaultFrozen#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple.1.0.ConfigAssetUnitName#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetName#2: bytes = φ(nested_tuple.1.0.ConfigAssetName#0 <- block@4, nested_tuple.1.0.ConfigAssetName#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetURL#2: bytes = φ(nested_tuple.1.0.ConfigAssetURL#0 <- block@4, nested_tuple.1.0.ConfigAssetURL#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple.1.0.ConfigAssetMetadataHash#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetManager#2: account = φ(nested_tuple.1.0.ConfigAssetManager#0 <- block@4, nested_tuple.1.0.ConfigAssetManager#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetReserve#2: account = φ(nested_tuple.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple.1.0.ConfigAssetReserve#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetFreeze#2: account = φ(nested_tuple.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple.1.0.ConfigAssetFreeze#1 <- block@8)
        let nested_tuple.1.0.ConfigAssetClawback#2: account = φ(nested_tuple.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple.1.0.ConfigAssetClawback#1 <- block@8)
        let nested_tuple.1.0.FreezeAsset#2: uint64 = φ(nested_tuple.1.0.FreezeAsset#0 <- block@4, nested_tuple.1.0.FreezeAsset#1 <- block@8)
        let nested_tuple.1.0.FreezeAssetAccount#2: account = φ(nested_tuple.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple.1.0.FreezeAssetAccount#1 <- block@8)
        let nested_tuple.1.0.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple.1.0.FreezeAssetFrozen#1 <- block@8)
        let nested_tuple.1.0.NumAssets#2: uint64 = φ(nested_tuple.1.0.NumAssets#0 <- block@4, nested_tuple.1.0.NumAssets#1 <- block@8)
        let nested_tuple.1.0.NumApplications#2: uint64 = φ(nested_tuple.1.0.NumApplications#0 <- block@4, nested_tuple.1.0.NumApplications#1 <- block@8)
        let nested_tuple.1.0.GlobalNumUint#2: uint64 = φ(nested_tuple.1.0.GlobalNumUint#0 <- block@4, nested_tuple.1.0.GlobalNumUint#1 <- block@8)
        let nested_tuple.1.0.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple.1.0.GlobalNumByteSlice#1 <- block@8)
        let nested_tuple.1.0.LocalNumUint#2: uint64 = φ(nested_tuple.1.0.LocalNumUint#0 <- block@4, nested_tuple.1.0.LocalNumUint#1 <- block@8)
        let nested_tuple.1.0.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple.1.0.LocalNumByteSlice#1 <- block@8)
        let nested_tuple.1.0.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.0.ExtraProgramPages#0 <- block@4, nested_tuple.1.0.ExtraProgramPages#1 <- block@8)
        let nested_tuple.1.0.Nonparticipation#2: bool = φ(nested_tuple.1.0.Nonparticipation#0 <- block@4, nested_tuple.1.0.Nonparticipation#1 <- block@8)
        let nested_tuple.1.0.NumLogs#2: uint64 = φ(nested_tuple.1.0.NumLogs#0 <- block@4, nested_tuple.1.0.NumLogs#1 <- block@8)
        let nested_tuple.1.0.CreatedAssetID#2: uint64 = φ(nested_tuple.1.0.CreatedAssetID#0 <- block@4, nested_tuple.1.0.CreatedAssetID#1 <- block@8)
        let nested_tuple.1.0.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.0.CreatedApplicationID#0 <- block@4, nested_tuple.1.0.CreatedApplicationID#1 <- block@8)
        let nested_tuple.1.0.LastLog#2: bytes = φ(nested_tuple.1.0.LastLog#0 <- block@4, nested_tuple.1.0.LastLog#1 <- block@8)
        let nested_tuple.1.0.StateProofPK#2: bytes = φ(nested_tuple.1.0.StateProofPK#0 <- block@4, nested_tuple.1.0.StateProofPK#1 <- block@8)
        let nested_tuple.1.0.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple.1.0.NumApprovalProgramPages#1 <- block@8)
        let nested_tuple.1.0.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple.1.0.NumClearStateProgramPages#1 <- block@8)
        let nested_tuple.1.1.Sender#2: account = φ(nested_tuple.1.1.Sender#0 <- block@4, nested_tuple.1.1.Sender#1 <- block@8)
        let nested_tuple.1.1.Fee#2: uint64 = φ(nested_tuple.1.1.Fee#0 <- block@4, nested_tuple.1.1.Fee#1 <- block@8)
        let nested_tuple.1.1.FirstValid#2: uint64 = φ(nested_tuple.1.1.FirstValid#0 <- block@4, nested_tuple.1.1.FirstValid#1 <- block@8)
        let nested_tuple.1.1.FirstValidTime#2: uint64 = φ(nested_tuple.1.1.FirstValidTime#0 <- block@4, nested_tuple.1.1.FirstValidTime#1 <- block@8)
        let nested_tuple.1.1.LastValid#2: uint64 = φ(nested_tuple.1.1.LastValid#0 <- block@4, nested_tuple.1.1.LastValid#1 <- block@8)
        let nested_tuple.1.1.Lease#2: bytes[32] = φ(nested_tuple.1.1.Lease#0 <- block@4, nested_tuple.1.1.Lease#1 <- block@8)
        let nested_tuple.1.1.Receiver#2: account = φ(nested_tuple.1.1.Receiver#0 <- block@4, nested_tuple.1.1.Receiver#1 <- block@8)
        let nested_tuple.1.1.Amount#2: uint64 = φ(nested_tuple.1.1.Amount#0 <- block@4, nested_tuple.1.1.Amount#1 <- block@8)
        let nested_tuple.1.1.CloseRemainderTo#2: account = φ(nested_tuple.1.1.CloseRemainderTo#0 <- block@4, nested_tuple.1.1.CloseRemainderTo#1 <- block@8)
        let nested_tuple.1.1.VotePK#2: bytes[32] = φ(nested_tuple.1.1.VotePK#0 <- block@4, nested_tuple.1.1.VotePK#1 <- block@8)
        let nested_tuple.1.1.SelectionPK#2: bytes[32] = φ(nested_tuple.1.1.SelectionPK#0 <- block@4, nested_tuple.1.1.SelectionPK#1 <- block@8)
        let nested_tuple.1.1.VoteFirst#2: uint64 = φ(nested_tuple.1.1.VoteFirst#0 <- block@4, nested_tuple.1.1.VoteFirst#1 <- block@8)
        let nested_tuple.1.1.VoteLast#2: uint64 = φ(nested_tuple.1.1.VoteLast#0 <- block@4, nested_tuple.1.1.VoteLast#1 <- block@8)
        let nested_tuple.1.1.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.1.VoteKeyDilution#0 <- block@4, nested_tuple.1.1.VoteKeyDilution#1 <- block@8)
        let nested_tuple.1.1.Type#2: bytes = φ(nested_tuple.1.1.Type#0 <- block@4, nested_tuple.1.1.Type#1 <- block@8)
        let nested_tuple.1.1.TypeEnum#2: uint64 = φ(nested_tuple.1.1.TypeEnum#0 <- block@4, nested_tuple.1.1.TypeEnum#1 <- block@8)
        let nested_tuple.1.1.XferAsset#2: uint64 = φ(nested_tuple.1.1.XferAsset#0 <- block@4, nested_tuple.1.1.XferAsset#1 <- block@8)
        let nested_tuple.1.1.AssetAmount#2: uint64 = φ(nested_tuple.1.1.AssetAmount#0 <- block@4, nested_tuple.1.1.AssetAmount#1 <- block@8)
        let nested_tuple.1.1.AssetSender#2: account = φ(nested_tuple.1.1.AssetSender#0 <- block@4, nested_tuple.1.1.AssetSender#1 <- block@8)
        let nested_tuple.1.1.AssetReceiver#2: account = φ(nested_tuple.1.1.AssetReceiver#0 <- block@4, nested_tuple.1.1.AssetReceiver#1 <- block@8)
        let nested_tuple.1.1.AssetCloseTo#2: account = φ(nested_tuple.1.1.AssetCloseTo#0 <- block@4, nested_tuple.1.1.AssetCloseTo#1 <- block@8)
        let nested_tuple.1.1.GroupIndex#2: uint64 = φ(nested_tuple.1.1.GroupIndex#0 <- block@4, nested_tuple.1.1.GroupIndex#1 <- block@8)
        let nested_tuple.1.1.TxID#2: bytes[32] = φ(nested_tuple.1.1.TxID#0 <- block@4, nested_tuple.1.1.TxID#1 <- block@8)
        let nested_tuple.1.1.ApplicationID#2: uint64 = φ(nested_tuple.1.1.ApplicationID#0 <- block@4, nested_tuple.1.1.ApplicationID#1 <- block@8)
        let nested_tuple.1.1.OnCompletion#2: uint64 = φ(nested_tuple.1.1.OnCompletion#0 <- block@4, nested_tuple.1.1.OnCompletion#1 <- block@8)
        let nested_tuple.1.1.NumAppArgs#2: uint64 = φ(nested_tuple.1.1.NumAppArgs#0 <- block@4, nested_tuple.1.1.NumAppArgs#1 <- block@8)
        let nested_tuple.1.1.NumAccounts#2: uint64 = φ(nested_tuple.1.1.NumAccounts#0 <- block@4, nested_tuple.1.1.NumAccounts#1 <- block@8)
        let nested_tuple.1.1.ApprovalProgram#2: bytes = φ(nested_tuple.1.1.ApprovalProgram#0 <- block@4, nested_tuple.1.1.ApprovalProgram#1 <- block@8)
        let nested_tuple.1.1.ClearStateProgram#2: bytes = φ(nested_tuple.1.1.ClearStateProgram#0 <- block@4, nested_tuple.1.1.ClearStateProgram#1 <- block@8)
        let nested_tuple.1.1.RekeyTo#2: account = φ(nested_tuple.1.1.RekeyTo#0 <- block@4, nested_tuple.1.1.RekeyTo#1 <- block@8)
        let nested_tuple.1.1.ConfigAsset#2: uint64 = φ(nested_tuple.1.1.ConfigAsset#0 <- block@4, nested_tuple.1.1.ConfigAsset#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple.1.1.ConfigAssetTotal#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple.1.1.ConfigAssetDecimals#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple.1.1.ConfigAssetDefaultFrozen#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple.1.1.ConfigAssetUnitName#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetName#2: bytes = φ(nested_tuple.1.1.ConfigAssetName#0 <- block@4, nested_tuple.1.1.ConfigAssetName#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetURL#2: bytes = φ(nested_tuple.1.1.ConfigAssetURL#0 <- block@4, nested_tuple.1.1.ConfigAssetURL#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple.1.1.ConfigAssetMetadataHash#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetManager#2: account = φ(nested_tuple.1.1.ConfigAssetManager#0 <- block@4, nested_tuple.1.1.ConfigAssetManager#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetReserve#2: account = φ(nested_tuple.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple.1.1.ConfigAssetReserve#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetFreeze#2: account = φ(nested_tuple.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple.1.1.ConfigAssetFreeze#1 <- block@8)
        let nested_tuple.1.1.ConfigAssetClawback#2: account = φ(nested_tuple.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple.1.1.ConfigAssetClawback#1 <- block@8)
        let nested_tuple.1.1.FreezeAsset#2: uint64 = φ(nested_tuple.1.1.FreezeAsset#0 <- block@4, nested_tuple.1.1.FreezeAsset#1 <- block@8)
        let nested_tuple.1.1.FreezeAssetAccount#2: account = φ(nested_tuple.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple.1.1.FreezeAssetAccount#1 <- block@8)
        let nested_tuple.1.1.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple.1.1.FreezeAssetFrozen#1 <- block@8)
        let nested_tuple.1.1.NumAssets#2: uint64 = φ(nested_tuple.1.1.NumAssets#0 <- block@4, nested_tuple.1.1.NumAssets#1 <- block@8)
        let nested_tuple.1.1.NumApplications#2: uint64 = φ(nested_tuple.1.1.NumApplications#0 <- block@4, nested_tuple.1.1.NumApplications#1 <- block@8)
        let nested_tuple.1.1.GlobalNumUint#2: uint64 = φ(nested_tuple.1.1.GlobalNumUint#0 <- block@4, nested_tuple.1.1.GlobalNumUint#1 <- block@8)
        let nested_tuple.1.1.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple.1.1.GlobalNumByteSlice#1 <- block@8)
        let nested_tuple.1.1.LocalNumUint#2: uint64 = φ(nested_tuple.1.1.LocalNumUint#0 <- block@4, nested_tuple.1.1.LocalNumUint#1 <- block@8)
        let nested_tuple.1.1.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple.1.1.LocalNumByteSlice#1 <- block@8)
        let nested_tuple.1.1.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.1.ExtraProgramPages#0 <- block@4, nested_tuple.1.1.ExtraProgramPages#1 <- block@8)
        let nested_tuple.1.1.Nonparticipation#2: bool = φ(nested_tuple.1.1.Nonparticipation#0 <- block@4, nested_tuple.1.1.Nonparticipation#1 <- block@8)
        let nested_tuple.1.1.NumLogs#2: uint64 = φ(nested_tuple.1.1.NumLogs#0 <- block@4, nested_tuple.1.1.NumLogs#1 <- block@8)
        let nested_tuple.1.1.CreatedAssetID#2: uint64 = φ(nested_tuple.1.1.CreatedAssetID#0 <- block@4, nested_tuple.1.1.CreatedAssetID#1 <- block@8)
        let nested_tuple.1.1.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.1.CreatedApplicationID#0 <- block@4, nested_tuple.1.1.CreatedApplicationID#1 <- block@8)
        let nested_tuple.1.1.LastLog#2: bytes = φ(nested_tuple.1.1.LastLog#0 <- block@4, nested_tuple.1.1.LastLog#1 <- block@8)
        let nested_tuple.1.1.StateProofPK#2: bytes = φ(nested_tuple.1.1.StateProofPK#0 <- block@4, nested_tuple.1.1.StateProofPK#1 <- block@8)
        let nested_tuple.1.1.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple.1.1.NumApprovalProgramPages#1 <- block@8)
        let nested_tuple.1.1.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple.1.1.NumClearStateProgramPages#1 <- block@8)
        let tmp%10#0: bool = (== nested_tuple.0#2 0x686932)
        (assert tmp%10#0)
        let tmp%11#0: bool = (== nested_tuple.1.0.Note#2 0x6163666732)
        (assert tmp%11#0)
        let tmp%12#0: bool = (== nested_tuple.1.1.Note#2 0x70617935)
        (assert tmp%12#0)
        let tmp%13#0: bool = (== nested_tuple.2#2 0x746865726532)
        (assert tmp%13#0)
        let (mish_mash.0#0: itxn_group_idx, mish_mash.1#0: itxn_group_idx, mish_mash.2.0#0: itxn_group_idx, mish_mash.2.1#0: itxn_group_idx) = (nested_tuple_copy.1.0#0, nested_tuple_copy.1.1#0, nested_tuple.1.0#2, nested_tuple.1.1#2)
        let mish_mash.0.Sender#0: account = nested_tuple_copy.1.0.Sender#0
        let mish_mash.0.Fee#0: uint64 = nested_tuple_copy.1.0.Fee#0
        let mish_mash.0.FirstValid#0: uint64 = nested_tuple_copy.1.0.FirstValid#0
        let mish_mash.0.FirstValidTime#0: uint64 = nested_tuple_copy.1.0.FirstValidTime#0
        let mish_mash.0.LastValid#0: uint64 = nested_tuple_copy.1.0.LastValid#0
        let mish_mash.0.Note#0: bytes = nested_tuple_copy.1.0.Note#0
        let mish_mash.0.Lease#0: bytes[32] = nested_tuple_copy.1.0.Lease#0
        let mish_mash.0.Receiver#0: account = nested_tuple_copy.1.0.Receiver#0
        let mish_mash.0.Amount#0: uint64 = nested_tuple_copy.1.0.Amount#0
        let mish_mash.0.CloseRemainderTo#0: account = nested_tuple_copy.1.0.CloseRemainderTo#0
        let mish_mash.0.VotePK#0: bytes[32] = nested_tuple_copy.1.0.VotePK#0
        let mish_mash.0.SelectionPK#0: bytes[32] = nested_tuple_copy.1.0.SelectionPK#0
        let mish_mash.0.VoteFirst#0: uint64 = nested_tuple_copy.1.0.VoteFirst#0
        let mish_mash.0.VoteLast#0: uint64 = nested_tuple_copy.1.0.VoteLast#0
        let mish_mash.0.VoteKeyDilution#0: uint64 = nested_tuple_copy.1.0.VoteKeyDilution#0
        let mish_mash.0.Type#0: bytes = nested_tuple_copy.1.0.Type#0
        let mish_mash.0.TypeEnum#0: uint64 = nested_tuple_copy.1.0.TypeEnum#0
        let mish_mash.0.XferAsset#0: uint64 = nested_tuple_copy.1.0.XferAsset#0
        let mish_mash.0.AssetAmount#0: uint64 = nested_tuple_copy.1.0.AssetAmount#0
        let mish_mash.0.AssetSender#0: account = nested_tuple_copy.1.0.AssetSender#0
        let mish_mash.0.AssetReceiver#0: account = nested_tuple_copy.1.0.AssetReceiver#0
        let mish_mash.0.AssetCloseTo#0: account = nested_tuple_copy.1.0.AssetCloseTo#0
        let mish_mash.0.GroupIndex#0: uint64 = nested_tuple_copy.1.0.GroupIndex#0
        let mish_mash.0.TxID#0: bytes[32] = nested_tuple_copy.1.0.TxID#0
        let mish_mash.0.ApplicationID#0: uint64 = nested_tuple_copy.1.0.ApplicationID#0
        let mish_mash.0.OnCompletion#0: uint64 = nested_tuple_copy.1.0.OnCompletion#0
        let mish_mash.0.NumAppArgs#0: uint64 = nested_tuple_copy.1.0.NumAppArgs#0
        let mish_mash.0.NumAccounts#0: uint64 = nested_tuple_copy.1.0.NumAccounts#0
        let mish_mash.0.ApprovalProgram#0: bytes = nested_tuple_copy.1.0.ApprovalProgram#0
        let mish_mash.0.ClearStateProgram#0: bytes = nested_tuple_copy.1.0.ClearStateProgram#0
        let mish_mash.0.RekeyTo#0: account = nested_tuple_copy.1.0.RekeyTo#0
        let mish_mash.0.ConfigAsset#0: uint64 = nested_tuple_copy.1.0.ConfigAsset#0
        let mish_mash.0.ConfigAssetTotal#0: uint64 = nested_tuple_copy.1.0.ConfigAssetTotal#0
        let mish_mash.0.ConfigAssetDecimals#0: uint64 = nested_tuple_copy.1.0.ConfigAssetDecimals#0
        let mish_mash.0.ConfigAssetDefaultFrozen#0: bool = nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0
        let mish_mash.0.ConfigAssetUnitName#0: bytes = nested_tuple_copy.1.0.ConfigAssetUnitName#0
        let mish_mash.0.ConfigAssetName#0: bytes = nested_tuple_copy.1.0.ConfigAssetName#0
        let mish_mash.0.ConfigAssetURL#0: bytes = nested_tuple_copy.1.0.ConfigAssetURL#0
        let mish_mash.0.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple_copy.1.0.ConfigAssetMetadataHash#0
        let mish_mash.0.ConfigAssetManager#0: account = nested_tuple_copy.1.0.ConfigAssetManager#0
        let mish_mash.0.ConfigAssetReserve#0: account = nested_tuple_copy.1.0.ConfigAssetReserve#0
        let mish_mash.0.ConfigAssetFreeze#0: account = nested_tuple_copy.1.0.ConfigAssetFreeze#0
        let mish_mash.0.ConfigAssetClawback#0: account = nested_tuple_copy.1.0.ConfigAssetClawback#0
        let mish_mash.0.FreezeAsset#0: uint64 = nested_tuple_copy.1.0.FreezeAsset#0
        let mish_mash.0.FreezeAssetAccount#0: account = nested_tuple_copy.1.0.FreezeAssetAccount#0
        let mish_mash.0.FreezeAssetFrozen#0: bool = nested_tuple_copy.1.0.FreezeAssetFrozen#0
        let mish_mash.0.NumAssets#0: uint64 = nested_tuple_copy.1.0.NumAssets#0
        let mish_mash.0.NumApplications#0: uint64 = nested_tuple_copy.1.0.NumApplications#0
        let mish_mash.0.GlobalNumUint#0: uint64 = nested_tuple_copy.1.0.GlobalNumUint#0
        let mish_mash.0.GlobalNumByteSlice#0: uint64 = nested_tuple_copy.1.0.GlobalNumByteSlice#0
        let mish_mash.0.LocalNumUint#0: uint64 = nested_tuple_copy.1.0.LocalNumUint#0
        let mish_mash.0.LocalNumByteSlice#0: uint64 = nested_tuple_copy.1.0.LocalNumByteSlice#0
        let mish_mash.0.ExtraProgramPages#0: uint64 = nested_tuple_copy.1.0.ExtraProgramPages#0
        let mish_mash.0.Nonparticipation#0: bool = nested_tuple_copy.1.0.Nonparticipation#0
        let mish_mash.0.NumLogs#0: uint64 = nested_tuple_copy.1.0.NumLogs#0
        let mish_mash.0.CreatedAssetID#0: uint64 = nested_tuple_copy.1.0.CreatedAssetID#0
        let mish_mash.0.CreatedApplicationID#0: uint64 = nested_tuple_copy.1.0.CreatedApplicationID#0
        let mish_mash.0.LastLog#0: bytes = nested_tuple_copy.1.0.LastLog#0
        let mish_mash.0.StateProofPK#0: bytes = nested_tuple_copy.1.0.StateProofPK#0
        let mish_mash.0.NumApprovalProgramPages#0: uint64 = nested_tuple_copy.1.0.NumApprovalProgramPages#0
        let mish_mash.0.NumClearStateProgramPages#0: uint64 = nested_tuple_copy.1.0.NumClearStateProgramPages#0
        let mish_mash.1.Sender#0: account = nested_tuple_copy.1.1.Sender#0
        let mish_mash.1.Fee#0: uint64 = nested_tuple_copy.1.1.Fee#0
        let mish_mash.1.FirstValid#0: uint64 = nested_tuple_copy.1.1.FirstValid#0
        let mish_mash.1.FirstValidTime#0: uint64 = nested_tuple_copy.1.1.FirstValidTime#0
        let mish_mash.1.LastValid#0: uint64 = nested_tuple_copy.1.1.LastValid#0
        let mish_mash.1.Note#0: bytes = nested_tuple_copy.1.1.Note#0
        let mish_mash.1.Lease#0: bytes[32] = nested_tuple_copy.1.1.Lease#0
        let mish_mash.1.Receiver#0: account = nested_tuple_copy.1.1.Receiver#0
        let mish_mash.1.Amount#0: uint64 = nested_tuple_copy.1.1.Amount#0
        let mish_mash.1.CloseRemainderTo#0: account = nested_tuple_copy.1.1.CloseRemainderTo#0
        let mish_mash.1.VotePK#0: bytes[32] = nested_tuple_copy.1.1.VotePK#0
        let mish_mash.1.SelectionPK#0: bytes[32] = nested_tuple_copy.1.1.SelectionPK#0
        let mish_mash.1.VoteFirst#0: uint64 = nested_tuple_copy.1.1.VoteFirst#0
        let mish_mash.1.VoteLast#0: uint64 = nested_tuple_copy.1.1.VoteLast#0
        let mish_mash.1.VoteKeyDilution#0: uint64 = nested_tuple_copy.1.1.VoteKeyDilution#0
        let mish_mash.1.Type#0: bytes = nested_tuple_copy.1.1.Type#0
        let mish_mash.1.TypeEnum#0: uint64 = nested_tuple_copy.1.1.TypeEnum#0
        let mish_mash.1.XferAsset#0: uint64 = nested_tuple_copy.1.1.XferAsset#0
        let mish_mash.1.AssetAmount#0: uint64 = nested_tuple_copy.1.1.AssetAmount#0
        let mish_mash.1.AssetSender#0: account = nested_tuple_copy.1.1.AssetSender#0
        let mish_mash.1.AssetReceiver#0: account = nested_tuple_copy.1.1.AssetReceiver#0
        let mish_mash.1.AssetCloseTo#0: account = nested_tuple_copy.1.1.AssetCloseTo#0
        let mish_mash.1.GroupIndex#0: uint64 = nested_tuple_copy.1.1.GroupIndex#0
        let mish_mash.1.TxID#0: bytes[32] = nested_tuple_copy.1.1.TxID#0
        let mish_mash.1.ApplicationID#0: uint64 = nested_tuple_copy.1.1.ApplicationID#0
        let mish_mash.1.OnCompletion#0: uint64 = nested_tuple_copy.1.1.OnCompletion#0
        let mish_mash.1.NumAppArgs#0: uint64 = nested_tuple_copy.1.1.NumAppArgs#0
        let mish_mash.1.NumAccounts#0: uint64 = nested_tuple_copy.1.1.NumAccounts#0
        let mish_mash.1.ApprovalProgram#0: bytes = nested_tuple_copy.1.1.ApprovalProgram#0
        let mish_mash.1.ClearStateProgram#0: bytes = nested_tuple_copy.1.1.ClearStateProgram#0
        let mish_mash.1.RekeyTo#0: account = nested_tuple_copy.1.1.RekeyTo#0
        let mish_mash.1.ConfigAsset#0: uint64 = nested_tuple_copy.1.1.ConfigAsset#0
        let mish_mash.1.ConfigAssetTotal#0: uint64 = nested_tuple_copy.1.1.ConfigAssetTotal#0
        let mish_mash.1.ConfigAssetDecimals#0: uint64 = nested_tuple_copy.1.1.ConfigAssetDecimals#0
        let mish_mash.1.ConfigAssetDefaultFrozen#0: bool = nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0
        let mish_mash.1.ConfigAssetUnitName#0: bytes = nested_tuple_copy.1.1.ConfigAssetUnitName#0
        let mish_mash.1.ConfigAssetName#0: bytes = nested_tuple_copy.1.1.ConfigAssetName#0
        let mish_mash.1.ConfigAssetURL#0: bytes = nested_tuple_copy.1.1.ConfigAssetURL#0
        let mish_mash.1.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple_copy.1.1.ConfigAssetMetadataHash#0
        let mish_mash.1.ConfigAssetManager#0: account = nested_tuple_copy.1.1.ConfigAssetManager#0
        let mish_mash.1.ConfigAssetReserve#0: account = nested_tuple_copy.1.1.ConfigAssetReserve#0
        let mish_mash.1.ConfigAssetFreeze#0: account = nested_tuple_copy.1.1.ConfigAssetFreeze#0
        let mish_mash.1.ConfigAssetClawback#0: account = nested_tuple_copy.1.1.ConfigAssetClawback#0
        let mish_mash.1.FreezeAsset#0: uint64 = nested_tuple_copy.1.1.FreezeAsset#0
        let mish_mash.1.FreezeAssetAccount#0: account = nested_tuple_copy.1.1.FreezeAssetAccount#0
        let mish_mash.1.FreezeAssetFrozen#0: bool = nested_tuple_copy.1.1.FreezeAssetFrozen#0
        let mish_mash.1.NumAssets#0: uint64 = nested_tuple_copy.1.1.NumAssets#0
        let mish_mash.1.NumApplications#0: uint64 = nested_tuple_copy.1.1.NumApplications#0
        let mish_mash.1.GlobalNumUint#0: uint64 = nested_tuple_copy.1.1.GlobalNumUint#0
        let mish_mash.1.GlobalNumByteSlice#0: uint64 = nested_tuple_copy.1.1.GlobalNumByteSlice#0
        let mish_mash.1.LocalNumUint#0: uint64 = nested_tuple_copy.1.1.LocalNumUint#0
        let mish_mash.1.LocalNumByteSlice#0: uint64 = nested_tuple_copy.1.1.LocalNumByteSlice#0
        let mish_mash.1.ExtraProgramPages#0: uint64 = nested_tuple_copy.1.1.ExtraProgramPages#0
        let mish_mash.1.Nonparticipation#0: bool = nested_tuple_copy.1.1.Nonparticipation#0
        let mish_mash.1.NumLogs#0: uint64 = nested_tuple_copy.1.1.NumLogs#0
        let mish_mash.1.CreatedAssetID#0: uint64 = nested_tuple_copy.1.1.CreatedAssetID#0
        let mish_mash.1.CreatedApplicationID#0: uint64 = nested_tuple_copy.1.1.CreatedApplicationID#0
        let mish_mash.1.LastLog#0: bytes = nested_tuple_copy.1.1.LastLog#0
        let mish_mash.1.StateProofPK#0: bytes = nested_tuple_copy.1.1.StateProofPK#0
        let mish_mash.1.NumApprovalProgramPages#0: uint64 = nested_tuple_copy.1.1.NumApprovalProgramPages#0
        let mish_mash.1.NumClearStateProgramPages#0: uint64 = nested_tuple_copy.1.1.NumClearStateProgramPages#0
        let mish_mash.2.0.Sender#0: account = nested_tuple.1.0.Sender#2
        let mish_mash.2.0.Fee#0: uint64 = nested_tuple.1.0.Fee#2
        let mish_mash.2.0.FirstValid#0: uint64 = nested_tuple.1.0.FirstValid#2
        let mish_mash.2.0.FirstValidTime#0: uint64 = nested_tuple.1.0.FirstValidTime#2
        let mish_mash.2.0.LastValid#0: uint64 = nested_tuple.1.0.LastValid#2
        let mish_mash.2.0.Note#0: bytes = nested_tuple.1.0.Note#2
        let mish_mash.2.0.Lease#0: bytes[32] = nested_tuple.1.0.Lease#2
        let mish_mash.2.0.Receiver#0: account = nested_tuple.1.0.Receiver#2
        let mish_mash.2.0.Amount#0: uint64 = nested_tuple.1.0.Amount#2
        let mish_mash.2.0.CloseRemainderTo#0: account = nested_tuple.1.0.CloseRemainderTo#2
        let mish_mash.2.0.VotePK#0: bytes[32] = nested_tuple.1.0.VotePK#2
        let mish_mash.2.0.SelectionPK#0: bytes[32] = nested_tuple.1.0.SelectionPK#2
        let mish_mash.2.0.VoteFirst#0: uint64 = nested_tuple.1.0.VoteFirst#2
        let mish_mash.2.0.VoteLast#0: uint64 = nested_tuple.1.0.VoteLast#2
        let mish_mash.2.0.VoteKeyDilution#0: uint64 = nested_tuple.1.0.VoteKeyDilution#2
        let mish_mash.2.0.Type#0: bytes = nested_tuple.1.0.Type#2
        let mish_mash.2.0.TypeEnum#0: uint64 = nested_tuple.1.0.TypeEnum#2
        let mish_mash.2.0.XferAsset#0: uint64 = nested_tuple.1.0.XferAsset#2
        let mish_mash.2.0.AssetAmount#0: uint64 = nested_tuple.1.0.AssetAmount#2
        let mish_mash.2.0.AssetSender#0: account = nested_tuple.1.0.AssetSender#2
        let mish_mash.2.0.AssetReceiver#0: account = nested_tuple.1.0.AssetReceiver#2
        let mish_mash.2.0.AssetCloseTo#0: account = nested_tuple.1.0.AssetCloseTo#2
        let mish_mash.2.0.GroupIndex#0: uint64 = nested_tuple.1.0.GroupIndex#2
        let mish_mash.2.0.TxID#0: bytes[32] = nested_tuple.1.0.TxID#2
        let mish_mash.2.0.ApplicationID#0: uint64 = nested_tuple.1.0.ApplicationID#2
        let mish_mash.2.0.OnCompletion#0: uint64 = nested_tuple.1.0.OnCompletion#2
        let mish_mash.2.0.NumAppArgs#0: uint64 = nested_tuple.1.0.NumAppArgs#2
        let mish_mash.2.0.NumAccounts#0: uint64 = nested_tuple.1.0.NumAccounts#2
        let mish_mash.2.0.ApprovalProgram#0: bytes = nested_tuple.1.0.ApprovalProgram#2
        let mish_mash.2.0.ClearStateProgram#0: bytes = nested_tuple.1.0.ClearStateProgram#2
        let mish_mash.2.0.RekeyTo#0: account = nested_tuple.1.0.RekeyTo#2
        let mish_mash.2.0.ConfigAsset#0: uint64 = nested_tuple.1.0.ConfigAsset#2
        let mish_mash.2.0.ConfigAssetTotal#0: uint64 = nested_tuple.1.0.ConfigAssetTotal#2
        let mish_mash.2.0.ConfigAssetDecimals#0: uint64 = nested_tuple.1.0.ConfigAssetDecimals#2
        let mish_mash.2.0.ConfigAssetDefaultFrozen#0: bool = nested_tuple.1.0.ConfigAssetDefaultFrozen#2
        let mish_mash.2.0.ConfigAssetUnitName#0: bytes = nested_tuple.1.0.ConfigAssetUnitName#2
        let mish_mash.2.0.ConfigAssetName#0: bytes = nested_tuple.1.0.ConfigAssetName#2
        let mish_mash.2.0.ConfigAssetURL#0: bytes = nested_tuple.1.0.ConfigAssetURL#2
        let mish_mash.2.0.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple.1.0.ConfigAssetMetadataHash#2
        let mish_mash.2.0.ConfigAssetManager#0: account = nested_tuple.1.0.ConfigAssetManager#2
        let mish_mash.2.0.ConfigAssetReserve#0: account = nested_tuple.1.0.ConfigAssetReserve#2
        let mish_mash.2.0.ConfigAssetFreeze#0: account = nested_tuple.1.0.ConfigAssetFreeze#2
        let mish_mash.2.0.ConfigAssetClawback#0: account = nested_tuple.1.0.ConfigAssetClawback#2
        let mish_mash.2.0.FreezeAsset#0: uint64 = nested_tuple.1.0.FreezeAsset#2
        let mish_mash.2.0.FreezeAssetAccount#0: account = nested_tuple.1.0.FreezeAssetAccount#2
        let mish_mash.2.0.FreezeAssetFrozen#0: bool = nested_tuple.1.0.FreezeAssetFrozen#2
        let mish_mash.2.0.NumAssets#0: uint64 = nested_tuple.1.0.NumAssets#2
        let mish_mash.2.0.NumApplications#0: uint64 = nested_tuple.1.0.NumApplications#2
        let mish_mash.2.0.GlobalNumUint#0: uint64 = nested_tuple.1.0.GlobalNumUint#2
        let mish_mash.2.0.GlobalNumByteSlice#0: uint64 = nested_tuple.1.0.GlobalNumByteSlice#2
        let mish_mash.2.0.LocalNumUint#0: uint64 = nested_tuple.1.0.LocalNumUint#2
        let mish_mash.2.0.LocalNumByteSlice#0: uint64 = nested_tuple.1.0.LocalNumByteSlice#2
        let mish_mash.2.0.ExtraProgramPages#0: uint64 = nested_tuple.1.0.ExtraProgramPages#2
        let mish_mash.2.0.Nonparticipation#0: bool = nested_tuple.1.0.Nonparticipation#2
        let mish_mash.2.0.NumLogs#0: uint64 = nested_tuple.1.0.NumLogs#2
        let mish_mash.2.0.CreatedAssetID#0: uint64 = nested_tuple.1.0.CreatedAssetID#2
        let mish_mash.2.0.CreatedApplicationID#0: uint64 = nested_tuple.1.0.CreatedApplicationID#2
        let mish_mash.2.0.LastLog#0: bytes = nested_tuple.1.0.LastLog#2
        let mish_mash.2.0.StateProofPK#0: bytes = nested_tuple.1.0.StateProofPK#2
        let mish_mash.2.0.NumApprovalProgramPages#0: uint64 = nested_tuple.1.0.NumApprovalProgramPages#2
        let mish_mash.2.0.NumClearStateProgramPages#0: uint64 = nested_tuple.1.0.NumClearStateProgramPages#2
        let mish_mash.2.1.Sender#0: account = nested_tuple.1.1.Sender#2
        let mish_mash.2.1.Fee#0: uint64 = nested_tuple.1.1.Fee#2
        let mish_mash.2.1.FirstValid#0: uint64 = nested_tuple.1.1.FirstValid#2
        let mish_mash.2.1.FirstValidTime#0: uint64 = nested_tuple.1.1.FirstValidTime#2
        let mish_mash.2.1.LastValid#0: uint64 = nested_tuple.1.1.LastValid#2
        let mish_mash.2.1.Note#0: bytes = nested_tuple.1.1.Note#2
        let mish_mash.2.1.Lease#0: bytes[32] = nested_tuple.1.1.Lease#2
        let mish_mash.2.1.Receiver#0: account = nested_tuple.1.1.Receiver#2
        let mish_mash.2.1.Amount#0: uint64 = nested_tuple.1.1.Amount#2
        let mish_mash.2.1.CloseRemainderTo#0: account = nested_tuple.1.1.CloseRemainderTo#2
        let mish_mash.2.1.VotePK#0: bytes[32] = nested_tuple.1.1.VotePK#2
        let mish_mash.2.1.SelectionPK#0: bytes[32] = nested_tuple.1.1.SelectionPK#2
        let mish_mash.2.1.VoteFirst#0: uint64 = nested_tuple.1.1.VoteFirst#2
        let mish_mash.2.1.VoteLast#0: uint64 = nested_tuple.1.1.VoteLast#2
        let mish_mash.2.1.VoteKeyDilution#0: uint64 = nested_tuple.1.1.VoteKeyDilution#2
        let mish_mash.2.1.Type#0: bytes = nested_tuple.1.1.Type#2
        let mish_mash.2.1.TypeEnum#0: uint64 = nested_tuple.1.1.TypeEnum#2
        let mish_mash.2.1.XferAsset#0: uint64 = nested_tuple.1.1.XferAsset#2
        let mish_mash.2.1.AssetAmount#0: uint64 = nested_tuple.1.1.AssetAmount#2
        let mish_mash.2.1.AssetSender#0: account = nested_tuple.1.1.AssetSender#2
        let mish_mash.2.1.AssetReceiver#0: account = nested_tuple.1.1.AssetReceiver#2
        let mish_mash.2.1.AssetCloseTo#0: account = nested_tuple.1.1.AssetCloseTo#2
        let mish_mash.2.1.GroupIndex#0: uint64 = nested_tuple.1.1.GroupIndex#2
        let mish_mash.2.1.TxID#0: bytes[32] = nested_tuple.1.1.TxID#2
        let mish_mash.2.1.ApplicationID#0: uint64 = nested_tuple.1.1.ApplicationID#2
        let mish_mash.2.1.OnCompletion#0: uint64 = nested_tuple.1.1.OnCompletion#2
        let mish_mash.2.1.NumAppArgs#0: uint64 = nested_tuple.1.1.NumAppArgs#2
        let mish_mash.2.1.NumAccounts#0: uint64 = nested_tuple.1.1.NumAccounts#2
        let mish_mash.2.1.ApprovalProgram#0: bytes = nested_tuple.1.1.ApprovalProgram#2
        let mish_mash.2.1.ClearStateProgram#0: bytes = nested_tuple.1.1.ClearStateProgram#2
        let mish_mash.2.1.RekeyTo#0: account = nested_tuple.1.1.RekeyTo#2
        let mish_mash.2.1.ConfigAsset#0: uint64 = nested_tuple.1.1.ConfigAsset#2
        let mish_mash.2.1.ConfigAssetTotal#0: uint64 = nested_tuple.1.1.ConfigAssetTotal#2
        let mish_mash.2.1.ConfigAssetDecimals#0: uint64 = nested_tuple.1.1.ConfigAssetDecimals#2
        let mish_mash.2.1.ConfigAssetDefaultFrozen#0: bool = nested_tuple.1.1.ConfigAssetDefaultFrozen#2
        let mish_mash.2.1.ConfigAssetUnitName#0: bytes = nested_tuple.1.1.ConfigAssetUnitName#2
        let mish_mash.2.1.ConfigAssetName#0: bytes = nested_tuple.1.1.ConfigAssetName#2
        let mish_mash.2.1.ConfigAssetURL#0: bytes = nested_tuple.1.1.ConfigAssetURL#2
        let mish_mash.2.1.ConfigAssetMetadataHash#0: bytes[32] = nested_tuple.1.1.ConfigAssetMetadataHash#2
        let mish_mash.2.1.ConfigAssetManager#0: account = nested_tuple.1.1.ConfigAssetManager#2
        let mish_mash.2.1.ConfigAssetReserve#0: account = nested_tuple.1.1.ConfigAssetReserve#2
        let mish_mash.2.1.ConfigAssetFreeze#0: account = nested_tuple.1.1.ConfigAssetFreeze#2
        let mish_mash.2.1.ConfigAssetClawback#0: account = nested_tuple.1.1.ConfigAssetClawback#2
        let mish_mash.2.1.FreezeAsset#0: uint64 = nested_tuple.1.1.FreezeAsset#2
        let mish_mash.2.1.FreezeAssetAccount#0: account = nested_tuple.1.1.FreezeAssetAccount#2
        let mish_mash.2.1.FreezeAssetFrozen#0: bool = nested_tuple.1.1.FreezeAssetFrozen#2
        let mish_mash.2.1.NumAssets#0: uint64 = nested_tuple.1.1.NumAssets#2
        let mish_mash.2.1.NumApplications#0: uint64 = nested_tuple.1.1.NumApplications#2
        let mish_mash.2.1.GlobalNumUint#0: uint64 = nested_tuple.1.1.GlobalNumUint#2
        let mish_mash.2.1.GlobalNumByteSlice#0: uint64 = nested_tuple.1.1.GlobalNumByteSlice#2
        let mish_mash.2.1.LocalNumUint#0: uint64 = nested_tuple.1.1.LocalNumUint#2
        let mish_mash.2.1.LocalNumByteSlice#0: uint64 = nested_tuple.1.1.LocalNumByteSlice#2
        let mish_mash.2.1.ExtraProgramPages#0: uint64 = nested_tuple.1.1.ExtraProgramPages#2
        let mish_mash.2.1.Nonparticipation#0: bool = nested_tuple.1.1.Nonparticipation#2
        let mish_mash.2.1.NumLogs#0: uint64 = nested_tuple.1.1.NumLogs#2
        let mish_mash.2.1.CreatedAssetID#0: uint64 = nested_tuple.1.1.CreatedAssetID#2
        let mish_mash.2.1.CreatedApplicationID#0: uint64 = nested_tuple.1.1.CreatedApplicationID#2
        let mish_mash.2.1.LastLog#0: bytes = nested_tuple.1.1.LastLog#2
        let mish_mash.2.1.StateProofPK#0: bytes = nested_tuple.1.1.StateProofPK#2
        let mish_mash.2.1.NumApprovalProgramPages#0: uint64 = nested_tuple.1.1.NumApprovalProgramPages#2
        let mish_mash.2.1.NumClearStateProgramPages#0: uint64 = nested_tuple.1.1.NumClearStateProgramPages#2
        let tmp%14#0: bool = (== mish_mash.0.Note#0 0x61636667)
        (assert tmp%14#0)
        let tmp%15#0: bool = (== mish_mash.1.Note#0 0x70617932)
        (assert tmp%15#0)
        let tmp%16#0: bool = (== mish_mash.2.0.Note#0 0x6163666732)
        (assert tmp%16#0)
        let tmp%17#0: bool = (== mish_mash.2.1.Note#0 0x70617935)
        (assert tmp%17#0)
        return 

subroutine test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create() -> void:
    block@0: // L1
        return 