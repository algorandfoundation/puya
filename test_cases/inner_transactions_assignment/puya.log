debug: PuyaPyOptions(output_teal=True, output_source_map=True, output_arc32=True, output_arc56=True, output_ssa_ir=True, output_optimization_ir=True, output_destructured_ir=True, output_memory_ir=True, output_bytecode=True, output_teal_intermediates=False, output_op_statistics=True, debug_level=1, optimization_level=1, target_avm_version=10, cli_template_definitions={}, template_vars_prefix='TMPL_', locals_coalescing_strategy=<LocalsCoalescingStrategy.root_operand: 'root_operand'>, _disabled_optimizations=(), expand_all_bytes=False, paths=['inner_transactions_assignment'], resource_encoding='value', output_awst=True, output_awst_json=False, output_source_annotations_json=False, output_client=True, log_level=<LogLevel.debug: 10>)
info: Found python prefix: <git root>/.venv
info: writing inner_transactions_assignment/out/module.awst
debug: Building IR for function _puya_lib.util.ensure_budget
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'required_budget_with_buffer' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let required_budget_with_buffer#1: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'fee_source' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let fee_source#1: uint64 = undefined while trying to resolve 'fee_source' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@1
debug: Added required_budget_with_buffer#0 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0) in block@0
debug: Created Phi assignment: let required_budget_with_buffer#2: uint64 = undefined while trying to resolve 'required_budget_with_buffer' in block@6
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3) in block@3
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4) in block@4
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1
debug: Deleting Phi assignment: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5)
debug: Replaced trivial Phi node: let required_budget_with_buffer#2: uint64 = φ(required_budget_with_buffer#1 <- block@3, required_budget_with_buffer#1 <- block@4, required_budget_with_buffer#1 <- block@5) (required_budget_with_buffer#2) with required_budget_with_buffer#1 in current definition for 1 blocks
debug: Added required_budget_with_buffer#1 to Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0
debug: Deleting Phi assignment: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6)
debug: Replaced trivial Phi node: let required_budget_with_buffer#1: uint64 = φ(required_budget_with_buffer#0 <- block@0, required_budget_with_buffer#1 <- block@6) (required_budget_with_buffer#1) with required_budget_with_buffer#0 in current definition for 6 blocks
debug: Added fee_source#0 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0) in block@0
debug: Created Phi assignment: let fee_source#2: uint64 = undefined while trying to resolve 'fee_source' in block@6
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3) in block@3
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4) in block@4
debug: Added fee_source#1 to Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) in block@5
debug: Replacing trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1
debug: Deleting Phi assignment: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5)
debug: Replaced trivial Phi node: let fee_source#2: uint64 = φ(fee_source#1 <- block@3, fee_source#1 <- block@4, fee_source#1 <- block@5) (fee_source#2) with fee_source#1 in current definition for 1 blocks
debug: Added fee_source#1 to Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) in block@6
debug: Replacing trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0
debug: Deleting Phi assignment: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6)
debug: Replaced trivial Phi node: let fee_source#1: uint64 = φ(fee_source#0 <- block@0, fee_source#1 <- block@6) (fee_source#1) with fee_source#0 in current definition for 6 blocks
debug: Sealing block@7
debug: Terminated block@7
debug: Building IR for function _puya_lib.bytes_.is_substring
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'start' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let start#1: uint64 = undefined while trying to resolve 'start' in block@1
debug: Looking for 'item' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item#1: bytes = undefined while trying to resolve 'item' in block@1
debug: Looking for 'sequence' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let sequence#1: bytes = undefined while trying to resolve 'sequence' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@1
debug: Added start#0 to Phi node: let start#1: uint64 = φ(start#0 <- block@0) in block@0
debug: Added start#2 to Phi node: let start#1: uint64 = φ(start#0 <- block@0, start#2 <- block@4) in block@4
debug: Added item#0 to Phi node: let item#1: bytes = φ(item#0 <- block@0) in block@0
debug: Added item#1 to Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0
debug: Deleting Phi assignment: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4)
debug: Replaced trivial Phi node: let item#1: bytes = φ(item#0 <- block@0, item#1 <- block@4) (item#1) with item#0 in current definition for 3 blocks
debug: Added sequence#0 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0) in block@0
debug: Added sequence#1 to Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0
debug: Deleting Phi assignment: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4)
debug: Replaced trivial Phi node: let sequence#1: bytes = φ(sequence#0 <- block@0, sequence#1 <- block@4) (sequence#1) with sequence#0 in current definition for 3 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_bit
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_and_tail#1: bytes = undefined while trying to resolve 'head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added head_and_tail#0 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0) in block@0
debug: Added head_and_tail#1 to Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0
debug: Deleting Phi assignment: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let head_and_tail#1: bytes = φ(head_and_tail#0 <- block@0, head_and_tail#1 <- block@3) (head_and_tail#1) with head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Sealing block@4
debug: Created Phi assignment: let length_minus_1#1: uint64 = undefined while trying to resolve 'length_minus_1' in block@1
debug: Added length_minus_1#0 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0) in block@0
debug: Added length_minus_1#1 to Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0
debug: Deleting Phi assignment: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3)
debug: Replaced trivial Phi node: let length_minus_1#1: uint64 = φ(length_minus_1#0 <- block@0, length_minus_1#1 <- block@3) (length_minus_1#1) with length_minus_1#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_header_offset#1: uint64 = undefined while trying to resolve 'popped_header_offset' in block@1
debug: Added popped_header_offset#0 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0) in block@0
debug: Added popped_header_offset#1 to Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0
debug: Deleting Phi assignment: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_header_offset#1: uint64 = φ(popped_header_offset#0 <- block@0, popped_header_offset#1 <- block@3) (popped_header_offset#1) with popped_header_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped_offset#1: uint64 = undefined while trying to resolve 'popped_offset' in block@1
debug: Added popped_offset#0 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0) in block@0
debug: Added popped_offset#1 to Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0
debug: Deleting Phi assignment: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3)
debug: Replaced trivial Phi node: let popped_offset#1: uint64 = φ(popped_offset#0 <- block@0, popped_offset#1 <- block@3) (popped_offset#1) with popped_offset#0 in current definition for 3 blocks
debug: Created Phi assignment: let popped#1: bytes = undefined while trying to resolve 'popped' in block@1
debug: Added popped#0 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0) in block@0
debug: Added popped#1 to Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0
debug: Deleting Phi assignment: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3)
debug: Replaced trivial Phi node: let popped#1: bytes = φ(popped#0 <- block@0, popped#1 <- block@3) (popped#1) with popped#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_bits
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Created Phi assignment: let array_length#1: uint64 = undefined while trying to resolve 'array_length' in block@2
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0) in block@0
debug: Added array_length#0 to Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0
debug: Deleting Phi assignment: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1)
debug: Replaced trivial Phi node: let array_length#1: uint64 = φ(array_length#0 <- block@0, array_length#0 <- block@1) (array_length#1) with array_length#0 in current definition for 1 blocks
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@2
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#0 <- block@1) (new_items_count#1) with new_items_count#0 in current definition for 1 blocks
debug: Terminated block@2
debug: Looking for 'write_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_offset#1: uint64 = undefined while trying to resolve 'write_offset' in block@3
debug: Looking for 'write_end' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let write_end#1: uint64 = undefined while trying to resolve 'write_end' in block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Looking for 'result' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let result#2: bytes = undefined while trying to resolve 'result' in block@3
debug: Looking for 'new_items_bytes' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let new_items_bytes#1: bytes = undefined while trying to resolve 'new_items_bytes' in block@3
debug: Looking for 'read_offset' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_offset#1: uint64 = undefined while trying to resolve 'read_offset' in block@3
debug: Looking for 'read_step' in an unsealed block creating an incomplete Phi: block@3
debug: Created Phi assignment: let read_step#1: uint64 = undefined while trying to resolve 'read_step' in block@3
debug: Terminated block@4
debug: Sealing block@3
debug: Added write_offset#0 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2) in block@2
debug: Added write_offset#2 to Phi node: let write_offset#1: uint64 = φ(write_offset#0 <- block@2, write_offset#2 <- block@4) in block@4
debug: Added write_end#0 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2) in block@2
debug: Added write_end#1 to Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0
debug: Deleting Phi assignment: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4)
debug: Replaced trivial Phi node: let write_end#1: uint64 = φ(write_end#0 <- block@2, write_end#1 <- block@4) (write_end#1) with write_end#0 in current definition for 2 blocks
debug: Created Phi assignment: let result#4: bytes = undefined while trying to resolve 'result' in block@2
debug: Added result#0 to Phi node: let result#4: bytes = φ(result#0 <- block@0) in block@0
debug: Added result#1 to Phi node: let result#4: bytes = φ(result#0 <- block@0, result#1 <- block@1) in block@1
debug: Added result#4 to Phi node: let result#2: bytes = φ(result#4 <- block@2) in block@2
debug: Added result#3 to Phi node: let result#2: bytes = φ(result#4 <- block@2, result#3 <- block@4) in block@4
debug: Created Phi assignment: let new_items_bytes#2: bytes = undefined while trying to resolve 'new_items_bytes' in block@2
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0) in block@0
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1)
debug: Replaced trivial Phi node: let new_items_bytes#2: bytes = φ(new_items_bytes#0 <- block@0, new_items_bytes#0 <- block@1) (new_items_bytes#2) with new_items_bytes#0 in current definition for 1 blocks
debug: Added new_items_bytes#0 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2) in block@2
debug: Added new_items_bytes#1 to Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0
debug: Deleting Phi assignment: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4)
debug: Replaced trivial Phi node: let new_items_bytes#1: bytes = φ(new_items_bytes#0 <- block@2, new_items_bytes#1 <- block@4) (new_items_bytes#1) with new_items_bytes#0 in current definition for 2 blocks
debug: Added read_offset#0 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2) in block@2
debug: Added read_offset#2 to Phi node: let read_offset#1: uint64 = φ(read_offset#0 <- block@2, read_offset#2 <- block@4) in block@4
debug: Created Phi assignment: let read_step#2: uint64 = undefined while trying to resolve 'read_step' in block@2
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0) in block@0
debug: Added read_step#0 to Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) in block@1
debug: Replacing trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0
debug: Deleting Phi assignment: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1)
debug: Replaced trivial Phi node: let read_step#2: uint64 = φ(read_step#0 <- block@0, read_step#0 <- block@1) (read_step#2) with read_step#0 in current definition for 1 blocks
debug: Added read_step#0 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2) in block@2
debug: Added read_step#1 to Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) in block@4
debug: Replacing trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0
debug: Deleting Phi assignment: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4)
debug: Replaced trivial Phi node: let read_step#1: uint64 = φ(read_step#0 <- block@2, read_step#1 <- block@4) (read_step#1) with read_step#0 in current definition for 2 blocks
debug: Sealing block@5
debug: Terminated block@5
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head#1: bytes = undefined while trying to resolve 'new_head' in block@1
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let item_offset_adjustment#1: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#1 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3)
debug: Replaced trivial Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#1 <- block@3) (array_head_and_tail#1) with array_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#0 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0) in block@0
debug: Added new_head#2 to Phi node: let new_head#1: bytes = φ(new_head#0 <- block@0, new_head#2 <- block@3) in block@3
debug: Added item_offset_adjustment#0 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0) in block@0
debug: Added item_offset_adjustment#1 to Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0
debug: Deleting Phi assignment: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3)
debug: Replaced trivial Phi node: let item_offset_adjustment#1: uint64 = φ(item_offset_adjustment#0 <- block@0, item_offset_adjustment#1 <- block@3) (item_offset_adjustment#1) with item_offset_adjustment#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Created Phi assignment: let new_items_count#1: uint64 = undefined while trying to resolve 'new_items_count' in block@1
debug: Added new_items_count#0 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0) in block@0
debug: Added new_items_count#1 to Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3)
debug: Replaced trivial Phi node: let new_items_count#1: uint64 = φ(new_items_count#0 <- block@0, new_items_count#1 <- block@3) (new_items_count#1) with new_items_count#0 in current definition for 3 blocks
debug: Terminated block@4
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let head_offset#4: uint64 = undefined while trying to resolve 'head_offset' in block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@5
debug: Looking for 'new_head' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let new_head#3: bytes = undefined while trying to resolve 'new_head' in block@5
debug: Looking for 'item_offset_adjustment' in an unsealed block creating an incomplete Phi: block@5
debug: Created Phi assignment: let item_offset_adjustment#3: uint64 = undefined while trying to resolve 'item_offset_adjustment' in block@5
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@5
debug: Added head_offset#3 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4) in block@4
debug: Added head_offset#5 to Phi node: let head_offset#4: uint64 = φ(head_offset#3 <- block@4, head_offset#5 <- block@7) in block@7
debug: Created Phi assignment: let new_head_and_tail#2: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3)
debug: Replaced trivial Phi node: let new_head_and_tail#2: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) (new_head_and_tail#2) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4) in block@4
debug: Added new_head_and_tail#1 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0
debug: Deleting Phi assignment: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7)
debug: Replaced trivial Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@4, new_head_and_tail#1 <- block@7) (new_head_and_tail#1) with new_head_and_tail#0 in current definition for 3 blocks
debug: Added new_head#1 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4) in block@4
debug: Added new_head#4 to Phi node: let new_head#3: bytes = φ(new_head#1 <- block@4, new_head#4 <- block@7) in block@7
debug: Added item_offset_adjustment#2 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4) in block@4
debug: Added item_offset_adjustment#3 to Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) in block@7
debug: Replacing trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2
debug: Deleting Phi assignment: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7)
debug: Replaced trivial Phi node: let item_offset_adjustment#3: uint64 = φ(item_offset_adjustment#2 <- block@4, item_offset_adjustment#3 <- block@7) (item_offset_adjustment#3) with item_offset_adjustment#2 in current definition for 3 blocks
debug: Sealing block@8
debug: Created Phi assignment: let array_items_count#1: uint64 = undefined while trying to resolve 'array_items_count' in block@5
debug: Created Phi assignment: let array_items_count#2: uint64 = undefined while trying to resolve 'array_items_count' in block@1
debug: Added array_items_count#0 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0) in block@0
debug: Added array_items_count#2 to Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) in block@3
debug: Replacing trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3)
debug: Replaced trivial Phi node: let array_items_count#2: uint64 = φ(array_items_count#0 <- block@0, array_items_count#2 <- block@3) (array_items_count#2) with array_items_count#0 in current definition for 3 blocks
debug: Added array_items_count#0 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4) in block@4
debug: Added array_items_count#1 to Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0
debug: Deleting Phi assignment: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7)
debug: Replaced trivial Phi node: let array_items_count#1: uint64 = φ(array_items_count#0 <- block@4, array_items_count#1 <- block@7) (array_items_count#1) with array_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let new_items_count#2: uint64 = undefined while trying to resolve 'new_items_count' in block@5
debug: Added new_items_count#0 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4) in block@4
debug: Added new_items_count#2 to Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0
debug: Deleting Phi assignment: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7)
debug: Replaced trivial Phi node: let new_items_count#2: uint64 = φ(new_items_count#0 <- block@4, new_items_count#2 <- block@7) (new_items_count#2) with new_items_count#0 in current definition for 3 blocks
debug: Created Phi assignment: let array_head_and_tail#2: bytes = undefined while trying to resolve 'array_head_and_tail' in block@5
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4) in block@4
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) in block@7
debug: Replacing trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0
debug: Deleting Phi assignment: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7)
debug: Replaced trivial Phi node: let array_head_and_tail#2: bytes = φ(array_head_and_tail#0 <- block@4, array_head_and_tail#2 <- block@7) (array_head_and_tail#2) with array_head_and_tail#0 in current definition for 3 blocks
debug: Terminated block@8
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.static_array_replace_dynamic_element
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'new_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_head_and_tail#1: bytes = undefined while trying to resolve 'new_head_and_tail' in block@1
debug: Looking for 'new_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let new_item_length#1: uint64 = undefined while trying to resolve 'new_item_length' in block@1
debug: Looking for 'original_item_length' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let original_item_length#1: uint64 = undefined while trying to resolve 'original_item_length' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#2 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#2 <- block@3) in block@3
debug: Added new_head_and_tail#0 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0) in block@0
debug: Added new_head_and_tail#2 to Phi node: let new_head_and_tail#1: bytes = φ(new_head_and_tail#0 <- block@0, new_head_and_tail#2 <- block@3) in block@3
debug: Added new_item_length#0 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0) in block@0
debug: Added new_item_length#1 to Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0
debug: Deleting Phi assignment: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let new_item_length#1: uint64 = φ(new_item_length#0 <- block@0, new_item_length#1 <- block@3) (new_item_length#1) with new_item_length#0 in current definition for 3 blocks
debug: Added original_item_length#0 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0) in block@0
debug: Added original_item_length#1 to Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) in block@3
debug: Replacing trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0
debug: Deleting Phi assignment: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3)
debug: Replaced trivial Phi node: let original_item_length#1: uint64 = φ(original_item_length#0 <- block@0, original_item_length#1 <- block@3) (original_item_length#1) with original_item_length#0 in current definition for 3 blocks
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function _puya_lib.arc4.static_array_replace_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: Sealing block@0
debug: Terminated block@0
debug: Looking for 'head_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let head_offset#1: uint64 = undefined while trying to resolve 'head_offset' in block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Looking for 'tail_offset' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let tail_offset#1: uint64 = undefined while trying to resolve 'tail_offset' in block@1
debug: Looking for 'array_head_and_tail' in an unsealed block creating an incomplete Phi: block@1
debug: Created Phi assignment: let array_head_and_tail#1: bytes = undefined while trying to resolve 'array_head_and_tail' in block@1
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@1
debug: Added head_offset#0 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0) in block@0
debug: Added head_offset#3 to Phi node: let head_offset#1: uint64 = φ(head_offset#0 <- block@0, head_offset#3 <- block@3) in block@3
debug: Added tail_offset#0 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0) in block@0
debug: Added tail_offset#2 to Phi node: let tail_offset#1: uint64 = φ(tail_offset#0 <- block@0, tail_offset#2 <- block@3) in block@3
debug: Added array_head_and_tail#0 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0) in block@0
debug: Added array_head_and_tail#2 to Phi node: let array_head_and_tail#1: bytes = φ(array_head_and_tail#0 <- block@0, array_head_and_tail#2 <- block@3) in block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.inner_transactions_assignment.contract.echo
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Terminated block@9
debug: Sealing block@10
debug: Terminated block@10
debug: Building IR for function test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Building IR for function test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Sealing block@0
debug: Terminated block@0
debug: Sealing block@1
debug: Terminated block@1
debug: Sealing block@2
debug: Terminated block@2
debug: Sealing block@3
debug: Terminated block@3
debug: Sealing block@4
debug: Terminated block@4
debug: Sealing block@5
debug: Terminated block@5
debug: Sealing block@6
debug: Terminated block@6
debug: Sealing block@7
debug: Terminated block@7
debug: Sealing block@8
debug: Terminated block@8
debug: Sealing block@9
debug: Created Phi assignment: let nested_tuple.0#2: bytes = undefined while trying to resolve 'nested_tuple.0' in block@9
debug: Added nested_tuple.0#0 to Phi node: let nested_tuple.0#2: bytes = φ(nested_tuple.0#0 <- block@4) in block@4
debug: Added nested_tuple.0#1 to Phi node: let nested_tuple.0#2: bytes = φ(nested_tuple.0#0 <- block@4, nested_tuple.0#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0#2: itxn_group_idx = undefined while trying to resolve 'nested_tuple.1.0' in block@9
debug: Added nested_tuple.1.0#0 to Phi node: let nested_tuple.1.0#2: itxn_group_idx = φ(nested_tuple.1.0#0 <- block@4) in block@4
debug: Added nested_tuple.1.0#1 to Phi node: let nested_tuple.1.0#2: itxn_group_idx = φ(nested_tuple.1.0#0 <- block@4, nested_tuple.1.0#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1#2: itxn_group_idx = undefined while trying to resolve 'nested_tuple.1.1' in block@9
debug: Added nested_tuple.1.1#0 to Phi node: let nested_tuple.1.1#2: itxn_group_idx = φ(nested_tuple.1.1#0 <- block@4) in block@4
debug: Added nested_tuple.1.1#1 to Phi node: let nested_tuple.1.1#2: itxn_group_idx = φ(nested_tuple.1.1#0 <- block@4, nested_tuple.1.1#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.2#2: bytes = undefined while trying to resolve 'nested_tuple.2' in block@9
debug: Added nested_tuple.2#0 to Phi node: let nested_tuple.2#2: bytes = φ(nested_tuple.2#0 <- block@4) in block@4
debug: Added nested_tuple.2#1 to Phi node: let nested_tuple.2#2: bytes = φ(nested_tuple.2#0 <- block@4, nested_tuple.2#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Note#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.Note' in block@9
debug: Added nested_tuple.1.0.Note#0 to Phi node: let nested_tuple.1.0.Note#2: bytes = φ(nested_tuple.1.0.Note#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Note#1 to Phi node: let nested_tuple.1.0.Note#2: bytes = φ(nested_tuple.1.0.Note#0 <- block@4, nested_tuple.1.0.Note#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Note#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.Note' in block@9
debug: Added nested_tuple.1.1.Note#0 to Phi node: let nested_tuple.1.1.Note#2: bytes = φ(nested_tuple.1.1.Note#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Note#1 to Phi node: let nested_tuple.1.1.Note#2: bytes = φ(nested_tuple.1.1.Note#0 <- block@4, nested_tuple.1.1.Note#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple_copy.0#1: bytes = undefined while trying to resolve 'nested_tuple_copy.0' in block@9
debug: Added nested_tuple_copy.0#0 to Phi node: let nested_tuple_copy.0#1: bytes = φ(nested_tuple_copy.0#0 <- block@4) in block@4
debug: Added nested_tuple_copy.0#0 to Phi node: let nested_tuple_copy.0#1: bytes = φ(nested_tuple_copy.0#0 <- block@4, nested_tuple_copy.0#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.0#1: bytes = φ(nested_tuple_copy.0#0 <- block@4, nested_tuple_copy.0#0 <- block@8) (nested_tuple_copy.0#1) with nested_tuple_copy.0#0
debug: Deleting Phi assignment: let nested_tuple_copy.0#1: bytes = φ(nested_tuple_copy.0#0 <- block@4, nested_tuple_copy.0#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.0#1: bytes = φ(nested_tuple_copy.0#0 <- block@4, nested_tuple_copy.0#0 <- block@8) (nested_tuple_copy.0#1) with nested_tuple_copy.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0#1: itxn_group_idx = undefined while trying to resolve 'nested_tuple_copy.1.0' in block@9
debug: Added nested_tuple_copy.1.0#0 to Phi node: let nested_tuple_copy.1.0#1: itxn_group_idx = φ(nested_tuple_copy.1.0#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0#0 to Phi node: let nested_tuple_copy.1.0#1: itxn_group_idx = φ(nested_tuple_copy.1.0#0 <- block@4, nested_tuple_copy.1.0#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0#1: itxn_group_idx = φ(nested_tuple_copy.1.0#0 <- block@4, nested_tuple_copy.1.0#0 <- block@8) (nested_tuple_copy.1.0#1) with nested_tuple_copy.1.0#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0#1: itxn_group_idx = φ(nested_tuple_copy.1.0#0 <- block@4, nested_tuple_copy.1.0#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0#1: itxn_group_idx = φ(nested_tuple_copy.1.0#0 <- block@4, nested_tuple_copy.1.0#0 <- block@8) (nested_tuple_copy.1.0#1) with nested_tuple_copy.1.0#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1#1: itxn_group_idx = undefined while trying to resolve 'nested_tuple_copy.1.1' in block@9
debug: Added nested_tuple_copy.1.1#0 to Phi node: let nested_tuple_copy.1.1#1: itxn_group_idx = φ(nested_tuple_copy.1.1#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1#0 to Phi node: let nested_tuple_copy.1.1#1: itxn_group_idx = φ(nested_tuple_copy.1.1#0 <- block@4, nested_tuple_copy.1.1#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1#1: itxn_group_idx = φ(nested_tuple_copy.1.1#0 <- block@4, nested_tuple_copy.1.1#0 <- block@8) (nested_tuple_copy.1.1#1) with nested_tuple_copy.1.1#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1#1: itxn_group_idx = φ(nested_tuple_copy.1.1#0 <- block@4, nested_tuple_copy.1.1#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1#1: itxn_group_idx = φ(nested_tuple_copy.1.1#0 <- block@4, nested_tuple_copy.1.1#0 <- block@8) (nested_tuple_copy.1.1#1) with nested_tuple_copy.1.1#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.2#1: bytes = undefined while trying to resolve 'nested_tuple_copy.2' in block@9
debug: Added nested_tuple_copy.2#0 to Phi node: let nested_tuple_copy.2#1: bytes = φ(nested_tuple_copy.2#0 <- block@4) in block@4
debug: Added nested_tuple_copy.2#0 to Phi node: let nested_tuple_copy.2#1: bytes = φ(nested_tuple_copy.2#0 <- block@4, nested_tuple_copy.2#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.2#1: bytes = φ(nested_tuple_copy.2#0 <- block@4, nested_tuple_copy.2#0 <- block@8) (nested_tuple_copy.2#1) with nested_tuple_copy.2#0
debug: Deleting Phi assignment: let nested_tuple_copy.2#1: bytes = φ(nested_tuple_copy.2#0 <- block@4, nested_tuple_copy.2#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.2#1: bytes = φ(nested_tuple_copy.2#0 <- block@4, nested_tuple_copy.2#0 <- block@8) (nested_tuple_copy.2#1) with nested_tuple_copy.2#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Sender#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.Sender' in block@9
debug: Added nested_tuple_copy.1.0.Sender#0 to Phi node: let nested_tuple_copy.1.0.Sender#1: account = φ(nested_tuple_copy.1.0.Sender#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Sender#0 to Phi node: let nested_tuple_copy.1.0.Sender#1: account = φ(nested_tuple_copy.1.0.Sender#0 <- block@4, nested_tuple_copy.1.0.Sender#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Sender#1: account = φ(nested_tuple_copy.1.0.Sender#0 <- block@4, nested_tuple_copy.1.0.Sender#0 <- block@8) (nested_tuple_copy.1.0.Sender#1) with nested_tuple_copy.1.0.Sender#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Sender#1: account = φ(nested_tuple_copy.1.0.Sender#0 <- block@4, nested_tuple_copy.1.0.Sender#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Sender#1: account = φ(nested_tuple_copy.1.0.Sender#0 <- block@4, nested_tuple_copy.1.0.Sender#0 <- block@8) (nested_tuple_copy.1.0.Sender#1) with nested_tuple_copy.1.0.Sender#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Fee#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.Fee' in block@9
debug: Added nested_tuple_copy.1.0.Fee#0 to Phi node: let nested_tuple_copy.1.0.Fee#1: uint64 = φ(nested_tuple_copy.1.0.Fee#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Fee#0 to Phi node: let nested_tuple_copy.1.0.Fee#1: uint64 = φ(nested_tuple_copy.1.0.Fee#0 <- block@4, nested_tuple_copy.1.0.Fee#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Fee#1: uint64 = φ(nested_tuple_copy.1.0.Fee#0 <- block@4, nested_tuple_copy.1.0.Fee#0 <- block@8) (nested_tuple_copy.1.0.Fee#1) with nested_tuple_copy.1.0.Fee#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Fee#1: uint64 = φ(nested_tuple_copy.1.0.Fee#0 <- block@4, nested_tuple_copy.1.0.Fee#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Fee#1: uint64 = φ(nested_tuple_copy.1.0.Fee#0 <- block@4, nested_tuple_copy.1.0.Fee#0 <- block@8) (nested_tuple_copy.1.0.Fee#1) with nested_tuple_copy.1.0.Fee#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.FirstValid#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.FirstValid' in block@9
debug: Added nested_tuple_copy.1.0.FirstValid#0 to Phi node: let nested_tuple_copy.1.0.FirstValid#1: uint64 = φ(nested_tuple_copy.1.0.FirstValid#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.FirstValid#0 to Phi node: let nested_tuple_copy.1.0.FirstValid#1: uint64 = φ(nested_tuple_copy.1.0.FirstValid#0 <- block@4, nested_tuple_copy.1.0.FirstValid#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.FirstValid#1: uint64 = φ(nested_tuple_copy.1.0.FirstValid#0 <- block@4, nested_tuple_copy.1.0.FirstValid#0 <- block@8) (nested_tuple_copy.1.0.FirstValid#1) with nested_tuple_copy.1.0.FirstValid#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.FirstValid#1: uint64 = φ(nested_tuple_copy.1.0.FirstValid#0 <- block@4, nested_tuple_copy.1.0.FirstValid#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.FirstValid#1: uint64 = φ(nested_tuple_copy.1.0.FirstValid#0 <- block@4, nested_tuple_copy.1.0.FirstValid#0 <- block@8) (nested_tuple_copy.1.0.FirstValid#1) with nested_tuple_copy.1.0.FirstValid#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.FirstValidTime' in block@9
debug: Added nested_tuple_copy.1.0.FirstValidTime#0 to Phi node: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.0.FirstValidTime#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.FirstValidTime#0 to Phi node: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.0.FirstValidTime#0 <- block@4, nested_tuple_copy.1.0.FirstValidTime#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.0.FirstValidTime#0 <- block@4, nested_tuple_copy.1.0.FirstValidTime#0 <- block@8) (nested_tuple_copy.1.0.FirstValidTime#1) with nested_tuple_copy.1.0.FirstValidTime#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.0.FirstValidTime#0 <- block@4, nested_tuple_copy.1.0.FirstValidTime#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.0.FirstValidTime#0 <- block@4, nested_tuple_copy.1.0.FirstValidTime#0 <- block@8) (nested_tuple_copy.1.0.FirstValidTime#1) with nested_tuple_copy.1.0.FirstValidTime#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.LastValid#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.LastValid' in block@9
debug: Added nested_tuple_copy.1.0.LastValid#0 to Phi node: let nested_tuple_copy.1.0.LastValid#1: uint64 = φ(nested_tuple_copy.1.0.LastValid#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.LastValid#0 to Phi node: let nested_tuple_copy.1.0.LastValid#1: uint64 = φ(nested_tuple_copy.1.0.LastValid#0 <- block@4, nested_tuple_copy.1.0.LastValid#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.LastValid#1: uint64 = φ(nested_tuple_copy.1.0.LastValid#0 <- block@4, nested_tuple_copy.1.0.LastValid#0 <- block@8) (nested_tuple_copy.1.0.LastValid#1) with nested_tuple_copy.1.0.LastValid#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.LastValid#1: uint64 = φ(nested_tuple_copy.1.0.LastValid#0 <- block@4, nested_tuple_copy.1.0.LastValid#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.LastValid#1: uint64 = φ(nested_tuple_copy.1.0.LastValid#0 <- block@4, nested_tuple_copy.1.0.LastValid#0 <- block@8) (nested_tuple_copy.1.0.LastValid#1) with nested_tuple_copy.1.0.LastValid#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Note#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.Note' in block@9
debug: Added nested_tuple_copy.1.0.Note#0 to Phi node: let nested_tuple_copy.1.0.Note#1: bytes = φ(nested_tuple_copy.1.0.Note#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Note#0 to Phi node: let nested_tuple_copy.1.0.Note#1: bytes = φ(nested_tuple_copy.1.0.Note#0 <- block@4, nested_tuple_copy.1.0.Note#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Note#1: bytes = φ(nested_tuple_copy.1.0.Note#0 <- block@4, nested_tuple_copy.1.0.Note#0 <- block@8) (nested_tuple_copy.1.0.Note#1) with nested_tuple_copy.1.0.Note#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Note#1: bytes = φ(nested_tuple_copy.1.0.Note#0 <- block@4, nested_tuple_copy.1.0.Note#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Note#1: bytes = φ(nested_tuple_copy.1.0.Note#0 <- block@4, nested_tuple_copy.1.0.Note#0 <- block@8) (nested_tuple_copy.1.0.Note#1) with nested_tuple_copy.1.0.Note#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Lease#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.0.Lease' in block@9
debug: Added nested_tuple_copy.1.0.Lease#0 to Phi node: let nested_tuple_copy.1.0.Lease#1: bytes[32] = φ(nested_tuple_copy.1.0.Lease#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Lease#0 to Phi node: let nested_tuple_copy.1.0.Lease#1: bytes[32] = φ(nested_tuple_copy.1.0.Lease#0 <- block@4, nested_tuple_copy.1.0.Lease#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Lease#1: bytes[32] = φ(nested_tuple_copy.1.0.Lease#0 <- block@4, nested_tuple_copy.1.0.Lease#0 <- block@8) (nested_tuple_copy.1.0.Lease#1) with nested_tuple_copy.1.0.Lease#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Lease#1: bytes[32] = φ(nested_tuple_copy.1.0.Lease#0 <- block@4, nested_tuple_copy.1.0.Lease#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Lease#1: bytes[32] = φ(nested_tuple_copy.1.0.Lease#0 <- block@4, nested_tuple_copy.1.0.Lease#0 <- block@8) (nested_tuple_copy.1.0.Lease#1) with nested_tuple_copy.1.0.Lease#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Receiver#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.Receiver' in block@9
debug: Added nested_tuple_copy.1.0.Receiver#0 to Phi node: let nested_tuple_copy.1.0.Receiver#1: account = φ(nested_tuple_copy.1.0.Receiver#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Receiver#0 to Phi node: let nested_tuple_copy.1.0.Receiver#1: account = φ(nested_tuple_copy.1.0.Receiver#0 <- block@4, nested_tuple_copy.1.0.Receiver#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Receiver#1: account = φ(nested_tuple_copy.1.0.Receiver#0 <- block@4, nested_tuple_copy.1.0.Receiver#0 <- block@8) (nested_tuple_copy.1.0.Receiver#1) with nested_tuple_copy.1.0.Receiver#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Receiver#1: account = φ(nested_tuple_copy.1.0.Receiver#0 <- block@4, nested_tuple_copy.1.0.Receiver#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Receiver#1: account = φ(nested_tuple_copy.1.0.Receiver#0 <- block@4, nested_tuple_copy.1.0.Receiver#0 <- block@8) (nested_tuple_copy.1.0.Receiver#1) with nested_tuple_copy.1.0.Receiver#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Amount#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.Amount' in block@9
debug: Added nested_tuple_copy.1.0.Amount#0 to Phi node: let nested_tuple_copy.1.0.Amount#1: uint64 = φ(nested_tuple_copy.1.0.Amount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Amount#0 to Phi node: let nested_tuple_copy.1.0.Amount#1: uint64 = φ(nested_tuple_copy.1.0.Amount#0 <- block@4, nested_tuple_copy.1.0.Amount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Amount#1: uint64 = φ(nested_tuple_copy.1.0.Amount#0 <- block@4, nested_tuple_copy.1.0.Amount#0 <- block@8) (nested_tuple_copy.1.0.Amount#1) with nested_tuple_copy.1.0.Amount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Amount#1: uint64 = φ(nested_tuple_copy.1.0.Amount#0 <- block@4, nested_tuple_copy.1.0.Amount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Amount#1: uint64 = φ(nested_tuple_copy.1.0.Amount#0 <- block@4, nested_tuple_copy.1.0.Amount#0 <- block@8) (nested_tuple_copy.1.0.Amount#1) with nested_tuple_copy.1.0.Amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.CloseRemainderTo' in block@9
debug: Added nested_tuple_copy.1.0.CloseRemainderTo#0 to Phi node: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.CloseRemainderTo#0 to Phi node: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@8) (nested_tuple_copy.1.0.CloseRemainderTo#1) with nested_tuple_copy.1.0.CloseRemainderTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.0.CloseRemainderTo#0 <- block@8) (nested_tuple_copy.1.0.CloseRemainderTo#1) with nested_tuple_copy.1.0.CloseRemainderTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.0.VotePK' in block@9
debug: Added nested_tuple_copy.1.0.VotePK#0 to Phi node: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.0.VotePK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.VotePK#0 to Phi node: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.0.VotePK#0 <- block@4, nested_tuple_copy.1.0.VotePK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.0.VotePK#0 <- block@4, nested_tuple_copy.1.0.VotePK#0 <- block@8) (nested_tuple_copy.1.0.VotePK#1) with nested_tuple_copy.1.0.VotePK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.0.VotePK#0 <- block@4, nested_tuple_copy.1.0.VotePK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.0.VotePK#0 <- block@4, nested_tuple_copy.1.0.VotePK#0 <- block@8) (nested_tuple_copy.1.0.VotePK#1) with nested_tuple_copy.1.0.VotePK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.0.SelectionPK' in block@9
debug: Added nested_tuple_copy.1.0.SelectionPK#0 to Phi node: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.0.SelectionPK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.SelectionPK#0 to Phi node: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.0.SelectionPK#0 <- block@4, nested_tuple_copy.1.0.SelectionPK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.0.SelectionPK#0 <- block@4, nested_tuple_copy.1.0.SelectionPK#0 <- block@8) (nested_tuple_copy.1.0.SelectionPK#1) with nested_tuple_copy.1.0.SelectionPK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.0.SelectionPK#0 <- block@4, nested_tuple_copy.1.0.SelectionPK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.0.SelectionPK#0 <- block@4, nested_tuple_copy.1.0.SelectionPK#0 <- block@8) (nested_tuple_copy.1.0.SelectionPK#1) with nested_tuple_copy.1.0.SelectionPK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.VoteFirst' in block@9
debug: Added nested_tuple_copy.1.0.VoteFirst#0 to Phi node: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.0.VoteFirst#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.VoteFirst#0 to Phi node: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.0.VoteFirst#0 <- block@4, nested_tuple_copy.1.0.VoteFirst#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.0.VoteFirst#0 <- block@4, nested_tuple_copy.1.0.VoteFirst#0 <- block@8) (nested_tuple_copy.1.0.VoteFirst#1) with nested_tuple_copy.1.0.VoteFirst#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.0.VoteFirst#0 <- block@4, nested_tuple_copy.1.0.VoteFirst#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.0.VoteFirst#0 <- block@4, nested_tuple_copy.1.0.VoteFirst#0 <- block@8) (nested_tuple_copy.1.0.VoteFirst#1) with nested_tuple_copy.1.0.VoteFirst#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.VoteLast#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.VoteLast' in block@9
debug: Added nested_tuple_copy.1.0.VoteLast#0 to Phi node: let nested_tuple_copy.1.0.VoteLast#1: uint64 = φ(nested_tuple_copy.1.0.VoteLast#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.VoteLast#0 to Phi node: let nested_tuple_copy.1.0.VoteLast#1: uint64 = φ(nested_tuple_copy.1.0.VoteLast#0 <- block@4, nested_tuple_copy.1.0.VoteLast#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.VoteLast#1: uint64 = φ(nested_tuple_copy.1.0.VoteLast#0 <- block@4, nested_tuple_copy.1.0.VoteLast#0 <- block@8) (nested_tuple_copy.1.0.VoteLast#1) with nested_tuple_copy.1.0.VoteLast#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.VoteLast#1: uint64 = φ(nested_tuple_copy.1.0.VoteLast#0 <- block@4, nested_tuple_copy.1.0.VoteLast#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.VoteLast#1: uint64 = φ(nested_tuple_copy.1.0.VoteLast#0 <- block@4, nested_tuple_copy.1.0.VoteLast#0 <- block@8) (nested_tuple_copy.1.0.VoteLast#1) with nested_tuple_copy.1.0.VoteLast#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.VoteKeyDilution' in block@9
debug: Added nested_tuple_copy.1.0.VoteKeyDilution#0 to Phi node: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.VoteKeyDilution#0 to Phi node: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@8) (nested_tuple_copy.1.0.VoteKeyDilution#1) with nested_tuple_copy.1.0.VoteKeyDilution#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.0.VoteKeyDilution#0 <- block@8) (nested_tuple_copy.1.0.VoteKeyDilution#1) with nested_tuple_copy.1.0.VoteKeyDilution#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Type#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.Type' in block@9
debug: Added nested_tuple_copy.1.0.Type#0 to Phi node: let nested_tuple_copy.1.0.Type#1: bytes = φ(nested_tuple_copy.1.0.Type#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Type#0 to Phi node: let nested_tuple_copy.1.0.Type#1: bytes = φ(nested_tuple_copy.1.0.Type#0 <- block@4, nested_tuple_copy.1.0.Type#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Type#1: bytes = φ(nested_tuple_copy.1.0.Type#0 <- block@4, nested_tuple_copy.1.0.Type#0 <- block@8) (nested_tuple_copy.1.0.Type#1) with nested_tuple_copy.1.0.Type#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Type#1: bytes = φ(nested_tuple_copy.1.0.Type#0 <- block@4, nested_tuple_copy.1.0.Type#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Type#1: bytes = φ(nested_tuple_copy.1.0.Type#0 <- block@4, nested_tuple_copy.1.0.Type#0 <- block@8) (nested_tuple_copy.1.0.Type#1) with nested_tuple_copy.1.0.Type#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.TypeEnum' in block@9
debug: Added nested_tuple_copy.1.0.TypeEnum#0 to Phi node: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.0.TypeEnum#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.TypeEnum#0 to Phi node: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.0.TypeEnum#0 <- block@4, nested_tuple_copy.1.0.TypeEnum#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.0.TypeEnum#0 <- block@4, nested_tuple_copy.1.0.TypeEnum#0 <- block@8) (nested_tuple_copy.1.0.TypeEnum#1) with nested_tuple_copy.1.0.TypeEnum#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.0.TypeEnum#0 <- block@4, nested_tuple_copy.1.0.TypeEnum#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.0.TypeEnum#0 <- block@4, nested_tuple_copy.1.0.TypeEnum#0 <- block@8) (nested_tuple_copy.1.0.TypeEnum#1) with nested_tuple_copy.1.0.TypeEnum#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.XferAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.XferAsset' in block@9
debug: Added nested_tuple_copy.1.0.XferAsset#0 to Phi node: let nested_tuple_copy.1.0.XferAsset#1: uint64 = φ(nested_tuple_copy.1.0.XferAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.XferAsset#0 to Phi node: let nested_tuple_copy.1.0.XferAsset#1: uint64 = φ(nested_tuple_copy.1.0.XferAsset#0 <- block@4, nested_tuple_copy.1.0.XferAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.XferAsset#1: uint64 = φ(nested_tuple_copy.1.0.XferAsset#0 <- block@4, nested_tuple_copy.1.0.XferAsset#0 <- block@8) (nested_tuple_copy.1.0.XferAsset#1) with nested_tuple_copy.1.0.XferAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.XferAsset#1: uint64 = φ(nested_tuple_copy.1.0.XferAsset#0 <- block@4, nested_tuple_copy.1.0.XferAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.XferAsset#1: uint64 = φ(nested_tuple_copy.1.0.XferAsset#0 <- block@4, nested_tuple_copy.1.0.XferAsset#0 <- block@8) (nested_tuple_copy.1.0.XferAsset#1) with nested_tuple_copy.1.0.XferAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.AssetAmount' in block@9
debug: Added nested_tuple_copy.1.0.AssetAmount#0 to Phi node: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.0.AssetAmount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.AssetAmount#0 to Phi node: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.0.AssetAmount#0 <- block@4, nested_tuple_copy.1.0.AssetAmount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.0.AssetAmount#0 <- block@4, nested_tuple_copy.1.0.AssetAmount#0 <- block@8) (nested_tuple_copy.1.0.AssetAmount#1) with nested_tuple_copy.1.0.AssetAmount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.0.AssetAmount#0 <- block@4, nested_tuple_copy.1.0.AssetAmount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.0.AssetAmount#0 <- block@4, nested_tuple_copy.1.0.AssetAmount#0 <- block@8) (nested_tuple_copy.1.0.AssetAmount#1) with nested_tuple_copy.1.0.AssetAmount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.AssetSender#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.AssetSender' in block@9
debug: Added nested_tuple_copy.1.0.AssetSender#0 to Phi node: let nested_tuple_copy.1.0.AssetSender#1: account = φ(nested_tuple_copy.1.0.AssetSender#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.AssetSender#0 to Phi node: let nested_tuple_copy.1.0.AssetSender#1: account = φ(nested_tuple_copy.1.0.AssetSender#0 <- block@4, nested_tuple_copy.1.0.AssetSender#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.AssetSender#1: account = φ(nested_tuple_copy.1.0.AssetSender#0 <- block@4, nested_tuple_copy.1.0.AssetSender#0 <- block@8) (nested_tuple_copy.1.0.AssetSender#1) with nested_tuple_copy.1.0.AssetSender#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.AssetSender#1: account = φ(nested_tuple_copy.1.0.AssetSender#0 <- block@4, nested_tuple_copy.1.0.AssetSender#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.AssetSender#1: account = φ(nested_tuple_copy.1.0.AssetSender#0 <- block@4, nested_tuple_copy.1.0.AssetSender#0 <- block@8) (nested_tuple_copy.1.0.AssetSender#1) with nested_tuple_copy.1.0.AssetSender#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.AssetReceiver#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.AssetReceiver' in block@9
debug: Added nested_tuple_copy.1.0.AssetReceiver#0 to Phi node: let nested_tuple_copy.1.0.AssetReceiver#1: account = φ(nested_tuple_copy.1.0.AssetReceiver#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.AssetReceiver#0 to Phi node: let nested_tuple_copy.1.0.AssetReceiver#1: account = φ(nested_tuple_copy.1.0.AssetReceiver#0 <- block@4, nested_tuple_copy.1.0.AssetReceiver#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.AssetReceiver#1: account = φ(nested_tuple_copy.1.0.AssetReceiver#0 <- block@4, nested_tuple_copy.1.0.AssetReceiver#0 <- block@8) (nested_tuple_copy.1.0.AssetReceiver#1) with nested_tuple_copy.1.0.AssetReceiver#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.AssetReceiver#1: account = φ(nested_tuple_copy.1.0.AssetReceiver#0 <- block@4, nested_tuple_copy.1.0.AssetReceiver#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.AssetReceiver#1: account = φ(nested_tuple_copy.1.0.AssetReceiver#0 <- block@4, nested_tuple_copy.1.0.AssetReceiver#0 <- block@8) (nested_tuple_copy.1.0.AssetReceiver#1) with nested_tuple_copy.1.0.AssetReceiver#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.AssetCloseTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.AssetCloseTo' in block@9
debug: Added nested_tuple_copy.1.0.AssetCloseTo#0 to Phi node: let nested_tuple_copy.1.0.AssetCloseTo#1: account = φ(nested_tuple_copy.1.0.AssetCloseTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.AssetCloseTo#0 to Phi node: let nested_tuple_copy.1.0.AssetCloseTo#1: account = φ(nested_tuple_copy.1.0.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.0.AssetCloseTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.AssetCloseTo#1: account = φ(nested_tuple_copy.1.0.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.0.AssetCloseTo#0 <- block@8) (nested_tuple_copy.1.0.AssetCloseTo#1) with nested_tuple_copy.1.0.AssetCloseTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.AssetCloseTo#1: account = φ(nested_tuple_copy.1.0.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.0.AssetCloseTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.AssetCloseTo#1: account = φ(nested_tuple_copy.1.0.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.0.AssetCloseTo#0 <- block@8) (nested_tuple_copy.1.0.AssetCloseTo#1) with nested_tuple_copy.1.0.AssetCloseTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.GroupIndex' in block@9
debug: Added nested_tuple_copy.1.0.GroupIndex#0 to Phi node: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.0.GroupIndex#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.GroupIndex#0 to Phi node: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.0.GroupIndex#0 <- block@4, nested_tuple_copy.1.0.GroupIndex#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.0.GroupIndex#0 <- block@4, nested_tuple_copy.1.0.GroupIndex#0 <- block@8) (nested_tuple_copy.1.0.GroupIndex#1) with nested_tuple_copy.1.0.GroupIndex#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.0.GroupIndex#0 <- block@4, nested_tuple_copy.1.0.GroupIndex#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.0.GroupIndex#0 <- block@4, nested_tuple_copy.1.0.GroupIndex#0 <- block@8) (nested_tuple_copy.1.0.GroupIndex#1) with nested_tuple_copy.1.0.GroupIndex#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.TxID#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.0.TxID' in block@9
debug: Added nested_tuple_copy.1.0.TxID#0 to Phi node: let nested_tuple_copy.1.0.TxID#1: bytes[32] = φ(nested_tuple_copy.1.0.TxID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.TxID#0 to Phi node: let nested_tuple_copy.1.0.TxID#1: bytes[32] = φ(nested_tuple_copy.1.0.TxID#0 <- block@4, nested_tuple_copy.1.0.TxID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.TxID#1: bytes[32] = φ(nested_tuple_copy.1.0.TxID#0 <- block@4, nested_tuple_copy.1.0.TxID#0 <- block@8) (nested_tuple_copy.1.0.TxID#1) with nested_tuple_copy.1.0.TxID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.TxID#1: bytes[32] = φ(nested_tuple_copy.1.0.TxID#0 <- block@4, nested_tuple_copy.1.0.TxID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.TxID#1: bytes[32] = φ(nested_tuple_copy.1.0.TxID#0 <- block@4, nested_tuple_copy.1.0.TxID#0 <- block@8) (nested_tuple_copy.1.0.TxID#1) with nested_tuple_copy.1.0.TxID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.ApplicationID' in block@9
debug: Added nested_tuple_copy.1.0.ApplicationID#0 to Phi node: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.ApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ApplicationID#0 to Phi node: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.ApplicationID#0 <- block@4, nested_tuple_copy.1.0.ApplicationID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.ApplicationID#0 <- block@4, nested_tuple_copy.1.0.ApplicationID#0 <- block@8) (nested_tuple_copy.1.0.ApplicationID#1) with nested_tuple_copy.1.0.ApplicationID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.ApplicationID#0 <- block@4, nested_tuple_copy.1.0.ApplicationID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.ApplicationID#0 <- block@4, nested_tuple_copy.1.0.ApplicationID#0 <- block@8) (nested_tuple_copy.1.0.ApplicationID#1) with nested_tuple_copy.1.0.ApplicationID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.OnCompletion' in block@9
debug: Added nested_tuple_copy.1.0.OnCompletion#0 to Phi node: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.0.OnCompletion#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.OnCompletion#0 to Phi node: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.0.OnCompletion#0 <- block@4, nested_tuple_copy.1.0.OnCompletion#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.0.OnCompletion#0 <- block@4, nested_tuple_copy.1.0.OnCompletion#0 <- block@8) (nested_tuple_copy.1.0.OnCompletion#1) with nested_tuple_copy.1.0.OnCompletion#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.0.OnCompletion#0 <- block@4, nested_tuple_copy.1.0.OnCompletion#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.0.OnCompletion#0 <- block@4, nested_tuple_copy.1.0.OnCompletion#0 <- block@8) (nested_tuple_copy.1.0.OnCompletion#1) with nested_tuple_copy.1.0.OnCompletion#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumAppArgs' in block@9
debug: Added nested_tuple_copy.1.0.NumAppArgs#0 to Phi node: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.0.NumAppArgs#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumAppArgs#0 to Phi node: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.0.NumAppArgs#0 <- block@4, nested_tuple_copy.1.0.NumAppArgs#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.0.NumAppArgs#0 <- block@4, nested_tuple_copy.1.0.NumAppArgs#0 <- block@8) (nested_tuple_copy.1.0.NumAppArgs#1) with nested_tuple_copy.1.0.NumAppArgs#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.0.NumAppArgs#0 <- block@4, nested_tuple_copy.1.0.NumAppArgs#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.0.NumAppArgs#0 <- block@4, nested_tuple_copy.1.0.NumAppArgs#0 <- block@8) (nested_tuple_copy.1.0.NumAppArgs#1) with nested_tuple_copy.1.0.NumAppArgs#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumAccounts' in block@9
debug: Added nested_tuple_copy.1.0.NumAccounts#0 to Phi node: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.0.NumAccounts#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumAccounts#0 to Phi node: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.0.NumAccounts#0 <- block@4, nested_tuple_copy.1.0.NumAccounts#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.0.NumAccounts#0 <- block@4, nested_tuple_copy.1.0.NumAccounts#0 <- block@8) (nested_tuple_copy.1.0.NumAccounts#1) with nested_tuple_copy.1.0.NumAccounts#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.0.NumAccounts#0 <- block@4, nested_tuple_copy.1.0.NumAccounts#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.0.NumAccounts#0 <- block@4, nested_tuple_copy.1.0.NumAccounts#0 <- block@8) (nested_tuple_copy.1.0.NumAccounts#1) with nested_tuple_copy.1.0.NumAccounts#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.ApprovalProgram' in block@9
debug: Added nested_tuple_copy.1.0.ApprovalProgram#0 to Phi node: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.0.ApprovalProgram#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ApprovalProgram#0 to Phi node: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.0.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.0.ApprovalProgram#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.0.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.0.ApprovalProgram#0 <- block@8) (nested_tuple_copy.1.0.ApprovalProgram#1) with nested_tuple_copy.1.0.ApprovalProgram#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.0.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.0.ApprovalProgram#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.0.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.0.ApprovalProgram#0 <- block@8) (nested_tuple_copy.1.0.ApprovalProgram#1) with nested_tuple_copy.1.0.ApprovalProgram#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.ClearStateProgram' in block@9
debug: Added nested_tuple_copy.1.0.ClearStateProgram#0 to Phi node: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.0.ClearStateProgram#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ClearStateProgram#0 to Phi node: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.0.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.0.ClearStateProgram#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.0.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.0.ClearStateProgram#0 <- block@8) (nested_tuple_copy.1.0.ClearStateProgram#1) with nested_tuple_copy.1.0.ClearStateProgram#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.0.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.0.ClearStateProgram#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.0.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.0.ClearStateProgram#0 <- block@8) (nested_tuple_copy.1.0.ClearStateProgram#1) with nested_tuple_copy.1.0.ClearStateProgram#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.RekeyTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.RekeyTo' in block@9
debug: Added nested_tuple_copy.1.0.RekeyTo#0 to Phi node: let nested_tuple_copy.1.0.RekeyTo#1: account = φ(nested_tuple_copy.1.0.RekeyTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.RekeyTo#0 to Phi node: let nested_tuple_copy.1.0.RekeyTo#1: account = φ(nested_tuple_copy.1.0.RekeyTo#0 <- block@4, nested_tuple_copy.1.0.RekeyTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.RekeyTo#1: account = φ(nested_tuple_copy.1.0.RekeyTo#0 <- block@4, nested_tuple_copy.1.0.RekeyTo#0 <- block@8) (nested_tuple_copy.1.0.RekeyTo#1) with nested_tuple_copy.1.0.RekeyTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.RekeyTo#1: account = φ(nested_tuple_copy.1.0.RekeyTo#0 <- block@4, nested_tuple_copy.1.0.RekeyTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.RekeyTo#1: account = φ(nested_tuple_copy.1.0.RekeyTo#0 <- block@4, nested_tuple_copy.1.0.RekeyTo#0 <- block@8) (nested_tuple_copy.1.0.RekeyTo#1) with nested_tuple_copy.1.0.RekeyTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAsset' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAsset#0 to Phi node: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAsset#0 to Phi node: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAsset#0 <- block@4, nested_tuple_copy.1.0.ConfigAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAsset#0 <- block@4, nested_tuple_copy.1.0.ConfigAsset#0 <- block@8) (nested_tuple_copy.1.0.ConfigAsset#1) with nested_tuple_copy.1.0.ConfigAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAsset#0 <- block@4, nested_tuple_copy.1.0.ConfigAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAsset#0 <- block@4, nested_tuple_copy.1.0.ConfigAsset#0 <- block@8) (nested_tuple_copy.1.0.ConfigAsset#1) with nested_tuple_copy.1.0.ConfigAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetTotal' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetTotal#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetTotal#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetTotal#1) with nested_tuple_copy.1.0.ConfigAssetTotal#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetTotal#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetTotal#1) with nested_tuple_copy.1.0.ConfigAssetTotal#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetDecimals' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetDecimals#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetDecimals#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetDecimals#1) with nested_tuple_copy.1.0.ConfigAssetDecimals#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDecimals#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetDecimals#1) with nested_tuple_copy.1.0.ConfigAssetDecimals#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetDefaultFrozen' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1) with nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#1) with nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetUnitName' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetUnitName#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetUnitName#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetUnitName#1) with nested_tuple_copy.1.0.ConfigAssetUnitName#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetUnitName#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetUnitName#1) with nested_tuple_copy.1.0.ConfigAssetUnitName#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetName' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetName#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetName#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetName#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetName#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetName#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetName#1) with nested_tuple_copy.1.0.ConfigAssetName#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetName#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetName#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetName#1) with nested_tuple_copy.1.0.ConfigAssetName#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetURL' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetURL#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetURL#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetURL#1) with nested_tuple_copy.1.0.ConfigAssetURL#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetURL#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetURL#1) with nested_tuple_copy.1.0.ConfigAssetURL#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetMetadataHash' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetMetadataHash#1) with nested_tuple_copy.1.0.ConfigAssetMetadataHash#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetMetadataHash#1) with nested_tuple_copy.1.0.ConfigAssetMetadataHash#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetManager' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetManager#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetManager#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetManager#1) with nested_tuple_copy.1.0.ConfigAssetManager#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetManager#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetManager#1) with nested_tuple_copy.1.0.ConfigAssetManager#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetReserve' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetReserve#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetReserve#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetReserve#1) with nested_tuple_copy.1.0.ConfigAssetReserve#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetReserve#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetReserve#1) with nested_tuple_copy.1.0.ConfigAssetReserve#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetFreeze' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetFreeze#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetFreeze#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetFreeze#1) with nested_tuple_copy.1.0.ConfigAssetFreeze#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetFreeze#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetFreeze#1) with nested_tuple_copy.1.0.ConfigAssetFreeze#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.ConfigAssetClawback' in block@9
debug: Added nested_tuple_copy.1.0.ConfigAssetClawback#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ConfigAssetClawback#0 to Phi node: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetClawback#1) with nested_tuple_copy.1.0.ConfigAssetClawback#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.0.ConfigAssetClawback#0 <- block@8) (nested_tuple_copy.1.0.ConfigAssetClawback#1) with nested_tuple_copy.1.0.ConfigAssetClawback#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.FreezeAsset' in block@9
debug: Added nested_tuple_copy.1.0.FreezeAsset#0 to Phi node: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.0.FreezeAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.FreezeAsset#0 to Phi node: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.0.FreezeAsset#0 <- block@4, nested_tuple_copy.1.0.FreezeAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.0.FreezeAsset#0 <- block@4, nested_tuple_copy.1.0.FreezeAsset#0 <- block@8) (nested_tuple_copy.1.0.FreezeAsset#1) with nested_tuple_copy.1.0.FreezeAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.0.FreezeAsset#0 <- block@4, nested_tuple_copy.1.0.FreezeAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.0.FreezeAsset#0 <- block@4, nested_tuple_copy.1.0.FreezeAsset#0 <- block@8) (nested_tuple_copy.1.0.FreezeAsset#1) with nested_tuple_copy.1.0.FreezeAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = undefined while trying to resolve 'nested_tuple_copy.1.0.FreezeAssetAccount' in block@9
debug: Added nested_tuple_copy.1.0.FreezeAssetAccount#0 to Phi node: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.FreezeAssetAccount#0 to Phi node: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@8) (nested_tuple_copy.1.0.FreezeAssetAccount#1) with nested_tuple_copy.1.0.FreezeAssetAccount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetAccount#0 <- block@8) (nested_tuple_copy.1.0.FreezeAssetAccount#1) with nested_tuple_copy.1.0.FreezeAssetAccount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.0.FreezeAssetFrozen' in block@9
debug: Added nested_tuple_copy.1.0.FreezeAssetFrozen#0 to Phi node: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.FreezeAssetFrozen#0 to Phi node: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@8) (nested_tuple_copy.1.0.FreezeAssetFrozen#1) with nested_tuple_copy.1.0.FreezeAssetFrozen#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.0.FreezeAssetFrozen#0 <- block@8) (nested_tuple_copy.1.0.FreezeAssetFrozen#1) with nested_tuple_copy.1.0.FreezeAssetFrozen#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumAssets#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumAssets' in block@9
debug: Added nested_tuple_copy.1.0.NumAssets#0 to Phi node: let nested_tuple_copy.1.0.NumAssets#1: uint64 = φ(nested_tuple_copy.1.0.NumAssets#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumAssets#0 to Phi node: let nested_tuple_copy.1.0.NumAssets#1: uint64 = φ(nested_tuple_copy.1.0.NumAssets#0 <- block@4, nested_tuple_copy.1.0.NumAssets#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumAssets#1: uint64 = φ(nested_tuple_copy.1.0.NumAssets#0 <- block@4, nested_tuple_copy.1.0.NumAssets#0 <- block@8) (nested_tuple_copy.1.0.NumAssets#1) with nested_tuple_copy.1.0.NumAssets#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumAssets#1: uint64 = φ(nested_tuple_copy.1.0.NumAssets#0 <- block@4, nested_tuple_copy.1.0.NumAssets#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumAssets#1: uint64 = φ(nested_tuple_copy.1.0.NumAssets#0 <- block@4, nested_tuple_copy.1.0.NumAssets#0 <- block@8) (nested_tuple_copy.1.0.NumAssets#1) with nested_tuple_copy.1.0.NumAssets#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumApplications#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumApplications' in block@9
debug: Added nested_tuple_copy.1.0.NumApplications#0 to Phi node: let nested_tuple_copy.1.0.NumApplications#1: uint64 = φ(nested_tuple_copy.1.0.NumApplications#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumApplications#0 to Phi node: let nested_tuple_copy.1.0.NumApplications#1: uint64 = φ(nested_tuple_copy.1.0.NumApplications#0 <- block@4, nested_tuple_copy.1.0.NumApplications#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumApplications#1: uint64 = φ(nested_tuple_copy.1.0.NumApplications#0 <- block@4, nested_tuple_copy.1.0.NumApplications#0 <- block@8) (nested_tuple_copy.1.0.NumApplications#1) with nested_tuple_copy.1.0.NumApplications#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumApplications#1: uint64 = φ(nested_tuple_copy.1.0.NumApplications#0 <- block@4, nested_tuple_copy.1.0.NumApplications#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumApplications#1: uint64 = φ(nested_tuple_copy.1.0.NumApplications#0 <- block@4, nested_tuple_copy.1.0.NumApplications#0 <- block@8) (nested_tuple_copy.1.0.NumApplications#1) with nested_tuple_copy.1.0.NumApplications#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.GlobalNumUint' in block@9
debug: Added nested_tuple_copy.1.0.GlobalNumUint#0 to Phi node: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.GlobalNumUint#0 to Phi node: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.0.GlobalNumUint#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.0.GlobalNumUint#0 <- block@8) (nested_tuple_copy.1.0.GlobalNumUint#1) with nested_tuple_copy.1.0.GlobalNumUint#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.0.GlobalNumUint#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.0.GlobalNumUint#0 <- block@8) (nested_tuple_copy.1.0.GlobalNumUint#1) with nested_tuple_copy.1.0.GlobalNumUint#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.GlobalNumByteSlice' in block@9
debug: Added nested_tuple_copy.1.0.GlobalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.GlobalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.0.GlobalNumByteSlice#1) with nested_tuple_copy.1.0.GlobalNumByteSlice#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.GlobalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.0.GlobalNumByteSlice#1) with nested_tuple_copy.1.0.GlobalNumByteSlice#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.LocalNumUint' in block@9
debug: Added nested_tuple_copy.1.0.LocalNumUint#0 to Phi node: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.LocalNumUint#0 to Phi node: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumUint#0 <- block@4, nested_tuple_copy.1.0.LocalNumUint#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumUint#0 <- block@4, nested_tuple_copy.1.0.LocalNumUint#0 <- block@8) (nested_tuple_copy.1.0.LocalNumUint#1) with nested_tuple_copy.1.0.LocalNumUint#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumUint#0 <- block@4, nested_tuple_copy.1.0.LocalNumUint#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumUint#0 <- block@4, nested_tuple_copy.1.0.LocalNumUint#0 <- block@8) (nested_tuple_copy.1.0.LocalNumUint#1) with nested_tuple_copy.1.0.LocalNumUint#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.LocalNumByteSlice' in block@9
debug: Added nested_tuple_copy.1.0.LocalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.LocalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.0.LocalNumByteSlice#1) with nested_tuple_copy.1.0.LocalNumByteSlice#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.0.LocalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.0.LocalNumByteSlice#1) with nested_tuple_copy.1.0.LocalNumByteSlice#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.ExtraProgramPages' in block@9
debug: Added nested_tuple_copy.1.0.ExtraProgramPages#0 to Phi node: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.ExtraProgramPages#0 to Phi node: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@8) (nested_tuple_copy.1.0.ExtraProgramPages#1) with nested_tuple_copy.1.0.ExtraProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.0.ExtraProgramPages#0 <- block@8) (nested_tuple_copy.1.0.ExtraProgramPages#1) with nested_tuple_copy.1.0.ExtraProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.Nonparticipation#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.0.Nonparticipation' in block@9
debug: Added nested_tuple_copy.1.0.Nonparticipation#0 to Phi node: let nested_tuple_copy.1.0.Nonparticipation#1: bool = φ(nested_tuple_copy.1.0.Nonparticipation#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.Nonparticipation#0 to Phi node: let nested_tuple_copy.1.0.Nonparticipation#1: bool = φ(nested_tuple_copy.1.0.Nonparticipation#0 <- block@4, nested_tuple_copy.1.0.Nonparticipation#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.Nonparticipation#1: bool = φ(nested_tuple_copy.1.0.Nonparticipation#0 <- block@4, nested_tuple_copy.1.0.Nonparticipation#0 <- block@8) (nested_tuple_copy.1.0.Nonparticipation#1) with nested_tuple_copy.1.0.Nonparticipation#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.Nonparticipation#1: bool = φ(nested_tuple_copy.1.0.Nonparticipation#0 <- block@4, nested_tuple_copy.1.0.Nonparticipation#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.Nonparticipation#1: bool = φ(nested_tuple_copy.1.0.Nonparticipation#0 <- block@4, nested_tuple_copy.1.0.Nonparticipation#0 <- block@8) (nested_tuple_copy.1.0.Nonparticipation#1) with nested_tuple_copy.1.0.Nonparticipation#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumLogs#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumLogs' in block@9
debug: Added nested_tuple_copy.1.0.NumLogs#0 to Phi node: let nested_tuple_copy.1.0.NumLogs#1: uint64 = φ(nested_tuple_copy.1.0.NumLogs#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumLogs#0 to Phi node: let nested_tuple_copy.1.0.NumLogs#1: uint64 = φ(nested_tuple_copy.1.0.NumLogs#0 <- block@4, nested_tuple_copy.1.0.NumLogs#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumLogs#1: uint64 = φ(nested_tuple_copy.1.0.NumLogs#0 <- block@4, nested_tuple_copy.1.0.NumLogs#0 <- block@8) (nested_tuple_copy.1.0.NumLogs#1) with nested_tuple_copy.1.0.NumLogs#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumLogs#1: uint64 = φ(nested_tuple_copy.1.0.NumLogs#0 <- block@4, nested_tuple_copy.1.0.NumLogs#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumLogs#1: uint64 = φ(nested_tuple_copy.1.0.NumLogs#0 <- block@4, nested_tuple_copy.1.0.NumLogs#0 <- block@8) (nested_tuple_copy.1.0.NumLogs#1) with nested_tuple_copy.1.0.NumLogs#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.CreatedAssetID' in block@9
debug: Added nested_tuple_copy.1.0.CreatedAssetID#0 to Phi node: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedAssetID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.CreatedAssetID#0 to Phi node: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.0.CreatedAssetID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.0.CreatedAssetID#0 <- block@8) (nested_tuple_copy.1.0.CreatedAssetID#1) with nested_tuple_copy.1.0.CreatedAssetID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.0.CreatedAssetID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.0.CreatedAssetID#0 <- block@8) (nested_tuple_copy.1.0.CreatedAssetID#1) with nested_tuple_copy.1.0.CreatedAssetID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.CreatedApplicationID' in block@9
debug: Added nested_tuple_copy.1.0.CreatedApplicationID#0 to Phi node: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.CreatedApplicationID#0 to Phi node: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@8) (nested_tuple_copy.1.0.CreatedApplicationID#1) with nested_tuple_copy.1.0.CreatedApplicationID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.0.CreatedApplicationID#0 <- block@8) (nested_tuple_copy.1.0.CreatedApplicationID#1) with nested_tuple_copy.1.0.CreatedApplicationID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.LastLog#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.LastLog' in block@9
debug: Added nested_tuple_copy.1.0.LastLog#0 to Phi node: let nested_tuple_copy.1.0.LastLog#1: bytes = φ(nested_tuple_copy.1.0.LastLog#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.LastLog#0 to Phi node: let nested_tuple_copy.1.0.LastLog#1: bytes = φ(nested_tuple_copy.1.0.LastLog#0 <- block@4, nested_tuple_copy.1.0.LastLog#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.LastLog#1: bytes = φ(nested_tuple_copy.1.0.LastLog#0 <- block@4, nested_tuple_copy.1.0.LastLog#0 <- block@8) (nested_tuple_copy.1.0.LastLog#1) with nested_tuple_copy.1.0.LastLog#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.LastLog#1: bytes = φ(nested_tuple_copy.1.0.LastLog#0 <- block@4, nested_tuple_copy.1.0.LastLog#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.LastLog#1: bytes = φ(nested_tuple_copy.1.0.LastLog#0 <- block@4, nested_tuple_copy.1.0.LastLog#0 <- block@8) (nested_tuple_copy.1.0.LastLog#1) with nested_tuple_copy.1.0.LastLog#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.StateProofPK#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.0.StateProofPK' in block@9
debug: Added nested_tuple_copy.1.0.StateProofPK#0 to Phi node: let nested_tuple_copy.1.0.StateProofPK#1: bytes = φ(nested_tuple_copy.1.0.StateProofPK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.StateProofPK#0 to Phi node: let nested_tuple_copy.1.0.StateProofPK#1: bytes = φ(nested_tuple_copy.1.0.StateProofPK#0 <- block@4, nested_tuple_copy.1.0.StateProofPK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.StateProofPK#1: bytes = φ(nested_tuple_copy.1.0.StateProofPK#0 <- block@4, nested_tuple_copy.1.0.StateProofPK#0 <- block@8) (nested_tuple_copy.1.0.StateProofPK#1) with nested_tuple_copy.1.0.StateProofPK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.StateProofPK#1: bytes = φ(nested_tuple_copy.1.0.StateProofPK#0 <- block@4, nested_tuple_copy.1.0.StateProofPK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.StateProofPK#1: bytes = φ(nested_tuple_copy.1.0.StateProofPK#0 <- block@4, nested_tuple_copy.1.0.StateProofPK#0 <- block@8) (nested_tuple_copy.1.0.StateProofPK#1) with nested_tuple_copy.1.0.StateProofPK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumApprovalProgramPages' in block@9
debug: Added nested_tuple_copy.1.0.NumApprovalProgramPages#0 to Phi node: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumApprovalProgramPages#0 to Phi node: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@8) (nested_tuple_copy.1.0.NumApprovalProgramPages#1) with nested_tuple_copy.1.0.NumApprovalProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumApprovalProgramPages#0 <- block@8) (nested_tuple_copy.1.0.NumApprovalProgramPages#1) with nested_tuple_copy.1.0.NumApprovalProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.0.NumClearStateProgramPages' in block@9
debug: Added nested_tuple_copy.1.0.NumClearStateProgramPages#0 to Phi node: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.0.NumClearStateProgramPages#0 to Phi node: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@8) (nested_tuple_copy.1.0.NumClearStateProgramPages#1) with nested_tuple_copy.1.0.NumClearStateProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.0.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.0.NumClearStateProgramPages#0 <- block@8) (nested_tuple_copy.1.0.NumClearStateProgramPages#1) with nested_tuple_copy.1.0.NumClearStateProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Sender#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.Sender' in block@9
debug: Added nested_tuple_copy.1.1.Sender#0 to Phi node: let nested_tuple_copy.1.1.Sender#1: account = φ(nested_tuple_copy.1.1.Sender#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Sender#0 to Phi node: let nested_tuple_copy.1.1.Sender#1: account = φ(nested_tuple_copy.1.1.Sender#0 <- block@4, nested_tuple_copy.1.1.Sender#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Sender#1: account = φ(nested_tuple_copy.1.1.Sender#0 <- block@4, nested_tuple_copy.1.1.Sender#0 <- block@8) (nested_tuple_copy.1.1.Sender#1) with nested_tuple_copy.1.1.Sender#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Sender#1: account = φ(nested_tuple_copy.1.1.Sender#0 <- block@4, nested_tuple_copy.1.1.Sender#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Sender#1: account = φ(nested_tuple_copy.1.1.Sender#0 <- block@4, nested_tuple_copy.1.1.Sender#0 <- block@8) (nested_tuple_copy.1.1.Sender#1) with nested_tuple_copy.1.1.Sender#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Fee#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.Fee' in block@9
debug: Added nested_tuple_copy.1.1.Fee#0 to Phi node: let nested_tuple_copy.1.1.Fee#1: uint64 = φ(nested_tuple_copy.1.1.Fee#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Fee#0 to Phi node: let nested_tuple_copy.1.1.Fee#1: uint64 = φ(nested_tuple_copy.1.1.Fee#0 <- block@4, nested_tuple_copy.1.1.Fee#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Fee#1: uint64 = φ(nested_tuple_copy.1.1.Fee#0 <- block@4, nested_tuple_copy.1.1.Fee#0 <- block@8) (nested_tuple_copy.1.1.Fee#1) with nested_tuple_copy.1.1.Fee#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Fee#1: uint64 = φ(nested_tuple_copy.1.1.Fee#0 <- block@4, nested_tuple_copy.1.1.Fee#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Fee#1: uint64 = φ(nested_tuple_copy.1.1.Fee#0 <- block@4, nested_tuple_copy.1.1.Fee#0 <- block@8) (nested_tuple_copy.1.1.Fee#1) with nested_tuple_copy.1.1.Fee#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.FirstValid#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.FirstValid' in block@9
debug: Added nested_tuple_copy.1.1.FirstValid#0 to Phi node: let nested_tuple_copy.1.1.FirstValid#1: uint64 = φ(nested_tuple_copy.1.1.FirstValid#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.FirstValid#0 to Phi node: let nested_tuple_copy.1.1.FirstValid#1: uint64 = φ(nested_tuple_copy.1.1.FirstValid#0 <- block@4, nested_tuple_copy.1.1.FirstValid#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.FirstValid#1: uint64 = φ(nested_tuple_copy.1.1.FirstValid#0 <- block@4, nested_tuple_copy.1.1.FirstValid#0 <- block@8) (nested_tuple_copy.1.1.FirstValid#1) with nested_tuple_copy.1.1.FirstValid#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.FirstValid#1: uint64 = φ(nested_tuple_copy.1.1.FirstValid#0 <- block@4, nested_tuple_copy.1.1.FirstValid#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.FirstValid#1: uint64 = φ(nested_tuple_copy.1.1.FirstValid#0 <- block@4, nested_tuple_copy.1.1.FirstValid#0 <- block@8) (nested_tuple_copy.1.1.FirstValid#1) with nested_tuple_copy.1.1.FirstValid#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.FirstValidTime' in block@9
debug: Added nested_tuple_copy.1.1.FirstValidTime#0 to Phi node: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.1.FirstValidTime#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.FirstValidTime#0 to Phi node: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.1.FirstValidTime#0 <- block@4, nested_tuple_copy.1.1.FirstValidTime#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.1.FirstValidTime#0 <- block@4, nested_tuple_copy.1.1.FirstValidTime#0 <- block@8) (nested_tuple_copy.1.1.FirstValidTime#1) with nested_tuple_copy.1.1.FirstValidTime#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.1.FirstValidTime#0 <- block@4, nested_tuple_copy.1.1.FirstValidTime#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.FirstValidTime#1: uint64 = φ(nested_tuple_copy.1.1.FirstValidTime#0 <- block@4, nested_tuple_copy.1.1.FirstValidTime#0 <- block@8) (nested_tuple_copy.1.1.FirstValidTime#1) with nested_tuple_copy.1.1.FirstValidTime#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.LastValid#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.LastValid' in block@9
debug: Added nested_tuple_copy.1.1.LastValid#0 to Phi node: let nested_tuple_copy.1.1.LastValid#1: uint64 = φ(nested_tuple_copy.1.1.LastValid#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.LastValid#0 to Phi node: let nested_tuple_copy.1.1.LastValid#1: uint64 = φ(nested_tuple_copy.1.1.LastValid#0 <- block@4, nested_tuple_copy.1.1.LastValid#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.LastValid#1: uint64 = φ(nested_tuple_copy.1.1.LastValid#0 <- block@4, nested_tuple_copy.1.1.LastValid#0 <- block@8) (nested_tuple_copy.1.1.LastValid#1) with nested_tuple_copy.1.1.LastValid#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.LastValid#1: uint64 = φ(nested_tuple_copy.1.1.LastValid#0 <- block@4, nested_tuple_copy.1.1.LastValid#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.LastValid#1: uint64 = φ(nested_tuple_copy.1.1.LastValid#0 <- block@4, nested_tuple_copy.1.1.LastValid#0 <- block@8) (nested_tuple_copy.1.1.LastValid#1) with nested_tuple_copy.1.1.LastValid#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Note#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.Note' in block@9
debug: Added nested_tuple_copy.1.1.Note#0 to Phi node: let nested_tuple_copy.1.1.Note#1: bytes = φ(nested_tuple_copy.1.1.Note#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Note#0 to Phi node: let nested_tuple_copy.1.1.Note#1: bytes = φ(nested_tuple_copy.1.1.Note#0 <- block@4, nested_tuple_copy.1.1.Note#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Note#1: bytes = φ(nested_tuple_copy.1.1.Note#0 <- block@4, nested_tuple_copy.1.1.Note#0 <- block@8) (nested_tuple_copy.1.1.Note#1) with nested_tuple_copy.1.1.Note#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Note#1: bytes = φ(nested_tuple_copy.1.1.Note#0 <- block@4, nested_tuple_copy.1.1.Note#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Note#1: bytes = φ(nested_tuple_copy.1.1.Note#0 <- block@4, nested_tuple_copy.1.1.Note#0 <- block@8) (nested_tuple_copy.1.1.Note#1) with nested_tuple_copy.1.1.Note#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Lease#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.1.Lease' in block@9
debug: Added nested_tuple_copy.1.1.Lease#0 to Phi node: let nested_tuple_copy.1.1.Lease#1: bytes[32] = φ(nested_tuple_copy.1.1.Lease#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Lease#0 to Phi node: let nested_tuple_copy.1.1.Lease#1: bytes[32] = φ(nested_tuple_copy.1.1.Lease#0 <- block@4, nested_tuple_copy.1.1.Lease#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Lease#1: bytes[32] = φ(nested_tuple_copy.1.1.Lease#0 <- block@4, nested_tuple_copy.1.1.Lease#0 <- block@8) (nested_tuple_copy.1.1.Lease#1) with nested_tuple_copy.1.1.Lease#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Lease#1: bytes[32] = φ(nested_tuple_copy.1.1.Lease#0 <- block@4, nested_tuple_copy.1.1.Lease#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Lease#1: bytes[32] = φ(nested_tuple_copy.1.1.Lease#0 <- block@4, nested_tuple_copy.1.1.Lease#0 <- block@8) (nested_tuple_copy.1.1.Lease#1) with nested_tuple_copy.1.1.Lease#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Receiver#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.Receiver' in block@9
debug: Added nested_tuple_copy.1.1.Receiver#0 to Phi node: let nested_tuple_copy.1.1.Receiver#1: account = φ(nested_tuple_copy.1.1.Receiver#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Receiver#0 to Phi node: let nested_tuple_copy.1.1.Receiver#1: account = φ(nested_tuple_copy.1.1.Receiver#0 <- block@4, nested_tuple_copy.1.1.Receiver#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Receiver#1: account = φ(nested_tuple_copy.1.1.Receiver#0 <- block@4, nested_tuple_copy.1.1.Receiver#0 <- block@8) (nested_tuple_copy.1.1.Receiver#1) with nested_tuple_copy.1.1.Receiver#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Receiver#1: account = φ(nested_tuple_copy.1.1.Receiver#0 <- block@4, nested_tuple_copy.1.1.Receiver#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Receiver#1: account = φ(nested_tuple_copy.1.1.Receiver#0 <- block@4, nested_tuple_copy.1.1.Receiver#0 <- block@8) (nested_tuple_copy.1.1.Receiver#1) with nested_tuple_copy.1.1.Receiver#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Amount#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.Amount' in block@9
debug: Added nested_tuple_copy.1.1.Amount#0 to Phi node: let nested_tuple_copy.1.1.Amount#1: uint64 = φ(nested_tuple_copy.1.1.Amount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Amount#0 to Phi node: let nested_tuple_copy.1.1.Amount#1: uint64 = φ(nested_tuple_copy.1.1.Amount#0 <- block@4, nested_tuple_copy.1.1.Amount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Amount#1: uint64 = φ(nested_tuple_copy.1.1.Amount#0 <- block@4, nested_tuple_copy.1.1.Amount#0 <- block@8) (nested_tuple_copy.1.1.Amount#1) with nested_tuple_copy.1.1.Amount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Amount#1: uint64 = φ(nested_tuple_copy.1.1.Amount#0 <- block@4, nested_tuple_copy.1.1.Amount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Amount#1: uint64 = φ(nested_tuple_copy.1.1.Amount#0 <- block@4, nested_tuple_copy.1.1.Amount#0 <- block@8) (nested_tuple_copy.1.1.Amount#1) with nested_tuple_copy.1.1.Amount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.CloseRemainderTo' in block@9
debug: Added nested_tuple_copy.1.1.CloseRemainderTo#0 to Phi node: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.CloseRemainderTo#0 to Phi node: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@8) (nested_tuple_copy.1.1.CloseRemainderTo#1) with nested_tuple_copy.1.1.CloseRemainderTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.CloseRemainderTo#1: account = φ(nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@4, nested_tuple_copy.1.1.CloseRemainderTo#0 <- block@8) (nested_tuple_copy.1.1.CloseRemainderTo#1) with nested_tuple_copy.1.1.CloseRemainderTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.1.VotePK' in block@9
debug: Added nested_tuple_copy.1.1.VotePK#0 to Phi node: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.1.VotePK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.VotePK#0 to Phi node: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.1.VotePK#0 <- block@4, nested_tuple_copy.1.1.VotePK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.1.VotePK#0 <- block@4, nested_tuple_copy.1.1.VotePK#0 <- block@8) (nested_tuple_copy.1.1.VotePK#1) with nested_tuple_copy.1.1.VotePK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.1.VotePK#0 <- block@4, nested_tuple_copy.1.1.VotePK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.VotePK#1: bytes[32] = φ(nested_tuple_copy.1.1.VotePK#0 <- block@4, nested_tuple_copy.1.1.VotePK#0 <- block@8) (nested_tuple_copy.1.1.VotePK#1) with nested_tuple_copy.1.1.VotePK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.1.SelectionPK' in block@9
debug: Added nested_tuple_copy.1.1.SelectionPK#0 to Phi node: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.1.SelectionPK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.SelectionPK#0 to Phi node: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.1.SelectionPK#0 <- block@4, nested_tuple_copy.1.1.SelectionPK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.1.SelectionPK#0 <- block@4, nested_tuple_copy.1.1.SelectionPK#0 <- block@8) (nested_tuple_copy.1.1.SelectionPK#1) with nested_tuple_copy.1.1.SelectionPK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.1.SelectionPK#0 <- block@4, nested_tuple_copy.1.1.SelectionPK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.SelectionPK#1: bytes[32] = φ(nested_tuple_copy.1.1.SelectionPK#0 <- block@4, nested_tuple_copy.1.1.SelectionPK#0 <- block@8) (nested_tuple_copy.1.1.SelectionPK#1) with nested_tuple_copy.1.1.SelectionPK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.VoteFirst' in block@9
debug: Added nested_tuple_copy.1.1.VoteFirst#0 to Phi node: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.1.VoteFirst#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.VoteFirst#0 to Phi node: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.1.VoteFirst#0 <- block@4, nested_tuple_copy.1.1.VoteFirst#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.1.VoteFirst#0 <- block@4, nested_tuple_copy.1.1.VoteFirst#0 <- block@8) (nested_tuple_copy.1.1.VoteFirst#1) with nested_tuple_copy.1.1.VoteFirst#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.1.VoteFirst#0 <- block@4, nested_tuple_copy.1.1.VoteFirst#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.VoteFirst#1: uint64 = φ(nested_tuple_copy.1.1.VoteFirst#0 <- block@4, nested_tuple_copy.1.1.VoteFirst#0 <- block@8) (nested_tuple_copy.1.1.VoteFirst#1) with nested_tuple_copy.1.1.VoteFirst#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.VoteLast#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.VoteLast' in block@9
debug: Added nested_tuple_copy.1.1.VoteLast#0 to Phi node: let nested_tuple_copy.1.1.VoteLast#1: uint64 = φ(nested_tuple_copy.1.1.VoteLast#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.VoteLast#0 to Phi node: let nested_tuple_copy.1.1.VoteLast#1: uint64 = φ(nested_tuple_copy.1.1.VoteLast#0 <- block@4, nested_tuple_copy.1.1.VoteLast#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.VoteLast#1: uint64 = φ(nested_tuple_copy.1.1.VoteLast#0 <- block@4, nested_tuple_copy.1.1.VoteLast#0 <- block@8) (nested_tuple_copy.1.1.VoteLast#1) with nested_tuple_copy.1.1.VoteLast#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.VoteLast#1: uint64 = φ(nested_tuple_copy.1.1.VoteLast#0 <- block@4, nested_tuple_copy.1.1.VoteLast#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.VoteLast#1: uint64 = φ(nested_tuple_copy.1.1.VoteLast#0 <- block@4, nested_tuple_copy.1.1.VoteLast#0 <- block@8) (nested_tuple_copy.1.1.VoteLast#1) with nested_tuple_copy.1.1.VoteLast#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.VoteKeyDilution' in block@9
debug: Added nested_tuple_copy.1.1.VoteKeyDilution#0 to Phi node: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.VoteKeyDilution#0 to Phi node: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@8) (nested_tuple_copy.1.1.VoteKeyDilution#1) with nested_tuple_copy.1.1.VoteKeyDilution#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.VoteKeyDilution#1: uint64 = φ(nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@4, nested_tuple_copy.1.1.VoteKeyDilution#0 <- block@8) (nested_tuple_copy.1.1.VoteKeyDilution#1) with nested_tuple_copy.1.1.VoteKeyDilution#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Type#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.Type' in block@9
debug: Added nested_tuple_copy.1.1.Type#0 to Phi node: let nested_tuple_copy.1.1.Type#1: bytes = φ(nested_tuple_copy.1.1.Type#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Type#0 to Phi node: let nested_tuple_copy.1.1.Type#1: bytes = φ(nested_tuple_copy.1.1.Type#0 <- block@4, nested_tuple_copy.1.1.Type#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Type#1: bytes = φ(nested_tuple_copy.1.1.Type#0 <- block@4, nested_tuple_copy.1.1.Type#0 <- block@8) (nested_tuple_copy.1.1.Type#1) with nested_tuple_copy.1.1.Type#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Type#1: bytes = φ(nested_tuple_copy.1.1.Type#0 <- block@4, nested_tuple_copy.1.1.Type#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Type#1: bytes = φ(nested_tuple_copy.1.1.Type#0 <- block@4, nested_tuple_copy.1.1.Type#0 <- block@8) (nested_tuple_copy.1.1.Type#1) with nested_tuple_copy.1.1.Type#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.TypeEnum' in block@9
debug: Added nested_tuple_copy.1.1.TypeEnum#0 to Phi node: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.1.TypeEnum#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.TypeEnum#0 to Phi node: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.1.TypeEnum#0 <- block@4, nested_tuple_copy.1.1.TypeEnum#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.1.TypeEnum#0 <- block@4, nested_tuple_copy.1.1.TypeEnum#0 <- block@8) (nested_tuple_copy.1.1.TypeEnum#1) with nested_tuple_copy.1.1.TypeEnum#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.1.TypeEnum#0 <- block@4, nested_tuple_copy.1.1.TypeEnum#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.TypeEnum#1: uint64 = φ(nested_tuple_copy.1.1.TypeEnum#0 <- block@4, nested_tuple_copy.1.1.TypeEnum#0 <- block@8) (nested_tuple_copy.1.1.TypeEnum#1) with nested_tuple_copy.1.1.TypeEnum#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.XferAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.XferAsset' in block@9
debug: Added nested_tuple_copy.1.1.XferAsset#0 to Phi node: let nested_tuple_copy.1.1.XferAsset#1: uint64 = φ(nested_tuple_copy.1.1.XferAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.XferAsset#0 to Phi node: let nested_tuple_copy.1.1.XferAsset#1: uint64 = φ(nested_tuple_copy.1.1.XferAsset#0 <- block@4, nested_tuple_copy.1.1.XferAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.XferAsset#1: uint64 = φ(nested_tuple_copy.1.1.XferAsset#0 <- block@4, nested_tuple_copy.1.1.XferAsset#0 <- block@8) (nested_tuple_copy.1.1.XferAsset#1) with nested_tuple_copy.1.1.XferAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.XferAsset#1: uint64 = φ(nested_tuple_copy.1.1.XferAsset#0 <- block@4, nested_tuple_copy.1.1.XferAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.XferAsset#1: uint64 = φ(nested_tuple_copy.1.1.XferAsset#0 <- block@4, nested_tuple_copy.1.1.XferAsset#0 <- block@8) (nested_tuple_copy.1.1.XferAsset#1) with nested_tuple_copy.1.1.XferAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.AssetAmount' in block@9
debug: Added nested_tuple_copy.1.1.AssetAmount#0 to Phi node: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.1.AssetAmount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.AssetAmount#0 to Phi node: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.1.AssetAmount#0 <- block@4, nested_tuple_copy.1.1.AssetAmount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.1.AssetAmount#0 <- block@4, nested_tuple_copy.1.1.AssetAmount#0 <- block@8) (nested_tuple_copy.1.1.AssetAmount#1) with nested_tuple_copy.1.1.AssetAmount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.1.AssetAmount#0 <- block@4, nested_tuple_copy.1.1.AssetAmount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.AssetAmount#1: uint64 = φ(nested_tuple_copy.1.1.AssetAmount#0 <- block@4, nested_tuple_copy.1.1.AssetAmount#0 <- block@8) (nested_tuple_copy.1.1.AssetAmount#1) with nested_tuple_copy.1.1.AssetAmount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.AssetSender#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.AssetSender' in block@9
debug: Added nested_tuple_copy.1.1.AssetSender#0 to Phi node: let nested_tuple_copy.1.1.AssetSender#1: account = φ(nested_tuple_copy.1.1.AssetSender#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.AssetSender#0 to Phi node: let nested_tuple_copy.1.1.AssetSender#1: account = φ(nested_tuple_copy.1.1.AssetSender#0 <- block@4, nested_tuple_copy.1.1.AssetSender#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.AssetSender#1: account = φ(nested_tuple_copy.1.1.AssetSender#0 <- block@4, nested_tuple_copy.1.1.AssetSender#0 <- block@8) (nested_tuple_copy.1.1.AssetSender#1) with nested_tuple_copy.1.1.AssetSender#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.AssetSender#1: account = φ(nested_tuple_copy.1.1.AssetSender#0 <- block@4, nested_tuple_copy.1.1.AssetSender#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.AssetSender#1: account = φ(nested_tuple_copy.1.1.AssetSender#0 <- block@4, nested_tuple_copy.1.1.AssetSender#0 <- block@8) (nested_tuple_copy.1.1.AssetSender#1) with nested_tuple_copy.1.1.AssetSender#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.AssetReceiver#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.AssetReceiver' in block@9
debug: Added nested_tuple_copy.1.1.AssetReceiver#0 to Phi node: let nested_tuple_copy.1.1.AssetReceiver#1: account = φ(nested_tuple_copy.1.1.AssetReceiver#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.AssetReceiver#0 to Phi node: let nested_tuple_copy.1.1.AssetReceiver#1: account = φ(nested_tuple_copy.1.1.AssetReceiver#0 <- block@4, nested_tuple_copy.1.1.AssetReceiver#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.AssetReceiver#1: account = φ(nested_tuple_copy.1.1.AssetReceiver#0 <- block@4, nested_tuple_copy.1.1.AssetReceiver#0 <- block@8) (nested_tuple_copy.1.1.AssetReceiver#1) with nested_tuple_copy.1.1.AssetReceiver#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.AssetReceiver#1: account = φ(nested_tuple_copy.1.1.AssetReceiver#0 <- block@4, nested_tuple_copy.1.1.AssetReceiver#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.AssetReceiver#1: account = φ(nested_tuple_copy.1.1.AssetReceiver#0 <- block@4, nested_tuple_copy.1.1.AssetReceiver#0 <- block@8) (nested_tuple_copy.1.1.AssetReceiver#1) with nested_tuple_copy.1.1.AssetReceiver#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.AssetCloseTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.AssetCloseTo' in block@9
debug: Added nested_tuple_copy.1.1.AssetCloseTo#0 to Phi node: let nested_tuple_copy.1.1.AssetCloseTo#1: account = φ(nested_tuple_copy.1.1.AssetCloseTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.AssetCloseTo#0 to Phi node: let nested_tuple_copy.1.1.AssetCloseTo#1: account = φ(nested_tuple_copy.1.1.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.1.AssetCloseTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.AssetCloseTo#1: account = φ(nested_tuple_copy.1.1.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.1.AssetCloseTo#0 <- block@8) (nested_tuple_copy.1.1.AssetCloseTo#1) with nested_tuple_copy.1.1.AssetCloseTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.AssetCloseTo#1: account = φ(nested_tuple_copy.1.1.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.1.AssetCloseTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.AssetCloseTo#1: account = φ(nested_tuple_copy.1.1.AssetCloseTo#0 <- block@4, nested_tuple_copy.1.1.AssetCloseTo#0 <- block@8) (nested_tuple_copy.1.1.AssetCloseTo#1) with nested_tuple_copy.1.1.AssetCloseTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.GroupIndex' in block@9
debug: Added nested_tuple_copy.1.1.GroupIndex#0 to Phi node: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.1.GroupIndex#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.GroupIndex#0 to Phi node: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.1.GroupIndex#0 <- block@4, nested_tuple_copy.1.1.GroupIndex#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.1.GroupIndex#0 <- block@4, nested_tuple_copy.1.1.GroupIndex#0 <- block@8) (nested_tuple_copy.1.1.GroupIndex#1) with nested_tuple_copy.1.1.GroupIndex#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.1.GroupIndex#0 <- block@4, nested_tuple_copy.1.1.GroupIndex#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.GroupIndex#1: uint64 = φ(nested_tuple_copy.1.1.GroupIndex#0 <- block@4, nested_tuple_copy.1.1.GroupIndex#0 <- block@8) (nested_tuple_copy.1.1.GroupIndex#1) with nested_tuple_copy.1.1.GroupIndex#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.TxID#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.1.TxID' in block@9
debug: Added nested_tuple_copy.1.1.TxID#0 to Phi node: let nested_tuple_copy.1.1.TxID#1: bytes[32] = φ(nested_tuple_copy.1.1.TxID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.TxID#0 to Phi node: let nested_tuple_copy.1.1.TxID#1: bytes[32] = φ(nested_tuple_copy.1.1.TxID#0 <- block@4, nested_tuple_copy.1.1.TxID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.TxID#1: bytes[32] = φ(nested_tuple_copy.1.1.TxID#0 <- block@4, nested_tuple_copy.1.1.TxID#0 <- block@8) (nested_tuple_copy.1.1.TxID#1) with nested_tuple_copy.1.1.TxID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.TxID#1: bytes[32] = φ(nested_tuple_copy.1.1.TxID#0 <- block@4, nested_tuple_copy.1.1.TxID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.TxID#1: bytes[32] = φ(nested_tuple_copy.1.1.TxID#0 <- block@4, nested_tuple_copy.1.1.TxID#0 <- block@8) (nested_tuple_copy.1.1.TxID#1) with nested_tuple_copy.1.1.TxID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.ApplicationID' in block@9
debug: Added nested_tuple_copy.1.1.ApplicationID#0 to Phi node: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.ApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ApplicationID#0 to Phi node: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.ApplicationID#0 <- block@4, nested_tuple_copy.1.1.ApplicationID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.ApplicationID#0 <- block@4, nested_tuple_copy.1.1.ApplicationID#0 <- block@8) (nested_tuple_copy.1.1.ApplicationID#1) with nested_tuple_copy.1.1.ApplicationID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.ApplicationID#0 <- block@4, nested_tuple_copy.1.1.ApplicationID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.ApplicationID#0 <- block@4, nested_tuple_copy.1.1.ApplicationID#0 <- block@8) (nested_tuple_copy.1.1.ApplicationID#1) with nested_tuple_copy.1.1.ApplicationID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.OnCompletion' in block@9
debug: Added nested_tuple_copy.1.1.OnCompletion#0 to Phi node: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.1.OnCompletion#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.OnCompletion#0 to Phi node: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.1.OnCompletion#0 <- block@4, nested_tuple_copy.1.1.OnCompletion#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.1.OnCompletion#0 <- block@4, nested_tuple_copy.1.1.OnCompletion#0 <- block@8) (nested_tuple_copy.1.1.OnCompletion#1) with nested_tuple_copy.1.1.OnCompletion#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.1.OnCompletion#0 <- block@4, nested_tuple_copy.1.1.OnCompletion#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.OnCompletion#1: uint64 = φ(nested_tuple_copy.1.1.OnCompletion#0 <- block@4, nested_tuple_copy.1.1.OnCompletion#0 <- block@8) (nested_tuple_copy.1.1.OnCompletion#1) with nested_tuple_copy.1.1.OnCompletion#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumAppArgs' in block@9
debug: Added nested_tuple_copy.1.1.NumAppArgs#0 to Phi node: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.1.NumAppArgs#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumAppArgs#0 to Phi node: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.1.NumAppArgs#0 <- block@4, nested_tuple_copy.1.1.NumAppArgs#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.1.NumAppArgs#0 <- block@4, nested_tuple_copy.1.1.NumAppArgs#0 <- block@8) (nested_tuple_copy.1.1.NumAppArgs#1) with nested_tuple_copy.1.1.NumAppArgs#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.1.NumAppArgs#0 <- block@4, nested_tuple_copy.1.1.NumAppArgs#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumAppArgs#1: uint64 = φ(nested_tuple_copy.1.1.NumAppArgs#0 <- block@4, nested_tuple_copy.1.1.NumAppArgs#0 <- block@8) (nested_tuple_copy.1.1.NumAppArgs#1) with nested_tuple_copy.1.1.NumAppArgs#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumAccounts' in block@9
debug: Added nested_tuple_copy.1.1.NumAccounts#0 to Phi node: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.1.NumAccounts#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumAccounts#0 to Phi node: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.1.NumAccounts#0 <- block@4, nested_tuple_copy.1.1.NumAccounts#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.1.NumAccounts#0 <- block@4, nested_tuple_copy.1.1.NumAccounts#0 <- block@8) (nested_tuple_copy.1.1.NumAccounts#1) with nested_tuple_copy.1.1.NumAccounts#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.1.NumAccounts#0 <- block@4, nested_tuple_copy.1.1.NumAccounts#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumAccounts#1: uint64 = φ(nested_tuple_copy.1.1.NumAccounts#0 <- block@4, nested_tuple_copy.1.1.NumAccounts#0 <- block@8) (nested_tuple_copy.1.1.NumAccounts#1) with nested_tuple_copy.1.1.NumAccounts#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.ApprovalProgram' in block@9
debug: Added nested_tuple_copy.1.1.ApprovalProgram#0 to Phi node: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.1.ApprovalProgram#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ApprovalProgram#0 to Phi node: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.1.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.1.ApprovalProgram#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.1.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.1.ApprovalProgram#0 <- block@8) (nested_tuple_copy.1.1.ApprovalProgram#1) with nested_tuple_copy.1.1.ApprovalProgram#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.1.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.1.ApprovalProgram#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ApprovalProgram#1: bytes = φ(nested_tuple_copy.1.1.ApprovalProgram#0 <- block@4, nested_tuple_copy.1.1.ApprovalProgram#0 <- block@8) (nested_tuple_copy.1.1.ApprovalProgram#1) with nested_tuple_copy.1.1.ApprovalProgram#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.ClearStateProgram' in block@9
debug: Added nested_tuple_copy.1.1.ClearStateProgram#0 to Phi node: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.1.ClearStateProgram#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ClearStateProgram#0 to Phi node: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.1.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.1.ClearStateProgram#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.1.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.1.ClearStateProgram#0 <- block@8) (nested_tuple_copy.1.1.ClearStateProgram#1) with nested_tuple_copy.1.1.ClearStateProgram#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.1.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.1.ClearStateProgram#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ClearStateProgram#1: bytes = φ(nested_tuple_copy.1.1.ClearStateProgram#0 <- block@4, nested_tuple_copy.1.1.ClearStateProgram#0 <- block@8) (nested_tuple_copy.1.1.ClearStateProgram#1) with nested_tuple_copy.1.1.ClearStateProgram#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.RekeyTo#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.RekeyTo' in block@9
debug: Added nested_tuple_copy.1.1.RekeyTo#0 to Phi node: let nested_tuple_copy.1.1.RekeyTo#1: account = φ(nested_tuple_copy.1.1.RekeyTo#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.RekeyTo#0 to Phi node: let nested_tuple_copy.1.1.RekeyTo#1: account = φ(nested_tuple_copy.1.1.RekeyTo#0 <- block@4, nested_tuple_copy.1.1.RekeyTo#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.RekeyTo#1: account = φ(nested_tuple_copy.1.1.RekeyTo#0 <- block@4, nested_tuple_copy.1.1.RekeyTo#0 <- block@8) (nested_tuple_copy.1.1.RekeyTo#1) with nested_tuple_copy.1.1.RekeyTo#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.RekeyTo#1: account = φ(nested_tuple_copy.1.1.RekeyTo#0 <- block@4, nested_tuple_copy.1.1.RekeyTo#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.RekeyTo#1: account = φ(nested_tuple_copy.1.1.RekeyTo#0 <- block@4, nested_tuple_copy.1.1.RekeyTo#0 <- block@8) (nested_tuple_copy.1.1.RekeyTo#1) with nested_tuple_copy.1.1.RekeyTo#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAsset' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAsset#0 to Phi node: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAsset#0 to Phi node: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAsset#0 <- block@4, nested_tuple_copy.1.1.ConfigAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAsset#0 <- block@4, nested_tuple_copy.1.1.ConfigAsset#0 <- block@8) (nested_tuple_copy.1.1.ConfigAsset#1) with nested_tuple_copy.1.1.ConfigAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAsset#0 <- block@4, nested_tuple_copy.1.1.ConfigAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAsset#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAsset#0 <- block@4, nested_tuple_copy.1.1.ConfigAsset#0 <- block@8) (nested_tuple_copy.1.1.ConfigAsset#1) with nested_tuple_copy.1.1.ConfigAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetTotal' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetTotal#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetTotal#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetTotal#1) with nested_tuple_copy.1.1.ConfigAssetTotal#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetTotal#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetTotal#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetTotal#1) with nested_tuple_copy.1.1.ConfigAssetTotal#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetDecimals' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetDecimals#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetDecimals#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetDecimals#1) with nested_tuple_copy.1.1.ConfigAssetDecimals#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetDecimals#1: uint64 = φ(nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDecimals#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetDecimals#1) with nested_tuple_copy.1.1.ConfigAssetDecimals#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetDefaultFrozen' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1) with nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1: bool = φ(nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#1) with nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetUnitName' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetUnitName#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetUnitName#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetUnitName#1) with nested_tuple_copy.1.1.ConfigAssetUnitName#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetUnitName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetUnitName#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetUnitName#1) with nested_tuple_copy.1.1.ConfigAssetUnitName#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetName' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetName#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetName#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetName#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetName#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetName#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetName#1) with nested_tuple_copy.1.1.ConfigAssetName#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetName#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetName#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetName#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetName#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetName#1) with nested_tuple_copy.1.1.ConfigAssetName#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetURL' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetURL#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetURL#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetURL#1) with nested_tuple_copy.1.1.ConfigAssetURL#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetURL#1: bytes = φ(nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetURL#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetURL#1) with nested_tuple_copy.1.1.ConfigAssetURL#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetMetadataHash' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetMetadataHash#1) with nested_tuple_copy.1.1.ConfigAssetMetadataHash#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetMetadataHash#1: bytes[32] = φ(nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetMetadataHash#1) with nested_tuple_copy.1.1.ConfigAssetMetadataHash#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetManager' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetManager#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetManager#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetManager#1) with nested_tuple_copy.1.1.ConfigAssetManager#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetManager#1: account = φ(nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetManager#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetManager#1) with nested_tuple_copy.1.1.ConfigAssetManager#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetReserve' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetReserve#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetReserve#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetReserve#1) with nested_tuple_copy.1.1.ConfigAssetReserve#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetReserve#1: account = φ(nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetReserve#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetReserve#1) with nested_tuple_copy.1.1.ConfigAssetReserve#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetFreeze' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetFreeze#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetFreeze#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetFreeze#1) with nested_tuple_copy.1.1.ConfigAssetFreeze#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetFreeze#1: account = φ(nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetFreeze#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetFreeze#1) with nested_tuple_copy.1.1.ConfigAssetFreeze#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.ConfigAssetClawback' in block@9
debug: Added nested_tuple_copy.1.1.ConfigAssetClawback#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ConfigAssetClawback#0 to Phi node: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetClawback#1) with nested_tuple_copy.1.1.ConfigAssetClawback#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ConfigAssetClawback#1: account = φ(nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple_copy.1.1.ConfigAssetClawback#0 <- block@8) (nested_tuple_copy.1.1.ConfigAssetClawback#1) with nested_tuple_copy.1.1.ConfigAssetClawback#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.FreezeAsset' in block@9
debug: Added nested_tuple_copy.1.1.FreezeAsset#0 to Phi node: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.1.FreezeAsset#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.FreezeAsset#0 to Phi node: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.1.FreezeAsset#0 <- block@4, nested_tuple_copy.1.1.FreezeAsset#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.1.FreezeAsset#0 <- block@4, nested_tuple_copy.1.1.FreezeAsset#0 <- block@8) (nested_tuple_copy.1.1.FreezeAsset#1) with nested_tuple_copy.1.1.FreezeAsset#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.1.FreezeAsset#0 <- block@4, nested_tuple_copy.1.1.FreezeAsset#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.FreezeAsset#1: uint64 = φ(nested_tuple_copy.1.1.FreezeAsset#0 <- block@4, nested_tuple_copy.1.1.FreezeAsset#0 <- block@8) (nested_tuple_copy.1.1.FreezeAsset#1) with nested_tuple_copy.1.1.FreezeAsset#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = undefined while trying to resolve 'nested_tuple_copy.1.1.FreezeAssetAccount' in block@9
debug: Added nested_tuple_copy.1.1.FreezeAssetAccount#0 to Phi node: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.FreezeAssetAccount#0 to Phi node: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@8) (nested_tuple_copy.1.1.FreezeAssetAccount#1) with nested_tuple_copy.1.1.FreezeAssetAccount#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.FreezeAssetAccount#1: account = φ(nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetAccount#0 <- block@8) (nested_tuple_copy.1.1.FreezeAssetAccount#1) with nested_tuple_copy.1.1.FreezeAssetAccount#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.1.FreezeAssetFrozen' in block@9
debug: Added nested_tuple_copy.1.1.FreezeAssetFrozen#0 to Phi node: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.FreezeAssetFrozen#0 to Phi node: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@8) (nested_tuple_copy.1.1.FreezeAssetFrozen#1) with nested_tuple_copy.1.1.FreezeAssetFrozen#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.FreezeAssetFrozen#1: bool = φ(nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple_copy.1.1.FreezeAssetFrozen#0 <- block@8) (nested_tuple_copy.1.1.FreezeAssetFrozen#1) with nested_tuple_copy.1.1.FreezeAssetFrozen#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumAssets#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumAssets' in block@9
debug: Added nested_tuple_copy.1.1.NumAssets#0 to Phi node: let nested_tuple_copy.1.1.NumAssets#1: uint64 = φ(nested_tuple_copy.1.1.NumAssets#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumAssets#0 to Phi node: let nested_tuple_copy.1.1.NumAssets#1: uint64 = φ(nested_tuple_copy.1.1.NumAssets#0 <- block@4, nested_tuple_copy.1.1.NumAssets#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumAssets#1: uint64 = φ(nested_tuple_copy.1.1.NumAssets#0 <- block@4, nested_tuple_copy.1.1.NumAssets#0 <- block@8) (nested_tuple_copy.1.1.NumAssets#1) with nested_tuple_copy.1.1.NumAssets#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumAssets#1: uint64 = φ(nested_tuple_copy.1.1.NumAssets#0 <- block@4, nested_tuple_copy.1.1.NumAssets#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumAssets#1: uint64 = φ(nested_tuple_copy.1.1.NumAssets#0 <- block@4, nested_tuple_copy.1.1.NumAssets#0 <- block@8) (nested_tuple_copy.1.1.NumAssets#1) with nested_tuple_copy.1.1.NumAssets#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumApplications#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumApplications' in block@9
debug: Added nested_tuple_copy.1.1.NumApplications#0 to Phi node: let nested_tuple_copy.1.1.NumApplications#1: uint64 = φ(nested_tuple_copy.1.1.NumApplications#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumApplications#0 to Phi node: let nested_tuple_copy.1.1.NumApplications#1: uint64 = φ(nested_tuple_copy.1.1.NumApplications#0 <- block@4, nested_tuple_copy.1.1.NumApplications#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumApplications#1: uint64 = φ(nested_tuple_copy.1.1.NumApplications#0 <- block@4, nested_tuple_copy.1.1.NumApplications#0 <- block@8) (nested_tuple_copy.1.1.NumApplications#1) with nested_tuple_copy.1.1.NumApplications#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumApplications#1: uint64 = φ(nested_tuple_copy.1.1.NumApplications#0 <- block@4, nested_tuple_copy.1.1.NumApplications#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumApplications#1: uint64 = φ(nested_tuple_copy.1.1.NumApplications#0 <- block@4, nested_tuple_copy.1.1.NumApplications#0 <- block@8) (nested_tuple_copy.1.1.NumApplications#1) with nested_tuple_copy.1.1.NumApplications#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.GlobalNumUint' in block@9
debug: Added nested_tuple_copy.1.1.GlobalNumUint#0 to Phi node: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.GlobalNumUint#0 to Phi node: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.1.GlobalNumUint#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.1.GlobalNumUint#0 <- block@8) (nested_tuple_copy.1.1.GlobalNumUint#1) with nested_tuple_copy.1.1.GlobalNumUint#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.1.GlobalNumUint#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.GlobalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumUint#0 <- block@4, nested_tuple_copy.1.1.GlobalNumUint#0 <- block@8) (nested_tuple_copy.1.1.GlobalNumUint#1) with nested_tuple_copy.1.1.GlobalNumUint#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.GlobalNumByteSlice' in block@9
debug: Added nested_tuple_copy.1.1.GlobalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.GlobalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.1.GlobalNumByteSlice#1) with nested_tuple_copy.1.1.GlobalNumByteSlice#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.GlobalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.GlobalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.1.GlobalNumByteSlice#1) with nested_tuple_copy.1.1.GlobalNumByteSlice#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.LocalNumUint' in block@9
debug: Added nested_tuple_copy.1.1.LocalNumUint#0 to Phi node: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.LocalNumUint#0 to Phi node: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumUint#0 <- block@4, nested_tuple_copy.1.1.LocalNumUint#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumUint#0 <- block@4, nested_tuple_copy.1.1.LocalNumUint#0 <- block@8) (nested_tuple_copy.1.1.LocalNumUint#1) with nested_tuple_copy.1.1.LocalNumUint#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumUint#0 <- block@4, nested_tuple_copy.1.1.LocalNumUint#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.LocalNumUint#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumUint#0 <- block@4, nested_tuple_copy.1.1.LocalNumUint#0 <- block@8) (nested_tuple_copy.1.1.LocalNumUint#1) with nested_tuple_copy.1.1.LocalNumUint#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.LocalNumByteSlice' in block@9
debug: Added nested_tuple_copy.1.1.LocalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.LocalNumByteSlice#0 to Phi node: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.1.LocalNumByteSlice#1) with nested_tuple_copy.1.1.LocalNumByteSlice#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.LocalNumByteSlice#1: uint64 = φ(nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple_copy.1.1.LocalNumByteSlice#0 <- block@8) (nested_tuple_copy.1.1.LocalNumByteSlice#1) with nested_tuple_copy.1.1.LocalNumByteSlice#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.ExtraProgramPages' in block@9
debug: Added nested_tuple_copy.1.1.ExtraProgramPages#0 to Phi node: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.ExtraProgramPages#0 to Phi node: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@8) (nested_tuple_copy.1.1.ExtraProgramPages#1) with nested_tuple_copy.1.1.ExtraProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.ExtraProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@4, nested_tuple_copy.1.1.ExtraProgramPages#0 <- block@8) (nested_tuple_copy.1.1.ExtraProgramPages#1) with nested_tuple_copy.1.1.ExtraProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.Nonparticipation#1: bool = undefined while trying to resolve 'nested_tuple_copy.1.1.Nonparticipation' in block@9
debug: Added nested_tuple_copy.1.1.Nonparticipation#0 to Phi node: let nested_tuple_copy.1.1.Nonparticipation#1: bool = φ(nested_tuple_copy.1.1.Nonparticipation#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.Nonparticipation#0 to Phi node: let nested_tuple_copy.1.1.Nonparticipation#1: bool = φ(nested_tuple_copy.1.1.Nonparticipation#0 <- block@4, nested_tuple_copy.1.1.Nonparticipation#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.Nonparticipation#1: bool = φ(nested_tuple_copy.1.1.Nonparticipation#0 <- block@4, nested_tuple_copy.1.1.Nonparticipation#0 <- block@8) (nested_tuple_copy.1.1.Nonparticipation#1) with nested_tuple_copy.1.1.Nonparticipation#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.Nonparticipation#1: bool = φ(nested_tuple_copy.1.1.Nonparticipation#0 <- block@4, nested_tuple_copy.1.1.Nonparticipation#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.Nonparticipation#1: bool = φ(nested_tuple_copy.1.1.Nonparticipation#0 <- block@4, nested_tuple_copy.1.1.Nonparticipation#0 <- block@8) (nested_tuple_copy.1.1.Nonparticipation#1) with nested_tuple_copy.1.1.Nonparticipation#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumLogs#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumLogs' in block@9
debug: Added nested_tuple_copy.1.1.NumLogs#0 to Phi node: let nested_tuple_copy.1.1.NumLogs#1: uint64 = φ(nested_tuple_copy.1.1.NumLogs#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumLogs#0 to Phi node: let nested_tuple_copy.1.1.NumLogs#1: uint64 = φ(nested_tuple_copy.1.1.NumLogs#0 <- block@4, nested_tuple_copy.1.1.NumLogs#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumLogs#1: uint64 = φ(nested_tuple_copy.1.1.NumLogs#0 <- block@4, nested_tuple_copy.1.1.NumLogs#0 <- block@8) (nested_tuple_copy.1.1.NumLogs#1) with nested_tuple_copy.1.1.NumLogs#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumLogs#1: uint64 = φ(nested_tuple_copy.1.1.NumLogs#0 <- block@4, nested_tuple_copy.1.1.NumLogs#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumLogs#1: uint64 = φ(nested_tuple_copy.1.1.NumLogs#0 <- block@4, nested_tuple_copy.1.1.NumLogs#0 <- block@8) (nested_tuple_copy.1.1.NumLogs#1) with nested_tuple_copy.1.1.NumLogs#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.CreatedAssetID' in block@9
debug: Added nested_tuple_copy.1.1.CreatedAssetID#0 to Phi node: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedAssetID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.CreatedAssetID#0 to Phi node: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.1.CreatedAssetID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.1.CreatedAssetID#0 <- block@8) (nested_tuple_copy.1.1.CreatedAssetID#1) with nested_tuple_copy.1.1.CreatedAssetID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.1.CreatedAssetID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.CreatedAssetID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedAssetID#0 <- block@4, nested_tuple_copy.1.1.CreatedAssetID#0 <- block@8) (nested_tuple_copy.1.1.CreatedAssetID#1) with nested_tuple_copy.1.1.CreatedAssetID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.CreatedApplicationID' in block@9
debug: Added nested_tuple_copy.1.1.CreatedApplicationID#0 to Phi node: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.CreatedApplicationID#0 to Phi node: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@8) (nested_tuple_copy.1.1.CreatedApplicationID#1) with nested_tuple_copy.1.1.CreatedApplicationID#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.CreatedApplicationID#1: uint64 = φ(nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@4, nested_tuple_copy.1.1.CreatedApplicationID#0 <- block@8) (nested_tuple_copy.1.1.CreatedApplicationID#1) with nested_tuple_copy.1.1.CreatedApplicationID#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.LastLog#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.LastLog' in block@9
debug: Added nested_tuple_copy.1.1.LastLog#0 to Phi node: let nested_tuple_copy.1.1.LastLog#1: bytes = φ(nested_tuple_copy.1.1.LastLog#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.LastLog#0 to Phi node: let nested_tuple_copy.1.1.LastLog#1: bytes = φ(nested_tuple_copy.1.1.LastLog#0 <- block@4, nested_tuple_copy.1.1.LastLog#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.LastLog#1: bytes = φ(nested_tuple_copy.1.1.LastLog#0 <- block@4, nested_tuple_copy.1.1.LastLog#0 <- block@8) (nested_tuple_copy.1.1.LastLog#1) with nested_tuple_copy.1.1.LastLog#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.LastLog#1: bytes = φ(nested_tuple_copy.1.1.LastLog#0 <- block@4, nested_tuple_copy.1.1.LastLog#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.LastLog#1: bytes = φ(nested_tuple_copy.1.1.LastLog#0 <- block@4, nested_tuple_copy.1.1.LastLog#0 <- block@8) (nested_tuple_copy.1.1.LastLog#1) with nested_tuple_copy.1.1.LastLog#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.StateProofPK#1: bytes = undefined while trying to resolve 'nested_tuple_copy.1.1.StateProofPK' in block@9
debug: Added nested_tuple_copy.1.1.StateProofPK#0 to Phi node: let nested_tuple_copy.1.1.StateProofPK#1: bytes = φ(nested_tuple_copy.1.1.StateProofPK#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.StateProofPK#0 to Phi node: let nested_tuple_copy.1.1.StateProofPK#1: bytes = φ(nested_tuple_copy.1.1.StateProofPK#0 <- block@4, nested_tuple_copy.1.1.StateProofPK#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.StateProofPK#1: bytes = φ(nested_tuple_copy.1.1.StateProofPK#0 <- block@4, nested_tuple_copy.1.1.StateProofPK#0 <- block@8) (nested_tuple_copy.1.1.StateProofPK#1) with nested_tuple_copy.1.1.StateProofPK#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.StateProofPK#1: bytes = φ(nested_tuple_copy.1.1.StateProofPK#0 <- block@4, nested_tuple_copy.1.1.StateProofPK#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.StateProofPK#1: bytes = φ(nested_tuple_copy.1.1.StateProofPK#0 <- block@4, nested_tuple_copy.1.1.StateProofPK#0 <- block@8) (nested_tuple_copy.1.1.StateProofPK#1) with nested_tuple_copy.1.1.StateProofPK#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumApprovalProgramPages' in block@9
debug: Added nested_tuple_copy.1.1.NumApprovalProgramPages#0 to Phi node: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumApprovalProgramPages#0 to Phi node: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@8) (nested_tuple_copy.1.1.NumApprovalProgramPages#1) with nested_tuple_copy.1.1.NumApprovalProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumApprovalProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumApprovalProgramPages#0 <- block@8) (nested_tuple_copy.1.1.NumApprovalProgramPages#1) with nested_tuple_copy.1.1.NumApprovalProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = undefined while trying to resolve 'nested_tuple_copy.1.1.NumClearStateProgramPages' in block@9
debug: Added nested_tuple_copy.1.1.NumClearStateProgramPages#0 to Phi node: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple_copy.1.1.NumClearStateProgramPages#0 to Phi node: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@8) in block@8
debug: Replacing trivial Phi node: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@8) (nested_tuple_copy.1.1.NumClearStateProgramPages#1) with nested_tuple_copy.1.1.NumClearStateProgramPages#0
debug: Deleting Phi assignment: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@8)
debug: Replaced trivial Phi node: let nested_tuple_copy.1.1.NumClearStateProgramPages#1: uint64 = φ(nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple_copy.1.1.NumClearStateProgramPages#0 <- block@8) (nested_tuple_copy.1.1.NumClearStateProgramPages#1) with nested_tuple_copy.1.1.NumClearStateProgramPages#0 in current definition for 1 blocks
debug: Created Phi assignment: let nested_tuple.1.0.Sender#2: account = undefined while trying to resolve 'nested_tuple.1.0.Sender' in block@9
debug: Added nested_tuple.1.0.Sender#0 to Phi node: let nested_tuple.1.0.Sender#2: account = φ(nested_tuple.1.0.Sender#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Sender#1 to Phi node: let nested_tuple.1.0.Sender#2: account = φ(nested_tuple.1.0.Sender#0 <- block@4, nested_tuple.1.0.Sender#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Fee#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.Fee' in block@9
debug: Added nested_tuple.1.0.Fee#0 to Phi node: let nested_tuple.1.0.Fee#2: uint64 = φ(nested_tuple.1.0.Fee#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Fee#1 to Phi node: let nested_tuple.1.0.Fee#2: uint64 = φ(nested_tuple.1.0.Fee#0 <- block@4, nested_tuple.1.0.Fee#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.FirstValid#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.FirstValid' in block@9
debug: Added nested_tuple.1.0.FirstValid#0 to Phi node: let nested_tuple.1.0.FirstValid#2: uint64 = φ(nested_tuple.1.0.FirstValid#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.FirstValid#1 to Phi node: let nested_tuple.1.0.FirstValid#2: uint64 = φ(nested_tuple.1.0.FirstValid#0 <- block@4, nested_tuple.1.0.FirstValid#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.FirstValidTime#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.FirstValidTime' in block@9
debug: Added nested_tuple.1.0.FirstValidTime#0 to Phi node: let nested_tuple.1.0.FirstValidTime#2: uint64 = φ(nested_tuple.1.0.FirstValidTime#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.FirstValidTime#1 to Phi node: let nested_tuple.1.0.FirstValidTime#2: uint64 = φ(nested_tuple.1.0.FirstValidTime#0 <- block@4, nested_tuple.1.0.FirstValidTime#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.LastValid#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.LastValid' in block@9
debug: Added nested_tuple.1.0.LastValid#0 to Phi node: let nested_tuple.1.0.LastValid#2: uint64 = φ(nested_tuple.1.0.LastValid#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.LastValid#1 to Phi node: let nested_tuple.1.0.LastValid#2: uint64 = φ(nested_tuple.1.0.LastValid#0 <- block@4, nested_tuple.1.0.LastValid#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Lease#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.0.Lease' in block@9
debug: Added nested_tuple.1.0.Lease#0 to Phi node: let nested_tuple.1.0.Lease#2: bytes[32] = φ(nested_tuple.1.0.Lease#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Lease#1 to Phi node: let nested_tuple.1.0.Lease#2: bytes[32] = φ(nested_tuple.1.0.Lease#0 <- block@4, nested_tuple.1.0.Lease#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Receiver#2: account = undefined while trying to resolve 'nested_tuple.1.0.Receiver' in block@9
debug: Added nested_tuple.1.0.Receiver#0 to Phi node: let nested_tuple.1.0.Receiver#2: account = φ(nested_tuple.1.0.Receiver#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Receiver#1 to Phi node: let nested_tuple.1.0.Receiver#2: account = φ(nested_tuple.1.0.Receiver#0 <- block@4, nested_tuple.1.0.Receiver#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Amount#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.Amount' in block@9
debug: Added nested_tuple.1.0.Amount#0 to Phi node: let nested_tuple.1.0.Amount#2: uint64 = φ(nested_tuple.1.0.Amount#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Amount#1 to Phi node: let nested_tuple.1.0.Amount#2: uint64 = φ(nested_tuple.1.0.Amount#0 <- block@4, nested_tuple.1.0.Amount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.CloseRemainderTo#2: account = undefined while trying to resolve 'nested_tuple.1.0.CloseRemainderTo' in block@9
debug: Added nested_tuple.1.0.CloseRemainderTo#0 to Phi node: let nested_tuple.1.0.CloseRemainderTo#2: account = φ(nested_tuple.1.0.CloseRemainderTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.CloseRemainderTo#1 to Phi node: let nested_tuple.1.0.CloseRemainderTo#2: account = φ(nested_tuple.1.0.CloseRemainderTo#0 <- block@4, nested_tuple.1.0.CloseRemainderTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.VotePK#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.0.VotePK' in block@9
debug: Added nested_tuple.1.0.VotePK#0 to Phi node: let nested_tuple.1.0.VotePK#2: bytes[32] = φ(nested_tuple.1.0.VotePK#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.VotePK#1 to Phi node: let nested_tuple.1.0.VotePK#2: bytes[32] = φ(nested_tuple.1.0.VotePK#0 <- block@4, nested_tuple.1.0.VotePK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.SelectionPK#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.0.SelectionPK' in block@9
debug: Added nested_tuple.1.0.SelectionPK#0 to Phi node: let nested_tuple.1.0.SelectionPK#2: bytes[32] = φ(nested_tuple.1.0.SelectionPK#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.SelectionPK#1 to Phi node: let nested_tuple.1.0.SelectionPK#2: bytes[32] = φ(nested_tuple.1.0.SelectionPK#0 <- block@4, nested_tuple.1.0.SelectionPK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.VoteFirst#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.VoteFirst' in block@9
debug: Added nested_tuple.1.0.VoteFirst#0 to Phi node: let nested_tuple.1.0.VoteFirst#2: uint64 = φ(nested_tuple.1.0.VoteFirst#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.VoteFirst#1 to Phi node: let nested_tuple.1.0.VoteFirst#2: uint64 = φ(nested_tuple.1.0.VoteFirst#0 <- block@4, nested_tuple.1.0.VoteFirst#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.VoteLast#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.VoteLast' in block@9
debug: Added nested_tuple.1.0.VoteLast#0 to Phi node: let nested_tuple.1.0.VoteLast#2: uint64 = φ(nested_tuple.1.0.VoteLast#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.VoteLast#1 to Phi node: let nested_tuple.1.0.VoteLast#2: uint64 = φ(nested_tuple.1.0.VoteLast#0 <- block@4, nested_tuple.1.0.VoteLast#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.VoteKeyDilution#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.VoteKeyDilution' in block@9
debug: Added nested_tuple.1.0.VoteKeyDilution#0 to Phi node: let nested_tuple.1.0.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.0.VoteKeyDilution#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.VoteKeyDilution#1 to Phi node: let nested_tuple.1.0.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.0.VoteKeyDilution#0 <- block@4, nested_tuple.1.0.VoteKeyDilution#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Type#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.Type' in block@9
debug: Added nested_tuple.1.0.Type#0 to Phi node: let nested_tuple.1.0.Type#2: bytes = φ(nested_tuple.1.0.Type#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Type#1 to Phi node: let nested_tuple.1.0.Type#2: bytes = φ(nested_tuple.1.0.Type#0 <- block@4, nested_tuple.1.0.Type#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.TypeEnum#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.TypeEnum' in block@9
debug: Added nested_tuple.1.0.TypeEnum#0 to Phi node: let nested_tuple.1.0.TypeEnum#2: uint64 = φ(nested_tuple.1.0.TypeEnum#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.TypeEnum#1 to Phi node: let nested_tuple.1.0.TypeEnum#2: uint64 = φ(nested_tuple.1.0.TypeEnum#0 <- block@4, nested_tuple.1.0.TypeEnum#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.XferAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.XferAsset' in block@9
debug: Added nested_tuple.1.0.XferAsset#0 to Phi node: let nested_tuple.1.0.XferAsset#2: uint64 = φ(nested_tuple.1.0.XferAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.XferAsset#1 to Phi node: let nested_tuple.1.0.XferAsset#2: uint64 = φ(nested_tuple.1.0.XferAsset#0 <- block@4, nested_tuple.1.0.XferAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.AssetAmount#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.AssetAmount' in block@9
debug: Added nested_tuple.1.0.AssetAmount#0 to Phi node: let nested_tuple.1.0.AssetAmount#2: uint64 = φ(nested_tuple.1.0.AssetAmount#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.AssetAmount#1 to Phi node: let nested_tuple.1.0.AssetAmount#2: uint64 = φ(nested_tuple.1.0.AssetAmount#0 <- block@4, nested_tuple.1.0.AssetAmount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.AssetSender#2: account = undefined while trying to resolve 'nested_tuple.1.0.AssetSender' in block@9
debug: Added nested_tuple.1.0.AssetSender#0 to Phi node: let nested_tuple.1.0.AssetSender#2: account = φ(nested_tuple.1.0.AssetSender#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.AssetSender#1 to Phi node: let nested_tuple.1.0.AssetSender#2: account = φ(nested_tuple.1.0.AssetSender#0 <- block@4, nested_tuple.1.0.AssetSender#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.AssetReceiver#2: account = undefined while trying to resolve 'nested_tuple.1.0.AssetReceiver' in block@9
debug: Added nested_tuple.1.0.AssetReceiver#0 to Phi node: let nested_tuple.1.0.AssetReceiver#2: account = φ(nested_tuple.1.0.AssetReceiver#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.AssetReceiver#1 to Phi node: let nested_tuple.1.0.AssetReceiver#2: account = φ(nested_tuple.1.0.AssetReceiver#0 <- block@4, nested_tuple.1.0.AssetReceiver#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.AssetCloseTo#2: account = undefined while trying to resolve 'nested_tuple.1.0.AssetCloseTo' in block@9
debug: Added nested_tuple.1.0.AssetCloseTo#0 to Phi node: let nested_tuple.1.0.AssetCloseTo#2: account = φ(nested_tuple.1.0.AssetCloseTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.AssetCloseTo#1 to Phi node: let nested_tuple.1.0.AssetCloseTo#2: account = φ(nested_tuple.1.0.AssetCloseTo#0 <- block@4, nested_tuple.1.0.AssetCloseTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.GroupIndex#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.GroupIndex' in block@9
debug: Added nested_tuple.1.0.GroupIndex#0 to Phi node: let nested_tuple.1.0.GroupIndex#2: uint64 = φ(nested_tuple.1.0.GroupIndex#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.GroupIndex#1 to Phi node: let nested_tuple.1.0.GroupIndex#2: uint64 = φ(nested_tuple.1.0.GroupIndex#0 <- block@4, nested_tuple.1.0.GroupIndex#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.TxID#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.0.TxID' in block@9
debug: Added nested_tuple.1.0.TxID#0 to Phi node: let nested_tuple.1.0.TxID#2: bytes[32] = φ(nested_tuple.1.0.TxID#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.TxID#1 to Phi node: let nested_tuple.1.0.TxID#2: bytes[32] = φ(nested_tuple.1.0.TxID#0 <- block@4, nested_tuple.1.0.TxID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ApplicationID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.ApplicationID' in block@9
debug: Added nested_tuple.1.0.ApplicationID#0 to Phi node: let nested_tuple.1.0.ApplicationID#2: uint64 = φ(nested_tuple.1.0.ApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ApplicationID#1 to Phi node: let nested_tuple.1.0.ApplicationID#2: uint64 = φ(nested_tuple.1.0.ApplicationID#0 <- block@4, nested_tuple.1.0.ApplicationID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.OnCompletion#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.OnCompletion' in block@9
debug: Added nested_tuple.1.0.OnCompletion#0 to Phi node: let nested_tuple.1.0.OnCompletion#2: uint64 = φ(nested_tuple.1.0.OnCompletion#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.OnCompletion#1 to Phi node: let nested_tuple.1.0.OnCompletion#2: uint64 = φ(nested_tuple.1.0.OnCompletion#0 <- block@4, nested_tuple.1.0.OnCompletion#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumAppArgs#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumAppArgs' in block@9
debug: Added nested_tuple.1.0.NumAppArgs#0 to Phi node: let nested_tuple.1.0.NumAppArgs#2: uint64 = φ(nested_tuple.1.0.NumAppArgs#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumAppArgs#1 to Phi node: let nested_tuple.1.0.NumAppArgs#2: uint64 = φ(nested_tuple.1.0.NumAppArgs#0 <- block@4, nested_tuple.1.0.NumAppArgs#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumAccounts#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumAccounts' in block@9
debug: Added nested_tuple.1.0.NumAccounts#0 to Phi node: let nested_tuple.1.0.NumAccounts#2: uint64 = φ(nested_tuple.1.0.NumAccounts#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumAccounts#1 to Phi node: let nested_tuple.1.0.NumAccounts#2: uint64 = φ(nested_tuple.1.0.NumAccounts#0 <- block@4, nested_tuple.1.0.NumAccounts#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ApprovalProgram#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.ApprovalProgram' in block@9
debug: Added nested_tuple.1.0.ApprovalProgram#0 to Phi node: let nested_tuple.1.0.ApprovalProgram#2: bytes = φ(nested_tuple.1.0.ApprovalProgram#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ApprovalProgram#1 to Phi node: let nested_tuple.1.0.ApprovalProgram#2: bytes = φ(nested_tuple.1.0.ApprovalProgram#0 <- block@4, nested_tuple.1.0.ApprovalProgram#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ClearStateProgram#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.ClearStateProgram' in block@9
debug: Added nested_tuple.1.0.ClearStateProgram#0 to Phi node: let nested_tuple.1.0.ClearStateProgram#2: bytes = φ(nested_tuple.1.0.ClearStateProgram#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ClearStateProgram#1 to Phi node: let nested_tuple.1.0.ClearStateProgram#2: bytes = φ(nested_tuple.1.0.ClearStateProgram#0 <- block@4, nested_tuple.1.0.ClearStateProgram#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.RekeyTo#2: account = undefined while trying to resolve 'nested_tuple.1.0.RekeyTo' in block@9
debug: Added nested_tuple.1.0.RekeyTo#0 to Phi node: let nested_tuple.1.0.RekeyTo#2: account = φ(nested_tuple.1.0.RekeyTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.RekeyTo#1 to Phi node: let nested_tuple.1.0.RekeyTo#2: account = φ(nested_tuple.1.0.RekeyTo#0 <- block@4, nested_tuple.1.0.RekeyTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.ConfigAsset' in block@9
debug: Added nested_tuple.1.0.ConfigAsset#0 to Phi node: let nested_tuple.1.0.ConfigAsset#2: uint64 = φ(nested_tuple.1.0.ConfigAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAsset#1 to Phi node: let nested_tuple.1.0.ConfigAsset#2: uint64 = φ(nested_tuple.1.0.ConfigAsset#0 <- block@4, nested_tuple.1.0.ConfigAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetTotal#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetTotal' in block@9
debug: Added nested_tuple.1.0.ConfigAssetTotal#0 to Phi node: let nested_tuple.1.0.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.0.ConfigAssetTotal#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetTotal#1 to Phi node: let nested_tuple.1.0.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.0.ConfigAssetTotal#0 <- block@4, nested_tuple.1.0.ConfigAssetTotal#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetDecimals#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetDecimals' in block@9
debug: Added nested_tuple.1.0.ConfigAssetDecimals#0 to Phi node: let nested_tuple.1.0.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.0.ConfigAssetDecimals#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetDecimals#1 to Phi node: let nested_tuple.1.0.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.0.ConfigAssetDecimals#0 <- block@4, nested_tuple.1.0.ConfigAssetDecimals#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetDefaultFrozen#2: bool = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetDefaultFrozen' in block@9
debug: Added nested_tuple.1.0.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple.1.0.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.0.ConfigAssetDefaultFrozen#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetDefaultFrozen#1 to Phi node: let nested_tuple.1.0.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.0.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple.1.0.ConfigAssetDefaultFrozen#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetUnitName#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetUnitName' in block@9
debug: Added nested_tuple.1.0.ConfigAssetUnitName#0 to Phi node: let nested_tuple.1.0.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.0.ConfigAssetUnitName#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetUnitName#1 to Phi node: let nested_tuple.1.0.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.0.ConfigAssetUnitName#0 <- block@4, nested_tuple.1.0.ConfigAssetUnitName#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetName#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetName' in block@9
debug: Added nested_tuple.1.0.ConfigAssetName#0 to Phi node: let nested_tuple.1.0.ConfigAssetName#2: bytes = φ(nested_tuple.1.0.ConfigAssetName#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetName#1 to Phi node: let nested_tuple.1.0.ConfigAssetName#2: bytes = φ(nested_tuple.1.0.ConfigAssetName#0 <- block@4, nested_tuple.1.0.ConfigAssetName#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetURL#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetURL' in block@9
debug: Added nested_tuple.1.0.ConfigAssetURL#0 to Phi node: let nested_tuple.1.0.ConfigAssetURL#2: bytes = φ(nested_tuple.1.0.ConfigAssetURL#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetURL#1 to Phi node: let nested_tuple.1.0.ConfigAssetURL#2: bytes = φ(nested_tuple.1.0.ConfigAssetURL#0 <- block@4, nested_tuple.1.0.ConfigAssetURL#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetMetadataHash#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetMetadataHash' in block@9
debug: Added nested_tuple.1.0.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple.1.0.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.0.ConfigAssetMetadataHash#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetMetadataHash#1 to Phi node: let nested_tuple.1.0.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.0.ConfigAssetMetadataHash#0 <- block@4, nested_tuple.1.0.ConfigAssetMetadataHash#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetManager#2: account = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetManager' in block@9
debug: Added nested_tuple.1.0.ConfigAssetManager#0 to Phi node: let nested_tuple.1.0.ConfigAssetManager#2: account = φ(nested_tuple.1.0.ConfigAssetManager#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetManager#1 to Phi node: let nested_tuple.1.0.ConfigAssetManager#2: account = φ(nested_tuple.1.0.ConfigAssetManager#0 <- block@4, nested_tuple.1.0.ConfigAssetManager#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetReserve#2: account = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetReserve' in block@9
debug: Added nested_tuple.1.0.ConfigAssetReserve#0 to Phi node: let nested_tuple.1.0.ConfigAssetReserve#2: account = φ(nested_tuple.1.0.ConfigAssetReserve#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetReserve#1 to Phi node: let nested_tuple.1.0.ConfigAssetReserve#2: account = φ(nested_tuple.1.0.ConfigAssetReserve#0 <- block@4, nested_tuple.1.0.ConfigAssetReserve#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetFreeze#2: account = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetFreeze' in block@9
debug: Added nested_tuple.1.0.ConfigAssetFreeze#0 to Phi node: let nested_tuple.1.0.ConfigAssetFreeze#2: account = φ(nested_tuple.1.0.ConfigAssetFreeze#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetFreeze#1 to Phi node: let nested_tuple.1.0.ConfigAssetFreeze#2: account = φ(nested_tuple.1.0.ConfigAssetFreeze#0 <- block@4, nested_tuple.1.0.ConfigAssetFreeze#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ConfigAssetClawback#2: account = undefined while trying to resolve 'nested_tuple.1.0.ConfigAssetClawback' in block@9
debug: Added nested_tuple.1.0.ConfigAssetClawback#0 to Phi node: let nested_tuple.1.0.ConfigAssetClawback#2: account = φ(nested_tuple.1.0.ConfigAssetClawback#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ConfigAssetClawback#1 to Phi node: let nested_tuple.1.0.ConfigAssetClawback#2: account = φ(nested_tuple.1.0.ConfigAssetClawback#0 <- block@4, nested_tuple.1.0.ConfigAssetClawback#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.FreezeAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.FreezeAsset' in block@9
debug: Added nested_tuple.1.0.FreezeAsset#0 to Phi node: let nested_tuple.1.0.FreezeAsset#2: uint64 = φ(nested_tuple.1.0.FreezeAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.FreezeAsset#1 to Phi node: let nested_tuple.1.0.FreezeAsset#2: uint64 = φ(nested_tuple.1.0.FreezeAsset#0 <- block@4, nested_tuple.1.0.FreezeAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.FreezeAssetAccount#2: account = undefined while trying to resolve 'nested_tuple.1.0.FreezeAssetAccount' in block@9
debug: Added nested_tuple.1.0.FreezeAssetAccount#0 to Phi node: let nested_tuple.1.0.FreezeAssetAccount#2: account = φ(nested_tuple.1.0.FreezeAssetAccount#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.FreezeAssetAccount#1 to Phi node: let nested_tuple.1.0.FreezeAssetAccount#2: account = φ(nested_tuple.1.0.FreezeAssetAccount#0 <- block@4, nested_tuple.1.0.FreezeAssetAccount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.FreezeAssetFrozen#2: bool = undefined while trying to resolve 'nested_tuple.1.0.FreezeAssetFrozen' in block@9
debug: Added nested_tuple.1.0.FreezeAssetFrozen#0 to Phi node: let nested_tuple.1.0.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.0.FreezeAssetFrozen#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.FreezeAssetFrozen#1 to Phi node: let nested_tuple.1.0.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.0.FreezeAssetFrozen#0 <- block@4, nested_tuple.1.0.FreezeAssetFrozen#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumAssets#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumAssets' in block@9
debug: Added nested_tuple.1.0.NumAssets#0 to Phi node: let nested_tuple.1.0.NumAssets#2: uint64 = φ(nested_tuple.1.0.NumAssets#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumAssets#1 to Phi node: let nested_tuple.1.0.NumAssets#2: uint64 = φ(nested_tuple.1.0.NumAssets#0 <- block@4, nested_tuple.1.0.NumAssets#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumApplications#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumApplications' in block@9
debug: Added nested_tuple.1.0.NumApplications#0 to Phi node: let nested_tuple.1.0.NumApplications#2: uint64 = φ(nested_tuple.1.0.NumApplications#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumApplications#1 to Phi node: let nested_tuple.1.0.NumApplications#2: uint64 = φ(nested_tuple.1.0.NumApplications#0 <- block@4, nested_tuple.1.0.NumApplications#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.GlobalNumUint#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.GlobalNumUint' in block@9
debug: Added nested_tuple.1.0.GlobalNumUint#0 to Phi node: let nested_tuple.1.0.GlobalNumUint#2: uint64 = φ(nested_tuple.1.0.GlobalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.GlobalNumUint#1 to Phi node: let nested_tuple.1.0.GlobalNumUint#2: uint64 = φ(nested_tuple.1.0.GlobalNumUint#0 <- block@4, nested_tuple.1.0.GlobalNumUint#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.GlobalNumByteSlice#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.GlobalNumByteSlice' in block@9
debug: Added nested_tuple.1.0.GlobalNumByteSlice#0 to Phi node: let nested_tuple.1.0.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.GlobalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.GlobalNumByteSlice#1 to Phi node: let nested_tuple.1.0.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.GlobalNumByteSlice#0 <- block@4, nested_tuple.1.0.GlobalNumByteSlice#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.LocalNumUint#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.LocalNumUint' in block@9
debug: Added nested_tuple.1.0.LocalNumUint#0 to Phi node: let nested_tuple.1.0.LocalNumUint#2: uint64 = φ(nested_tuple.1.0.LocalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.LocalNumUint#1 to Phi node: let nested_tuple.1.0.LocalNumUint#2: uint64 = φ(nested_tuple.1.0.LocalNumUint#0 <- block@4, nested_tuple.1.0.LocalNumUint#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.LocalNumByteSlice#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.LocalNumByteSlice' in block@9
debug: Added nested_tuple.1.0.LocalNumByteSlice#0 to Phi node: let nested_tuple.1.0.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.LocalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.LocalNumByteSlice#1 to Phi node: let nested_tuple.1.0.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.0.LocalNumByteSlice#0 <- block@4, nested_tuple.1.0.LocalNumByteSlice#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.ExtraProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.ExtraProgramPages' in block@9
debug: Added nested_tuple.1.0.ExtraProgramPages#0 to Phi node: let nested_tuple.1.0.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.0.ExtraProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.ExtraProgramPages#1 to Phi node: let nested_tuple.1.0.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.0.ExtraProgramPages#0 <- block@4, nested_tuple.1.0.ExtraProgramPages#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.Nonparticipation#2: bool = undefined while trying to resolve 'nested_tuple.1.0.Nonparticipation' in block@9
debug: Added nested_tuple.1.0.Nonparticipation#0 to Phi node: let nested_tuple.1.0.Nonparticipation#2: bool = φ(nested_tuple.1.0.Nonparticipation#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.Nonparticipation#1 to Phi node: let nested_tuple.1.0.Nonparticipation#2: bool = φ(nested_tuple.1.0.Nonparticipation#0 <- block@4, nested_tuple.1.0.Nonparticipation#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumLogs#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumLogs' in block@9
debug: Added nested_tuple.1.0.NumLogs#0 to Phi node: let nested_tuple.1.0.NumLogs#2: uint64 = φ(nested_tuple.1.0.NumLogs#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumLogs#1 to Phi node: let nested_tuple.1.0.NumLogs#2: uint64 = φ(nested_tuple.1.0.NumLogs#0 <- block@4, nested_tuple.1.0.NumLogs#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.CreatedAssetID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.CreatedAssetID' in block@9
debug: Added nested_tuple.1.0.CreatedAssetID#0 to Phi node: let nested_tuple.1.0.CreatedAssetID#2: uint64 = φ(nested_tuple.1.0.CreatedAssetID#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.CreatedAssetID#1 to Phi node: let nested_tuple.1.0.CreatedAssetID#2: uint64 = φ(nested_tuple.1.0.CreatedAssetID#0 <- block@4, nested_tuple.1.0.CreatedAssetID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.CreatedApplicationID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.CreatedApplicationID' in block@9
debug: Added nested_tuple.1.0.CreatedApplicationID#0 to Phi node: let nested_tuple.1.0.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.0.CreatedApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.CreatedApplicationID#1 to Phi node: let nested_tuple.1.0.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.0.CreatedApplicationID#0 <- block@4, nested_tuple.1.0.CreatedApplicationID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.LastLog#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.LastLog' in block@9
debug: Added nested_tuple.1.0.LastLog#0 to Phi node: let nested_tuple.1.0.LastLog#2: bytes = φ(nested_tuple.1.0.LastLog#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.LastLog#1 to Phi node: let nested_tuple.1.0.LastLog#2: bytes = φ(nested_tuple.1.0.LastLog#0 <- block@4, nested_tuple.1.0.LastLog#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.StateProofPK#2: bytes = undefined while trying to resolve 'nested_tuple.1.0.StateProofPK' in block@9
debug: Added nested_tuple.1.0.StateProofPK#0 to Phi node: let nested_tuple.1.0.StateProofPK#2: bytes = φ(nested_tuple.1.0.StateProofPK#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.StateProofPK#1 to Phi node: let nested_tuple.1.0.StateProofPK#2: bytes = φ(nested_tuple.1.0.StateProofPK#0 <- block@4, nested_tuple.1.0.StateProofPK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumApprovalProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumApprovalProgramPages' in block@9
debug: Added nested_tuple.1.0.NumApprovalProgramPages#0 to Phi node: let nested_tuple.1.0.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.0.NumApprovalProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumApprovalProgramPages#1 to Phi node: let nested_tuple.1.0.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.0.NumApprovalProgramPages#0 <- block@4, nested_tuple.1.0.NumApprovalProgramPages#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.0.NumClearStateProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.0.NumClearStateProgramPages' in block@9
debug: Added nested_tuple.1.0.NumClearStateProgramPages#0 to Phi node: let nested_tuple.1.0.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.0.NumClearStateProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.0.NumClearStateProgramPages#1 to Phi node: let nested_tuple.1.0.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.0.NumClearStateProgramPages#0 <- block@4, nested_tuple.1.0.NumClearStateProgramPages#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Sender#2: account = undefined while trying to resolve 'nested_tuple.1.1.Sender' in block@9
debug: Added nested_tuple.1.1.Sender#0 to Phi node: let nested_tuple.1.1.Sender#2: account = φ(nested_tuple.1.1.Sender#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Sender#1 to Phi node: let nested_tuple.1.1.Sender#2: account = φ(nested_tuple.1.1.Sender#0 <- block@4, nested_tuple.1.1.Sender#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Fee#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.Fee' in block@9
debug: Added nested_tuple.1.1.Fee#0 to Phi node: let nested_tuple.1.1.Fee#2: uint64 = φ(nested_tuple.1.1.Fee#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Fee#1 to Phi node: let nested_tuple.1.1.Fee#2: uint64 = φ(nested_tuple.1.1.Fee#0 <- block@4, nested_tuple.1.1.Fee#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.FirstValid#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.FirstValid' in block@9
debug: Added nested_tuple.1.1.FirstValid#0 to Phi node: let nested_tuple.1.1.FirstValid#2: uint64 = φ(nested_tuple.1.1.FirstValid#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.FirstValid#1 to Phi node: let nested_tuple.1.1.FirstValid#2: uint64 = φ(nested_tuple.1.1.FirstValid#0 <- block@4, nested_tuple.1.1.FirstValid#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.FirstValidTime#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.FirstValidTime' in block@9
debug: Added nested_tuple.1.1.FirstValidTime#0 to Phi node: let nested_tuple.1.1.FirstValidTime#2: uint64 = φ(nested_tuple.1.1.FirstValidTime#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.FirstValidTime#1 to Phi node: let nested_tuple.1.1.FirstValidTime#2: uint64 = φ(nested_tuple.1.1.FirstValidTime#0 <- block@4, nested_tuple.1.1.FirstValidTime#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.LastValid#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.LastValid' in block@9
debug: Added nested_tuple.1.1.LastValid#0 to Phi node: let nested_tuple.1.1.LastValid#2: uint64 = φ(nested_tuple.1.1.LastValid#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.LastValid#1 to Phi node: let nested_tuple.1.1.LastValid#2: uint64 = φ(nested_tuple.1.1.LastValid#0 <- block@4, nested_tuple.1.1.LastValid#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Lease#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.1.Lease' in block@9
debug: Added nested_tuple.1.1.Lease#0 to Phi node: let nested_tuple.1.1.Lease#2: bytes[32] = φ(nested_tuple.1.1.Lease#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Lease#1 to Phi node: let nested_tuple.1.1.Lease#2: bytes[32] = φ(nested_tuple.1.1.Lease#0 <- block@4, nested_tuple.1.1.Lease#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Receiver#2: account = undefined while trying to resolve 'nested_tuple.1.1.Receiver' in block@9
debug: Added nested_tuple.1.1.Receiver#0 to Phi node: let nested_tuple.1.1.Receiver#2: account = φ(nested_tuple.1.1.Receiver#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Receiver#1 to Phi node: let nested_tuple.1.1.Receiver#2: account = φ(nested_tuple.1.1.Receiver#0 <- block@4, nested_tuple.1.1.Receiver#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Amount#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.Amount' in block@9
debug: Added nested_tuple.1.1.Amount#0 to Phi node: let nested_tuple.1.1.Amount#2: uint64 = φ(nested_tuple.1.1.Amount#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Amount#1 to Phi node: let nested_tuple.1.1.Amount#2: uint64 = φ(nested_tuple.1.1.Amount#0 <- block@4, nested_tuple.1.1.Amount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.CloseRemainderTo#2: account = undefined while trying to resolve 'nested_tuple.1.1.CloseRemainderTo' in block@9
debug: Added nested_tuple.1.1.CloseRemainderTo#0 to Phi node: let nested_tuple.1.1.CloseRemainderTo#2: account = φ(nested_tuple.1.1.CloseRemainderTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.CloseRemainderTo#1 to Phi node: let nested_tuple.1.1.CloseRemainderTo#2: account = φ(nested_tuple.1.1.CloseRemainderTo#0 <- block@4, nested_tuple.1.1.CloseRemainderTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.VotePK#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.1.VotePK' in block@9
debug: Added nested_tuple.1.1.VotePK#0 to Phi node: let nested_tuple.1.1.VotePK#2: bytes[32] = φ(nested_tuple.1.1.VotePK#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.VotePK#1 to Phi node: let nested_tuple.1.1.VotePK#2: bytes[32] = φ(nested_tuple.1.1.VotePK#0 <- block@4, nested_tuple.1.1.VotePK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.SelectionPK#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.1.SelectionPK' in block@9
debug: Added nested_tuple.1.1.SelectionPK#0 to Phi node: let nested_tuple.1.1.SelectionPK#2: bytes[32] = φ(nested_tuple.1.1.SelectionPK#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.SelectionPK#1 to Phi node: let nested_tuple.1.1.SelectionPK#2: bytes[32] = φ(nested_tuple.1.1.SelectionPK#0 <- block@4, nested_tuple.1.1.SelectionPK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.VoteFirst#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.VoteFirst' in block@9
debug: Added nested_tuple.1.1.VoteFirst#0 to Phi node: let nested_tuple.1.1.VoteFirst#2: uint64 = φ(nested_tuple.1.1.VoteFirst#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.VoteFirst#1 to Phi node: let nested_tuple.1.1.VoteFirst#2: uint64 = φ(nested_tuple.1.1.VoteFirst#0 <- block@4, nested_tuple.1.1.VoteFirst#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.VoteLast#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.VoteLast' in block@9
debug: Added nested_tuple.1.1.VoteLast#0 to Phi node: let nested_tuple.1.1.VoteLast#2: uint64 = φ(nested_tuple.1.1.VoteLast#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.VoteLast#1 to Phi node: let nested_tuple.1.1.VoteLast#2: uint64 = φ(nested_tuple.1.1.VoteLast#0 <- block@4, nested_tuple.1.1.VoteLast#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.VoteKeyDilution#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.VoteKeyDilution' in block@9
debug: Added nested_tuple.1.1.VoteKeyDilution#0 to Phi node: let nested_tuple.1.1.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.1.VoteKeyDilution#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.VoteKeyDilution#1 to Phi node: let nested_tuple.1.1.VoteKeyDilution#2: uint64 = φ(nested_tuple.1.1.VoteKeyDilution#0 <- block@4, nested_tuple.1.1.VoteKeyDilution#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Type#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.Type' in block@9
debug: Added nested_tuple.1.1.Type#0 to Phi node: let nested_tuple.1.1.Type#2: bytes = φ(nested_tuple.1.1.Type#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Type#1 to Phi node: let nested_tuple.1.1.Type#2: bytes = φ(nested_tuple.1.1.Type#0 <- block@4, nested_tuple.1.1.Type#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.TypeEnum#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.TypeEnum' in block@9
debug: Added nested_tuple.1.1.TypeEnum#0 to Phi node: let nested_tuple.1.1.TypeEnum#2: uint64 = φ(nested_tuple.1.1.TypeEnum#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.TypeEnum#1 to Phi node: let nested_tuple.1.1.TypeEnum#2: uint64 = φ(nested_tuple.1.1.TypeEnum#0 <- block@4, nested_tuple.1.1.TypeEnum#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.XferAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.XferAsset' in block@9
debug: Added nested_tuple.1.1.XferAsset#0 to Phi node: let nested_tuple.1.1.XferAsset#2: uint64 = φ(nested_tuple.1.1.XferAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.XferAsset#1 to Phi node: let nested_tuple.1.1.XferAsset#2: uint64 = φ(nested_tuple.1.1.XferAsset#0 <- block@4, nested_tuple.1.1.XferAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.AssetAmount#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.AssetAmount' in block@9
debug: Added nested_tuple.1.1.AssetAmount#0 to Phi node: let nested_tuple.1.1.AssetAmount#2: uint64 = φ(nested_tuple.1.1.AssetAmount#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.AssetAmount#1 to Phi node: let nested_tuple.1.1.AssetAmount#2: uint64 = φ(nested_tuple.1.1.AssetAmount#0 <- block@4, nested_tuple.1.1.AssetAmount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.AssetSender#2: account = undefined while trying to resolve 'nested_tuple.1.1.AssetSender' in block@9
debug: Added nested_tuple.1.1.AssetSender#0 to Phi node: let nested_tuple.1.1.AssetSender#2: account = φ(nested_tuple.1.1.AssetSender#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.AssetSender#1 to Phi node: let nested_tuple.1.1.AssetSender#2: account = φ(nested_tuple.1.1.AssetSender#0 <- block@4, nested_tuple.1.1.AssetSender#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.AssetReceiver#2: account = undefined while trying to resolve 'nested_tuple.1.1.AssetReceiver' in block@9
debug: Added nested_tuple.1.1.AssetReceiver#0 to Phi node: let nested_tuple.1.1.AssetReceiver#2: account = φ(nested_tuple.1.1.AssetReceiver#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.AssetReceiver#1 to Phi node: let nested_tuple.1.1.AssetReceiver#2: account = φ(nested_tuple.1.1.AssetReceiver#0 <- block@4, nested_tuple.1.1.AssetReceiver#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.AssetCloseTo#2: account = undefined while trying to resolve 'nested_tuple.1.1.AssetCloseTo' in block@9
debug: Added nested_tuple.1.1.AssetCloseTo#0 to Phi node: let nested_tuple.1.1.AssetCloseTo#2: account = φ(nested_tuple.1.1.AssetCloseTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.AssetCloseTo#1 to Phi node: let nested_tuple.1.1.AssetCloseTo#2: account = φ(nested_tuple.1.1.AssetCloseTo#0 <- block@4, nested_tuple.1.1.AssetCloseTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.GroupIndex#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.GroupIndex' in block@9
debug: Added nested_tuple.1.1.GroupIndex#0 to Phi node: let nested_tuple.1.1.GroupIndex#2: uint64 = φ(nested_tuple.1.1.GroupIndex#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.GroupIndex#1 to Phi node: let nested_tuple.1.1.GroupIndex#2: uint64 = φ(nested_tuple.1.1.GroupIndex#0 <- block@4, nested_tuple.1.1.GroupIndex#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.TxID#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.1.TxID' in block@9
debug: Added nested_tuple.1.1.TxID#0 to Phi node: let nested_tuple.1.1.TxID#2: bytes[32] = φ(nested_tuple.1.1.TxID#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.TxID#1 to Phi node: let nested_tuple.1.1.TxID#2: bytes[32] = φ(nested_tuple.1.1.TxID#0 <- block@4, nested_tuple.1.1.TxID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ApplicationID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.ApplicationID' in block@9
debug: Added nested_tuple.1.1.ApplicationID#0 to Phi node: let nested_tuple.1.1.ApplicationID#2: uint64 = φ(nested_tuple.1.1.ApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ApplicationID#1 to Phi node: let nested_tuple.1.1.ApplicationID#2: uint64 = φ(nested_tuple.1.1.ApplicationID#0 <- block@4, nested_tuple.1.1.ApplicationID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.OnCompletion#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.OnCompletion' in block@9
debug: Added nested_tuple.1.1.OnCompletion#0 to Phi node: let nested_tuple.1.1.OnCompletion#2: uint64 = φ(nested_tuple.1.1.OnCompletion#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.OnCompletion#1 to Phi node: let nested_tuple.1.1.OnCompletion#2: uint64 = φ(nested_tuple.1.1.OnCompletion#0 <- block@4, nested_tuple.1.1.OnCompletion#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumAppArgs#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumAppArgs' in block@9
debug: Added nested_tuple.1.1.NumAppArgs#0 to Phi node: let nested_tuple.1.1.NumAppArgs#2: uint64 = φ(nested_tuple.1.1.NumAppArgs#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumAppArgs#1 to Phi node: let nested_tuple.1.1.NumAppArgs#2: uint64 = φ(nested_tuple.1.1.NumAppArgs#0 <- block@4, nested_tuple.1.1.NumAppArgs#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumAccounts#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumAccounts' in block@9
debug: Added nested_tuple.1.1.NumAccounts#0 to Phi node: let nested_tuple.1.1.NumAccounts#2: uint64 = φ(nested_tuple.1.1.NumAccounts#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumAccounts#1 to Phi node: let nested_tuple.1.1.NumAccounts#2: uint64 = φ(nested_tuple.1.1.NumAccounts#0 <- block@4, nested_tuple.1.1.NumAccounts#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ApprovalProgram#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.ApprovalProgram' in block@9
debug: Added nested_tuple.1.1.ApprovalProgram#0 to Phi node: let nested_tuple.1.1.ApprovalProgram#2: bytes = φ(nested_tuple.1.1.ApprovalProgram#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ApprovalProgram#1 to Phi node: let nested_tuple.1.1.ApprovalProgram#2: bytes = φ(nested_tuple.1.1.ApprovalProgram#0 <- block@4, nested_tuple.1.1.ApprovalProgram#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ClearStateProgram#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.ClearStateProgram' in block@9
debug: Added nested_tuple.1.1.ClearStateProgram#0 to Phi node: let nested_tuple.1.1.ClearStateProgram#2: bytes = φ(nested_tuple.1.1.ClearStateProgram#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ClearStateProgram#1 to Phi node: let nested_tuple.1.1.ClearStateProgram#2: bytes = φ(nested_tuple.1.1.ClearStateProgram#0 <- block@4, nested_tuple.1.1.ClearStateProgram#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.RekeyTo#2: account = undefined while trying to resolve 'nested_tuple.1.1.RekeyTo' in block@9
debug: Added nested_tuple.1.1.RekeyTo#0 to Phi node: let nested_tuple.1.1.RekeyTo#2: account = φ(nested_tuple.1.1.RekeyTo#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.RekeyTo#1 to Phi node: let nested_tuple.1.1.RekeyTo#2: account = φ(nested_tuple.1.1.RekeyTo#0 <- block@4, nested_tuple.1.1.RekeyTo#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.ConfigAsset' in block@9
debug: Added nested_tuple.1.1.ConfigAsset#0 to Phi node: let nested_tuple.1.1.ConfigAsset#2: uint64 = φ(nested_tuple.1.1.ConfigAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAsset#1 to Phi node: let nested_tuple.1.1.ConfigAsset#2: uint64 = φ(nested_tuple.1.1.ConfigAsset#0 <- block@4, nested_tuple.1.1.ConfigAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetTotal#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetTotal' in block@9
debug: Added nested_tuple.1.1.ConfigAssetTotal#0 to Phi node: let nested_tuple.1.1.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.1.ConfigAssetTotal#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetTotal#1 to Phi node: let nested_tuple.1.1.ConfigAssetTotal#2: uint64 = φ(nested_tuple.1.1.ConfigAssetTotal#0 <- block@4, nested_tuple.1.1.ConfigAssetTotal#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetDecimals#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetDecimals' in block@9
debug: Added nested_tuple.1.1.ConfigAssetDecimals#0 to Phi node: let nested_tuple.1.1.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.1.ConfigAssetDecimals#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetDecimals#1 to Phi node: let nested_tuple.1.1.ConfigAssetDecimals#2: uint64 = φ(nested_tuple.1.1.ConfigAssetDecimals#0 <- block@4, nested_tuple.1.1.ConfigAssetDecimals#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetDefaultFrozen#2: bool = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetDefaultFrozen' in block@9
debug: Added nested_tuple.1.1.ConfigAssetDefaultFrozen#0 to Phi node: let nested_tuple.1.1.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.1.ConfigAssetDefaultFrozen#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetDefaultFrozen#1 to Phi node: let nested_tuple.1.1.ConfigAssetDefaultFrozen#2: bool = φ(nested_tuple.1.1.ConfigAssetDefaultFrozen#0 <- block@4, nested_tuple.1.1.ConfigAssetDefaultFrozen#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetUnitName#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetUnitName' in block@9
debug: Added nested_tuple.1.1.ConfigAssetUnitName#0 to Phi node: let nested_tuple.1.1.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.1.ConfigAssetUnitName#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetUnitName#1 to Phi node: let nested_tuple.1.1.ConfigAssetUnitName#2: bytes = φ(nested_tuple.1.1.ConfigAssetUnitName#0 <- block@4, nested_tuple.1.1.ConfigAssetUnitName#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetName#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetName' in block@9
debug: Added nested_tuple.1.1.ConfigAssetName#0 to Phi node: let nested_tuple.1.1.ConfigAssetName#2: bytes = φ(nested_tuple.1.1.ConfigAssetName#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetName#1 to Phi node: let nested_tuple.1.1.ConfigAssetName#2: bytes = φ(nested_tuple.1.1.ConfigAssetName#0 <- block@4, nested_tuple.1.1.ConfigAssetName#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetURL#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetURL' in block@9
debug: Added nested_tuple.1.1.ConfigAssetURL#0 to Phi node: let nested_tuple.1.1.ConfigAssetURL#2: bytes = φ(nested_tuple.1.1.ConfigAssetURL#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetURL#1 to Phi node: let nested_tuple.1.1.ConfigAssetURL#2: bytes = φ(nested_tuple.1.1.ConfigAssetURL#0 <- block@4, nested_tuple.1.1.ConfigAssetURL#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetMetadataHash#2: bytes[32] = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetMetadataHash' in block@9
debug: Added nested_tuple.1.1.ConfigAssetMetadataHash#0 to Phi node: let nested_tuple.1.1.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.1.ConfigAssetMetadataHash#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetMetadataHash#1 to Phi node: let nested_tuple.1.1.ConfigAssetMetadataHash#2: bytes[32] = φ(nested_tuple.1.1.ConfigAssetMetadataHash#0 <- block@4, nested_tuple.1.1.ConfigAssetMetadataHash#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetManager#2: account = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetManager' in block@9
debug: Added nested_tuple.1.1.ConfigAssetManager#0 to Phi node: let nested_tuple.1.1.ConfigAssetManager#2: account = φ(nested_tuple.1.1.ConfigAssetManager#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetManager#1 to Phi node: let nested_tuple.1.1.ConfigAssetManager#2: account = φ(nested_tuple.1.1.ConfigAssetManager#0 <- block@4, nested_tuple.1.1.ConfigAssetManager#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetReserve#2: account = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetReserve' in block@9
debug: Added nested_tuple.1.1.ConfigAssetReserve#0 to Phi node: let nested_tuple.1.1.ConfigAssetReserve#2: account = φ(nested_tuple.1.1.ConfigAssetReserve#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetReserve#1 to Phi node: let nested_tuple.1.1.ConfigAssetReserve#2: account = φ(nested_tuple.1.1.ConfigAssetReserve#0 <- block@4, nested_tuple.1.1.ConfigAssetReserve#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetFreeze#2: account = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetFreeze' in block@9
debug: Added nested_tuple.1.1.ConfigAssetFreeze#0 to Phi node: let nested_tuple.1.1.ConfigAssetFreeze#2: account = φ(nested_tuple.1.1.ConfigAssetFreeze#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetFreeze#1 to Phi node: let nested_tuple.1.1.ConfigAssetFreeze#2: account = φ(nested_tuple.1.1.ConfigAssetFreeze#0 <- block@4, nested_tuple.1.1.ConfigAssetFreeze#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ConfigAssetClawback#2: account = undefined while trying to resolve 'nested_tuple.1.1.ConfigAssetClawback' in block@9
debug: Added nested_tuple.1.1.ConfigAssetClawback#0 to Phi node: let nested_tuple.1.1.ConfigAssetClawback#2: account = φ(nested_tuple.1.1.ConfigAssetClawback#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ConfigAssetClawback#1 to Phi node: let nested_tuple.1.1.ConfigAssetClawback#2: account = φ(nested_tuple.1.1.ConfigAssetClawback#0 <- block@4, nested_tuple.1.1.ConfigAssetClawback#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.FreezeAsset#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.FreezeAsset' in block@9
debug: Added nested_tuple.1.1.FreezeAsset#0 to Phi node: let nested_tuple.1.1.FreezeAsset#2: uint64 = φ(nested_tuple.1.1.FreezeAsset#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.FreezeAsset#1 to Phi node: let nested_tuple.1.1.FreezeAsset#2: uint64 = φ(nested_tuple.1.1.FreezeAsset#0 <- block@4, nested_tuple.1.1.FreezeAsset#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.FreezeAssetAccount#2: account = undefined while trying to resolve 'nested_tuple.1.1.FreezeAssetAccount' in block@9
debug: Added nested_tuple.1.1.FreezeAssetAccount#0 to Phi node: let nested_tuple.1.1.FreezeAssetAccount#2: account = φ(nested_tuple.1.1.FreezeAssetAccount#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.FreezeAssetAccount#1 to Phi node: let nested_tuple.1.1.FreezeAssetAccount#2: account = φ(nested_tuple.1.1.FreezeAssetAccount#0 <- block@4, nested_tuple.1.1.FreezeAssetAccount#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.FreezeAssetFrozen#2: bool = undefined while trying to resolve 'nested_tuple.1.1.FreezeAssetFrozen' in block@9
debug: Added nested_tuple.1.1.FreezeAssetFrozen#0 to Phi node: let nested_tuple.1.1.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.1.FreezeAssetFrozen#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.FreezeAssetFrozen#1 to Phi node: let nested_tuple.1.1.FreezeAssetFrozen#2: bool = φ(nested_tuple.1.1.FreezeAssetFrozen#0 <- block@4, nested_tuple.1.1.FreezeAssetFrozen#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumAssets#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumAssets' in block@9
debug: Added nested_tuple.1.1.NumAssets#0 to Phi node: let nested_tuple.1.1.NumAssets#2: uint64 = φ(nested_tuple.1.1.NumAssets#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumAssets#1 to Phi node: let nested_tuple.1.1.NumAssets#2: uint64 = φ(nested_tuple.1.1.NumAssets#0 <- block@4, nested_tuple.1.1.NumAssets#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumApplications#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumApplications' in block@9
debug: Added nested_tuple.1.1.NumApplications#0 to Phi node: let nested_tuple.1.1.NumApplications#2: uint64 = φ(nested_tuple.1.1.NumApplications#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumApplications#1 to Phi node: let nested_tuple.1.1.NumApplications#2: uint64 = φ(nested_tuple.1.1.NumApplications#0 <- block@4, nested_tuple.1.1.NumApplications#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.GlobalNumUint#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.GlobalNumUint' in block@9
debug: Added nested_tuple.1.1.GlobalNumUint#0 to Phi node: let nested_tuple.1.1.GlobalNumUint#2: uint64 = φ(nested_tuple.1.1.GlobalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.GlobalNumUint#1 to Phi node: let nested_tuple.1.1.GlobalNumUint#2: uint64 = φ(nested_tuple.1.1.GlobalNumUint#0 <- block@4, nested_tuple.1.1.GlobalNumUint#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.GlobalNumByteSlice#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.GlobalNumByteSlice' in block@9
debug: Added nested_tuple.1.1.GlobalNumByteSlice#0 to Phi node: let nested_tuple.1.1.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.GlobalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.GlobalNumByteSlice#1 to Phi node: let nested_tuple.1.1.GlobalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.GlobalNumByteSlice#0 <- block@4, nested_tuple.1.1.GlobalNumByteSlice#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.LocalNumUint#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.LocalNumUint' in block@9
debug: Added nested_tuple.1.1.LocalNumUint#0 to Phi node: let nested_tuple.1.1.LocalNumUint#2: uint64 = φ(nested_tuple.1.1.LocalNumUint#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.LocalNumUint#1 to Phi node: let nested_tuple.1.1.LocalNumUint#2: uint64 = φ(nested_tuple.1.1.LocalNumUint#0 <- block@4, nested_tuple.1.1.LocalNumUint#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.LocalNumByteSlice#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.LocalNumByteSlice' in block@9
debug: Added nested_tuple.1.1.LocalNumByteSlice#0 to Phi node: let nested_tuple.1.1.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.LocalNumByteSlice#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.LocalNumByteSlice#1 to Phi node: let nested_tuple.1.1.LocalNumByteSlice#2: uint64 = φ(nested_tuple.1.1.LocalNumByteSlice#0 <- block@4, nested_tuple.1.1.LocalNumByteSlice#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.ExtraProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.ExtraProgramPages' in block@9
debug: Added nested_tuple.1.1.ExtraProgramPages#0 to Phi node: let nested_tuple.1.1.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.1.ExtraProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.ExtraProgramPages#1 to Phi node: let nested_tuple.1.1.ExtraProgramPages#2: uint64 = φ(nested_tuple.1.1.ExtraProgramPages#0 <- block@4, nested_tuple.1.1.ExtraProgramPages#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.Nonparticipation#2: bool = undefined while trying to resolve 'nested_tuple.1.1.Nonparticipation' in block@9
debug: Added nested_tuple.1.1.Nonparticipation#0 to Phi node: let nested_tuple.1.1.Nonparticipation#2: bool = φ(nested_tuple.1.1.Nonparticipation#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.Nonparticipation#1 to Phi node: let nested_tuple.1.1.Nonparticipation#2: bool = φ(nested_tuple.1.1.Nonparticipation#0 <- block@4, nested_tuple.1.1.Nonparticipation#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumLogs#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumLogs' in block@9
debug: Added nested_tuple.1.1.NumLogs#0 to Phi node: let nested_tuple.1.1.NumLogs#2: uint64 = φ(nested_tuple.1.1.NumLogs#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumLogs#1 to Phi node: let nested_tuple.1.1.NumLogs#2: uint64 = φ(nested_tuple.1.1.NumLogs#0 <- block@4, nested_tuple.1.1.NumLogs#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.CreatedAssetID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.CreatedAssetID' in block@9
debug: Added nested_tuple.1.1.CreatedAssetID#0 to Phi node: let nested_tuple.1.1.CreatedAssetID#2: uint64 = φ(nested_tuple.1.1.CreatedAssetID#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.CreatedAssetID#1 to Phi node: let nested_tuple.1.1.CreatedAssetID#2: uint64 = φ(nested_tuple.1.1.CreatedAssetID#0 <- block@4, nested_tuple.1.1.CreatedAssetID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.CreatedApplicationID#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.CreatedApplicationID' in block@9
debug: Added nested_tuple.1.1.CreatedApplicationID#0 to Phi node: let nested_tuple.1.1.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.1.CreatedApplicationID#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.CreatedApplicationID#1 to Phi node: let nested_tuple.1.1.CreatedApplicationID#2: uint64 = φ(nested_tuple.1.1.CreatedApplicationID#0 <- block@4, nested_tuple.1.1.CreatedApplicationID#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.LastLog#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.LastLog' in block@9
debug: Added nested_tuple.1.1.LastLog#0 to Phi node: let nested_tuple.1.1.LastLog#2: bytes = φ(nested_tuple.1.1.LastLog#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.LastLog#1 to Phi node: let nested_tuple.1.1.LastLog#2: bytes = φ(nested_tuple.1.1.LastLog#0 <- block@4, nested_tuple.1.1.LastLog#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.StateProofPK#2: bytes = undefined while trying to resolve 'nested_tuple.1.1.StateProofPK' in block@9
debug: Added nested_tuple.1.1.StateProofPK#0 to Phi node: let nested_tuple.1.1.StateProofPK#2: bytes = φ(nested_tuple.1.1.StateProofPK#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.StateProofPK#1 to Phi node: let nested_tuple.1.1.StateProofPK#2: bytes = φ(nested_tuple.1.1.StateProofPK#0 <- block@4, nested_tuple.1.1.StateProofPK#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumApprovalProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumApprovalProgramPages' in block@9
debug: Added nested_tuple.1.1.NumApprovalProgramPages#0 to Phi node: let nested_tuple.1.1.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.1.NumApprovalProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumApprovalProgramPages#1 to Phi node: let nested_tuple.1.1.NumApprovalProgramPages#2: uint64 = φ(nested_tuple.1.1.NumApprovalProgramPages#0 <- block@4, nested_tuple.1.1.NumApprovalProgramPages#1 <- block@8) in block@8
debug: Created Phi assignment: let nested_tuple.1.1.NumClearStateProgramPages#2: uint64 = undefined while trying to resolve 'nested_tuple.1.1.NumClearStateProgramPages' in block@9
debug: Added nested_tuple.1.1.NumClearStateProgramPages#0 to Phi node: let nested_tuple.1.1.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.1.NumClearStateProgramPages#0 <- block@4) in block@4
debug: Added nested_tuple.1.1.NumClearStateProgramPages#1 to Phi node: let nested_tuple.1.1.NumClearStateProgramPages#2: uint64 = φ(nested_tuple.1.1.NumClearStateProgramPages#0 <- block@4, nested_tuple.1.1.NumClearStateProgramPages#1 <- block@8) in block@8
debug: Terminated block@9
debug: Building IR for function test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy._contract.Contract.__init__
debug: Sealing block@0
debug: Terminated block@0
debug: Building IR for function algopy.arc4.ARC4Contract.approval_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Building IR for function algopy.arc4.ARC4Contract.clear_state_program
debug: Sealing block@0
debug: Terminated block@0
debug: removing unused subroutine _puya_lib.util.ensure_budget
debug: removing unused subroutine _puya_lib.bytes_.is_substring
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_bit
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_fixed_size
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_pop_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_bits
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_concat_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.dynamic_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_dynamic_element
debug: removing unused subroutine _puya_lib.arc4.static_array_replace_byte_length_head
debug: removing unused subroutine _puya_lib.arc4.recalculate_head_for_elements_with_byte_length_head
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.echo
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create
debug: removing unused subroutine algopy.arc4.ARC4Contract.approval_program
debug: removing unused subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: removing unused subroutine algopy._contract.Contract.__init__
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.000.ssa.ir
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.clear.000.ssa.ir
debug: optimizing approval program of test_cases.inner_transactions_assignment.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: marking trivial method test_cases.inner_transactions_assignment.contract.echo as inlineable
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__ in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%12#0 0u) to (! tmp%12#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@7 from switch tmp%11#0 {0u => block@8, * => block@9} to goto_nth [block@8][tmp%11#0] else goto block@9
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@7 from goto_nth [block@8][tmp%11#0] else goto block@9 to goto tmp%11#0 ? block@9 : block@8
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@7
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@6 with block@5 in block@11
debug: Merged linear block@6 into block@5
debug: Replaced predecessor block@10 with block@9 in block@11
debug: Merged linear block@10 into block@9
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@5
debug: Removed empty block: block@9
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.echo
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create in test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== tmp%3#0 NoOp) to (! tmp%3#0)
debug: Simplified (== tmp%7#0 NoOp) to (! tmp%7#0)
debug: Simplified (== tmp%12#0 0u) to (! tmp%12#0)
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying a switch with constants into goto nth
debug: simplified terminator of block@6 from switch tmp%11#0 {0u => block@7, * => block@8} to goto_nth [block@7][tmp%11#0] else goto block@8
debug: simplifying a goto nth with two targets into a conditional branch
debug: simplified terminator of block@6 from goto_nth [block@7][tmp%11#0] else goto block@8 to goto tmp%11#0 ? block@8 : block@7
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@5 with block@4 in block@10
debug: Merged linear block@5 into block@4
debug: Replaced predecessor block@11 with block@7 in block@12
debug: Merged linear block@11 into block@7
debug: Merged linear block@12 into block@7
debug: Replaced predecessor block@9 with block@8 in block@10
debug: Merged linear block@9 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Removed empty block: block@4
debug: Removed empty block: block@8
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: pay1%%param_Receiver_idx_0#0, pay2%%param_Receiver_idx_0#0, pay3%%param_Receiver_idx_0#0
debug: selected pay1%%param_Receiver_idx_0#0 from equivalence set
debug: Copy propagation made 2 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable acfg#0
debug: Removing unused variable acfg%%param_Fee_idx_0#0
debug: Removing unused variable acfg%%Fee_length#0
debug: Removing unused variable acfg%%param_TypeEnum_idx_0#0
debug: Removing unused variable acfg%%TypeEnum_length#0
debug: Removing unused variable acfg%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetUnitName_length#0
debug: Removing unused variable acfg%%param_ConfigAssetName_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetName_length#0
debug: Removing unused variable acfg%%param_Note_idx_0#0
debug: Removing unused variable acfg%%Note_length#0
debug: Removing unused variable acfg%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetTotal_length#0
debug: Removing unused variable acfg%%Sender_length#0
debug: Removing unused variable acfg%%Receiver_length#0
debug: Removing unused variable acfg%%Amount_length#0
debug: Removing unused variable acfg%%CloseRemainderTo_length#0
debug: Removing unused variable acfg%%VotePK_length#0
debug: Removing unused variable acfg%%SelectionPK_length#0
debug: Removing unused variable acfg%%VoteFirst_length#0
debug: Removing unused variable acfg%%VoteLast_length#0
debug: Removing unused variable acfg%%VoteKeyDilution_length#0
debug: Removing unused variable acfg%%Type_length#0
debug: Removing unused variable acfg%%XferAsset_length#0
debug: Removing unused variable acfg%%AssetAmount_length#0
debug: Removing unused variable acfg%%AssetSender_length#0
debug: Removing unused variable acfg%%AssetReceiver_length#0
debug: Removing unused variable acfg%%AssetCloseTo_length#0
debug: Removing unused variable acfg%%ApplicationID_length#0
debug: Removing unused variable acfg%%OnCompletion_length#0
debug: Removing unused variable acfg%%ApprovalProgram_length#0
debug: Removing unused variable acfg%%ClearStateProgram_length#0
debug: Removing unused variable acfg%%RekeyTo_length#0
debug: Removing unused variable acfg%%ConfigAsset_length#0
debug: Removing unused variable acfg%%ConfigAssetDecimals_length#0
debug: Removing unused variable acfg%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable acfg%%ConfigAssetURL_length#0
debug: Removing unused variable acfg%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable acfg%%ConfigAssetManager_length#0
debug: Removing unused variable acfg%%ConfigAssetReserve_length#0
debug: Removing unused variable acfg%%ConfigAssetFreeze_length#0
debug: Removing unused variable acfg%%ConfigAssetClawback_length#0
debug: Removing unused variable acfg%%FreezeAsset_length#0
debug: Removing unused variable acfg%%FreezeAssetAccount_length#0
debug: Removing unused variable acfg%%FreezeAssetFrozen_length#0
debug: Removing unused variable acfg%%GlobalNumUint_length#0
debug: Removing unused variable acfg%%GlobalNumByteSlice_length#0
debug: Removing unused variable acfg%%LocalNumUint_length#0
debug: Removing unused variable acfg%%LocalNumByteSlice_length#0
debug: Removing unused variable acfg%%ExtraProgramPages_length#0
debug: Removing unused variable acfg%%Nonparticipation_length#0
debug: Removing unused variable acfg%%StateProofPK_length#0
debug: Removing unused variable acfg%%ApplicationArgs_length#0
debug: Removing unused variable acfg%%Accounts_length#0
debug: Removing unused variable acfg%%Assets_length#0
debug: Removing unused variable acfg%%Applications_length#0
debug: Removing unused variable acfg%%ApprovalProgramPages_length#0
debug: Removing unused variable acfg%%ClearStateProgramPages_length#0
debug: Removing unused variable pay1#0
debug: Removing unused variable pay1%%param_Fee_idx_0#0
debug: Removing unused variable pay1%%Fee_length#0
debug: Removing unused variable pay1%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay1%%TypeEnum_length#0
debug: Removing unused variable pay1%%Receiver_length#0
debug: Removing unused variable pay1%%param_Amount_idx_0#0
debug: Removing unused variable pay1%%Amount_length#0
debug: Removing unused variable pay1%%param_Note_idx_0#0
debug: Removing unused variable pay1%%Note_length#0
debug: Removing unused variable pay1%%Sender_length#0
debug: Removing unused variable pay1%%CloseRemainderTo_length#0
debug: Removing unused variable pay1%%VotePK_length#0
debug: Removing unused variable pay1%%SelectionPK_length#0
debug: Removing unused variable pay1%%VoteFirst_length#0
debug: Removing unused variable pay1%%VoteLast_length#0
debug: Removing unused variable pay1%%VoteKeyDilution_length#0
debug: Removing unused variable pay1%%Type_length#0
debug: Removing unused variable pay1%%XferAsset_length#0
debug: Removing unused variable pay1%%AssetAmount_length#0
debug: Removing unused variable pay1%%AssetSender_length#0
debug: Removing unused variable pay1%%AssetReceiver_length#0
debug: Removing unused variable pay1%%AssetCloseTo_length#0
debug: Removing unused variable pay1%%ApplicationID_length#0
debug: Removing unused variable pay1%%OnCompletion_length#0
debug: Removing unused variable pay1%%ApprovalProgram_length#0
debug: Removing unused variable pay1%%ClearStateProgram_length#0
debug: Removing unused variable pay1%%RekeyTo_length#0
debug: Removing unused variable pay1%%ConfigAsset_length#0
debug: Removing unused variable pay1%%ConfigAssetTotal_length#0
debug: Removing unused variable pay1%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay1%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay1%%ConfigAssetName_length#0
debug: Removing unused variable pay1%%ConfigAssetURL_length#0
debug: Removing unused variable pay1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay1%%ConfigAssetManager_length#0
debug: Removing unused variable pay1%%ConfigAssetReserve_length#0
debug: Removing unused variable pay1%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay1%%ConfigAssetClawback_length#0
debug: Removing unused variable pay1%%FreezeAsset_length#0
debug: Removing unused variable pay1%%FreezeAssetAccount_length#0
debug: Removing unused variable pay1%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay1%%GlobalNumUint_length#0
debug: Removing unused variable pay1%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay1%%LocalNumUint_length#0
debug: Removing unused variable pay1%%LocalNumByteSlice_length#0
debug: Removing unused variable pay1%%ExtraProgramPages_length#0
debug: Removing unused variable pay1%%Nonparticipation_length#0
debug: Removing unused variable pay1%%StateProofPK_length#0
debug: Removing unused variable pay1%%ApplicationArgs_length#0
debug: Removing unused variable pay1%%Accounts_length#0
debug: Removing unused variable pay1%%Assets_length#0
debug: Removing unused variable pay1%%Applications_length#0
debug: Removing unused variable pay1%%ApprovalProgramPages_length#0
debug: Removing unused variable pay1%%ClearStateProgramPages_length#0
debug: Removing unused variable pay2%%Sender_length#0
debug: Removing unused variable pay2%%param_Fee_idx_0#0
debug: Removing unused variable pay2%%Fee_length#0
debug: Removing unused variable pay2%%param_Note_idx_0#0
debug: Removing unused variable pay2%%Note_length#0
debug: Removing unused variable pay2%%Receiver_length#0
debug: Removing unused variable pay2%%param_Amount_idx_0#0
debug: Removing unused variable pay2%%Amount_length#0
debug: Removing unused variable pay2%%CloseRemainderTo_length#0
debug: Removing unused variable pay2%%VotePK_length#0
debug: Removing unused variable pay2%%SelectionPK_length#0
debug: Removing unused variable pay2%%VoteFirst_length#0
debug: Removing unused variable pay2%%VoteLast_length#0
debug: Removing unused variable pay2%%VoteKeyDilution_length#0
debug: Removing unused variable pay2%%Type_length#0
debug: Removing unused variable pay2%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay2%%TypeEnum_length#0
debug: Removing unused variable pay2%%XferAsset_length#0
debug: Removing unused variable pay2%%AssetAmount_length#0
debug: Removing unused variable pay2%%AssetSender_length#0
debug: Removing unused variable pay2%%AssetReceiver_length#0
debug: Removing unused variable pay2%%AssetCloseTo_length#0
debug: Removing unused variable pay2%%ApplicationID_length#0
debug: Removing unused variable pay2%%OnCompletion_length#0
debug: Removing unused variable pay2%%ApprovalProgram_length#0
debug: Removing unused variable pay2%%ClearStateProgram_length#0
debug: Removing unused variable pay2%%RekeyTo_length#0
debug: Removing unused variable pay2%%ConfigAsset_length#0
debug: Removing unused variable pay2%%ConfigAssetTotal_length#0
debug: Removing unused variable pay2%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay2%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay2%%ConfigAssetName_length#0
debug: Removing unused variable pay2%%ConfigAssetURL_length#0
debug: Removing unused variable pay2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay2%%ConfigAssetManager_length#0
debug: Removing unused variable pay2%%ConfigAssetReserve_length#0
debug: Removing unused variable pay2%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay2%%ConfigAssetClawback_length#0
debug: Removing unused variable pay2%%FreezeAsset_length#0
debug: Removing unused variable pay2%%FreezeAssetAccount_length#0
debug: Removing unused variable pay2%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay2%%GlobalNumUint_length#0
debug: Removing unused variable pay2%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay2%%LocalNumUint_length#0
debug: Removing unused variable pay2%%LocalNumByteSlice_length#0
debug: Removing unused variable pay2%%ExtraProgramPages_length#0
debug: Removing unused variable pay2%%Nonparticipation_length#0
debug: Removing unused variable pay2%%StateProofPK_length#0
debug: Removing unused variable pay2%%ApplicationArgs_length#0
debug: Removing unused variable pay2%%Accounts_length#0
debug: Removing unused variable pay2%%Assets_length#0
debug: Removing unused variable pay2%%Applications_length#0
debug: Removing unused variable pay2%%ApprovalProgramPages_length#0
debug: Removing unused variable pay2%%ClearStateProgramPages_length#0
debug: Removing unused variable pay2#0
debug: Removing unused variable pay2%%param_Note_idx_0#1
debug: Removing unused variable pay2%%Note_length#1
debug: Removing unused variable pay3%%Sender_length#0
debug: Removing unused variable pay3%%param_Fee_idx_0#0
debug: Removing unused variable pay3%%Fee_length#0
debug: Removing unused variable pay3%%param_Note_idx_0#0
debug: Removing unused variable pay3%%Note_length#0
debug: Removing unused variable pay3%%Receiver_length#0
debug: Removing unused variable pay3%%param_Amount_idx_0#0
debug: Removing unused variable pay3%%Amount_length#0
debug: Removing unused variable pay3%%CloseRemainderTo_length#0
debug: Removing unused variable pay3%%VotePK_length#0
debug: Removing unused variable pay3%%SelectionPK_length#0
debug: Removing unused variable pay3%%VoteFirst_length#0
debug: Removing unused variable pay3%%VoteLast_length#0
debug: Removing unused variable pay3%%VoteKeyDilution_length#0
debug: Removing unused variable pay3%%Type_length#0
debug: Removing unused variable pay3%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay3%%TypeEnum_length#0
debug: Removing unused variable pay3%%XferAsset_length#0
debug: Removing unused variable pay3%%AssetAmount_length#0
debug: Removing unused variable pay3%%AssetSender_length#0
debug: Removing unused variable pay3%%AssetReceiver_length#0
debug: Removing unused variable pay3%%AssetCloseTo_length#0
debug: Removing unused variable pay3%%ApplicationID_length#0
debug: Removing unused variable pay3%%OnCompletion_length#0
debug: Removing unused variable pay3%%ApprovalProgram_length#0
debug: Removing unused variable pay3%%ClearStateProgram_length#0
debug: Removing unused variable pay3%%RekeyTo_length#0
debug: Removing unused variable pay3%%ConfigAsset_length#0
debug: Removing unused variable pay3%%ConfigAssetTotal_length#0
debug: Removing unused variable pay3%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay3%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay3%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay3%%ConfigAssetName_length#0
debug: Removing unused variable pay3%%ConfigAssetURL_length#0
debug: Removing unused variable pay3%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay3%%ConfigAssetManager_length#0
debug: Removing unused variable pay3%%ConfigAssetReserve_length#0
debug: Removing unused variable pay3%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay3%%ConfigAssetClawback_length#0
debug: Removing unused variable pay3%%FreezeAsset_length#0
debug: Removing unused variable pay3%%FreezeAssetAccount_length#0
debug: Removing unused variable pay3%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay3%%GlobalNumUint_length#0
debug: Removing unused variable pay3%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay3%%LocalNumUint_length#0
debug: Removing unused variable pay3%%LocalNumByteSlice_length#0
debug: Removing unused variable pay3%%ExtraProgramPages_length#0
debug: Removing unused variable pay3%%Nonparticipation_length#0
debug: Removing unused variable pay3%%StateProofPK_length#0
debug: Removing unused variable pay3%%ApplicationArgs_length#0
debug: Removing unused variable pay3%%Accounts_length#0
debug: Removing unused variable pay3%%Assets_length#0
debug: Removing unused variable pay3%%Applications_length#0
debug: Removing unused variable pay3%%ApprovalProgramPages_length#0
debug: Removing unused variable pay3%%ClearStateProgramPages_length#0
debug: Removing unused variable pay3#0
debug: Removing unused variable pay3%%param_Note_idx_0#1
debug: Removing unused variable pay3%%Note_length#1
debug: Removing unused variable sliced_txns.0#0
debug: Removing unused variable sliced_txns.1#0
debug: Removing unused variable sliced_txns.0._is_last#0
debug: Removing unused variable sliced_txns.0.Sender#0
debug: Removing unused variable sliced_txns.0.Fee#0
debug: Removing unused variable sliced_txns.0.FirstValid#0
debug: Removing unused variable sliced_txns.0.FirstValidTime#0
debug: Removing unused variable sliced_txns.0.LastValid#0
debug: Removing unused variable sliced_txns.0.Lease#0
debug: Removing unused variable sliced_txns.0.Receiver#0
debug: Removing unused variable sliced_txns.0.Amount#0
debug: Removing unused variable sliced_txns.0.CloseRemainderTo#0
debug: Removing unused variable sliced_txns.0.VotePK#0
debug: Removing unused variable sliced_txns.0.SelectionPK#0
debug: Removing unused variable sliced_txns.0.VoteFirst#0
debug: Removing unused variable sliced_txns.0.VoteLast#0
debug: Removing unused variable sliced_txns.0.VoteKeyDilution#0
debug: Removing unused variable sliced_txns.0.Type#0
debug: Removing unused variable sliced_txns.0.TypeEnum#0
debug: Removing unused variable sliced_txns.0.XferAsset#0
debug: Removing unused variable sliced_txns.0.AssetAmount#0
debug: Removing unused variable sliced_txns.0.AssetSender#0
debug: Removing unused variable sliced_txns.0.AssetReceiver#0
debug: Removing unused variable sliced_txns.0.AssetCloseTo#0
debug: Removing unused variable sliced_txns.0.GroupIndex#0
debug: Removing unused variable sliced_txns.0.TxID#0
debug: Removing unused variable sliced_txns.0.ApplicationID#0
debug: Removing unused variable sliced_txns.0.OnCompletion#0
debug: Removing unused variable sliced_txns.0.NumAppArgs#0
debug: Removing unused variable sliced_txns.0.NumAccounts#0
debug: Removing unused variable sliced_txns.0.ApprovalProgram#0
debug: Removing unused variable sliced_txns.0.ClearStateProgram#0
debug: Removing unused variable sliced_txns.0.RekeyTo#0
debug: Removing unused variable sliced_txns.0.ConfigAsset#0
debug: Removing unused variable sliced_txns.0.ConfigAssetTotal#0
debug: Removing unused variable sliced_txns.0.ConfigAssetDecimals#0
debug: Removing unused variable sliced_txns.0.ConfigAssetDefaultFrozen#0
debug: Removing unused variable sliced_txns.0.ConfigAssetUnitName#0
debug: Removing unused variable sliced_txns.0.ConfigAssetName#0
debug: Removing unused variable sliced_txns.0.ConfigAssetURL#0
debug: Removing unused variable sliced_txns.0.ConfigAssetMetadataHash#0
debug: Removing unused variable sliced_txns.0.ConfigAssetManager#0
debug: Removing unused variable sliced_txns.0.ConfigAssetReserve#0
debug: Removing unused variable sliced_txns.0.ConfigAssetFreeze#0
debug: Removing unused variable sliced_txns.0.ConfigAssetClawback#0
debug: Removing unused variable sliced_txns.0.FreezeAsset#0
debug: Removing unused variable sliced_txns.0.FreezeAssetAccount#0
debug: Removing unused variable sliced_txns.0.FreezeAssetFrozen#0
debug: Removing unused variable sliced_txns.0.NumAssets#0
debug: Removing unused variable sliced_txns.0.NumApplications#0
debug: Removing unused variable sliced_txns.0.GlobalNumUint#0
debug: Removing unused variable sliced_txns.0.GlobalNumByteSlice#0
debug: Removing unused variable sliced_txns.0.LocalNumUint#0
debug: Removing unused variable sliced_txns.0.LocalNumByteSlice#0
debug: Removing unused variable sliced_txns.0.ExtraProgramPages#0
debug: Removing unused variable sliced_txns.0.Nonparticipation#0
debug: Removing unused variable sliced_txns.0.NumLogs#0
debug: Removing unused variable sliced_txns.0.CreatedAssetID#0
debug: Removing unused variable sliced_txns.0.CreatedApplicationID#0
debug: Removing unused variable sliced_txns.0.LastLog#0
debug: Removing unused variable sliced_txns.0.StateProofPK#0
debug: Removing unused variable sliced_txns.0.NumApprovalProgramPages#0
debug: Removing unused variable sliced_txns.0.NumClearStateProgramPages#0
debug: Removing unused variable sliced_txns.1._is_last#0
debug: Removing unused variable sliced_txns.1.Sender#0
debug: Removing unused variable sliced_txns.1.Fee#0
debug: Removing unused variable sliced_txns.1.FirstValid#0
debug: Removing unused variable sliced_txns.1.FirstValidTime#0
debug: Removing unused variable sliced_txns.1.LastValid#0
debug: Removing unused variable sliced_txns.1.Lease#0
debug: Removing unused variable sliced_txns.1.Receiver#0
debug: Removing unused variable sliced_txns.1.Amount#0
debug: Removing unused variable sliced_txns.1.CloseRemainderTo#0
debug: Removing unused variable sliced_txns.1.VotePK#0
debug: Removing unused variable sliced_txns.1.SelectionPK#0
debug: Removing unused variable sliced_txns.1.VoteFirst#0
debug: Removing unused variable sliced_txns.1.VoteLast#0
debug: Removing unused variable sliced_txns.1.VoteKeyDilution#0
debug: Removing unused variable sliced_txns.1.Type#0
debug: Removing unused variable sliced_txns.1.TypeEnum#0
debug: Removing unused variable sliced_txns.1.XferAsset#0
debug: Removing unused variable sliced_txns.1.AssetAmount#0
debug: Removing unused variable sliced_txns.1.AssetSender#0
debug: Removing unused variable sliced_txns.1.AssetReceiver#0
debug: Removing unused variable sliced_txns.1.AssetCloseTo#0
debug: Removing unused variable sliced_txns.1.GroupIndex#0
debug: Removing unused variable sliced_txns.1.TxID#0
debug: Removing unused variable sliced_txns.1.ApplicationID#0
debug: Removing unused variable sliced_txns.1.OnCompletion#0
debug: Removing unused variable sliced_txns.1.NumAppArgs#0
debug: Removing unused variable sliced_txns.1.NumAccounts#0
debug: Removing unused variable sliced_txns.1.ApprovalProgram#0
debug: Removing unused variable sliced_txns.1.ClearStateProgram#0
debug: Removing unused variable sliced_txns.1.RekeyTo#0
debug: Removing unused variable sliced_txns.1.ConfigAsset#0
debug: Removing unused variable sliced_txns.1.ConfigAssetTotal#0
debug: Removing unused variable sliced_txns.1.ConfigAssetDecimals#0
debug: Removing unused variable sliced_txns.1.ConfigAssetDefaultFrozen#0
debug: Removing unused variable sliced_txns.1.ConfigAssetUnitName#0
debug: Removing unused variable sliced_txns.1.ConfigAssetName#0
debug: Removing unused variable sliced_txns.1.ConfigAssetURL#0
debug: Removing unused variable sliced_txns.1.ConfigAssetMetadataHash#0
debug: Removing unused variable sliced_txns.1.ConfigAssetManager#0
debug: Removing unused variable sliced_txns.1.ConfigAssetReserve#0
debug: Removing unused variable sliced_txns.1.ConfigAssetFreeze#0
debug: Removing unused variable sliced_txns.1.ConfigAssetClawback#0
debug: Removing unused variable sliced_txns.1.FreezeAsset#0
debug: Removing unused variable sliced_txns.1.FreezeAssetAccount#0
debug: Removing unused variable sliced_txns.1.FreezeAssetFrozen#0
debug: Removing unused variable sliced_txns.1.NumAssets#0
debug: Removing unused variable sliced_txns.1.NumApplications#0
debug: Removing unused variable sliced_txns.1.GlobalNumUint#0
debug: Removing unused variable sliced_txns.1.GlobalNumByteSlice#0
debug: Removing unused variable sliced_txns.1.LocalNumUint#0
debug: Removing unused variable sliced_txns.1.LocalNumByteSlice#0
debug: Removing unused variable sliced_txns.1.ExtraProgramPages#0
debug: Removing unused variable sliced_txns.1.Nonparticipation#0
debug: Removing unused variable sliced_txns.1.NumLogs#0
debug: Removing unused variable sliced_txns.1.CreatedAssetID#0
debug: Removing unused variable sliced_txns.1.CreatedApplicationID#0
debug: Removing unused variable sliced_txns.1.LastLog#0
debug: Removing unused variable sliced_txns.1.StateProofPK#0
debug: Removing unused variable sliced_txns.1.NumApprovalProgramPages#0
debug: Removing unused variable sliced_txns.1.NumClearStateProgramPages#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Merged linear block@4 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Perform Subroutine Inlining
inner_transactions_assignment/contract.py:61:17 debug: inlining call to test_cases.inner_transactions_assignment.contract.echo in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
inner_transactions_assignment/contract.py:59:17 debug: inlining call to test_cases.inner_transactions_assignment.contract.echo in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
inner_transactions_assignment/contract.py:45:13 debug: inlining call to test_cases.inner_transactions_assignment.contract.echo in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
inner_transactions_assignment/contract.py:57:12 debug: inlining call to test_cases.inner_transactions_assignment.contract.echo in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
inner_transactions_assignment/contract.py:43:13 debug: inlining call to test_cases.inner_transactions_assignment.contract.echo in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Found equivalence set: pay1%%param_Receiver_idx_0#0, pay2%%param_Receiver_idx_0#0, pay3%%param_Receiver_idx_0#0
debug: selected pay1%%param_Receiver_idx_0#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Sender#0, nested_tuple_copy.1.0.Sender#0, mish_mash.0.Sender#0
debug: selected nested_tuple.1.0.Sender#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Fee#0, nested_tuple_copy.1.0.Fee#0, mish_mash.0.Fee#0
debug: selected nested_tuple.1.0.Fee#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FirstValid#0, nested_tuple_copy.1.0.FirstValid#0, mish_mash.0.FirstValid#0
debug: selected nested_tuple.1.0.FirstValid#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FirstValidTime#0, nested_tuple_copy.1.0.FirstValidTime#0, mish_mash.0.FirstValidTime#0
debug: selected nested_tuple.1.0.FirstValidTime#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LastValid#0, nested_tuple_copy.1.0.LastValid#0, mish_mash.0.LastValid#0
debug: selected nested_tuple.1.0.LastValid#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Note#0, nested_tuple_copy.1.0.Note#0, mish_mash.0.Note#0
debug: selected nested_tuple.1.0.Note#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Lease#0, nested_tuple_copy.1.0.Lease#0, mish_mash.0.Lease#0
debug: selected nested_tuple.1.0.Lease#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Receiver#0, nested_tuple_copy.1.0.Receiver#0, mish_mash.0.Receiver#0
debug: selected nested_tuple.1.0.Receiver#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Amount#0, nested_tuple_copy.1.0.Amount#0, mish_mash.0.Amount#0
debug: selected nested_tuple.1.0.Amount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CloseRemainderTo#0, nested_tuple_copy.1.0.CloseRemainderTo#0, mish_mash.0.CloseRemainderTo#0
debug: selected nested_tuple.1.0.CloseRemainderTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VotePK#0, nested_tuple_copy.1.0.VotePK#0, mish_mash.0.VotePK#0
debug: selected nested_tuple.1.0.VotePK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.SelectionPK#0, nested_tuple_copy.1.0.SelectionPK#0, mish_mash.0.SelectionPK#0
debug: selected nested_tuple.1.0.SelectionPK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteFirst#0, nested_tuple_copy.1.0.VoteFirst#0, mish_mash.0.VoteFirst#0
debug: selected nested_tuple.1.0.VoteFirst#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteLast#0, nested_tuple_copy.1.0.VoteLast#0, mish_mash.0.VoteLast#0
debug: selected nested_tuple.1.0.VoteLast#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteKeyDilution#0, nested_tuple_copy.1.0.VoteKeyDilution#0, mish_mash.0.VoteKeyDilution#0
debug: selected nested_tuple.1.0.VoteKeyDilution#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Type#0, nested_tuple_copy.1.0.Type#0, mish_mash.0.Type#0
debug: selected nested_tuple.1.0.Type#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.TypeEnum#0, nested_tuple_copy.1.0.TypeEnum#0, mish_mash.0.TypeEnum#0
debug: selected nested_tuple.1.0.TypeEnum#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.XferAsset#0, nested_tuple_copy.1.0.XferAsset#0, mish_mash.0.XferAsset#0
debug: selected nested_tuple.1.0.XferAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetAmount#0, nested_tuple_copy.1.0.AssetAmount#0, mish_mash.0.AssetAmount#0
debug: selected nested_tuple.1.0.AssetAmount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetSender#0, nested_tuple_copy.1.0.AssetSender#0, mish_mash.0.AssetSender#0
debug: selected nested_tuple.1.0.AssetSender#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetReceiver#0, nested_tuple_copy.1.0.AssetReceiver#0, mish_mash.0.AssetReceiver#0
debug: selected nested_tuple.1.0.AssetReceiver#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetCloseTo#0, nested_tuple_copy.1.0.AssetCloseTo#0, mish_mash.0.AssetCloseTo#0
debug: selected nested_tuple.1.0.AssetCloseTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GroupIndex#0, nested_tuple_copy.1.0.GroupIndex#0, mish_mash.0.GroupIndex#0
debug: selected nested_tuple.1.0.GroupIndex#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.TxID#0, nested_tuple_copy.1.0.TxID#0, mish_mash.0.TxID#0
debug: selected nested_tuple.1.0.TxID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ApplicationID#0, nested_tuple_copy.1.0.ApplicationID#0, mish_mash.0.ApplicationID#0
debug: selected nested_tuple.1.0.ApplicationID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.OnCompletion#0, nested_tuple_copy.1.0.OnCompletion#0, mish_mash.0.OnCompletion#0
debug: selected nested_tuple.1.0.OnCompletion#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAppArgs#0, nested_tuple_copy.1.0.NumAppArgs#0, mish_mash.0.NumAppArgs#0
debug: selected nested_tuple.1.0.NumAppArgs#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAccounts#0, nested_tuple_copy.1.0.NumAccounts#0, mish_mash.0.NumAccounts#0
debug: selected nested_tuple.1.0.NumAccounts#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ApprovalProgram#0, nested_tuple_copy.1.0.ApprovalProgram#0, mish_mash.0.ApprovalProgram#0
debug: selected nested_tuple.1.0.ApprovalProgram#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ClearStateProgram#0, nested_tuple_copy.1.0.ClearStateProgram#0, mish_mash.0.ClearStateProgram#0
debug: selected nested_tuple.1.0.ClearStateProgram#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.RekeyTo#0, nested_tuple_copy.1.0.RekeyTo#0, mish_mash.0.RekeyTo#0
debug: selected nested_tuple.1.0.RekeyTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAsset#0, nested_tuple_copy.1.0.ConfigAsset#0, mish_mash.0.ConfigAsset#0
debug: selected nested_tuple.1.0.ConfigAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetTotal#0, nested_tuple_copy.1.0.ConfigAssetTotal#0, mish_mash.0.ConfigAssetTotal#0
debug: selected nested_tuple.1.0.ConfigAssetTotal#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetDecimals#0, nested_tuple_copy.1.0.ConfigAssetDecimals#0, mish_mash.0.ConfigAssetDecimals#0
debug: selected nested_tuple.1.0.ConfigAssetDecimals#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetDefaultFrozen#0, nested_tuple_copy.1.0.ConfigAssetDefaultFrozen#0, mish_mash.0.ConfigAssetDefaultFrozen#0
debug: selected nested_tuple.1.0.ConfigAssetDefaultFrozen#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetUnitName#0, nested_tuple_copy.1.0.ConfigAssetUnitName#0, mish_mash.0.ConfigAssetUnitName#0
debug: selected nested_tuple.1.0.ConfigAssetUnitName#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetName#0, nested_tuple_copy.1.0.ConfigAssetName#0, mish_mash.0.ConfigAssetName#0
debug: selected nested_tuple.1.0.ConfigAssetName#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetURL#0, nested_tuple_copy.1.0.ConfigAssetURL#0, mish_mash.0.ConfigAssetURL#0
debug: selected nested_tuple.1.0.ConfigAssetURL#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetMetadataHash#0, nested_tuple_copy.1.0.ConfigAssetMetadataHash#0, mish_mash.0.ConfigAssetMetadataHash#0
debug: selected nested_tuple.1.0.ConfigAssetMetadataHash#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetManager#0, nested_tuple_copy.1.0.ConfigAssetManager#0, mish_mash.0.ConfigAssetManager#0
debug: selected nested_tuple.1.0.ConfigAssetManager#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetReserve#0, nested_tuple_copy.1.0.ConfigAssetReserve#0, mish_mash.0.ConfigAssetReserve#0
debug: selected nested_tuple.1.0.ConfigAssetReserve#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetFreeze#0, nested_tuple_copy.1.0.ConfigAssetFreeze#0, mish_mash.0.ConfigAssetFreeze#0
debug: selected nested_tuple.1.0.ConfigAssetFreeze#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetClawback#0, nested_tuple_copy.1.0.ConfigAssetClawback#0, mish_mash.0.ConfigAssetClawback#0
debug: selected nested_tuple.1.0.ConfigAssetClawback#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAsset#0, nested_tuple_copy.1.0.FreezeAsset#0, mish_mash.0.FreezeAsset#0
debug: selected nested_tuple.1.0.FreezeAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAssetAccount#0, nested_tuple_copy.1.0.FreezeAssetAccount#0, mish_mash.0.FreezeAssetAccount#0
debug: selected nested_tuple.1.0.FreezeAssetAccount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAssetFrozen#0, nested_tuple_copy.1.0.FreezeAssetFrozen#0, mish_mash.0.FreezeAssetFrozen#0
debug: selected nested_tuple.1.0.FreezeAssetFrozen#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAssets#0, nested_tuple_copy.1.0.NumAssets#0, mish_mash.0.NumAssets#0
debug: selected nested_tuple.1.0.NumAssets#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumApplications#0, nested_tuple_copy.1.0.NumApplications#0, mish_mash.0.NumApplications#0
debug: selected nested_tuple.1.0.NumApplications#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GlobalNumUint#0, nested_tuple_copy.1.0.GlobalNumUint#0, mish_mash.0.GlobalNumUint#0
debug: selected nested_tuple.1.0.GlobalNumUint#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GlobalNumByteSlice#0, nested_tuple_copy.1.0.GlobalNumByteSlice#0, mish_mash.0.GlobalNumByteSlice#0
debug: selected nested_tuple.1.0.GlobalNumByteSlice#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LocalNumUint#0, nested_tuple_copy.1.0.LocalNumUint#0, mish_mash.0.LocalNumUint#0
debug: selected nested_tuple.1.0.LocalNumUint#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LocalNumByteSlice#0, nested_tuple_copy.1.0.LocalNumByteSlice#0, mish_mash.0.LocalNumByteSlice#0
debug: selected nested_tuple.1.0.LocalNumByteSlice#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ExtraProgramPages#0, nested_tuple_copy.1.0.ExtraProgramPages#0, mish_mash.0.ExtraProgramPages#0
debug: selected nested_tuple.1.0.ExtraProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Nonparticipation#0, nested_tuple_copy.1.0.Nonparticipation#0, mish_mash.0.Nonparticipation#0
debug: selected nested_tuple.1.0.Nonparticipation#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumLogs#0, nested_tuple_copy.1.0.NumLogs#0, mish_mash.0.NumLogs#0
debug: selected nested_tuple.1.0.NumLogs#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CreatedAssetID#0, nested_tuple_copy.1.0.CreatedAssetID#0, mish_mash.0.CreatedAssetID#0
debug: selected nested_tuple.1.0.CreatedAssetID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CreatedApplicationID#0, nested_tuple_copy.1.0.CreatedApplicationID#0, mish_mash.0.CreatedApplicationID#0
debug: selected nested_tuple.1.0.CreatedApplicationID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LastLog#0, nested_tuple_copy.1.0.LastLog#0, mish_mash.0.LastLog#0
debug: selected nested_tuple.1.0.LastLog#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.StateProofPK#0, nested_tuple_copy.1.0.StateProofPK#0, mish_mash.0.StateProofPK#0
debug: selected nested_tuple.1.0.StateProofPK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumApprovalProgramPages#0, nested_tuple_copy.1.0.NumApprovalProgramPages#0, mish_mash.0.NumApprovalProgramPages#0
debug: selected nested_tuple.1.0.NumApprovalProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumClearStateProgramPages#0, nested_tuple_copy.1.0.NumClearStateProgramPages#0, mish_mash.0.NumClearStateProgramPages#0
debug: selected nested_tuple.1.0.NumClearStateProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Sender#0, nested_tuple_copy.1.1.Sender#0, mish_mash.1.Sender#0
debug: selected nested_tuple.1.1.Sender#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Fee#0, nested_tuple_copy.1.1.Fee#0, mish_mash.1.Fee#0
debug: selected nested_tuple.1.1.Fee#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FirstValid#0, nested_tuple_copy.1.1.FirstValid#0, mish_mash.1.FirstValid#0
debug: selected nested_tuple.1.1.FirstValid#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FirstValidTime#0, nested_tuple_copy.1.1.FirstValidTime#0, mish_mash.1.FirstValidTime#0
debug: selected nested_tuple.1.1.FirstValidTime#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LastValid#0, nested_tuple_copy.1.1.LastValid#0, mish_mash.1.LastValid#0
debug: selected nested_tuple.1.1.LastValid#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Note#0, nested_tuple_copy.1.1.Note#0, mish_mash.1.Note#0
debug: selected nested_tuple.1.1.Note#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Lease#0, nested_tuple_copy.1.1.Lease#0, mish_mash.1.Lease#0
debug: selected nested_tuple.1.1.Lease#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Receiver#0, nested_tuple_copy.1.1.Receiver#0, mish_mash.1.Receiver#0
debug: selected nested_tuple.1.1.Receiver#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Amount#0, nested_tuple_copy.1.1.Amount#0, mish_mash.1.Amount#0
debug: selected nested_tuple.1.1.Amount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CloseRemainderTo#0, nested_tuple_copy.1.1.CloseRemainderTo#0, mish_mash.1.CloseRemainderTo#0
debug: selected nested_tuple.1.1.CloseRemainderTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VotePK#0, nested_tuple_copy.1.1.VotePK#0, mish_mash.1.VotePK#0
debug: selected nested_tuple.1.1.VotePK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.SelectionPK#0, nested_tuple_copy.1.1.SelectionPK#0, mish_mash.1.SelectionPK#0
debug: selected nested_tuple.1.1.SelectionPK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteFirst#0, nested_tuple_copy.1.1.VoteFirst#0, mish_mash.1.VoteFirst#0
debug: selected nested_tuple.1.1.VoteFirst#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteLast#0, nested_tuple_copy.1.1.VoteLast#0, mish_mash.1.VoteLast#0
debug: selected nested_tuple.1.1.VoteLast#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteKeyDilution#0, nested_tuple_copy.1.1.VoteKeyDilution#0, mish_mash.1.VoteKeyDilution#0
debug: selected nested_tuple.1.1.VoteKeyDilution#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Type#0, nested_tuple_copy.1.1.Type#0, mish_mash.1.Type#0
debug: selected nested_tuple.1.1.Type#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.TypeEnum#0, nested_tuple_copy.1.1.TypeEnum#0, mish_mash.1.TypeEnum#0
debug: selected nested_tuple.1.1.TypeEnum#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.XferAsset#0, nested_tuple_copy.1.1.XferAsset#0, mish_mash.1.XferAsset#0
debug: selected nested_tuple.1.1.XferAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetAmount#0, nested_tuple_copy.1.1.AssetAmount#0, mish_mash.1.AssetAmount#0
debug: selected nested_tuple.1.1.AssetAmount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetSender#0, nested_tuple_copy.1.1.AssetSender#0, mish_mash.1.AssetSender#0
debug: selected nested_tuple.1.1.AssetSender#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetReceiver#0, nested_tuple_copy.1.1.AssetReceiver#0, mish_mash.1.AssetReceiver#0
debug: selected nested_tuple.1.1.AssetReceiver#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetCloseTo#0, nested_tuple_copy.1.1.AssetCloseTo#0, mish_mash.1.AssetCloseTo#0
debug: selected nested_tuple.1.1.AssetCloseTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GroupIndex#0, nested_tuple_copy.1.1.GroupIndex#0, mish_mash.1.GroupIndex#0
debug: selected nested_tuple.1.1.GroupIndex#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.TxID#0, nested_tuple_copy.1.1.TxID#0, mish_mash.1.TxID#0
debug: selected nested_tuple.1.1.TxID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ApplicationID#0, nested_tuple_copy.1.1.ApplicationID#0, mish_mash.1.ApplicationID#0
debug: selected nested_tuple.1.1.ApplicationID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.OnCompletion#0, nested_tuple_copy.1.1.OnCompletion#0, mish_mash.1.OnCompletion#0
debug: selected nested_tuple.1.1.OnCompletion#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAppArgs#0, nested_tuple_copy.1.1.NumAppArgs#0, mish_mash.1.NumAppArgs#0
debug: selected nested_tuple.1.1.NumAppArgs#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAccounts#0, nested_tuple_copy.1.1.NumAccounts#0, mish_mash.1.NumAccounts#0
debug: selected nested_tuple.1.1.NumAccounts#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ApprovalProgram#0, nested_tuple_copy.1.1.ApprovalProgram#0, mish_mash.1.ApprovalProgram#0
debug: selected nested_tuple.1.1.ApprovalProgram#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ClearStateProgram#0, nested_tuple_copy.1.1.ClearStateProgram#0, mish_mash.1.ClearStateProgram#0
debug: selected nested_tuple.1.1.ClearStateProgram#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.RekeyTo#0, nested_tuple_copy.1.1.RekeyTo#0, mish_mash.1.RekeyTo#0
debug: selected nested_tuple.1.1.RekeyTo#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAsset#0, nested_tuple_copy.1.1.ConfigAsset#0, mish_mash.1.ConfigAsset#0
debug: selected nested_tuple.1.1.ConfigAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetTotal#0, nested_tuple_copy.1.1.ConfigAssetTotal#0, mish_mash.1.ConfigAssetTotal#0
debug: selected nested_tuple.1.1.ConfigAssetTotal#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetDecimals#0, nested_tuple_copy.1.1.ConfigAssetDecimals#0, mish_mash.1.ConfigAssetDecimals#0
debug: selected nested_tuple.1.1.ConfigAssetDecimals#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetDefaultFrozen#0, nested_tuple_copy.1.1.ConfigAssetDefaultFrozen#0, mish_mash.1.ConfigAssetDefaultFrozen#0
debug: selected nested_tuple.1.1.ConfigAssetDefaultFrozen#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetUnitName#0, nested_tuple_copy.1.1.ConfigAssetUnitName#0, mish_mash.1.ConfigAssetUnitName#0
debug: selected nested_tuple.1.1.ConfigAssetUnitName#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetName#0, nested_tuple_copy.1.1.ConfigAssetName#0, mish_mash.1.ConfigAssetName#0
debug: selected nested_tuple.1.1.ConfigAssetName#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetURL#0, nested_tuple_copy.1.1.ConfigAssetURL#0, mish_mash.1.ConfigAssetURL#0
debug: selected nested_tuple.1.1.ConfigAssetURL#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetMetadataHash#0, nested_tuple_copy.1.1.ConfigAssetMetadataHash#0, mish_mash.1.ConfigAssetMetadataHash#0
debug: selected nested_tuple.1.1.ConfigAssetMetadataHash#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetManager#0, nested_tuple_copy.1.1.ConfigAssetManager#0, mish_mash.1.ConfigAssetManager#0
debug: selected nested_tuple.1.1.ConfigAssetManager#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetReserve#0, nested_tuple_copy.1.1.ConfigAssetReserve#0, mish_mash.1.ConfigAssetReserve#0
debug: selected nested_tuple.1.1.ConfigAssetReserve#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetFreeze#0, nested_tuple_copy.1.1.ConfigAssetFreeze#0, mish_mash.1.ConfigAssetFreeze#0
debug: selected nested_tuple.1.1.ConfigAssetFreeze#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetClawback#0, nested_tuple_copy.1.1.ConfigAssetClawback#0, mish_mash.1.ConfigAssetClawback#0
debug: selected nested_tuple.1.1.ConfigAssetClawback#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAsset#0, nested_tuple_copy.1.1.FreezeAsset#0, mish_mash.1.FreezeAsset#0
debug: selected nested_tuple.1.1.FreezeAsset#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAssetAccount#0, nested_tuple_copy.1.1.FreezeAssetAccount#0, mish_mash.1.FreezeAssetAccount#0
debug: selected nested_tuple.1.1.FreezeAssetAccount#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAssetFrozen#0, nested_tuple_copy.1.1.FreezeAssetFrozen#0, mish_mash.1.FreezeAssetFrozen#0
debug: selected nested_tuple.1.1.FreezeAssetFrozen#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAssets#0, nested_tuple_copy.1.1.NumAssets#0, mish_mash.1.NumAssets#0
debug: selected nested_tuple.1.1.NumAssets#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumApplications#0, nested_tuple_copy.1.1.NumApplications#0, mish_mash.1.NumApplications#0
debug: selected nested_tuple.1.1.NumApplications#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GlobalNumUint#0, nested_tuple_copy.1.1.GlobalNumUint#0, mish_mash.1.GlobalNumUint#0
debug: selected nested_tuple.1.1.GlobalNumUint#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GlobalNumByteSlice#0, nested_tuple_copy.1.1.GlobalNumByteSlice#0, mish_mash.1.GlobalNumByteSlice#0
debug: selected nested_tuple.1.1.GlobalNumByteSlice#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LocalNumUint#0, nested_tuple_copy.1.1.LocalNumUint#0, mish_mash.1.LocalNumUint#0
debug: selected nested_tuple.1.1.LocalNumUint#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LocalNumByteSlice#0, nested_tuple_copy.1.1.LocalNumByteSlice#0, mish_mash.1.LocalNumByteSlice#0
debug: selected nested_tuple.1.1.LocalNumByteSlice#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ExtraProgramPages#0, nested_tuple_copy.1.1.ExtraProgramPages#0, mish_mash.1.ExtraProgramPages#0
debug: selected nested_tuple.1.1.ExtraProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Nonparticipation#0, nested_tuple_copy.1.1.Nonparticipation#0, mish_mash.1.Nonparticipation#0
debug: selected nested_tuple.1.1.Nonparticipation#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumLogs#0, nested_tuple_copy.1.1.NumLogs#0, mish_mash.1.NumLogs#0
debug: selected nested_tuple.1.1.NumLogs#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CreatedAssetID#0, nested_tuple_copy.1.1.CreatedAssetID#0, mish_mash.1.CreatedAssetID#0
debug: selected nested_tuple.1.1.CreatedAssetID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CreatedApplicationID#0, nested_tuple_copy.1.1.CreatedApplicationID#0, mish_mash.1.CreatedApplicationID#0
debug: selected nested_tuple.1.1.CreatedApplicationID#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LastLog#0, nested_tuple_copy.1.1.LastLog#0, mish_mash.1.LastLog#0
debug: selected nested_tuple.1.1.LastLog#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.StateProofPK#0, nested_tuple_copy.1.1.StateProofPK#0, mish_mash.1.StateProofPK#0
debug: selected nested_tuple.1.1.StateProofPK#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumApprovalProgramPages#0, nested_tuple_copy.1.1.NumApprovalProgramPages#0, mish_mash.1.NumApprovalProgramPages#0
debug: selected nested_tuple.1.1.NumApprovalProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumClearStateProgramPages#0, nested_tuple_copy.1.1.NumClearStateProgramPages#0, mish_mash.1.NumClearStateProgramPages#0
debug: selected nested_tuple.1.1.NumClearStateProgramPages#0 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Sender#2, mish_mash.2.0.Sender#0
debug: selected nested_tuple.1.0.Sender#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Fee#2, mish_mash.2.0.Fee#0
debug: selected nested_tuple.1.0.Fee#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FirstValid#2, mish_mash.2.0.FirstValid#0
debug: selected nested_tuple.1.0.FirstValid#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FirstValidTime#2, mish_mash.2.0.FirstValidTime#0
debug: selected nested_tuple.1.0.FirstValidTime#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LastValid#2, mish_mash.2.0.LastValid#0
debug: selected nested_tuple.1.0.LastValid#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Note#2, mish_mash.2.0.Note#0
debug: selected nested_tuple.1.0.Note#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Lease#2, mish_mash.2.0.Lease#0
debug: selected nested_tuple.1.0.Lease#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Receiver#2, mish_mash.2.0.Receiver#0
debug: selected nested_tuple.1.0.Receiver#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Amount#2, mish_mash.2.0.Amount#0
debug: selected nested_tuple.1.0.Amount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CloseRemainderTo#2, mish_mash.2.0.CloseRemainderTo#0
debug: selected nested_tuple.1.0.CloseRemainderTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VotePK#2, mish_mash.2.0.VotePK#0
debug: selected nested_tuple.1.0.VotePK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.SelectionPK#2, mish_mash.2.0.SelectionPK#0
debug: selected nested_tuple.1.0.SelectionPK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteFirst#2, mish_mash.2.0.VoteFirst#0
debug: selected nested_tuple.1.0.VoteFirst#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteLast#2, mish_mash.2.0.VoteLast#0
debug: selected nested_tuple.1.0.VoteLast#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.VoteKeyDilution#2, mish_mash.2.0.VoteKeyDilution#0
debug: selected nested_tuple.1.0.VoteKeyDilution#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Type#2, mish_mash.2.0.Type#0
debug: selected nested_tuple.1.0.Type#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.TypeEnum#2, mish_mash.2.0.TypeEnum#0
debug: selected nested_tuple.1.0.TypeEnum#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.XferAsset#2, mish_mash.2.0.XferAsset#0
debug: selected nested_tuple.1.0.XferAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetAmount#2, mish_mash.2.0.AssetAmount#0
debug: selected nested_tuple.1.0.AssetAmount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetSender#2, mish_mash.2.0.AssetSender#0
debug: selected nested_tuple.1.0.AssetSender#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetReceiver#2, mish_mash.2.0.AssetReceiver#0
debug: selected nested_tuple.1.0.AssetReceiver#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.AssetCloseTo#2, mish_mash.2.0.AssetCloseTo#0
debug: selected nested_tuple.1.0.AssetCloseTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GroupIndex#2, mish_mash.2.0.GroupIndex#0
debug: selected nested_tuple.1.0.GroupIndex#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.TxID#2, mish_mash.2.0.TxID#0
debug: selected nested_tuple.1.0.TxID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ApplicationID#2, mish_mash.2.0.ApplicationID#0
debug: selected nested_tuple.1.0.ApplicationID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.OnCompletion#2, mish_mash.2.0.OnCompletion#0
debug: selected nested_tuple.1.0.OnCompletion#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAppArgs#2, mish_mash.2.0.NumAppArgs#0
debug: selected nested_tuple.1.0.NumAppArgs#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAccounts#2, mish_mash.2.0.NumAccounts#0
debug: selected nested_tuple.1.0.NumAccounts#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ApprovalProgram#2, mish_mash.2.0.ApprovalProgram#0
debug: selected nested_tuple.1.0.ApprovalProgram#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ClearStateProgram#2, mish_mash.2.0.ClearStateProgram#0
debug: selected nested_tuple.1.0.ClearStateProgram#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.RekeyTo#2, mish_mash.2.0.RekeyTo#0
debug: selected nested_tuple.1.0.RekeyTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAsset#2, mish_mash.2.0.ConfigAsset#0
debug: selected nested_tuple.1.0.ConfigAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetTotal#2, mish_mash.2.0.ConfigAssetTotal#0
debug: selected nested_tuple.1.0.ConfigAssetTotal#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetDecimals#2, mish_mash.2.0.ConfigAssetDecimals#0
debug: selected nested_tuple.1.0.ConfigAssetDecimals#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetDefaultFrozen#2, mish_mash.2.0.ConfigAssetDefaultFrozen#0
debug: selected nested_tuple.1.0.ConfigAssetDefaultFrozen#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetUnitName#2, mish_mash.2.0.ConfigAssetUnitName#0
debug: selected nested_tuple.1.0.ConfigAssetUnitName#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetName#2, mish_mash.2.0.ConfigAssetName#0
debug: selected nested_tuple.1.0.ConfigAssetName#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetURL#2, mish_mash.2.0.ConfigAssetURL#0
debug: selected nested_tuple.1.0.ConfigAssetURL#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetMetadataHash#2, mish_mash.2.0.ConfigAssetMetadataHash#0
debug: selected nested_tuple.1.0.ConfigAssetMetadataHash#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetManager#2, mish_mash.2.0.ConfigAssetManager#0
debug: selected nested_tuple.1.0.ConfigAssetManager#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetReserve#2, mish_mash.2.0.ConfigAssetReserve#0
debug: selected nested_tuple.1.0.ConfigAssetReserve#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetFreeze#2, mish_mash.2.0.ConfigAssetFreeze#0
debug: selected nested_tuple.1.0.ConfigAssetFreeze#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ConfigAssetClawback#2, mish_mash.2.0.ConfigAssetClawback#0
debug: selected nested_tuple.1.0.ConfigAssetClawback#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAsset#2, mish_mash.2.0.FreezeAsset#0
debug: selected nested_tuple.1.0.FreezeAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAssetAccount#2, mish_mash.2.0.FreezeAssetAccount#0
debug: selected nested_tuple.1.0.FreezeAssetAccount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.FreezeAssetFrozen#2, mish_mash.2.0.FreezeAssetFrozen#0
debug: selected nested_tuple.1.0.FreezeAssetFrozen#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumAssets#2, mish_mash.2.0.NumAssets#0
debug: selected nested_tuple.1.0.NumAssets#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumApplications#2, mish_mash.2.0.NumApplications#0
debug: selected nested_tuple.1.0.NumApplications#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GlobalNumUint#2, mish_mash.2.0.GlobalNumUint#0
debug: selected nested_tuple.1.0.GlobalNumUint#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.GlobalNumByteSlice#2, mish_mash.2.0.GlobalNumByteSlice#0
debug: selected nested_tuple.1.0.GlobalNumByteSlice#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LocalNumUint#2, mish_mash.2.0.LocalNumUint#0
debug: selected nested_tuple.1.0.LocalNumUint#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LocalNumByteSlice#2, mish_mash.2.0.LocalNumByteSlice#0
debug: selected nested_tuple.1.0.LocalNumByteSlice#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.ExtraProgramPages#2, mish_mash.2.0.ExtraProgramPages#0
debug: selected nested_tuple.1.0.ExtraProgramPages#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.Nonparticipation#2, mish_mash.2.0.Nonparticipation#0
debug: selected nested_tuple.1.0.Nonparticipation#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumLogs#2, mish_mash.2.0.NumLogs#0
debug: selected nested_tuple.1.0.NumLogs#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CreatedAssetID#2, mish_mash.2.0.CreatedAssetID#0
debug: selected nested_tuple.1.0.CreatedAssetID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.CreatedApplicationID#2, mish_mash.2.0.CreatedApplicationID#0
debug: selected nested_tuple.1.0.CreatedApplicationID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.LastLog#2, mish_mash.2.0.LastLog#0
debug: selected nested_tuple.1.0.LastLog#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.StateProofPK#2, mish_mash.2.0.StateProofPK#0
debug: selected nested_tuple.1.0.StateProofPK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumApprovalProgramPages#2, mish_mash.2.0.NumApprovalProgramPages#0
debug: selected nested_tuple.1.0.NumApprovalProgramPages#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.0.NumClearStateProgramPages#2, mish_mash.2.0.NumClearStateProgramPages#0
debug: selected nested_tuple.1.0.NumClearStateProgramPages#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Sender#2, mish_mash.2.1.Sender#0
debug: selected nested_tuple.1.1.Sender#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Fee#2, mish_mash.2.1.Fee#0
debug: selected nested_tuple.1.1.Fee#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FirstValid#2, mish_mash.2.1.FirstValid#0
debug: selected nested_tuple.1.1.FirstValid#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FirstValidTime#2, mish_mash.2.1.FirstValidTime#0
debug: selected nested_tuple.1.1.FirstValidTime#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LastValid#2, mish_mash.2.1.LastValid#0
debug: selected nested_tuple.1.1.LastValid#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Note#2, mish_mash.2.1.Note#0
debug: selected nested_tuple.1.1.Note#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Lease#2, mish_mash.2.1.Lease#0
debug: selected nested_tuple.1.1.Lease#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Receiver#2, mish_mash.2.1.Receiver#0
debug: selected nested_tuple.1.1.Receiver#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Amount#2, mish_mash.2.1.Amount#0
debug: selected nested_tuple.1.1.Amount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CloseRemainderTo#2, mish_mash.2.1.CloseRemainderTo#0
debug: selected nested_tuple.1.1.CloseRemainderTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VotePK#2, mish_mash.2.1.VotePK#0
debug: selected nested_tuple.1.1.VotePK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.SelectionPK#2, mish_mash.2.1.SelectionPK#0
debug: selected nested_tuple.1.1.SelectionPK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteFirst#2, mish_mash.2.1.VoteFirst#0
debug: selected nested_tuple.1.1.VoteFirst#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteLast#2, mish_mash.2.1.VoteLast#0
debug: selected nested_tuple.1.1.VoteLast#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.VoteKeyDilution#2, mish_mash.2.1.VoteKeyDilution#0
debug: selected nested_tuple.1.1.VoteKeyDilution#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Type#2, mish_mash.2.1.Type#0
debug: selected nested_tuple.1.1.Type#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.TypeEnum#2, mish_mash.2.1.TypeEnum#0
debug: selected nested_tuple.1.1.TypeEnum#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.XferAsset#2, mish_mash.2.1.XferAsset#0
debug: selected nested_tuple.1.1.XferAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetAmount#2, mish_mash.2.1.AssetAmount#0
debug: selected nested_tuple.1.1.AssetAmount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetSender#2, mish_mash.2.1.AssetSender#0
debug: selected nested_tuple.1.1.AssetSender#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetReceiver#2, mish_mash.2.1.AssetReceiver#0
debug: selected nested_tuple.1.1.AssetReceiver#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.AssetCloseTo#2, mish_mash.2.1.AssetCloseTo#0
debug: selected nested_tuple.1.1.AssetCloseTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GroupIndex#2, mish_mash.2.1.GroupIndex#0
debug: selected nested_tuple.1.1.GroupIndex#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.TxID#2, mish_mash.2.1.TxID#0
debug: selected nested_tuple.1.1.TxID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ApplicationID#2, mish_mash.2.1.ApplicationID#0
debug: selected nested_tuple.1.1.ApplicationID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.OnCompletion#2, mish_mash.2.1.OnCompletion#0
debug: selected nested_tuple.1.1.OnCompletion#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAppArgs#2, mish_mash.2.1.NumAppArgs#0
debug: selected nested_tuple.1.1.NumAppArgs#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAccounts#2, mish_mash.2.1.NumAccounts#0
debug: selected nested_tuple.1.1.NumAccounts#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ApprovalProgram#2, mish_mash.2.1.ApprovalProgram#0
debug: selected nested_tuple.1.1.ApprovalProgram#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ClearStateProgram#2, mish_mash.2.1.ClearStateProgram#0
debug: selected nested_tuple.1.1.ClearStateProgram#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.RekeyTo#2, mish_mash.2.1.RekeyTo#0
debug: selected nested_tuple.1.1.RekeyTo#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAsset#2, mish_mash.2.1.ConfigAsset#0
debug: selected nested_tuple.1.1.ConfigAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetTotal#2, mish_mash.2.1.ConfigAssetTotal#0
debug: selected nested_tuple.1.1.ConfigAssetTotal#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetDecimals#2, mish_mash.2.1.ConfigAssetDecimals#0
debug: selected nested_tuple.1.1.ConfigAssetDecimals#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetDefaultFrozen#2, mish_mash.2.1.ConfigAssetDefaultFrozen#0
debug: selected nested_tuple.1.1.ConfigAssetDefaultFrozen#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetUnitName#2, mish_mash.2.1.ConfigAssetUnitName#0
debug: selected nested_tuple.1.1.ConfigAssetUnitName#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetName#2, mish_mash.2.1.ConfigAssetName#0
debug: selected nested_tuple.1.1.ConfigAssetName#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetURL#2, mish_mash.2.1.ConfigAssetURL#0
debug: selected nested_tuple.1.1.ConfigAssetURL#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetMetadataHash#2, mish_mash.2.1.ConfigAssetMetadataHash#0
debug: selected nested_tuple.1.1.ConfigAssetMetadataHash#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetManager#2, mish_mash.2.1.ConfigAssetManager#0
debug: selected nested_tuple.1.1.ConfigAssetManager#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetReserve#2, mish_mash.2.1.ConfigAssetReserve#0
debug: selected nested_tuple.1.1.ConfigAssetReserve#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetFreeze#2, mish_mash.2.1.ConfigAssetFreeze#0
debug: selected nested_tuple.1.1.ConfigAssetFreeze#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ConfigAssetClawback#2, mish_mash.2.1.ConfigAssetClawback#0
debug: selected nested_tuple.1.1.ConfigAssetClawback#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAsset#2, mish_mash.2.1.FreezeAsset#0
debug: selected nested_tuple.1.1.FreezeAsset#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAssetAccount#2, mish_mash.2.1.FreezeAssetAccount#0
debug: selected nested_tuple.1.1.FreezeAssetAccount#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.FreezeAssetFrozen#2, mish_mash.2.1.FreezeAssetFrozen#0
debug: selected nested_tuple.1.1.FreezeAssetFrozen#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumAssets#2, mish_mash.2.1.NumAssets#0
debug: selected nested_tuple.1.1.NumAssets#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumApplications#2, mish_mash.2.1.NumApplications#0
debug: selected nested_tuple.1.1.NumApplications#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GlobalNumUint#2, mish_mash.2.1.GlobalNumUint#0
debug: selected nested_tuple.1.1.GlobalNumUint#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.GlobalNumByteSlice#2, mish_mash.2.1.GlobalNumByteSlice#0
debug: selected nested_tuple.1.1.GlobalNumByteSlice#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LocalNumUint#2, mish_mash.2.1.LocalNumUint#0
debug: selected nested_tuple.1.1.LocalNumUint#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LocalNumByteSlice#2, mish_mash.2.1.LocalNumByteSlice#0
debug: selected nested_tuple.1.1.LocalNumByteSlice#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.ExtraProgramPages#2, mish_mash.2.1.ExtraProgramPages#0
debug: selected nested_tuple.1.1.ExtraProgramPages#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.Nonparticipation#2, mish_mash.2.1.Nonparticipation#0
debug: selected nested_tuple.1.1.Nonparticipation#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumLogs#2, mish_mash.2.1.NumLogs#0
debug: selected nested_tuple.1.1.NumLogs#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CreatedAssetID#2, mish_mash.2.1.CreatedAssetID#0
debug: selected nested_tuple.1.1.CreatedAssetID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.CreatedApplicationID#2, mish_mash.2.1.CreatedApplicationID#0
debug: selected nested_tuple.1.1.CreatedApplicationID#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.LastLog#2, mish_mash.2.1.LastLog#0
debug: selected nested_tuple.1.1.LastLog#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.StateProofPK#2, mish_mash.2.1.StateProofPK#0
debug: selected nested_tuple.1.1.StateProofPK#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumApprovalProgramPages#2, mish_mash.2.1.NumApprovalProgramPages#0
debug: selected nested_tuple.1.1.NumApprovalProgramPages#2 from equivalence set
debug: Found equivalence set: nested_tuple.1.1.NumClearStateProgramPages#2, mish_mash.2.1.NumClearStateProgramPages#0
debug: selected nested_tuple.1.1.NumClearStateProgramPages#2 from equivalence set
debug: Copy propagation made 7 modifications
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nested_tuple.1.0#2
debug: Removing unused variable nested_tuple.1.1#2
debug: Removing unused variable nested_tuple.1.0.Sender#2
debug: Removing unused variable nested_tuple.1.0.Fee#2
debug: Removing unused variable nested_tuple.1.0.FirstValid#2
debug: Removing unused variable nested_tuple.1.0.FirstValidTime#2
debug: Removing unused variable nested_tuple.1.0.LastValid#2
debug: Removing unused variable nested_tuple.1.0.Lease#2
debug: Removing unused variable nested_tuple.1.0.Receiver#2
debug: Removing unused variable nested_tuple.1.0.Amount#2
debug: Removing unused variable nested_tuple.1.0.CloseRemainderTo#2
debug: Removing unused variable nested_tuple.1.0.VotePK#2
debug: Removing unused variable nested_tuple.1.0.SelectionPK#2
debug: Removing unused variable nested_tuple.1.0.VoteFirst#2
debug: Removing unused variable nested_tuple.1.0.VoteLast#2
debug: Removing unused variable nested_tuple.1.0.VoteKeyDilution#2
debug: Removing unused variable nested_tuple.1.0.Type#2
debug: Removing unused variable nested_tuple.1.0.TypeEnum#2
debug: Removing unused variable nested_tuple.1.0.XferAsset#2
debug: Removing unused variable nested_tuple.1.0.AssetAmount#2
debug: Removing unused variable nested_tuple.1.0.AssetSender#2
debug: Removing unused variable nested_tuple.1.0.AssetReceiver#2
debug: Removing unused variable nested_tuple.1.0.AssetCloseTo#2
debug: Removing unused variable nested_tuple.1.0.GroupIndex#2
debug: Removing unused variable nested_tuple.1.0.TxID#2
debug: Removing unused variable nested_tuple.1.0.ApplicationID#2
debug: Removing unused variable nested_tuple.1.0.OnCompletion#2
debug: Removing unused variable nested_tuple.1.0.NumAppArgs#2
debug: Removing unused variable nested_tuple.1.0.NumAccounts#2
debug: Removing unused variable nested_tuple.1.0.ApprovalProgram#2
debug: Removing unused variable nested_tuple.1.0.ClearStateProgram#2
debug: Removing unused variable nested_tuple.1.0.RekeyTo#2
debug: Removing unused variable nested_tuple.1.0.ConfigAsset#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetTotal#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDecimals#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDefaultFrozen#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetUnitName#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetName#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetURL#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetMetadataHash#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetManager#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetReserve#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetFreeze#2
debug: Removing unused variable nested_tuple.1.0.ConfigAssetClawback#2
debug: Removing unused variable nested_tuple.1.0.FreezeAsset#2
debug: Removing unused variable nested_tuple.1.0.FreezeAssetAccount#2
debug: Removing unused variable nested_tuple.1.0.FreezeAssetFrozen#2
debug: Removing unused variable nested_tuple.1.0.NumAssets#2
debug: Removing unused variable nested_tuple.1.0.NumApplications#2
debug: Removing unused variable nested_tuple.1.0.GlobalNumUint#2
debug: Removing unused variable nested_tuple.1.0.GlobalNumByteSlice#2
debug: Removing unused variable nested_tuple.1.0.LocalNumUint#2
debug: Removing unused variable nested_tuple.1.0.LocalNumByteSlice#2
debug: Removing unused variable nested_tuple.1.0.ExtraProgramPages#2
debug: Removing unused variable nested_tuple.1.0.Nonparticipation#2
debug: Removing unused variable nested_tuple.1.0.NumLogs#2
debug: Removing unused variable nested_tuple.1.0.CreatedAssetID#2
debug: Removing unused variable nested_tuple.1.0.CreatedApplicationID#2
debug: Removing unused variable nested_tuple.1.0.LastLog#2
debug: Removing unused variable nested_tuple.1.0.StateProofPK#2
debug: Removing unused variable nested_tuple.1.0.NumApprovalProgramPages#2
debug: Removing unused variable nested_tuple.1.0.NumClearStateProgramPages#2
debug: Removing unused variable nested_tuple.1.1.Sender#2
debug: Removing unused variable nested_tuple.1.1.Fee#2
debug: Removing unused variable nested_tuple.1.1.FirstValid#2
debug: Removing unused variable nested_tuple.1.1.FirstValidTime#2
debug: Removing unused variable nested_tuple.1.1.LastValid#2
debug: Removing unused variable nested_tuple.1.1.Lease#2
debug: Removing unused variable nested_tuple.1.1.Receiver#2
debug: Removing unused variable nested_tuple.1.1.Amount#2
debug: Removing unused variable nested_tuple.1.1.CloseRemainderTo#2
debug: Removing unused variable nested_tuple.1.1.VotePK#2
debug: Removing unused variable nested_tuple.1.1.SelectionPK#2
debug: Removing unused variable nested_tuple.1.1.VoteFirst#2
debug: Removing unused variable nested_tuple.1.1.VoteLast#2
debug: Removing unused variable nested_tuple.1.1.VoteKeyDilution#2
debug: Removing unused variable nested_tuple.1.1.Type#2
debug: Removing unused variable nested_tuple.1.1.TypeEnum#2
debug: Removing unused variable nested_tuple.1.1.XferAsset#2
debug: Removing unused variable nested_tuple.1.1.AssetAmount#2
debug: Removing unused variable nested_tuple.1.1.AssetSender#2
debug: Removing unused variable nested_tuple.1.1.AssetReceiver#2
debug: Removing unused variable nested_tuple.1.1.AssetCloseTo#2
debug: Removing unused variable nested_tuple.1.1.GroupIndex#2
debug: Removing unused variable nested_tuple.1.1.TxID#2
debug: Removing unused variable nested_tuple.1.1.ApplicationID#2
debug: Removing unused variable nested_tuple.1.1.OnCompletion#2
debug: Removing unused variable nested_tuple.1.1.NumAppArgs#2
debug: Removing unused variable nested_tuple.1.1.NumAccounts#2
debug: Removing unused variable nested_tuple.1.1.ApprovalProgram#2
debug: Removing unused variable nested_tuple.1.1.ClearStateProgram#2
debug: Removing unused variable nested_tuple.1.1.RekeyTo#2
debug: Removing unused variable nested_tuple.1.1.ConfigAsset#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetTotal#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDecimals#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDefaultFrozen#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetUnitName#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetName#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetURL#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetMetadataHash#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetManager#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetReserve#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetFreeze#2
debug: Removing unused variable nested_tuple.1.1.ConfigAssetClawback#2
debug: Removing unused variable nested_tuple.1.1.FreezeAsset#2
debug: Removing unused variable nested_tuple.1.1.FreezeAssetAccount#2
debug: Removing unused variable nested_tuple.1.1.FreezeAssetFrozen#2
debug: Removing unused variable nested_tuple.1.1.NumAssets#2
debug: Removing unused variable nested_tuple.1.1.NumApplications#2
debug: Removing unused variable nested_tuple.1.1.GlobalNumUint#2
debug: Removing unused variable nested_tuple.1.1.GlobalNumByteSlice#2
debug: Removing unused variable nested_tuple.1.1.LocalNumUint#2
debug: Removing unused variable nested_tuple.1.1.LocalNumByteSlice#2
debug: Removing unused variable nested_tuple.1.1.ExtraProgramPages#2
debug: Removing unused variable nested_tuple.1.1.Nonparticipation#2
debug: Removing unused variable nested_tuple.1.1.NumLogs#2
debug: Removing unused variable nested_tuple.1.1.CreatedAssetID#2
debug: Removing unused variable nested_tuple.1.1.CreatedApplicationID#2
debug: Removing unused variable nested_tuple.1.1.LastLog#2
debug: Removing unused variable nested_tuple.1.1.StateProofPK#2
debug: Removing unused variable nested_tuple.1.1.NumApprovalProgramPages#2
debug: Removing unused variable nested_tuple.1.1.NumClearStateProgramPages#2
debug: Removing unused variable acfg#0
debug: Removing unused variable acfg%%param_Fee_idx_0#0
debug: Removing unused variable acfg%%Fee_length#0
debug: Removing unused variable acfg%%param_TypeEnum_idx_0#0
debug: Removing unused variable acfg%%TypeEnum_length#0
debug: Removing unused variable acfg%%param_ConfigAssetUnitName_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetUnitName_length#0
debug: Removing unused variable acfg%%param_ConfigAssetName_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetName_length#0
debug: Removing unused variable acfg%%param_Note_idx_0#0
debug: Removing unused variable acfg%%Note_length#0
debug: Removing unused variable acfg%%param_ConfigAssetTotal_idx_0#0
debug: Removing unused variable acfg%%ConfigAssetTotal_length#0
debug: Removing unused variable acfg%%Sender_length#0
debug: Removing unused variable acfg%%Receiver_length#0
debug: Removing unused variable acfg%%Amount_length#0
debug: Removing unused variable acfg%%CloseRemainderTo_length#0
debug: Removing unused variable acfg%%VotePK_length#0
debug: Removing unused variable acfg%%SelectionPK_length#0
debug: Removing unused variable acfg%%VoteFirst_length#0
debug: Removing unused variable acfg%%VoteLast_length#0
debug: Removing unused variable acfg%%VoteKeyDilution_length#0
debug: Removing unused variable acfg%%Type_length#0
debug: Removing unused variable acfg%%XferAsset_length#0
debug: Removing unused variable acfg%%AssetAmount_length#0
debug: Removing unused variable acfg%%AssetSender_length#0
debug: Removing unused variable acfg%%AssetReceiver_length#0
debug: Removing unused variable acfg%%AssetCloseTo_length#0
debug: Removing unused variable acfg%%ApplicationID_length#0
debug: Removing unused variable acfg%%OnCompletion_length#0
debug: Removing unused variable acfg%%ApprovalProgram_length#0
debug: Removing unused variable acfg%%ClearStateProgram_length#0
debug: Removing unused variable acfg%%RekeyTo_length#0
debug: Removing unused variable acfg%%ConfigAsset_length#0
debug: Removing unused variable acfg%%ConfigAssetDecimals_length#0
debug: Removing unused variable acfg%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable acfg%%ConfigAssetURL_length#0
debug: Removing unused variable acfg%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable acfg%%ConfigAssetManager_length#0
debug: Removing unused variable acfg%%ConfigAssetReserve_length#0
debug: Removing unused variable acfg%%ConfigAssetFreeze_length#0
debug: Removing unused variable acfg%%ConfigAssetClawback_length#0
debug: Removing unused variable acfg%%FreezeAsset_length#0
debug: Removing unused variable acfg%%FreezeAssetAccount_length#0
debug: Removing unused variable acfg%%FreezeAssetFrozen_length#0
debug: Removing unused variable acfg%%GlobalNumUint_length#0
debug: Removing unused variable acfg%%GlobalNumByteSlice_length#0
debug: Removing unused variable acfg%%LocalNumUint_length#0
debug: Removing unused variable acfg%%LocalNumByteSlice_length#0
debug: Removing unused variable acfg%%ExtraProgramPages_length#0
debug: Removing unused variable acfg%%Nonparticipation_length#0
debug: Removing unused variable acfg%%StateProofPK_length#0
debug: Removing unused variable acfg%%ApplicationArgs_length#0
debug: Removing unused variable acfg%%Accounts_length#0
debug: Removing unused variable acfg%%Assets_length#0
debug: Removing unused variable acfg%%Applications_length#0
debug: Removing unused variable acfg%%ApprovalProgramPages_length#0
debug: Removing unused variable acfg%%ClearStateProgramPages_length#0
debug: Removing unused variable pay1#0
debug: Removing unused variable pay1%%param_Fee_idx_0#0
debug: Removing unused variable pay1%%Fee_length#0
debug: Removing unused variable pay1%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay1%%TypeEnum_length#0
debug: Removing unused variable pay1%%Receiver_length#0
debug: Removing unused variable pay1%%param_Amount_idx_0#0
debug: Removing unused variable pay1%%Amount_length#0
debug: Removing unused variable pay1%%param_Note_idx_0#0
debug: Removing unused variable pay1%%Note_length#0
debug: Removing unused variable pay1%%Sender_length#0
debug: Removing unused variable pay1%%CloseRemainderTo_length#0
debug: Removing unused variable pay1%%VotePK_length#0
debug: Removing unused variable pay1%%SelectionPK_length#0
debug: Removing unused variable pay1%%VoteFirst_length#0
debug: Removing unused variable pay1%%VoteLast_length#0
debug: Removing unused variable pay1%%VoteKeyDilution_length#0
debug: Removing unused variable pay1%%Type_length#0
debug: Removing unused variable pay1%%XferAsset_length#0
debug: Removing unused variable pay1%%AssetAmount_length#0
debug: Removing unused variable pay1%%AssetSender_length#0
debug: Removing unused variable pay1%%AssetReceiver_length#0
debug: Removing unused variable pay1%%AssetCloseTo_length#0
debug: Removing unused variable pay1%%ApplicationID_length#0
debug: Removing unused variable pay1%%OnCompletion_length#0
debug: Removing unused variable pay1%%ApprovalProgram_length#0
debug: Removing unused variable pay1%%ClearStateProgram_length#0
debug: Removing unused variable pay1%%RekeyTo_length#0
debug: Removing unused variable pay1%%ConfigAsset_length#0
debug: Removing unused variable pay1%%ConfigAssetTotal_length#0
debug: Removing unused variable pay1%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay1%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay1%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay1%%ConfigAssetName_length#0
debug: Removing unused variable pay1%%ConfigAssetURL_length#0
debug: Removing unused variable pay1%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay1%%ConfigAssetManager_length#0
debug: Removing unused variable pay1%%ConfigAssetReserve_length#0
debug: Removing unused variable pay1%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay1%%ConfigAssetClawback_length#0
debug: Removing unused variable pay1%%FreezeAsset_length#0
debug: Removing unused variable pay1%%FreezeAssetAccount_length#0
debug: Removing unused variable pay1%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay1%%GlobalNumUint_length#0
debug: Removing unused variable pay1%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay1%%LocalNumUint_length#0
debug: Removing unused variable pay1%%LocalNumByteSlice_length#0
debug: Removing unused variable pay1%%ExtraProgramPages_length#0
debug: Removing unused variable pay1%%Nonparticipation_length#0
debug: Removing unused variable pay1%%StateProofPK_length#0
debug: Removing unused variable pay1%%ApplicationArgs_length#0
debug: Removing unused variable pay1%%Accounts_length#0
debug: Removing unused variable pay1%%Assets_length#0
debug: Removing unused variable pay1%%Applications_length#0
debug: Removing unused variable pay1%%ApprovalProgramPages_length#0
debug: Removing unused variable pay1%%ClearStateProgramPages_length#0
debug: Removing unused variable pay2%%Sender_length#0
debug: Removing unused variable pay2%%param_Fee_idx_0#0
debug: Removing unused variable pay2%%Fee_length#0
debug: Removing unused variable pay2%%param_Note_idx_0#0
debug: Removing unused variable pay2%%Note_length#0
debug: Removing unused variable pay2%%Receiver_length#0
debug: Removing unused variable pay2%%param_Amount_idx_0#0
debug: Removing unused variable pay2%%Amount_length#0
debug: Removing unused variable pay2%%CloseRemainderTo_length#0
debug: Removing unused variable pay2%%VotePK_length#0
debug: Removing unused variable pay2%%SelectionPK_length#0
debug: Removing unused variable pay2%%VoteFirst_length#0
debug: Removing unused variable pay2%%VoteLast_length#0
debug: Removing unused variable pay2%%VoteKeyDilution_length#0
debug: Removing unused variable pay2%%Type_length#0
debug: Removing unused variable pay2%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay2%%TypeEnum_length#0
debug: Removing unused variable pay2%%XferAsset_length#0
debug: Removing unused variable pay2%%AssetAmount_length#0
debug: Removing unused variable pay2%%AssetSender_length#0
debug: Removing unused variable pay2%%AssetReceiver_length#0
debug: Removing unused variable pay2%%AssetCloseTo_length#0
debug: Removing unused variable pay2%%ApplicationID_length#0
debug: Removing unused variable pay2%%OnCompletion_length#0
debug: Removing unused variable pay2%%ApprovalProgram_length#0
debug: Removing unused variable pay2%%ClearStateProgram_length#0
debug: Removing unused variable pay2%%RekeyTo_length#0
debug: Removing unused variable pay2%%ConfigAsset_length#0
debug: Removing unused variable pay2%%ConfigAssetTotal_length#0
debug: Removing unused variable pay2%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay2%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay2%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay2%%ConfigAssetName_length#0
debug: Removing unused variable pay2%%ConfigAssetURL_length#0
debug: Removing unused variable pay2%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay2%%ConfigAssetManager_length#0
debug: Removing unused variable pay2%%ConfigAssetReserve_length#0
debug: Removing unused variable pay2%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay2%%ConfigAssetClawback_length#0
debug: Removing unused variable pay2%%FreezeAsset_length#0
debug: Removing unused variable pay2%%FreezeAssetAccount_length#0
debug: Removing unused variable pay2%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay2%%GlobalNumUint_length#0
debug: Removing unused variable pay2%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay2%%LocalNumUint_length#0
debug: Removing unused variable pay2%%LocalNumByteSlice_length#0
debug: Removing unused variable pay2%%ExtraProgramPages_length#0
debug: Removing unused variable pay2%%Nonparticipation_length#0
debug: Removing unused variable pay2%%StateProofPK_length#0
debug: Removing unused variable pay2%%ApplicationArgs_length#0
debug: Removing unused variable pay2%%Accounts_length#0
debug: Removing unused variable pay2%%Assets_length#0
debug: Removing unused variable pay2%%Applications_length#0
debug: Removing unused variable pay2%%ApprovalProgramPages_length#0
debug: Removing unused variable pay2%%ClearStateProgramPages_length#0
debug: Removing unused variable pay2#0
debug: Removing unused variable pay2%%param_Note_idx_0#1
debug: Removing unused variable pay2%%Note_length#1
debug: Removing unused variable pay3%%Sender_length#0
debug: Removing unused variable pay3%%param_Fee_idx_0#0
debug: Removing unused variable pay3%%Fee_length#0
debug: Removing unused variable pay3%%param_Note_idx_0#0
debug: Removing unused variable pay3%%Note_length#0
debug: Removing unused variable pay3%%Receiver_length#0
debug: Removing unused variable pay3%%param_Amount_idx_0#0
debug: Removing unused variable pay3%%Amount_length#0
debug: Removing unused variable pay3%%CloseRemainderTo_length#0
debug: Removing unused variable pay3%%VotePK_length#0
debug: Removing unused variable pay3%%SelectionPK_length#0
debug: Removing unused variable pay3%%VoteFirst_length#0
debug: Removing unused variable pay3%%VoteLast_length#0
debug: Removing unused variable pay3%%VoteKeyDilution_length#0
debug: Removing unused variable pay3%%Type_length#0
debug: Removing unused variable pay3%%param_TypeEnum_idx_0#0
debug: Removing unused variable pay3%%TypeEnum_length#0
debug: Removing unused variable pay3%%XferAsset_length#0
debug: Removing unused variable pay3%%AssetAmount_length#0
debug: Removing unused variable pay3%%AssetSender_length#0
debug: Removing unused variable pay3%%AssetReceiver_length#0
debug: Removing unused variable pay3%%AssetCloseTo_length#0
debug: Removing unused variable pay3%%ApplicationID_length#0
debug: Removing unused variable pay3%%OnCompletion_length#0
debug: Removing unused variable pay3%%ApprovalProgram_length#0
debug: Removing unused variable pay3%%ClearStateProgram_length#0
debug: Removing unused variable pay3%%RekeyTo_length#0
debug: Removing unused variable pay3%%ConfigAsset_length#0
debug: Removing unused variable pay3%%ConfigAssetTotal_length#0
debug: Removing unused variable pay3%%ConfigAssetDecimals_length#0
debug: Removing unused variable pay3%%ConfigAssetDefaultFrozen_length#0
debug: Removing unused variable pay3%%ConfigAssetUnitName_length#0
debug: Removing unused variable pay3%%ConfigAssetName_length#0
debug: Removing unused variable pay3%%ConfigAssetURL_length#0
debug: Removing unused variable pay3%%ConfigAssetMetadataHash_length#0
debug: Removing unused variable pay3%%ConfigAssetManager_length#0
debug: Removing unused variable pay3%%ConfigAssetReserve_length#0
debug: Removing unused variable pay3%%ConfigAssetFreeze_length#0
debug: Removing unused variable pay3%%ConfigAssetClawback_length#0
debug: Removing unused variable pay3%%FreezeAsset_length#0
debug: Removing unused variable pay3%%FreezeAssetAccount_length#0
debug: Removing unused variable pay3%%FreezeAssetFrozen_length#0
debug: Removing unused variable pay3%%GlobalNumUint_length#0
debug: Removing unused variable pay3%%GlobalNumByteSlice_length#0
debug: Removing unused variable pay3%%LocalNumUint_length#0
debug: Removing unused variable pay3%%LocalNumByteSlice_length#0
debug: Removing unused variable pay3%%ExtraProgramPages_length#0
debug: Removing unused variable pay3%%Nonparticipation_length#0
debug: Removing unused variable pay3%%StateProofPK_length#0
debug: Removing unused variable pay3%%ApplicationArgs_length#0
debug: Removing unused variable pay3%%Accounts_length#0
debug: Removing unused variable pay3%%Assets_length#0
debug: Removing unused variable pay3%%Applications_length#0
debug: Removing unused variable pay3%%ApprovalProgramPages_length#0
debug: Removing unused variable pay3%%ClearStateProgramPages_length#0
debug: Removing unused variable pay3#0
debug: Removing unused variable pay3%%param_Note_idx_0#1
debug: Removing unused variable pay3%%Note_length#1
debug: Removing unused variable value#4
debug: Removing unused variable tmp%0#0
debug: Removing unused variable value#2
debug: Removing unused variable tmp%1#0
debug: Removing unused variable nested_tuple.1.0._is_last#0
debug: Removing unused variable nested_tuple.1.1._is_last#0
debug: Removing unused variable nested_tuple_copy.0#0
debug: Removing unused variable nested_tuple_copy.1.0#0
debug: Removing unused variable nested_tuple_copy.1.1#0
debug: Removing unused variable nested_tuple_copy.2#0
debug: Removing unused variable acfg#1
debug: Removing unused variable acfg%%param_Note_idx_0#1
debug: Removing unused variable acfg%%Note_length#1
debug: Removing unused variable pay2#1
debug: Removing unused variable pay2%%param_Note_idx_0#2
debug: Removing unused variable pay2%%Note_length#2
debug: Removing unused variable pay3#1
debug: Removing unused variable pay3%%param_Note_idx_0#2
debug: Removing unused variable pay3%%Note_length#2
debug: Removing unused variable value#3
debug: Removing unused variable tmp%6#0
debug: Removing unused variable value#1
debug: Removing unused variable tmp%8#0
debug: Removing unused variable value#0
debug: Removing unused variable tmp%9#0
debug: Removing unused variable nested_tuple.1.0._is_last#1
debug: Removing unused variable nested_tuple.1.1._is_last#1
debug: Removing unused variable mish_mash.0#0
debug: Removing unused variable mish_mash.1#0
debug: Removing unused variable mish_mash.2.0#0
debug: Removing unused variable mish_mash.2.1#0
debug: Removing unused variable nested_tuple.1.0#0
debug: Removing unused variable nested_tuple.1.1#0
debug: Removing unused variable nested_tuple.1.0.Sender#0
debug: Removing unused variable nested_tuple.1.0.Fee#0
debug: Removing unused variable nested_tuple.1.0.FirstValid#0
debug: Removing unused variable nested_tuple.1.0.FirstValidTime#0
debug: Removing unused variable nested_tuple.1.0.LastValid#0
debug: Removing unused variable nested_tuple.1.0.Lease#0
debug: Removing unused variable nested_tuple.1.0.Receiver#0
debug: Removing unused variable nested_tuple.1.0.Amount#0
debug: Removing unused variable nested_tuple.1.0.CloseRemainderTo#0
debug: Removing unused variable nested_tuple.1.0.VotePK#0
debug: Removing unused variable nested_tuple.1.0.SelectionPK#0
debug: Removing unused variable nested_tuple.1.0.VoteFirst#0
debug: Removing unused variable nested_tuple.1.0.VoteLast#0
debug: Removing unused variable nested_tuple.1.0.VoteKeyDilution#0
debug: Removing unused variable nested_tuple.1.0.Type#0
debug: Removing unused variable nested_tuple.1.0.TypeEnum#0
debug: Removing unused variable nested_tuple.1.0.XferAsset#0
debug: Removing unused variable nested_tuple.1.0.AssetAmount#0
debug: Removing unused variable nested_tuple.1.0.AssetSender#0
debug: Removing unused variable nested_tuple.1.0.AssetReceiver#0
debug: Removing unused variable nested_tuple.1.0.AssetCloseTo#0
debug: Removing unused variable nested_tuple.1.0.GroupIndex#0
debug: Removing unused variable nested_tuple.1.0.TxID#0
debug: Removing unused variable nested_tuple.1.0.ApplicationID#0
debug: Removing unused variable nested_tuple.1.0.OnCompletion#0
debug: Removing unused variable nested_tuple.1.0.NumAppArgs#0
debug: Removing unused variable nested_tuple.1.0.NumAccounts#0
debug: Removing unused variable nested_tuple.1.0.ApprovalProgram#0
debug: Removing unused variable nested_tuple.1.0.ClearStateProgram#0
debug: Removing unused variable nested_tuple.1.0.RekeyTo#0
debug: Removing unused variable nested_tuple.1.0.ConfigAsset#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetTotal#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDecimals#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDefaultFrozen#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetUnitName#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetName#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetURL#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetMetadataHash#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetManager#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetReserve#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetFreeze#0
debug: Removing unused variable nested_tuple.1.0.ConfigAssetClawback#0
debug: Removing unused variable nested_tuple.1.0.FreezeAsset#0
debug: Removing unused variable nested_tuple.1.0.FreezeAssetAccount#0
debug: Removing unused variable nested_tuple.1.0.FreezeAssetFrozen#0
debug: Removing unused variable nested_tuple.1.0.NumAssets#0
debug: Removing unused variable nested_tuple.1.0.NumApplications#0
debug: Removing unused variable nested_tuple.1.0.GlobalNumUint#0
debug: Removing unused variable nested_tuple.1.0.GlobalNumByteSlice#0
debug: Removing unused variable nested_tuple.1.0.LocalNumUint#0
debug: Removing unused variable nested_tuple.1.0.LocalNumByteSlice#0
debug: Removing unused variable nested_tuple.1.0.ExtraProgramPages#0
debug: Removing unused variable nested_tuple.1.0.Nonparticipation#0
debug: Removing unused variable nested_tuple.1.0.NumLogs#0
debug: Removing unused variable nested_tuple.1.0.CreatedAssetID#0
debug: Removing unused variable nested_tuple.1.0.CreatedApplicationID#0
debug: Removing unused variable nested_tuple.1.0.LastLog#0
debug: Removing unused variable nested_tuple.1.0.StateProofPK#0
debug: Removing unused variable nested_tuple.1.0.NumApprovalProgramPages#0
debug: Removing unused variable nested_tuple.1.0.NumClearStateProgramPages#0
debug: Removing unused variable nested_tuple.1.1.Sender#0
debug: Removing unused variable nested_tuple.1.1.Fee#0
debug: Removing unused variable nested_tuple.1.1.FirstValid#0
debug: Removing unused variable nested_tuple.1.1.FirstValidTime#0
debug: Removing unused variable nested_tuple.1.1.LastValid#0
debug: Removing unused variable nested_tuple.1.1.Lease#0
debug: Removing unused variable nested_tuple.1.1.Receiver#0
debug: Removing unused variable nested_tuple.1.1.Amount#0
debug: Removing unused variable nested_tuple.1.1.CloseRemainderTo#0
debug: Removing unused variable nested_tuple.1.1.VotePK#0
debug: Removing unused variable nested_tuple.1.1.SelectionPK#0
debug: Removing unused variable nested_tuple.1.1.VoteFirst#0
debug: Removing unused variable nested_tuple.1.1.VoteLast#0
debug: Removing unused variable nested_tuple.1.1.VoteKeyDilution#0
debug: Removing unused variable nested_tuple.1.1.Type#0
debug: Removing unused variable nested_tuple.1.1.TypeEnum#0
debug: Removing unused variable nested_tuple.1.1.XferAsset#0
debug: Removing unused variable nested_tuple.1.1.AssetAmount#0
debug: Removing unused variable nested_tuple.1.1.AssetSender#0
debug: Removing unused variable nested_tuple.1.1.AssetReceiver#0
debug: Removing unused variable nested_tuple.1.1.AssetCloseTo#0
debug: Removing unused variable nested_tuple.1.1.GroupIndex#0
debug: Removing unused variable nested_tuple.1.1.TxID#0
debug: Removing unused variable nested_tuple.1.1.ApplicationID#0
debug: Removing unused variable nested_tuple.1.1.OnCompletion#0
debug: Removing unused variable nested_tuple.1.1.NumAppArgs#0
debug: Removing unused variable nested_tuple.1.1.NumAccounts#0
debug: Removing unused variable nested_tuple.1.1.ApprovalProgram#0
debug: Removing unused variable nested_tuple.1.1.ClearStateProgram#0
debug: Removing unused variable nested_tuple.1.1.RekeyTo#0
debug: Removing unused variable nested_tuple.1.1.ConfigAsset#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetTotal#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDecimals#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDefaultFrozen#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetUnitName#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetName#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetURL#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetMetadataHash#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetManager#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetReserve#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetFreeze#0
debug: Removing unused variable nested_tuple.1.1.ConfigAssetClawback#0
debug: Removing unused variable nested_tuple.1.1.FreezeAsset#0
debug: Removing unused variable nested_tuple.1.1.FreezeAssetAccount#0
debug: Removing unused variable nested_tuple.1.1.FreezeAssetFrozen#0
debug: Removing unused variable nested_tuple.1.1.NumAssets#0
debug: Removing unused variable nested_tuple.1.1.NumApplications#0
debug: Removing unused variable nested_tuple.1.1.GlobalNumUint#0
debug: Removing unused variable nested_tuple.1.1.GlobalNumByteSlice#0
debug: Removing unused variable nested_tuple.1.1.LocalNumUint#0
debug: Removing unused variable nested_tuple.1.1.LocalNumByteSlice#0
debug: Removing unused variable nested_tuple.1.1.ExtraProgramPages#0
debug: Removing unused variable nested_tuple.1.1.Nonparticipation#0
debug: Removing unused variable nested_tuple.1.1.NumLogs#0
debug: Removing unused variable nested_tuple.1.1.CreatedAssetID#0
debug: Removing unused variable nested_tuple.1.1.CreatedApplicationID#0
debug: Removing unused variable nested_tuple.1.1.LastLog#0
debug: Removing unused variable nested_tuple.1.1.StateProofPK#0
debug: Removing unused variable nested_tuple.1.1.NumApprovalProgramPages#0
debug: Removing unused variable nested_tuple.1.1.NumClearStateProgramPages#0
debug: Removing unused variable nested_tuple.1.0#1
debug: Removing unused variable nested_tuple.1.1#1
debug: Removing unused variable nested_tuple.1.0.Sender#1
debug: Removing unused variable nested_tuple.1.0.Fee#1
debug: Removing unused variable nested_tuple.1.0.FirstValid#1
debug: Removing unused variable nested_tuple.1.0.FirstValidTime#1
debug: Removing unused variable nested_tuple.1.0.LastValid#1
debug: Removing unused variable nested_tuple.1.0.Lease#1
debug: Removing unused variable nested_tuple.1.0.Receiver#1
debug: Removing unused variable nested_tuple.1.0.Amount#1
debug: Removing unused variable nested_tuple.1.0.CloseRemainderTo#1
debug: Removing unused variable nested_tuple.1.0.VotePK#1
debug: Removing unused variable nested_tuple.1.0.SelectionPK#1
debug: Removing unused variable nested_tuple.1.0.VoteFirst#1
debug: Removing unused variable nested_tuple.1.0.VoteLast#1
debug: Removing unused variable nested_tuple.1.0.VoteKeyDilution#1
debug: Removing unused variable nested_tuple.1.0.Type#1
debug: Removing unused variable nested_tuple.1.0.TypeEnum#1
debug: Removing unused variable nested_tuple.1.0.XferAsset#1
debug: Removing unused variable nested_tuple.1.0.AssetAmount#1
debug: Removing unused variable nested_tuple.1.0.AssetSender#1
debug: Removing unused variable nested_tuple.1.0.AssetReceiver#1
debug: Removing unused variable nested_tuple.1.0.AssetCloseTo#1
debug: Removing unused variable nested_tuple.1.0.GroupIndex#1
debug: Removing unused variable nested_tuple.1.0.TxID#1
debug: Removing unused variable nested_tuple.1.0.ApplicationID#1
debug: Removing unused variable nested_tuple.1.0.OnCompletion#1
debug: Removing unused variable nested_tuple.1.0.NumAppArgs#1
debug: Removing unused variable nested_tuple.1.0.NumAccounts#1
debug: Removing unused variable nested_tuple.1.0.ApprovalProgram#1
debug: Removing unused variable nested_tuple.1.0.ClearStateProgram#1
debug: Removing unused variable nested_tuple.1.0.RekeyTo#1
debug: Removing unused variable nested_tuple.1.0.ConfigAsset#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetTotal#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDecimals#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetDefaultFrozen#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetUnitName#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetName#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetURL#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetMetadataHash#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetManager#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetReserve#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetFreeze#1
debug: Removing unused variable nested_tuple.1.0.ConfigAssetClawback#1
debug: Removing unused variable nested_tuple.1.0.FreezeAsset#1
debug: Removing unused variable nested_tuple.1.0.FreezeAssetAccount#1
debug: Removing unused variable nested_tuple.1.0.FreezeAssetFrozen#1
debug: Removing unused variable nested_tuple.1.0.NumAssets#1
debug: Removing unused variable nested_tuple.1.0.NumApplications#1
debug: Removing unused variable nested_tuple.1.0.GlobalNumUint#1
debug: Removing unused variable nested_tuple.1.0.GlobalNumByteSlice#1
debug: Removing unused variable nested_tuple.1.0.LocalNumUint#1
debug: Removing unused variable nested_tuple.1.0.LocalNumByteSlice#1
debug: Removing unused variable nested_tuple.1.0.ExtraProgramPages#1
debug: Removing unused variable nested_tuple.1.0.Nonparticipation#1
debug: Removing unused variable nested_tuple.1.0.NumLogs#1
debug: Removing unused variable nested_tuple.1.0.CreatedAssetID#1
debug: Removing unused variable nested_tuple.1.0.CreatedApplicationID#1
debug: Removing unused variable nested_tuple.1.0.LastLog#1
debug: Removing unused variable nested_tuple.1.0.StateProofPK#1
debug: Removing unused variable nested_tuple.1.0.NumApprovalProgramPages#1
debug: Removing unused variable nested_tuple.1.0.NumClearStateProgramPages#1
debug: Removing unused variable nested_tuple.1.1.Sender#1
debug: Removing unused variable nested_tuple.1.1.Fee#1
debug: Removing unused variable nested_tuple.1.1.FirstValid#1
debug: Removing unused variable nested_tuple.1.1.FirstValidTime#1
debug: Removing unused variable nested_tuple.1.1.LastValid#1
debug: Removing unused variable nested_tuple.1.1.Lease#1
debug: Removing unused variable nested_tuple.1.1.Receiver#1
debug: Removing unused variable nested_tuple.1.1.Amount#1
debug: Removing unused variable nested_tuple.1.1.CloseRemainderTo#1
debug: Removing unused variable nested_tuple.1.1.VotePK#1
debug: Removing unused variable nested_tuple.1.1.SelectionPK#1
debug: Removing unused variable nested_tuple.1.1.VoteFirst#1
debug: Removing unused variable nested_tuple.1.1.VoteLast#1
debug: Removing unused variable nested_tuple.1.1.VoteKeyDilution#1
debug: Removing unused variable nested_tuple.1.1.Type#1
debug: Removing unused variable nested_tuple.1.1.TypeEnum#1
debug: Removing unused variable nested_tuple.1.1.XferAsset#1
debug: Removing unused variable nested_tuple.1.1.AssetAmount#1
debug: Removing unused variable nested_tuple.1.1.AssetSender#1
debug: Removing unused variable nested_tuple.1.1.AssetReceiver#1
debug: Removing unused variable nested_tuple.1.1.AssetCloseTo#1
debug: Removing unused variable nested_tuple.1.1.GroupIndex#1
debug: Removing unused variable nested_tuple.1.1.TxID#1
debug: Removing unused variable nested_tuple.1.1.ApplicationID#1
debug: Removing unused variable nested_tuple.1.1.OnCompletion#1
debug: Removing unused variable nested_tuple.1.1.NumAppArgs#1
debug: Removing unused variable nested_tuple.1.1.NumAccounts#1
debug: Removing unused variable nested_tuple.1.1.ApprovalProgram#1
debug: Removing unused variable nested_tuple.1.1.ClearStateProgram#1
debug: Removing unused variable nested_tuple.1.1.RekeyTo#1
debug: Removing unused variable nested_tuple.1.1.ConfigAsset#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetTotal#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDecimals#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetDefaultFrozen#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetUnitName#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetName#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetURL#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetMetadataHash#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetManager#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetReserve#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetFreeze#1
debug: Removing unused variable nested_tuple.1.1.ConfigAssetClawback#1
debug: Removing unused variable nested_tuple.1.1.FreezeAsset#1
debug: Removing unused variable nested_tuple.1.1.FreezeAssetAccount#1
debug: Removing unused variable nested_tuple.1.1.FreezeAssetFrozen#1
debug: Removing unused variable nested_tuple.1.1.NumAssets#1
debug: Removing unused variable nested_tuple.1.1.NumApplications#1
debug: Removing unused variable nested_tuple.1.1.GlobalNumUint#1
debug: Removing unused variable nested_tuple.1.1.GlobalNumByteSlice#1
debug: Removing unused variable nested_tuple.1.1.LocalNumUint#1
debug: Removing unused variable nested_tuple.1.1.LocalNumByteSlice#1
debug: Removing unused variable nested_tuple.1.1.ExtraProgramPages#1
debug: Removing unused variable nested_tuple.1.1.Nonparticipation#1
debug: Removing unused variable nested_tuple.1.1.NumLogs#1
debug: Removing unused variable nested_tuple.1.1.CreatedAssetID#1
debug: Removing unused variable nested_tuple.1.1.CreatedApplicationID#1
debug: Removing unused variable nested_tuple.1.1.LastLog#1
debug: Removing unused variable nested_tuple.1.1.StateProofPK#1
debug: Removing unused variable nested_tuple.1.1.NumApprovalProgramPages#1
debug: Removing unused variable nested_tuple.1.1.NumClearStateProgramPages#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x6869 0x6869) to 1u
debug: Simplified (== 0x7468657265 0x7468657265) to 1u
debug: Simplified (== 0x6d61796265 0x6d61796265) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: simplifying conditional branch with a constant into a goto
debug: simplified terminator of block@17 from goto 1u ? block@5 : block@9 to goto block@5
debug: Replacing trivial Phi node: let nested_tuple.0#2: bytes = φ(nested_tuple.0#1 <- block@11) (nested_tuple.0#2) with nested_tuple.0#1
debug: Deleting Phi assignment: let nested_tuple.0#2: bytes = φ(nested_tuple.0#1 <- block@11)
debug: Replacing trivial Phi node: let nested_tuple.2#2: bytes = φ(nested_tuple.2#1 <- block@11) (nested_tuple.2#2) with nested_tuple.2#1
debug: Deleting Phi assignment: let nested_tuple.2#2: bytes = φ(nested_tuple.2#1 <- block@11)
debug: Replacing trivial Phi node: let nested_tuple.1.0.Note#2: bytes = φ(nested_tuple.1.0.Note#1 <- block@11) (nested_tuple.1.0.Note#2) with nested_tuple.1.0.Note#1
debug: Deleting Phi assignment: let nested_tuple.1.0.Note#2: bytes = φ(nested_tuple.1.0.Note#1 <- block@11)
debug: Replacing trivial Phi node: let nested_tuple.1.1.Note#2: bytes = φ(nested_tuple.1.1.Note#1 <- block@11) (nested_tuple.1.1.Note#2) with nested_tuple.1.1.Note#1
debug: Deleting Phi assignment: let nested_tuple.1.1.Note#2: bytes = φ(nested_tuple.1.1.Note#1 <- block@11)
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@18 with block@0 in block@19
debug: Merged linear block@18 into block@0
debug: Replaced predecessor block@19 with block@0 in block@1
debug: Merged linear block@19 into block@0
debug: Replaced predecessor block@1 with block@0 in block@2
debug: Merged linear block@1 into block@0
debug: Replaced predecessor block@2 with block@0 in block@3
debug: Merged linear block@2 into block@0
debug: Replaced predecessor block@3 with block@0 in block@4
debug: Merged linear block@3 into block@0
debug: Replaced predecessor block@4 with block@0 in block@14
debug: Merged linear block@4 into block@0
debug: Replaced predecessor block@14 with block@0 in block@15
debug: Merged linear block@14 into block@0
debug: Replaced predecessor block@15 with block@0 in block@16
debug: Merged linear block@15 into block@0
debug: Replaced predecessor block@16 with block@0 in block@17
debug: Merged linear block@16 into block@0
debug: Replaced predecessor block@17 with block@0 in block@5
debug: Merged linear block@17 into block@0
debug: Replaced predecessor block@5 with block@0 in block@12
debug: Merged linear block@5 into block@0
debug: Replaced predecessor block@12 with block@0 in block@13
debug: Merged linear block@12 into block@0
debug: Replaced predecessor block@13 with block@0 in block@6
debug: Merged linear block@13 into block@0
debug: Replaced predecessor block@6 with block@0 in block@7
debug: Merged linear block@6 into block@0
debug: Replaced predecessor block@7 with block@0 in block@8
debug: Merged linear block@7 into block@0
debug: Replaced predecessor block@8 with block@0 in block@10
debug: Merged linear block@8 into block@0
debug: Replaced predecessor block@10 with block@0 in block@11
debug: Merged linear block@10 into block@0
debug: Replaced predecessor block@11 with block@0 in block@9
debug: Merged linear block@11 into block@0
debug: Merged linear block@9 into block@0
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Replacing redundant declaration let tmp%14#0: bool = (== nested_tuple.1.0.Note#0 0x61636667) with copy of existing registers (Register(source_location=inner_transactions_assignment/contract.py:48:15-49, ir_type=bool, name='tmp%3', version=0),)
debug: Replacing redundant declaration let tmp%15#0: bool = (== nested_tuple.1.1.Note#0 0x70617932) with copy of existing registers (Register(source_location=inner_transactions_assignment/contract.py:49:15-49, ir_type=bool, name='tmp%4', version=0),)
debug: Replacing redundant declaration let tmp%16#0: bool = (== nested_tuple.1.0.Note#1 0x6163666732) with copy of existing registers (Register(source_location=inner_transactions_assignment/contract.py:64:15-50, ir_type=bool, name='tmp%11', version=0),)
debug: Replacing redundant declaration let tmp%17#0: bool = (== nested_tuple.1.1.Note#1 0x70617935) with copy of existing registers (Register(source_location=inner_transactions_assignment/contract.py:65:15-49, ir_type=bool, name='tmp%12', version=0),)
debug: Found equivalence set: tmp%3#0, tmp%14#0
debug: selected tmp%3#0 from equivalence set
debug: Found equivalence set: tmp%4#0, tmp%15#0
debug: selected tmp%4#0 from equivalence set
debug: Found equivalence set: tmp%11#0, tmp%16#0
debug: selected tmp%11#0 from equivalence set
debug: Found equivalence set: tmp%12#0, tmp%17#0
debug: selected tmp%12#0 from equivalence set
debug: Copy propagation made 4 modifications
debug: Removing redundant assert of tmp%3#0
debug: Removing redundant assert of tmp%4#0
debug: Removing redundant assert of tmp%11#0
debug: Removing redundant assert of tmp%12#0
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.echo
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__
debug: Unused subroutines removed
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.001.ssa.opt.ir
debug: Begin optimization pass 2/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: inlining call to test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create in algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%1#0
debug: Removing unused variable tmp%6#0
debug: Removing unused variable tmp%10#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Replaced predecessor block@13 with block@8 in block@14
debug: Merged linear block@13 into block@8
debug: Replaced predecessor block@14 with block@8 in block@12
debug: Merged linear block@14 into block@8
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable nested_tuple.0#0
debug: Removing unused variable nested_tuple.2#0
debug: Removing unused variable tmp%2#0
debug: Removing unused variable tmp%5#0
debug: Removing unused variable tmp%7#0
debug: Removing unused variable nested_tuple.0#1
debug: Removing unused variable nested_tuple.2#1
debug: Optimizer: Intrinsic Simplifier
debug: Simplified (== 0x686932 0x686932) to 1u
debug: Simplified (== 0x746865726532 0x746865726532) to 1u
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: removing unused subroutine test_cases.inner_transactions_assignment.contract.Contract.__algopy_default_create
debug: Unused subroutines removed
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.002.ssa.opt.ir
debug: Begin optimization pass 3/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Removing unused variable tmp%10#0
debug: Removing unused variable tmp%13#0
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.003.ssa.opt.ir
debug: Begin optimization pass 4/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 4, ending loop
debug: optimizing clear program of test_cases.inner_transactions_assignment.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: lowering array IR nodes in approval program of test_cases.inner_transactions_assignment.contract.Contract
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.100.ssa.array.ir
debug: lowering array IR nodes in clear program of test_cases.inner_transactions_assignment.contract.Contract
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.clear.100.ssa.array.ir
debug: optimizing approval program of test_cases.inner_transactions_assignment.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.approval_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: Optimizing subroutine test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: optimizing clear program of test_cases.inner_transactions_assignment.contract.Contract at level 1
debug: Begin optimization pass 1/100
debug: Optimizing subroutine algopy.arc4.ARC4Contract.clear_state_program
debug: Optimizer: Perform Subroutine Inlining
debug: Optimizer: Split Parallel Copies
debug: Optimizer: Constant Replacer
debug: Optimizer: Copy Propagation
debug: Optimizer: Elide Itxn Field Calls
debug: Optimizer: Remove Unused Variables
debug: Optimizer: Intrinsic Simplifier
debug: Optimizer: Inner Txn Field Replacer
debug: Optimizer: Replace Compiled References
debug: Optimizer: Simplify Control Ops
debug: Optimizer: Remove Linear Jump
debug: Optimizer: Remove Empty Blocks
debug: Optimizer: Remove Unreachable Blocks
debug: Optimizer: Repeated Expression Elimination
debug: Optimizer: Encode Decode Pair Elimination
debug: Optimizer: Merge Chained Aggregate Reads
debug: Optimizer: Replace Aggregate Box Ops
debug: Optimizer: Minimize Box Exist Asserts
debug: Optimizer: Constant Reads And Unobserved Writes Elimination
debug: No optimizations performed in pass 1, ending loop
debug: removing local static slots in approval program of test_cases.inner_transactions_assignment.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.approval_program, []
inner_transactions_assignment/contract.py:12 debug: auto reserving slots in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice, []
inner_transactions_assignment/contract.py:29 debug: auto reserving slots in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested, []
debug: Slot allocation not required
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.300.ssa.slot.ir
debug: removing local static slots in clear program of test_cases.inner_transactions_assignment.contract.Contract
debug: auto reserving slots in algopy.arc4.ARC4Contract.clear_state_program, []
debug: Slot allocation not required
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.clear.300.ssa.slot.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.approval_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.approval_program using strategy 'root_operand'
debug: Coalescing test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0 with [test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#1, test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#2, test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#3]
debug: Coalescing tmp%0#0 with [tmp%0#2]
debug: Coalescing resulted in 11 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.approval_program
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice
debug: Performing post-SSA optimizations at level 1
debug: Performing SSA IR destructuring for test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested using strategy 'root_operand'
debug: Coalescing nested_tuple.1.0.Note#0 with [nested_tuple.1.0.Note#1]
debug: Coalescing nested_tuple.1.1.Note#0 with [nested_tuple.1.1.Note#1]
debug: Coalescing resulted in 4 replacement/s
debug: Sequentializing parallel copies in test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested
debug: Performing post-SSA optimizations at level 1
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.approval.400.destructured.ir
debug: Performing SSA IR destructuring for algopy.arc4.ARC4Contract.clear_state_program
debug: Converting to CSSA
debug: Removing Phi nodes
debug: Coalescing local variables in algopy.arc4.ARC4Contract.clear_state_program using strategy 'root_operand'
debug: Coalescing resulted in 0 replacement/s
debug: Sequentializing parallel copies in algopy.arc4.ARC4Contract.clear_state_program
debug: Performing post-SSA optimizations at level 1
debug: Output IR to inner_transactions_assignment/out/Contract.ir/Contract.clear.400.destructured.ir
debug: Inserted main_block@0.ops[1]: 'l-store-copy tmp%0#1 0'
debug: Replaced main_block@0.ops[3]: 'v-load tmp%0#1' with 'l-load tmp%0#1'
debug: Inserted main_abi_routing@2.ops[1]: 'l-store-copy tmp%2#0 0'
debug: Replaced main_abi_routing@2.ops[5]: 'v-load tmp%2#0' with 'l-load tmp%2#0'
debug: Inserted main_test_itxn_slice_route@3.ops[1]: 'l-store-copy tmp%3#0 0'
debug: Replaced main_test_itxn_slice_route@3.ops[3]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted main_test_itxn_slice_route@3.ops[5]: 'l-store-copy tmp%4#0 0'
debug: Replaced main_test_itxn_slice_route@3.ops[7]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted main_test_itxn_slice_route@3.ops[10]: 'l-store-copy tmp%5#0 0'
debug: Replaced main_test_itxn_slice_route@3.ops[12]: 'v-load tmp%5#0' with 'l-load tmp%5#0'
debug: Inserted main_test_itxn_slice_route@3.ops[16]: 'l-store-copy test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_itxn_slice_route@3.ops[18]: 'v-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_test_itxn_nested_route@4.ops[1]: 'l-store-copy tmp%7#0 0'
debug: Replaced main_test_itxn_nested_route@4.ops[3]: 'v-load tmp%7#0' with 'l-load tmp%7#0'
debug: Inserted main_test_itxn_nested_route@4.ops[5]: 'l-store-copy tmp%8#0 0'
debug: Replaced main_test_itxn_nested_route@4.ops[7]: 'v-load tmp%8#0' with 'l-load tmp%8#0'
debug: Inserted main_test_itxn_nested_route@4.ops[10]: 'l-store-copy tmp%9#0 0'
debug: Replaced main_test_itxn_nested_route@4.ops[12]: 'v-load tmp%9#0' with 'l-load tmp%9#0'
debug: Inserted main_test_itxn_nested_route@4.ops[16]: 'l-store-copy test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_test_itxn_nested_route@4.ops[18]: 'v-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_bare_routing@7.ops[1]: 'l-store-copy tmp%11#0 0'
debug: Replaced main_bare_routing@7.ops[3]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted main___algopy_default_create@8.ops[1]: 'l-store-copy tmp%12#0 0'
debug: Replaced main___algopy_default_create@8.ops[3]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted main___algopy_default_create@8.ops[5]: 'l-store-copy tmp%13#0 0'
debug: Replaced main___algopy_default_create@8.ops[7]: 'v-load tmp%13#0' with 'l-load tmp%13#0'
debug: Inserted main___algopy_default_create@8.ops[10]: 'l-store-copy test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main___algopy_default_create@8.ops[12]: 'v-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted main_after_if_else@11.ops[1]: 'l-store-copy test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0 0'
debug: Replaced main_after_if_else@11.ops[3]: 'v-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0' with 'l-load test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__%0#0'
debug: Inserted test_itxn_slice_block@0.ops[56]: 'l-store-copy tmp%0#0 0'
debug: Replaced test_itxn_slice_block@0.ops[58]: 'v-load tmp%0#0' with 'l-load tmp%0#0'
debug: Inserted test_itxn_slice_block@0.ops[63]: 'l-store-copy tmp%1#0 0'
debug: Replaced test_itxn_slice_block@0.ops[65]: 'v-load tmp%1#0' with 'l-load tmp%1#0'
debug: Inserted test_itxn_slice_block@0.ops[50]: 'l-store-copy sliced_txns.0.Note#0 0'
debug: Replaced test_itxn_slice_block@0.ops[54]: 'v-load sliced_txns.0.Note#0' with 'l-load sliced_txns.0.Note#0'
debug: Inserted test_itxn_slice_block@0.ops[1]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_slice_block@0.ops[8]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_slice_block@0.ops[54]: 'l-store-copy sliced_txns.1.Note#0 1'
debug: Replaced test_itxn_slice_block@0.ops[63]: 'v-load sliced_txns.1.Note#0' with 'l-load sliced_txns.1.Note#0'
debug: Inserted test_itxn_slice_block@0.ops[33]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_slice_block@0.ops[44]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_slice_block@0.ops[9]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_slice_block@0.ops[33]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_nested_block@0.ops[56]: 'l-store-copy tmp%3#0 0'
debug: Replaced test_itxn_nested_block@0.ops[58]: 'v-load tmp%3#0' with 'l-load tmp%3#0'
debug: Inserted test_itxn_nested_block@0.ops[63]: 'l-store-copy tmp%4#0 0'
debug: Replaced test_itxn_nested_block@0.ops[65]: 'v-load tmp%4#0' with 'l-load tmp%4#0'
debug: Inserted test_itxn_nested_block@0.ops[110]: 'l-store-copy tmp%11#0 0'
debug: Replaced test_itxn_nested_block@0.ops[112]: 'v-load tmp%11#0' with 'l-load tmp%11#0'
debug: Inserted test_itxn_nested_block@0.ops[117]: 'l-store-copy tmp%12#0 0'
debug: Replaced test_itxn_nested_block@0.ops[119]: 'v-load tmp%12#0' with 'l-load tmp%12#0'
debug: Inserted test_itxn_nested_block@0.ops[50]: 'l-store-copy nested_tuple.1.0.Note#0 0'
debug: Replaced test_itxn_nested_block@0.ops[54]: 'v-load nested_tuple.1.0.Note#0' with 'l-load nested_tuple.1.0.Note#0'
debug: Inserted test_itxn_nested_block@0.ops[105]: 'l-store-copy nested_tuple.1.0.Note#0 0'
debug: Replaced test_itxn_nested_block@0.ops[109]: 'v-load nested_tuple.1.0.Note#0' with 'l-load nested_tuple.1.0.Note#0'
debug: Inserted test_itxn_nested_block@0.ops[1]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_nested_block@0.ops[8]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_nested_block@0.ops[54]: 'l-store-copy nested_tuple.1.1.Note#0 1'
debug: Replaced test_itxn_nested_block@0.ops[63]: 'v-load nested_tuple.1.1.Note#0' with 'l-load nested_tuple.1.1.Note#0'
debug: Inserted test_itxn_nested_block@0.ops[110]: 'l-store-copy nested_tuple.1.1.Note#0 1'
debug: Replaced test_itxn_nested_block@0.ops[119]: 'v-load nested_tuple.1.1.Note#0' with 'l-load nested_tuple.1.1.Note#0'
debug: Inserted test_itxn_nested_block@0.ops[33]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_nested_block@0.ops[44]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_nested_block@0.ops[9]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_nested_block@0.ops[33]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_nested_block@0.ops[78]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_nested_block@0.ops[102]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Inserted test_itxn_nested_block@0.ops[46]: 'l-store-copy pay1%%param_Receiver_idx_0#0 0'
debug: Replaced test_itxn_nested_block@0.ops[78]: 'v-load pay1%%param_Receiver_idx_0#0' with 'l-load pay1%%param_Receiver_idx_0#0'
debug: Found 3 edge set/s for algopy.arc4.ARC4Contract.approval_program
debug: Allocated 1 variable/s to x-stack: tmp%0#0
debug: shared x-stack for main_test_itxn_slice_route@3 -> main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_test_itxn_nested_route@4 -> main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main___algopy_default_create@8 -> main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12: tmp%0#0
debug: shared x-stack for main_after_if_else@11 -> main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12: tmp%0#0
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.approval_program() -> uint64:
inner_transactions_assignment/contract.py:12 debug: optimizing TEAL subroutine ops test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice() -> void:
inner_transactions_assignment/contract.py:29 debug: optimizing TEAL subroutine ops test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested() -> void:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.approval_program() -> uint64:
debug: replacing `b main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12` with `return`
debug: replacing `b main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12` with `return`
debug: inlining single reference block main_block@0 into main
debug: inlining single reference block main_abi_routing@2 into main
debug: inlining single reference block main_after_inlined_test_cases.inner_transactions_assignment.contract.Contract.__puya_arc4_router__@12 into main_after_if_else@11
debug: inlining single reference block main___algopy_default_create@8 into main_bare_routing@7
debug: removing explicit jump to fall-through block main_after_if_else@11
inner_transactions_assignment/contract.py:12 debug: optimizing TEAL subroutine blocks test_cases.inner_transactions_assignment.contract.Contract.test_itxn_slice() -> void:
debug: inlining single reference block test_itxn_slice_block@0 into test_itxn_slice
inner_transactions_assignment/contract.py:29 debug: optimizing TEAL subroutine blocks test_cases.inner_transactions_assignment.contract.Contract.test_itxn_nested() -> void:
debug: inlining single reference block test_itxn_nested_block@0 into test_itxn_nested
debug: optimizing TEAL subroutine ops algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: optimizing TEAL subroutine blocks algopy.arc4.ARC4Contract.clear_state_program() -> uint64:
debug: inlining single reference block main_block@0 into main
info: Writing inner_transactions_assignment/out/Contract.arc32.json
info: Writing inner_transactions_assignment/out/Contract.arc56.json
info: Writing inner_transactions_assignment/out/Contract.approval.teal
info: Writing inner_transactions_assignment/out/Contract.clear.teal
info: Writing inner_transactions_assignment/out/Contract.approval.bin
info: Writing inner_transactions_assignment/out/Contract.clear.bin
info: Writing inner_transactions_assignment/out/Contract.approval.stats.txt
info: Writing inner_transactions_assignment/out/Contract.clear.stats.txt
info: Writing inner_transactions_assignment/out/Contract.approval.puya.map
info: Writing inner_transactions_assignment/out/Contract.clear.puya.map
info: writing inner_transactions_assignment/out/client_Contract.py