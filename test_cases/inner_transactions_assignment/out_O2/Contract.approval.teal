#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 0 1 3
    bytecblock 0x61636667 0x70617932 "pay1" "TEST" "TST" "pay3" 0x6163666732 0x70617935
    intc_1 // 1
    txn NumAppArgs
    bz main_bare_routing@16
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert
    pushbytess 0xe46d9019 0xf883853e // method "test_itxn_slice()void", method "test_itxn_nested()void"
    txna ApplicationArgs 0
    match main_test_itxn_slice_route@6 main_test_itxn_nested_route@7
    err

main_test_itxn_nested_route@7:
    txn Sender
    itxn_begin
    bytec_2 // "pay1"
    itxn_field Note
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "acfg"
    itxn_field Note
    bytec_3 // "TEST"
    itxn_field ConfigAssetName
    bytec 4 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    bytec_1 // "pay2"
    itxn_field Note
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    bytec 5 // "pay3"
    itxn_field Note
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 2 Note
    gitxn 1 Note
    bytec_0 // 0x61636667
    ==
    assert
    bytec_1 // 0x70617932
    ==
    assert
    itxn_begin
    bytec_2 // "pay1"
    itxn_field Note
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec 6 // "acfg2"
    itxn_field Note
    bytec_3 // "TEST"
    itxn_field ConfigAssetName
    bytec 4 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Amount
    itxn_field Receiver
    bytec 7 // "pay5"
    itxn_field Note
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    itxn Note
    gitxn 1 Note
    bytec 6 // 0x6163666732
    ==
    assert
    bytec 7 // 0x70617935
    ==
    return

main_test_itxn_slice_route@6:
    txn Sender
    itxn_begin
    bytec_2 // "pay1"
    itxn_field Note
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // 1
    itxn_field ConfigAssetTotal
    bytec_0 // "acfg"
    itxn_field Note
    bytec_3 // "TEST"
    itxn_field ConfigAssetName
    bytec 4 // "TST"
    itxn_field ConfigAssetUnitName
    intc_2 // acfg
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Amount
    dup
    itxn_field Receiver
    bytec_1 // "pay2"
    itxn_field Note
    intc_0 // 0
    itxn_field Fee
    itxn_next
    intc_1 // pay
    itxn_field TypeEnum
    intc_0 // 0
    itxn_field Amount
    itxn_field Receiver
    bytec 5 // "pay3"
    itxn_field Note
    intc_0 // 0
    itxn_field Fee
    itxn_submit
    gitxn 2 Note
    gitxn 1 Note
    bytec_0 // 0x61636667
    ==
    assert
    bytec_1 // 0x70617932
    ==
    return

main_bare_routing@16:
    txn OnCompletion
    !
    assert
    txn ApplicationID
    !
    return // on error: can only call when creating
