{
  "version": 3,
  "sources": [
    "../marketplace_with_mutable_struct.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCY;;;;;;AAAJ;;AAKO;;;;AAAP;AAuBR;;;AAEwD;;AAAA;;AAAA;AACE;;AAAR;;AAAA;AAC2B;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAG5C;AAAlB;AAAP;AAEA;AAIO;;;AAAP;AAER;;;AAEmB;;AAAA;;AAAA;;AAAA;;AAAJ;AAAP;AAEO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAkB;;AAAlB;AAAP;AAEA;AACe;;AAAsB;;AAAiD;;;;;;;AADtF;;;;AAAA;;;AAAA;;AAIR;;;AAQe;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAkB;;;AAAlB;AAAP;AAEuB;;AAAkB;;AAAA;;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACY;AAAX;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAEO;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAoB;AAApB;AAAP;AAGc;;AAAA;;AAEH;;AAAA;AAHU;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIb;AAJa;AAAA;AAKD;AALC;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;;AAQR;;;AAE+B;;AAAkB;;AAAA;;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEC;;AAAA;;AAAe;;AAAf;AAAP;AACO;;AAAA;;AAAuB;;AAAvB;AAAP;AACO;;AAAA;;AAAoB;AAApB;AAAP;AAEW;AAAA;;AAAA;AAAA;AAAA;AAEH;AAAA;;AAAA;AAAA;AAAA;AAAA;AACY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACT;AAAA;AAAA;;AAAA;AAAA;AACM;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AAAA;AAAA;AAAA;AAAqB;;AAAA;;AAArB;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;;AAQR;;;AAE+B;;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEK;AAAA;;AAAA;AAAA;AAAA;AAEH;AAAA;;AAAA;AAAA;AAAA;AAAA;AACY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACT;AAAA;AAAA;;AAAA;AAAA;AACG;AAAA;AAAA;AAAA;AAJO;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;;AAQR;;;AASc;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEI;AAAA;;AAAA;AAAA;AAAA;AAEwC;AAAA;AAAA;AAAA;AAAA;AAAsB;;AAAA;;AAAA;AAApD;;AAAA;;AAAA;;AAAA;;;AAEb;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAA;;AAAA;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACY;AAAA;;AAAA;AAAA;AAAA;AAAA;AACT;AAAA;AAAA;;AAAA;AAAA;AACM;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AAAA;AAAA;AAAA;AAAA;;AAAA;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;AAQA;AACe;;AAAsB;;AAAyB;;;;;;;;AAD9D;;;;AAAA;;;AAAA;;AAIR;;;AAE+B;;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAN;AAEU;AAAA;AAAA;AAAA;AAAA;AAAV;AACG;AAAA;;AAAA;AAAkB;;AAAlB;AAAX;;;AAEgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAa;AAAA;;AAAA;AAAA;AAAA;AAAyB;;AAAA;;AAAA;AADpB;;AAAA;;AAAA;;AAAA;;;AAGtB;AAAsB;AAAA;AAAA;;AAAA;AAAuB;;;;;AAA7C;;;AAAA;;;AAAA;AAEA;AAAA;;AAAA;AAAJ;;AAEA;AAAsB;;AAAmB;;;;;;;AAAzC;;;AAAA;;;AAAA;AAEA;AACe;;AAAsB;;AAAyB;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAD9D;;;;AAAA;;;AAAA;;AAIR;;;AAUc;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAN;AAEU;AAAA;AAAA;AAAA;AAAA;AAAV;AACG;AAAA;;AAAA;AAAkB;;AAAlB;AAAX;;;AACmC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAhB;;AAAA;AAAP;AAGI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAa;AAAA;;AAAA;AAAA;AAAA;AAAyB;;AAAA;;AAAA;AADrB;;AAAA;;AAAA;;AAAA;;;AAIrB;AAAsB;AAAA;AAAA;;AAAA;AAAuB;;;;;AAA7C;;;AAAA;;;AAAA;AAE4D;;AAAA;;AAAA;AAA7C;;AAAA;;AAAA;;AAAA;;;AAEZ;;AAAA;;AAAkB;;AAAlB;AAAP;AACO;;AAAA;;AAAoB;;AAApB;AAAP;AACO;;AAAA;;AAAA;AAAP;AAGc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACG;AAAA;AAAA;AAAA;AACN;;AAAA;;AAHU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;;AAQR;;;;AAE+B;;AAAjB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAN;AAEU;AAAA;AAAA;AAAA;AAAA;AAAV;;AACO;AAAA;;AAAA;AAAkB;;AAAlB;AAAP;AAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB;;AAAA;AAAA;AAAA;AAApB;AAArB;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;;AAGkB;;AAAA;;AAAA;AAAA;AAAA;AAAyB;;AAAA;;AAAA;AADzB;;AAAA;;AAAA;;AAAA;;;AAIlB;AAAsB;;AAAA;;;;;AAAtB;;;AAAA;;;AAAA;AAEA;AACe;;AAAsB;;AAAA;AAAA;;AAAA;AAA6B;;;;;;;;AADlE;;;;AAAA;;;AAAA;AAKW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACS;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AACN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALa;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;;AAAA;AAAA;AAAA;;AAZyE;;AAAA;;AAAA;AAAA;AAAA;;;;AA9MjF;;AAAA;AAAA;AAAA;;;AAAA;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;;;;;AAAA;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;AAuMK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAvML;;;AAAA;AAAA;;AAAA;;;AAAA;AAuMK;;;AAAA;;;;AApCA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnKL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAmKK;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAnBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhJL;;;AAAA;AAAA;;AAAA;;;AAAA;AAgJK;;;AAAA;;;;AA/BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjHL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAiHK;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAbA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApGL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAoGK;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAjBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAnFL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAmFK;;;AAAA;;;;AA3BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxDL;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAwDK;;AAAA;;AAAA;;AAAA;;AAAA;;;AAAA;;;;AAXA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7CL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AA6CK;;;AAAA;;;;AAJA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;;AAzCL;;AAAA;AAAA;AAAA;;;;;;;;;;;;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 8 1 16"
    },
    "7": {
      "op": "bytecblock 0x 0x6c697374696e6773"
    },
    "19": {
      "block": "main_block@0",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "21": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "24": {
      "block": "main_call___init__@1",
      "stack_in": [],
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__init__",
      "op": "callsub __init__"
    },
    "27": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "algopy.arc4.ARC4Contract.approval_program",
      "op": "callsub approval_program",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "30": {
      "op": "return",
      "stack_out": []
    },
    "31": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__init__",
      "params": {},
      "block": "__init___block@0",
      "stack_in": [],
      "op": "pushbytes \"init\"",
      "defined_out": [
        "\"init\""
      ],
      "stack_out": [
        "\"init\""
      ]
    },
    "37": {
      "op": "log",
      "stack_out": []
    },
    "38": {
      "retsub": true,
      "op": "retsub"
    },
    "39": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.listings_box_mbr",
      "params": {},
      "block": "listings_box_mbr_block@0",
      "stack_in": [],
      "op": "pushint 50500 // 50500",
      "defined_out": [
        "50500"
      ],
      "stack_out": [
        "50500"
      ]
    },
    "43": {
      "retsub": true,
      "op": "retsub"
    },
    "44": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "params": {
        "quantity#0": "uint64",
        "price#0": "uint64",
        "asset_decimals#0": "uint64"
      },
      "block": "quantity_price",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "47": {
      "block": "quantity_price_block@0",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "price#0 (copy)"
      ],
      "stack_out": [
        "price#0 (copy)"
      ]
    },
    "49": {
      "op": "frame_dig -3",
      "defined_out": [
        "price#0 (copy)",
        "quantity#0 (copy)"
      ],
      "stack_out": [
        "price#0 (copy)",
        "quantity#0 (copy)"
      ]
    },
    "51": {
      "op": "mulw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ],
      "stack_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "52": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ],
      "stack_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10"
      ]
    },
    "54": {
      "op": "frame_dig -1",
      "defined_out": [
        "10",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "asset_decimals#0 (copy)"
      ],
      "stack_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "10",
        "asset_decimals#0 (copy)"
      ]
    },
    "56": {
      "op": "expw",
      "defined_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ],
      "stack_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "57": {
      "op": "uncover 3",
      "stack_out": [
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0",
        "amount_not_scaled_high#0"
      ]
    },
    "59": {
      "op": "uncover 3",
      "stack_out": [
        "scaling_factor_high#0",
        "scaling_factor_low#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0"
      ]
    },
    "61": {
      "op": "uncover 3",
      "stack_out": [
        "scaling_factor_low#0",
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0"
      ]
    },
    "63": {
      "op": "uncover 3",
      "stack_out": [
        "amount_not_scaled_high#0",
        "amount_not_scaled_low#0",
        "scaling_factor_high#0",
        "scaling_factor_low#0"
      ]
    },
    "65": {
      "op": "divmodw",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "66": {
      "op": "popn 2",
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "68": {
      "op": "swap",
      "defined_out": [
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ],
      "stack_out": [
        "amount_to_be_paid#0",
        "_quotient_high#0"
      ]
    },
    "69": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "_quotient_high#0",
        "amount_to_be_paid#0"
      ],
      "stack_out": [
        "amount_to_be_paid#0",
        "_quotient_high#0",
        "0"
      ]
    },
    "70": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "amount_to_be_paid#0",
        "tmp%8#0"
      ]
    },
    "71": {
      "op": "assert",
      "stack_out": [
        "amount_to_be_paid#0"
      ]
    },
    "72": {
      "retsub": true,
      "op": "retsub"
    },
    "73": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.get_listings_mbr",
      "params": {},
      "block": "get_listings_mbr_block@0",
      "stack_in": [],
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.listings_box_mbr",
      "op": "callsub listings_box_mbr",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "76": {
      "retsub": true,
      "op": "retsub"
    },
    "77": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.allow_asset",
      "params": {
        "mbr_pay#0": "uint64",
        "asset#0": "uint64"
      },
      "block": "allow_asset",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "80": {
      "block": "allow_asset_block@0",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "82": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "84": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "86": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "88": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "89": {
      "op": "assert",
      "stack_out": []
    },
    "90": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "92": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "94": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "96": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "97": {
      "op": "assert",
      "stack_out": []
    },
    "98": {
      "op": "frame_dig -2",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "100": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "102": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "104": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "105": {
      "op": "assert",
      "stack_out": []
    },
    "106": {
      "op": "itxn_begin"
    },
    "107": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "109": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "111": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "112": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "114": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "116": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "118": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "120": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "122": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "123": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "125": {
      "block": "allow_asset_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "126": {
      "retsub": true,
      "op": "retsub"
    },
    "127": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.first_deposit",
      "params": {
        "mbr_pay#0": "uint64",
        "xfer#0": "uint64",
        "unitary_price#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "first_deposit",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "130": {
      "block": "first_deposit_block@0",
      "stack_in": [],
      "op": "frame_dig -4",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "132": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "134": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "136": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "137": {
      "op": "assert",
      "stack_out": []
    },
    "138": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "140": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "142": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "144": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "145": {
      "op": "assert",
      "stack_out": []
    },
    "146": {
      "op": "frame_dig -4",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "148": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "150": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.listings_box_mbr",
      "op": "callsub listings_box_mbr",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "153": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "154": {
      "op": "assert",
      "stack_out": []
    },
    "155": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "157": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%9#0",
        "xfer#0 (copy)"
      ]
    },
    "159": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "161": {
      "op": "swap",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "162": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "163": {
      "op": "swap",
      "stack_out": [
        "tmp%10#0",
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "164": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "aggregate%encoded%0#1"
      ]
    },
    "165": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%0#1",
        "tmp%10#0"
      ]
    },
    "166": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "167": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "168": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "170": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "171": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "172": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "173": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "174": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "175": {
      "op": "dig 1",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0 (copy)"
      ]
    },
    "177": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "178": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "key#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "key#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "179": {
      "op": "bury 1",
      "stack_out": [
        "key#0",
        "maybe_exists%0#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "key#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%12#0"
      ]
    },
    "182": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "183": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "185": {
      "op": "gtxns Sender",
      "defined_out": [
        "key#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%13#0"
      ]
    },
    "187": {
      "op": "txn Sender",
      "defined_out": [
        "key#0",
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "189": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%15#0"
      ]
    },
    "190": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "191": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "193": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "key#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%16#0"
      ]
    },
    "195": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "key#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "197": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%18#0"
      ]
    },
    "198": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "199": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "201": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%19#0"
      ]
    },
    "203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%19#0",
        "0"
      ]
    },
    "204": {
      "op": ">",
      "defined_out": [
        "key#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%20#0"
      ]
    },
    "205": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "206": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "208": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%21#0"
      ]
    },
    "210": {
      "op": "global ZeroAddress",
      "defined_out": [
        "key#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "212": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "tmp%21#0"
      ]
    },
    "213": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "key#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "214": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "215": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "216": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "aggregate%encoded%4#1"
      ]
    },
    "217": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "tmp%22#0",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "aggregate%encoded%4#1",
        "unitary_price#0 (copy)"
      ]
    },
    "219": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "key#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%22#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "220": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "221": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "222": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%6#1"
      ]
    },
    "223": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "aggregate%encoded%6#1",
        "0"
      ]
    },
    "224": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1"
      ]
    },
    "226": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "0"
      ]
    },
    "227": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "228": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1"
      ]
    },
    "229": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "230": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%23#0"
      ]
    },
    "231": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "stack_out": [
        "key#0",
        "tmp%23#0",
        "0x6c697374696e6773"
      ]
    },
    "232": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%23#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0",
        "box_prefixed_key%1#0"
      ]
    },
    "235": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%23#0"
      ]
    },
    "236": {
      "op": "box_put",
      "stack_out": []
    },
    "237": {
      "retsub": true,
      "op": "retsub"
    },
    "238": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.deposit",
      "params": {
        "xfer#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "deposit",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "241": {
      "block": "deposit_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "243": {
      "op": "frame_dig -2",
      "defined_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "xfer#0 (copy)"
      ]
    },
    "245": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "247": {
      "op": "swap",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "248": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "249": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "250": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "aggregate%encoded%0#1"
      ]
    },
    "251": {
      "op": "swap",
      "stack_out": [
        "aggregate%encoded%0#1",
        "tmp%1#0"
      ]
    },
    "252": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "253": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "254": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "256": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "257": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "258": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "260": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "262": {
      "op": "gtxns Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0"
      ]
    },
    "264": {
      "op": "txn Sender",
      "defined_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "266": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%5#0"
      ]
    },
    "267": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "268": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "270": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0"
      ]
    },
    "272": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "274": {
      "op": "==",
      "defined_out": [
        "key#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%8#0"
      ]
    },
    "275": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "276": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "xfer#0 (copy)"
      ]
    },
    "278": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0"
      ]
    },
    "280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%9#0",
        "0"
      ]
    },
    "281": {
      "op": ">",
      "defined_out": [
        "key#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%10#0"
      ]
    },
    "282": {
      "op": "assert",
      "stack_out": [
        "key#0"
      ]
    },
    "283": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "284": {
      "op": "dig 1",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0 (copy)"
      ]
    },
    "286": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "287": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "288": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "existing#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0"
      ]
    },
    "289": {
      "op": "dup",
      "defined_out": [
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "290": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)",
        "48"
      ]
    },
    "292": {
      "op": "intc_1 // 8",
      "defined_out": [
        "48",
        "8",
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)",
        "48",
        "8"
      ]
    },
    "293": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "tuple_item%0#0"
      ]
    },
    "294": {
      "op": "btoi",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "values%0#0"
      ]
    },
    "295": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0"
      ]
    },
    "296": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "297": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)",
        "56"
      ]
    },
    "299": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)",
        "56",
        "8"
      ]
    },
    "300": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "tuple_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "tuple_item%1#0"
      ]
    },
    "301": {
      "op": "btoi",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "values%1#0"
      ]
    },
    "302": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0"
      ]
    },
    "303": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "304": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)",
        "16"
      ]
    },
    "305": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)",
        "16",
        "32"
      ]
    },
    "307": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "values%2#0"
      ]
    },
    "308": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0"
      ]
    },
    "309": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "310": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "existing#0 (copy)",
        "8"
      ]
    },
    "311": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "existing#0 (copy)",
        "8",
        "8"
      ]
    },
    "312": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "tuple_item%3#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "tuple_item%3#0"
      ]
    },
    "313": {
      "op": "btoi",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "values%3#0"
      ]
    },
    "314": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "existing#0"
      ]
    },
    "315": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "existing#0",
        "0"
      ]
    },
    "316": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "existing#0",
        "0",
        "8"
      ]
    },
    "317": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "tuple_item%4#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "tuple_item%4#0"
      ]
    },
    "318": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ]
    },
    "319": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "xfer#0 (copy)"
      ]
    },
    "321": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "key#0",
        "tmp%11#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "tmp%11#0"
      ]
    },
    "323": {
      "op": "+",
      "defined_out": [
        "key#0",
        "tmp%12#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "tmp%12#0"
      ]
    },
    "324": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "325": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "326": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "327": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "aggregate%encoded%4#1"
      ]
    },
    "328": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%4#1",
        "values%3#0"
      ]
    },
    "329": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "331": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%encoded%6#1"
      ]
    },
    "333": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%6#1",
        "values%0#0"
      ]
    },
    "335": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "key#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "336": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "key#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%7#1"
      ]
    },
    "337": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "values%1#0"
      ]
    },
    "338": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "339": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1"
      ]
    },
    "340": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "341": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%13#0"
      ]
    },
    "342": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "stack_out": [
        "key#0",
        "tmp%13#0",
        "0x6c697374696e6773"
      ]
    },
    "343": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%13#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "345": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "box_prefixed_key%1#0"
      ]
    },
    "346": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%13#0"
      ]
    },
    "347": {
      "op": "box_put",
      "stack_out": []
    },
    "348": {
      "retsub": true,
      "op": "retsub"
    },
    "349": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.set_price",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "set_price",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "352": {
      "block": "set_price_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "354": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "355": {
      "op": "swap",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "356": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1"
      ]
    },
    "357": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ]
    },
    "359": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "360": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "361": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "363": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "364": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "365": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "366": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "367": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "368": {
      "op": "dig 1",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0 (copy)"
      ]
    },
    "370": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "371": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "372": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "existing#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0"
      ]
    },
    "373": {
      "op": "dup",
      "defined_out": [
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "374": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)",
        "48"
      ]
    },
    "376": {
      "op": "intc_1 // 8",
      "defined_out": [
        "48",
        "8",
        "existing#0",
        "existing#0 (copy)",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "existing#0 (copy)",
        "48",
        "8"
      ]
    },
    "377": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "tuple_item%0#0"
      ]
    },
    "378": {
      "op": "btoi",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "existing#0",
        "values%0#0"
      ]
    },
    "379": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0"
      ]
    },
    "380": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "381": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)",
        "56"
      ]
    },
    "383": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "existing#0 (copy)",
        "56",
        "8"
      ]
    },
    "384": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "tuple_item%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "tuple_item%1#0"
      ]
    },
    "385": {
      "op": "btoi",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "existing#0",
        "values%1#0"
      ]
    },
    "386": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0"
      ]
    },
    "387": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)"
      ]
    },
    "388": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)",
        "16"
      ]
    },
    "389": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "existing#0",
        "existing#0 (copy)",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "existing#0 (copy)",
        "16",
        "32"
      ]
    },
    "391": {
      "op": "extract3",
      "defined_out": [
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "existing#0",
        "values%2#0"
      ]
    },
    "392": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "existing#0",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "0"
      ]
    },
    "394": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "existing#0",
        "0",
        "8"
      ]
    },
    "395": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "tuple_item%3#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "tuple_item%3#0"
      ]
    },
    "396": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "397": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "398": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "399": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "400": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%4#1"
      ]
    },
    "401": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "unitary_price#0 (copy)",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%4#1",
        "unitary_price#0 (copy)"
      ]
    },
    "403": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "404": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "405": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "406": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "key#0",
        "values%0#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%0#0",
        "values%1#0",
        "aggregate%encoded%6#1"
      ]
    },
    "407": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%6#1",
        "values%0#0"
      ]
    },
    "409": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "key#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "410": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "key#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "aggregate%encoded%7#1"
      ]
    },
    "411": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "values%1#0"
      ]
    },
    "412": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "413": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1"
      ]
    },
    "414": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "415": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%2#0"
      ]
    },
    "416": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "stack_out": [
        "key#0",
        "tmp%2#0",
        "0x6c697374696e6773"
      ]
    },
    "417": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%2#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "419": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "box_prefixed_key%1#0"
      ]
    },
    "420": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%2#0"
      ]
    },
    "421": {
      "op": "box_put",
      "stack_out": []
    },
    "422": {
      "retsub": true,
      "op": "retsub"
    },
    "423": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.buy",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "buy_pay#0": "uint64",
        "quantity#0": "uint64"
      },
      "block": "buy",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "426": {
      "block": "buy_block@0",
      "stack_in": [],
      "op": "frame_dig -5",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "428": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "429": {
      "op": "swap",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "430": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1"
      ]
    },
    "431": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ]
    },
    "433": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "434": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "435": {
      "op": "frame_dig -3",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "437": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "438": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "439": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "440": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "441": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "442": {
      "op": "dig 1",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "key#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0 (copy)"
      ]
    },
    "444": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "445": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "446": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "447": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "448": {
      "op": "intc_1 // 8",
      "defined_out": [
        "8",
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "8"
      ]
    },
    "449": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "8",
        "8"
      ]
    },
    "450": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tuple_item%0#0"
      ]
    },
    "451": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ]
    },
    "452": {
      "op": "frame_dig -4",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "asset#0 (copy)"
      ]
    },
    "454": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%0#0",
        "key#0",
        "listing#0",
        "value%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "456": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "value%0#0"
      ]
    },
    "457": {
      "op": "frame_dig -1",
      "defined_out": [
        "key#0",
        "listing#0",
        "quantity#0 (copy)",
        "value%0#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "value%0#0",
        "quantity#0 (copy)"
      ]
    },
    "459": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "value%0#0",
        "quantity#0 (copy)",
        "values%0#0"
      ]
    },
    "461": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "quantity#0 (copy)",
        "values%0#0",
        "value%0#0"
      ]
    },
    "463": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "op": "callsub quantity_price",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0"
      ]
    },
    "466": {
      "op": "frame_dig -2",
      "defined_out": [
        "amount_to_be_paid#0",
        "buy_pay#0 (copy)",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "buy_pay#0 (copy)"
      ]
    },
    "468": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%2#0"
      ]
    },
    "470": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "472": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%4#0"
      ]
    },
    "473": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0"
      ]
    },
    "474": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "buy_pay#0 (copy)"
      ]
    },
    "476": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%5#0"
      ]
    },
    "478": {
      "op": "frame_dig -5",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "owner#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%5#0",
        "owner#0 (copy)"
      ]
    },
    "480": {
      "op": "==",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%6#0"
      ]
    },
    "481": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0"
      ]
    },
    "482": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "buy_pay#0 (copy)"
      ]
    },
    "484": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_paid#0",
        "key#0",
        "listing#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_paid#0",
        "tmp%7#0"
      ]
    },
    "486": {
      "op": "==",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%8#0"
      ]
    },
    "487": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "488": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "489": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "491": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "48",
        "8"
      ]
    },
    "492": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tuple_item%1#0"
      ]
    },
    "493": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0"
      ]
    },
    "494": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0"
      ]
    },
    "495": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "496": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "498": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)",
        "56",
        "8"
      ]
    },
    "499": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%2#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0",
        "tuple_item%2#0"
      ]
    },
    "500": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "listing#0",
        "values%2#0"
      ]
    },
    "501": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "listing#0"
      ]
    },
    "502": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "503": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)",
        "16"
      ]
    },
    "504": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "key#0",
        "listing#0",
        "listing#0 (copy)",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)",
        "16",
        "32"
      ]
    },
    "506": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "listing#0",
        "values%3#0"
      ]
    },
    "507": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0"
      ]
    },
    "508": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "509": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0",
        "listing#0 (copy)",
        "8"
      ]
    },
    "510": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0",
        "listing#0 (copy)",
        "8",
        "8"
      ]
    },
    "511": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%4#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0",
        "tuple_item%4#0"
      ]
    },
    "512": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "listing#0",
        "values%4#0"
      ]
    },
    "513": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "listing#0"
      ]
    },
    "514": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "listing#0",
        "0"
      ]
    },
    "515": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "listing#0",
        "0",
        "8"
      ]
    },
    "516": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "tuple_item%5#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "tuple_item%5#0"
      ]
    },
    "517": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "values%5#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "values%5#0"
      ]
    },
    "518": {
      "op": "frame_dig -1",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "values%5#0",
        "quantity#0 (copy)"
      ]
    },
    "520": {
      "op": "-",
      "defined_out": [
        "key#0",
        "tmp%9#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "tmp%9#0"
      ]
    },
    "521": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "522": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "523": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "524": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "values%4#0",
        "aggregate%encoded%4#1"
      ]
    },
    "525": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "aggregate%encoded%4#1",
        "values%4#0"
      ]
    },
    "526": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "values%3#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "527": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "key#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "528": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "key#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%1#0",
        "values%2#0",
        "aggregate%encoded%6#1"
      ]
    },
    "530": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "values%2#0",
        "aggregate%encoded%6#1",
        "values%1#0"
      ]
    },
    "532": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "key#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%2#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "533": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "key#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "values%2#0",
        "aggregate%encoded%7#1"
      ]
    },
    "534": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "values%2#0"
      ]
    },
    "535": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "536": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1"
      ]
    },
    "537": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "538": {
      "op": "concat",
      "defined_out": [
        "key#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "key#0",
        "tmp%10#0"
      ]
    },
    "539": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "stack_out": [
        "key#0",
        "tmp%10#0",
        "0x6c697374696e6773"
      ]
    },
    "540": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%10#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "542": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "box_prefixed_key%1#0"
      ]
    },
    "543": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%1#0",
        "tmp%10#0"
      ]
    },
    "544": {
      "op": "box_put",
      "stack_out": []
    },
    "545": {
      "op": "itxn_begin"
    },
    "546": {
      "op": "frame_dig -4",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "548": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "550": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "552": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "554": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "556": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "558": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "560": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "562": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "563": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "565": {
      "block": "buy_next_txn@1",
      "stack_in": [],
      "op": "itxn_submit"
    },
    "566": {
      "retsub": true,
      "op": "retsub"
    },
    "567": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.withdraw",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "570": {
      "block": "withdraw_block@0",
      "stack_in": [],
      "op": "txn Sender",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "572": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "573": {
      "op": "swap",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "574": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1"
      ]
    },
    "575": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ]
    },
    "577": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "578": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "579": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "581": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "582": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "583": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "584": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "585": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0"
      ]
    },
    "586": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "587": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "588": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "589": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "590": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "591": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "592": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "16"
      ]
    },
    "593": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "16",
        "32"
      ]
    },
    "595": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ]
    },
    "596": {
      "op": "global ZeroAddress",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%2#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "tmp%2#0"
      ]
    },
    "598": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%3#0"
      ]
    },
    "599": {
      "op": "bz withdraw_after_if_else@3",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "602": {
      "block": "withdraw_if_body@1",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "604": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "605": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "607": {
      "op": "intc_1 // 8",
      "defined_out": [
        "48",
        "8",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "48",
        "8"
      ]
    },
    "608": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "tuple_item%1#0"
      ]
    },
    "609": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%1#0"
      ]
    },
    "610": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0"
      ]
    },
    "611": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "612": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "listing#0 (copy)",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "614": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "listing#0 (copy)",
        "56",
        "8"
      ]
    },
    "615": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%2#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "tuple_item%2#0"
      ]
    },
    "616": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "values%2#0"
      ]
    },
    "617": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "values%2#0",
        "asset#0 (copy)"
      ]
    },
    "619": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%0#0",
        "listing#0",
        "value%0#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "values%2#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "621": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "values%2#0",
        "value%0#0"
      ]
    },
    "622": {
      "op": "uncover 3",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%2#0",
        "value%0#0",
        "values%1#0"
      ]
    },
    "624": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "value%0#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "626": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%1#0",
        "values%2#0",
        "value%0#0"
      ]
    },
    "628": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "op": "callsub quantity_price",
      "defined_out": [
        "current_bid_deposit#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "current_bid_deposit#0"
      ]
    },
    "631": {
      "op": "itxn_begin"
    },
    "632": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_deposit#0",
        "listing#0"
      ]
    },
    "633": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "current_bid_deposit#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_deposit#0",
        "listing#0",
        "16"
      ]
    },
    "634": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "current_bid_deposit#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_deposit#0",
        "listing#0",
        "16",
        "32"
      ]
    },
    "636": {
      "op": "extract3",
      "defined_out": [
        "current_bid_deposit#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_deposit#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "637": {
      "op": "swap",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "638": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "640": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "642": {
      "op": "intc_2 // pay",
      "defined_out": [
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "pay"
      ]
    },
    "643": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "645": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "646": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "648": {
      "block": "withdraw_next_txn@2",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "649": {
      "block": "withdraw_after_if_else@3",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "0x6c697374696e6773"
      ]
    },
    "650": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "652": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "box_prefixed_key%1#0"
      ]
    },
    "653": {
      "op": "box_del",
      "defined_out": [
        "key#0",
        "{box_del}"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "{box_del}"
      ]
    },
    "654": {
      "op": "pop",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "655": {
      "op": "itxn_begin"
    },
    "656": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "658": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.listings_box_mbr",
      "op": "callsub listings_box_mbr",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "661": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "663": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "665": {
      "op": "intc_2 // pay",
      "defined_out": [
        "key#0",
        "pay"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "pay"
      ]
    },
    "666": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "668": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "669": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "671": {
      "block": "withdraw_next_txn@4",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "672": {
      "op": "itxn_begin"
    },
    "673": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "675": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "677": {
      "op": "frame_dig 1",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0"
      ]
    },
    "679": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "0"
      ]
    },
    "680": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "listing#0",
        "0",
        "8"
      ]
    },
    "681": {
      "op": "extract3",
      "defined_out": [
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "listing#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "tuple_item%4#0"
      ]
    },
    "682": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%2%%param_AssetAmount_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%2%%param_AssetAmount_idx_0#0"
      ]
    },
    "683": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0",
        "inner_txn_params%2%%param_AssetReceiver_idx_0#0"
      ]
    },
    "685": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%2%%param_XferAsset_idx_0#0"
      ]
    },
    "687": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "689": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "axfer"
      ]
    },
    "691": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "693": {
      "op": "intc_0 // 0",
      "stack_out": [
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "694": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "696": {
      "block": "withdraw_next_txn@5",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "697": {
      "retsub": true,
      "op": "retsub"
    },
    "698": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.bid",
      "params": {
        "owner#0": "bytes",
        "asset#0": "uint64",
        "nonce#0": "uint64",
        "bid_pay#0": "uint64",
        "quantity#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "bid",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "701": {
      "block": "bid_block@0",
      "stack_in": [],
      "op": "frame_dig -6",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "703": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "704": {
      "op": "swap",
      "stack_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "705": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1"
      ]
    },
    "706": {
      "op": "frame_dig -5",
      "defined_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ]
    },
    "708": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "709": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1"
      ]
    },
    "710": {
      "op": "frame_dig -4",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "712": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "713": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "aggregate%encoded%2#1"
      ]
    },
    "714": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "715": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0"
      ]
    },
    "716": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0"
      ]
    },
    "717": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "718": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "719": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "720": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "721": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "722": {
      "op": "dup",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "723": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "16"
      ]
    },
    "724": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "16",
        "32"
      ]
    },
    "726": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ]
    },
    "727": {
      "op": "global ZeroAddress",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%1#0",
        "values%0#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%0#0",
        "tmp%1#0"
      ]
    },
    "729": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%2#0"
      ]
    },
    "730": {
      "op": "bz bid_after_if_else@3",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "733": {
      "block": "bid_if_body@1",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "735": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "736": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "738": {
      "op": "intc_1 // 8",
      "defined_out": [
        "56",
        "8",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "56",
        "8"
      ]
    },
    "739": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "tuple_item%1#0"
      ]
    },
    "740": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%1#0"
      ]
    },
    "741": {
      "op": "frame_dig -1",
      "defined_out": [
        "listing#0",
        "unitary_price#0 (copy)",
        "values%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%1#0",
        "unitary_price#0 (copy)"
      ]
    },
    "743": {
      "op": "<",
      "defined_out": [
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "tmp%3#0"
      ]
    },
    "744": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "745": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "746": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "48"
      ]
    },
    "748": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "48",
        "8"
      ]
    },
    "749": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "tuple_item%2#0"
      ]
    },
    "750": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%2#0"
      ]
    },
    "751": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0"
      ]
    },
    "752": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "753": {
      "op": "pushint 56 // 56",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "755": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "listing#0 (copy)",
        "56",
        "8"
      ]
    },
    "756": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%3#0",
        "values%2#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "tuple_item%3#0"
      ]
    },
    "757": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "values%3#0"
      ]
    },
    "758": {
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)",
        "listing#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "values%3#0",
        "asset#0 (copy)"
      ]
    },
    "760": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%0#0",
        "listing#0",
        "value%0#0",
        "values%2#0",
        "values%3#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "values%3#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "762": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%2#0",
        "listing#0",
        "values%3#0",
        "value%0#0"
      ]
    },
    "763": {
      "op": "uncover 3",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%3#0",
        "value%0#0",
        "values%2#0"
      ]
    },
    "765": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "value%0#0",
        "values%2#0",
        "values%3#0"
      ]
    },
    "767": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%2#0",
        "values%3#0",
        "value%0#0"
      ]
    },
    "769": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "op": "callsub quantity_price",
      "defined_out": [
        "current_bid_amount#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "current_bid_amount#0"
      ]
    },
    "772": {
      "op": "itxn_begin"
    },
    "773": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_amount#0",
        "listing#0"
      ]
    },
    "774": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "current_bid_amount#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_amount#0",
        "listing#0",
        "16"
      ]
    },
    "775": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "current_bid_amount#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_amount#0",
        "listing#0",
        "16",
        "32"
      ]
    },
    "777": {
      "op": "extract3",
      "defined_out": [
        "current_bid_amount#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "current_bid_amount#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "778": {
      "op": "swap",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "779": {
      "op": "itxn_field Amount",
      "stack_out": [
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "781": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "783": {
      "op": "intc_2 // pay",
      "defined_out": [
        "listing#0",
        "pay"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "pay"
      ]
    },
    "784": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "786": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "787": {
      "op": "itxn_field Fee",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "789": {
      "block": "bid_next_txn@2",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "790": {
      "block": "bid_after_if_else@3",
      "stack_in": [
        "key#0",
        "listing#0"
      ],
      "op": "frame_dig -5",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "asset#0 (copy)"
      ]
    },
    "792": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "794": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "key#0",
        "listing#0",
        "value%1#0"
      ]
    },
    "795": {
      "op": "frame_dig -2",
      "defined_out": [
        "quantity#0 (copy)",
        "value%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "value%1#0",
        "quantity#0 (copy)"
      ]
    },
    "797": {
      "op": "frame_dig -1",
      "defined_out": [
        "quantity#0 (copy)",
        "unitary_price#0 (copy)",
        "value%1#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "value%1#0",
        "quantity#0 (copy)",
        "unitary_price#0 (copy)"
      ]
    },
    "799": {
      "op": "uncover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "quantity#0 (copy)",
        "unitary_price#0 (copy)",
        "value%1#0"
      ]
    },
    "801": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "op": "callsub quantity_price",
      "defined_out": [
        "amount_to_be_bid#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0"
      ]
    },
    "804": {
      "op": "frame_dig -3",
      "defined_out": [
        "amount_to_be_bid#0",
        "bid_pay#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "806": {
      "op": "gtxns Sender",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%6#0"
      ]
    },
    "808": {
      "op": "txn Sender",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "810": {
      "op": "==",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%8#0"
      ]
    },
    "811": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0"
      ]
    },
    "812": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "814": {
      "op": "gtxns Receiver",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%9#0"
      ]
    },
    "816": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "818": {
      "op": "==",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%11#0"
      ]
    },
    "819": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0"
      ]
    },
    "820": {
      "op": "frame_dig -3",
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "bid_pay#0 (copy)"
      ]
    },
    "822": {
      "op": "gtxns Amount",
      "defined_out": [
        "amount_to_be_bid#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "amount_to_be_bid#0",
        "tmp%12#0"
      ]
    },
    "824": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%13#0"
      ]
    },
    "825": {
      "op": "assert",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "826": {
      "op": "frame_dig 1",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "828": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "829": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "830": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "0",
        "8"
      ]
    },
    "831": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "tuple_item%5#0"
      ]
    },
    "832": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%5#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "listing#0",
        "values%5#0"
      ]
    },
    "833": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "listing#0"
      ]
    },
    "834": {
      "op": "intc_1 // 8",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "listing#0",
        "8"
      ]
    },
    "835": {
      "op": "dup",
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "listing#0",
        "8",
        "8"
      ]
    },
    "836": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%6#0",
        "values%5#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "tuple_item%6#0"
      ]
    },
    "837": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%5#0",
        "values%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "values%6#0"
      ]
    },
    "838": {
      "op": "txn Sender",
      "defined_out": [
        "listing#0",
        "tmp%14#0",
        "values%5#0",
        "values%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "values%5#0",
        "values%6#0",
        "tmp%14#0"
      ]
    },
    "840": {
      "op": "cover 2",
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%5#0",
        "values%6#0"
      ]
    },
    "842": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%6#0",
        "values%5#0"
      ]
    },
    "843": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "listing#0",
        "tmp%14#0",
        "values%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%6#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "844": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#1",
        "listing#0",
        "tmp%14#0",
        "values%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%6#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "845": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%6#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "846": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "listing#0",
        "tmp%14#0",
        "values%6#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "values%6#0",
        "aggregate%encoded%4#1"
      ]
    },
    "847": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "aggregate%encoded%4#1",
        "values%6#0"
      ]
    },
    "848": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "listing#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%14#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "849": {
      "op": "concat",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1"
      ]
    },
    "850": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "851": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%6#1"
      ]
    },
    "852": {
      "op": "frame_dig -2",
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%6#1",
        "quantity#0 (copy)"
      ]
    },
    "854": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "855": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%7#1"
      ]
    },
    "856": {
      "op": "frame_dig -1",
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%7#1",
        "unitary_price#0 (copy)"
      ]
    },
    "858": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "859": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "listing#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%8#1"
      ]
    },
    "860": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "key#0",
        "listing#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "861": {
      "op": "concat",
      "defined_out": [
        "listing#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%15#0"
      ]
    },
    "862": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "listing#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%15#0",
        "0x6c697374696e6773"
      ]
    },
    "863": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "listing#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%15#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "865": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "key#0",
        "listing#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "key#0",
        "listing#0",
        "tmp%15#0",
        "box_prefixed_key%1#0"
      ]
    },
    "866": {
      "op": "swap",
      "stack_out": [
        "key#0",
        "listing#0",
        "box_prefixed_key%1#0",
        "tmp%15#0"
      ]
    },
    "867": {
      "op": "box_put",
      "stack_out": [
        "key#0",
        "listing#0"
      ]
    },
    "868": {
      "retsub": true,
      "op": "retsub"
    },
    "869": {
      "subroutine": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.accept_bid",
      "params": {
        "asset#0": "uint64",
        "nonce#0": "uint64"
      },
      "block": "accept_bid",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "872": {
      "op": "bytec_0 // \"\"",
      "stack_out": [
        "min_quantity#0"
      ]
    },
    "873": {
      "block": "accept_bid_block@0",
      "stack_in": [
        "min_quantity#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "875": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%as_Encoded(uint8[32])%0#1",
        "0x"
      ]
    },
    "876": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "0x",
        "aggregate%as_Encoded(uint8[32])%0#1"
      ]
    },
    "877": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%0#1"
      ]
    },
    "878": {
      "op": "frame_dig -2",
      "defined_out": [
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%0#1",
        "asset#0 (copy)"
      ]
    },
    "880": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%0#1",
        "aggregate%encoded%0#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%0#1",
        "aggregate%as_Encoded(uint64)%0#1"
      ]
    },
    "881": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%1#1"
      ]
    },
    "882": {
      "op": "frame_dig -1",
      "defined_out": [
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%1#1",
        "nonce#0 (copy)"
      ]
    },
    "884": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%1#1",
        "aggregate%encoded%1#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%1#1",
        "aggregate%as_Encoded(uint64)%1#1"
      ]
    },
    "885": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%2#1"
      ],
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%2#1"
      ]
    },
    "886": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "min_quantity#0",
        "aggregate%encoded%2#1",
        "0x"
      ]
    },
    "887": {
      "op": "concat",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0"
      ]
    },
    "888": {
      "op": "dup",
      "defined_out": [
        "key#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "key#0"
      ]
    },
    "889": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "key#0",
        "0x6c697374696e6773"
      ]
    },
    "890": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "891": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "key#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "box_prefixed_key%0#0"
      ]
    },
    "892": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1",
        "key#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "aggregate%box_get%0#1",
        "aggregate%box_get%1#1"
      ]
    },
    "893": {
      "error": "check self.listings entry exists",
      "op": "assert // check self.listings entry exists",
      "defined_out": [
        "key#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "894": {
      "op": "dupn 2",
      "defined_out": [
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "896": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "16"
      ]
    },
    "897": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "16",
        "32"
      ]
    },
    "899": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%0#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "values%0#0"
      ]
    },
    "900": {
      "op": "global ZeroAddress",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%2#0",
        "values%0#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "values%0#0",
        "tmp%2#0"
      ]
    },
    "902": {
      "op": "!=",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "tmp%3#0"
      ]
    },
    "903": {
      "op": "assert",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "904": {
      "op": "dup",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "905": {
      "op": "intc_0 // 0",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "906": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "key#0",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "0",
        "8"
      ]
    },
    "907": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%1#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "tuple_item%1#0"
      ]
    },
    "908": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "values%1#0"
      ]
    },
    "909": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0"
      ]
    },
    "910": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "key#0",
        "listing#0",
        "values%1#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "48"
      ]
    },
    "912": {
      "op": "intc_1 // 8",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%1#0",
        "listing#0",
        "48",
        "8"
      ]
    },
    "913": {
      "op": "extract3",
      "defined_out": [
        "key#0",
        "listing#0",
        "tuple_item%2#0",
        "values%1#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%1#0",
        "tuple_item%2#0"
      ]
    },
    "914": {
      "op": "btoi",
      "defined_out": [
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%1#0",
        "values%2#0"
      ]
    },
    "915": {
      "op": "<",
      "defined_out": [
        "key#0",
        "listing#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tmp%4#0"
      ]
    },
    "916": {
      "op": "bz accept_bid_ternary_false@2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "919": {
      "block": "accept_bid_ternary_true@1",
      "stack_in": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "921": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "0"
      ]
    },
    "922": {
      "op": "intc_1 // 8",
      "defined_out": [
        "0",
        "8",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "0",
        "8"
      ]
    },
    "923": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%3#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tuple_item%3#0"
      ]
    },
    "924": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "ternary_result%0#0"
      ]
    },
    "925": {
      "block": "accept_bid_ternary_merge@3",
      "stack_in": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "ternary_result%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "min_quantity#0"
      ]
    },
    "926": {
      "op": "frame_bury 0",
      "defined_out": [
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0"
      ]
    },
    "928": {
      "op": "frame_dig 2",
      "defined_out": [
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "930": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "listing#0",
        "56"
      ]
    },
    "932": {
      "op": "intc_1 // 8",
      "defined_out": [
        "56",
        "8",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "listing#0",
        "56",
        "8"
      ]
    },
    "933": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tuple_item%5#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "tuple_item%5#0"
      ]
    },
    "934": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "values%5#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "values%5#0"
      ]
    },
    "935": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset#0 (copy)",
        "listing#0",
        "min_quantity#0",
        "values%5#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "values%5#0",
        "asset#0 (copy)"
      ]
    },
    "937": {
      "op": "asset_params_get AssetDecimals",
      "defined_out": [
        "check%0#0",
        "listing#0",
        "min_quantity#0",
        "value%0#0",
        "values%5#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "values%5#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "939": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "values%5#0",
        "value%0#0"
      ]
    },
    "940": {
      "op": "uncover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%5#0",
        "value%0#0",
        "min_quantity#0"
      ]
    },
    "942": {
      "op": "uncover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "value%0#0",
        "min_quantity#0",
        "values%5#0"
      ]
    },
    "944": {
      "op": "uncover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "values%5#0",
        "value%0#0"
      ]
    },
    "946": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.quantity_price",
      "op": "callsub quantity_price",
      "defined_out": [
        "best_bid_amount#0",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "best_bid_amount#0"
      ]
    },
    "949": {
      "op": "itxn_begin"
    },
    "950": {
      "op": "txn Sender",
      "defined_out": [
        "best_bid_amount#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "best_bid_amount#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "952": {
      "op": "swap",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "953": {
      "op": "itxn_field Amount",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "955": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "957": {
      "op": "intc_2 // pay",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "pay"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "pay"
      ]
    },
    "958": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "960": {
      "op": "intc_0 // 0",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "961": {
      "op": "itxn_field Fee",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "963": {
      "block": "accept_bid_next_txn@4",
      "stack_in": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "964": {
      "op": "itxn_begin"
    },
    "965": {
      "op": "frame_dig -2",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "967": {
      "op": "frame_dig 2",
      "defined_out": [
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ]
    },
    "969": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0",
        "16"
      ]
    },
    "970": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0",
        "16",
        "32"
      ]
    },
    "972": {
      "op": "extract3",
      "defined_out": [
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "973": {
      "op": "frame_dig 0",
      "defined_out": [
        "inner_txn_params%1%%param_AssetAmount_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%1%%param_AssetAmount_idx_0#0"
      ]
    },
    "975": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0",
        "inner_txn_params%1%%param_AssetReceiver_idx_0#0"
      ]
    },
    "977": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "inner_txn_params%1%%param_XferAsset_idx_0#0"
      ]
    },
    "979": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "981": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "axfer"
      ]
    },
    "983": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "985": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "0"
      ]
    },
    "986": {
      "op": "itxn_field Fee",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "988": {
      "block": "accept_bid_next_txn@5",
      "stack_in": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ],
      "op": "itxn_submit"
    },
    "989": {
      "op": "frame_dig 2",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "991": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "992": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "16"
      ]
    },
    "993": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "16",
        "32",
        "listing#0",
        "listing#0 (copy)"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "listing#0 (copy)",
        "16",
        "32"
      ]
    },
    "995": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "values%7#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "values%7#0"
      ]
    },
    "996": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0"
      ]
    },
    "997": {
      "op": "dup",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "998": {
      "op": "pushint 56 // 56",
      "defined_out": [
        "56",
        "listing#0",
        "listing#0 (copy)",
        "values%7#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)",
        "56"
      ]
    },
    "1000": {
      "op": "intc_1 // 8",
      "defined_out": [
        "56",
        "8",
        "listing#0",
        "listing#0 (copy)",
        "values%7#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)",
        "56",
        "8"
      ]
    },
    "1001": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%8#0",
        "values%7#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0",
        "tuple_item%8#0"
      ]
    },
    "1002": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%7#0",
        "listing#0",
        "values%8#0"
      ]
    },
    "1003": {
      "op": "cover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0"
      ]
    },
    "1005": {
      "op": "dup",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1006": {
      "op": "intc_1 // 8",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)",
        "8"
      ]
    },
    "1007": {
      "op": "dup",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0",
        "listing#0 (copy)",
        "8",
        "8"
      ]
    },
    "1008": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%9#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0",
        "tuple_item%9#0"
      ]
    },
    "1009": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "listing#0",
        "values%9#0"
      ]
    },
    "1010": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0"
      ]
    },
    "1011": {
      "op": "dup",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "listing#0 (copy)"
      ]
    },
    "1012": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "listing#0",
        "listing#0 (copy)",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "listing#0 (copy)",
        "0"
      ]
    },
    "1013": {
      "op": "intc_1 // 8",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "listing#0 (copy)",
        "0",
        "8"
      ]
    },
    "1014": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%10#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "tuple_item%10#0"
      ]
    },
    "1015": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "values%10#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "values%10#0"
      ]
    },
    "1016": {
      "op": "frame_dig 0",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "values%10#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "values%10#0",
        "min_quantity#0"
      ]
    },
    "1018": {
      "op": "dup",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "min_quantity#0 (copy)",
        "values%10#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "listing#0",
        "values%10#0",
        "min_quantity#0 (copy)",
        "min_quantity#0 (copy)"
      ]
    },
    "1019": {
      "op": "cover 3",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "min_quantity#0",
        "listing#0",
        "values%10#0",
        "min_quantity#0 (copy)"
      ]
    },
    "1021": {
      "op": "-",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tmp%6#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "min_quantity#0",
        "listing#0",
        "tmp%6#0"
      ]
    },
    "1022": {
      "op": "cover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "min_quantity#0",
        "listing#0"
      ]
    },
    "1024": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "listing#0",
        "min_quantity#0",
        "tmp%6#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "min_quantity#0",
        "listing#0",
        "48"
      ]
    },
    "1026": {
      "op": "intc_1 // 8",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "min_quantity#0",
        "listing#0",
        "48",
        "8"
      ]
    },
    "1027": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tmp%6#0",
        "tuple_item%11#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "min_quantity#0",
        "tuple_item%11#0"
      ]
    },
    "1028": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tmp%6#0",
        "values%11#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "min_quantity#0",
        "values%11#0"
      ]
    },
    "1029": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "values%11#0",
        "min_quantity#0"
      ]
    },
    "1030": {
      "op": "-",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tmp%6#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "1031": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%7#0",
        "tmp%6#0"
      ]
    },
    "1032": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%2#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%7#0",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "1033": {
      "op": "bytec_0 // 0x",
      "defined_out": [
        "0x",
        "aggregate%as_Encoded(uint64)%2#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%7#0",
        "aggregate%as_Encoded(uint64)%2#1",
        "0x"
      ]
    },
    "1034": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%7#0",
        "0x",
        "aggregate%as_Encoded(uint64)%2#1"
      ]
    },
    "1035": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%4#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0",
        "values%9#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "values%9#0",
        "tmp%7#0",
        "aggregate%encoded%4#1"
      ]
    },
    "1036": {
      "op": "uncover 2",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "tmp%7#0",
        "aggregate%encoded%4#1",
        "values%9#0"
      ]
    },
    "1038": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%3#1",
        "aggregate%encoded%4#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "tmp%7#0",
        "aggregate%encoded%4#1",
        "aggregate%as_Encoded(uint64)%3#1"
      ]
    },
    "1039": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%5#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "values%7#0",
        "tmp%7#0",
        "aggregate%encoded%5#1"
      ]
    },
    "1040": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%as_Encoded(uint8[32])%1#1",
        "aggregate%encoded%5#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "tmp%7#0",
        "aggregate%encoded%5#1",
        "aggregate%as_Encoded(uint8[32])%1#1"
      ]
    },
    "1042": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%6#1",
        "listing#0",
        "min_quantity#0",
        "tmp%7#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "tmp%7#0",
        "aggregate%encoded%6#1"
      ]
    },
    "1043": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "aggregate%encoded%6#1",
        "tmp%7#0"
      ]
    },
    "1044": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%4#1",
        "aggregate%encoded%6#1",
        "listing#0",
        "min_quantity#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "aggregate%encoded%6#1",
        "aggregate%as_Encoded(uint64)%4#1"
      ]
    },
    "1045": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%7#1",
        "listing#0",
        "min_quantity#0",
        "values%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "values%8#0",
        "aggregate%encoded%7#1"
      ]
    },
    "1046": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "aggregate%encoded%7#1",
        "values%8#0"
      ]
    },
    "1047": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_Encoded(uint64)%5#1",
        "aggregate%encoded%7#1",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "aggregate%encoded%7#1",
        "aggregate%as_Encoded(uint64)%5#1"
      ]
    },
    "1048": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded%8#1",
        "listing#0",
        "min_quantity#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "aggregate%encoded%8#1"
      ]
    },
    "1049": {
      "op": "bytec_0 // 0x",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "aggregate%encoded%8#1",
        "0x"
      ]
    },
    "1050": {
      "op": "concat",
      "defined_out": [
        "listing#0",
        "min_quantity#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tmp%8#0"
      ]
    },
    "1051": {
      "op": "bytec_1 // 0x6c697374696e6773",
      "defined_out": [
        "0x6c697374696e6773",
        "listing#0",
        "min_quantity#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tmp%8#0",
        "0x6c697374696e6773"
      ]
    },
    "1052": {
      "op": "frame_dig 1",
      "defined_out": [
        "0x6c697374696e6773",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tmp%8#0",
        "0x6c697374696e6773",
        "key#0"
      ]
    },
    "1054": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "key#0",
        "listing#0",
        "min_quantity#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tmp%8#0",
        "box_prefixed_key%1#0"
      ]
    },
    "1055": {
      "op": "swap",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "box_prefixed_key%1#0",
        "tmp%8#0"
      ]
    },
    "1056": {
      "op": "box_put",
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ]
    },
    "1057": {
      "retsub": true,
      "op": "retsub"
    },
    "1058": {
      "block": "accept_bid_ternary_false@2",
      "stack_in": [
        "min_quantity#0",
        "key#0",
        "listing#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0"
      ]
    },
    "1060": {
      "op": "pushint 48 // 48",
      "defined_out": [
        "48",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "48"
      ]
    },
    "1062": {
      "op": "intc_1 // 8",
      "defined_out": [
        "48",
        "8",
        "listing#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "listing#0",
        "48",
        "8"
      ]
    },
    "1063": {
      "op": "extract3",
      "defined_out": [
        "listing#0",
        "tuple_item%4#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "tuple_item%4#0"
      ]
    },
    "1064": {
      "op": "btoi",
      "defined_out": [
        "listing#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "min_quantity#0",
        "key#0",
        "listing#0",
        "ternary_result%0#0"
      ]
    },
    "1065": {
      "op": "b accept_bid_ternary_merge@3"
    },
    "1068": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "approval_program_block@1",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "1070": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1",
        "0"
      ]
    },
    "1071": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1072": {
      "op": "bz approval_program_bare_routing@14",
      "stack_out": []
    },
    "1075": {
      "block": "approval_program_abi_routing@2",
      "stack_in": [],
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1078": {
      "op": "pushbytes 0xd98ef6a9 // method \"getListingsMbr()uint64\"",
      "defined_out": [
        "Method(getListingsMbr()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)"
      ]
    },
    "1084": {
      "op": "pushbytes 0x56efcfb5 // method \"allowAsset(pay,asset)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(getListingsMbr()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)"
      ]
    },
    "1090": {
      "op": "pushbytes 0x12f08c98 // method \"firstDeposit(pay,axfer,uint64,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)"
      ]
    },
    "1096": {
      "op": "pushbytes 0x9b4b8234 // method \"deposit(axfer,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)"
      ]
    },
    "1102": {
      "op": "pushbytes 0x5a05bc57 // method \"setPrice(asset,uint64,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)"
      ]
    },
    "1108": {
      "op": "pushbytes 0x162fc232 // method \"buy(account,asset,uint64,pay,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)"
      ]
    },
    "1114": {
      "op": "pushbytes 0xcbc819e5 // method \"withdraw(asset,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)"
      ]
    },
    "1120": {
      "op": "pushbytes 0x824d4bad // method \"bid(account,asset,uint64,pay,uint64,uint64)void\"",
      "defined_out": [
        "Method(allowAsset(pay,asset)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)"
      ]
    },
    "1126": {
      "op": "pushbytes 0xdd619204 // method \"acceptBid(asset,uint64)void\"",
      "defined_out": [
        "Method(acceptBid(asset,uint64)void)",
        "Method(allowAsset(pay,asset)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(getListingsMbr()uint64)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(asset,uint64)void)"
      ]
    },
    "1132": {
      "op": "uncover 9",
      "stack_out": [
        "Method(getListingsMbr()uint64)",
        "Method(allowAsset(pay,asset)void)",
        "Method(firstDeposit(pay,axfer,uint64,uint64)void)",
        "Method(deposit(axfer,uint64)void)",
        "Method(setPrice(asset,uint64,uint64)void)",
        "Method(buy(account,asset,uint64,pay,uint64)void)",
        "Method(withdraw(asset,uint64)void)",
        "Method(bid(account,asset,uint64,pay,uint64,uint64)void)",
        "Method(acceptBid(asset,uint64)void)",
        "tmp%2#0"
      ]
    },
    "1134": {
      "op": "match approval_program_getListingsMbr_route@3 approval_program_allowAsset_route@4 approval_program_firstDeposit_route@5 approval_program_deposit_route@6 approval_program_setPrice_route@7 approval_program_buy_route@8 approval_program_withdraw_route@9 approval_program_bid_route@10 approval_program_acceptBid_route@11",
      "stack_out": []
    },
    "1154": {
      "block": "approval_program_after_if_else@20",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1155": {
      "block": "approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21",
      "stack_in": [
        "tmp%0#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "1156": {
      "block": "approval_program_acceptBid_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "1158": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0",
        "NoOp"
      ]
    },
    "1159": {
      "op": "==",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "1160": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1161": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "1163": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "0"
      ]
    },
    "1164": {
      "op": "!=",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "1165": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1166": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%7#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%7#0"
      ]
    },
    "1169": {
      "op": "btoi",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "1170": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "1172": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%11#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0",
        "reinterpret_Encoded(uint64)%11#0"
      ]
    },
    "1175": {
      "op": "btoi",
      "defined_out": [
        "tmp%74#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%74#0",
        "tmp%75#0"
      ]
    },
    "1176": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.accept_bid",
      "op": "callsub accept_bid",
      "stack_out": []
    },
    "1179": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1180": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1183": {
      "block": "approval_program_bid_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "1185": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0",
        "NoOp"
      ]
    },
    "1186": {
      "op": "==",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "1187": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1188": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "1190": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0",
        "0"
      ]
    },
    "1191": {
      "op": "!=",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "1192": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1193": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%5#0"
      ]
    },
    "1196": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "1197": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "1199": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint8)%6#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "reinterpret_Encoded(uint8)%6#0"
      ]
    },
    "1202": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0",
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%63#0"
      ]
    },
    "1203": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0"
      ]
    },
    "1205": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%8#0",
        "tmp%62#0",
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "reinterpret_Encoded(uint64)%8#0"
      ]
    },
    "1208": {
      "op": "btoi",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "1209": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "1211": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%66#0",
        "1"
      ]
    },
    "1212": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0"
      ]
    },
    "1213": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "1214": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "1216": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "1217": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "1218": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0"
      ]
    },
    "1219": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%9#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%9#0"
      ]
    },
    "1222": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0"
      ]
    },
    "1223": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "gtxn_idx%5#0",
        "reinterpret_Encoded(uint64)%10#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "reinterpret_Encoded(uint64)%10#0"
      ]
    },
    "1226": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "tmp%67#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0"
      ]
    },
    "1227": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0",
        "tmp%62#0"
      ]
    },
    "1229": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0",
        "tmp%62#0",
        "tmp%64#0"
      ]
    },
    "1231": {
      "op": "uncover 5",
      "stack_out": [
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "1233": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%67#0",
        "tmp%68#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0"
      ]
    },
    "1235": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%68#0",
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0"
      ]
    },
    "1237": {
      "op": "uncover 5",
      "stack_out": [
        "tmp%62#0",
        "tmp%64#0",
        "tmp%65#0",
        "gtxn_idx%5#0",
        "tmp%67#0",
        "tmp%68#0"
      ]
    },
    "1239": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.bid",
      "op": "callsub bid",
      "stack_out": []
    },
    "1242": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1243": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1246": {
      "block": "approval_program_withdraw_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "1248": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0",
        "NoOp"
      ]
    },
    "1249": {
      "op": "==",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "1250": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1251": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "1253": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "0"
      ]
    },
    "1254": {
      "op": "!=",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "1255": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1256": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%4#0"
      ]
    },
    "1259": {
      "op": "btoi",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "1260": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "1262": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%7#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "reinterpret_Encoded(uint64)%7#0"
      ]
    },
    "1265": {
      "op": "btoi",
      "defined_out": [
        "tmp%55#0",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%55#0",
        "tmp%56#0"
      ]
    },
    "1266": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "1269": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1270": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1273": {
      "block": "approval_program_buy_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "1275": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0",
        "NoOp"
      ]
    },
    "1276": {
      "op": "==",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "1277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "1280": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "0"
      ]
    },
    "1281": {
      "op": "!=",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "1282": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1283": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%2#0"
      ]
    },
    "1286": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "1287": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "1289": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint8)%3#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "reinterpret_Encoded(uint8)%3#0"
      ]
    },
    "1292": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "1293": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "1295": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%5#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "reinterpret_Encoded(uint64)%5#0"
      ]
    },
    "1298": {
      "op": "btoi",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "1299": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ]
    },
    "1301": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%48#0",
        "1"
      ]
    },
    "1302": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0"
      ]
    },
    "1303": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "1304": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "1306": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "1307": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "1308": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0"
      ]
    },
    "1309": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%6#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "reinterpret_Encoded(uint64)%6#0"
      ]
    },
    "1312": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "tmp%49#0"
      ]
    },
    "1313": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "tmp%49#0",
        "tmp%44#0"
      ]
    },
    "1315": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%47#0",
        "gtxn_idx%4#0",
        "tmp%49#0",
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "1317": {
      "op": "uncover 4",
      "stack_out": [
        "gtxn_idx%4#0",
        "tmp%49#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "1319": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%49#0",
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0"
      ]
    },
    "1321": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%44#0",
        "tmp%46#0",
        "tmp%47#0",
        "gtxn_idx%4#0",
        "tmp%49#0"
      ]
    },
    "1323": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.buy",
      "op": "callsub buy",
      "stack_out": []
    },
    "1326": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1327": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1330": {
      "block": "approval_program_setPrice_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "1332": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0",
        "NoOp"
      ]
    },
    "1333": {
      "op": "==",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "1334": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1335": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "1337": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "0"
      ]
    },
    "1338": {
      "op": "!=",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "1339": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1340": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint8)%1#0"
      ]
    },
    "1343": {
      "op": "btoi",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "1344": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "1346": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%3#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "reinterpret_Encoded(uint64)%3#0"
      ]
    },
    "1349": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "1350": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(uint64)%4#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "reinterpret_Encoded(uint64)%4#0"
      ]
    },
    "1353": {
      "op": "btoi",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "1354": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%37#0",
        "tmp%38#0",
        "tmp%36#0"
      ]
    },
    "1356": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%38#0",
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "1358": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "tmp%38#0"
      ]
    },
    "1360": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.set_price",
      "op": "callsub set_price",
      "stack_out": []
    },
    "1363": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1364": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1367": {
      "block": "approval_program_deposit_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "1369": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0",
        "NoOp"
      ]
    },
    "1370": {
      "op": "==",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "1371": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1372": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "1374": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "0"
      ]
    },
    "1375": {
      "op": "!=",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "1376": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1377": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "1379": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "1"
      ]
    },
    "1380": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1381": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "1382": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "1384": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "axfer"
      ]
    },
    "1386": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "1387": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%3#0"
      ]
    },
    "1388": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%2#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "reinterpret_Encoded(uint64)%2#0"
      ]
    },
    "1391": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "gtxn_idx%3#0",
        "tmp%30#0"
      ]
    },
    "1392": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.deposit",
      "op": "callsub deposit",
      "stack_out": []
    },
    "1395": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1396": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1399": {
      "block": "approval_program_firstDeposit_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "1401": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "NoOp"
      ]
    },
    "1402": {
      "op": "==",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1403": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "1406": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "0"
      ]
    },
    "1407": {
      "op": "!=",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1408": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1409": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "1411": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0",
        "2"
      ]
    },
    "1413": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1414": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "1415": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "1417": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "1418": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "1419": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "1420": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%22#0"
      ]
    },
    "1422": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%1#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "tmp%22#0",
        "1"
      ]
    },
    "1423": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "1424": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "1425": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "1427": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "axfer"
      ]
    },
    "1429": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "1430": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "1431": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "1434": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0"
      ]
    },
    "1435": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "reinterpret_Encoded(uint64)%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "1438": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "1439": {
      "op": "uncover 3",
      "stack_out": [
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0",
        "gtxn_idx%1#0"
      ]
    },
    "1441": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%23#0",
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0"
      ]
    },
    "1443": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0"
      ]
    },
    "1445": {
      "op": "uncover 3",
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%2#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "1447": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.first_deposit",
      "op": "callsub first_deposit",
      "stack_out": []
    },
    "1450": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1451": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1454": {
      "block": "approval_program_allowAsset_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1456": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "NoOp"
      ]
    },
    "1457": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "1458": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1459": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "1461": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "0"
      ]
    },
    "1462": {
      "op": "!=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "1463": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1464": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "1466": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1"
      ]
    },
    "1467": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1468": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "1469": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "1471": {
      "op": "intc_2 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "1472": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "1473": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "1474": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint8)%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "reinterpret_Encoded(uint8)%0#0"
      ]
    },
    "1477": {
      "op": "btoi",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%15#0"
      ]
    },
    "1478": {
      "op": "txnas Assets",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "tmp%16#0"
      ]
    },
    "1480": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.allow_asset",
      "op": "callsub allow_asset",
      "stack_out": []
    },
    "1483": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1484": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1487": {
      "block": "approval_program_getListingsMbr_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1489": {
      "op": "intc_0 // NoOp",
      "defined_out": [
        "NoOp",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "NoOp"
      ]
    },
    "1490": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1491": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1492": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1494": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "0"
      ]
    },
    "1495": {
      "op": "!=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1496": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1497": {
      "callsub": "test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.get_listings_mbr",
      "op": "callsub get_listings_mbr",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1500": {
      "op": "itob",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1501": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "1507": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "1508": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "1509": {
      "op": "log",
      "stack_out": []
    },
    "1510": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1511": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    },
    "1514": {
      "block": "approval_program_bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "1516": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0",
        "0"
      ]
    },
    "1517": {
      "op": "swap",
      "stack_out": [
        "0",
        "tmp%76#0"
      ]
    },
    "1518": {
      "op": "match approval_program___algopy_default_create@15",
      "stack_out": []
    },
    "1522": {
      "block": "approval_program_switch_case_next@19",
      "stack_in": [],
      "op": "b approval_program_after_if_else@20"
    },
    "1525": {
      "block": "approval_program___algopy_default_create@15",
      "stack_in": [],
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "1527": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0",
        "0"
      ]
    },
    "1528": {
      "op": "==",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "1529": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "1530": {
      "block": "approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__algopy_default_create@17",
      "stack_in": [],
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1531": {
      "op": "b approval_program_after_inlined_test_cases.marketplace_demo.marketplace_with_mutable_struct.DigitalMarketplaceWithStruct.__puya_arc4_router__@21"
    }
  }
}